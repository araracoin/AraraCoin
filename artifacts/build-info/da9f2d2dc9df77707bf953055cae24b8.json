{"id":"da9f2d2dc9df77707bf953055cae24b8","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/finance/VestingWallet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (finance/VestingWallet.sol)\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\nimport {SafeERC20} from \"../token/ERC20/utils/SafeERC20.sol\";\nimport {Address} from \"../utils/Address.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {Ownable} from \"../access/Ownable.sol\";\n\n/**\n * @dev A vesting wallet is an ownable contract that can receive native currency and ERC20 tokens, and release these\n * assets to the wallet owner, also referred to as \"beneficiary\", according to a vesting schedule.\n *\n * Any assets transferred to this contract will follow the vesting schedule as if they were locked from the beginning.\n * Consequently, if the vesting has already started, any amount of tokens sent to this contract will (at least partly)\n * be immediately releasable.\n *\n * By setting the duration to 0, one can configure this contract to behave like an asset timelock that hold tokens for\n * a beneficiary until a specified time.\n *\n * NOTE: Since the wallet is {Ownable}, and ownership can be transferred, it is possible to sell unvested tokens.\n * Preventing this in a smart contract is difficult, considering that: 1) a beneficiary address could be a\n * counterfactually deployed contract, 2) there is likely to be a migration path for EOAs to become contracts in the\n * near future.\n *\n * NOTE: When using this contract with any token whose balance is adjusted automatically (i.e. a rebase token), make\n * sure to account the supply/balance adjustment in the vesting schedule to ensure the vested amount is as intended.\n */\ncontract VestingWallet is Context, Ownable {\n    event EtherReleased(uint256 amount);\n    event ERC20Released(address indexed token, uint256 amount);\n\n    uint256 private _released;\n    mapping(address token => uint256) private _erc20Released;\n    uint64 private immutable _start;\n    uint64 private immutable _duration;\n\n    /**\n     * @dev Sets the sender as the initial owner, the beneficiary as the pending owner, the start timestamp and the\n     * vesting duration of the vesting wallet.\n     */\n    constructor(address beneficiary, uint64 startTimestamp, uint64 durationSeconds) payable Ownable(beneficiary) {\n        _start = startTimestamp;\n        _duration = durationSeconds;\n    }\n\n    /**\n     * @dev The contract should be able to receive Eth.\n     */\n    receive() external payable virtual {}\n\n    /**\n     * @dev Getter for the start timestamp.\n     */\n    function start() public view virtual returns (uint256) {\n        return _start;\n    }\n\n    /**\n     * @dev Getter for the vesting duration.\n     */\n    function duration() public view virtual returns (uint256) {\n        return _duration;\n    }\n\n    /**\n     * @dev Getter for the end timestamp.\n     */\n    function end() public view virtual returns (uint256) {\n        return start() + duration();\n    }\n\n    /**\n     * @dev Amount of eth already released\n     */\n    function released() public view virtual returns (uint256) {\n        return _released;\n    }\n\n    /**\n     * @dev Amount of token already released\n     */\n    function released(address token) public view virtual returns (uint256) {\n        return _erc20Released[token];\n    }\n\n    /**\n     * @dev Getter for the amount of releasable eth.\n     */\n    function releasable() public view virtual returns (uint256) {\n        return vestedAmount(uint64(block.timestamp)) - released();\n    }\n\n    /**\n     * @dev Getter for the amount of releasable `token` tokens. `token` should be the address of an\n     * IERC20 contract.\n     */\n    function releasable(address token) public view virtual returns (uint256) {\n        return vestedAmount(token, uint64(block.timestamp)) - released(token);\n    }\n\n    /**\n     * @dev Release the native token (ether) that have already vested.\n     *\n     * Emits a {EtherReleased} event.\n     */\n    function release() public virtual {\n        uint256 amount = releasable();\n        _released += amount;\n        emit EtherReleased(amount);\n        Address.sendValue(payable(owner()), amount);\n    }\n\n    /**\n     * @dev Release the tokens that have already vested.\n     *\n     * Emits a {ERC20Released} event.\n     */\n    function release(address token) public virtual {\n        uint256 amount = releasable(token);\n        _erc20Released[token] += amount;\n        emit ERC20Released(token, amount);\n        SafeERC20.safeTransfer(IERC20(token), owner(), amount);\n    }\n\n    /**\n     * @dev Calculates the amount of ether that has already vested. Default implementation is a linear vesting curve.\n     */\n    function vestedAmount(uint64 timestamp) public view virtual returns (uint256) {\n        return _vestingSchedule(address(this).balance + released(), timestamp);\n    }\n\n    /**\n     * @dev Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve.\n     */\n    function vestedAmount(address token, uint64 timestamp) public view virtual returns (uint256) {\n        return _vestingSchedule(IERC20(token).balanceOf(address(this)) + released(token), timestamp);\n    }\n\n    /**\n     * @dev Virtual implementation of the vesting formula. This returns the amount vested, as a function of time, for\n     * an asset given its total historical allocation.\n     */\n    function _vestingSchedule(uint256 totalAllocation, uint64 timestamp) internal view virtual returns (uint256) {\n        if (timestamp < start()) {\n            return 0;\n        } else if (timestamp >= end()) {\n            return totalAllocation;\n        } else {\n            return (totalAllocation * (timestamp - start())) / duration();\n        }\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\nimport {ERC20} from \"../ERC20.sol\";\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../../../utils/Nonces.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Nonces.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position is the index of the value in the `values` array plus 1.\n        // Position 0 is used to mean a value is not in the set.\n        mapping(bytes32 value => uint256) _positions;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._positions[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We cache the value's position to prevent multiple reads from the same storage slot\n        uint256 position = set._positions[value];\n\n        if (position != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 valueIndex = position - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (valueIndex != lastIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the lastValue to the index where the value to delete is\n                set._values[valueIndex] = lastValue;\n                // Update the tracked position of the lastValue (that was just moved)\n                set._positions[lastValue] = position;\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the tracked position for the deleted slot\n            delete set._positions[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._positions[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"contracts/abstract/VestingWalletCliff.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"@openzeppelin/contracts/utils/math/SafeCast.sol\";\nimport {VestingWallet} from \"@openzeppelin/contracts/finance/VestingWallet.sol\";\n\n/**\n * @dev Extension of {VestingWallet} that adds a cliff to the vesting schedule.\n */\nabstract contract VestingWalletCliff is VestingWallet {\n    using SafeCast for *;\n\n    uint64 private immutable _cliff;\n\n    /// @dev The specified cliff duration is larger than the vesting duration.\n    error InvalidCliffDuration(uint64 cliffSeconds, uint64 durationSeconds);\n\n    /**\n     * @dev Set the start timestamp of the vesting wallet cliff.\n     */\n    constructor(uint64 cliffSeconds) {\n        if (cliffSeconds > duration()) {\n            revert InvalidCliffDuration(cliffSeconds, duration().toUint64());\n        }\n        _cliff = start().toUint64() + cliffSeconds;\n    }\n\n    /**\n     * @dev Getter for the cliff timestamp.\n     */\n    function cliff() public view virtual returns (uint256) {\n        return _cliff;\n    }\n\n    /**\n     * @dev Virtual implementation of the vesting formula. This returns the amount vested, as a function of time, for\n     * an asset given its total historical allocation. Returns 0 if the {cliff} timestamp is not met.\n     *\n     * IMPORTANT: The cliff not only makes the schedule return 0, but it also ignores every possible side\n     * effect from calling the inherited implementation (i.e. `super._vestingSchedule`). Carefully consider\n     * this caveat if the overridden implementation of this function has any (e.g. writing to memory or reverting).\n     */\n    function _vestingSchedule(\n        uint256 totalAllocation,\n        uint64 timestamp\n    ) internal view virtual override returns (uint256) {\n        return timestamp < cliff() ? 0 : super._vestingSchedule(totalAllocation, timestamp);\n    }\n}"},"contracts/AraraCoin.sol":{"content":"// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\n\n\nimport \"./tax/ITaxHandler.sol\";\n\ncontract AraraCoin is ERC20, ERC20Permit, Ownable {\n    address public thirdPartyServices = 0x70997970C51812dc3A010C7d01b50e0d17dc79C8;\n    address public preSale = 0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC;\n    address public initialLaunch = 0x90F79bf6EB2c4f870365E785982E1f101E93b906;\n    address public investors = 0x15d34AAf54267DB7D7c367839AAf71A00a2C6A65;\n    address public teamAndFounders = 0x9965507D1a55bcC2695C58ba16FB37d819B0A4dc;\n    address public preservationProjects = 0x976EA74026E726554dB657fA54763abd0C3a0aa9;\n    uint256 private constant TOTAL_SUPPLY = 100_000_000_000 * 10 ** 18;\n    \n    ITaxHandler public taxHandler;\n    bool public tradingEnabled;\n    \n    using EnumerableSet for EnumerableSet.AddressSet;\n    /// @dev The set of addresses exempt from tax.\n    EnumerableSet.AddressSet private _canTrade;\n    \n    event TradingEnabled();\n    /// @notice Emitted when the tax handler contract is changed.\n    event TaxHandlerChanged(address oldAddress, address newAddress);\n\n    constructor(address initialOwner, address taxHandlerAddress, address teamAndFoundersVesting)\n        ERC20(\"AraraCoin\", \"ARA\")\n        ERC20Permit(\"AraraCoin\")\n        Ownable(initialOwner)\n    {\n        taxHandler = ITaxHandler(taxHandlerAddress);\n        _canTrade.add(address(0));\n        _canTrade.add(initialOwner);        \n        _mint(msg.sender, TOTAL_SUPPLY);\n       \n        _transfer(msg.sender, thirdPartyServices, TOTAL_SUPPLY * 5 / 100); // 5.0% \n        _transfer(msg.sender, preSale,  TOTAL_SUPPLY * 10 / 100); // 10.0%\n        _transfer(msg.sender, initialLaunch,  TOTAL_SUPPLY * 20 / 100); // 20.0%\n        _transfer(msg.sender, investors,  TOTAL_SUPPLY * 25 / 100); // 25.0%\n        //_transfer(msg.sender, teamAndFounders,  TOTAL_SUPPLY * 20 / 100); // 20.0%\n        _transfer(msg.sender, teamAndFoundersVesting,  TOTAL_SUPPLY * 20 / 100); // 20.0%\n        _transfer(msg.sender, preservationProjects, TOTAL_SUPPLY * 20 / 100); // 20.0%\n    }\n\n    function enableTrading() external onlyOwner {\n        require(!tradingEnabled, \"AraraCoin trading already enabled\");\n        tradingEnabled = true;\n        emit TradingEnabled();\n    }\n\n    function setTaxHandler(address taxHandlerAddress) external onlyOwner {\n        address oldTaxHandlerAddress = address(taxHandler);\n        taxHandler = ITaxHandler(taxHandlerAddress);\n\n        emit TaxHandlerChanged(oldTaxHandlerAddress, taxHandlerAddress);\n    }\n\n    function addCanTrade(\n        address[] calldata allowedAddresses\n    ) external onlyOwner {\n        require(!tradingEnabled, \"TGC: trading already enabled\");\n        require(allowedAddresses.length != 0, \"TGC: invalid parameters\");\n        for (uint256 i = 0; i < allowedAddresses.length; i++) {\n            _canTrade.add(allowedAddresses[i]);\n        }\n    }\n\n    function _update(address from, address to, uint256 value) \n        internal virtual override(ERC20)\n    {\n        if (!tradingEnabled) {\n            require(_canTrade.contains(from), \"AraraCoin trade is disabled\");\n        }\n\n        uint256 tax = taxHandler.getTax(from, to, value);\n        uint256 taxedAmount = value - tax;\n\n        super._update(from, owner(), tax);\n        super._update(from, to, taxedAmount);\n    }\n\n    function addressToString(address _addr) public pure returns (string memory) {\n        bytes32 value = bytes32(uint256(uint160(_addr)));\n        bytes memory alphabet = \"0123456789abcdef\";\n\n        bytes memory str = new bytes(42);\n        str[0] = '0';\n        str[1] = 'x';\n        for (uint256 i = 0; i < 20; i++) {\n            str[2 + i * 2] = alphabet[uint8(value[i + 12] >> 4)];\n            str[3 + i * 2] = alphabet[uint8(value[i + 12] & 0x0f)];\n        }\n        return string(str);\n    }\n\n    function concatenateAddressWithString(address _addr, string memory _str) public pure returns (string memory) {\n        string memory addrStr = addressToString(_addr);\n        return string(abi.encodePacked(addrStr, _str));\n    }\n}\n\n// uint256 thirdPartyServices = TOTAL_SUPPLY * 5 / 100;\n// uint256 preSale = TOTAL_SUPPLY * 10 / 100;\n// uint256 initialLaunch = TOTAL_SUPPLY * 20 / 100;\n// uint256 investors = TOTAL_SUPPLY * 25 / 100;\n// uint256 teamAndFounders = TOTAL_SUPPLY * 20 / 100;\n// uint256 preservationProjects = TOTAL_SUPPLY * 20 / 100;"},"contracts/MyVestingWallet.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport \"@openzeppelin/contracts/finance/VestingWallet.sol\";\nimport {VestingWalletCliff} from \"./abstract/VestingWalletCliff.sol\";\n\ncontract MyVestingWallet is VestingWalletCliff {\n    constructor(\n        address beneficiary,\n        uint64 startTimestamp,\n        uint64 durationSeconds,\n        uint64 cliffSeconds\n    )\n        VestingWallet(beneficiary, startTimestamp, durationSeconds)\n        VestingWalletCliff(cliffSeconds)\n    {}\n}"},"contracts/tax/ITaxHandler.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\n/**\n * @title Tax handler interface\n * @dev Any class that implements this interface can be used for protocol-specific tax calculations.\n */\ninterface ITaxHandler {\n    /**\n     * @notice Get number of tokens to pay as tax.\n     * @param benefactor Address of the benefactor.\n     * @param beneficiary Address of the beneficiary.\n     * @param amount Number of tokens in the transfer.\n     * @return Number of tokens to pay as tax.\n     */\n    function getTax(\n        address benefactor,\n        address beneficiary,\n        uint256 amount\n    ) external view returns (uint256);\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2002],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":2003,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2002,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,2002],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/finance/VestingWallet.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/finance/VestingWallet.sol","exportedSymbols":{"Address":[1972],"Context":[2002],"IERC20":[1213],"Ownable":[147],"SafeERC20":[1719],"VestingWallet":[458]},"id":459,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:1"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":459,"sourceUnit":1214,"src":"134:49:1","symbolAliases":[{"foreign":{"id":150,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"142:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"../token/ERC20/utils/SafeERC20.sol","id":153,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":459,"sourceUnit":1720,"src":"184:61:1","symbolAliases":[{"foreign":{"id":152,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"192:9:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../utils/Address.sol","id":155,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":459,"sourceUnit":1973,"src":"246:45:1","symbolAliases":[{"foreign":{"id":154,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"254:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":157,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":459,"sourceUnit":2003,"src":"292:45:1","symbolAliases":[{"foreign":{"id":156,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"300:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"../access/Ownable.sol","id":159,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":459,"sourceUnit":148,"src":"338:46:1","symbolAliases":[{"foreign":{"id":158,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"346:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":161,"name":"Context","nameLocations":["1664:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":2002,"src":"1664:7:1"},"id":162,"nodeType":"InheritanceSpecifier","src":"1664:7:1"},{"baseName":{"id":163,"name":"Ownable","nameLocations":["1673:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1673:7:1"},"id":164,"nodeType":"InheritanceSpecifier","src":"1673:7:1"}],"canonicalName":"VestingWallet","contractDependencies":[],"contractKind":"contract","documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"386:1251:1","text":" @dev A vesting wallet is an ownable contract that can receive native currency and ERC20 tokens, and release these\n assets to the wallet owner, also referred to as \"beneficiary\", according to a vesting schedule.\n Any assets transferred to this contract will follow the vesting schedule as if they were locked from the beginning.\n Consequently, if the vesting has already started, any amount of tokens sent to this contract will (at least partly)\n be immediately releasable.\n By setting the duration to 0, one can configure this contract to behave like an asset timelock that hold tokens for\n a beneficiary until a specified time.\n NOTE: Since the wallet is {Ownable}, and ownership can be transferred, it is possible to sell unvested tokens.\n Preventing this in a smart contract is difficult, considering that: 1) a beneficiary address could be a\n counterfactually deployed contract, 2) there is likely to be a migration path for EOAs to become contracts in the\n near future.\n NOTE: When using this contract with any token whose balance is adjusted automatically (i.e. a rebase token), make\n sure to account the supply/balance adjustment in the vesting schedule to ensure the vested amount is as intended."},"fullyImplemented":true,"id":458,"linearizedBaseContracts":[458,147,2002],"name":"VestingWallet","nameLocation":"1647:13:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"da9d4e5f101b8b9b1c5b76d0c5a9f7923571acfc02376aa076b75a8c080c956b","id":168,"name":"EtherReleased","nameLocation":"1693:13:1","nodeType":"EventDefinition","parameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1715:6:1","nodeType":"VariableDeclaration","scope":168,"src":"1707:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":165,"name":"uint256","nodeType":"ElementaryTypeName","src":"1707:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1706:16:1"},"src":"1687:36:1"},{"anonymous":false,"eventSelector":"c0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b","id":174,"name":"ERC20Released","nameLocation":"1734:13:1","nodeType":"EventDefinition","parameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"1764:5:1","nodeType":"VariableDeclaration","scope":174,"src":"1748:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":169,"name":"address","nodeType":"ElementaryTypeName","src":"1748:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":172,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1779:6:1","nodeType":"VariableDeclaration","scope":174,"src":"1771:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":171,"name":"uint256","nodeType":"ElementaryTypeName","src":"1771:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1747:39:1"},"src":"1728:59:1"},{"constant":false,"id":176,"mutability":"mutable","name":"_released","nameLocation":"1809:9:1","nodeType":"VariableDeclaration","scope":458,"src":"1793:25:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1793:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":180,"mutability":"mutable","name":"_erc20Released","nameLocation":"1866:14:1","nodeType":"VariableDeclaration","scope":458,"src":"1824:56:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":179,"keyName":"token","keyNameLocation":"1840:5:1","keyType":{"id":177,"name":"address","nodeType":"ElementaryTypeName","src":"1832:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1824:33:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":178,"name":"uint256","nodeType":"ElementaryTypeName","src":"1849:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":182,"mutability":"immutable","name":"_start","nameLocation":"1911:6:1","nodeType":"VariableDeclaration","scope":458,"src":"1886:31:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":181,"name":"uint64","nodeType":"ElementaryTypeName","src":"1886:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"private"},{"constant":false,"id":184,"mutability":"immutable","name":"_duration","nameLocation":"1948:9:1","nodeType":"VariableDeclaration","scope":458,"src":"1923:34:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":183,"name":"uint64","nodeType":"ElementaryTypeName","src":"1923:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"private"},{"body":{"id":205,"nodeType":"Block","src":"2252:77:1","statements":[{"expression":{"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":197,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"2262:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":198,"name":"startTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"2271:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"2262:23:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":200,"nodeType":"ExpressionStatement","src":"2262:23:1"},{"expression":{"id":203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":201,"name":"_duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"2295:9:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":202,"name":"durationSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"2307:15:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"2295:27:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":204,"nodeType":"ExpressionStatement","src":"2295:27:1"}]},"documentation":{"id":185,"nodeType":"StructuredDocumentation","src":"1964:174:1","text":" @dev Sets the sender as the initial owner, the beneficiary as the pending owner, the start timestamp and the\n vesting duration of the vesting wallet."},"id":206,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":194,"name":"beneficiary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"2239:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":195,"kind":"baseConstructorSpecifier","modifierName":{"id":193,"name":"Ownable","nameLocations":["2231:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"2231:7:1"},"nodeType":"ModifierInvocation","src":"2231:20:1"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"mutability":"mutable","name":"beneficiary","nameLocation":"2163:11:1","nodeType":"VariableDeclaration","scope":206,"src":"2155:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":186,"name":"address","nodeType":"ElementaryTypeName","src":"2155:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":189,"mutability":"mutable","name":"startTimestamp","nameLocation":"2183:14:1","nodeType":"VariableDeclaration","scope":206,"src":"2176:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":188,"name":"uint64","nodeType":"ElementaryTypeName","src":"2176:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":191,"mutability":"mutable","name":"durationSeconds","nameLocation":"2206:15:1","nodeType":"VariableDeclaration","scope":206,"src":"2199:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":190,"name":"uint64","nodeType":"ElementaryTypeName","src":"2199:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2154:68:1"},"returnParameters":{"id":196,"nodeType":"ParameterList","parameters":[],"src":"2252:0:1"},"scope":458,"src":"2143:186:1","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":210,"nodeType":"Block","src":"2442:2:1","statements":[]},"documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"2335:67:1","text":" @dev The contract should be able to receive Eth."},"id":211,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[],"src":"2414:2:1"},"returnParameters":{"id":209,"nodeType":"ParameterList","parameters":[],"src":"2442:0:1"},"scope":458,"src":"2407:37:1","stateMutability":"payable","virtual":true,"visibility":"external"},{"body":{"id":219,"nodeType":"Block","src":"2565:30:1","statements":[{"expression":{"id":217,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"2582:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":216,"id":218,"nodeType":"Return","src":"2575:13:1"}]},"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"2450:55:1","text":" @dev Getter for the start timestamp."},"functionSelector":"be9a6555","id":220,"implemented":true,"kind":"function","modifiers":[],"name":"start","nameLocation":"2519:5:1","nodeType":"FunctionDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[],"src":"2524:2:1"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":220,"src":"2556:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":214,"name":"uint256","nodeType":"ElementaryTypeName","src":"2556:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2555:9:1"},"scope":458,"src":"2510:85:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":228,"nodeType":"Block","src":"2720:33:1","statements":[{"expression":{"id":226,"name":"_duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"2737:9:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":225,"id":227,"nodeType":"Return","src":"2730:16:1"}]},"documentation":{"id":221,"nodeType":"StructuredDocumentation","src":"2601:56:1","text":" @dev Getter for the vesting duration."},"functionSelector":"0fb5a6b4","id":229,"implemented":true,"kind":"function","modifiers":[],"name":"duration","nameLocation":"2671:8:1","nodeType":"FunctionDefinition","parameters":{"id":222,"nodeType":"ParameterList","parameters":[],"src":"2679:2:1"},"returnParameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":224,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":229,"src":"2711:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":223,"name":"uint256","nodeType":"ElementaryTypeName","src":"2711:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:9:1"},"scope":458,"src":"2662:91:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":241,"nodeType":"Block","src":"2870:44:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":235,"name":"start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"2887:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2887:7:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":237,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"2897:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2897:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2887:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":234,"id":240,"nodeType":"Return","src":"2880:27:1"}]},"documentation":{"id":230,"nodeType":"StructuredDocumentation","src":"2759:53:1","text":" @dev Getter for the end timestamp."},"functionSelector":"efbe1c1c","id":242,"implemented":true,"kind":"function","modifiers":[],"name":"end","nameLocation":"2826:3:1","nodeType":"FunctionDefinition","parameters":{"id":231,"nodeType":"ParameterList","parameters":[],"src":"2829:2:1"},"returnParameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":242,"src":"2861:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":232,"name":"uint256","nodeType":"ElementaryTypeName","src":"2861:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2860:9:1"},"scope":458,"src":"2817:97:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":250,"nodeType":"Block","src":"3037:33:1","statements":[{"expression":{"id":248,"name":"_released","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"3054:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":247,"id":249,"nodeType":"Return","src":"3047:16:1"}]},"documentation":{"id":243,"nodeType":"StructuredDocumentation","src":"2920:54:1","text":" @dev Amount of eth already released"},"functionSelector":"96132521","id":251,"implemented":true,"kind":"function","modifiers":[],"name":"released","nameLocation":"2988:8:1","nodeType":"FunctionDefinition","parameters":{"id":244,"nodeType":"ParameterList","parameters":[],"src":"2996:2:1"},"returnParameters":{"id":247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":246,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":251,"src":"3028:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":245,"name":"uint256","nodeType":"ElementaryTypeName","src":"3028:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3027:9:1"},"scope":458,"src":"2979:91:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":263,"nodeType":"Block","src":"3208:45:1","statements":[{"expression":{"baseExpression":{"id":259,"name":"_erc20Released","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"3225:14:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":261,"indexExpression":{"id":260,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"3240:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3225:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":258,"id":262,"nodeType":"Return","src":"3218:28:1"}]},"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"3076:56:1","text":" @dev Amount of token already released"},"functionSelector":"9852595c","id":264,"implemented":true,"kind":"function","modifiers":[],"name":"released","nameLocation":"3146:8:1","nodeType":"FunctionDefinition","parameters":{"id":255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"token","nameLocation":"3163:5:1","nodeType":"VariableDeclaration","scope":264,"src":"3155:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"3155:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3154:15:1"},"returnParameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":264,"src":"3199:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":256,"name":"uint256","nodeType":"ElementaryTypeName","src":"3199:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3198:9:1"},"scope":458,"src":"3137:116:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":281,"nodeType":"Block","src":"3388:74:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"id":273,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3425:5:1","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3431:9:1","memberName":"timestamp","nodeType":"MemberAccess","src":"3425:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3418:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":271,"name":"uint64","nodeType":"ElementaryTypeName","src":"3418:6:1","typeDescriptions":{}}},"id":275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3418:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":270,"name":"vestedAmount","nodeType":"Identifier","overloadedDeclarations":[389,417],"referencedDeclaration":389,"src":"3405:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint64_$returns$_t_uint256_$","typeString":"function (uint64) view returns (uint256)"}},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3405:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":277,"name":"released","nodeType":"Identifier","overloadedDeclarations":[251,264],"referencedDeclaration":251,"src":"3445:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3445:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3405:50:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":269,"id":280,"nodeType":"Return","src":"3398:57:1"}]},"documentation":{"id":265,"nodeType":"StructuredDocumentation","src":"3259:64:1","text":" @dev Getter for the amount of releasable eth."},"functionSelector":"fbccedae","id":282,"implemented":true,"kind":"function","modifiers":[],"name":"releasable","nameLocation":"3337:10:1","nodeType":"FunctionDefinition","parameters":{"id":266,"nodeType":"ParameterList","parameters":[],"src":"3347:2:1"},"returnParameters":{"id":269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":282,"src":"3379:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":267,"name":"uint256","nodeType":"ElementaryTypeName","src":"3379:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3378:9:1"},"scope":458,"src":"3328:134:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":303,"nodeType":"Block","src":"3681:86:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":291,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"3711:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"expression":{"id":294,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3725:5:1","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3731:9:1","memberName":"timestamp","nodeType":"MemberAccess","src":"3725:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3718:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":292,"name":"uint64","nodeType":"ElementaryTypeName","src":"3718:6:1","typeDescriptions":{}}},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3718:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":290,"name":"vestedAmount","nodeType":"Identifier","overloadedDeclarations":[389,417],"referencedDeclaration":417,"src":"3698:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint64_$returns$_t_uint256_$","typeString":"function (address,uint64) view returns (uint256)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3698:44:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":299,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"3754:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":298,"name":"released","nodeType":"Identifier","overloadedDeclarations":[251,264],"referencedDeclaration":264,"src":"3745:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3745:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3698:62:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":289,"id":302,"nodeType":"Return","src":"3691:69:1"}]},"documentation":{"id":283,"nodeType":"StructuredDocumentation","src":"3468:135:1","text":" @dev Getter for the amount of releasable `token` tokens. `token` should be the address of an\n IERC20 contract."},"functionSelector":"a3f8eace","id":304,"implemented":true,"kind":"function","modifiers":[],"name":"releasable","nameLocation":"3617:10:1","nodeType":"FunctionDefinition","parameters":{"id":286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":285,"mutability":"mutable","name":"token","nameLocation":"3636:5:1","nodeType":"VariableDeclaration","scope":304,"src":"3628:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":284,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3627:15:1"},"returnParameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":288,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":304,"src":"3672:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":287,"name":"uint256","nodeType":"ElementaryTypeName","src":"3672:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3671:9:1"},"scope":458,"src":"3608:159:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":332,"nodeType":"Block","src":"3939:164:1","statements":[{"assignments":[309],"declarations":[{"constant":false,"id":309,"mutability":"mutable","name":"amount","nameLocation":"3957:6:1","nodeType":"VariableDeclaration","scope":332,"src":"3949:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":308,"name":"uint256","nodeType":"ElementaryTypeName","src":"3949:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":312,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":310,"name":"releasable","nodeType":"Identifier","overloadedDeclarations":[282,304],"referencedDeclaration":282,"src":"3966:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3966:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3949:29:1"},{"expression":{"id":315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":313,"name":"_released","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"3988:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":314,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"4001:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3988:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":316,"nodeType":"ExpressionStatement","src":"3988:19:1"},{"eventCall":{"arguments":[{"id":318,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"4036:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":317,"name":"EtherReleased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"4022:13:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4022:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":320,"nodeType":"EmitStatement","src":"4017:26:1"},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":326,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"4079:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4079:7:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4071:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":324,"name":"address","nodeType":"ElementaryTypeName","src":"4071:8:1","stateMutability":"payable","typeDescriptions":{}}},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4071:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":329,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"4089:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":321,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"4053:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1972_$","typeString":"type(library Address)"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4061:9:1","memberName":"sendValue","nodeType":"MemberAccess","referencedDeclaration":1776,"src":"4053:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256)"}},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4053:43:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":331,"nodeType":"ExpressionStatement","src":"4053:43:1"}]},"documentation":{"id":305,"nodeType":"StructuredDocumentation","src":"3773:127:1","text":" @dev Release the native token (ether) that have already vested.\n Emits a {EtherReleased} event."},"functionSelector":"86d1a69f","id":333,"implemented":true,"kind":"function","modifiers":[],"name":"release","nameLocation":"3914:7:1","nodeType":"FunctionDefinition","parameters":{"id":306,"nodeType":"ParameterList","parameters":[],"src":"3921:2:1"},"returnParameters":{"id":307,"nodeType":"ParameterList","parameters":[],"src":"3939:0:1"},"scope":458,"src":"3905:198:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":367,"nodeType":"Block","src":"4274:199:1","statements":[{"assignments":[340],"declarations":[{"constant":false,"id":340,"mutability":"mutable","name":"amount","nameLocation":"4292:6:1","nodeType":"VariableDeclaration","scope":367,"src":"4284:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":339,"name":"uint256","nodeType":"ElementaryTypeName","src":"4284:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":344,"initialValue":{"arguments":[{"id":342,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"4312:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":341,"name":"releasable","nodeType":"Identifier","overloadedDeclarations":[282,304],"referencedDeclaration":304,"src":"4301:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4301:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4284:34:1"},{"expression":{"id":349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":345,"name":"_erc20Released","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"4328:14:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":347,"indexExpression":{"id":346,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"4343:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4328:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":348,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"4353:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4328:31:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":350,"nodeType":"ExpressionStatement","src":"4328:31:1"},{"eventCall":{"arguments":[{"id":352,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"4388:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":353,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"4395:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":351,"name":"ERC20Released","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"4374:13:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4374:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":355,"nodeType":"EmitStatement","src":"4369:33:1"},{"expression":{"arguments":[{"arguments":[{"id":360,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"4442:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":359,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"4435:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1213_$","typeString":"type(contract IERC20)"}},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4435:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"}},{"arguments":[],"expression":{"argumentTypes":[],"id":362,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"4450:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4450:7:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":364,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"4459:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":356,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"4412:9:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeERC20_$1719_$","typeString":"type(library SafeERC20)"}},"id":358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4422:12:1","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1479,"src":"4412:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1213_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4412:54:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":366,"nodeType":"ExpressionStatement","src":"4412:54:1"}]},"documentation":{"id":334,"nodeType":"StructuredDocumentation","src":"4109:113:1","text":" @dev Release the tokens that have already vested.\n Emits a {ERC20Released} event."},"functionSelector":"19165587","id":368,"implemented":true,"kind":"function","modifiers":[],"name":"release","nameLocation":"4236:7:1","nodeType":"FunctionDefinition","parameters":{"id":337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":336,"mutability":"mutable","name":"token","nameLocation":"4252:5:1","nodeType":"VariableDeclaration","scope":368,"src":"4244:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":335,"name":"address","nodeType":"ElementaryTypeName","src":"4244:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4243:15:1"},"returnParameters":{"id":338,"nodeType":"ParameterList","parameters":[],"src":"4274:0:1"},"scope":458,"src":"4227:246:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":388,"nodeType":"Block","src":"4691:87:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":379,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4733:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_VestingWallet_$458","typeString":"contract VestingWallet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_VestingWallet_$458","typeString":"contract VestingWallet"}],"id":378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4725:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":377,"name":"address","nodeType":"ElementaryTypeName","src":"4725:7:1","typeDescriptions":{}}},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4725:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4739:7:1","memberName":"balance","nodeType":"MemberAccess","src":"4725:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":382,"name":"released","nodeType":"Identifier","overloadedDeclarations":[251,264],"referencedDeclaration":251,"src":"4749:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4749:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4725:34:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":385,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"4761:9:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":376,"name":"_vestingSchedule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"4708:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint64_$returns$_t_uint256_$","typeString":"function (uint256,uint64) view returns (uint256)"}},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4708:63:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":375,"id":387,"nodeType":"Return","src":"4701:70:1"}]},"documentation":{"id":369,"nodeType":"StructuredDocumentation","src":"4479:129:1","text":" @dev Calculates the amount of ether that has already vested. Default implementation is a linear vesting curve."},"functionSelector":"0a17b06b","id":389,"implemented":true,"kind":"function","modifiers":[],"name":"vestedAmount","nameLocation":"4622:12:1","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":371,"mutability":"mutable","name":"timestamp","nameLocation":"4642:9:1","nodeType":"VariableDeclaration","scope":389,"src":"4635:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":370,"name":"uint64","nodeType":"ElementaryTypeName","src":"4635:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4634:18:1"},"returnParameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":389,"src":"4682:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":373,"name":"uint256","nodeType":"ElementaryTypeName","src":"4682:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4681:9:1"},"scope":458,"src":"4613:165:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":416,"nodeType":"Block","src":"5012:109:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":406,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5078:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_VestingWallet_$458","typeString":"contract VestingWallet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_VestingWallet_$458","typeString":"contract VestingWallet"}],"id":405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5070:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":404,"name":"address","nodeType":"ElementaryTypeName","src":"5070:7:1","typeDescriptions":{}}},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5070:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":401,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"5053:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":400,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"5046:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1213_$","typeString":"type(contract IERC20)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5046:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"}},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5060:9:1","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1170,"src":"5046:23:1","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5046:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"id":410,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"5096:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":409,"name":"released","nodeType":"Identifier","overloadedDeclarations":[251,264],"referencedDeclaration":264,"src":"5087:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5087:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5046:56:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":413,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"5104:9:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":399,"name":"_vestingSchedule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"5029:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint64_$returns$_t_uint256_$","typeString":"function (uint256,uint64) view returns (uint256)"}},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5029:85:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":398,"id":415,"nodeType":"Return","src":"5022:92:1"}]},"documentation":{"id":390,"nodeType":"StructuredDocumentation","src":"4784:130:1","text":" @dev Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve."},"functionSelector":"810ec23b","id":417,"implemented":true,"kind":"function","modifiers":[],"name":"vestedAmount","nameLocation":"4928:12:1","nodeType":"FunctionDefinition","parameters":{"id":395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":392,"mutability":"mutable","name":"token","nameLocation":"4949:5:1","nodeType":"VariableDeclaration","scope":417,"src":"4941:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":391,"name":"address","nodeType":"ElementaryTypeName","src":"4941:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":394,"mutability":"mutable","name":"timestamp","nameLocation":"4963:9:1","nodeType":"VariableDeclaration","scope":417,"src":"4956:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":393,"name":"uint64","nodeType":"ElementaryTypeName","src":"4956:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4940:33:1"},"returnParameters":{"id":398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":417,"src":"5003:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":396,"name":"uint256","nodeType":"ElementaryTypeName","src":"5003:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5002:9:1"},"scope":458,"src":"4919:202:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":456,"nodeType":"Block","src":"5425:243:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":427,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"5439:9:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":428,"name":"start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"5451:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5451:7:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5439:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":434,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"5503:9:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":435,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"5516:3:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5516:5:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5503:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":453,"nodeType":"Block","src":"5576:86:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":441,"name":"totalAllocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"5598:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":442,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"5617:9:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":443,"name":"start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"5629:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5629:7:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5617:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":446,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5616:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5598:39:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":448,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5597:41:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":449,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"5641:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5641:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5597:54:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":426,"id":452,"nodeType":"Return","src":"5590:61:1"}]},"id":454,"nodeType":"IfStatement","src":"5499:163:1","trueBody":{"id":440,"nodeType":"Block","src":"5523:47:1","statements":[{"expression":{"id":438,"name":"totalAllocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"5544:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":426,"id":439,"nodeType":"Return","src":"5537:22:1"}]}},"id":455,"nodeType":"IfStatement","src":"5435:227:1","trueBody":{"id":433,"nodeType":"Block","src":"5460:33:1","statements":[{"expression":{"hexValue":"30","id":431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5481:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":426,"id":432,"nodeType":"Return","src":"5474:8:1"}]}}]},"documentation":{"id":418,"nodeType":"StructuredDocumentation","src":"5127:184:1","text":" @dev Virtual implementation of the vesting formula. This returns the amount vested, as a function of time, for\n an asset given its total historical allocation."},"id":457,"implemented":true,"kind":"function","modifiers":[],"name":"_vestingSchedule","nameLocation":"5325:16:1","nodeType":"FunctionDefinition","parameters":{"id":423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"totalAllocation","nameLocation":"5350:15:1","nodeType":"VariableDeclaration","scope":457,"src":"5342:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":419,"name":"uint256","nodeType":"ElementaryTypeName","src":"5342:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":422,"mutability":"mutable","name":"timestamp","nameLocation":"5374:9:1","nodeType":"VariableDeclaration","scope":457,"src":"5367:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":421,"name":"uint64","nodeType":"ElementaryTypeName","src":"5367:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"5341:43:1"},"returnParameters":{"id":426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":425,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":457,"src":"5416:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":424,"name":"uint256","nodeType":"ElementaryTypeName","src":"5416:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5415:9:1"},"scope":458,"src":"5316:352:1","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":459,"src":"1638:4032:1","usedErrors":[13,18,1446,1727,1732,1735],"usedEvents":[24,168,174]}],"src":"108:5563:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[483]},"id":484,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":460,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":483,"linearizedBaseContracts":[483],"name":"IERC5267","nameLocation":"143:8:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":461,"nodeType":"StructuredDocumentation","src":"158:84:2","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":463,"name":"EIP712DomainChanged","nameLocation":"253:19:2","nodeType":"EventDefinition","parameters":{"id":462,"nodeType":"ParameterList","parameters":[],"src":"272:2:2"},"src":"247:28:2"},{"documentation":{"id":464,"nodeType":"StructuredDocumentation","src":"281:140:2","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":482,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:2","nodeType":"FunctionDefinition","parameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"447:2:2"},"returnParameters":{"id":481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":467,"mutability":"mutable","name":"fields","nameLocation":"517:6:2","nodeType":"VariableDeclaration","scope":482,"src":"510:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":466,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":469,"mutability":"mutable","name":"name","nameLocation":"551:4:2","nodeType":"VariableDeclaration","scope":482,"src":"537:18:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":468,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":471,"mutability":"mutable","name":"version","nameLocation":"583:7:2","nodeType":"VariableDeclaration","scope":482,"src":"569:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":470,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":473,"mutability":"mutable","name":"chainId","nameLocation":"612:7:2","nodeType":"VariableDeclaration","scope":482,"src":"604:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":472,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":475,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:2","nodeType":"VariableDeclaration","scope":482,"src":"633:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":474,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":477,"mutability":"mutable","name":"salt","nameLocation":"680:4:2","nodeType":"VariableDeclaration","scope":482,"src":"672:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":476,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":480,"mutability":"mutable","name":"extensions","nameLocation":"715:10:2","nodeType":"VariableDeclaration","scope":482,"src":"698:27:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":478,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":479,"nodeType":"ArrayTypeName","src":"698:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:2"},"scope":483,"src":"426:310:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":484,"src":"133:605:2","usedErrors":[],"usedEvents":[463]}],"src":"107:632:2"},"id":2},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[620],"IERC20Errors":[525],"IERC721Errors":[573]},"id":621,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":485,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":486,"nodeType":"StructuredDocumentation","src":"138:139:3","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":525,"linearizedBaseContracts":[525],"name":"IERC20Errors","nameLocation":"288:12:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":487,"nodeType":"StructuredDocumentation","src":"307:309:3","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":495,"name":"ERC20InsufficientBalance","nameLocation":"627:24:3","nodeType":"ErrorDefinition","parameters":{"id":494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":489,"mutability":"mutable","name":"sender","nameLocation":"660:6:3","nodeType":"VariableDeclaration","scope":495,"src":"652:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":488,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":491,"mutability":"mutable","name":"balance","nameLocation":"676:7:3","nodeType":"VariableDeclaration","scope":495,"src":"668:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":490,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":493,"mutability":"mutable","name":"needed","nameLocation":"693:6:3","nodeType":"VariableDeclaration","scope":495,"src":"685:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":492,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:3"},"src":"621:80:3"},{"documentation":{"id":496,"nodeType":"StructuredDocumentation","src":"707:152:3","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":500,"name":"ERC20InvalidSender","nameLocation":"870:18:3","nodeType":"ErrorDefinition","parameters":{"id":499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":498,"mutability":"mutable","name":"sender","nameLocation":"897:6:3","nodeType":"VariableDeclaration","scope":500,"src":"889:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":497,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:3"},"src":"864:41:3"},{"documentation":{"id":501,"nodeType":"StructuredDocumentation","src":"911:159:3","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":505,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:3","nodeType":"ErrorDefinition","parameters":{"id":504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":503,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:3","nodeType":"VariableDeclaration","scope":505,"src":"1102:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":502,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:3"},"src":"1075:45:3"},{"documentation":{"id":506,"nodeType":"StructuredDocumentation","src":"1126:345:3","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":514,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:3","nodeType":"ErrorDefinition","parameters":{"id":513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"spender","nameLocation":"1517:7:3","nodeType":"VariableDeclaration","scope":514,"src":"1509:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":507,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":510,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:3","nodeType":"VariableDeclaration","scope":514,"src":"1526:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":509,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":512,"mutability":"mutable","name":"needed","nameLocation":"1553:6:3","nodeType":"VariableDeclaration","scope":514,"src":"1545:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":511,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:3"},"src":"1476:85:3"},{"documentation":{"id":515,"nodeType":"StructuredDocumentation","src":"1567:174:3","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":519,"name":"ERC20InvalidApprover","nameLocation":"1752:20:3","nodeType":"ErrorDefinition","parameters":{"id":518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":517,"mutability":"mutable","name":"approver","nameLocation":"1781:8:3","nodeType":"VariableDeclaration","scope":519,"src":"1773:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":516,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:3"},"src":"1746:45:3"},{"documentation":{"id":520,"nodeType":"StructuredDocumentation","src":"1797:195:3","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":524,"name":"ERC20InvalidSpender","nameLocation":"2003:19:3","nodeType":"ErrorDefinition","parameters":{"id":523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":522,"mutability":"mutable","name":"spender","nameLocation":"2031:7:3","nodeType":"VariableDeclaration","scope":524,"src":"2023:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":521,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:3"},"src":"1997:43:3"}],"scope":621,"src":"278:1764:3","usedErrors":[495,500,505,514,519,524],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":526,"nodeType":"StructuredDocumentation","src":"2044:141:3","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":573,"linearizedBaseContracts":[573],"name":"IERC721Errors","nameLocation":"2196:13:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":527,"nodeType":"StructuredDocumentation","src":"2216:219:3","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":531,"name":"ERC721InvalidOwner","nameLocation":"2446:18:3","nodeType":"ErrorDefinition","parameters":{"id":530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":529,"mutability":"mutable","name":"owner","nameLocation":"2473:5:3","nodeType":"VariableDeclaration","scope":531,"src":"2465:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":528,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:3"},"src":"2440:40:3"},{"documentation":{"id":532,"nodeType":"StructuredDocumentation","src":"2486:132:3","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":536,"name":"ERC721NonexistentToken","nameLocation":"2629:22:3","nodeType":"ErrorDefinition","parameters":{"id":535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":534,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:3","nodeType":"VariableDeclaration","scope":536,"src":"2652:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":533,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:3"},"src":"2623:46:3"},{"documentation":{"id":537,"nodeType":"StructuredDocumentation","src":"2675:289:3","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":545,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:3","nodeType":"ErrorDefinition","parameters":{"id":544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":539,"mutability":"mutable","name":"sender","nameLocation":"3004:6:3","nodeType":"VariableDeclaration","scope":545,"src":"2996:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":538,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":541,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:3","nodeType":"VariableDeclaration","scope":545,"src":"3012:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":540,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":543,"mutability":"mutable","name":"owner","nameLocation":"3037:5:3","nodeType":"VariableDeclaration","scope":545,"src":"3029:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":542,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:3"},"src":"2969:75:3"},{"documentation":{"id":546,"nodeType":"StructuredDocumentation","src":"3050:152:3","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":550,"name":"ERC721InvalidSender","nameLocation":"3213:19:3","nodeType":"ErrorDefinition","parameters":{"id":549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":548,"mutability":"mutable","name":"sender","nameLocation":"3241:6:3","nodeType":"VariableDeclaration","scope":550,"src":"3233:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":547,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:3"},"src":"3207:42:3"},{"documentation":{"id":551,"nodeType":"StructuredDocumentation","src":"3255:159:3","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":555,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:3","nodeType":"ErrorDefinition","parameters":{"id":554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":553,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:3","nodeType":"VariableDeclaration","scope":555,"src":"3447:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":552,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:3"},"src":"3419:46:3"},{"documentation":{"id":556,"nodeType":"StructuredDocumentation","src":"3471:247:3","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":562,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:3","nodeType":"ErrorDefinition","parameters":{"id":561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":558,"mutability":"mutable","name":"operator","nameLocation":"3764:8:3","nodeType":"VariableDeclaration","scope":562,"src":"3756:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":557,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":560,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:3","nodeType":"VariableDeclaration","scope":562,"src":"3774:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":559,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:3"},"src":"3723:68:3"},{"documentation":{"id":563,"nodeType":"StructuredDocumentation","src":"3797:174:3","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":567,"name":"ERC721InvalidApprover","nameLocation":"3982:21:3","nodeType":"ErrorDefinition","parameters":{"id":566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":565,"mutability":"mutable","name":"approver","nameLocation":"4012:8:3","nodeType":"VariableDeclaration","scope":567,"src":"4004:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":564,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:3"},"src":"3976:46:3"},{"documentation":{"id":568,"nodeType":"StructuredDocumentation","src":"4028:197:3","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":572,"name":"ERC721InvalidOperator","nameLocation":"4236:21:3","nodeType":"ErrorDefinition","parameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":570,"mutability":"mutable","name":"operator","nameLocation":"4266:8:3","nodeType":"VariableDeclaration","scope":572,"src":"4258:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":569,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:3"},"src":"4230:46:3"}],"scope":621,"src":"2186:2092:3","usedErrors":[531,536,545,550,555,562,567,572],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":574,"nodeType":"StructuredDocumentation","src":"4280:143:3","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":620,"linearizedBaseContracts":[620],"name":"IERC1155Errors","nameLocation":"4434:14:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":575,"nodeType":"StructuredDocumentation","src":"4455:361:3","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":585,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:3","nodeType":"ErrorDefinition","parameters":{"id":584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":577,"mutability":"mutable","name":"sender","nameLocation":"4862:6:3","nodeType":"VariableDeclaration","scope":585,"src":"4854:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":579,"mutability":"mutable","name":"balance","nameLocation":"4878:7:3","nodeType":"VariableDeclaration","scope":585,"src":"4870:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":578,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":581,"mutability":"mutable","name":"needed","nameLocation":"4895:6:3","nodeType":"VariableDeclaration","scope":585,"src":"4887:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":580,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":583,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:3","nodeType":"VariableDeclaration","scope":585,"src":"4903:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":582,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:3"},"src":"4821:99:3"},{"documentation":{"id":586,"nodeType":"StructuredDocumentation","src":"4926:152:3","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":590,"name":"ERC1155InvalidSender","nameLocation":"5089:20:3","nodeType":"ErrorDefinition","parameters":{"id":589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":588,"mutability":"mutable","name":"sender","nameLocation":"5118:6:3","nodeType":"VariableDeclaration","scope":590,"src":"5110:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":587,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:3"},"src":"5083:43:3"},{"documentation":{"id":591,"nodeType":"StructuredDocumentation","src":"5132:159:3","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":595,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:3","nodeType":"ErrorDefinition","parameters":{"id":594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":593,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:3","nodeType":"VariableDeclaration","scope":595,"src":"5325:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:3"},"src":"5296:47:3"},{"documentation":{"id":596,"nodeType":"StructuredDocumentation","src":"5349:256:3","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":602,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:3","nodeType":"ErrorDefinition","parameters":{"id":601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"operator","nameLocation":"5653:8:3","nodeType":"VariableDeclaration","scope":602,"src":"5645:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":597,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":600,"mutability":"mutable","name":"owner","nameLocation":"5671:5:3","nodeType":"VariableDeclaration","scope":602,"src":"5663:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":599,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:3"},"src":"5610:68:3"},{"documentation":{"id":603,"nodeType":"StructuredDocumentation","src":"5684:174:3","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":607,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:3","nodeType":"ErrorDefinition","parameters":{"id":606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":605,"mutability":"mutable","name":"approver","nameLocation":"5900:8:3","nodeType":"VariableDeclaration","scope":607,"src":"5892:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:3"},"src":"5863:47:3"},{"documentation":{"id":608,"nodeType":"StructuredDocumentation","src":"5916:197:3","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":612,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:3","nodeType":"ErrorDefinition","parameters":{"id":611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":610,"mutability":"mutable","name":"operator","nameLocation":"6155:8:3","nodeType":"VariableDeclaration","scope":612,"src":"6147:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":609,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:3"},"src":"6118:47:3"},{"documentation":{"id":613,"nodeType":"StructuredDocumentation","src":"6171:280:3","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":619,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:3","nodeType":"ErrorDefinition","parameters":{"id":618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":615,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:3","nodeType":"VariableDeclaration","scope":619,"src":"6488:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":614,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":617,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:3","nodeType":"VariableDeclaration","scope":619,"src":"6507:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":616,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:3"},"src":"6456:73:3"}],"scope":621,"src":"4424:2107:3","usedErrors":[585,590,595,602,607,612,619],"usedEvents":[]}],"src":"112:6420:3"},"id":3},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2002],"ERC20":[1135],"IERC20":[1213],"IERC20Errors":[525],"IERC20Metadata":[1393]},"id":1136,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":622,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":624,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1136,"sourceUnit":1214,"src":"131:36:4","symbolAliases":[{"foreign":{"id":623,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"139:6:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":626,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1136,"sourceUnit":1394,"src":"168:63:4","symbolAliases":[{"foreign":{"id":625,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"176:14:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":628,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1136,"sourceUnit":2003,"src":"232:48:4","symbolAliases":[{"foreign":{"id":627,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"240:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":630,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1136,"sourceUnit":621,"src":"281:65:4","symbolAliases":[{"foreign":{"id":629,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"289:12:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":632,"name":"Context","nameLocations":["1428:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":2002,"src":"1428:7:4"},"id":633,"nodeType":"InheritanceSpecifier","src":"1428:7:4"},{"baseName":{"id":634,"name":"IERC20","nameLocations":["1437:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"1437:6:4"},"id":635,"nodeType":"InheritanceSpecifier","src":"1437:6:4"},{"baseName":{"id":636,"name":"IERC20Metadata","nameLocations":["1445:14:4"],"nodeType":"IdentifierPath","referencedDeclaration":1393,"src":"1445:14:4"},"id":637,"nodeType":"InheritanceSpecifier","src":"1445:14:4"},{"baseName":{"id":638,"name":"IERC20Errors","nameLocations":["1461:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"1461:12:4"},"id":639,"nodeType":"InheritanceSpecifier","src":"1461:12:4"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":631,"nodeType":"StructuredDocumentation","src":"348:1052:4","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":1135,"linearizedBaseContracts":[1135,525,1393,1213,2002],"name":"ERC20","nameLocation":"1419:5:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":643,"mutability":"mutable","name":"_balances","nameLocation":"1524:9:4","nodeType":"VariableDeclaration","scope":1135,"src":"1480:53:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":642,"keyName":"account","keyNameLocation":"1496:7:4","keyType":{"id":640,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1480:35:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":641,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":649,"mutability":"mutable","name":"_allowances","nameLocation":"1612:11:4","nodeType":"VariableDeclaration","scope":1135,"src":"1540:83:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":648,"keyName":"account","keyNameLocation":"1556:7:4","keyType":{"id":644,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1540:63:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":647,"keyName":"spender","keyNameLocation":"1583:7:4","keyType":{"id":645,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1567:35:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":646,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":651,"mutability":"mutable","name":"_totalSupply","nameLocation":"1646:12:4","nodeType":"VariableDeclaration","scope":1135,"src":"1630:28:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":650,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":653,"mutability":"mutable","name":"_name","nameLocation":"1680:5:4","nodeType":"VariableDeclaration","scope":1135,"src":"1665:20:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":652,"name":"string","nodeType":"ElementaryTypeName","src":"1665:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":655,"mutability":"mutable","name":"_symbol","nameLocation":"1706:7:4","nodeType":"VariableDeclaration","scope":1135,"src":"1691:22:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":654,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":671,"nodeType":"Block","src":"1952:57:4","statements":[{"expression":{"id":665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":663,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"1962:5:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":664,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"1970:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1962:13:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":666,"nodeType":"ExpressionStatement","src":"1962:13:4"},{"expression":{"id":669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":667,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"1985:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":668,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"1995:7:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1985:17:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":670,"nodeType":"ExpressionStatement","src":"1985:17:4"}]},"documentation":{"id":656,"nodeType":"StructuredDocumentation","src":"1720:171:4","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":672,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":658,"mutability":"mutable","name":"name_","nameLocation":"1922:5:4","nodeType":"VariableDeclaration","scope":672,"src":"1908:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":657,"name":"string","nodeType":"ElementaryTypeName","src":"1908:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":660,"mutability":"mutable","name":"symbol_","nameLocation":"1943:7:4","nodeType":"VariableDeclaration","scope":672,"src":"1929:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":659,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1907:44:4"},"returnParameters":{"id":662,"nodeType":"ParameterList","parameters":[],"src":"1952:0:4"},"scope":1135,"src":"1896:113:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1380],"body":{"id":680,"nodeType":"Block","src":"2134:29:4","statements":[{"expression":{"id":678,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"2151:5:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":677,"id":679,"nodeType":"Return","src":"2144:12:4"}]},"documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"2015:54:4","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":681,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2083:4:4","nodeType":"FunctionDefinition","parameters":{"id":674,"nodeType":"ParameterList","parameters":[],"src":"2087:2:4"},"returnParameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":681,"src":"2119:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":675,"name":"string","nodeType":"ElementaryTypeName","src":"2119:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2118:15:4"},"scope":1135,"src":"2074:89:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1386],"body":{"id":689,"nodeType":"Block","src":"2338:31:4","statements":[{"expression":{"id":687,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"2355:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":686,"id":688,"nodeType":"Return","src":"2348:14:4"}]},"documentation":{"id":682,"nodeType":"StructuredDocumentation","src":"2169:102:4","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":690,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2285:6:4","nodeType":"FunctionDefinition","parameters":{"id":683,"nodeType":"ParameterList","parameters":[],"src":"2291:2:4"},"returnParameters":{"id":686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":690,"src":"2323:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":684,"name":"string","nodeType":"ElementaryTypeName","src":"2323:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2322:15:4"},"scope":1135,"src":"2276:93:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1392],"body":{"id":698,"nodeType":"Block","src":"3058:26:4","statements":[{"expression":{"hexValue":"3138","id":696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3075:2:4","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":695,"id":697,"nodeType":"Return","src":"3068:9:4"}]},"documentation":{"id":691,"nodeType":"StructuredDocumentation","src":"2375:622:4","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":699,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3011:8:4","nodeType":"FunctionDefinition","parameters":{"id":692,"nodeType":"ParameterList","parameters":[],"src":"3019:2:4"},"returnParameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":699,"src":"3051:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":693,"name":"uint8","nodeType":"ElementaryTypeName","src":"3051:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3050:7:4"},"scope":1135,"src":"3002:82:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1162],"body":{"id":707,"nodeType":"Block","src":"3205:36:4","statements":[{"expression":{"id":705,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"3222:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":704,"id":706,"nodeType":"Return","src":"3215:19:4"}]},"documentation":{"id":700,"nodeType":"StructuredDocumentation","src":"3090:49:4","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":708,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3153:11:4","nodeType":"FunctionDefinition","parameters":{"id":701,"nodeType":"ParameterList","parameters":[],"src":"3164:2:4"},"returnParameters":{"id":704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":708,"src":"3196:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":702,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3195:9:4"},"scope":1135,"src":"3144:97:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1170],"body":{"id":720,"nodeType":"Block","src":"3373:42:4","statements":[{"expression":{"baseExpression":{"id":716,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"3390:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":718,"indexExpression":{"id":717,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"3400:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3390:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":715,"id":719,"nodeType":"Return","src":"3383:25:4"}]},"documentation":{"id":709,"nodeType":"StructuredDocumentation","src":"3247:47:4","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":721,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3308:9:4","nodeType":"FunctionDefinition","parameters":{"id":712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":711,"mutability":"mutable","name":"account","nameLocation":"3326:7:4","nodeType":"VariableDeclaration","scope":721,"src":"3318:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":710,"name":"address","nodeType":"ElementaryTypeName","src":"3318:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3317:17:4"},"returnParameters":{"id":715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":721,"src":"3364:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":713,"name":"uint256","nodeType":"ElementaryTypeName","src":"3364:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3363:9:4"},"scope":1135,"src":"3299:116:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1180],"body":{"id":744,"nodeType":"Block","src":"3685:103:4","statements":[{"assignments":[732],"declarations":[{"constant":false,"id":732,"mutability":"mutable","name":"owner","nameLocation":"3703:5:4","nodeType":"VariableDeclaration","scope":744,"src":"3695:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":731,"name":"address","nodeType":"ElementaryTypeName","src":"3695:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":735,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":733,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"3711:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3695:28:4"},{"expression":{"arguments":[{"id":737,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"3743:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":738,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"3750:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"3754:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":736,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"3733:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":741,"nodeType":"ExpressionStatement","src":"3733:27:4"},{"expression":{"hexValue":"74727565","id":742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3777:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":730,"id":743,"nodeType":"Return","src":"3770:11:4"}]},"documentation":{"id":722,"nodeType":"StructuredDocumentation","src":"3421:184:4","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":745,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3619:8:4","nodeType":"FunctionDefinition","parameters":{"id":727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":724,"mutability":"mutable","name":"to","nameLocation":"3636:2:4","nodeType":"VariableDeclaration","scope":745,"src":"3628:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":723,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":726,"mutability":"mutable","name":"value","nameLocation":"3648:5:4","nodeType":"VariableDeclaration","scope":745,"src":"3640:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":725,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3627:27:4"},"returnParameters":{"id":730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":745,"src":"3679:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":728,"name":"bool","nodeType":"ElementaryTypeName","src":"3679:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3678:6:4"},"scope":1135,"src":"3610:178:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1190],"body":{"id":761,"nodeType":"Block","src":"3935:51:4","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":755,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"3952:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":757,"indexExpression":{"id":756,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"3964:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":759,"indexExpression":{"id":758,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"3971:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":754,"id":760,"nodeType":"Return","src":"3945:34:4"}]},"documentation":{"id":746,"nodeType":"StructuredDocumentation","src":"3794:47:4","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":762,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3855:9:4","nodeType":"FunctionDefinition","parameters":{"id":751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":748,"mutability":"mutable","name":"owner","nameLocation":"3873:5:4","nodeType":"VariableDeclaration","scope":762,"src":"3865:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":747,"name":"address","nodeType":"ElementaryTypeName","src":"3865:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":750,"mutability":"mutable","name":"spender","nameLocation":"3888:7:4","nodeType":"VariableDeclaration","scope":762,"src":"3880:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":749,"name":"address","nodeType":"ElementaryTypeName","src":"3880:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3864:32:4"},"returnParameters":{"id":754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":753,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":762,"src":"3926:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":752,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3925:9:4"},"scope":1135,"src":"3846:140:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1200],"body":{"id":785,"nodeType":"Block","src":"4372:107:4","statements":[{"assignments":[773],"declarations":[{"constant":false,"id":773,"mutability":"mutable","name":"owner","nameLocation":"4390:5:4","nodeType":"VariableDeclaration","scope":785,"src":"4382:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":772,"name":"address","nodeType":"ElementaryTypeName","src":"4382:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":776,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":774,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"4398:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4398:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4382:28:4"},{"expression":{"arguments":[{"id":778,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"4429:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":779,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"4436:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"4445:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":777,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1026,1086],"referencedDeclaration":1026,"src":"4420:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":782,"nodeType":"ExpressionStatement","src":"4420:31:4"},{"expression":{"hexValue":"74727565","id":783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4468:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":771,"id":784,"nodeType":"Return","src":"4461:11:4"}]},"documentation":{"id":763,"nodeType":"StructuredDocumentation","src":"3992:296:4","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":786,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4302:7:4","nodeType":"FunctionDefinition","parameters":{"id":768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":765,"mutability":"mutable","name":"spender","nameLocation":"4318:7:4","nodeType":"VariableDeclaration","scope":786,"src":"4310:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":764,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":767,"mutability":"mutable","name":"value","nameLocation":"4335:5:4","nodeType":"VariableDeclaration","scope":786,"src":"4327:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":766,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4309:32:4"},"returnParameters":{"id":771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":786,"src":"4366:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":769,"name":"bool","nodeType":"ElementaryTypeName","src":"4366:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:6:4"},"scope":1135,"src":"4293:186:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1212],"body":{"id":817,"nodeType":"Block","src":"5132:151:4","statements":[{"assignments":[799],"declarations":[{"constant":false,"id":799,"mutability":"mutable","name":"spender","nameLocation":"5150:7:4","nodeType":"VariableDeclaration","scope":817,"src":"5142:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":798,"name":"address","nodeType":"ElementaryTypeName","src":"5142:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":802,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":800,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"5160:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5142:30:4"},{"expression":{"arguments":[{"id":804,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"5198:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":805,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"5204:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"5213:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":803,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"5182:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":808,"nodeType":"ExpressionStatement","src":"5182:37:4"},{"expression":{"arguments":[{"id":810,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"5239:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":811,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"5245:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"5249:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":809,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"5229:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":814,"nodeType":"ExpressionStatement","src":"5229:26:4"},{"expression":{"hexValue":"74727565","id":815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5272:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":797,"id":816,"nodeType":"Return","src":"5265:11:4"}]},"documentation":{"id":787,"nodeType":"StructuredDocumentation","src":"4485:549:4","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":818,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5048:12:4","nodeType":"FunctionDefinition","parameters":{"id":794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":789,"mutability":"mutable","name":"from","nameLocation":"5069:4:4","nodeType":"VariableDeclaration","scope":818,"src":"5061:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":788,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":791,"mutability":"mutable","name":"to","nameLocation":"5083:2:4","nodeType":"VariableDeclaration","scope":818,"src":"5075:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":790,"name":"address","nodeType":"ElementaryTypeName","src":"5075:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":793,"mutability":"mutable","name":"value","nameLocation":"5095:5:4","nodeType":"VariableDeclaration","scope":818,"src":"5087:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":792,"name":"uint256","nodeType":"ElementaryTypeName","src":"5087:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5060:41:4"},"returnParameters":{"id":797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":818,"src":"5126:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":795,"name":"bool","nodeType":"ElementaryTypeName","src":"5126:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5125:6:4"},"scope":1135,"src":"5039:244:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":864,"nodeType":"Block","src":"5725:231:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":828,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"5739:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5755:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5747:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":829,"name":"address","nodeType":"ElementaryTypeName","src":"5747:7:4","typeDescriptions":{}}},"id":832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5739:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":842,"nodeType":"IfStatement","src":"5735:86:4","trueBody":{"id":841,"nodeType":"Block","src":"5759:62:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5807:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":835,"name":"address","nodeType":"ElementaryTypeName","src":"5799:7:4","typeDescriptions":{}}},"id":838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":834,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"5780:18:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5780:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":840,"nodeType":"RevertStatement","src":"5773:37:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":843,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"5834:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5848:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5840:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":844,"name":"address","nodeType":"ElementaryTypeName","src":"5840:7:4","typeDescriptions":{}}},"id":847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5834:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":857,"nodeType":"IfStatement","src":"5830:86:4","trueBody":{"id":856,"nodeType":"Block","src":"5852:64:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5894:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":850,"name":"address","nodeType":"ElementaryTypeName","src":"5894:7:4","typeDescriptions":{}}},"id":853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5894:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":849,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"5873:20:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":855,"nodeType":"RevertStatement","src":"5866:39:4"}]}},{"expression":{"arguments":[{"id":859,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"5933:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":860,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"5939:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"5943:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":858,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"5925:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5925:24:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":863,"nodeType":"ExpressionStatement","src":"5925:24:4"}]},"documentation":{"id":819,"nodeType":"StructuredDocumentation","src":"5289:362:4","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":865,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5665:9:4","nodeType":"FunctionDefinition","parameters":{"id":826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":821,"mutability":"mutable","name":"from","nameLocation":"5683:4:4","nodeType":"VariableDeclaration","scope":865,"src":"5675:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":820,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":823,"mutability":"mutable","name":"to","nameLocation":"5697:2:4","nodeType":"VariableDeclaration","scope":865,"src":"5689:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":822,"name":"address","nodeType":"ElementaryTypeName","src":"5689:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":825,"mutability":"mutable","name":"value","nameLocation":"5709:5:4","nodeType":"VariableDeclaration","scope":865,"src":"5701:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":824,"name":"uint256","nodeType":"ElementaryTypeName","src":"5701:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:41:4"},"returnParameters":{"id":827,"nodeType":"ParameterList","parameters":[],"src":"5725:0:4"},"scope":1135,"src":"5656:300:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":941,"nodeType":"Block","src":"6346:1032:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":875,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"6360:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6376:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6368:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":876,"name":"address","nodeType":"ElementaryTypeName","src":"6368:7:4","typeDescriptions":{}}},"id":879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6368:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6360:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":912,"nodeType":"Block","src":"6534:362:4","statements":[{"assignments":[887],"declarations":[{"constant":false,"id":887,"mutability":"mutable","name":"fromBalance","nameLocation":"6556:11:4","nodeType":"VariableDeclaration","scope":912,"src":"6548:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":886,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":891,"initialValue":{"baseExpression":{"id":888,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"6570:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":890,"indexExpression":{"id":889,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"6580:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6570:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6548:37:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":892,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"6603:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"6617:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6603:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":902,"nodeType":"IfStatement","src":"6599:115:4","trueBody":{"id":901,"nodeType":"Block","src":"6624:90:4","statements":[{"errorCall":{"arguments":[{"id":896,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"6674:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":897,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"6680:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"6693:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":895,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"6649:24:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:50:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":900,"nodeType":"RevertStatement","src":"6642:57:4"}]}},{"id":911,"nodeType":"UncheckedBlock","src":"6727:159:4","statements":[{"expression":{"id":909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":903,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"6834:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":905,"indexExpression":{"id":904,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"6844:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6834:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":906,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"6852:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"6866:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6852:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6834:37:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":910,"nodeType":"ExpressionStatement","src":"6834:37:4"}]}]},"id":913,"nodeType":"IfStatement","src":"6356:540:4","trueBody":{"id":885,"nodeType":"Block","src":"6380:148:4","statements":[{"expression":{"id":883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":881,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"6496:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"6512:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6496:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":884,"nodeType":"ExpressionStatement","src":"6496:21:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":914,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"6910:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6924:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":915,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:4","typeDescriptions":{}}},"id":918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6910:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":933,"nodeType":"Block","src":"7125:206:4","statements":[{"id":932,"nodeType":"UncheckedBlock","src":"7139:182:4","statements":[{"expression":{"id":930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":926,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"7284:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":928,"indexExpression":{"id":927,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"7294:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7284:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":929,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"7301:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":931,"nodeType":"ExpressionStatement","src":"7284:22:4"}]}]},"id":934,"nodeType":"IfStatement","src":"6906:425:4","trueBody":{"id":925,"nodeType":"Block","src":"6928:191:4","statements":[{"id":924,"nodeType":"UncheckedBlock","src":"6942:167:4","statements":[{"expression":{"id":922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":920,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"7073:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"7089:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7073:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":923,"nodeType":"ExpressionStatement","src":"7073:21:4"}]}]}},{"eventCall":{"arguments":[{"id":936,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"7355:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":937,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"7361:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"7365:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":935,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"7346:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7346:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":940,"nodeType":"EmitStatement","src":"7341:30:4"}]},"documentation":{"id":866,"nodeType":"StructuredDocumentation","src":"5962:304:4","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":942,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6280:7:4","nodeType":"FunctionDefinition","parameters":{"id":873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":868,"mutability":"mutable","name":"from","nameLocation":"6296:4:4","nodeType":"VariableDeclaration","scope":942,"src":"6288:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":867,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":870,"mutability":"mutable","name":"to","nameLocation":"6310:2:4","nodeType":"VariableDeclaration","scope":942,"src":"6302:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":869,"name":"address","nodeType":"ElementaryTypeName","src":"6302:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":872,"mutability":"mutable","name":"value","nameLocation":"6322:5:4","nodeType":"VariableDeclaration","scope":942,"src":"6314:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":871,"name":"uint256","nodeType":"ElementaryTypeName","src":"6314:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6287:41:4"},"returnParameters":{"id":874,"nodeType":"ParameterList","parameters":[],"src":"6346:0:4"},"scope":1135,"src":"6271:1107:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":974,"nodeType":"Block","src":"7777:152:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":950,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"7791:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7810:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7802:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":951,"name":"address","nodeType":"ElementaryTypeName","src":"7802:7:4","typeDescriptions":{}}},"id":954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7802:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7791:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":964,"nodeType":"IfStatement","src":"7787:91:4","trueBody":{"id":963,"nodeType":"Block","src":"7814:64:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7864:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7856:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":957,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:4","typeDescriptions":{}}},"id":960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7856:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":956,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"7835:20:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7835:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":962,"nodeType":"RevertStatement","src":"7828:39:4"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7903:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7895:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":966,"name":"address","nodeType":"ElementaryTypeName","src":"7895:7:4","typeDescriptions":{}}},"id":969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7895:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":970,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"7907:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"7916:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":965,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"7887:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7887:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":973,"nodeType":"ExpressionStatement","src":"7887:35:4"}]},"documentation":{"id":943,"nodeType":"StructuredDocumentation","src":"7384:332:4","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":975,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7730:5:4","nodeType":"FunctionDefinition","parameters":{"id":948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":945,"mutability":"mutable","name":"account","nameLocation":"7744:7:4","nodeType":"VariableDeclaration","scope":975,"src":"7736:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":944,"name":"address","nodeType":"ElementaryTypeName","src":"7736:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":947,"mutability":"mutable","name":"value","nameLocation":"7761:5:4","nodeType":"VariableDeclaration","scope":975,"src":"7753:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":946,"name":"uint256","nodeType":"ElementaryTypeName","src":"7753:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7735:32:4"},"returnParameters":{"id":949,"nodeType":"ParameterList","parameters":[],"src":"7777:0:4"},"scope":1135,"src":"7721:208:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1007,"nodeType":"Block","src":"8303:150:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":983,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"8317:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8336:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":984,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:4","typeDescriptions":{}}},"id":987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8317:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":997,"nodeType":"IfStatement","src":"8313:89:4","trueBody":{"id":996,"nodeType":"Block","src":"8340:62:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8388:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8380:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":990,"name":"address","nodeType":"ElementaryTypeName","src":"8380:7:4","typeDescriptions":{}}},"id":993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8380:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":989,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"8361:18:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":995,"nodeType":"RevertStatement","src":"8354:37:4"}]}},{"expression":{"arguments":[{"id":999,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"8419:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8436:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8428:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1000,"name":"address","nodeType":"ElementaryTypeName","src":"8428:7:4","typeDescriptions":{}}},"id":1003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8428:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"8440:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":998,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"8411:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1006,"nodeType":"ExpressionStatement","src":"8411:35:4"}]},"documentation":{"id":976,"nodeType":"StructuredDocumentation","src":"7935:307:4","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1008,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8256:5:4","nodeType":"FunctionDefinition","parameters":{"id":981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":978,"mutability":"mutable","name":"account","nameLocation":"8270:7:4","nodeType":"VariableDeclaration","scope":1008,"src":"8262:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":977,"name":"address","nodeType":"ElementaryTypeName","src":"8262:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":980,"mutability":"mutable","name":"value","nameLocation":"8287:5:4","nodeType":"VariableDeclaration","scope":1008,"src":"8279:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":979,"name":"uint256","nodeType":"ElementaryTypeName","src":"8279:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8261:32:4"},"returnParameters":{"id":982,"nodeType":"ParameterList","parameters":[],"src":"8303:0:4"},"scope":1135,"src":"8247:206:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1025,"nodeType":"Block","src":"9063:54:4","statements":[{"expression":{"arguments":[{"id":1019,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"9082:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1020,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"9089:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"9098:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9105:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1018,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1026,1086],"referencedDeclaration":1086,"src":"9073:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9073:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1024,"nodeType":"ExpressionStatement","src":"9073:37:4"}]},"documentation":{"id":1009,"nodeType":"StructuredDocumentation","src":"8459:525:4","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1026,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8998:8:4","nodeType":"FunctionDefinition","parameters":{"id":1016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1011,"mutability":"mutable","name":"owner","nameLocation":"9015:5:4","nodeType":"VariableDeclaration","scope":1026,"src":"9007:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1010,"name":"address","nodeType":"ElementaryTypeName","src":"9007:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1013,"mutability":"mutable","name":"spender","nameLocation":"9030:7:4","nodeType":"VariableDeclaration","scope":1026,"src":"9022:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1012,"name":"address","nodeType":"ElementaryTypeName","src":"9022:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1015,"mutability":"mutable","name":"value","nameLocation":"9047:5:4","nodeType":"VariableDeclaration","scope":1026,"src":"9039:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1014,"name":"uint256","nodeType":"ElementaryTypeName","src":"9039:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9006:47:4"},"returnParameters":{"id":1017,"nodeType":"ParameterList","parameters":[],"src":"9063:0:4"},"scope":1135,"src":"8989:128:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1085,"nodeType":"Block","src":"10047:334:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1038,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"10061:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1039,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:4","typeDescriptions":{}}},"id":1042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10061:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1052,"nodeType":"IfStatement","src":"10057:89:4","trueBody":{"id":1051,"nodeType":"Block","src":"10082:64:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10124:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1045,"name":"address","nodeType":"ElementaryTypeName","src":"10124:7:4","typeDescriptions":{}}},"id":1048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10124:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1044,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"10103:20:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10103:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1050,"nodeType":"RevertStatement","src":"10096:39:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1053,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"10159:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10178:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10170:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1054,"name":"address","nodeType":"ElementaryTypeName","src":"10170:7:4","typeDescriptions":{}}},"id":1057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10159:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1067,"nodeType":"IfStatement","src":"10155:90:4","trueBody":{"id":1066,"nodeType":"Block","src":"10182:63:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10231:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10223:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1060,"name":"address","nodeType":"ElementaryTypeName","src":"10223:7:4","typeDescriptions":{}}},"id":1063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1059,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"10203:19:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10203:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1065,"nodeType":"RevertStatement","src":"10196:38:4"}]}},{"expression":{"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1068,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"10254:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1071,"indexExpression":{"id":1069,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"10266:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10254:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1072,"indexExpression":{"id":1070,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"10273:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10254:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"10284:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10254:35:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1075,"nodeType":"ExpressionStatement","src":"10254:35:4"},{"condition":{"id":1076,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"10303:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1084,"nodeType":"IfStatement","src":"10299:76:4","trueBody":{"id":1083,"nodeType":"Block","src":"10314:61:4","statements":[{"eventCall":{"arguments":[{"id":1078,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"10342:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1079,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"10349:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1080,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"10358:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1077,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"10333:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10333:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1082,"nodeType":"EmitStatement","src":"10328:36:4"}]}}]},"documentation":{"id":1027,"nodeType":"StructuredDocumentation","src":"9123:821:4","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1086,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9958:8:4","nodeType":"FunctionDefinition","parameters":{"id":1036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1029,"mutability":"mutable","name":"owner","nameLocation":"9975:5:4","nodeType":"VariableDeclaration","scope":1086,"src":"9967:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1028,"name":"address","nodeType":"ElementaryTypeName","src":"9967:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1031,"mutability":"mutable","name":"spender","nameLocation":"9990:7:4","nodeType":"VariableDeclaration","scope":1086,"src":"9982:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1030,"name":"address","nodeType":"ElementaryTypeName","src":"9982:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1033,"mutability":"mutable","name":"value","nameLocation":"10007:5:4","nodeType":"VariableDeclaration","scope":1086,"src":"9999:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1032,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1035,"mutability":"mutable","name":"emitEvent","nameLocation":"10019:9:4","nodeType":"VariableDeclaration","scope":1086,"src":"10014:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1034,"name":"bool","nodeType":"ElementaryTypeName","src":"10014:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9966:63:4"},"returnParameters":{"id":1037,"nodeType":"ParameterList","parameters":[],"src":"10047:0:4"},"scope":1135,"src":"9949:432:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1133,"nodeType":"Block","src":"10752:388:4","statements":[{"assignments":[1097],"declarations":[{"constant":false,"id":1097,"mutability":"mutable","name":"currentAllowance","nameLocation":"10770:16:4","nodeType":"VariableDeclaration","scope":1133,"src":"10762:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1096,"name":"uint256","nodeType":"ElementaryTypeName","src":"10762:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1102,"initialValue":{"arguments":[{"id":1099,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"10799:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1100,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"10806:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1098,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"10789:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10789:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10762:52:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1103,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"10828:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10853:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1105,"name":"uint256","nodeType":"ElementaryTypeName","src":"10853:7:4","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1104,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10848:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10862:3:4","memberName":"max","nodeType":"MemberAccess","src":"10848:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:37:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1132,"nodeType":"IfStatement","src":"10824:310:4","trueBody":{"id":1131,"nodeType":"Block","src":"10867:267:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1110,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"10885:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"10904:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10885:24:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1120,"nodeType":"IfStatement","src":"10881:130:4","trueBody":{"id":1119,"nodeType":"Block","src":"10911:100:4","statements":[{"errorCall":{"arguments":[{"id":1114,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"10963:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1115,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"10972:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1116,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"10990:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1113,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"10936:26:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10936:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1118,"nodeType":"RevertStatement","src":"10929:67:4"}]}},{"id":1130,"nodeType":"UncheckedBlock","src":"11024:100:4","statements":[{"expression":{"arguments":[{"id":1122,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"11061:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1123,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"11068:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1124,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"11077:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"11096:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11077:24:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11103:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1121,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1026,1086],"referencedDeclaration":1086,"src":"11052:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11052:57:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1129,"nodeType":"ExpressionStatement","src":"11052:57:4"}]}]}}]},"documentation":{"id":1087,"nodeType":"StructuredDocumentation","src":"10387:271:4","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1134,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10672:15:4","nodeType":"FunctionDefinition","parameters":{"id":1094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1089,"mutability":"mutable","name":"owner","nameLocation":"10696:5:4","nodeType":"VariableDeclaration","scope":1134,"src":"10688:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1088,"name":"address","nodeType":"ElementaryTypeName","src":"10688:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1091,"mutability":"mutable","name":"spender","nameLocation":"10711:7:4","nodeType":"VariableDeclaration","scope":1134,"src":"10703:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1090,"name":"address","nodeType":"ElementaryTypeName","src":"10703:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1093,"mutability":"mutable","name":"value","nameLocation":"10728:5:4","nodeType":"VariableDeclaration","scope":1134,"src":"10720:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1092,"name":"uint256","nodeType":"ElementaryTypeName","src":"10720:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10687:47:4"},"returnParameters":{"id":1095,"nodeType":"ParameterList","parameters":[],"src":"10752:0:4"},"scope":1135,"src":"10663:477:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1136,"src":"1401:9741:4","usedErrors":[495,500,505,514,519,524],"usedEvents":[1147,1156]}],"src":"105:11038:4"},"id":4},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1213]},"id":1214,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1137,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1138,"nodeType":"StructuredDocumentation","src":"132:70:5","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1213,"linearizedBaseContracts":[1213],"name":"IERC20","nameLocation":"213:6:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1139,"nodeType":"StructuredDocumentation","src":"226:158:5","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1147,"name":"Transfer","nameLocation":"395:8:5","nodeType":"EventDefinition","parameters":{"id":1146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1141,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:5","nodeType":"VariableDeclaration","scope":1147,"src":"404:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1140,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1143,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:5","nodeType":"VariableDeclaration","scope":1147,"src":"426:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1142,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1145,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:5","nodeType":"VariableDeclaration","scope":1147,"src":"446:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1144,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:5"},"src":"389:72:5"},{"anonymous":false,"documentation":{"id":1148,"nodeType":"StructuredDocumentation","src":"467:148:5","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1156,"name":"Approval","nameLocation":"626:8:5","nodeType":"EventDefinition","parameters":{"id":1155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1150,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:5","nodeType":"VariableDeclaration","scope":1156,"src":"635:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1149,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1152,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:5","nodeType":"VariableDeclaration","scope":1156,"src":"658:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1151,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1154,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:5","nodeType":"VariableDeclaration","scope":1156,"src":"683:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1153,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:5"},"src":"620:78:5"},{"documentation":{"id":1157,"nodeType":"StructuredDocumentation","src":"704:65:5","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1162,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:5","nodeType":"FunctionDefinition","parameters":{"id":1158,"nodeType":"ParameterList","parameters":[],"src":"794:2:5"},"returnParameters":{"id":1161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1162,"src":"820:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1159,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:5"},"scope":1213,"src":"774:55:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1163,"nodeType":"StructuredDocumentation","src":"835:71:5","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1170,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:5","nodeType":"FunctionDefinition","parameters":{"id":1166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1165,"mutability":"mutable","name":"account","nameLocation":"938:7:5","nodeType":"VariableDeclaration","scope":1170,"src":"930:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1164,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:5"},"returnParameters":{"id":1169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1170,"src":"970:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1167,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:5"},"scope":1213,"src":"911:68:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1171,"nodeType":"StructuredDocumentation","src":"985:213:5","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1180,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:5","nodeType":"FunctionDefinition","parameters":{"id":1176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1173,"mutability":"mutable","name":"to","nameLocation":"1229:2:5","nodeType":"VariableDeclaration","scope":1180,"src":"1221:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1172,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1175,"mutability":"mutable","name":"value","nameLocation":"1241:5:5","nodeType":"VariableDeclaration","scope":1180,"src":"1233:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1174,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:5"},"returnParameters":{"id":1179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1180,"src":"1266:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1177,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:5"},"scope":1213,"src":"1203:69:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1181,"nodeType":"StructuredDocumentation","src":"1278:264:5","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1190,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:5","nodeType":"FunctionDefinition","parameters":{"id":1186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1183,"mutability":"mutable","name":"owner","nameLocation":"1574:5:5","nodeType":"VariableDeclaration","scope":1190,"src":"1566:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1182,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1185,"mutability":"mutable","name":"spender","nameLocation":"1589:7:5","nodeType":"VariableDeclaration","scope":1190,"src":"1581:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1184,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:5"},"returnParameters":{"id":1189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1188,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1190,"src":"1621:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1187,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:5"},"scope":1213,"src":"1547:83:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1191,"nodeType":"StructuredDocumentation","src":"1636:667:5","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1200,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:5","nodeType":"FunctionDefinition","parameters":{"id":1196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1193,"mutability":"mutable","name":"spender","nameLocation":"2333:7:5","nodeType":"VariableDeclaration","scope":1200,"src":"2325:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1192,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1195,"mutability":"mutable","name":"value","nameLocation":"2350:5:5","nodeType":"VariableDeclaration","scope":1200,"src":"2342:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1194,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:5"},"returnParameters":{"id":1199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1200,"src":"2375:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1197,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:5"},"scope":1213,"src":"2308:73:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1201,"nodeType":"StructuredDocumentation","src":"2387:297:5","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1212,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:5","nodeType":"FunctionDefinition","parameters":{"id":1208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1203,"mutability":"mutable","name":"from","nameLocation":"2719:4:5","nodeType":"VariableDeclaration","scope":1212,"src":"2711:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1202,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1205,"mutability":"mutable","name":"to","nameLocation":"2733:2:5","nodeType":"VariableDeclaration","scope":1212,"src":"2725:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1204,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1207,"mutability":"mutable","name":"value","nameLocation":"2745:5:5","nodeType":"VariableDeclaration","scope":1212,"src":"2737:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1206,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:5"},"returnParameters":{"id":1211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1212,"src":"2770:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1209,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:5"},"scope":1213,"src":"2689:87:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1214,"src":"203:2575:5","usedErrors":[],"usedEvents":[1147,1156]}],"src":"106:2673:5"},"id":5},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"ECDSA":[3000],"EIP712":[3227],"ERC20":[1135],"ERC20Permit":[1367],"IERC20Permit":[1429],"Nonces":[2070]},"id":1368,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1215,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"122:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":1217,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1368,"sourceUnit":1430,"src":"148:48:6","symbolAliases":[{"foreign":{"id":1216,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"156:12:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1219,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1368,"sourceUnit":1136,"src":"197:35:6","symbolAliases":[{"foreign":{"id":1218,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"205:5:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":1221,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1368,"sourceUnit":3001,"src":"233:60:6","symbolAliases":[{"foreign":{"id":1220,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"241:5:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":1223,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1368,"sourceUnit":3228,"src":"294:62:6","symbolAliases":[{"foreign":{"id":1222,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"302:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../../utils/Nonces.sol","id":1225,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1368,"sourceUnit":2071,"src":"357:49:6","symbolAliases":[{"foreign":{"id":1224,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"365:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1227,"name":"ERC20","nameLocations":["929:5:6"],"nodeType":"IdentifierPath","referencedDeclaration":1135,"src":"929:5:6"},"id":1228,"nodeType":"InheritanceSpecifier","src":"929:5:6"},{"baseName":{"id":1229,"name":"IERC20Permit","nameLocations":["936:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":1429,"src":"936:12:6"},"id":1230,"nodeType":"InheritanceSpecifier","src":"936:12:6"},{"baseName":{"id":1231,"name":"EIP712","nameLocations":["950:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":3227,"src":"950:6:6"},"id":1232,"nodeType":"InheritanceSpecifier","src":"950:6:6"},{"baseName":{"id":1233,"name":"Nonces","nameLocations":["958:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":2070,"src":"958:6:6"},"id":1234,"nodeType":"InheritanceSpecifier","src":"958:6:6"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":1226,"nodeType":"StructuredDocumentation","src":"408:487:6","text":" @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":true,"id":1367,"linearizedBaseContracts":[1367,2070,3227,483,1429,1135,525,1393,1213,2002],"name":"ERC20Permit","nameLocation":"914:11:6","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1239,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"996:15:6","nodeType":"VariableDeclaration","scope":1367,"src":"971:146:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1235,"name":"bytes32","nodeType":"ElementaryTypeName","src":"971:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":1237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1032:84:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":1236,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1022:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1022:95:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":1240,"nodeType":"StructuredDocumentation","src":"1124:52:6","text":" @dev Permit deadline has expired."},"errorSelector":"62791302","id":1244,"name":"ERC2612ExpiredSignature","nameLocation":"1187:23:6","nodeType":"ErrorDefinition","parameters":{"id":1243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1242,"mutability":"mutable","name":"deadline","nameLocation":"1219:8:6","nodeType":"VariableDeclaration","scope":1244,"src":"1211:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1241,"name":"uint256","nodeType":"ElementaryTypeName","src":"1211:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:18:6"},"src":"1181:48:6"},{"documentation":{"id":1245,"nodeType":"StructuredDocumentation","src":"1235:45:6","text":" @dev Mismatched signature."},"errorSelector":"4b800e46","id":1251,"name":"ERC2612InvalidSigner","nameLocation":"1291:20:6","nodeType":"ErrorDefinition","parameters":{"id":1250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1247,"mutability":"mutable","name":"signer","nameLocation":"1320:6:6","nodeType":"VariableDeclaration","scope":1251,"src":"1312:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1246,"name":"address","nodeType":"ElementaryTypeName","src":"1312:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1249,"mutability":"mutable","name":"owner","nameLocation":"1336:5:6","nodeType":"VariableDeclaration","scope":1251,"src":"1328:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1248,"name":"address","nodeType":"ElementaryTypeName","src":"1328:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1311:31:6"},"src":"1285:58:6"},{"body":{"id":1261,"nodeType":"Block","src":"1624:2:6","statements":[]},"documentation":{"id":1252,"nodeType":"StructuredDocumentation","src":"1349:220:6","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."},"id":1262,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1257,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"1613:4:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":1258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1619:3:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":1259,"kind":"baseConstructorSpecifier","modifierName":{"id":1256,"name":"EIP712","nameLocations":["1606:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":3227,"src":"1606:6:6"},"nodeType":"ModifierInvocation","src":"1606:17:6"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1254,"mutability":"mutable","name":"name","nameLocation":"1600:4:6","nodeType":"VariableDeclaration","scope":1262,"src":"1586:18:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1253,"name":"string","nodeType":"ElementaryTypeName","src":"1586:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1585:20:6"},"returnParameters":{"id":1260,"nodeType":"ParameterList","parameters":[],"src":"1624:0:6"},"scope":1367,"src":"1574:52:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1414],"body":{"id":1338,"nodeType":"Block","src":"1869:483:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1280,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1883:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1889:9:6","memberName":"timestamp","nodeType":"MemberAccess","src":"1883:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1282,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"1901:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1883:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1289,"nodeType":"IfStatement","src":"1879:97:6","trueBody":{"id":1288,"nodeType":"Block","src":"1911:65:6","statements":[{"errorCall":{"arguments":[{"id":1285,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"1956:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1284,"name":"ERC2612ExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"1932:23:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1932:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1287,"nodeType":"RevertStatement","src":"1925:40:6"}]}},{"assignments":[1291],"declarations":[{"constant":false,"id":1291,"mutability":"mutable","name":"structHash","nameLocation":"1994:10:6","nodeType":"VariableDeclaration","scope":1338,"src":"1986:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1290,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1986:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1305,"initialValue":{"arguments":[{"arguments":[{"id":1295,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"2028:15:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1296,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"2045:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1297,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"2052:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"2061:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1300,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"2078:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1299,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"2068:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2068:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1302,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"2086:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1293,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2017:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2021:6:6","memberName":"encode","nodeType":"MemberAccess","src":"2017:10:6","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2017:78:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1292,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2007:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2007:89:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1986:110:6"},{"assignments":[1307],"declarations":[{"constant":false,"id":1307,"mutability":"mutable","name":"hash","nameLocation":"2115:4:6","nodeType":"VariableDeclaration","scope":1338,"src":"2107:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1306,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2107:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1311,"initialValue":{"arguments":[{"id":1309,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"2139:10:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1308,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"2122:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2122:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2107:43:6"},{"assignments":[1313],"declarations":[{"constant":false,"id":1313,"mutability":"mutable","name":"signer","nameLocation":"2169:6:6","nodeType":"VariableDeclaration","scope":1338,"src":"2161:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1312,"name":"address","nodeType":"ElementaryTypeName","src":"2161:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1321,"initialValue":{"arguments":[{"id":1316,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"2192:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1317,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"2198:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1318,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"2201:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1319,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"2204:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1314,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"2178:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3000_$","typeString":"type(library ECDSA)"}},"id":1315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2184:7:6","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":2950,"src":"2178:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2161:45:6"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1322,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"2220:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1323,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"2230:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2220:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1331,"nodeType":"IfStatement","src":"2216:88:6","trueBody":{"id":1330,"nodeType":"Block","src":"2237:67:6","statements":[{"errorCall":{"arguments":[{"id":1326,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"2279:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1327,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"2287:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1325,"name":"ERC2612InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"2258:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2258:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1329,"nodeType":"RevertStatement","src":"2251:42:6"}]}},{"expression":{"arguments":[{"id":1333,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"2323:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1334,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"2330:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"2339:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1332,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1026,1086],"referencedDeclaration":1026,"src":"2314:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2314:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1337,"nodeType":"ExpressionStatement","src":"2314:31:6"}]},"documentation":{"id":1263,"nodeType":"StructuredDocumentation","src":"1632:43:6","text":" @inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":1339,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1689:6:6","nodeType":"FunctionDefinition","parameters":{"id":1278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1265,"mutability":"mutable","name":"owner","nameLocation":"1713:5:6","nodeType":"VariableDeclaration","scope":1339,"src":"1705:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1264,"name":"address","nodeType":"ElementaryTypeName","src":"1705:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1267,"mutability":"mutable","name":"spender","nameLocation":"1736:7:6","nodeType":"VariableDeclaration","scope":1339,"src":"1728:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1266,"name":"address","nodeType":"ElementaryTypeName","src":"1728:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1269,"mutability":"mutable","name":"value","nameLocation":"1761:5:6","nodeType":"VariableDeclaration","scope":1339,"src":"1753:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1268,"name":"uint256","nodeType":"ElementaryTypeName","src":"1753:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1271,"mutability":"mutable","name":"deadline","nameLocation":"1784:8:6","nodeType":"VariableDeclaration","scope":1339,"src":"1776:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1270,"name":"uint256","nodeType":"ElementaryTypeName","src":"1776:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1273,"mutability":"mutable","name":"v","nameLocation":"1808:1:6","nodeType":"VariableDeclaration","scope":1339,"src":"1802:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1272,"name":"uint8","nodeType":"ElementaryTypeName","src":"1802:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1275,"mutability":"mutable","name":"r","nameLocation":"1827:1:6","nodeType":"VariableDeclaration","scope":1339,"src":"1819:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1274,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1819:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1277,"mutability":"mutable","name":"s","nameLocation":"1846:1:6","nodeType":"VariableDeclaration","scope":1339,"src":"1838:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1276,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1838:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1695:158:6"},"returnParameters":{"id":1279,"nodeType":"ParameterList","parameters":[],"src":"1869:0:6"},"scope":1367,"src":"1680:672:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1422,2029],"body":{"id":1355,"nodeType":"Block","src":"2506:43:6","statements":[{"expression":{"arguments":[{"id":1352,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"2536:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1350,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2523:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Permit_$1367_$","typeString":"type(contract super ERC20Permit)"}},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2529:6:6","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":2029,"src":"2523:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2523:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1349,"id":1354,"nodeType":"Return","src":"2516:26:6"}]},"documentation":{"id":1340,"nodeType":"StructuredDocumentation","src":"2358:43:6","text":" @inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":1356,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2415:6:6","nodeType":"FunctionDefinition","overrides":{"id":1346,"nodeType":"OverrideSpecifier","overrides":[{"id":1344,"name":"IERC20Permit","nameLocations":["2466:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":1429,"src":"2466:12:6"},{"id":1345,"name":"Nonces","nameLocations":["2480:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":2070,"src":"2480:6:6"}],"src":"2457:30:6"},"parameters":{"id":1343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1342,"mutability":"mutable","name":"owner","nameLocation":"2430:5:6","nodeType":"VariableDeclaration","scope":1356,"src":"2422:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1341,"name":"address","nodeType":"ElementaryTypeName","src":"2422:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2421:15:6"},"returnParameters":{"id":1349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1356,"src":"2497:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1347,"name":"uint256","nodeType":"ElementaryTypeName","src":"2497:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2496:9:6"},"scope":1367,"src":"2406:143:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1428],"body":{"id":1365,"nodeType":"Block","src":"2724:44:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1362,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"2741:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2741:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1361,"id":1364,"nodeType":"Return","src":"2734:27:6"}]},"documentation":{"id":1357,"nodeType":"StructuredDocumentation","src":"2555:43:6","text":" @inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":1366,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2665:16:6","nodeType":"FunctionDefinition","parameters":{"id":1358,"nodeType":"ParameterList","parameters":[],"src":"2681:2:6"},"returnParameters":{"id":1361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1360,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1366,"src":"2715:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1359,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2715:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2714:9:6"},"scope":1367,"src":"2656:112:6","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":1368,"src":"896:1874:6","usedErrors":[495,500,505,514,519,524,1244,1251,2012,2084,2086,2663,2668,2673],"usedEvents":[463,1147,1156]}],"src":"122:2649:6"},"id":6},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1213],"IERC20Metadata":[1393]},"id":1394,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1369,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1371,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1394,"sourceUnit":1214,"src":"151:37:7","symbolAliases":[{"foreign":{"id":1370,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"159:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1373,"name":"IERC20","nameLocations":["305:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"305:6:7"},"id":1374,"nodeType":"InheritanceSpecifier","src":"305:6:7"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1372,"nodeType":"StructuredDocumentation","src":"190:86:7","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":1393,"linearizedBaseContracts":[1393,1213],"name":"IERC20Metadata","nameLocation":"287:14:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1375,"nodeType":"StructuredDocumentation","src":"318:54:7","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1380,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:7","nodeType":"FunctionDefinition","parameters":{"id":1376,"nodeType":"ParameterList","parameters":[],"src":"390:2:7"},"returnParameters":{"id":1379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1380,"src":"416:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1377,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:7"},"scope":1393,"src":"377:54:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1381,"nodeType":"StructuredDocumentation","src":"437:56:7","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1386,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:7","nodeType":"FunctionDefinition","parameters":{"id":1382,"nodeType":"ParameterList","parameters":[],"src":"513:2:7"},"returnParameters":{"id":1385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1386,"src":"539:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1383,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:7"},"scope":1393,"src":"498:56:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1387,"nodeType":"StructuredDocumentation","src":"560:65:7","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1392,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:7","nodeType":"FunctionDefinition","parameters":{"id":1388,"nodeType":"ParameterList","parameters":[],"src":"647:2:7"},"returnParameters":{"id":1391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1392,"src":"673:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1389,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:7"},"scope":1393,"src":"630:50:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1394,"src":"277:405:7","usedErrors":[],"usedEvents":[1147,1156]}],"src":"125:558:7"},"id":7},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1429]},"id":1430,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1395,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1396,"nodeType":"StructuredDocumentation","src":"149:1963:8","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":1429,"linearizedBaseContracts":[1429],"name":"IERC20Permit","nameLocation":"2123:12:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1397,"nodeType":"StructuredDocumentation","src":"2142:850:8","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":1414,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3006:6:8","nodeType":"FunctionDefinition","parameters":{"id":1412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1399,"mutability":"mutable","name":"owner","nameLocation":"3030:5:8","nodeType":"VariableDeclaration","scope":1414,"src":"3022:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1398,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1401,"mutability":"mutable","name":"spender","nameLocation":"3053:7:8","nodeType":"VariableDeclaration","scope":1414,"src":"3045:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1400,"name":"address","nodeType":"ElementaryTypeName","src":"3045:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1403,"mutability":"mutable","name":"value","nameLocation":"3078:5:8","nodeType":"VariableDeclaration","scope":1414,"src":"3070:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1402,"name":"uint256","nodeType":"ElementaryTypeName","src":"3070:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1405,"mutability":"mutable","name":"deadline","nameLocation":"3101:8:8","nodeType":"VariableDeclaration","scope":1414,"src":"3093:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1404,"name":"uint256","nodeType":"ElementaryTypeName","src":"3093:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1407,"mutability":"mutable","name":"v","nameLocation":"3125:1:8","nodeType":"VariableDeclaration","scope":1414,"src":"3119:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1406,"name":"uint8","nodeType":"ElementaryTypeName","src":"3119:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1409,"mutability":"mutable","name":"r","nameLocation":"3144:1:8","nodeType":"VariableDeclaration","scope":1414,"src":"3136:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1408,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3136:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1411,"mutability":"mutable","name":"s","nameLocation":"3163:1:8","nodeType":"VariableDeclaration","scope":1414,"src":"3155:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1410,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3155:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3012:158:8"},"returnParameters":{"id":1413,"nodeType":"ParameterList","parameters":[],"src":"3179:0:8"},"scope":1429,"src":"2997:183:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1415,"nodeType":"StructuredDocumentation","src":"3186:294:8","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1422,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3494:6:8","nodeType":"FunctionDefinition","parameters":{"id":1418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1417,"mutability":"mutable","name":"owner","nameLocation":"3509:5:8","nodeType":"VariableDeclaration","scope":1422,"src":"3501:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1416,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3500:15:8"},"returnParameters":{"id":1421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1422,"src":"3539:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1419,"name":"uint256","nodeType":"ElementaryTypeName","src":"3539:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3538:9:8"},"scope":1429,"src":"3485:63:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1423,"nodeType":"StructuredDocumentation","src":"3554:128:8","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1428,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3749:16:8","nodeType":"FunctionDefinition","parameters":{"id":1424,"nodeType":"ParameterList","parameters":[],"src":"3765:2:8"},"returnParameters":{"id":1427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1426,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1428,"src":"3791:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1425,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3791:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3790:9:8"},"scope":1429,"src":"3740:60:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1430,"src":"2113:1689:8","usedErrors":[],"usedEvents":[]}],"src":"123:3680:8"},"id":8},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[1972],"IERC20":[1213],"IERC20Permit":[1429],"SafeERC20":[1719]},"id":1720,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1431,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1433,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1720,"sourceUnit":1214,"src":"141:37:9","symbolAliases":[{"foreign":{"id":1432,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"149:6:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"../extensions/IERC20Permit.sol","id":1435,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1720,"sourceUnit":1430,"src":"179:60:9","symbolAliases":[{"foreign":{"id":1434,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"187:12:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":1437,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1720,"sourceUnit":1973,"src":"240:51:9","symbolAliases":[{"foreign":{"id":1436,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"248:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":1438,"nodeType":"StructuredDocumentation","src":"293:457:9","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":1719,"linearizedBaseContracts":[1719],"name":"SafeERC20","nameLocation":"759:9:9","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1441,"libraryName":{"id":1439,"name":"Address","nameLocations":["781:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":1972,"src":"781:7:9"},"nodeType":"UsingForDirective","src":"775:26:9","typeName":{"id":1440,"name":"address","nodeType":"ElementaryTypeName","src":"793:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"documentation":{"id":1442,"nodeType":"StructuredDocumentation","src":"807:64:9","text":" @dev An operation with an ERC20 token failed."},"errorSelector":"5274afe7","id":1446,"name":"SafeERC20FailedOperation","nameLocation":"882:24:9","nodeType":"ErrorDefinition","parameters":{"id":1445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1444,"mutability":"mutable","name":"token","nameLocation":"915:5:9","nodeType":"VariableDeclaration","scope":1446,"src":"907:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1443,"name":"address","nodeType":"ElementaryTypeName","src":"907:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"906:15:9"},"src":"876:46:9"},{"documentation":{"id":1447,"nodeType":"StructuredDocumentation","src":"928:71:9","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":1455,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"1010:32:9","nodeType":"ErrorDefinition","parameters":{"id":1454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1449,"mutability":"mutable","name":"spender","nameLocation":"1051:7:9","nodeType":"VariableDeclaration","scope":1455,"src":"1043:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1448,"name":"address","nodeType":"ElementaryTypeName","src":"1043:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1451,"mutability":"mutable","name":"currentAllowance","nameLocation":"1068:16:9","nodeType":"VariableDeclaration","scope":1455,"src":"1060:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1450,"name":"uint256","nodeType":"ElementaryTypeName","src":"1060:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1453,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1094:17:9","nodeType":"VariableDeclaration","scope":1455,"src":"1086:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1452,"name":"uint256","nodeType":"ElementaryTypeName","src":"1086:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:70:9"},"src":"1004:109:9"},{"body":{"id":1478,"nodeType":"Block","src":"1375:88:9","statements":[{"expression":{"arguments":[{"id":1467,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"1405:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1470,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"1427:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"}},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1433:8:9","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1180,"src":"1427:14:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1472,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"1444:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"1448:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1474,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1443:11:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1468,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1412:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1416:10:9","memberName":"encodeCall","nodeType":"MemberAccess","src":"1412:14:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1412:43:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1466,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"1385:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1213_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:71:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1477,"nodeType":"ExpressionStatement","src":"1385:71:9"}]},"documentation":{"id":1456,"nodeType":"StructuredDocumentation","src":"1119:179:9","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1479,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1312:12:9","nodeType":"FunctionDefinition","parameters":{"id":1464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1459,"mutability":"mutable","name":"token","nameLocation":"1332:5:9","nodeType":"VariableDeclaration","scope":1479,"src":"1325:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"},"typeName":{"id":1458,"nodeType":"UserDefinedTypeName","pathNode":{"id":1457,"name":"IERC20","nameLocations":["1325:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"1325:6:9"},"referencedDeclaration":1213,"src":"1325:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1461,"mutability":"mutable","name":"to","nameLocation":"1347:2:9","nodeType":"VariableDeclaration","scope":1479,"src":"1339:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1460,"name":"address","nodeType":"ElementaryTypeName","src":"1339:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1463,"mutability":"mutable","name":"value","nameLocation":"1359:5:9","nodeType":"VariableDeclaration","scope":1479,"src":"1351:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1462,"name":"uint256","nodeType":"ElementaryTypeName","src":"1351:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:41:9"},"returnParameters":{"id":1465,"nodeType":"ParameterList","parameters":[],"src":"1375:0:9"},"scope":1719,"src":"1303:160:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1505,"nodeType":"Block","src":"1792:98:9","statements":[{"expression":{"arguments":[{"id":1493,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"1822:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1496,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"1844:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"}},"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1850:12:9","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1212,"src":"1844:18:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":1498,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"1865:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1499,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"1871:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"1875:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1501,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1864:17:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":1494,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1829:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1833:10:9","memberName":"encodeCall","nodeType":"MemberAccess","src":"1829:14:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1829:53:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1492,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"1802:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1213_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1802:81:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1504,"nodeType":"ExpressionStatement","src":"1802:81:9"}]},"documentation":{"id":1480,"nodeType":"StructuredDocumentation","src":"1469:228:9","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":1506,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1711:16:9","nodeType":"FunctionDefinition","parameters":{"id":1490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1483,"mutability":"mutable","name":"token","nameLocation":"1735:5:9","nodeType":"VariableDeclaration","scope":1506,"src":"1728:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"},"typeName":{"id":1482,"nodeType":"UserDefinedTypeName","pathNode":{"id":1481,"name":"IERC20","nameLocations":["1728:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"1728:6:9"},"referencedDeclaration":1213,"src":"1728:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1485,"mutability":"mutable","name":"from","nameLocation":"1750:4:9","nodeType":"VariableDeclaration","scope":1506,"src":"1742:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1484,"name":"address","nodeType":"ElementaryTypeName","src":"1742:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1487,"mutability":"mutable","name":"to","nameLocation":"1764:2:9","nodeType":"VariableDeclaration","scope":1506,"src":"1756:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1486,"name":"address","nodeType":"ElementaryTypeName","src":"1756:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1489,"mutability":"mutable","name":"value","nameLocation":"1776:5:9","nodeType":"VariableDeclaration","scope":1506,"src":"1768:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1488,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1727:55:9"},"returnParameters":{"id":1491,"nodeType":"ParameterList","parameters":[],"src":"1792:0:9"},"scope":1719,"src":"1702:188:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1536,"nodeType":"Block","src":"2167:139:9","statements":[{"assignments":[1518],"declarations":[{"constant":false,"id":1518,"mutability":"mutable","name":"oldAllowance","nameLocation":"2185:12:9","nodeType":"VariableDeclaration","scope":1536,"src":"2177:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1517,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1527,"initialValue":{"arguments":[{"arguments":[{"id":1523,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2224:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1719","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1719","typeString":"library SafeERC20"}],"id":1522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2216:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1521,"name":"address","nodeType":"ElementaryTypeName","src":"2216:7:9","typeDescriptions":{}}},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2216:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1525,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"2231:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1519,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"2200:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"}},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2206:9:9","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1190,"src":"2200:15:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2200:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:62:9"},{"expression":{"arguments":[{"id":1529,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"2262:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"}},{"id":1530,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"2269:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1531,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"2278:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"2293:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2278:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1528,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"2249:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1213_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2249:50:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1535,"nodeType":"ExpressionStatement","src":"2249:50:9"}]},"documentation":{"id":1507,"nodeType":"StructuredDocumentation","src":"1896:180:9","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1537,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2090:21:9","nodeType":"FunctionDefinition","parameters":{"id":1515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1510,"mutability":"mutable","name":"token","nameLocation":"2119:5:9","nodeType":"VariableDeclaration","scope":1537,"src":"2112:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"},"typeName":{"id":1509,"nodeType":"UserDefinedTypeName","pathNode":{"id":1508,"name":"IERC20","nameLocations":["2112:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"2112:6:9"},"referencedDeclaration":1213,"src":"2112:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1512,"mutability":"mutable","name":"spender","nameLocation":"2134:7:9","nodeType":"VariableDeclaration","scope":1537,"src":"2126:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1511,"name":"address","nodeType":"ElementaryTypeName","src":"2126:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1514,"mutability":"mutable","name":"value","nameLocation":"2151:5:9","nodeType":"VariableDeclaration","scope":1537,"src":"2143:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1513,"name":"uint256","nodeType":"ElementaryTypeName","src":"2143:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2111:46:9"},"returnParameters":{"id":1516,"nodeType":"ParameterList","parameters":[],"src":"2167:0:9"},"scope":1719,"src":"2081:225:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1579,"nodeType":"Block","src":"2607:370:9","statements":[{"id":1578,"nodeType":"UncheckedBlock","src":"2617:354:9","statements":[{"assignments":[1549],"declarations":[{"constant":false,"id":1549,"mutability":"mutable","name":"currentAllowance","nameLocation":"2649:16:9","nodeType":"VariableDeclaration","scope":1578,"src":"2641:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1548,"name":"uint256","nodeType":"ElementaryTypeName","src":"2641:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1558,"initialValue":{"arguments":[{"arguments":[{"id":1554,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2692:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1719","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1719","typeString":"library SafeERC20"}],"id":1553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2684:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1552,"name":"address","nodeType":"ElementaryTypeName","src":"2684:7:9","typeDescriptions":{}}},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2684:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1556,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"2699:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1550,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"2668:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"}},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2674:9:9","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1190,"src":"2668:15:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2668:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2641:66:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1559,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"2725:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1560,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"2744:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2725:36:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1569,"nodeType":"IfStatement","src":"2721:160:9","trueBody":{"id":1568,"nodeType":"Block","src":"2763:118:9","statements":[{"errorCall":{"arguments":[{"id":1563,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"2821:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1564,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"2830:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1565,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"2848:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1562,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"2788:32:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2788:78:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1567,"nodeType":"RevertStatement","src":"2781:85:9"}]}},{"expression":{"arguments":[{"id":1571,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"2907:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"}},{"id":1572,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"2914:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1573,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"2923:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1574,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"2942:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2923:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1570,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"2894:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1213_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2894:66:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1577,"nodeType":"ExpressionStatement","src":"2894:66:9"}]}]},"documentation":{"id":1538,"nodeType":"StructuredDocumentation","src":"2312:192:9","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."},"id":1580,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"2518:21:9","nodeType":"FunctionDefinition","parameters":{"id":1546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1541,"mutability":"mutable","name":"token","nameLocation":"2547:5:9","nodeType":"VariableDeclaration","scope":1580,"src":"2540:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"},"typeName":{"id":1540,"nodeType":"UserDefinedTypeName","pathNode":{"id":1539,"name":"IERC20","nameLocations":["2540:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"2540:6:9"},"referencedDeclaration":1213,"src":"2540:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1543,"mutability":"mutable","name":"spender","nameLocation":"2562:7:9","nodeType":"VariableDeclaration","scope":1580,"src":"2554:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1542,"name":"address","nodeType":"ElementaryTypeName","src":"2554:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1545,"mutability":"mutable","name":"requestedDecrease","nameLocation":"2579:17:9","nodeType":"VariableDeclaration","scope":1580,"src":"2571:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1544,"name":"uint256","nodeType":"ElementaryTypeName","src":"2571:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2539:58:9"},"returnParameters":{"id":1547,"nodeType":"ParameterList","parameters":[],"src":"2607:0:9"},"scope":1719,"src":"2509:468:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1626,"nodeType":"Block","src":"3373:303:9","statements":[{"assignments":[1592],"declarations":[{"constant":false,"id":1592,"mutability":"mutable","name":"approvalCall","nameLocation":"3396:12:9","nodeType":"VariableDeclaration","scope":1626,"src":"3383:25:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1591,"name":"bytes","nodeType":"ElementaryTypeName","src":"3383:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1601,"initialValue":{"arguments":[{"expression":{"id":1595,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"3426:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"}},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3432:7:9","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1200,"src":"3426:13:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1597,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"3442:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"3451:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1599,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3441:16:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1593,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3411:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3415:10:9","memberName":"encodeCall","nodeType":"MemberAccess","src":"3411:14:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3411:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3383:75:9"},{"condition":{"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3473:45:9","subExpression":{"arguments":[{"id":1603,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"3498:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"}},{"id":1604,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"3505:12:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1602,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"3474:23:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1213_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3474:44:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1625,"nodeType":"IfStatement","src":"3469:201:9","trueBody":{"id":1624,"nodeType":"Block","src":"3520:150:9","statements":[{"expression":{"arguments":[{"id":1608,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"3554:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1611,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"3576:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"}},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3582:7:9","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1200,"src":"3576:13:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1613,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"3592:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3601:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1615,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3591:12:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":1609,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3561:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3565:10:9","memberName":"encodeCall","nodeType":"MemberAccess","src":"3561:14:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3561:43:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1607,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"3534:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1213_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:71:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1618,"nodeType":"ExpressionStatement","src":"3534:71:9"},{"expression":{"arguments":[{"id":1620,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"3639:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"}},{"id":1621,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"3646:12:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1619,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"3619:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1213_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3619:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1623,"nodeType":"ExpressionStatement","src":"3619:40:9"}]}}]},"documentation":{"id":1581,"nodeType":"StructuredDocumentation","src":"2983:308:9","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."},"id":1627,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"3305:12:9","nodeType":"FunctionDefinition","parameters":{"id":1589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1584,"mutability":"mutable","name":"token","nameLocation":"3325:5:9","nodeType":"VariableDeclaration","scope":1627,"src":"3318:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"},"typeName":{"id":1583,"nodeType":"UserDefinedTypeName","pathNode":{"id":1582,"name":"IERC20","nameLocations":["3318:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"3318:6:9"},"referencedDeclaration":1213,"src":"3318:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1586,"mutability":"mutable","name":"spender","nameLocation":"3340:7:9","nodeType":"VariableDeclaration","scope":1627,"src":"3332:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1585,"name":"address","nodeType":"ElementaryTypeName","src":"3332:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1588,"mutability":"mutable","name":"value","nameLocation":"3357:5:9","nodeType":"VariableDeclaration","scope":1627,"src":"3349:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1587,"name":"uint256","nodeType":"ElementaryTypeName","src":"3349:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3317:46:9"},"returnParameters":{"id":1590,"nodeType":"ParameterList","parameters":[],"src":"3373:0:9"},"scope":1719,"src":"3296:380:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1668,"nodeType":"Block","src":"4129:559:9","statements":[{"assignments":[1637],"declarations":[{"constant":false,"id":1637,"mutability":"mutable","name":"returndata","nameLocation":"4491:10:9","nodeType":"VariableDeclaration","scope":1668,"src":"4478:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1636,"name":"bytes","nodeType":"ElementaryTypeName","src":"4478:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1645,"initialValue":{"arguments":[{"id":1643,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"4532:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1640,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"4512:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"}],"id":1639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4504:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1638,"name":"address","nodeType":"ElementaryTypeName","src":"4504:7:9","typeDescriptions":{}}},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4504:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4519:12:9","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":1793,"src":"4504:27:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4504:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4478:59:9"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1646,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"4551:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4562:6:9","memberName":"length","nodeType":"MemberAccess","src":"4551:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4572:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4551:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4577:31:9","subExpression":{"arguments":[{"id":1652,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"4589:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1653,"name":"bool","nodeType":"ElementaryTypeName","src":"4602:4:9","typeDescriptions":{}}}],"id":1655,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1650,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4578:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4582:6:9","memberName":"decode","nodeType":"MemberAccess","src":"4578:10:9","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4578:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4551:57:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1667,"nodeType":"IfStatement","src":"4547:135:9","trueBody":{"id":1666,"nodeType":"Block","src":"4610:72:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1662,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"4664:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"}],"id":1661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4656:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1660,"name":"address","nodeType":"ElementaryTypeName","src":"4656:7:9","typeDescriptions":{}}},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4656:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1659,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"4631:24:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4631:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1665,"nodeType":"RevertStatement","src":"4624:47:9"}]}}]},"documentation":{"id":1628,"nodeType":"StructuredDocumentation","src":"3682:372:9","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":1669,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"4068:19:9","nodeType":"FunctionDefinition","parameters":{"id":1634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1631,"mutability":"mutable","name":"token","nameLocation":"4095:5:9","nodeType":"VariableDeclaration","scope":1669,"src":"4088:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"},"typeName":{"id":1630,"nodeType":"UserDefinedTypeName","pathNode":{"id":1629,"name":"IERC20","nameLocations":["4088:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"4088:6:9"},"referencedDeclaration":1213,"src":"4088:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1633,"mutability":"mutable","name":"data","nameLocation":"4115:4:9","nodeType":"VariableDeclaration","scope":1669,"src":"4102:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1632,"name":"bytes","nodeType":"ElementaryTypeName","src":"4102:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4087:33:9"},"returnParameters":{"id":1635,"nodeType":"ParameterList","parameters":[],"src":"4129:0:9"},"scope":1719,"src":"4059:629:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1717,"nodeType":"Block","src":"5278:489:9","statements":[{"assignments":[1681,1683],"declarations":[{"constant":false,"id":1681,"mutability":"mutable","name":"success","nameLocation":"5579:7:9","nodeType":"VariableDeclaration","scope":1717,"src":"5574:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1680,"name":"bool","nodeType":"ElementaryTypeName","src":"5574:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1683,"mutability":"mutable","name":"returndata","nameLocation":"5601:10:9","nodeType":"VariableDeclaration","scope":1717,"src":"5588:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1682,"name":"bytes","nodeType":"ElementaryTypeName","src":"5588:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1691,"initialValue":{"arguments":[{"id":1689,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"5635:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1686,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"5623:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"}],"id":1685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5615:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1684,"name":"address","nodeType":"ElementaryTypeName","src":"5615:7:9","typeDescriptions":{}}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5615:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5630:4:9","memberName":"call","nodeType":"MemberAccess","src":"5615:19:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5615:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5573:67:9"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1692,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"5657:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1693,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"5669:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5680:6:9","memberName":"length","nodeType":"MemberAccess","src":"5669:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5690:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5669:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1699,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"5706:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5719:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1700,"name":"bool","nodeType":"ElementaryTypeName","src":"5719:4:9","typeDescriptions":{}}}],"id":1702,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5718:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1697,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5695:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5699:6:9","memberName":"decode","nodeType":"MemberAccess","src":"5695:10:9","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5695:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5669:56:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1705,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5668:58:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5657:69:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":1709,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"5738:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"}],"id":1708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5730:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1707,"name":"address","nodeType":"ElementaryTypeName","src":"5730:7:9","typeDescriptions":{}}},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5730:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5745:4:9","memberName":"code","nodeType":"MemberAccess","src":"5730:19:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5750:6:9","memberName":"length","nodeType":"MemberAccess","src":"5730:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5759:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5730:30:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5657:103:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1679,"id":1716,"nodeType":"Return","src":"5650:110:9"}]},"documentation":{"id":1670,"nodeType":"StructuredDocumentation","src":"4694:490:9","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."},"id":1718,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"5198:23:9","nodeType":"FunctionDefinition","parameters":{"id":1676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1673,"mutability":"mutable","name":"token","nameLocation":"5229:5:9","nodeType":"VariableDeclaration","scope":1718,"src":"5222:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"},"typeName":{"id":1672,"nodeType":"UserDefinedTypeName","pathNode":{"id":1671,"name":"IERC20","nameLocations":["5222:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"5222:6:9"},"referencedDeclaration":1213,"src":"5222:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1213","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1675,"mutability":"mutable","name":"data","nameLocation":"5249:4:9","nodeType":"VariableDeclaration","scope":1718,"src":"5236:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1674,"name":"bytes","nodeType":"ElementaryTypeName","src":"5236:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5221:33:9"},"returnParameters":{"id":1679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1678,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1718,"src":"5272:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1677,"name":"bool","nodeType":"ElementaryTypeName","src":"5272:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5271:6:9"},"scope":1719,"src":"5189:578:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1720,"src":"751:5018:9","usedErrors":[1446,1455],"usedEvents":[]}],"src":"115:5655:9"},"id":9},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1972]},"id":1973,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1721,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1722,"nodeType":"StructuredDocumentation","src":"127:67:10","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1972,"linearizedBaseContracts":[1972],"name":"Address","nameLocation":"203:7:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1723,"nodeType":"StructuredDocumentation","src":"217:94:10","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cd786059","id":1727,"name":"AddressInsufficientBalance","nameLocation":"322:26:10","nodeType":"ErrorDefinition","parameters":{"id":1726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1725,"mutability":"mutable","name":"account","nameLocation":"357:7:10","nodeType":"VariableDeclaration","scope":1727,"src":"349:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1724,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:17:10"},"src":"316:50:10"},{"documentation":{"id":1728,"nodeType":"StructuredDocumentation","src":"372:75:10","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":1732,"name":"AddressEmptyCode","nameLocation":"458:16:10","nodeType":"ErrorDefinition","parameters":{"id":1731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1730,"mutability":"mutable","name":"target","nameLocation":"483:6:10","nodeType":"VariableDeclaration","scope":1732,"src":"475:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1729,"name":"address","nodeType":"ElementaryTypeName","src":"475:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"474:16:10"},"src":"452:39:10"},{"documentation":{"id":1733,"nodeType":"StructuredDocumentation","src":"497:89:10","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"1425ea42","id":1735,"name":"FailedInnerCall","nameLocation":"597:15:10","nodeType":"ErrorDefinition","parameters":{"id":1734,"nodeType":"ParameterList","parameters":[],"src":"612:2:10"},"src":"591:24:10"},{"body":{"id":1775,"nodeType":"Block","src":"1602:260:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1745,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1624:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1972","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1972","typeString":"library Address"}],"id":1744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1616:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1743,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:10","typeDescriptions":{}}},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1616:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1630:7:10","memberName":"balance","nodeType":"MemberAccess","src":"1616:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1748,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"1640:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1616:30:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1758,"nodeType":"IfStatement","src":"1612:109:10","trueBody":{"id":1757,"nodeType":"Block","src":"1648:73:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1753,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1704:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1972","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1972","typeString":"library Address"}],"id":1752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1696:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1751,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:10","typeDescriptions":{}}},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1750,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"1669:26:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1669:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1756,"nodeType":"RevertStatement","src":"1662:48:10"}]}},{"assignments":[1760,null],"declarations":[{"constant":false,"id":1760,"mutability":"mutable","name":"success","nameLocation":"1737:7:10","nodeType":"VariableDeclaration","scope":1775,"src":"1732:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1759,"name":"bool","nodeType":"ElementaryTypeName","src":"1732:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1767,"initialValue":{"arguments":[{"hexValue":"","id":1765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1780:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1761,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"1750:9:10","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1760:4:10","memberName":"call","nodeType":"MemberAccess","src":"1750:14:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1763,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"1772:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1750:29:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1731:52:10"},{"condition":{"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1797:8:10","subExpression":{"id":1768,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"1798:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1774,"nodeType":"IfStatement","src":"1793:63:10","trueBody":{"id":1773,"nodeType":"Block","src":"1807:49:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1770,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"1828:15:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1772,"nodeType":"RevertStatement","src":"1821:24:10"}]}}]},"documentation":{"id":1736,"nodeType":"StructuredDocumentation","src":"621:905:10","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1776,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1540:9:10","nodeType":"FunctionDefinition","parameters":{"id":1741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1738,"mutability":"mutable","name":"recipient","nameLocation":"1566:9:10","nodeType":"VariableDeclaration","scope":1776,"src":"1550:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1737,"name":"address","nodeType":"ElementaryTypeName","src":"1550:15:10","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1740,"mutability":"mutable","name":"amount","nameLocation":"1585:6:10","nodeType":"VariableDeclaration","scope":1776,"src":"1577:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1739,"name":"uint256","nodeType":"ElementaryTypeName","src":"1577:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:43:10"},"returnParameters":{"id":1742,"nodeType":"ParameterList","parameters":[],"src":"1602:0:10"},"scope":1972,"src":"1531:331:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1792,"nodeType":"Block","src":"2794:62:10","statements":[{"expression":{"arguments":[{"id":1787,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"2833:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1788,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"2841:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2847:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1786,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"2811:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2811:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1785,"id":1791,"nodeType":"Return","src":"2804:45:10"}]},"documentation":{"id":1777,"nodeType":"StructuredDocumentation","src":"1868:832:10","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":1793,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2714:12:10","nodeType":"FunctionDefinition","parameters":{"id":1782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1779,"mutability":"mutable","name":"target","nameLocation":"2735:6:10","nodeType":"VariableDeclaration","scope":1793,"src":"2727:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1778,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1781,"mutability":"mutable","name":"data","nameLocation":"2756:4:10","nodeType":"VariableDeclaration","scope":1793,"src":"2743:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1780,"name":"bytes","nodeType":"ElementaryTypeName","src":"2743:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2726:35:10"},"returnParameters":{"id":1785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1784,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1793,"src":"2780:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1783,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2779:14:10"},"scope":1972,"src":"2705:151:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1838,"nodeType":"Block","src":"3293:279:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1807,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3315:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1972","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1972","typeString":"library Address"}],"id":1806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3307:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1805,"name":"address","nodeType":"ElementaryTypeName","src":"3307:7:10","typeDescriptions":{}}},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3307:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3321:7:10","memberName":"balance","nodeType":"MemberAccess","src":"3307:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"3331:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3307:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1820,"nodeType":"IfStatement","src":"3303:108:10","trueBody":{"id":1819,"nodeType":"Block","src":"3338:73:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1815,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3394:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1972","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1972","typeString":"library Address"}],"id":1814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3386:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1813,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:10","typeDescriptions":{}}},"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1812,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"3359:26:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3359:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1818,"nodeType":"RevertStatement","src":"3352:48:10"}]}},{"assignments":[1822,1824],"declarations":[{"constant":false,"id":1822,"mutability":"mutable","name":"success","nameLocation":"3426:7:10","nodeType":"VariableDeclaration","scope":1838,"src":"3421:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1821,"name":"bool","nodeType":"ElementaryTypeName","src":"3421:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1824,"mutability":"mutable","name":"returndata","nameLocation":"3448:10:10","nodeType":"VariableDeclaration","scope":1838,"src":"3435:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1823,"name":"bytes","nodeType":"ElementaryTypeName","src":"3435:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1831,"initialValue":{"arguments":[{"id":1829,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"3488:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1825,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"3462:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3469:4:10","memberName":"call","nodeType":"MemberAccess","src":"3462:11:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"3481:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3462:25:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3462:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3420:73:10"},{"expression":{"arguments":[{"id":1833,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"3537:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1834,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"3545:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1835,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"3554:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1832,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"3510:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3510:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1804,"id":1837,"nodeType":"Return","src":"3503:62:10"}]},"documentation":{"id":1794,"nodeType":"StructuredDocumentation","src":"2862:313:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":1839,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"3189:21:10","nodeType":"FunctionDefinition","parameters":{"id":1801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1796,"mutability":"mutable","name":"target","nameLocation":"3219:6:10","nodeType":"VariableDeclaration","scope":1839,"src":"3211:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1795,"name":"address","nodeType":"ElementaryTypeName","src":"3211:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1798,"mutability":"mutable","name":"data","nameLocation":"3240:4:10","nodeType":"VariableDeclaration","scope":1839,"src":"3227:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1797,"name":"bytes","nodeType":"ElementaryTypeName","src":"3227:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1800,"mutability":"mutable","name":"value","nameLocation":"3254:5:10","nodeType":"VariableDeclaration","scope":1839,"src":"3246:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1799,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3210:50:10"},"returnParameters":{"id":1804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1839,"src":"3279:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1802,"name":"bytes","nodeType":"ElementaryTypeName","src":"3279:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3278:14:10"},"scope":1972,"src":"3180:392:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1864,"nodeType":"Block","src":"3811:154:10","statements":[{"assignments":[1850,1852],"declarations":[{"constant":false,"id":1850,"mutability":"mutable","name":"success","nameLocation":"3827:7:10","nodeType":"VariableDeclaration","scope":1864,"src":"3822:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1849,"name":"bool","nodeType":"ElementaryTypeName","src":"3822:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1852,"mutability":"mutable","name":"returndata","nameLocation":"3849:10:10","nodeType":"VariableDeclaration","scope":1864,"src":"3836:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1851,"name":"bytes","nodeType":"ElementaryTypeName","src":"3836:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1857,"initialValue":{"arguments":[{"id":1855,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"3881:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1853,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"3863:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:10:10","memberName":"staticcall","nodeType":"MemberAccess","src":"3863:17:10","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3863:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3821:65:10"},{"expression":{"arguments":[{"id":1859,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"3930:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1860,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"3938:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1861,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"3947:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1858,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"3903:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1848,"id":1863,"nodeType":"Return","src":"3896:62:10"}]},"documentation":{"id":1840,"nodeType":"StructuredDocumentation","src":"3578:128:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":1865,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3720:18:10","nodeType":"FunctionDefinition","parameters":{"id":1845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1842,"mutability":"mutable","name":"target","nameLocation":"3747:6:10","nodeType":"VariableDeclaration","scope":1865,"src":"3739:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1841,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1844,"mutability":"mutable","name":"data","nameLocation":"3768:4:10","nodeType":"VariableDeclaration","scope":1865,"src":"3755:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1843,"name":"bytes","nodeType":"ElementaryTypeName","src":"3755:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3738:35:10"},"returnParameters":{"id":1848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1847,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1865,"src":"3797:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1846,"name":"bytes","nodeType":"ElementaryTypeName","src":"3797:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3796:14:10"},"scope":1972,"src":"3711:254:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1890,"nodeType":"Block","src":"4203:156:10","statements":[{"assignments":[1876,1878],"declarations":[{"constant":false,"id":1876,"mutability":"mutable","name":"success","nameLocation":"4219:7:10","nodeType":"VariableDeclaration","scope":1890,"src":"4214:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1875,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1878,"mutability":"mutable","name":"returndata","nameLocation":"4241:10:10","nodeType":"VariableDeclaration","scope":1890,"src":"4228:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1877,"name":"bytes","nodeType":"ElementaryTypeName","src":"4228:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1883,"initialValue":{"arguments":[{"id":1881,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"4275:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1879,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"4255:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4262:12:10","memberName":"delegatecall","nodeType":"MemberAccess","src":"4255:19:10","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4255:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4213:67:10"},{"expression":{"arguments":[{"id":1885,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"4324:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1886,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"4332:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1887,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"4341:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1884,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"4297:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1874,"id":1889,"nodeType":"Return","src":"4290:62:10"}]},"documentation":{"id":1866,"nodeType":"StructuredDocumentation","src":"3971:130:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":1891,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"4115:20:10","nodeType":"FunctionDefinition","parameters":{"id":1871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1868,"mutability":"mutable","name":"target","nameLocation":"4144:6:10","nodeType":"VariableDeclaration","scope":1891,"src":"4136:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1867,"name":"address","nodeType":"ElementaryTypeName","src":"4136:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1870,"mutability":"mutable","name":"data","nameLocation":"4165:4:10","nodeType":"VariableDeclaration","scope":1891,"src":"4152:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1869,"name":"bytes","nodeType":"ElementaryTypeName","src":"4152:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4135:35:10"},"returnParameters":{"id":1874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1873,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1891,"src":"4189:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1872,"name":"bytes","nodeType":"ElementaryTypeName","src":"4189:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4188:14:10"},"scope":1972,"src":"4106:253:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1930,"nodeType":"Block","src":"4783:424:10","statements":[{"condition":{"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4797:8:10","subExpression":{"id":1903,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1896,"src":"4798:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1928,"nodeType":"Block","src":"4857:344:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1910,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"5045:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5056:6:10","memberName":"length","nodeType":"MemberAccess","src":"5045:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5066:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5045:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1914,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"5071:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5078:4:10","memberName":"code","nodeType":"MemberAccess","src":"5071:11:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5083:6:10","memberName":"length","nodeType":"MemberAccess","src":"5071:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5093:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5071:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5045:49:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1925,"nodeType":"IfStatement","src":"5041:119:10","trueBody":{"id":1924,"nodeType":"Block","src":"5096:64:10","statements":[{"errorCall":{"arguments":[{"id":1921,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"5138:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1920,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"5121:16:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1923,"nodeType":"RevertStatement","src":"5114:31:10"}]}},{"expression":{"id":1926,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"5180:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1902,"id":1927,"nodeType":"Return","src":"5173:17:10"}]},"id":1929,"nodeType":"IfStatement","src":"4793:408:10","trueBody":{"id":1909,"nodeType":"Block","src":"4807:44:10","statements":[{"expression":{"arguments":[{"id":1906,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"4829:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1905,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"4821:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4821:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1908,"nodeType":"ExpressionStatement","src":"4821:19:10"}]}}]},"documentation":{"id":1892,"nodeType":"StructuredDocumentation","src":"4365:255:10","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."},"id":1931,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4634:26:10","nodeType":"FunctionDefinition","parameters":{"id":1899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1894,"mutability":"mutable","name":"target","nameLocation":"4678:6:10","nodeType":"VariableDeclaration","scope":1931,"src":"4670:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1893,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1896,"mutability":"mutable","name":"success","nameLocation":"4699:7:10","nodeType":"VariableDeclaration","scope":1931,"src":"4694:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1895,"name":"bool","nodeType":"ElementaryTypeName","src":"4694:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1898,"mutability":"mutable","name":"returndata","nameLocation":"4729:10:10","nodeType":"VariableDeclaration","scope":1931,"src":"4716:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1897,"name":"bytes","nodeType":"ElementaryTypeName","src":"4716:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4660:85:10"},"returnParameters":{"id":1902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1901,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1931,"src":"4769:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1900,"name":"bytes","nodeType":"ElementaryTypeName","src":"4769:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4768:14:10"},"scope":1972,"src":"4625:582:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1952,"nodeType":"Block","src":"5509:122:10","statements":[{"condition":{"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5523:8:10","subExpression":{"id":1941,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"5524:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1950,"nodeType":"Block","src":"5583:42:10","statements":[{"expression":{"id":1948,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"5604:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1940,"id":1949,"nodeType":"Return","src":"5597:17:10"}]},"id":1951,"nodeType":"IfStatement","src":"5519:106:10","trueBody":{"id":1947,"nodeType":"Block","src":"5533:44:10","statements":[{"expression":{"arguments":[{"id":1944,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"5555:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1943,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"5547:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5547:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1946,"nodeType":"ExpressionStatement","src":"5547:19:10"}]}}]},"documentation":{"id":1932,"nodeType":"StructuredDocumentation","src":"5213:189:10","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."},"id":1953,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5416:16:10","nodeType":"FunctionDefinition","parameters":{"id":1937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1934,"mutability":"mutable","name":"success","nameLocation":"5438:7:10","nodeType":"VariableDeclaration","scope":1953,"src":"5433:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1933,"name":"bool","nodeType":"ElementaryTypeName","src":"5433:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1936,"mutability":"mutable","name":"returndata","nameLocation":"5460:10:10","nodeType":"VariableDeclaration","scope":1953,"src":"5447:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1935,"name":"bytes","nodeType":"ElementaryTypeName","src":"5447:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5432:39:10"},"returnParameters":{"id":1940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1939,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1953,"src":"5495:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1938,"name":"bytes","nodeType":"ElementaryTypeName","src":"5495:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5494:14:10"},"scope":1972,"src":"5407:224:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1970,"nodeType":"Block","src":"5798:461:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1959,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"5874:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5885:6:10","memberName":"length","nodeType":"MemberAccess","src":"5874:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5894:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5874:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1968,"nodeType":"Block","src":"6204:49:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1965,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"6225:15:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1967,"nodeType":"RevertStatement","src":"6218:24:10"}]},"id":1969,"nodeType":"IfStatement","src":"5870:383:10","trueBody":{"id":1964,"nodeType":"Block","src":"5897:301:10","statements":[{"AST":{"nativeSrc":"6055:133:10","nodeType":"YulBlock","src":"6055:133:10","statements":[{"nativeSrc":"6073:40:10","nodeType":"YulVariableDeclaration","src":"6073:40:10","value":{"arguments":[{"name":"returndata","nativeSrc":"6102:10:10","nodeType":"YulIdentifier","src":"6102:10:10"}],"functionName":{"name":"mload","nativeSrc":"6096:5:10","nodeType":"YulIdentifier","src":"6096:5:10"},"nativeSrc":"6096:17:10","nodeType":"YulFunctionCall","src":"6096:17:10"},"variables":[{"name":"returndata_size","nativeSrc":"6077:15:10","nodeType":"YulTypedName","src":"6077:15:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6141:2:10","nodeType":"YulLiteral","src":"6141:2:10","type":"","value":"32"},{"name":"returndata","nativeSrc":"6145:10:10","nodeType":"YulIdentifier","src":"6145:10:10"}],"functionName":{"name":"add","nativeSrc":"6137:3:10","nodeType":"YulIdentifier","src":"6137:3:10"},"nativeSrc":"6137:19:10","nodeType":"YulFunctionCall","src":"6137:19:10"},{"name":"returndata_size","nativeSrc":"6158:15:10","nodeType":"YulIdentifier","src":"6158:15:10"}],"functionName":{"name":"revert","nativeSrc":"6130:6:10","nodeType":"YulIdentifier","src":"6130:6:10"},"nativeSrc":"6130:44:10","nodeType":"YulFunctionCall","src":"6130:44:10"},"nativeSrc":"6130:44:10","nodeType":"YulExpressionStatement","src":"6130:44:10"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1956,"isOffset":false,"isSlot":false,"src":"6102:10:10","valueSize":1},{"declaration":1956,"isOffset":false,"isSlot":false,"src":"6145:10:10","valueSize":1}],"id":1963,"nodeType":"InlineAssembly","src":"6046:142:10"}]}}]},"documentation":{"id":1954,"nodeType":"StructuredDocumentation","src":"5637:101:10","text":" @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."},"id":1971,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5752:7:10","nodeType":"FunctionDefinition","parameters":{"id":1957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1956,"mutability":"mutable","name":"returndata","nameLocation":"5773:10:10","nodeType":"VariableDeclaration","scope":1971,"src":"5760:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1955,"name":"bytes","nodeType":"ElementaryTypeName","src":"5760:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5759:25:10"},"returnParameters":{"id":1958,"nodeType":"ParameterList","parameters":[],"src":"5798:0:10"},"scope":1972,"src":"5743:516:10","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1973,"src":"195:6066:10","usedErrors":[1727,1732,1735],"usedEvents":[]}],"src":"101:6161:10"},"id":10},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2002]},"id":2003,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1974,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:11"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1975,"nodeType":"StructuredDocumentation","src":"127:496:11","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2002,"linearizedBaseContracts":[2002],"name":"Context","nameLocation":"642:7:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":1983,"nodeType":"Block","src":"718:34:11","statements":[{"expression":{"expression":{"id":1980,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:11","memberName":"sender","nodeType":"MemberAccess","src":"735:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1979,"id":1982,"nodeType":"Return","src":"728:17:11"}]},"id":1984,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:11","nodeType":"FunctionDefinition","parameters":{"id":1976,"nodeType":"ParameterList","parameters":[],"src":"675:2:11"},"returnParameters":{"id":1979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1978,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1984,"src":"709:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1977,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:11"},"scope":2002,"src":"656:96:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1992,"nodeType":"Block","src":"825:32:11","statements":[{"expression":{"expression":{"id":1989,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:11","memberName":"data","nodeType":"MemberAccess","src":"842:8:11","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1988,"id":1991,"nodeType":"Return","src":"835:15:11"}]},"id":1993,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:11","nodeType":"FunctionDefinition","parameters":{"id":1985,"nodeType":"ParameterList","parameters":[],"src":"775:2:11"},"returnParameters":{"id":1988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1987,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1993,"src":"809:14:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1986,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:11"},"scope":2002,"src":"758:99:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2000,"nodeType":"Block","src":"935:25:11","statements":[{"expression":{"hexValue":"30","id":1998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1997,"id":1999,"nodeType":"Return","src":"945:8:11"}]},"id":2001,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:11","nodeType":"FunctionDefinition","parameters":{"id":1994,"nodeType":"ParameterList","parameters":[],"src":"892:2:11"},"returnParameters":{"id":1997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1996,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2001,"src":"926:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1995,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:11"},"scope":2002,"src":"863:97:11","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2003,"src":"624:338:11","usedErrors":[],"usedEvents":[]}],"src":"101:862:11"},"id":11},"@openzeppelin/contracts/utils/Nonces.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","exportedSymbols":{"Nonces":[2070]},"id":2071,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2004,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:12"},{"abstract":true,"baseContracts":[],"canonicalName":"Nonces","contractDependencies":[],"contractKind":"contract","documentation":{"id":2005,"nodeType":"StructuredDocumentation","src":"125:83:12","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":2070,"linearizedBaseContracts":[2070],"name":"Nonces","nameLocation":"227:6:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2006,"nodeType":"StructuredDocumentation","src":"240:90:12","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":2012,"name":"InvalidAccountNonce","nameLocation":"341:19:12","nodeType":"ErrorDefinition","parameters":{"id":2011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2008,"mutability":"mutable","name":"account","nameLocation":"369:7:12","nodeType":"VariableDeclaration","scope":2012,"src":"361:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2007,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2010,"mutability":"mutable","name":"currentNonce","nameLocation":"386:12:12","nodeType":"VariableDeclaration","scope":2012,"src":"378:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2009,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"360:39:12"},"src":"335:65:12"},{"constant":false,"id":2016,"mutability":"mutable","name":"_nonces","nameLocation":"450:7:12","nodeType":"VariableDeclaration","scope":2070,"src":"406:51:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2015,"keyName":"account","keyNameLocation":"422:7:12","keyType":{"id":2013,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"406:35:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2014,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":2028,"nodeType":"Block","src":"607:38:12","statements":[{"expression":{"baseExpression":{"id":2024,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"624:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2026,"indexExpression":{"id":2025,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"632:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"624:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2023,"id":2027,"nodeType":"Return","src":"617:21:12"}]},"documentation":{"id":2017,"nodeType":"StructuredDocumentation","src":"464:69:12","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":2029,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"547:6:12","nodeType":"FunctionDefinition","parameters":{"id":2020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2019,"mutability":"mutable","name":"owner","nameLocation":"562:5:12","nodeType":"VariableDeclaration","scope":2029,"src":"554:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2018,"name":"address","nodeType":"ElementaryTypeName","src":"554:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"553:15:12"},"returnParameters":{"id":2023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2022,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2029,"src":"598:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2021,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"597:9:12"},"scope":2070,"src":"538:107:12","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2043,"nodeType":"Block","src":"828:326:12","statements":[{"id":2042,"nodeType":"UncheckedBlock","src":"1031:117:12","statements":[{"expression":{"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1121:16:12","subExpression":{"baseExpression":{"id":2037,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"1121:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2039,"indexExpression":{"id":2038,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"1129:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1121:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2036,"id":2041,"nodeType":"Return","src":"1114:23:12"}]}]},"documentation":{"id":2030,"nodeType":"StructuredDocumentation","src":"651:103:12","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":2044,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"768:9:12","nodeType":"FunctionDefinition","parameters":{"id":2033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2032,"mutability":"mutable","name":"owner","nameLocation":"786:5:12","nodeType":"VariableDeclaration","scope":2044,"src":"778:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2031,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:15:12"},"returnParameters":{"id":2036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2035,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2044,"src":"819:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2034,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:9:12"},"scope":2070,"src":"759:395:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2068,"nodeType":"Block","src":"1338:149:12","statements":[{"assignments":[2053],"declarations":[{"constant":false,"id":2053,"mutability":"mutable","name":"current","nameLocation":"1356:7:12","nodeType":"VariableDeclaration","scope":2068,"src":"1348:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2052,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2057,"initialValue":{"arguments":[{"id":2055,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"1376:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2054,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"1366:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1348:34:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2058,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"1396:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2059,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"1405:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1396:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2067,"nodeType":"IfStatement","src":"1392:89:12","trueBody":{"id":2066,"nodeType":"Block","src":"1414:67:12","statements":[{"errorCall":{"arguments":[{"id":2062,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"1455:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2063,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"1462:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2061,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"1435:19:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1435:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2065,"nodeType":"RevertStatement","src":"1428:42:12"}]}}]},"documentation":{"id":2045,"nodeType":"StructuredDocumentation","src":"1160:100:12","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":2069,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"1274:16:12","nodeType":"FunctionDefinition","parameters":{"id":2050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2047,"mutability":"mutable","name":"owner","nameLocation":"1299:5:12","nodeType":"VariableDeclaration","scope":2069,"src":"1291:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2046,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2049,"mutability":"mutable","name":"nonce","nameLocation":"1314:5:12","nodeType":"VariableDeclaration","scope":2069,"src":"1306:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2048,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1290:30:12"},"returnParameters":{"id":2051,"nodeType":"ParameterList","parameters":[],"src":"1338:0:12"},"scope":2070,"src":"1265:222:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2071,"src":"209:1280:12","usedErrors":[2012],"usedEvents":[]}],"src":"99:1391:12"},"id":12},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[2076],"ShortStrings":[2287],"StorageSlot":[2397]},"id":2288,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2072,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:13"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":2074,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2288,"sourceUnit":2398,"src":"132:46:13","symbolAliases":[{"foreign":{"id":2073,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"140:11:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":2076,"name":"ShortString","nameLocation":"353:11:13","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:13","underlyingType":{"id":2075,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":2077,"nodeType":"StructuredDocumentation","src":"378:876:13","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":2287,"linearizedBaseContracts":[2287],"name":"ShortStrings","nameLocation":"1263:12:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2080,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:13","nodeType":"VariableDeclaration","scope":2287,"src":"1345:111:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2078,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":2079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:13","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":2084,"name":"StringTooLong","nameLocation":"1469:13:13","nodeType":"ErrorDefinition","parameters":{"id":2083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2082,"mutability":"mutable","name":"str","nameLocation":"1490:3:13","nodeType":"VariableDeclaration","scope":2084,"src":"1483:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2081,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:13"},"src":"1463:32:13"},{"errorSelector":"b3512b0c","id":2086,"name":"InvalidShortString","nameLocation":"1506:18:13","nodeType":"ErrorDefinition","parameters":{"id":2085,"nodeType":"ParameterList","parameters":[],"src":"1524:2:13"},"src":"1500:27:13"},{"body":{"id":2129,"nodeType":"Block","src":"1786:208:13","statements":[{"assignments":[2096],"declarations":[{"constant":false,"id":2096,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:13","nodeType":"VariableDeclaration","scope":2129,"src":"1796:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2095,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2101,"initialValue":{"arguments":[{"id":2099,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"1822:3:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2097,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:13","typeDescriptions":{}}},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2102,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"1840:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:13","memberName":"length","nodeType":"MemberAccess","src":"1840:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:13","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2111,"nodeType":"IfStatement","src":"1836:72:13","trueBody":{"id":2110,"nodeType":"Block","src":"1858:50:13","statements":[{"errorCall":{"arguments":[{"id":2107,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"1893:3:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2106,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"1879:13:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2109,"nodeType":"RevertStatement","src":"1872:25:13"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2120,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"1965:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2118,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:13","typeDescriptions":{}}},"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2116,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:13","typeDescriptions":{}}},"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":2123,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"1974:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:13","memberName":"length","nodeType":"MemberAccess","src":"1974:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2114,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:13","typeDescriptions":{}}},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2112,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"1924:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2076_$","typeString":"type(ShortString)"}},"id":2113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:13","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:13","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2076_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2076","typeString":"ShortString"}},"functionReturnParameters":2094,"id":2128,"nodeType":"Return","src":"1917:70:13"}]},"documentation":{"id":2087,"nodeType":"StructuredDocumentation","src":"1533:170:13","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":2130,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:13","nodeType":"FunctionDefinition","parameters":{"id":2090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2089,"mutability":"mutable","name":"str","nameLocation":"1745:3:13","nodeType":"VariableDeclaration","scope":2130,"src":"1731:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2088,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:13"},"returnParameters":{"id":2094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2130,"src":"1773:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2076","typeString":"ShortString"},"typeName":{"id":2092,"nodeType":"UserDefinedTypeName","pathNode":{"id":2091,"name":"ShortString","nameLocations":["1773:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":2076,"src":"1773:11:13"},"referencedDeclaration":2076,"src":"1773:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2076","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:13"},"scope":2287,"src":"1708:286:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2155,"nodeType":"Block","src":"2152:331:13","statements":[{"assignments":[2140],"declarations":[{"constant":false,"id":2140,"mutability":"mutable","name":"len","nameLocation":"2170:3:13","nodeType":"VariableDeclaration","scope":2155,"src":"2162:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2139,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2144,"initialValue":{"arguments":[{"id":2142,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"2187:4:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2076","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2076","typeString":"ShortString"}],"id":2141,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"2176:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2076_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:13"},{"assignments":[2146],"declarations":[{"constant":false,"id":2146,"mutability":"mutable","name":"str","nameLocation":"2294:3:13","nodeType":"VariableDeclaration","scope":2155,"src":"2280:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2145,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2151,"initialValue":{"arguments":[{"hexValue":"3332","id":2149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":2148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2147,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:13"},{"AST":{"nativeSrc":"2376:81:13","nodeType":"YulBlock","src":"2376:81:13","statements":[{"expression":{"arguments":[{"name":"str","nativeSrc":"2397:3:13","nodeType":"YulIdentifier","src":"2397:3:13"},{"name":"len","nativeSrc":"2402:3:13","nodeType":"YulIdentifier","src":"2402:3:13"}],"functionName":{"name":"mstore","nativeSrc":"2390:6:13","nodeType":"YulIdentifier","src":"2390:6:13"},"nativeSrc":"2390:16:13","nodeType":"YulFunctionCall","src":"2390:16:13"},"nativeSrc":"2390:16:13","nodeType":"YulExpressionStatement","src":"2390:16:13"},{"expression":{"arguments":[{"arguments":[{"name":"str","nativeSrc":"2430:3:13","nodeType":"YulIdentifier","src":"2430:3:13"},{"kind":"number","nativeSrc":"2435:4:13","nodeType":"YulLiteral","src":"2435:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2426:3:13","nodeType":"YulIdentifier","src":"2426:3:13"},"nativeSrc":"2426:14:13","nodeType":"YulFunctionCall","src":"2426:14:13"},{"name":"sstr","nativeSrc":"2442:4:13","nodeType":"YulIdentifier","src":"2442:4:13"}],"functionName":{"name":"mstore","nativeSrc":"2419:6:13","nodeType":"YulIdentifier","src":"2419:6:13"},"nativeSrc":"2419:28:13","nodeType":"YulFunctionCall","src":"2419:28:13"},"nativeSrc":"2419:28:13","nodeType":"YulExpressionStatement","src":"2419:28:13"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2140,"isOffset":false,"isSlot":false,"src":"2402:3:13","valueSize":1},{"declaration":2134,"isOffset":false,"isSlot":false,"src":"2442:4:13","valueSize":1},{"declaration":2146,"isOffset":false,"isSlot":false,"src":"2397:3:13","valueSize":1},{"declaration":2146,"isOffset":false,"isSlot":false,"src":"2430:3:13","valueSize":1}],"id":2152,"nodeType":"InlineAssembly","src":"2367:90:13"},{"expression":{"id":2153,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"2473:3:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2138,"id":2154,"nodeType":"Return","src":"2466:10:13"}]},"documentation":{"id":2131,"nodeType":"StructuredDocumentation","src":"2000:73:13","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":2156,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:13","nodeType":"FunctionDefinition","parameters":{"id":2135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2134,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:13","nodeType":"VariableDeclaration","scope":2156,"src":"2096:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2076","typeString":"ShortString"},"typeName":{"id":2133,"nodeType":"UserDefinedTypeName","pathNode":{"id":2132,"name":"ShortString","nameLocations":["2096:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":2076,"src":"2096:11:13"},"referencedDeclaration":2076,"src":"2096:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2076","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:13"},"returnParameters":{"id":2138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2156,"src":"2137:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2136,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:13"},"scope":2287,"src":"2078:405:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2187,"nodeType":"Block","src":"2625:175:13","statements":[{"assignments":[2166],"declarations":[{"constant":false,"id":2166,"mutability":"mutable","name":"result","nameLocation":"2643:6:13","nodeType":"VariableDeclaration","scope":2187,"src":"2635:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2165,"name":"uint256","nodeType":"ElementaryTypeName","src":"2635:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2176,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2171,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"2679:4:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2076","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2076","typeString":"ShortString"}],"expression":{"id":2169,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"2660:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2076_$","typeString":"type(ShortString)"}},"id":2170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2672:6:13","memberName":"unwrap","nodeType":"MemberAccess","src":"2660:18:13","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2076_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2660:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2652:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2167,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:13","typeDescriptions":{}}},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2652:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":2174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:4:13","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2652:40:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2635:57:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2177,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"2706:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2715:2:13","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2706:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2184,"nodeType":"IfStatement","src":"2702:69:13","trueBody":{"id":2183,"nodeType":"Block","src":"2719:52:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2180,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"2740:18:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2740:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2182,"nodeType":"RevertStatement","src":"2733:27:13"}]}},{"expression":{"id":2185,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"2787:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2164,"id":2186,"nodeType":"Return","src":"2780:13:13"}]},"documentation":{"id":2157,"nodeType":"StructuredDocumentation","src":"2489:61:13","text":" @dev Return the length of a `ShortString`."},"id":2188,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2564:10:13","nodeType":"FunctionDefinition","parameters":{"id":2161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2160,"mutability":"mutable","name":"sstr","nameLocation":"2587:4:13","nodeType":"VariableDeclaration","scope":2188,"src":"2575:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2076","typeString":"ShortString"},"typeName":{"id":2159,"nodeType":"UserDefinedTypeName","pathNode":{"id":2158,"name":"ShortString","nameLocations":["2575:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":2076,"src":"2575:11:13"},"referencedDeclaration":2076,"src":"2575:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2076","typeString":"ShortString"}},"visibility":"internal"}],"src":"2574:18:13"},"returnParameters":{"id":2164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2163,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2188,"src":"2616:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2162,"name":"uint256","nodeType":"ElementaryTypeName","src":"2616:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2615:9:13"},"scope":2287,"src":"2555:245:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2227,"nodeType":"Block","src":"3023:231:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"3043:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3037:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2199,"name":"bytes","nodeType":"ElementaryTypeName","src":"3037:5:13","typeDescriptions":{}}},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3037:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3050:6:13","memberName":"length","nodeType":"MemberAccess","src":"3037:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":2204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3059:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3037:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2225,"nodeType":"Block","src":"3121:127:13","statements":[{"expression":{"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2214,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"3161:5:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":2211,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"3135:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2397_$","typeString":"type(library StorageSlot)"}},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3147:13:13","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":2374,"src":"3135:25:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$2305_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3135:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2305_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":2216,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3168:5:13","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2304,"src":"3135:38:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"3176:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3135:46:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2219,"nodeType":"ExpressionStatement","src":"3135:46:13"},{"expression":{"arguments":[{"id":2222,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"3219:17:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2220,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"3202:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2076_$","typeString":"type(ShortString)"}},"id":2221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3214:4:13","memberName":"wrap","nodeType":"MemberAccess","src":"3202:16:13","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2076_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3202:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2076","typeString":"ShortString"}},"functionReturnParameters":2198,"id":2224,"nodeType":"Return","src":"3195:42:13"}]},"id":2226,"nodeType":"IfStatement","src":"3033:215:13","trueBody":{"id":2210,"nodeType":"Block","src":"3063:52:13","statements":[{"expression":{"arguments":[{"id":2207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"3098:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2206,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"3084:13:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$2076_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":2208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3084:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2076","typeString":"ShortString"}},"functionReturnParameters":2198,"id":2209,"nodeType":"Return","src":"3077:27:13"}]}}]},"documentation":{"id":2189,"nodeType":"StructuredDocumentation","src":"2806:103:13","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":2228,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2923:25:13","nodeType":"FunctionDefinition","parameters":{"id":2194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2191,"mutability":"mutable","name":"value","nameLocation":"2963:5:13","nodeType":"VariableDeclaration","scope":2228,"src":"2949:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2190,"name":"string","nodeType":"ElementaryTypeName","src":"2949:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2193,"mutability":"mutable","name":"store","nameLocation":"2985:5:13","nodeType":"VariableDeclaration","scope":2228,"src":"2970:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2192,"name":"string","nodeType":"ElementaryTypeName","src":"2970:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2948:43:13"},"returnParameters":{"id":2198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2228,"src":"3010:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2076","typeString":"ShortString"},"typeName":{"id":2196,"nodeType":"UserDefinedTypeName","pathNode":{"id":2195,"name":"ShortString","nameLocations":["3010:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":2076,"src":"3010:11:13"},"referencedDeclaration":2076,"src":"3010:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2076","typeString":"ShortString"}},"visibility":"internal"}],"src":"3009:13:13"},"scope":2287,"src":"2914:340:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2254,"nodeType":"Block","src":"3494:158:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2241,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"3527:5:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2076","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2076","typeString":"ShortString"}],"expression":{"id":2239,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"3508:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2076_$","typeString":"type(ShortString)"}},"id":2240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3520:6:13","memberName":"unwrap","nodeType":"MemberAccess","src":"3508:18:13","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2076_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3508:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2243,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"3537:17:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3508:46:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2252,"nodeType":"Block","src":"3609:37:13","statements":[{"expression":{"id":2250,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"3630:5:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":2238,"id":2251,"nodeType":"Return","src":"3623:12:13"}]},"id":2253,"nodeType":"IfStatement","src":"3504:142:13","trueBody":{"id":2249,"nodeType":"Block","src":"3556:47:13","statements":[{"expression":{"arguments":[{"id":2246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"3586:5:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2076","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2076","typeString":"ShortString"}],"id":2245,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"3577:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2076_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3577:15:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2238,"id":2248,"nodeType":"Return","src":"3570:22:13"}]}}]},"documentation":{"id":2229,"nodeType":"StructuredDocumentation","src":"3260:120:13","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":2255,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3394:20:13","nodeType":"FunctionDefinition","parameters":{"id":2235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2232,"mutability":"mutable","name":"value","nameLocation":"3427:5:13","nodeType":"VariableDeclaration","scope":2255,"src":"3415:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2076","typeString":"ShortString"},"typeName":{"id":2231,"nodeType":"UserDefinedTypeName","pathNode":{"id":2230,"name":"ShortString","nameLocations":["3415:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":2076,"src":"3415:11:13"},"referencedDeclaration":2076,"src":"3415:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2076","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2234,"mutability":"mutable","name":"store","nameLocation":"3449:5:13","nodeType":"VariableDeclaration","scope":2255,"src":"3434:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2233,"name":"string","nodeType":"ElementaryTypeName","src":"3434:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3414:41:13"},"returnParameters":{"id":2238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2255,"src":"3479:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2236,"name":"string","nodeType":"ElementaryTypeName","src":"3479:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3478:15:13"},"scope":2287,"src":"3385:267:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2285,"nodeType":"Block","src":"4132:174:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2268,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"4165:5:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2076","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2076","typeString":"ShortString"}],"expression":{"id":2266,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"4146:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2076_$","typeString":"type(ShortString)"}},"id":2267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4158:6:13","memberName":"unwrap","nodeType":"MemberAccess","src":"4146:18:13","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2076_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4146:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2270,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"4175:17:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4146:46:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2283,"nodeType":"Block","src":"4249:51:13","statements":[{"expression":{"expression":{"arguments":[{"id":2279,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"4276:5:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":2278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2277,"name":"bytes","nodeType":"ElementaryTypeName","src":"4270:5:13","typeDescriptions":{}}},"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4283:6:13","memberName":"length","nodeType":"MemberAccess","src":"4270:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2265,"id":2282,"nodeType":"Return","src":"4263:26:13"}]},"id":2284,"nodeType":"IfStatement","src":"4142:158:13","trueBody":{"id":2276,"nodeType":"Block","src":"4194:49:13","statements":[{"expression":{"arguments":[{"id":2273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"4226:5:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2076","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2076","typeString":"ShortString"}],"id":2272,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"4215:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2076_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4215:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2265,"id":2275,"nodeType":"Return","src":"4208:24:13"}]}}]},"documentation":{"id":2256,"nodeType":"StructuredDocumentation","src":"3658:364:13","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":2286,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4036:22:13","nodeType":"FunctionDefinition","parameters":{"id":2262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2259,"mutability":"mutable","name":"value","nameLocation":"4071:5:13","nodeType":"VariableDeclaration","scope":2286,"src":"4059:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2076","typeString":"ShortString"},"typeName":{"id":2258,"nodeType":"UserDefinedTypeName","pathNode":{"id":2257,"name":"ShortString","nameLocations":["4059:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":2076,"src":"4059:11:13"},"referencedDeclaration":2076,"src":"4059:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2076","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2261,"mutability":"mutable","name":"store","nameLocation":"4093:5:13","nodeType":"VariableDeclaration","scope":2286,"src":"4078:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2260,"name":"string","nodeType":"ElementaryTypeName","src":"4078:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4058:41:13"},"returnParameters":{"id":2265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2286,"src":"4123:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2263,"name":"uint256","nodeType":"ElementaryTypeName","src":"4123:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4122:9:13"},"scope":2287,"src":"4027:279:13","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2288,"src":"1255:3053:13","usedErrors":[2084,2086],"usedEvents":[]}],"src":"106:4203:13"},"id":13},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2397]},"id":2398,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2289,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2290,"nodeType":"StructuredDocumentation","src":"219:1025:14","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"},"fullyImplemented":true,"id":2397,"linearizedBaseContracts":[2397],"name":"StorageSlot","nameLocation":"1253:11:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2293,"members":[{"constant":false,"id":2292,"mutability":"mutable","name":"value","nameLocation":"1308:5:14","nodeType":"VariableDeclaration","scope":2293,"src":"1300:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2291,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1278:11:14","nodeType":"StructDefinition","scope":2397,"src":"1271:49:14","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2296,"members":[{"constant":false,"id":2295,"mutability":"mutable","name":"value","nameLocation":"1360:5:14","nodeType":"VariableDeclaration","scope":2296,"src":"1355:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2294,"name":"bool","nodeType":"ElementaryTypeName","src":"1355:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1333:11:14","nodeType":"StructDefinition","scope":2397,"src":"1326:46:14","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2299,"members":[{"constant":false,"id":2298,"mutability":"mutable","name":"value","nameLocation":"1415:5:14","nodeType":"VariableDeclaration","scope":2299,"src":"1407:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2297,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1407:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1385:11:14","nodeType":"StructDefinition","scope":2397,"src":"1378:49:14","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2302,"members":[{"constant":false,"id":2301,"mutability":"mutable","name":"value","nameLocation":"1470:5:14","nodeType":"VariableDeclaration","scope":2302,"src":"1462:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2300,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1440:11:14","nodeType":"StructDefinition","scope":2397,"src":"1433:49:14","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2305,"members":[{"constant":false,"id":2304,"mutability":"mutable","name":"value","nameLocation":"1523:5:14","nodeType":"VariableDeclaration","scope":2305,"src":"1516:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2303,"name":"string","nodeType":"ElementaryTypeName","src":"1516:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1495:10:14","nodeType":"StructDefinition","scope":2397,"src":"1488:47:14","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2308,"members":[{"constant":false,"id":2307,"mutability":"mutable","name":"value","nameLocation":"1574:5:14","nodeType":"VariableDeclaration","scope":2308,"src":"1568:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2306,"name":"bytes","nodeType":"ElementaryTypeName","src":"1568:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1548:9:14","nodeType":"StructDefinition","scope":2397,"src":"1541:45:14","visibility":"public"},{"body":{"id":2318,"nodeType":"Block","src":"1768:106:14","statements":[{"AST":{"nativeSrc":"1830:38:14","nodeType":"YulBlock","src":"1830:38:14","statements":[{"nativeSrc":"1844:14:14","nodeType":"YulAssignment","src":"1844:14:14","value":{"name":"slot","nativeSrc":"1854:4:14","nodeType":"YulIdentifier","src":"1854:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"1844:6:14","nodeType":"YulIdentifier","src":"1844:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2315,"isOffset":false,"isSlot":true,"src":"1844:6:14","suffix":"slot","valueSize":1},{"declaration":2311,"isOffset":false,"isSlot":false,"src":"1854:4:14","valueSize":1}],"id":2317,"nodeType":"InlineAssembly","src":"1821:47:14"}]},"documentation":{"id":2309,"nodeType":"StructuredDocumentation","src":"1592:87:14","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2319,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1693:14:14","nodeType":"FunctionDefinition","parameters":{"id":2312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2311,"mutability":"mutable","name":"slot","nameLocation":"1716:4:14","nodeType":"VariableDeclaration","scope":2319,"src":"1708:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2310,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1708:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1707:14:14"},"returnParameters":{"id":2316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2315,"mutability":"mutable","name":"r","nameLocation":"1765:1:14","nodeType":"VariableDeclaration","scope":2319,"src":"1745:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2293_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2314,"nodeType":"UserDefinedTypeName","pathNode":{"id":2313,"name":"AddressSlot","nameLocations":["1745:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2293,"src":"1745:11:14"},"referencedDeclaration":2293,"src":"1745:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2293_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1744:23:14"},"scope":2397,"src":"1684:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2329,"nodeType":"Block","src":"2056:106:14","statements":[{"AST":{"nativeSrc":"2118:38:14","nodeType":"YulBlock","src":"2118:38:14","statements":[{"nativeSrc":"2132:14:14","nodeType":"YulAssignment","src":"2132:14:14","value":{"name":"slot","nativeSrc":"2142:4:14","nodeType":"YulIdentifier","src":"2142:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2132:6:14","nodeType":"YulIdentifier","src":"2132:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2326,"isOffset":false,"isSlot":true,"src":"2132:6:14","suffix":"slot","valueSize":1},{"declaration":2322,"isOffset":false,"isSlot":false,"src":"2142:4:14","valueSize":1}],"id":2328,"nodeType":"InlineAssembly","src":"2109:47:14"}]},"documentation":{"id":2320,"nodeType":"StructuredDocumentation","src":"1880:87:14","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":2330,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1981:14:14","nodeType":"FunctionDefinition","parameters":{"id":2323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2322,"mutability":"mutable","name":"slot","nameLocation":"2004:4:14","nodeType":"VariableDeclaration","scope":2330,"src":"1996:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2321,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1996:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1995:14:14"},"returnParameters":{"id":2327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2326,"mutability":"mutable","name":"r","nameLocation":"2053:1:14","nodeType":"VariableDeclaration","scope":2330,"src":"2033:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2296_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2325,"nodeType":"UserDefinedTypeName","pathNode":{"id":2324,"name":"BooleanSlot","nameLocations":["2033:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2296,"src":"2033:11:14"},"referencedDeclaration":2296,"src":"2033:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2296_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2032:23:14"},"scope":2397,"src":"1972:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2340,"nodeType":"Block","src":"2344:106:14","statements":[{"AST":{"nativeSrc":"2406:38:14","nodeType":"YulBlock","src":"2406:38:14","statements":[{"nativeSrc":"2420:14:14","nodeType":"YulAssignment","src":"2420:14:14","value":{"name":"slot","nativeSrc":"2430:4:14","nodeType":"YulIdentifier","src":"2430:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2420:6:14","nodeType":"YulIdentifier","src":"2420:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2337,"isOffset":false,"isSlot":true,"src":"2420:6:14","suffix":"slot","valueSize":1},{"declaration":2333,"isOffset":false,"isSlot":false,"src":"2430:4:14","valueSize":1}],"id":2339,"nodeType":"InlineAssembly","src":"2397:47:14"}]},"documentation":{"id":2331,"nodeType":"StructuredDocumentation","src":"2168:87:14","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":2341,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2269:14:14","nodeType":"FunctionDefinition","parameters":{"id":2334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2333,"mutability":"mutable","name":"slot","nameLocation":"2292:4:14","nodeType":"VariableDeclaration","scope":2341,"src":"2284:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2332,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2283:14:14"},"returnParameters":{"id":2338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2337,"mutability":"mutable","name":"r","nameLocation":"2341:1:14","nodeType":"VariableDeclaration","scope":2341,"src":"2321:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2299_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2336,"nodeType":"UserDefinedTypeName","pathNode":{"id":2335,"name":"Bytes32Slot","nameLocations":["2321:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2299,"src":"2321:11:14"},"referencedDeclaration":2299,"src":"2321:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2299_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2320:23:14"},"scope":2397,"src":"2260:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2351,"nodeType":"Block","src":"2632:106:14","statements":[{"AST":{"nativeSrc":"2694:38:14","nodeType":"YulBlock","src":"2694:38:14","statements":[{"nativeSrc":"2708:14:14","nodeType":"YulAssignment","src":"2708:14:14","value":{"name":"slot","nativeSrc":"2718:4:14","nodeType":"YulIdentifier","src":"2718:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2708:6:14","nodeType":"YulIdentifier","src":"2708:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2348,"isOffset":false,"isSlot":true,"src":"2708:6:14","suffix":"slot","valueSize":1},{"declaration":2344,"isOffset":false,"isSlot":false,"src":"2718:4:14","valueSize":1}],"id":2350,"nodeType":"InlineAssembly","src":"2685:47:14"}]},"documentation":{"id":2342,"nodeType":"StructuredDocumentation","src":"2456:87:14","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":2352,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2557:14:14","nodeType":"FunctionDefinition","parameters":{"id":2345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2344,"mutability":"mutable","name":"slot","nameLocation":"2580:4:14","nodeType":"VariableDeclaration","scope":2352,"src":"2572:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2343,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2572:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2571:14:14"},"returnParameters":{"id":2349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2348,"mutability":"mutable","name":"r","nameLocation":"2629:1:14","nodeType":"VariableDeclaration","scope":2352,"src":"2609:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2302_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2347,"nodeType":"UserDefinedTypeName","pathNode":{"id":2346,"name":"Uint256Slot","nameLocations":["2609:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2302,"src":"2609:11:14"},"referencedDeclaration":2302,"src":"2609:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2302_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2608:23:14"},"scope":2397,"src":"2548:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2362,"nodeType":"Block","src":"2917:106:14","statements":[{"AST":{"nativeSrc":"2979:38:14","nodeType":"YulBlock","src":"2979:38:14","statements":[{"nativeSrc":"2993:14:14","nodeType":"YulAssignment","src":"2993:14:14","value":{"name":"slot","nativeSrc":"3003:4:14","nodeType":"YulIdentifier","src":"3003:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2993:6:14","nodeType":"YulIdentifier","src":"2993:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2359,"isOffset":false,"isSlot":true,"src":"2993:6:14","suffix":"slot","valueSize":1},{"declaration":2355,"isOffset":false,"isSlot":false,"src":"3003:4:14","valueSize":1}],"id":2361,"nodeType":"InlineAssembly","src":"2970:47:14"}]},"documentation":{"id":2353,"nodeType":"StructuredDocumentation","src":"2744:86:14","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":2363,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"2844:13:14","nodeType":"FunctionDefinition","parameters":{"id":2356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2355,"mutability":"mutable","name":"slot","nameLocation":"2866:4:14","nodeType":"VariableDeclaration","scope":2363,"src":"2858:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2354,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2858:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2857:14:14"},"returnParameters":{"id":2360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2359,"mutability":"mutable","name":"r","nameLocation":"2914:1:14","nodeType":"VariableDeclaration","scope":2363,"src":"2895:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2305_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2358,"nodeType":"UserDefinedTypeName","pathNode":{"id":2357,"name":"StringSlot","nameLocations":["2895:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":2305,"src":"2895:10:14"},"referencedDeclaration":2305,"src":"2895:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2305_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"2894:22:14"},"scope":2397,"src":"2835:188:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2373,"nodeType":"Block","src":"3225:112:14","statements":[{"AST":{"nativeSrc":"3287:44:14","nodeType":"YulBlock","src":"3287:44:14","statements":[{"nativeSrc":"3301:20:14","nodeType":"YulAssignment","src":"3301:20:14","value":{"name":"store.slot","nativeSrc":"3311:10:14","nodeType":"YulIdentifier","src":"3311:10:14"},"variableNames":[{"name":"r.slot","nativeSrc":"3301:6:14","nodeType":"YulIdentifier","src":"3301:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2370,"isOffset":false,"isSlot":true,"src":"3301:6:14","suffix":"slot","valueSize":1},{"declaration":2366,"isOffset":false,"isSlot":true,"src":"3311:10:14","suffix":"slot","valueSize":1}],"id":2372,"nodeType":"InlineAssembly","src":"3278:53:14"}]},"documentation":{"id":2364,"nodeType":"StructuredDocumentation","src":"3029:101:14","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2374,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3144:13:14","nodeType":"FunctionDefinition","parameters":{"id":2367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2366,"mutability":"mutable","name":"store","nameLocation":"3173:5:14","nodeType":"VariableDeclaration","scope":2374,"src":"3158:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2365,"name":"string","nodeType":"ElementaryTypeName","src":"3158:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3157:22:14"},"returnParameters":{"id":2371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2370,"mutability":"mutable","name":"r","nameLocation":"3222:1:14","nodeType":"VariableDeclaration","scope":2374,"src":"3203:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2305_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2369,"nodeType":"UserDefinedTypeName","pathNode":{"id":2368,"name":"StringSlot","nameLocations":["3203:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":2305,"src":"3203:10:14"},"referencedDeclaration":2305,"src":"3203:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2305_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3202:22:14"},"scope":2397,"src":"3135:202:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2384,"nodeType":"Block","src":"3513:106:14","statements":[{"AST":{"nativeSrc":"3575:38:14","nodeType":"YulBlock","src":"3575:38:14","statements":[{"nativeSrc":"3589:14:14","nodeType":"YulAssignment","src":"3589:14:14","value":{"name":"slot","nativeSrc":"3599:4:14","nodeType":"YulIdentifier","src":"3599:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"3589:6:14","nodeType":"YulIdentifier","src":"3589:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2381,"isOffset":false,"isSlot":true,"src":"3589:6:14","suffix":"slot","valueSize":1},{"declaration":2377,"isOffset":false,"isSlot":false,"src":"3599:4:14","valueSize":1}],"id":2383,"nodeType":"InlineAssembly","src":"3566:47:14"}]},"documentation":{"id":2375,"nodeType":"StructuredDocumentation","src":"3343:85:14","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":2385,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3442:12:14","nodeType":"FunctionDefinition","parameters":{"id":2378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2377,"mutability":"mutable","name":"slot","nameLocation":"3463:4:14","nodeType":"VariableDeclaration","scope":2385,"src":"3455:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2376,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3455:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3454:14:14"},"returnParameters":{"id":2382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2381,"mutability":"mutable","name":"r","nameLocation":"3510:1:14","nodeType":"VariableDeclaration","scope":2385,"src":"3492:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2308_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2380,"nodeType":"UserDefinedTypeName","pathNode":{"id":2379,"name":"BytesSlot","nameLocations":["3492:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":2308,"src":"3492:9:14"},"referencedDeclaration":2308,"src":"3492:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2308_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3491:21:14"},"scope":2397,"src":"3433:186:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2395,"nodeType":"Block","src":"3816:112:14","statements":[{"AST":{"nativeSrc":"3878:44:14","nodeType":"YulBlock","src":"3878:44:14","statements":[{"nativeSrc":"3892:20:14","nodeType":"YulAssignment","src":"3892:20:14","value":{"name":"store.slot","nativeSrc":"3902:10:14","nodeType":"YulIdentifier","src":"3902:10:14"},"variableNames":[{"name":"r.slot","nativeSrc":"3892:6:14","nodeType":"YulIdentifier","src":"3892:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2392,"isOffset":false,"isSlot":true,"src":"3892:6:14","suffix":"slot","valueSize":1},{"declaration":2388,"isOffset":false,"isSlot":true,"src":"3902:10:14","suffix":"slot","valueSize":1}],"id":2394,"nodeType":"InlineAssembly","src":"3869:53:14"}]},"documentation":{"id":2386,"nodeType":"StructuredDocumentation","src":"3625:99:14","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2396,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3738:12:14","nodeType":"FunctionDefinition","parameters":{"id":2389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2388,"mutability":"mutable","name":"store","nameLocation":"3765:5:14","nodeType":"VariableDeclaration","scope":2396,"src":"3751:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2387,"name":"bytes","nodeType":"ElementaryTypeName","src":"3751:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3750:21:14"},"returnParameters":{"id":2393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2392,"mutability":"mutable","name":"r","nameLocation":"3813:1:14","nodeType":"VariableDeclaration","scope":2396,"src":"3795:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2308_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2391,"nodeType":"UserDefinedTypeName","pathNode":{"id":2390,"name":"BytesSlot","nameLocations":["3795:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":2308,"src":"3795:9:14"},"referencedDeclaration":2308,"src":"3795:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2308_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3794:21:14"},"scope":2397,"src":"3729:199:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2398,"src":"1245:2685:14","usedErrors":[],"usedEvents":[]}],"src":"193:3738:14"},"id":14},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4355],"SignedMath":[6215],"Strings":[2652]},"id":2653,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2399,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:15"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2401,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2653,"sourceUnit":4356,"src":"127:37:15","symbolAliases":[{"foreign":{"id":2400,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4355,"src":"135:4:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2403,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2653,"sourceUnit":6216,"src":"165:49:15","symbolAliases":[{"foreign":{"id":2402,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6215,"src":"173:10:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2404,"nodeType":"StructuredDocumentation","src":"216:34:15","text":" @dev String operations."},"fullyImplemented":true,"id":2652,"linearizedBaseContracts":[2652],"name":"Strings","nameLocation":"259:7:15","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2407,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:15","nodeType":"VariableDeclaration","scope":2652,"src":"273:56:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2405,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:15","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2410,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:15","nodeType":"VariableDeclaration","scope":2652,"src":"335:42:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2408,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:15","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":2411,"nodeType":"StructuredDocumentation","src":"384:81:15","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2417,"name":"StringsInsufficientHexLength","nameLocation":"476:28:15","nodeType":"ErrorDefinition","parameters":{"id":2416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2413,"mutability":"mutable","name":"value","nameLocation":"513:5:15","nodeType":"VariableDeclaration","scope":2417,"src":"505:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2412,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2415,"mutability":"mutable","name":"length","nameLocation":"528:6:15","nodeType":"VariableDeclaration","scope":2417,"src":"520:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2414,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:15"},"src":"470:66:15"},{"body":{"id":2464,"nodeType":"Block","src":"708:627:15","statements":[{"id":2463,"nodeType":"UncheckedBlock","src":"718:611:15","statements":[{"assignments":[2426],"declarations":[{"constant":false,"id":2426,"mutability":"mutable","name":"length","nameLocation":"750:6:15","nodeType":"VariableDeclaration","scope":2463,"src":"742:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2425,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2433,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"770:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2427,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4355,"src":"759:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4355_$","typeString":"type(library Math)"}},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:15","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4175,"src":"759:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:15"},{"assignments":[2435],"declarations":[{"constant":false,"id":2435,"mutability":"mutable","name":"buffer","nameLocation":"808:6:15","nodeType":"VariableDeclaration","scope":2463,"src":"794:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2434,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2440,"initialValue":{"arguments":[{"id":2438,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"828:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2436,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:15"},{"assignments":[2442],"declarations":[{"constant":false,"id":2442,"mutability":"mutable","name":"ptr","nameLocation":"857:3:15","nodeType":"VariableDeclaration","scope":2463,"src":"849:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2441,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2443,"nodeType":"VariableDeclarationStatement","src":"849:11:15"},{"AST":{"nativeSrc":"930:67:15","nodeType":"YulBlock","src":"930:67:15","statements":[{"nativeSrc":"948:35:15","nodeType":"YulAssignment","src":"948:35:15","value":{"arguments":[{"name":"buffer","nativeSrc":"959:6:15","nodeType":"YulIdentifier","src":"959:6:15"},{"arguments":[{"kind":"number","nativeSrc":"971:2:15","nodeType":"YulLiteral","src":"971:2:15","type":"","value":"32"},{"name":"length","nativeSrc":"975:6:15","nodeType":"YulIdentifier","src":"975:6:15"}],"functionName":{"name":"add","nativeSrc":"967:3:15","nodeType":"YulIdentifier","src":"967:3:15"},"nativeSrc":"967:15:15","nodeType":"YulFunctionCall","src":"967:15:15"}],"functionName":{"name":"add","nativeSrc":"955:3:15","nodeType":"YulIdentifier","src":"955:3:15"},"nativeSrc":"955:28:15","nodeType":"YulFunctionCall","src":"955:28:15"},"variableNames":[{"name":"ptr","nativeSrc":"948:3:15","nodeType":"YulIdentifier","src":"948:3:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2435,"isOffset":false,"isSlot":false,"src":"959:6:15","valueSize":1},{"declaration":2426,"isOffset":false,"isSlot":false,"src":"975:6:15","valueSize":1},{"declaration":2442,"isOffset":false,"isSlot":false,"src":"948:3:15","valueSize":1}],"id":2444,"nodeType":"InlineAssembly","src":"921:76:15"},{"body":{"id":2459,"nodeType":"Block","src":"1023:269:15","statements":[{"expression":{"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1041:5:15","subExpression":{"id":2446,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"1041:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2448,"nodeType":"ExpressionStatement","src":"1041:5:15"},{"AST":{"nativeSrc":"1124:86:15","nodeType":"YulBlock","src":"1124:86:15","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1154:3:15","nodeType":"YulIdentifier","src":"1154:3:15"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1168:5:15","nodeType":"YulIdentifier","src":"1168:5:15"},{"kind":"number","nativeSrc":"1175:2:15","nodeType":"YulLiteral","src":"1175:2:15","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1164:3:15","nodeType":"YulIdentifier","src":"1164:3:15"},"nativeSrc":"1164:14:15","nodeType":"YulFunctionCall","src":"1164:14:15"},{"name":"HEX_DIGITS","nativeSrc":"1180:10:15","nodeType":"YulIdentifier","src":"1180:10:15"}],"functionName":{"name":"byte","nativeSrc":"1159:4:15","nodeType":"YulIdentifier","src":"1159:4:15"},"nativeSrc":"1159:32:15","nodeType":"YulFunctionCall","src":"1159:32:15"}],"functionName":{"name":"mstore8","nativeSrc":"1146:7:15","nodeType":"YulIdentifier","src":"1146:7:15"},"nativeSrc":"1146:46:15","nodeType":"YulFunctionCall","src":"1146:46:15"},"nativeSrc":"1146:46:15","nodeType":"YulExpressionStatement","src":"1146:46:15"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2407,"isOffset":false,"isSlot":false,"src":"1180:10:15","valueSize":1},{"declaration":2442,"isOffset":false,"isSlot":false,"src":"1154:3:15","valueSize":1},{"declaration":2420,"isOffset":false,"isSlot":false,"src":"1168:5:15","valueSize":1}],"id":2449,"nodeType":"InlineAssembly","src":"1115:95:15"},{"expression":{"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"1227:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1236:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1227:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2453,"nodeType":"ExpressionStatement","src":"1227:11:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"1260:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1269:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1260:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2458,"nodeType":"IfStatement","src":"1256:21:15","trueBody":{"id":2457,"nodeType":"Break","src":"1272:5:15"}}]},"condition":{"hexValue":"74727565","id":2445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1017:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2460,"nodeType":"WhileStatement","src":"1010:282:15"},{"expression":{"id":2461,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"1312:6:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2424,"id":2462,"nodeType":"Return","src":"1305:13:15"}]}]},"documentation":{"id":2418,"nodeType":"StructuredDocumentation","src":"542:90:15","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2465,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:15","nodeType":"FunctionDefinition","parameters":{"id":2421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2420,"mutability":"mutable","name":"value","nameLocation":"663:5:15","nodeType":"VariableDeclaration","scope":2465,"src":"655:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2419,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:15"},"returnParameters":{"id":2424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2465,"src":"693:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2422,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:15"},"scope":2652,"src":"637:698:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2490,"nodeType":"Block","src":"1511:92:15","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"1542:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1550:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1542:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1560:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1542:20:15","trueExpression":{"hexValue":"2d","id":2479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1554:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"1588:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2483,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6215,"src":"1573:10:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$6215_$","typeString":"type(library SignedMath)"}},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1584:3:15","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":6214,"src":"1573:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1573:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2482,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"1564:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1564:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1528:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2473,"name":"string","nodeType":"ElementaryTypeName","src":"1528:6:15","typeDescriptions":{}}},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:6:15","memberName":"concat","nodeType":"MemberAccess","src":"1528:13:15","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1528:68:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2472,"id":2489,"nodeType":"Return","src":"1521:75:15"}]},"documentation":{"id":2466,"nodeType":"StructuredDocumentation","src":"1341:89:15","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2491,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1444:14:15","nodeType":"FunctionDefinition","parameters":{"id":2469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2468,"mutability":"mutable","name":"value","nameLocation":"1466:5:15","nodeType":"VariableDeclaration","scope":2491,"src":"1459:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2467,"name":"int256","nodeType":"ElementaryTypeName","src":"1459:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1458:14:15"},"returnParameters":{"id":2472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2471,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2491,"src":"1496:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2470,"name":"string","nodeType":"ElementaryTypeName","src":"1496:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1495:15:15"},"scope":2652,"src":"1435:168:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2510,"nodeType":"Block","src":"1782:100:15","statements":[{"id":2509,"nodeType":"UncheckedBlock","src":"1792:84:15","statements":[{"expression":{"arguments":[{"id":2500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"1835:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"1854:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2501,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4355,"src":"1842:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4355_$","typeString":"type(library Math)"}},"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1847:6:15","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4297,"src":"1842:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1842:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1863:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1842:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2499,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2511,2594,2614],"referencedDeclaration":2594,"src":"1823:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1823:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2498,"id":2508,"nodeType":"Return","src":"1816:49:15"}]}]},"documentation":{"id":2492,"nodeType":"StructuredDocumentation","src":"1609:94:15","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2511,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1717:11:15","nodeType":"FunctionDefinition","parameters":{"id":2495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2494,"mutability":"mutable","name":"value","nameLocation":"1737:5:15","nodeType":"VariableDeclaration","scope":2511,"src":"1729:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2493,"name":"uint256","nodeType":"ElementaryTypeName","src":"1729:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1728:15:15"},"returnParameters":{"id":2498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2511,"src":"1767:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2496,"name":"string","nodeType":"ElementaryTypeName","src":"1767:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1766:15:15"},"scope":2652,"src":"1708:174:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2593,"nodeType":"Block","src":"2095:435:15","statements":[{"assignments":[2522],"declarations":[{"constant":false,"id":2522,"mutability":"mutable","name":"localValue","nameLocation":"2113:10:15","nodeType":"VariableDeclaration","scope":2593,"src":"2105:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2521,"name":"uint256","nodeType":"ElementaryTypeName","src":"2105:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2524,"initialValue":{"id":2523,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"2126:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2105:26:15"},{"assignments":[2526],"declarations":[{"constant":false,"id":2526,"mutability":"mutable","name":"buffer","nameLocation":"2154:6:15","nodeType":"VariableDeclaration","scope":2593,"src":"2141:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2525,"name":"bytes","nodeType":"ElementaryTypeName","src":"2141:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2535,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2173:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2530,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"2177:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2173:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2186:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2173:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2163:9:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2527,"name":"bytes","nodeType":"ElementaryTypeName","src":"2167:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2163:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2141:47:15"},{"expression":{"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2536,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"2198:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2538,"indexExpression":{"hexValue":"30","id":2537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2205:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2198:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2210:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2198:15:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2541,"nodeType":"ExpressionStatement","src":"2198:15:15"},{"expression":{"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2542,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"2223:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2544,"indexExpression":{"hexValue":"31","id":2543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2230:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2223:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2235:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2223:15:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2547,"nodeType":"ExpressionStatement","src":"2223:15:15"},{"body":{"id":2576,"nodeType":"Block","src":"2293:95:15","statements":[{"expression":{"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2562,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"2307:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2564,"indexExpression":{"id":2563,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"2314:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2307:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2565,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"2319:10:15","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2569,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2566,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"2330:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2343:3:15","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2330:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2319:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2307:40:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2571,"nodeType":"ExpressionStatement","src":"2307:40:15"},{"expression":{"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2572,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"2361:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2376:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2361:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2575,"nodeType":"ExpressionStatement","src":"2361:16:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2556,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"2281:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2285:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2281:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2577,"initializationExpression":{"assignments":[2549],"declarations":[{"constant":false,"id":2549,"mutability":"mutable","name":"i","nameLocation":"2261:1:15","nodeType":"VariableDeclaration","scope":2577,"src":"2253:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2548,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2555,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2265:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2551,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"2269:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2265:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2278:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2265:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2253:26:15"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2288:3:15","subExpression":{"id":2559,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"2290:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2561,"nodeType":"ExpressionStatement","src":"2288:3:15"},"nodeType":"ForStatement","src":"2248:140:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2578,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"2401:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2415:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2401:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2587,"nodeType":"IfStatement","src":"2397:96:15","trueBody":{"id":2586,"nodeType":"Block","src":"2418:75:15","statements":[{"errorCall":{"arguments":[{"id":2582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"2468:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2583,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"2475:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2581,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"2439:28:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2439:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2585,"nodeType":"RevertStatement","src":"2432:50:15"}]}},{"expression":{"arguments":[{"id":2590,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"2516:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2588,"name":"string","nodeType":"ElementaryTypeName","src":"2509:6:15","typeDescriptions":{}}},"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2520,"id":2592,"nodeType":"Return","src":"2502:21:15"}]},"documentation":{"id":2512,"nodeType":"StructuredDocumentation","src":"1888:112:15","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2594,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2014:11:15","nodeType":"FunctionDefinition","parameters":{"id":2517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2514,"mutability":"mutable","name":"value","nameLocation":"2034:5:15","nodeType":"VariableDeclaration","scope":2594,"src":"2026:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2513,"name":"uint256","nodeType":"ElementaryTypeName","src":"2026:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2516,"mutability":"mutable","name":"length","nameLocation":"2049:6:15","nodeType":"VariableDeclaration","scope":2594,"src":"2041:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2515,"name":"uint256","nodeType":"ElementaryTypeName","src":"2041:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2025:31:15"},"returnParameters":{"id":2520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2594,"src":"2080:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2518,"name":"string","nodeType":"ElementaryTypeName","src":"2080:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2079:15:15"},"scope":2652,"src":"2005:525:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2613,"nodeType":"Block","src":"2762:75:15","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2607,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"2807:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2799:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2605,"name":"uint160","nodeType":"ElementaryTypeName","src":"2799:7:15","typeDescriptions":{}}},"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2791:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2603,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:15","typeDescriptions":{}}},"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2791:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2610,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2410,"src":"2815:14:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2602,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2511,2594,2614],"referencedDeclaration":2594,"src":"2779:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2779:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2601,"id":2612,"nodeType":"Return","src":"2772:58:15"}]},"documentation":{"id":2595,"nodeType":"StructuredDocumentation","src":"2536:148:15","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2614,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2698:11:15","nodeType":"FunctionDefinition","parameters":{"id":2598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2597,"mutability":"mutable","name":"addr","nameLocation":"2718:4:15","nodeType":"VariableDeclaration","scope":2614,"src":"2710:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2596,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2709:14:15"},"returnParameters":{"id":2601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2600,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2614,"src":"2747:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2599,"name":"string","nodeType":"ElementaryTypeName","src":"2747:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2746:15:15"},"scope":2652,"src":"2689:148:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2650,"nodeType":"Block","src":"2992:104:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2626,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"3015:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3009:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2624,"name":"bytes","nodeType":"ElementaryTypeName","src":"3009:5:15","typeDescriptions":{}}},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3009:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3018:6:15","memberName":"length","nodeType":"MemberAccess","src":"3009:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2631,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"3034:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3028:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2629,"name":"bytes","nodeType":"ElementaryTypeName","src":"3028:5:15","typeDescriptions":{}}},"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3028:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3037:6:15","memberName":"length","nodeType":"MemberAccess","src":"3028:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3009:34:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2638,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"3063:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3057:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2636,"name":"bytes","nodeType":"ElementaryTypeName","src":"3057:5:15","typeDescriptions":{}}},"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2635,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3047:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3047:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2644,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"3086:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3080:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2642,"name":"bytes","nodeType":"ElementaryTypeName","src":"3080:5:15","typeDescriptions":{}}},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3080:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2641,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3070:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3047:42:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3009:80:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2623,"id":2649,"nodeType":"Return","src":"3002:87:15"}]},"documentation":{"id":2615,"nodeType":"StructuredDocumentation","src":"2843:66:15","text":" @dev Returns true if the two strings are equal."},"id":2651,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2923:5:15","nodeType":"FunctionDefinition","parameters":{"id":2620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2617,"mutability":"mutable","name":"a","nameLocation":"2943:1:15","nodeType":"VariableDeclaration","scope":2651,"src":"2929:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2616,"name":"string","nodeType":"ElementaryTypeName","src":"2929:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2619,"mutability":"mutable","name":"b","nameLocation":"2960:1:15","nodeType":"VariableDeclaration","scope":2651,"src":"2946:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2618,"name":"string","nodeType":"ElementaryTypeName","src":"2946:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2928:34:15"},"returnParameters":{"id":2623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2622,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2651,"src":"2986:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2621,"name":"bool","nodeType":"ElementaryTypeName","src":"2986:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2985:6:15"},"scope":2652,"src":"2914:182:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2653,"src":"251:2847:15","usedErrors":[2417],"usedEvents":[]}],"src":"101:2998:15"},"id":15},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[3000]},"id":3001,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2654,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":2655,"nodeType":"StructuredDocumentation","src":"138:205:16","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3000,"linearizedBaseContracts":[3000],"name":"ECDSA","nameLocation":"352:5:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":2660,"members":[{"id":2656,"name":"NoError","nameLocation":"392:7:16","nodeType":"EnumValue","src":"392:7:16"},{"id":2657,"name":"InvalidSignature","nameLocation":"409:16:16","nodeType":"EnumValue","src":"409:16:16"},{"id":2658,"name":"InvalidSignatureLength","nameLocation":"435:22:16","nodeType":"EnumValue","src":"435:22:16"},{"id":2659,"name":"InvalidSignatureS","nameLocation":"467:17:16","nodeType":"EnumValue","src":"467:17:16"}],"name":"RecoverError","nameLocation":"369:12:16","nodeType":"EnumDefinition","src":"364:126:16"},{"documentation":{"id":2661,"nodeType":"StructuredDocumentation","src":"496:63:16","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":2663,"name":"ECDSAInvalidSignature","nameLocation":"570:21:16","nodeType":"ErrorDefinition","parameters":{"id":2662,"nodeType":"ParameterList","parameters":[],"src":"591:2:16"},"src":"564:30:16"},{"documentation":{"id":2664,"nodeType":"StructuredDocumentation","src":"600:60:16","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":2668,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:16","nodeType":"ErrorDefinition","parameters":{"id":2667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2666,"mutability":"mutable","name":"length","nameLocation":"707:6:16","nodeType":"VariableDeclaration","scope":2668,"src":"699:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2665,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:16"},"src":"665:50:16"},{"documentation":{"id":2669,"nodeType":"StructuredDocumentation","src":"721:85:16","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":2673,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:16","nodeType":"ErrorDefinition","parameters":{"id":2672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2671,"mutability":"mutable","name":"s","nameLocation":"848:1:16","nodeType":"VariableDeclaration","scope":2673,"src":"840:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2670,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:16"},"src":"811:40:16"},{"body":{"id":2725,"nodeType":"Block","src":"2242:653:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2688,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"2256:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2266:6:16","memberName":"length","nodeType":"MemberAccess","src":"2256:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":2690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2276:2:16","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2256:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2723,"nodeType":"Block","src":"2781:108:16","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2811:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2803:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2710,"name":"address","nodeType":"ElementaryTypeName","src":"2803:7:16","typeDescriptions":{}}},"id":2713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2803:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2714,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"2815:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2660_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2828:22:16","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2658,"src":"2815:35:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2660","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":2718,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"2860:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2870:6:16","memberName":"length","nodeType":"MemberAccess","src":"2860:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2852:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2716,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2852:7:16","typeDescriptions":{}}},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2852:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2721,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2802:76:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2660_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2687,"id":2722,"nodeType":"Return","src":"2795:83:16"}]},"id":2724,"nodeType":"IfStatement","src":"2252:637:16","trueBody":{"id":2709,"nodeType":"Block","src":"2280:495:16","statements":[{"assignments":[2693],"declarations":[{"constant":false,"id":2693,"mutability":"mutable","name":"r","nameLocation":"2302:1:16","nodeType":"VariableDeclaration","scope":2709,"src":"2294:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2692,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2294:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2694,"nodeType":"VariableDeclarationStatement","src":"2294:9:16"},{"assignments":[2696],"declarations":[{"constant":false,"id":2696,"mutability":"mutable","name":"s","nameLocation":"2325:1:16","nodeType":"VariableDeclaration","scope":2709,"src":"2317:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2695,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2317:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2697,"nodeType":"VariableDeclarationStatement","src":"2317:9:16"},{"assignments":[2699],"declarations":[{"constant":false,"id":2699,"mutability":"mutable","name":"v","nameLocation":"2346:1:16","nodeType":"VariableDeclaration","scope":2709,"src":"2340:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2698,"name":"uint8","nodeType":"ElementaryTypeName","src":"2340:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2700,"nodeType":"VariableDeclarationStatement","src":"2340:7:16"},{"AST":{"nativeSrc":"2548:171:16","nodeType":"YulBlock","src":"2548:171:16","statements":[{"nativeSrc":"2566:32:16","nodeType":"YulAssignment","src":"2566:32:16","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2581:9:16","nodeType":"YulIdentifier","src":"2581:9:16"},{"kind":"number","nativeSrc":"2592:4:16","nodeType":"YulLiteral","src":"2592:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2577:3:16","nodeType":"YulIdentifier","src":"2577:3:16"},"nativeSrc":"2577:20:16","nodeType":"YulFunctionCall","src":"2577:20:16"}],"functionName":{"name":"mload","nativeSrc":"2571:5:16","nodeType":"YulIdentifier","src":"2571:5:16"},"nativeSrc":"2571:27:16","nodeType":"YulFunctionCall","src":"2571:27:16"},"variableNames":[{"name":"r","nativeSrc":"2566:1:16","nodeType":"YulIdentifier","src":"2566:1:16"}]},{"nativeSrc":"2615:32:16","nodeType":"YulAssignment","src":"2615:32:16","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2630:9:16","nodeType":"YulIdentifier","src":"2630:9:16"},{"kind":"number","nativeSrc":"2641:4:16","nodeType":"YulLiteral","src":"2641:4:16","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2626:3:16","nodeType":"YulIdentifier","src":"2626:3:16"},"nativeSrc":"2626:20:16","nodeType":"YulFunctionCall","src":"2626:20:16"}],"functionName":{"name":"mload","nativeSrc":"2620:5:16","nodeType":"YulIdentifier","src":"2620:5:16"},"nativeSrc":"2620:27:16","nodeType":"YulFunctionCall","src":"2620:27:16"},"variableNames":[{"name":"s","nativeSrc":"2615:1:16","nodeType":"YulIdentifier","src":"2615:1:16"}]},{"nativeSrc":"2664:41:16","nodeType":"YulAssignment","src":"2664:41:16","value":{"arguments":[{"kind":"number","nativeSrc":"2674:1:16","nodeType":"YulLiteral","src":"2674:1:16","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2687:9:16","nodeType":"YulIdentifier","src":"2687:9:16"},{"kind":"number","nativeSrc":"2698:4:16","nodeType":"YulLiteral","src":"2698:4:16","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2683:3:16","nodeType":"YulIdentifier","src":"2683:3:16"},"nativeSrc":"2683:20:16","nodeType":"YulFunctionCall","src":"2683:20:16"}],"functionName":{"name":"mload","nativeSrc":"2677:5:16","nodeType":"YulIdentifier","src":"2677:5:16"},"nativeSrc":"2677:27:16","nodeType":"YulFunctionCall","src":"2677:27:16"}],"functionName":{"name":"byte","nativeSrc":"2669:4:16","nodeType":"YulIdentifier","src":"2669:4:16"},"nativeSrc":"2669:36:16","nodeType":"YulFunctionCall","src":"2669:36:16"},"variableNames":[{"name":"v","nativeSrc":"2664:1:16","nodeType":"YulIdentifier","src":"2664:1:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2693,"isOffset":false,"isSlot":false,"src":"2566:1:16","valueSize":1},{"declaration":2696,"isOffset":false,"isSlot":false,"src":"2615:1:16","valueSize":1},{"declaration":2678,"isOffset":false,"isSlot":false,"src":"2581:9:16","valueSize":1},{"declaration":2678,"isOffset":false,"isSlot":false,"src":"2630:9:16","valueSize":1},{"declaration":2678,"isOffset":false,"isSlot":false,"src":"2687:9:16","valueSize":1},{"declaration":2699,"isOffset":false,"isSlot":false,"src":"2664:1:16","valueSize":1}],"id":2701,"nodeType":"InlineAssembly","src":"2539:180:16"},{"expression":{"arguments":[{"id":2703,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"2750:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2704,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2699,"src":"2756:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2705,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"2759:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2706,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"2762:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2702,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2726,2806,2914],"referencedDeclaration":2914,"src":"2739:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2660_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2660_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2687,"id":2708,"nodeType":"Return","src":"2732:32:16"}]}}]},"documentation":{"id":2674,"nodeType":"StructuredDocumentation","src":"857:1267:16","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":2726,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:16","nodeType":"FunctionDefinition","parameters":{"id":2679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2676,"mutability":"mutable","name":"hash","nameLocation":"2157:4:16","nodeType":"VariableDeclaration","scope":2726,"src":"2149:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2675,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2149:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2678,"mutability":"mutable","name":"signature","nameLocation":"2176:9:16","nodeType":"VariableDeclaration","scope":2726,"src":"2163:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2677,"name":"bytes","nodeType":"ElementaryTypeName","src":"2163:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:38:16"},"returnParameters":{"id":2687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2681,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2726,"src":"2210:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2680,"name":"address","nodeType":"ElementaryTypeName","src":"2210:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2726,"src":"2219:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2660","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2683,"nodeType":"UserDefinedTypeName","pathNode":{"id":2682,"name":"RecoverError","nameLocations":["2219:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":2660,"src":"2219:12:16"},"referencedDeclaration":2660,"src":"2219:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2660","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2686,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2726,"src":"2233:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2685,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2233:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2209:32:16"},"scope":3000,"src":"2129:766:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2755,"nodeType":"Block","src":"3789:168:16","statements":[{"assignments":[2737,2740,2742],"declarations":[{"constant":false,"id":2737,"mutability":"mutable","name":"recovered","nameLocation":"3808:9:16","nodeType":"VariableDeclaration","scope":2755,"src":"3800:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2736,"name":"address","nodeType":"ElementaryTypeName","src":"3800:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2740,"mutability":"mutable","name":"error","nameLocation":"3832:5:16","nodeType":"VariableDeclaration","scope":2755,"src":"3819:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2660","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2739,"nodeType":"UserDefinedTypeName","pathNode":{"id":2738,"name":"RecoverError","nameLocations":["3819:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":2660,"src":"3819:12:16"},"referencedDeclaration":2660,"src":"3819:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2660","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2742,"mutability":"mutable","name":"errorArg","nameLocation":"3847:8:16","nodeType":"VariableDeclaration","scope":2755,"src":"3839:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2741,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3839:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2747,"initialValue":{"arguments":[{"id":2744,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"3870:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2745,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"3876:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2743,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2726,2806,2914],"referencedDeclaration":2726,"src":"3859:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2660_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3859:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2660_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3799:87:16"},{"expression":{"arguments":[{"id":2749,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"3908:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2660","typeString":"enum ECDSA.RecoverError"}},{"id":2750,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"3915:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2660","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2748,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"3896:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2660_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3896:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2752,"nodeType":"ExpressionStatement","src":"3896:28:16"},{"expression":{"id":2753,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"3941:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2735,"id":2754,"nodeType":"Return","src":"3934:16:16"}]},"documentation":{"id":2727,"nodeType":"StructuredDocumentation","src":"2901:796:16","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":2756,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3711:7:16","nodeType":"FunctionDefinition","parameters":{"id":2732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2729,"mutability":"mutable","name":"hash","nameLocation":"3727:4:16","nodeType":"VariableDeclaration","scope":2756,"src":"3719:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2728,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3719:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2731,"mutability":"mutable","name":"signature","nameLocation":"3746:9:16","nodeType":"VariableDeclaration","scope":2756,"src":"3733:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2730,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3718:38:16"},"returnParameters":{"id":2735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2734,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2756,"src":"3780:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2733,"name":"address","nodeType":"ElementaryTypeName","src":"3780:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3779:9:16"},"scope":3000,"src":"3702:255:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2805,"nodeType":"Block","src":"4285:342:16","statements":[{"id":2804,"nodeType":"UncheckedBlock","src":"4295:326:16","statements":[{"assignments":[2774],"declarations":[{"constant":false,"id":2774,"mutability":"mutable","name":"s","nameLocation":"4327:1:16","nodeType":"VariableDeclaration","scope":2804,"src":"4319:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2773,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4319:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2781,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2775,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"4331:2:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":2778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4344:66:16","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":2777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4336:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2776,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4336:7:16","typeDescriptions":{}}},"id":2779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4336:75:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4331:80:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4319:92:16"},{"assignments":[2783],"declarations":[{"constant":false,"id":2783,"mutability":"mutable","name":"v","nameLocation":"4528:1:16","nodeType":"VariableDeclaration","scope":2804,"src":"4522:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2782,"name":"uint8","nodeType":"ElementaryTypeName","src":"4522:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2796,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2788,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"4547:2:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4539:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2786,"name":"uint256","nodeType":"ElementaryTypeName","src":"4539:7:16","typeDescriptions":{}}},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4539:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4554:3:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4539:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2792,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4538:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":2793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4561:2:16","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4538:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2784,"name":"uint8","nodeType":"ElementaryTypeName","src":"4532:5:16","typeDescriptions":{}}},"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4522:42:16"},{"expression":{"arguments":[{"id":2798,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"4596:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2799,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"4602:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2800,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"4605:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2801,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"4608:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2797,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2726,2806,2914],"referencedDeclaration":2914,"src":"4585:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2660_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4585:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2660_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2772,"id":2803,"nodeType":"Return","src":"4578:32:16"}]}]},"documentation":{"id":2757,"nodeType":"StructuredDocumentation","src":"3963:205:16","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"},"id":2806,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4182:10:16","nodeType":"FunctionDefinition","parameters":{"id":2764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2759,"mutability":"mutable","name":"hash","nameLocation":"4201:4:16","nodeType":"VariableDeclaration","scope":2806,"src":"4193:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2758,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4193:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2761,"mutability":"mutable","name":"r","nameLocation":"4215:1:16","nodeType":"VariableDeclaration","scope":2806,"src":"4207:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2760,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4207:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2763,"mutability":"mutable","name":"vs","nameLocation":"4226:2:16","nodeType":"VariableDeclaration","scope":2806,"src":"4218:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2762,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4218:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4192:37:16"},"returnParameters":{"id":2772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2806,"src":"4253:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2765,"name":"address","nodeType":"ElementaryTypeName","src":"4253:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2806,"src":"4262:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2660","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2768,"nodeType":"UserDefinedTypeName","pathNode":{"id":2767,"name":"RecoverError","nameLocations":["4262:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":2660,"src":"4262:12:16"},"referencedDeclaration":2660,"src":"4262:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2660","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2806,"src":"4276:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2770,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4276:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4252:32:16"},"scope":3000,"src":"4173:454:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2838,"nodeType":"Block","src":"4840:164:16","statements":[{"assignments":[2819,2822,2824],"declarations":[{"constant":false,"id":2819,"mutability":"mutable","name":"recovered","nameLocation":"4859:9:16","nodeType":"VariableDeclaration","scope":2838,"src":"4851:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2818,"name":"address","nodeType":"ElementaryTypeName","src":"4851:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2822,"mutability":"mutable","name":"error","nameLocation":"4883:5:16","nodeType":"VariableDeclaration","scope":2838,"src":"4870:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2660","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2821,"nodeType":"UserDefinedTypeName","pathNode":{"id":2820,"name":"RecoverError","nameLocations":["4870:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":2660,"src":"4870:12:16"},"referencedDeclaration":2660,"src":"4870:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2660","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2824,"mutability":"mutable","name":"errorArg","nameLocation":"4898:8:16","nodeType":"VariableDeclaration","scope":2838,"src":"4890:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2823,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4890:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2830,"initialValue":{"arguments":[{"id":2826,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2809,"src":"4921:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2827,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"4927:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2828,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"4930:2:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2825,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2726,2806,2914],"referencedDeclaration":2806,"src":"4910:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2660_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4910:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2660_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4850:83:16"},{"expression":{"arguments":[{"id":2832,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"4955:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2660","typeString":"enum ECDSA.RecoverError"}},{"id":2833,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"4962:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2660","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2831,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"4943:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2660_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4943:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2835,"nodeType":"ExpressionStatement","src":"4943:28:16"},{"expression":{"id":2836,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"4988:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2817,"id":2837,"nodeType":"Return","src":"4981:16:16"}]},"documentation":{"id":2807,"nodeType":"StructuredDocumentation","src":"4633:116:16","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":2839,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4763:7:16","nodeType":"FunctionDefinition","parameters":{"id":2814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2809,"mutability":"mutable","name":"hash","nameLocation":"4779:4:16","nodeType":"VariableDeclaration","scope":2839,"src":"4771:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2808,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4771:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2811,"mutability":"mutable","name":"r","nameLocation":"4793:1:16","nodeType":"VariableDeclaration","scope":2839,"src":"4785:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2810,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4785:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2813,"mutability":"mutable","name":"vs","nameLocation":"4804:2:16","nodeType":"VariableDeclaration","scope":2839,"src":"4796:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2812,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4796:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4770:37:16"},"returnParameters":{"id":2817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2839,"src":"4831:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2815,"name":"address","nodeType":"ElementaryTypeName","src":"4831:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4830:9:16"},"scope":3000,"src":"4754:250:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2913,"nodeType":"Block","src":"5298:1372:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2860,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"6194:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6186:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2858,"name":"uint256","nodeType":"ElementaryTypeName","src":"6186:7:16","typeDescriptions":{}}},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":2862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6199:66:16","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6186:79:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2874,"nodeType":"IfStatement","src":"6182:164:16","trueBody":{"id":2873,"nodeType":"Block","src":"6267:79:16","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6297:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6289:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2864,"name":"address","nodeType":"ElementaryTypeName","src":"6289:7:16","typeDescriptions":{}}},"id":2867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6289:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2868,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"6301:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2660_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6314:17:16","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2659,"src":"6301:30:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2660","typeString":"enum ECDSA.RecoverError"}},{"id":2870,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"6333:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2871,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6288:47:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2660_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2857,"id":2872,"nodeType":"Return","src":"6281:54:16"}]}},{"assignments":[2876],"declarations":[{"constant":false,"id":2876,"mutability":"mutable","name":"signer","nameLocation":"6448:6:16","nodeType":"VariableDeclaration","scope":2913,"src":"6440:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2875,"name":"address","nodeType":"ElementaryTypeName","src":"6440:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2883,"initialValue":{"arguments":[{"id":2878,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"6467:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2879,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2844,"src":"6473:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2880,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"6476:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2881,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"6479:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2877,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6457:9:16","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6457:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6440:41:16"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2884,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2876,"src":"6495:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6513:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6505:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2885,"name":"address","nodeType":"ElementaryTypeName","src":"6505:7:16","typeDescriptions":{}}},"id":2888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6505:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6495:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2903,"nodeType":"IfStatement","src":"6491:113:16","trueBody":{"id":2902,"nodeType":"Block","src":"6517:87:16","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6547:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6539:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2890,"name":"address","nodeType":"ElementaryTypeName","src":"6539:7:16","typeDescriptions":{}}},"id":2893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6539:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2894,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"6551:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2660_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6564:16:16","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2657,"src":"6551:29:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2660","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":2898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6590:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6582:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2896,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6582:7:16","typeDescriptions":{}}},"id":2899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6582:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2900,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6538:55:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2660_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2857,"id":2901,"nodeType":"Return","src":"6531:62:16"}]}},{"expression":{"components":[{"id":2904,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2876,"src":"6622:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2905,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"6630:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2660_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6643:7:16","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2656,"src":"6630:20:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2660","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":2909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6652:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2907,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6652:7:16","typeDescriptions":{}}},"id":2910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6652:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2911,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6621:42:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2660_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2857,"id":2912,"nodeType":"Return","src":"6614:49:16"}]},"documentation":{"id":2840,"nodeType":"StructuredDocumentation","src":"5010:125:16","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2914,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5149:10:16","nodeType":"FunctionDefinition","parameters":{"id":2849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2842,"mutability":"mutable","name":"hash","nameLocation":"5177:4:16","nodeType":"VariableDeclaration","scope":2914,"src":"5169:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2841,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5169:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2844,"mutability":"mutable","name":"v","nameLocation":"5197:1:16","nodeType":"VariableDeclaration","scope":2914,"src":"5191:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2843,"name":"uint8","nodeType":"ElementaryTypeName","src":"5191:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2846,"mutability":"mutable","name":"r","nameLocation":"5216:1:16","nodeType":"VariableDeclaration","scope":2914,"src":"5208:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2845,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5208:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2848,"mutability":"mutable","name":"s","nameLocation":"5235:1:16","nodeType":"VariableDeclaration","scope":2914,"src":"5227:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2847,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5227:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5159:83:16"},"returnParameters":{"id":2857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2914,"src":"5266:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2850,"name":"address","nodeType":"ElementaryTypeName","src":"5266:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2854,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2914,"src":"5275:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2660","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2853,"nodeType":"UserDefinedTypeName","pathNode":{"id":2852,"name":"RecoverError","nameLocations":["5275:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":2660,"src":"5275:12:16"},"referencedDeclaration":2660,"src":"5275:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2660","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2914,"src":"5289:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2855,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5289:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5265:32:16"},"scope":3000,"src":"5140:1530:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2949,"nodeType":"Block","src":"6897:166:16","statements":[{"assignments":[2929,2932,2934],"declarations":[{"constant":false,"id":2929,"mutability":"mutable","name":"recovered","nameLocation":"6916:9:16","nodeType":"VariableDeclaration","scope":2949,"src":"6908:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2928,"name":"address","nodeType":"ElementaryTypeName","src":"6908:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2932,"mutability":"mutable","name":"error","nameLocation":"6940:5:16","nodeType":"VariableDeclaration","scope":2949,"src":"6927:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2660","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2931,"nodeType":"UserDefinedTypeName","pathNode":{"id":2930,"name":"RecoverError","nameLocations":["6927:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":2660,"src":"6927:12:16"},"referencedDeclaration":2660,"src":"6927:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2660","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2934,"mutability":"mutable","name":"errorArg","nameLocation":"6955:8:16","nodeType":"VariableDeclaration","scope":2949,"src":"6947:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2933,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6947:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2941,"initialValue":{"arguments":[{"id":2936,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"6978:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2937,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"6984:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2938,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"6987:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2939,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"6990:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2935,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2726,2806,2914],"referencedDeclaration":2914,"src":"6967:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2660_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2660_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6907:85:16"},{"expression":{"arguments":[{"id":2943,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"7014:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2660","typeString":"enum ECDSA.RecoverError"}},{"id":2944,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"7021:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2660","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2942,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"7002:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2660_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7002:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2946,"nodeType":"ExpressionStatement","src":"7002:28:16"},{"expression":{"id":2947,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"7047:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2927,"id":2948,"nodeType":"Return","src":"7040:16:16"}]},"documentation":{"id":2915,"nodeType":"StructuredDocumentation","src":"6676:122:16","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2950,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6812:7:16","nodeType":"FunctionDefinition","parameters":{"id":2924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2917,"mutability":"mutable","name":"hash","nameLocation":"6828:4:16","nodeType":"VariableDeclaration","scope":2950,"src":"6820:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2916,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6820:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2919,"mutability":"mutable","name":"v","nameLocation":"6840:1:16","nodeType":"VariableDeclaration","scope":2950,"src":"6834:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2918,"name":"uint8","nodeType":"ElementaryTypeName","src":"6834:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2921,"mutability":"mutable","name":"r","nameLocation":"6851:1:16","nodeType":"VariableDeclaration","scope":2950,"src":"6843:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2920,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6843:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2923,"mutability":"mutable","name":"s","nameLocation":"6862:1:16","nodeType":"VariableDeclaration","scope":2950,"src":"6854:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2922,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6854:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6819:45:16"},"returnParameters":{"id":2927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2926,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2950,"src":"6888:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2925,"name":"address","nodeType":"ElementaryTypeName","src":"6888:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6887:9:16"},"scope":3000,"src":"6803:260:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2998,"nodeType":"Block","src":"7268:460:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2660","typeString":"enum ECDSA.RecoverError"},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2959,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"7282:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2660","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2960,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"7291:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2660_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7304:7:16","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2656,"src":"7291:20:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2660","typeString":"enum ECDSA.RecoverError"}},"src":"7282:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2660","typeString":"enum ECDSA.RecoverError"},"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2965,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"7378:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2660","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2966,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"7387:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2660_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7400:16:16","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2657,"src":"7387:29:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2660","typeString":"enum ECDSA.RecoverError"}},"src":"7378:38:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2660","typeString":"enum ECDSA.RecoverError"},"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2973,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"7483:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2660","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2974,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"7492:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2660_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7505:22:16","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2658,"src":"7492:35:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2660","typeString":"enum ECDSA.RecoverError"}},"src":"7483:44:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2660","typeString":"enum ECDSA.RecoverError"},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2985,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"7617:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2660","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2986,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"7626:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2660_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7639:17:16","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2659,"src":"7626:30:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2660","typeString":"enum ECDSA.RecoverError"}},"src":"7617:39:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2994,"nodeType":"IfStatement","src":"7613:109:16","trueBody":{"id":2993,"nodeType":"Block","src":"7658:64:16","statements":[{"errorCall":{"arguments":[{"id":2990,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"7702:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2989,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"7679:22:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7679:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2992,"nodeType":"RevertStatement","src":"7672:39:16"}]}},"id":2995,"nodeType":"IfStatement","src":"7479:243:16","trueBody":{"id":2984,"nodeType":"Block","src":"7529:78:16","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2980,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"7586:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7578:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2978,"name":"uint256","nodeType":"ElementaryTypeName","src":"7578:7:16","typeDescriptions":{}}},"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7578:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2977,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"7550:27:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7550:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2983,"nodeType":"RevertStatement","src":"7543:53:16"}]}},"id":2996,"nodeType":"IfStatement","src":"7374:348:16","trueBody":{"id":2972,"nodeType":"Block","src":"7418:55:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2969,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2663,"src":"7439:21:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7439:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2971,"nodeType":"RevertStatement","src":"7432:30:16"}]}},"id":2997,"nodeType":"IfStatement","src":"7278:444:16","trueBody":{"id":2964,"nodeType":"Block","src":"7313:55:16","statements":[{"functionReturnParameters":2958,"id":2963,"nodeType":"Return","src":"7327:7:16"}]}}]},"documentation":{"id":2951,"nodeType":"StructuredDocumentation","src":"7069:122:16","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":2999,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7205:11:16","nodeType":"FunctionDefinition","parameters":{"id":2957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2954,"mutability":"mutable","name":"error","nameLocation":"7230:5:16","nodeType":"VariableDeclaration","scope":2999,"src":"7217:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2660","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2953,"nodeType":"UserDefinedTypeName","pathNode":{"id":2952,"name":"RecoverError","nameLocations":["7217:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":2660,"src":"7217:12:16"},"referencedDeclaration":2660,"src":"7217:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2660","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2956,"mutability":"mutable","name":"errorArg","nameLocation":"7245:8:16","nodeType":"VariableDeclaration","scope":2999,"src":"7237:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2955,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7237:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7216:38:16"},"returnParameters":{"id":2958,"nodeType":"ParameterList","parameters":[],"src":"7268:0:16"},"scope":3000,"src":"7196:532:16","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3001,"src":"344:7386:16","usedErrors":[2663,2668,2673],"usedEvents":[]}],"src":"112:7619:16"},"id":16},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[3227],"IERC5267":[483],"MessageHashUtils":[3301],"ShortString":[2076],"ShortStrings":[2287]},"id":3228,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3002,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:17"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":3004,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3228,"sourceUnit":3302,"src":"139:56:17","symbolAliases":[{"foreign":{"id":3003,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3301,"src":"147:16:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":3007,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3228,"sourceUnit":2288,"src":"196:62:17","symbolAliases":[{"foreign":{"id":3005,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"204:12:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3006,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"218:11:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":3009,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3228,"sourceUnit":484,"src":"259:55:17","symbolAliases":[{"foreign":{"id":3008,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"267:8:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3011,"name":"IERC5267","nameLocations":["1988:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":483,"src":"1988:8:17"},"id":3012,"nodeType":"InheritanceSpecifier","src":"1988:8:17"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":3010,"nodeType":"StructuredDocumentation","src":"316:1643:17","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":3227,"linearizedBaseContracts":[3227,483],"name":"EIP712","nameLocation":"1978:6:17","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3014,"libraryName":{"id":3013,"name":"ShortStrings","nameLocations":["2009:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":2287,"src":"2009:12:17"},"nodeType":"UsingForDirective","src":"2003:25:17"},{"constant":true,"id":3019,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:17","nodeType":"VariableDeclaration","scope":3227,"src":"2034:140:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3015,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":3017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":3016,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3021,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:17","nodeType":"VariableDeclaration","scope":3227,"src":"2373:48:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3020,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3023,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:17","nodeType":"VariableDeclaration","scope":3227,"src":"2427:40:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3022,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3025,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:17","nodeType":"VariableDeclaration","scope":3227,"src":"2473:37:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3024,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":3027,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:17","nodeType":"VariableDeclaration","scope":3227,"src":"2517:37:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3026,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3029,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:17","nodeType":"VariableDeclaration","scope":3227,"src":"2560:40:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3028,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3032,"mutability":"immutable","name":"_name","nameLocation":"2637:5:17","nodeType":"VariableDeclaration","scope":3227,"src":"2607:35:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2076","typeString":"ShortString"},"typeName":{"id":3031,"nodeType":"UserDefinedTypeName","pathNode":{"id":3030,"name":"ShortString","nameLocations":["2607:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2076,"src":"2607:11:17"},"referencedDeclaration":2076,"src":"2607:11:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2076","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3035,"mutability":"immutable","name":"_version","nameLocation":"2678:8:17","nodeType":"VariableDeclaration","scope":3227,"src":"2648:38:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2076","typeString":"ShortString"},"typeName":{"id":3034,"nodeType":"UserDefinedTypeName","pathNode":{"id":3033,"name":"ShortString","nameLocations":["2648:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2076,"src":"2648:11:17"},"referencedDeclaration":2076,"src":"2648:11:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2076","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3037,"mutability":"mutable","name":"_nameFallback","nameLocation":"2707:13:17","nodeType":"VariableDeclaration","scope":3227,"src":"2692:28:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3036,"name":"string","nodeType":"ElementaryTypeName","src":"2692:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":3039,"mutability":"mutable","name":"_versionFallback","nameLocation":"2741:16:17","nodeType":"VariableDeclaration","scope":3227,"src":"2726:31:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3038,"name":"string","nodeType":"ElementaryTypeName","src":"2726:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":3096,"nodeType":"Block","src":"3383:376:17","statements":[{"expression":{"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3047,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"3393:5:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2076","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3050,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"3432:13:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3048,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"3401:4:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3406:25:17","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2228,"src":"3401:30:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2076_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3401:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2076","typeString":"ShortString"}},"src":"3393:53:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2076","typeString":"ShortString"}},"id":3053,"nodeType":"ExpressionStatement","src":"3393:53:17"},{"expression":{"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3054,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"3456:8:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2076","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3057,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"3501:16:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3055,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"3467:7:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3475:25:17","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2228,"src":"3467:33:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2076_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3467:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2076","typeString":"ShortString"}},"src":"3456:62:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2076","typeString":"ShortString"}},"id":3060,"nodeType":"ExpressionStatement","src":"3456:62:17"},{"expression":{"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3061,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"3528:11:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3065,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"3558:4:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3552:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3063,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:17","typeDescriptions":{}}},"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3552:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3062,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3542:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3528:36:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3069,"nodeType":"ExpressionStatement","src":"3528:36:17"},{"expression":{"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3070,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"3574:14:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3074,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"3607:7:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3601:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3072,"name":"bytes","nodeType":"ElementaryTypeName","src":"3601:5:17","typeDescriptions":{}}},"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3601:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3071,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3591:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3574:42:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3078,"nodeType":"ExpressionStatement","src":"3574:42:17"},{"expression":{"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3079,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"3627:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3080,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3644:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3650:7:17","memberName":"chainid","nodeType":"MemberAccess","src":"3644:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3627:30:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3083,"nodeType":"ExpressionStatement","src":"3627:30:17"},{"expression":{"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3084,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"3667:22:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3085,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"3692:21:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3692:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3667:48:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3088,"nodeType":"ExpressionStatement","src":"3667:48:17"},{"expression":{"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3089,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"3725:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3092,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3747:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3227","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3227","typeString":"contract EIP712"}],"id":3091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3739:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3090,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:17","typeDescriptions":{}}},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3725:27:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3095,"nodeType":"ExpressionStatement","src":"3725:27:17"}]},"documentation":{"id":3040,"nodeType":"StructuredDocumentation","src":"2764:559:17","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":3097,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3042,"mutability":"mutable","name":"name","nameLocation":"3354:4:17","nodeType":"VariableDeclaration","scope":3097,"src":"3340:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3041,"name":"string","nodeType":"ElementaryTypeName","src":"3340:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3044,"mutability":"mutable","name":"version","nameLocation":"3374:7:17","nodeType":"VariableDeclaration","scope":3097,"src":"3360:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3043,"name":"string","nodeType":"ElementaryTypeName","src":"3360:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3339:43:17"},"returnParameters":{"id":3046,"nodeType":"ParameterList","parameters":[],"src":"3383:0:17"},"scope":3227,"src":"3328:431:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3122,"nodeType":"Block","src":"3907:200:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3105,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3929:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3227","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3227","typeString":"contract EIP712"}],"id":3104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3921:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3103,"name":"address","nodeType":"ElementaryTypeName","src":"3921:7:17","typeDescriptions":{}}},"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3921:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3107,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"3938:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3921:28:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3109,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3953:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3959:7:17","memberName":"chainid","nodeType":"MemberAccess","src":"3953:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3111,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"3970:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3953:31:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3921:63:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3120,"nodeType":"Block","src":"4046:55:17","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3117,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"4067:21:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4067:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3102,"id":3119,"nodeType":"Return","src":"4060:30:17"}]},"id":3121,"nodeType":"IfStatement","src":"3917:184:17","trueBody":{"id":3116,"nodeType":"Block","src":"3986:54:17","statements":[{"expression":{"id":3114,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"4007:22:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3102,"id":3115,"nodeType":"Return","src":"4000:29:17"}]}}]},"documentation":{"id":3098,"nodeType":"StructuredDocumentation","src":"3765:75:17","text":" @dev Returns the domain separator for the current chain."},"id":3123,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3854:18:17","nodeType":"FunctionDefinition","parameters":{"id":3099,"nodeType":"ParameterList","parameters":[],"src":"3872:2:17"},"returnParameters":{"id":3102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3123,"src":"3898:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3100,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3898:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3897:9:17"},"scope":3227,"src":"3845:262:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3143,"nodeType":"Block","src":"4177:115:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":3131,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"4215:9:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3132,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"4226:11:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3133,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"4239:14:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3134,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4255:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4261:7:17","memberName":"chainid","nodeType":"MemberAccess","src":"4255:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3138,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4278:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3227","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3227","typeString":"contract EIP712"}],"id":3137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3136,"name":"address","nodeType":"ElementaryTypeName","src":"4270:7:17","typeDescriptions":{}}},"id":3139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3129,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4204:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4208:6:17","memberName":"encode","nodeType":"MemberAccess","src":"4204:10:17","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4204:80:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3128,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4194:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4194:91:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3127,"id":3142,"nodeType":"Return","src":"4187:98:17"}]},"id":3144,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4122:21:17","nodeType":"FunctionDefinition","parameters":{"id":3124,"nodeType":"ParameterList","parameters":[],"src":"4143:2:17"},"returnParameters":{"id":3127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3144,"src":"4168:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3125,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:9:17"},"scope":3227,"src":"4113:179:17","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3159,"nodeType":"Block","src":"5003:90:17","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3154,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"5053:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5053:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3156,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"5075:10:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3152,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3301,"src":"5020:16:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$3301_$","typeString":"type(library MessageHashUtils)"}},"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5037:15:17","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":3300,"src":"5020:32:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5020:66:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3151,"id":3158,"nodeType":"Return","src":"5013:73:17"}]},"documentation":{"id":3145,"nodeType":"StructuredDocumentation","src":"4298:614:17","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":3160,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4926:16:17","nodeType":"FunctionDefinition","parameters":{"id":3148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3147,"mutability":"mutable","name":"structHash","nameLocation":"4951:10:17","nodeType":"VariableDeclaration","scope":3160,"src":"4943:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3146,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4943:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4942:20:17"},"returnParameters":{"id":3151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3160,"src":"4994:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4994:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4993:9:17"},"scope":3227,"src":"4917:176:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[482],"body":{"id":3201,"nodeType":"Block","src":"5472:229:17","statements":[{"expression":{"components":[{"hexValue":"0f","id":3179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5503:7:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":3180,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3214,"src":"5533:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5533:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3182,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3226,"src":"5560:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5560:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":3184,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5590:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5596:7:17","memberName":"chainid","nodeType":"MemberAccess","src":"5590:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3188,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5625:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3227","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3227","typeString":"contract EIP712"}],"id":3187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5617:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3186,"name":"address","nodeType":"ElementaryTypeName","src":"5617:7:17","typeDescriptions":{}}},"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5652:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5644:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3190,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5644:7:17","typeDescriptions":{}}},"id":3193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":3197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5682:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5668:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3194,"name":"uint256","nodeType":"ElementaryTypeName","src":"5672:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3195,"nodeType":"ArrayTypeName","src":"5672:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5668:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3199,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5489:205:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":3178,"id":3200,"nodeType":"Return","src":"5482:212:17"}]},"documentation":{"id":3161,"nodeType":"StructuredDocumentation","src":"5099:40:17","text":" @dev See {IERC-5267}."},"functionSelector":"84b0196e","id":3202,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5153:12:17","nodeType":"FunctionDefinition","parameters":{"id":3162,"nodeType":"ParameterList","parameters":[],"src":"5165:2:17"},"returnParameters":{"id":3178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3164,"mutability":"mutable","name":"fields","nameLocation":"5249:6:17","nodeType":"VariableDeclaration","scope":3202,"src":"5242:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3163,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5242:6:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":3166,"mutability":"mutable","name":"name","nameLocation":"5283:4:17","nodeType":"VariableDeclaration","scope":3202,"src":"5269:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3165,"name":"string","nodeType":"ElementaryTypeName","src":"5269:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3168,"mutability":"mutable","name":"version","nameLocation":"5315:7:17","nodeType":"VariableDeclaration","scope":3202,"src":"5301:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3167,"name":"string","nodeType":"ElementaryTypeName","src":"5301:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3170,"mutability":"mutable","name":"chainId","nameLocation":"5344:7:17","nodeType":"VariableDeclaration","scope":3202,"src":"5336:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3169,"name":"uint256","nodeType":"ElementaryTypeName","src":"5336:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3172,"mutability":"mutable","name":"verifyingContract","nameLocation":"5373:17:17","nodeType":"VariableDeclaration","scope":3202,"src":"5365:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3171,"name":"address","nodeType":"ElementaryTypeName","src":"5365:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3174,"mutability":"mutable","name":"salt","nameLocation":"5412:4:17","nodeType":"VariableDeclaration","scope":3202,"src":"5404:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3173,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5404:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3177,"mutability":"mutable","name":"extensions","nameLocation":"5447:10:17","nodeType":"VariableDeclaration","scope":3202,"src":"5430:27:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3175,"name":"uint256","nodeType":"ElementaryTypeName","src":"5430:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3176,"nodeType":"ArrayTypeName","src":"5430:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5228:239:17"},"scope":3227,"src":"5144:557:17","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3213,"nodeType":"Block","src":"6082:65:17","statements":[{"expression":{"arguments":[{"id":3210,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"6126:13:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3208,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"6099:5:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2076","typeString":"ShortString"}},"id":3209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6105:20:17","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2255,"src":"6099:26:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2076_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2076_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6099:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3207,"id":3212,"nodeType":"Return","src":"6092:48:17"}]},"documentation":{"id":3203,"nodeType":"StructuredDocumentation","src":"5707:256:17","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3214,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6030:11:17","nodeType":"FunctionDefinition","parameters":{"id":3204,"nodeType":"ParameterList","parameters":[],"src":"6041:2:17"},"returnParameters":{"id":3207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3214,"src":"6067:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3205,"name":"string","nodeType":"ElementaryTypeName","src":"6067:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6066:15:17"},"scope":3227,"src":"6021:126:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3225,"nodeType":"Block","src":"6537:71:17","statements":[{"expression":{"arguments":[{"id":3222,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"6584:16:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3220,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"6554:8:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2076","typeString":"ShortString"}},"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6563:20:17","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2255,"src":"6554:29:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2076_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2076_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6554:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3219,"id":3224,"nodeType":"Return","src":"6547:54:17"}]},"documentation":{"id":3215,"nodeType":"StructuredDocumentation","src":"6153:262:17","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3226,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6482:14:17","nodeType":"FunctionDefinition","parameters":{"id":3216,"nodeType":"ParameterList","parameters":[],"src":"6496:2:17"},"returnParameters":{"id":3219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3226,"src":"6522:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3217,"name":"string","nodeType":"ElementaryTypeName","src":"6522:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6521:15:17"},"scope":3227,"src":"6473:135:17","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3228,"src":"1960:4650:17","usedErrors":[2084,2086],"usedEvents":[463]}],"src":"113:6498:17"},"id":17},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[3301],"Strings":[2652]},"id":3302,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3229,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":3231,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3302,"sourceUnit":2653,"src":"149:39:18","symbolAliases":[{"foreign":{"id":3230,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"157:7:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":3232,"nodeType":"StructuredDocumentation","src":"190:330:18","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":3301,"linearizedBaseContracts":[3301],"name":"MessageHashUtils","nameLocation":"529:16:18","nodeType":"ContractDefinition","nodes":[{"body":{"id":3241,"nodeType":"Block","src":"1314:368:18","statements":[{"AST":{"nativeSrc":"1376:300:18","nodeType":"YulBlock","src":"1376:300:18","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1397:4:18","nodeType":"YulLiteral","src":"1397:4:18","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1403:34:18","nodeType":"YulLiteral","src":"1403:34:18","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1390:6:18","nodeType":"YulIdentifier","src":"1390:6:18"},"nativeSrc":"1390:48:18","nodeType":"YulFunctionCall","src":"1390:48:18"},"nativeSrc":"1390:48:18","nodeType":"YulExpressionStatement","src":"1390:48:18"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1499:4:18","nodeType":"YulLiteral","src":"1499:4:18","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1505:11:18","nodeType":"YulIdentifier","src":"1505:11:18"}],"functionName":{"name":"mstore","nativeSrc":"1492:6:18","nodeType":"YulIdentifier","src":"1492:6:18"},"nativeSrc":"1492:25:18","nodeType":"YulFunctionCall","src":"1492:25:18"},"nativeSrc":"1492:25:18","nodeType":"YulExpressionStatement","src":"1492:25:18"},{"nativeSrc":"1571:31:18","nodeType":"YulAssignment","src":"1571:31:18","value":{"arguments":[{"kind":"number","nativeSrc":"1591:4:18","nodeType":"YulLiteral","src":"1591:4:18","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1597:4:18","nodeType":"YulLiteral","src":"1597:4:18","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1581:9:18","nodeType":"YulIdentifier","src":"1581:9:18"},"nativeSrc":"1581:21:18","nodeType":"YulFunctionCall","src":"1581:21:18"},"variableNames":[{"name":"digest","nativeSrc":"1571:6:18","nodeType":"YulIdentifier","src":"1571:6:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3238,"isOffset":false,"isSlot":false,"src":"1571:6:18","valueSize":1},{"declaration":3235,"isOffset":false,"isSlot":false,"src":"1505:11:18","valueSize":1}],"id":3240,"nodeType":"InlineAssembly","src":"1367:309:18"}]},"documentation":{"id":3233,"nodeType":"StructuredDocumentation","src":"552:665:18","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":3242,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:18","nodeType":"FunctionDefinition","parameters":{"id":3236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3235,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:18","nodeType":"VariableDeclaration","scope":3242,"src":"1254:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3234,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:18"},"returnParameters":{"id":3239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3238,"mutability":"mutable","name":"digest","nameLocation":"1306:6:18","nodeType":"VariableDeclaration","scope":3242,"src":"1298:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3237,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:18"},"scope":3301,"src":"1222:460:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3267,"nodeType":"Block","src":"2234:143:18","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":3254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2286:32:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":3259,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"2343:7:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2351:6:18","memberName":"length","nodeType":"MemberAccess","src":"2343:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3257,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"2326:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2652_$","typeString":"type(library Strings)"}},"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2334:8:18","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2465,"src":"2326:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2326:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2320:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3255,"name":"bytes","nodeType":"ElementaryTypeName","src":"2320:5:18","typeDescriptions":{}}},"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3263,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"2361:7:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2273:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3251,"name":"bytes","nodeType":"ElementaryTypeName","src":"2273:5:18","typeDescriptions":{}}},"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2279:6:18","memberName":"concat","nodeType":"MemberAccess","src":"2273:12:18","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:96:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3250,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2263:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2263:107:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3249,"id":3266,"nodeType":"Return","src":"2244:126:18"}]},"documentation":{"id":3243,"nodeType":"StructuredDocumentation","src":"1688:455:18","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":3268,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2157:22:18","nodeType":"FunctionDefinition","parameters":{"id":3246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3245,"mutability":"mutable","name":"message","nameLocation":"2193:7:18","nodeType":"VariableDeclaration","scope":3268,"src":"2180:20:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3244,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2179:22:18"},"returnParameters":{"id":3249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3268,"src":"2225:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3247,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2224:9:18"},"scope":3301,"src":"2148:229:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3287,"nodeType":"Block","src":"2831:80:18","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":3281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2875:10:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":3282,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3271,"src":"2887:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3283,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3273,"src":"2898:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3279,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2858:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2862:12:18","memberName":"encodePacked","nodeType":"MemberAccess","src":"2858:16:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2858:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3278,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2848:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2848:56:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3277,"id":3286,"nodeType":"Return","src":"2841:63:18"}]},"documentation":{"id":3269,"nodeType":"StructuredDocumentation","src":"2383:332:18","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":3288,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2729:31:18","nodeType":"FunctionDefinition","parameters":{"id":3274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3271,"mutability":"mutable","name":"validator","nameLocation":"2769:9:18","nodeType":"VariableDeclaration","scope":3288,"src":"2761:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3270,"name":"address","nodeType":"ElementaryTypeName","src":"2761:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3273,"mutability":"mutable","name":"data","nameLocation":"2793:4:18","nodeType":"VariableDeclaration","scope":3288,"src":"2780:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3272,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2760:38:18"},"returnParameters":{"id":3277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3288,"src":"2822:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3275,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2822:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2821:9:18"},"scope":3301,"src":"2720:191:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3299,"nodeType":"Block","src":"3462:292:18","statements":[{"AST":{"nativeSrc":"3524:224:18","nodeType":"YulBlock","src":"3524:224:18","statements":[{"nativeSrc":"3538:22:18","nodeType":"YulVariableDeclaration","src":"3538:22:18","value":{"arguments":[{"kind":"number","nativeSrc":"3555:4:18","nodeType":"YulLiteral","src":"3555:4:18","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3549:5:18","nodeType":"YulIdentifier","src":"3549:5:18"},"nativeSrc":"3549:11:18","nodeType":"YulFunctionCall","src":"3549:11:18"},"variables":[{"name":"ptr","nativeSrc":"3542:3:18","nodeType":"YulTypedName","src":"3542:3:18","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"3580:3:18","nodeType":"YulIdentifier","src":"3580:3:18"},{"hexValue":"1901","kind":"string","nativeSrc":"3585:10:18","nodeType":"YulLiteral","src":"3585:10:18","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"3573:6:18","nodeType":"YulIdentifier","src":"3573:6:18"},"nativeSrc":"3573:23:18","nodeType":"YulFunctionCall","src":"3573:23:18"},"nativeSrc":"3573:23:18","nodeType":"YulExpressionStatement","src":"3573:23:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3620:3:18","nodeType":"YulIdentifier","src":"3620:3:18"},{"kind":"number","nativeSrc":"3625:4:18","nodeType":"YulLiteral","src":"3625:4:18","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"3616:3:18","nodeType":"YulIdentifier","src":"3616:3:18"},"nativeSrc":"3616:14:18","nodeType":"YulFunctionCall","src":"3616:14:18"},{"name":"domainSeparator","nativeSrc":"3632:15:18","nodeType":"YulIdentifier","src":"3632:15:18"}],"functionName":{"name":"mstore","nativeSrc":"3609:6:18","nodeType":"YulIdentifier","src":"3609:6:18"},"nativeSrc":"3609:39:18","nodeType":"YulFunctionCall","src":"3609:39:18"},"nativeSrc":"3609:39:18","nodeType":"YulExpressionStatement","src":"3609:39:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3672:3:18","nodeType":"YulIdentifier","src":"3672:3:18"},{"kind":"number","nativeSrc":"3677:4:18","nodeType":"YulLiteral","src":"3677:4:18","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3668:3:18","nodeType":"YulIdentifier","src":"3668:3:18"},"nativeSrc":"3668:14:18","nodeType":"YulFunctionCall","src":"3668:14:18"},{"name":"structHash","nativeSrc":"3684:10:18","nodeType":"YulIdentifier","src":"3684:10:18"}],"functionName":{"name":"mstore","nativeSrc":"3661:6:18","nodeType":"YulIdentifier","src":"3661:6:18"},"nativeSrc":"3661:34:18","nodeType":"YulFunctionCall","src":"3661:34:18"},"nativeSrc":"3661:34:18","nodeType":"YulExpressionStatement","src":"3661:34:18"},{"nativeSrc":"3708:30:18","nodeType":"YulAssignment","src":"3708:30:18","value":{"arguments":[{"name":"ptr","nativeSrc":"3728:3:18","nodeType":"YulIdentifier","src":"3728:3:18"},{"kind":"number","nativeSrc":"3733:4:18","nodeType":"YulLiteral","src":"3733:4:18","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"3718:9:18","nodeType":"YulIdentifier","src":"3718:9:18"},"nativeSrc":"3718:20:18","nodeType":"YulFunctionCall","src":"3718:20:18"},"variableNames":[{"name":"digest","nativeSrc":"3708:6:18","nodeType":"YulIdentifier","src":"3708:6:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3296,"isOffset":false,"isSlot":false,"src":"3708:6:18","valueSize":1},{"declaration":3291,"isOffset":false,"isSlot":false,"src":"3632:15:18","valueSize":1},{"declaration":3293,"isOffset":false,"isSlot":false,"src":"3684:10:18","valueSize":1}],"id":3298,"nodeType":"InlineAssembly","src":"3515:233:18"}]},"documentation":{"id":3289,"nodeType":"StructuredDocumentation","src":"2917:431:18","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":3300,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3362:15:18","nodeType":"FunctionDefinition","parameters":{"id":3294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3291,"mutability":"mutable","name":"domainSeparator","nameLocation":"3386:15:18","nodeType":"VariableDeclaration","scope":3300,"src":"3378:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3290,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3378:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3293,"mutability":"mutable","name":"structHash","nameLocation":"3411:10:18","nodeType":"VariableDeclaration","scope":3300,"src":"3403:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3292,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3403:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3377:45:18"},"returnParameters":{"id":3297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3296,"mutability":"mutable","name":"digest","nameLocation":"3454:6:18","nodeType":"VariableDeclaration","scope":3300,"src":"3446:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3295,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3446:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3445:16:18"},"scope":3301,"src":"3353:401:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3302,"src":"521:3235:18","usedErrors":[],"usedEvents":[]}],"src":"123:3634:18"},"id":18},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4355]},"id":4356,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3303,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3304,"nodeType":"StructuredDocumentation","src":"129:73:19","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4355,"linearizedBaseContracts":[4355],"name":"Math","nameLocation":"211:4:19","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3305,"nodeType":"StructuredDocumentation","src":"222:50:19","text":" @dev Muldiv operation overflow."},"errorSelector":"227bc153","id":3307,"name":"MathOverflowedMulDiv","nameLocation":"283:20:19","nodeType":"ErrorDefinition","parameters":{"id":3306,"nodeType":"ParameterList","parameters":[],"src":"303:2:19"},"src":"277:29:19"},{"canonicalName":"Math.Rounding","id":3312,"members":[{"id":3308,"name":"Floor","nameLocation":"336:5:19","nodeType":"EnumValue","src":"336:5:19"},{"id":3309,"name":"Ceil","nameLocation":"379:4:19","nodeType":"EnumValue","src":"379:4:19"},{"id":3310,"name":"Trunc","nameLocation":"421:5:19","nodeType":"EnumValue","src":"421:5:19"},{"id":3311,"name":"Expand","nameLocation":"451:6:19","nodeType":"EnumValue","src":"451:6:19"}],"name":"Rounding","nameLocation":"317:8:19","nodeType":"EnumDefinition","src":"312:169:19"},{"body":{"id":3343,"nodeType":"Block","src":"661:140:19","statements":[{"id":3342,"nodeType":"UncheckedBlock","src":"671:124:19","statements":[{"assignments":[3325],"declarations":[{"constant":false,"id":3325,"mutability":"mutable","name":"c","nameLocation":"703:1:19","nodeType":"VariableDeclaration","scope":3342,"src":"695:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3324,"name":"uint256","nodeType":"ElementaryTypeName","src":"695:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3329,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3326,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"707:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3327,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"711:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"707:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"695:17:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3330,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"730:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3331,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"734:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"730:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3337,"nodeType":"IfStatement","src":"726:28:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"745:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"752:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3335,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"744:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3323,"id":3336,"nodeType":"Return","src":"737:17:19"}},{"expression":{"components":[{"hexValue":"74727565","id":3338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"776:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3339,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"782:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3340,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"775:9:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3323,"id":3341,"nodeType":"Return","src":"768:16:19"}]}]},"documentation":{"id":3313,"nodeType":"StructuredDocumentation","src":"487:93:19","text":" @dev Returns the addition of two unsigned integers, with an overflow flag."},"id":3344,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"594:6:19","nodeType":"FunctionDefinition","parameters":{"id":3318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3315,"mutability":"mutable","name":"a","nameLocation":"609:1:19","nodeType":"VariableDeclaration","scope":3344,"src":"601:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3314,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3317,"mutability":"mutable","name":"b","nameLocation":"620:1:19","nodeType":"VariableDeclaration","scope":3344,"src":"612:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3316,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:19"},"returnParameters":{"id":3323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3344,"src":"646:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3319,"name":"bool","nodeType":"ElementaryTypeName","src":"646:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3344,"src":"652:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3321,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:15:19"},"scope":4355,"src":"585:216:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3371,"nodeType":"Block","src":"984:113:19","statements":[{"id":3370,"nodeType":"UncheckedBlock","src":"994:97:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3356,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"1022:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3357,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3347,"src":"1026:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1022:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3363,"nodeType":"IfStatement","src":"1018:28:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1037:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3361,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1036:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3355,"id":3362,"nodeType":"Return","src":"1029:17:19"}},{"expression":{"components":[{"hexValue":"74727565","id":3364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1068:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3365,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3347,"src":"1074:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3366,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"1078:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1074:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3368,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1067:13:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3355,"id":3369,"nodeType":"Return","src":"1060:20:19"}]}]},"documentation":{"id":3345,"nodeType":"StructuredDocumentation","src":"807:96:19","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag."},"id":3372,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"917:6:19","nodeType":"FunctionDefinition","parameters":{"id":3350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3347,"mutability":"mutable","name":"a","nameLocation":"932:1:19","nodeType":"VariableDeclaration","scope":3372,"src":"924:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3346,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3349,"mutability":"mutable","name":"b","nameLocation":"943:1:19","nodeType":"VariableDeclaration","scope":3372,"src":"935:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3348,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:22:19"},"returnParameters":{"id":3355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3372,"src":"969:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3351,"name":"bool","nodeType":"ElementaryTypeName","src":"969:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3372,"src":"975:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3353,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"968:15:19"},"scope":4355,"src":"908:189:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3413,"nodeType":"Block","src":"1283:417:19","statements":[{"id":3412,"nodeType":"UncheckedBlock","src":"1293:401:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3384,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3375,"src":"1551:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1556:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1551:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3391,"nodeType":"IfStatement","src":"1547:28:19","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":3387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1567:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":3388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1573:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3389,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1566:9:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3383,"id":3390,"nodeType":"Return","src":"1559:16:19"}},{"assignments":[3393],"declarations":[{"constant":false,"id":3393,"mutability":"mutable","name":"c","nameLocation":"1597:1:19","nodeType":"VariableDeclaration","scope":3412,"src":"1589:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3392,"name":"uint256","nodeType":"ElementaryTypeName","src":"1589:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3397,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3394,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3375,"src":"1601:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3395,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"1605:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1601:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1589:17:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3398,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"1624:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3399,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3375,"src":"1628:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3401,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"1633:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3407,"nodeType":"IfStatement","src":"1620:33:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1644:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1651:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3405,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1643:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3383,"id":3406,"nodeType":"Return","src":"1636:17:19"}},{"expression":{"components":[{"hexValue":"74727565","id":3408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1675:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3409,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"1681:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3410,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1674:9:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3383,"id":3411,"nodeType":"Return","src":"1667:16:19"}]}]},"documentation":{"id":3373,"nodeType":"StructuredDocumentation","src":"1103:99:19","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag."},"id":3414,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1216:6:19","nodeType":"FunctionDefinition","parameters":{"id":3378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3375,"mutability":"mutable","name":"a","nameLocation":"1231:1:19","nodeType":"VariableDeclaration","scope":3414,"src":"1223:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3374,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3377,"mutability":"mutable","name":"b","nameLocation":"1242:1:19","nodeType":"VariableDeclaration","scope":3414,"src":"1234:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3376,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:22:19"},"returnParameters":{"id":3383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3380,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3414,"src":"1268:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3379,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3414,"src":"1274:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3381,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:15:19"},"scope":4355,"src":"1207:493:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3441,"nodeType":"Block","src":"1887:114:19","statements":[{"id":3440,"nodeType":"UncheckedBlock","src":"1897:98:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3426,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"1925:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1930:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1925:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3433,"nodeType":"IfStatement","src":"1921:29:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1941:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1948:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3431,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1940:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3425,"id":3432,"nodeType":"Return","src":"1933:17:19"}},{"expression":{"components":[{"hexValue":"74727565","id":3434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1972:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3435,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"1978:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3436,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"1982:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1978:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3438,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1971:13:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3425,"id":3439,"nodeType":"Return","src":"1964:20:19"}]}]},"documentation":{"id":3415,"nodeType":"StructuredDocumentation","src":"1706:100:19","text":" @dev Returns the division of two unsigned integers, with a division by zero flag."},"id":3442,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1820:6:19","nodeType":"FunctionDefinition","parameters":{"id":3420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3417,"mutability":"mutable","name":"a","nameLocation":"1835:1:19","nodeType":"VariableDeclaration","scope":3442,"src":"1827:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3416,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3419,"mutability":"mutable","name":"b","nameLocation":"1846:1:19","nodeType":"VariableDeclaration","scope":3442,"src":"1838:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3418,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1826:22:19"},"returnParameters":{"id":3425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3422,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3442,"src":"1872:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3421,"name":"bool","nodeType":"ElementaryTypeName","src":"1872:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3442,"src":"1878:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3423,"name":"uint256","nodeType":"ElementaryTypeName","src":"1878:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1871:15:19"},"scope":4355,"src":"1811:190:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3469,"nodeType":"Block","src":"2198:114:19","statements":[{"id":3468,"nodeType":"UncheckedBlock","src":"2208:98:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3454,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3447,"src":"2236:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3461,"nodeType":"IfStatement","src":"2232:29:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2252:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2259:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3459,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2251:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3453,"id":3460,"nodeType":"Return","src":"2244:17:19"}},{"expression":{"components":[{"hexValue":"74727565","id":3462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2283:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3463,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"2289:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3464,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3447,"src":"2293:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2289:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3466,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2282:13:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3453,"id":3467,"nodeType":"Return","src":"2275:20:19"}]}]},"documentation":{"id":3443,"nodeType":"StructuredDocumentation","src":"2007:110:19","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."},"id":3470,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2131:6:19","nodeType":"FunctionDefinition","parameters":{"id":3448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3445,"mutability":"mutable","name":"a","nameLocation":"2146:1:19","nodeType":"VariableDeclaration","scope":3470,"src":"2138:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3444,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3447,"mutability":"mutable","name":"b","nameLocation":"2157:1:19","nodeType":"VariableDeclaration","scope":3470,"src":"2149:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3446,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2137:22:19"},"returnParameters":{"id":3453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3450,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3470,"src":"2183:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3449,"name":"bool","nodeType":"ElementaryTypeName","src":"2183:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3452,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3470,"src":"2189:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3451,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2182:15:19"},"scope":4355,"src":"2122:190:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3487,"nodeType":"Block","src":"2449:37:19","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3480,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"2466:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3481,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"2470:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2466:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3484,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"2478:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2466:13:19","trueExpression":{"id":3483,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"2474:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3479,"id":3486,"nodeType":"Return","src":"2459:20:19"}]},"documentation":{"id":3471,"nodeType":"StructuredDocumentation","src":"2318:59:19","text":" @dev Returns the largest of two numbers."},"id":3488,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"2391:3:19","nodeType":"FunctionDefinition","parameters":{"id":3476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3473,"mutability":"mutable","name":"a","nameLocation":"2403:1:19","nodeType":"VariableDeclaration","scope":3488,"src":"2395:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3472,"name":"uint256","nodeType":"ElementaryTypeName","src":"2395:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3475,"mutability":"mutable","name":"b","nameLocation":"2414:1:19","nodeType":"VariableDeclaration","scope":3488,"src":"2406:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3474,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:22:19"},"returnParameters":{"id":3479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3478,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3488,"src":"2440:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3477,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2439:9:19"},"scope":4355,"src":"2382:104:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3505,"nodeType":"Block","src":"2624:37:19","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3498,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"2641:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3499,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"2645:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2641:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3502,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"2653:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2641:13:19","trueExpression":{"id":3501,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"2649:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3497,"id":3504,"nodeType":"Return","src":"2634:20:19"}]},"documentation":{"id":3489,"nodeType":"StructuredDocumentation","src":"2492:60:19","text":" @dev Returns the smallest of two numbers."},"id":3506,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"2566:3:19","nodeType":"FunctionDefinition","parameters":{"id":3494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3491,"mutability":"mutable","name":"a","nameLocation":"2578:1:19","nodeType":"VariableDeclaration","scope":3506,"src":"2570:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3490,"name":"uint256","nodeType":"ElementaryTypeName","src":"2570:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3493,"mutability":"mutable","name":"b","nameLocation":"2589:1:19","nodeType":"VariableDeclaration","scope":3506,"src":"2581:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3492,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2569:22:19"},"returnParameters":{"id":3497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3496,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3506,"src":"2615:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3495,"name":"uint256","nodeType":"ElementaryTypeName","src":"2615:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2614:9:19"},"scope":4355,"src":"2557:104:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3528,"nodeType":"Block","src":"2845:82:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3516,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"2900:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3517,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"2904:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2900:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3519,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2899:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3520,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"2910:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3521,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"2914:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2910:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3523,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2909:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2919:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2909:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2899:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3515,"id":3527,"nodeType":"Return","src":"2892:28:19"}]},"documentation":{"id":3507,"nodeType":"StructuredDocumentation","src":"2667:102:19","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3529,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"2783:7:19","nodeType":"FunctionDefinition","parameters":{"id":3512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3509,"mutability":"mutable","name":"a","nameLocation":"2799:1:19","nodeType":"VariableDeclaration","scope":3529,"src":"2791:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3508,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3511,"mutability":"mutable","name":"b","nameLocation":"2810:1:19","nodeType":"VariableDeclaration","scope":3529,"src":"2802:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3510,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2790:22:19"},"returnParameters":{"id":3515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3529,"src":"2836:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3513,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2835:9:19"},"scope":4355,"src":"2774:153:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3562,"nodeType":"Block","src":"3219:260:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3539,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"3233:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3238:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3233:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3547,"nodeType":"IfStatement","src":"3229:127:19","trueBody":{"id":3546,"nodeType":"Block","src":"3241:115:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3542,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"3340:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3543,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"3344:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3340:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3538,"id":3545,"nodeType":"Return","src":"3333:12:19"}]}},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3548,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"3444:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3449:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3444:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3552,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"3458:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3462:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3458:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3555,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3457:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3556,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"3467:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3457:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3471:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3457:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3444:28:19","trueExpression":{"hexValue":"30","id":3551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3453:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3538,"id":3561,"nodeType":"Return","src":"3437:35:19"}]},"documentation":{"id":3530,"nodeType":"StructuredDocumentation","src":"2933:210:19","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3563,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3157:7:19","nodeType":"FunctionDefinition","parameters":{"id":3535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3532,"mutability":"mutable","name":"a","nameLocation":"3173:1:19","nodeType":"VariableDeclaration","scope":3563,"src":"3165:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3531,"name":"uint256","nodeType":"ElementaryTypeName","src":"3165:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3534,"mutability":"mutable","name":"b","nameLocation":"3184:1:19","nodeType":"VariableDeclaration","scope":3563,"src":"3176:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3533,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3164:22:19"},"returnParameters":{"id":3538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3537,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3563,"src":"3210:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3536,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:9:19"},"scope":4355,"src":"3148:331:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3688,"nodeType":"Block","src":"3901:4018:19","statements":[{"id":3687,"nodeType":"UncheckedBlock","src":"3911:4002:19","statements":[{"assignments":[3576],"declarations":[{"constant":false,"id":3576,"mutability":"mutable","name":"prod0","nameLocation":"4240:5:19","nodeType":"VariableDeclaration","scope":3687,"src":"4232:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3575,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3580,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3577,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3566,"src":"4248:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3578,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"4252:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4248:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4232:21:19"},{"assignments":[3582],"declarations":[{"constant":false,"id":3582,"mutability":"mutable","name":"prod1","nameLocation":"4320:5:19","nodeType":"VariableDeclaration","scope":3687,"src":"4312:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3581,"name":"uint256","nodeType":"ElementaryTypeName","src":"4312:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3583,"nodeType":"VariableDeclarationStatement","src":"4312:13:19"},{"AST":{"nativeSrc":"4392:122:19","nodeType":"YulBlock","src":"4392:122:19","statements":[{"nativeSrc":"4410:30:19","nodeType":"YulVariableDeclaration","src":"4410:30:19","value":{"arguments":[{"name":"x","nativeSrc":"4427:1:19","nodeType":"YulIdentifier","src":"4427:1:19"},{"name":"y","nativeSrc":"4430:1:19","nodeType":"YulIdentifier","src":"4430:1:19"},{"arguments":[{"kind":"number","nativeSrc":"4437:1:19","nodeType":"YulLiteral","src":"4437:1:19","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4433:3:19","nodeType":"YulIdentifier","src":"4433:3:19"},"nativeSrc":"4433:6:19","nodeType":"YulFunctionCall","src":"4433:6:19"}],"functionName":{"name":"mulmod","nativeSrc":"4420:6:19","nodeType":"YulIdentifier","src":"4420:6:19"},"nativeSrc":"4420:20:19","nodeType":"YulFunctionCall","src":"4420:20:19"},"variables":[{"name":"mm","nativeSrc":"4414:2:19","nodeType":"YulTypedName","src":"4414:2:19","type":""}]},{"nativeSrc":"4457:43:19","nodeType":"YulAssignment","src":"4457:43:19","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"4474:2:19","nodeType":"YulIdentifier","src":"4474:2:19"},{"name":"prod0","nativeSrc":"4478:5:19","nodeType":"YulIdentifier","src":"4478:5:19"}],"functionName":{"name":"sub","nativeSrc":"4470:3:19","nodeType":"YulIdentifier","src":"4470:3:19"},"nativeSrc":"4470:14:19","nodeType":"YulFunctionCall","src":"4470:14:19"},{"arguments":[{"name":"mm","nativeSrc":"4489:2:19","nodeType":"YulIdentifier","src":"4489:2:19"},{"name":"prod0","nativeSrc":"4493:5:19","nodeType":"YulIdentifier","src":"4493:5:19"}],"functionName":{"name":"lt","nativeSrc":"4486:2:19","nodeType":"YulIdentifier","src":"4486:2:19"},"nativeSrc":"4486:13:19","nodeType":"YulFunctionCall","src":"4486:13:19"}],"functionName":{"name":"sub","nativeSrc":"4466:3:19","nodeType":"YulIdentifier","src":"4466:3:19"},"nativeSrc":"4466:34:19","nodeType":"YulFunctionCall","src":"4466:34:19"},"variableNames":[{"name":"prod1","nativeSrc":"4457:5:19","nodeType":"YulIdentifier","src":"4457:5:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3576,"isOffset":false,"isSlot":false,"src":"4478:5:19","valueSize":1},{"declaration":3576,"isOffset":false,"isSlot":false,"src":"4493:5:19","valueSize":1},{"declaration":3582,"isOffset":false,"isSlot":false,"src":"4457:5:19","valueSize":1},{"declaration":3566,"isOffset":false,"isSlot":false,"src":"4427:1:19","valueSize":1},{"declaration":3568,"isOffset":false,"isSlot":false,"src":"4430:1:19","valueSize":1}],"id":3584,"nodeType":"InlineAssembly","src":"4383:131:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3585,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"4595:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4604:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4595:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3593,"nodeType":"IfStatement","src":"4591:368:19","trueBody":{"id":3592,"nodeType":"Block","src":"4607:352:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3588,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"4925:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3589,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"4933:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3574,"id":3591,"nodeType":"Return","src":"4918:26:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3594,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"5065:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3595,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"5080:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3601,"nodeType":"IfStatement","src":"5061:88:19","trueBody":{"id":3600,"nodeType":"Block","src":"5087:62:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3597,"name":"MathOverflowedMulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"5112:20:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3599,"nodeType":"RevertStatement","src":"5105:29:19"}]}},{"assignments":[3603],"declarations":[{"constant":false,"id":3603,"mutability":"mutable","name":"remainder","nameLocation":"5412:9:19","nodeType":"VariableDeclaration","scope":3687,"src":"5404:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3602,"name":"uint256","nodeType":"ElementaryTypeName","src":"5404:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3604,"nodeType":"VariableDeclarationStatement","src":"5404:17:19"},{"AST":{"nativeSrc":"5444:291:19","nodeType":"YulBlock","src":"5444:291:19","statements":[{"nativeSrc":"5513:38:19","nodeType":"YulAssignment","src":"5513:38:19","value":{"arguments":[{"name":"x","nativeSrc":"5533:1:19","nodeType":"YulIdentifier","src":"5533:1:19"},{"name":"y","nativeSrc":"5536:1:19","nodeType":"YulIdentifier","src":"5536:1:19"},{"name":"denominator","nativeSrc":"5539:11:19","nodeType":"YulIdentifier","src":"5539:11:19"}],"functionName":{"name":"mulmod","nativeSrc":"5526:6:19","nodeType":"YulIdentifier","src":"5526:6:19"},"nativeSrc":"5526:25:19","nodeType":"YulFunctionCall","src":"5526:25:19"},"variableNames":[{"name":"remainder","nativeSrc":"5513:9:19","nodeType":"YulIdentifier","src":"5513:9:19"}]},{"nativeSrc":"5633:41:19","nodeType":"YulAssignment","src":"5633:41:19","value":{"arguments":[{"name":"prod1","nativeSrc":"5646:5:19","nodeType":"YulIdentifier","src":"5646:5:19"},{"arguments":[{"name":"remainder","nativeSrc":"5656:9:19","nodeType":"YulIdentifier","src":"5656:9:19"},{"name":"prod0","nativeSrc":"5667:5:19","nodeType":"YulIdentifier","src":"5667:5:19"}],"functionName":{"name":"gt","nativeSrc":"5653:2:19","nodeType":"YulIdentifier","src":"5653:2:19"},"nativeSrc":"5653:20:19","nodeType":"YulFunctionCall","src":"5653:20:19"}],"functionName":{"name":"sub","nativeSrc":"5642:3:19","nodeType":"YulIdentifier","src":"5642:3:19"},"nativeSrc":"5642:32:19","nodeType":"YulFunctionCall","src":"5642:32:19"},"variableNames":[{"name":"prod1","nativeSrc":"5633:5:19","nodeType":"YulIdentifier","src":"5633:5:19"}]},{"nativeSrc":"5691:30:19","nodeType":"YulAssignment","src":"5691:30:19","value":{"arguments":[{"name":"prod0","nativeSrc":"5704:5:19","nodeType":"YulIdentifier","src":"5704:5:19"},{"name":"remainder","nativeSrc":"5711:9:19","nodeType":"YulIdentifier","src":"5711:9:19"}],"functionName":{"name":"sub","nativeSrc":"5700:3:19","nodeType":"YulIdentifier","src":"5700:3:19"},"nativeSrc":"5700:21:19","nodeType":"YulFunctionCall","src":"5700:21:19"},"variableNames":[{"name":"prod0","nativeSrc":"5691:5:19","nodeType":"YulIdentifier","src":"5691:5:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3570,"isOffset":false,"isSlot":false,"src":"5539:11:19","valueSize":1},{"declaration":3576,"isOffset":false,"isSlot":false,"src":"5667:5:19","valueSize":1},{"declaration":3576,"isOffset":false,"isSlot":false,"src":"5691:5:19","valueSize":1},{"declaration":3576,"isOffset":false,"isSlot":false,"src":"5704:5:19","valueSize":1},{"declaration":3582,"isOffset":false,"isSlot":false,"src":"5633:5:19","valueSize":1},{"declaration":3582,"isOffset":false,"isSlot":false,"src":"5646:5:19","valueSize":1},{"declaration":3603,"isOffset":false,"isSlot":false,"src":"5513:9:19","valueSize":1},{"declaration":3603,"isOffset":false,"isSlot":false,"src":"5656:9:19","valueSize":1},{"declaration":3603,"isOffset":false,"isSlot":false,"src":"5711:9:19","valueSize":1},{"declaration":3566,"isOffset":false,"isSlot":false,"src":"5533:1:19","valueSize":1},{"declaration":3568,"isOffset":false,"isSlot":false,"src":"5536:1:19","valueSize":1}],"id":3605,"nodeType":"InlineAssembly","src":"5435:300:19"},{"assignments":[3607],"declarations":[{"constant":false,"id":3607,"mutability":"mutable","name":"twos","nameLocation":"5947:4:19","nodeType":"VariableDeclaration","scope":3687,"src":"5939:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3606,"name":"uint256","nodeType":"ElementaryTypeName","src":"5939:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3614,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3608,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"5954:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5969:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3610,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"5973:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5969:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3612,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5968:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5954:31:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5939:46:19"},{"AST":{"nativeSrc":"6008:362:19","nodeType":"YulBlock","src":"6008:362:19","statements":[{"nativeSrc":"6073:37:19","nodeType":"YulAssignment","src":"6073:37:19","value":{"arguments":[{"name":"denominator","nativeSrc":"6092:11:19","nodeType":"YulIdentifier","src":"6092:11:19"},{"name":"twos","nativeSrc":"6105:4:19","nodeType":"YulIdentifier","src":"6105:4:19"}],"functionName":{"name":"div","nativeSrc":"6088:3:19","nodeType":"YulIdentifier","src":"6088:3:19"},"nativeSrc":"6088:22:19","nodeType":"YulFunctionCall","src":"6088:22:19"},"variableNames":[{"name":"denominator","nativeSrc":"6073:11:19","nodeType":"YulIdentifier","src":"6073:11:19"}]},{"nativeSrc":"6177:25:19","nodeType":"YulAssignment","src":"6177:25:19","value":{"arguments":[{"name":"prod0","nativeSrc":"6190:5:19","nodeType":"YulIdentifier","src":"6190:5:19"},{"name":"twos","nativeSrc":"6197:4:19","nodeType":"YulIdentifier","src":"6197:4:19"}],"functionName":{"name":"div","nativeSrc":"6186:3:19","nodeType":"YulIdentifier","src":"6186:3:19"},"nativeSrc":"6186:16:19","nodeType":"YulFunctionCall","src":"6186:16:19"},"variableNames":[{"name":"prod0","nativeSrc":"6177:5:19","nodeType":"YulIdentifier","src":"6177:5:19"}]},{"nativeSrc":"6317:39:19","nodeType":"YulAssignment","src":"6317:39:19","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6337:1:19","nodeType":"YulLiteral","src":"6337:1:19","type":"","value":"0"},{"name":"twos","nativeSrc":"6340:4:19","nodeType":"YulIdentifier","src":"6340:4:19"}],"functionName":{"name":"sub","nativeSrc":"6333:3:19","nodeType":"YulIdentifier","src":"6333:3:19"},"nativeSrc":"6333:12:19","nodeType":"YulFunctionCall","src":"6333:12:19"},{"name":"twos","nativeSrc":"6347:4:19","nodeType":"YulIdentifier","src":"6347:4:19"}],"functionName":{"name":"div","nativeSrc":"6329:3:19","nodeType":"YulIdentifier","src":"6329:3:19"},"nativeSrc":"6329:23:19","nodeType":"YulFunctionCall","src":"6329:23:19"},{"kind":"number","nativeSrc":"6354:1:19","nodeType":"YulLiteral","src":"6354:1:19","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6325:3:19","nodeType":"YulIdentifier","src":"6325:3:19"},"nativeSrc":"6325:31:19","nodeType":"YulFunctionCall","src":"6325:31:19"},"variableNames":[{"name":"twos","nativeSrc":"6317:4:19","nodeType":"YulIdentifier","src":"6317:4:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3570,"isOffset":false,"isSlot":false,"src":"6073:11:19","valueSize":1},{"declaration":3570,"isOffset":false,"isSlot":false,"src":"6092:11:19","valueSize":1},{"declaration":3576,"isOffset":false,"isSlot":false,"src":"6177:5:19","valueSize":1},{"declaration":3576,"isOffset":false,"isSlot":false,"src":"6190:5:19","valueSize":1},{"declaration":3607,"isOffset":false,"isSlot":false,"src":"6105:4:19","valueSize":1},{"declaration":3607,"isOffset":false,"isSlot":false,"src":"6197:4:19","valueSize":1},{"declaration":3607,"isOffset":false,"isSlot":false,"src":"6317:4:19","valueSize":1},{"declaration":3607,"isOffset":false,"isSlot":false,"src":"6340:4:19","valueSize":1},{"declaration":3607,"isOffset":false,"isSlot":false,"src":"6347:4:19","valueSize":1}],"id":3615,"nodeType":"InlineAssembly","src":"5999:371:19"},{"expression":{"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3616,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"6436:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3617,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"6445:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3618,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"6453:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6445:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6436:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3621,"nodeType":"ExpressionStatement","src":"6436:21:19"},{"assignments":[3623],"declarations":[{"constant":false,"id":3623,"mutability":"mutable","name":"inverse","nameLocation":"6783:7:19","nodeType":"VariableDeclaration","scope":3687,"src":"6775:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3622,"name":"uint256","nodeType":"ElementaryTypeName","src":"6775:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3630,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6794:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3625,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"6798:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6794:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3627,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6793:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6813:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6793:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6775:39:19"},{"expression":{"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3631,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"7031:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7042:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3633,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"7046:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3634,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"7060:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7046:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7042:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7031:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3638,"nodeType":"ExpressionStatement","src":"7031:36:19"},{"expression":{"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3639,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"7100:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7111:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3641,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"7115:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3642,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"7129:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7115:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7111:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7100:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3646,"nodeType":"ExpressionStatement","src":"7100:36:19"},{"expression":{"id":3653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3647,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"7170:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7181:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3649,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"7185:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3650,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"7199:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7185:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7181:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7170:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3654,"nodeType":"ExpressionStatement","src":"7170:36:19"},{"expression":{"id":3661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3655,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"7240:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3657,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"7255:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3658,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"7269:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7255:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7251:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7240:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3662,"nodeType":"ExpressionStatement","src":"7240:36:19"},{"expression":{"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3663,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"7310:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7321:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3665,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"7325:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3666,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"7339:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7325:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7321:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7310:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3670,"nodeType":"ExpressionStatement","src":"7310:36:19"},{"expression":{"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3671,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"7381:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7392:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3673,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"7396:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3674,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"7410:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7396:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7392:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7381:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3678,"nodeType":"ExpressionStatement","src":"7381:36:19"},{"expression":{"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3679,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"7851:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3680,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"7860:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3681,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"7868:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7860:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7851:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3684,"nodeType":"ExpressionStatement","src":"7851:24:19"},{"expression":{"id":3685,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"7896:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3574,"id":3686,"nodeType":"Return","src":"7889:13:19"}]}]},"documentation":{"id":3564,"nodeType":"StructuredDocumentation","src":"3485:313:19","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":3689,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"3812:6:19","nodeType":"FunctionDefinition","parameters":{"id":3571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3566,"mutability":"mutable","name":"x","nameLocation":"3827:1:19","nodeType":"VariableDeclaration","scope":3689,"src":"3819:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3565,"name":"uint256","nodeType":"ElementaryTypeName","src":"3819:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3568,"mutability":"mutable","name":"y","nameLocation":"3838:1:19","nodeType":"VariableDeclaration","scope":3689,"src":"3830:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3567,"name":"uint256","nodeType":"ElementaryTypeName","src":"3830:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3570,"mutability":"mutable","name":"denominator","nameLocation":"3849:11:19","nodeType":"VariableDeclaration","scope":3689,"src":"3841:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3569,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3818:43:19"},"returnParameters":{"id":3574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3573,"mutability":"mutable","name":"result","nameLocation":"3893:6:19","nodeType":"VariableDeclaration","scope":3689,"src":"3885:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3572,"name":"uint256","nodeType":"ElementaryTypeName","src":"3885:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3884:16:19"},"scope":4355,"src":"3803:4116:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3731,"nodeType":"Block","src":"8161:192:19","statements":[{"assignments":[3705],"declarations":[{"constant":false,"id":3705,"mutability":"mutable","name":"result","nameLocation":"8179:6:19","nodeType":"VariableDeclaration","scope":3731,"src":"8171:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3704,"name":"uint256","nodeType":"ElementaryTypeName","src":"8171:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3711,"initialValue":{"arguments":[{"id":3707,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"8195:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3708,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"8198:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3709,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"8201:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3706,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3689,3732],"referencedDeclaration":3689,"src":"8188:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8188:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8171:42:19"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3713,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3699,"src":"8244:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3312","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3312","typeString":"enum Math.Rounding"}],"id":3712,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"8227:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3312_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3716,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"8264:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3717,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"8267:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3718,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"8270:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3715,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"8257:6:19","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8257:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8285:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8257:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8227:59:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3728,"nodeType":"IfStatement","src":"8223:101:19","trueBody":{"id":3727,"nodeType":"Block","src":"8288:36:19","statements":[{"expression":{"id":3725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3723,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3705,"src":"8302:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8312:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8302:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3726,"nodeType":"ExpressionStatement","src":"8302:11:19"}]}},{"expression":{"id":3729,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3705,"src":"8340:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3703,"id":3730,"nodeType":"Return","src":"8333:13:19"}]},"documentation":{"id":3690,"nodeType":"StructuredDocumentation","src":"7925:121:19","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3732,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"8060:6:19","nodeType":"FunctionDefinition","parameters":{"id":3700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3692,"mutability":"mutable","name":"x","nameLocation":"8075:1:19","nodeType":"VariableDeclaration","scope":3732,"src":"8067:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3691,"name":"uint256","nodeType":"ElementaryTypeName","src":"8067:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3694,"mutability":"mutable","name":"y","nameLocation":"8086:1:19","nodeType":"VariableDeclaration","scope":3732,"src":"8078:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3693,"name":"uint256","nodeType":"ElementaryTypeName","src":"8078:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3696,"mutability":"mutable","name":"denominator","nameLocation":"8097:11:19","nodeType":"VariableDeclaration","scope":3732,"src":"8089:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3695,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3699,"mutability":"mutable","name":"rounding","nameLocation":"8119:8:19","nodeType":"VariableDeclaration","scope":3732,"src":"8110:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3312","typeString":"enum Math.Rounding"},"typeName":{"id":3698,"nodeType":"UserDefinedTypeName","pathNode":{"id":3697,"name":"Rounding","nameLocations":["8110:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3312,"src":"8110:8:19"},"referencedDeclaration":3312,"src":"8110:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3312","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8066:62:19"},"returnParameters":{"id":3703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3702,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3732,"src":"8152:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3701,"name":"uint256","nodeType":"ElementaryTypeName","src":"8152:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8151:9:19"},"scope":4355,"src":"8051:302:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3843,"nodeType":"Block","src":"8644:1585:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3740,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"8658:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8658:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3746,"nodeType":"IfStatement","src":"8654:45:19","trueBody":{"id":3745,"nodeType":"Block","src":"8666:33:19","statements":[{"expression":{"hexValue":"30","id":3743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8687:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3739,"id":3744,"nodeType":"Return","src":"8680:8:19"}]}},{"assignments":[3748],"declarations":[{"constant":false,"id":3748,"mutability":"mutable","name":"result","nameLocation":"9386:6:19","nodeType":"VariableDeclaration","scope":3843,"src":"9378:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3747,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3757,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9395:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3751,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"9406:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3750,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4011,4046],"referencedDeclaration":4011,"src":"9401:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9401:7:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9401:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3755,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9400:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9395:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9378:36:19"},{"id":3842,"nodeType":"UncheckedBlock","src":"9815:408:19","statements":[{"expression":{"id":3767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3758,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"9839:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3759,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"9849:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3760,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"9858:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3761,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"9862:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9858:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9849:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3764,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9848:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9873:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9848:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3768,"nodeType":"ExpressionStatement","src":"9839:35:19"},{"expression":{"id":3778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3769,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"9888:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3770,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"9898:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3771,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"9907:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3772,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"9911:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9907:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9898:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3775,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9897:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9922:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9897:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9888:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3779,"nodeType":"ExpressionStatement","src":"9888:35:19"},{"expression":{"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3780,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"9937:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3781,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"9947:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3782,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"9956:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3783,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"9960:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9956:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9947:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3786,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9946:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9971:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9937:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3790,"nodeType":"ExpressionStatement","src":"9937:35:19"},{"expression":{"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3791,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"9986:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3792,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"9996:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3793,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"10005:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3794,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"10009:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10005:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9996:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3797,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9995:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10020:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9995:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9986:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3801,"nodeType":"ExpressionStatement","src":"9986:35:19"},{"expression":{"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3802,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"10035:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3803,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"10045:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3804,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"10054:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3805,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"10058:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10054:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10045:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3808,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10044:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10069:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10044:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10035:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3812,"nodeType":"ExpressionStatement","src":"10035:35:19"},{"expression":{"id":3822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3813,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"10084:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3814,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"10094:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3815,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"10103:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3816,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"10107:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10094:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3819,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10093:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10118:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10093:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10084:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3823,"nodeType":"ExpressionStatement","src":"10084:35:19"},{"expression":{"id":3833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3824,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"10133:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3825,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"10143:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3826,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"10152:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3827,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"10156:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10152:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10143:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3830,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10142:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10142:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10133:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3834,"nodeType":"ExpressionStatement","src":"10133:35:19"},{"expression":{"arguments":[{"id":3836,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"10193:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3837,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"10201:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3838,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"10205:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10201:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3835,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3506,"src":"10189:3:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10189:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3739,"id":3841,"nodeType":"Return","src":"10182:30:19"}]}]},"documentation":{"id":3733,"nodeType":"StructuredDocumentation","src":"8359:223:19","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":3844,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8596:4:19","nodeType":"FunctionDefinition","parameters":{"id":3736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3735,"mutability":"mutable","name":"a","nameLocation":"8609:1:19","nodeType":"VariableDeclaration","scope":3844,"src":"8601:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3734,"name":"uint256","nodeType":"ElementaryTypeName","src":"8601:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8600:11:19"},"returnParameters":{"id":3739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3738,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3844,"src":"8635:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3737,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8634:9:19"},"scope":4355,"src":"8587:1642:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3878,"nodeType":"Block","src":"10405:164:19","statements":[{"id":3877,"nodeType":"UncheckedBlock","src":"10415:148:19","statements":[{"assignments":[3856],"declarations":[{"constant":false,"id":3856,"mutability":"mutable","name":"result","nameLocation":"10447:6:19","nodeType":"VariableDeclaration","scope":3877,"src":"10439:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3855,"name":"uint256","nodeType":"ElementaryTypeName","src":"10439:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3860,"initialValue":{"arguments":[{"id":3858,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3847,"src":"10461:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3857,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3844,3879],"referencedDeclaration":3844,"src":"10456:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10456:7:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10439:24:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3861,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"10484:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3863,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"10511:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3312","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3312","typeString":"enum Math.Rounding"}],"id":3862,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"10494:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3312_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10494:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3865,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"10524:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3866,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"10533:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3868,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3847,"src":"10542:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10494:49:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10550:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10494:57:19","trueExpression":{"hexValue":"31","id":3871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10546:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3874,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10493:59:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10484:68:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3854,"id":3876,"nodeType":"Return","src":"10477:75:19"}]}]},"documentation":{"id":3845,"nodeType":"StructuredDocumentation","src":"10235:89:19","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":3879,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"10338:4:19","nodeType":"FunctionDefinition","parameters":{"id":3851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3847,"mutability":"mutable","name":"a","nameLocation":"10351:1:19","nodeType":"VariableDeclaration","scope":3879,"src":"10343:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3846,"name":"uint256","nodeType":"ElementaryTypeName","src":"10343:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3850,"mutability":"mutable","name":"rounding","nameLocation":"10363:8:19","nodeType":"VariableDeclaration","scope":3879,"src":"10354:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3312","typeString":"enum Math.Rounding"},"typeName":{"id":3849,"nodeType":"UserDefinedTypeName","pathNode":{"id":3848,"name":"Rounding","nameLocations":["10354:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3312,"src":"10354:8:19"},"referencedDeclaration":3312,"src":"10354:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3312","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10342:30:19"},"returnParameters":{"id":3854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3879,"src":"10396:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3852,"name":"uint256","nodeType":"ElementaryTypeName","src":"10396:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10395:9:19"},"scope":4355,"src":"10329:240:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4010,"nodeType":"Block","src":"10760:922:19","statements":[{"assignments":[3888],"declarations":[{"constant":false,"id":3888,"mutability":"mutable","name":"result","nameLocation":"10778:6:19","nodeType":"VariableDeclaration","scope":4010,"src":"10770:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3887,"name":"uint256","nodeType":"ElementaryTypeName","src":"10770:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3890,"initialValue":{"hexValue":"30","id":3889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10787:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10770:18:19"},{"id":4007,"nodeType":"UncheckedBlock","src":"10798:855:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"10826:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10835:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10826:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10826:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3905,"nodeType":"IfStatement","src":"10822:99:19","trueBody":{"id":3904,"nodeType":"Block","src":"10844:77:19","statements":[{"expression":{"id":3898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"10862:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10872:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10862:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3899,"nodeType":"ExpressionStatement","src":"10862:13:19"},{"expression":{"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3900,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"10893:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":3901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10893:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3903,"nodeType":"ExpressionStatement","src":"10893:13:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"10938:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10947:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10938:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10952:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10938:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3920,"nodeType":"IfStatement","src":"10934:96:19","trueBody":{"id":3919,"nodeType":"Block","src":"10955:75:19","statements":[{"expression":{"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"10973:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10983:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10973:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3914,"nodeType":"ExpressionStatement","src":"10973:12:19"},{"expression":{"id":3917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3915,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"11003:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11013:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11003:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3918,"nodeType":"ExpressionStatement","src":"11003:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"11047:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11056:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11047:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11061:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11047:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3935,"nodeType":"IfStatement","src":"11043:96:19","trueBody":{"id":3934,"nodeType":"Block","src":"11064:75:19","statements":[{"expression":{"id":3928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"11082:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11092:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11082:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3929,"nodeType":"ExpressionStatement","src":"11082:12:19"},{"expression":{"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3930,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"11112:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11122:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11112:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3933,"nodeType":"ExpressionStatement","src":"11112:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"11156:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11165:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11156:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11170:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11156:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3950,"nodeType":"IfStatement","src":"11152:96:19","trueBody":{"id":3949,"nodeType":"Block","src":"11173:75:19","statements":[{"expression":{"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3941,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"11191:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11201:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11191:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3944,"nodeType":"ExpressionStatement","src":"11191:12:19"},{"expression":{"id":3947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3945,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"11221:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11231:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11221:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3948,"nodeType":"ExpressionStatement","src":"11221:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"11265:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11274:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11265:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11278:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11265:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3965,"nodeType":"IfStatement","src":"11261:93:19","trueBody":{"id":3964,"nodeType":"Block","src":"11281:73:19","statements":[{"expression":{"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"11299:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11309:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11299:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3959,"nodeType":"ExpressionStatement","src":"11299:11:19"},{"expression":{"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3960,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"11328:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11338:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11328:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3963,"nodeType":"ExpressionStatement","src":"11328:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"11371:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":3967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11380:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11371:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11384:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11371:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3980,"nodeType":"IfStatement","src":"11367:93:19","trueBody":{"id":3979,"nodeType":"Block","src":"11387:73:19","statements":[{"expression":{"id":3973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"11405:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11415:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11405:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3974,"nodeType":"ExpressionStatement","src":"11405:11:19"},{"expression":{"id":3977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3975,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"11434:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11444:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11434:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3978,"nodeType":"ExpressionStatement","src":"11434:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"11477:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":3982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11486:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11477:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11490:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11477:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3995,"nodeType":"IfStatement","src":"11473:93:19","trueBody":{"id":3994,"nodeType":"Block","src":"11493:73:19","statements":[{"expression":{"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3986,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"11511:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":3987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11521:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11511:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3989,"nodeType":"ExpressionStatement","src":"11511:11:19"},{"expression":{"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3990,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"11540:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11550:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11540:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3993,"nodeType":"ExpressionStatement","src":"11540:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"11583:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11592:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11583:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11596:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11583:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4006,"nodeType":"IfStatement","src":"11579:64:19","trueBody":{"id":4005,"nodeType":"Block","src":"11599:44:19","statements":[{"expression":{"id":4003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4001,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"11617:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11627:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11617:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4004,"nodeType":"ExpressionStatement","src":"11617:11:19"}]}}]},{"expression":{"id":4008,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"11669:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3886,"id":4009,"nodeType":"Return","src":"11662:13:19"}]},"documentation":{"id":3880,"nodeType":"StructuredDocumentation","src":"10575:119:19","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4011,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"10708:4:19","nodeType":"FunctionDefinition","parameters":{"id":3883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3882,"mutability":"mutable","name":"value","nameLocation":"10721:5:19","nodeType":"VariableDeclaration","scope":4011,"src":"10713:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3881,"name":"uint256","nodeType":"ElementaryTypeName","src":"10713:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10712:15:19"},"returnParameters":{"id":3886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4011,"src":"10751:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3884,"name":"uint256","nodeType":"ElementaryTypeName","src":"10751:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10750:9:19"},"scope":4355,"src":"10699:983:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4045,"nodeType":"Block","src":"11915:168:19","statements":[{"id":4044,"nodeType":"UncheckedBlock","src":"11925:152:19","statements":[{"assignments":[4023],"declarations":[{"constant":false,"id":4023,"mutability":"mutable","name":"result","nameLocation":"11957:6:19","nodeType":"VariableDeclaration","scope":4044,"src":"11949:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4022,"name":"uint256","nodeType":"ElementaryTypeName","src":"11949:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4027,"initialValue":{"arguments":[{"id":4025,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"11971:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4024,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4011,4046],"referencedDeclaration":4011,"src":"11966:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11966:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11949:28:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4028,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"11998:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4030,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"12025:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3312","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3312","typeString":"enum Math.Rounding"}],"id":4029,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"12008:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3312_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12008:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4033,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"12043:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4035,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"12052:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12008:49:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12008:57:19","trueExpression":{"hexValue":"31","id":4038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12060:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4041,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12007:59:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11998:68:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4021,"id":4043,"nodeType":"Return","src":"11991:75:19"}]}]},"documentation":{"id":4012,"nodeType":"StructuredDocumentation","src":"11688:142:19","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4046,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"11844:4:19","nodeType":"FunctionDefinition","parameters":{"id":4018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4014,"mutability":"mutable","name":"value","nameLocation":"11857:5:19","nodeType":"VariableDeclaration","scope":4046,"src":"11849:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4013,"name":"uint256","nodeType":"ElementaryTypeName","src":"11849:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4017,"mutability":"mutable","name":"rounding","nameLocation":"11873:8:19","nodeType":"VariableDeclaration","scope":4046,"src":"11864:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3312","typeString":"enum Math.Rounding"},"typeName":{"id":4016,"nodeType":"UserDefinedTypeName","pathNode":{"id":4015,"name":"Rounding","nameLocations":["11864:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3312,"src":"11864:8:19"},"referencedDeclaration":3312,"src":"11864:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3312","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11848:34:19"},"returnParameters":{"id":4021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4020,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4046,"src":"11906:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4019,"name":"uint256","nodeType":"ElementaryTypeName","src":"11906:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11905:9:19"},"scope":4355,"src":"11835:248:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4174,"nodeType":"Block","src":"12276:854:19","statements":[{"assignments":[4055],"declarations":[{"constant":false,"id":4055,"mutability":"mutable","name":"result","nameLocation":"12294:6:19","nodeType":"VariableDeclaration","scope":4174,"src":"12286:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4054,"name":"uint256","nodeType":"ElementaryTypeName","src":"12286:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4057,"initialValue":{"hexValue":"30","id":4056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12303:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12286:18:19"},{"id":4171,"nodeType":"UncheckedBlock","src":"12314:787:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"12342:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12351:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12351:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12342:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4074,"nodeType":"IfStatement","src":"12338:103:19","trueBody":{"id":4073,"nodeType":"Block","src":"12361:80:19","statements":[{"expression":{"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4063,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"12379:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12388:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12394:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12388:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12379:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4068,"nodeType":"ExpressionStatement","src":"12379:17:19"},{"expression":{"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4069,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4055,"src":"12414:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12424:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12414:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4072,"nodeType":"ExpressionStatement","src":"12414:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"12458:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12467:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12473:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12467:8:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12458:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4091,"nodeType":"IfStatement","src":"12454:103:19","trueBody":{"id":4090,"nodeType":"Block","src":"12477:80:19","statements":[{"expression":{"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4080,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"12495:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12504:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12510:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12504:8:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12495:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4085,"nodeType":"ExpressionStatement","src":"12495:17:19"},{"expression":{"id":4088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4086,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4055,"src":"12530:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12540:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12530:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4089,"nodeType":"ExpressionStatement","src":"12530:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"12574:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12583:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12589:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12583:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12574:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4108,"nodeType":"IfStatement","src":"12570:103:19","trueBody":{"id":4107,"nodeType":"Block","src":"12593:80:19","statements":[{"expression":{"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4097,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"12611:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12620:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12611:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4102,"nodeType":"ExpressionStatement","src":"12611:17:19"},{"expression":{"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4103,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4055,"src":"12646:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12656:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12646:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4106,"nodeType":"ExpressionStatement","src":"12646:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4109,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"12690:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12699:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12705:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12699:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12690:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4125,"nodeType":"IfStatement","src":"12686:100:19","trueBody":{"id":4124,"nodeType":"Block","src":"12708:78:19","statements":[{"expression":{"id":4118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"12726:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12735:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12735:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12726:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4119,"nodeType":"ExpressionStatement","src":"12726:16:19"},{"expression":{"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4120,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4055,"src":"12760:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12760:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4123,"nodeType":"ExpressionStatement","src":"12760:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"12803:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12812:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12818:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12812:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12803:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4142,"nodeType":"IfStatement","src":"12799:100:19","trueBody":{"id":4141,"nodeType":"Block","src":"12821:78:19","statements":[{"expression":{"id":4135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"12839:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12848:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12854:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12848:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12839:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4136,"nodeType":"ExpressionStatement","src":"12839:16:19"},{"expression":{"id":4139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4137,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4055,"src":"12873:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12883:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12873:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4140,"nodeType":"ExpressionStatement","src":"12873:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"12916:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12925:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12931:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12925:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12916:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4159,"nodeType":"IfStatement","src":"12912:100:19","trueBody":{"id":4158,"nodeType":"Block","src":"12934:78:19","statements":[{"expression":{"id":4152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4148,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"12952:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12961:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12967:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12961:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12952:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4153,"nodeType":"ExpressionStatement","src":"12952:16:19"},{"expression":{"id":4156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4154,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4055,"src":"12986:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12996:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12986:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4157,"nodeType":"ExpressionStatement","src":"12986:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"13029:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13038:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13044:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13038:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"13029:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4170,"nodeType":"IfStatement","src":"13025:66:19","trueBody":{"id":4169,"nodeType":"Block","src":"13047:44:19","statements":[{"expression":{"id":4167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4165,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4055,"src":"13065:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13075:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13065:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4168,"nodeType":"ExpressionStatement","src":"13065:11:19"}]}}]},{"expression":{"id":4172,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4055,"src":"13117:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4053,"id":4173,"nodeType":"Return","src":"13110:13:19"}]},"documentation":{"id":4047,"nodeType":"StructuredDocumentation","src":"12089:120:19","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4175,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"12223:5:19","nodeType":"FunctionDefinition","parameters":{"id":4050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4049,"mutability":"mutable","name":"value","nameLocation":"12237:5:19","nodeType":"VariableDeclaration","scope":4175,"src":"12229:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4048,"name":"uint256","nodeType":"ElementaryTypeName","src":"12229:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12228:15:19"},"returnParameters":{"id":4053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4052,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4175,"src":"12267:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4051,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12266:9:19"},"scope":4355,"src":"12214:916:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4209,"nodeType":"Block","src":"13365:170:19","statements":[{"id":4208,"nodeType":"UncheckedBlock","src":"13375:154:19","statements":[{"assignments":[4187],"declarations":[{"constant":false,"id":4187,"mutability":"mutable","name":"result","nameLocation":"13407:6:19","nodeType":"VariableDeclaration","scope":4208,"src":"13399:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4186,"name":"uint256","nodeType":"ElementaryTypeName","src":"13399:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4191,"initialValue":{"arguments":[{"id":4189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"13422:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4188,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4175,4210],"referencedDeclaration":4175,"src":"13416:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13399:29:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4192,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"13449:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4194,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4181,"src":"13476:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3312","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3312","typeString":"enum Math.Rounding"}],"id":4193,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"13459:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3312_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13459:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13489:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4197,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"13495:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"13504:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13459:50:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13516:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13459:58:19","trueExpression":{"hexValue":"31","id":4202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13512:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4205,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13458:60:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13449:69:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4185,"id":4207,"nodeType":"Return","src":"13442:76:19"}]}]},"documentation":{"id":4176,"nodeType":"StructuredDocumentation","src":"13136:143:19","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4210,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"13293:5:19","nodeType":"FunctionDefinition","parameters":{"id":4182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4178,"mutability":"mutable","name":"value","nameLocation":"13307:5:19","nodeType":"VariableDeclaration","scope":4210,"src":"13299:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4177,"name":"uint256","nodeType":"ElementaryTypeName","src":"13299:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4181,"mutability":"mutable","name":"rounding","nameLocation":"13323:8:19","nodeType":"VariableDeclaration","scope":4210,"src":"13314:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3312","typeString":"enum Math.Rounding"},"typeName":{"id":4180,"nodeType":"UserDefinedTypeName","pathNode":{"id":4179,"name":"Rounding","nameLocations":["13314:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3312,"src":"13314:8:19"},"referencedDeclaration":3312,"src":"13314:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3312","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"13298:34:19"},"returnParameters":{"id":4185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4184,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4210,"src":"13356:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4183,"name":"uint256","nodeType":"ElementaryTypeName","src":"13356:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13355:9:19"},"scope":4355,"src":"13284:251:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4296,"nodeType":"Block","src":"13855:600:19","statements":[{"assignments":[4219],"declarations":[{"constant":false,"id":4219,"mutability":"mutable","name":"result","nameLocation":"13873:6:19","nodeType":"VariableDeclaration","scope":4296,"src":"13865:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4218,"name":"uint256","nodeType":"ElementaryTypeName","src":"13865:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4221,"initialValue":{"hexValue":"30","id":4220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13882:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13865:18:19"},{"id":4293,"nodeType":"UncheckedBlock","src":"13893:533:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"13921:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":4223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13930:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13921:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13936:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13921:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4236,"nodeType":"IfStatement","src":"13917:98:19","trueBody":{"id":4235,"nodeType":"Block","src":"13939:76:19","statements":[{"expression":{"id":4229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"13957:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13967:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13957:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4230,"nodeType":"ExpressionStatement","src":"13957:13:19"},{"expression":{"id":4233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4231,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4219,"src":"13988:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13998:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13988:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4234,"nodeType":"ExpressionStatement","src":"13988:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4237,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"14032:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":4238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14041:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14032:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14046:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14032:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4251,"nodeType":"IfStatement","src":"14028:95:19","trueBody":{"id":4250,"nodeType":"Block","src":"14049:74:19","statements":[{"expression":{"id":4244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4242,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"14067:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14077:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14067:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4245,"nodeType":"ExpressionStatement","src":"14067:12:19"},{"expression":{"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4246,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4219,"src":"14097:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14107:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14097:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4249,"nodeType":"ExpressionStatement","src":"14097:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4252,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"14140:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14149:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14140:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14154:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14140:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4266,"nodeType":"IfStatement","src":"14136:95:19","trueBody":{"id":4265,"nodeType":"Block","src":"14157:74:19","statements":[{"expression":{"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"14175:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14185:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14175:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4260,"nodeType":"ExpressionStatement","src":"14175:12:19"},{"expression":{"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4261,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4219,"src":"14205:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14215:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14205:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4264,"nodeType":"ExpressionStatement","src":"14205:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"14248:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14257:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14248:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14262:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14248:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4281,"nodeType":"IfStatement","src":"14244:95:19","trueBody":{"id":4280,"nodeType":"Block","src":"14265:74:19","statements":[{"expression":{"id":4274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"14283:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14293:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14283:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4275,"nodeType":"ExpressionStatement","src":"14283:12:19"},{"expression":{"id":4278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4276,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4219,"src":"14313:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14323:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14313:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4279,"nodeType":"ExpressionStatement","src":"14313:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"14356:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14365:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14356:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14369:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14356:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4292,"nodeType":"IfStatement","src":"14352:64:19","trueBody":{"id":4291,"nodeType":"Block","src":"14372:44:19","statements":[{"expression":{"id":4289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4287,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4219,"src":"14390:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14400:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14390:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4290,"nodeType":"ExpressionStatement","src":"14390:11:19"}]}}]},{"expression":{"id":4294,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4219,"src":"14442:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4217,"id":4295,"nodeType":"Return","src":"14435:13:19"}]},"documentation":{"id":4211,"nodeType":"StructuredDocumentation","src":"13541:246:19","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4297,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"13801:6:19","nodeType":"FunctionDefinition","parameters":{"id":4214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4213,"mutability":"mutable","name":"value","nameLocation":"13816:5:19","nodeType":"VariableDeclaration","scope":4297,"src":"13808:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4212,"name":"uint256","nodeType":"ElementaryTypeName","src":"13808:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13807:15:19"},"returnParameters":{"id":4217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4216,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4297,"src":"13846:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4215,"name":"uint256","nodeType":"ElementaryTypeName","src":"13846:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13845:9:19"},"scope":4355,"src":"13792:663:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4334,"nodeType":"Block","src":"14692:177:19","statements":[{"id":4333,"nodeType":"UncheckedBlock","src":"14702:161:19","statements":[{"assignments":[4309],"declarations":[{"constant":false,"id":4309,"mutability":"mutable","name":"result","nameLocation":"14734:6:19","nodeType":"VariableDeclaration","scope":4333,"src":"14726:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4308,"name":"uint256","nodeType":"ElementaryTypeName","src":"14726:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4313,"initialValue":{"arguments":[{"id":4311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4300,"src":"14750:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4310,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4297,4335],"referencedDeclaration":4297,"src":"14743:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14743:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14726:30:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4314,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"14777:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4316,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"14804:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3312","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3312","typeString":"enum Math.Rounding"}],"id":4315,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"14787:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3312_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14787:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14817:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4319,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"14823:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14833:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"14823:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4322,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14822:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4324,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4300,"src":"14838:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14787:56:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14850:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14787:64:19","trueExpression":{"hexValue":"31","id":4327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14846:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4330,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14786:66:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14777:75:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4307,"id":4332,"nodeType":"Return","src":"14770:82:19"}]}]},"documentation":{"id":4298,"nodeType":"StructuredDocumentation","src":"14461:144:19","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4335,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"14619:6:19","nodeType":"FunctionDefinition","parameters":{"id":4304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4300,"mutability":"mutable","name":"value","nameLocation":"14634:5:19","nodeType":"VariableDeclaration","scope":4335,"src":"14626:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4299,"name":"uint256","nodeType":"ElementaryTypeName","src":"14626:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4303,"mutability":"mutable","name":"rounding","nameLocation":"14650:8:19","nodeType":"VariableDeclaration","scope":4335,"src":"14641:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3312","typeString":"enum Math.Rounding"},"typeName":{"id":4302,"nodeType":"UserDefinedTypeName","pathNode":{"id":4301,"name":"Rounding","nameLocations":["14641:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3312,"src":"14641:8:19"},"referencedDeclaration":3312,"src":"14641:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3312","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"14625:34:19"},"returnParameters":{"id":4307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4306,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4335,"src":"14683:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4305,"name":"uint256","nodeType":"ElementaryTypeName","src":"14683:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14682:9:19"},"scope":4355,"src":"14610:259:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4353,"nodeType":"Block","src":"15067:48:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4346,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"15090:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3312","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3312","typeString":"enum Math.Rounding"}],"id":4345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15084:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4344,"name":"uint8","nodeType":"ElementaryTypeName","src":"15084:5:19","typeDescriptions":{}}},"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15084:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15102:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15084:19:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15107:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15084:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4343,"id":4352,"nodeType":"Return","src":"15077:31:19"}]},"documentation":{"id":4336,"nodeType":"StructuredDocumentation","src":"14875:113:19","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":4354,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"15002:16:19","nodeType":"FunctionDefinition","parameters":{"id":4340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4339,"mutability":"mutable","name":"rounding","nameLocation":"15028:8:19","nodeType":"VariableDeclaration","scope":4354,"src":"15019:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3312","typeString":"enum Math.Rounding"},"typeName":{"id":4338,"nodeType":"UserDefinedTypeName","pathNode":{"id":4337,"name":"Rounding","nameLocations":["15019:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3312,"src":"15019:8:19"},"referencedDeclaration":3312,"src":"15019:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3312","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"15018:19:19"},"returnParameters":{"id":4343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4342,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4354,"src":"15061:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4341,"name":"bool","nodeType":"ElementaryTypeName","src":"15061:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15060:6:19"},"scope":4355,"src":"14993:122:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4356,"src":"203:14914:19","usedErrors":[3307],"usedEvents":[]}],"src":"103:15015:19"},"id":19},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6110]},"id":6111,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4357,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":4358,"nodeType":"StructuredDocumentation","src":"218:545:20","text":" @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6110,"linearizedBaseContracts":[6110],"name":"SafeCast","nameLocation":"772:8:20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4359,"nodeType":"StructuredDocumentation","src":"787:68:20","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":4365,"name":"SafeCastOverflowedUintDowncast","nameLocation":"866:30:20","nodeType":"ErrorDefinition","parameters":{"id":4364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4361,"mutability":"mutable","name":"bits","nameLocation":"903:4:20","nodeType":"VariableDeclaration","scope":4365,"src":"897:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4360,"name":"uint8","nodeType":"ElementaryTypeName","src":"897:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4363,"mutability":"mutable","name":"value","nameLocation":"917:5:20","nodeType":"VariableDeclaration","scope":4365,"src":"909:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4362,"name":"uint256","nodeType":"ElementaryTypeName","src":"909:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"896:27:20"},"src":"860:64:20"},{"documentation":{"id":4366,"nodeType":"StructuredDocumentation","src":"930:75:20","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":4370,"name":"SafeCastOverflowedIntToUint","nameLocation":"1016:27:20","nodeType":"ErrorDefinition","parameters":{"id":4369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4368,"mutability":"mutable","name":"value","nameLocation":"1051:5:20","nodeType":"VariableDeclaration","scope":4370,"src":"1044:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4367,"name":"int256","nodeType":"ElementaryTypeName","src":"1044:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1043:14:20"},"src":"1010:48:20"},{"documentation":{"id":4371,"nodeType":"StructuredDocumentation","src":"1064:67:20","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":4377,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1142:29:20","nodeType":"ErrorDefinition","parameters":{"id":4376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4373,"mutability":"mutable","name":"bits","nameLocation":"1178:4:20","nodeType":"VariableDeclaration","scope":4377,"src":"1172:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4372,"name":"uint8","nodeType":"ElementaryTypeName","src":"1172:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4375,"mutability":"mutable","name":"value","nameLocation":"1191:5:20","nodeType":"VariableDeclaration","scope":4377,"src":"1184:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4374,"name":"int256","nodeType":"ElementaryTypeName","src":"1184:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1171:26:20"},"src":"1136:62:20"},{"documentation":{"id":4378,"nodeType":"StructuredDocumentation","src":"1204:75:20","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":4382,"name":"SafeCastOverflowedUintToInt","nameLocation":"1290:27:20","nodeType":"ErrorDefinition","parameters":{"id":4381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4380,"mutability":"mutable","name":"value","nameLocation":"1326:5:20","nodeType":"VariableDeclaration","scope":4382,"src":"1318:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4379,"name":"uint256","nodeType":"ElementaryTypeName","src":"1318:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1317:15:20"},"src":"1284:49:20"},{"body":{"id":4409,"nodeType":"Block","src":"1690:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4385,"src":"1704:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1717:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4392,"name":"uint248","nodeType":"ElementaryTypeName","src":"1717:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":4391,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1712:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1712:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":4395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1726:3:20","memberName":"max","nodeType":"MemberAccess","src":"1712:17:20","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1704:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4403,"nodeType":"IfStatement","src":"1700:105:20","trueBody":{"id":4402,"nodeType":"Block","src":"1731:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1783:3:20","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4385,"src":"1788:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4397,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"1752:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1752:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4401,"nodeType":"RevertStatement","src":"1745:49:20"}]}},{"expression":{"arguments":[{"id":4406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4385,"src":"1829:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1821:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4404,"name":"uint248","nodeType":"ElementaryTypeName","src":"1821:7:20","typeDescriptions":{}}},"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1821:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":4389,"id":4408,"nodeType":"Return","src":"1814:21:20"}]},"documentation":{"id":4383,"nodeType":"StructuredDocumentation","src":"1339:280:20","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4410,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1633:9:20","nodeType":"FunctionDefinition","parameters":{"id":4386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4385,"mutability":"mutable","name":"value","nameLocation":"1651:5:20","nodeType":"VariableDeclaration","scope":4410,"src":"1643:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4384,"name":"uint256","nodeType":"ElementaryTypeName","src":"1643:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1642:15:20"},"returnParameters":{"id":4389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4410,"src":"1681:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":4387,"name":"uint248","nodeType":"ElementaryTypeName","src":"1681:7:20","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1680:9:20"},"scope":6110,"src":"1624:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4437,"nodeType":"Block","src":"2199:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"2213:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2226:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4420,"name":"uint240","nodeType":"ElementaryTypeName","src":"2226:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":4419,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2221:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2221:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":4423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2235:3:20","memberName":"max","nodeType":"MemberAccess","src":"2221:17:20","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2213:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4431,"nodeType":"IfStatement","src":"2209:105:20","trueBody":{"id":4430,"nodeType":"Block","src":"2240:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2292:3:20","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4427,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"2297:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4425,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"2261:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4429,"nodeType":"RevertStatement","src":"2254:49:20"}]}},{"expression":{"arguments":[{"id":4434,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"2338:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2330:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4432,"name":"uint240","nodeType":"ElementaryTypeName","src":"2330:7:20","typeDescriptions":{}}},"id":4435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2330:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":4417,"id":4436,"nodeType":"Return","src":"2323:21:20"}]},"documentation":{"id":4411,"nodeType":"StructuredDocumentation","src":"1848:280:20","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4438,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2142:9:20","nodeType":"FunctionDefinition","parameters":{"id":4414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4413,"mutability":"mutable","name":"value","nameLocation":"2160:5:20","nodeType":"VariableDeclaration","scope":4438,"src":"2152:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4412,"name":"uint256","nodeType":"ElementaryTypeName","src":"2152:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2151:15:20"},"returnParameters":{"id":4417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4416,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4438,"src":"2190:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":4415,"name":"uint240","nodeType":"ElementaryTypeName","src":"2190:7:20","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2189:9:20"},"scope":6110,"src":"2133:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4465,"nodeType":"Block","src":"2708:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"2722:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2735:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4448,"name":"uint232","nodeType":"ElementaryTypeName","src":"2735:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":4447,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2730:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2730:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":4451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2744:3:20","memberName":"max","nodeType":"MemberAccess","src":"2730:17:20","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2722:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4459,"nodeType":"IfStatement","src":"2718:105:20","trueBody":{"id":4458,"nodeType":"Block","src":"2749:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2801:3:20","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"2806:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4453,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"2770:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4457,"nodeType":"RevertStatement","src":"2763:49:20"}]}},{"expression":{"arguments":[{"id":4462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"2847:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2839:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4460,"name":"uint232","nodeType":"ElementaryTypeName","src":"2839:7:20","typeDescriptions":{}}},"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2839:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":4445,"id":4464,"nodeType":"Return","src":"2832:21:20"}]},"documentation":{"id":4439,"nodeType":"StructuredDocumentation","src":"2357:280:20","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":4466,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2651:9:20","nodeType":"FunctionDefinition","parameters":{"id":4442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4441,"mutability":"mutable","name":"value","nameLocation":"2669:5:20","nodeType":"VariableDeclaration","scope":4466,"src":"2661:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4440,"name":"uint256","nodeType":"ElementaryTypeName","src":"2661:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2660:15:20"},"returnParameters":{"id":4445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4444,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4466,"src":"2699:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":4443,"name":"uint232","nodeType":"ElementaryTypeName","src":"2699:7:20","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2698:9:20"},"scope":6110,"src":"2642:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4493,"nodeType":"Block","src":"3217:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4469,"src":"3231:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3244:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4476,"name":"uint224","nodeType":"ElementaryTypeName","src":"3244:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":4475,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3239:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3239:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":4479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3253:3:20","memberName":"max","nodeType":"MemberAccess","src":"3239:17:20","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3231:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4487,"nodeType":"IfStatement","src":"3227:105:20","trueBody":{"id":4486,"nodeType":"Block","src":"3258:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":4482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3310:3:20","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":4483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4469,"src":"3315:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4481,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"3279:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3279:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4485,"nodeType":"RevertStatement","src":"3272:49:20"}]}},{"expression":{"arguments":[{"id":4490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4469,"src":"3356:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3348:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4488,"name":"uint224","nodeType":"ElementaryTypeName","src":"3348:7:20","typeDescriptions":{}}},"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3348:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4473,"id":4492,"nodeType":"Return","src":"3341:21:20"}]},"documentation":{"id":4467,"nodeType":"StructuredDocumentation","src":"2866:280:20","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":4494,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3160:9:20","nodeType":"FunctionDefinition","parameters":{"id":4470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4469,"mutability":"mutable","name":"value","nameLocation":"3178:5:20","nodeType":"VariableDeclaration","scope":4494,"src":"3170:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4468,"name":"uint256","nodeType":"ElementaryTypeName","src":"3170:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3169:15:20"},"returnParameters":{"id":4473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4494,"src":"3208:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4471,"name":"uint224","nodeType":"ElementaryTypeName","src":"3208:7:20","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3207:9:20"},"scope":6110,"src":"3151:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4521,"nodeType":"Block","src":"3726:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4497,"src":"3740:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3753:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4504,"name":"uint216","nodeType":"ElementaryTypeName","src":"3753:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":4503,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3748:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3748:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":4507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3762:3:20","memberName":"max","nodeType":"MemberAccess","src":"3748:17:20","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3740:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4515,"nodeType":"IfStatement","src":"3736:105:20","trueBody":{"id":4514,"nodeType":"Block","src":"3767:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":4510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3819:3:20","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":4511,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4497,"src":"3824:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4509,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"3788:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3788:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4513,"nodeType":"RevertStatement","src":"3781:49:20"}]}},{"expression":{"arguments":[{"id":4518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4497,"src":"3865:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3857:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4516,"name":"uint216","nodeType":"ElementaryTypeName","src":"3857:7:20","typeDescriptions":{}}},"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3857:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":4501,"id":4520,"nodeType":"Return","src":"3850:21:20"}]},"documentation":{"id":4495,"nodeType":"StructuredDocumentation","src":"3375:280:20","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":4522,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3669:9:20","nodeType":"FunctionDefinition","parameters":{"id":4498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4497,"mutability":"mutable","name":"value","nameLocation":"3687:5:20","nodeType":"VariableDeclaration","scope":4522,"src":"3679:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4496,"name":"uint256","nodeType":"ElementaryTypeName","src":"3679:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3678:15:20"},"returnParameters":{"id":4501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4522,"src":"3717:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":4499,"name":"uint216","nodeType":"ElementaryTypeName","src":"3717:7:20","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3716:9:20"},"scope":6110,"src":"3660:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4549,"nodeType":"Block","src":"4235:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4525,"src":"4249:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4262:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4532,"name":"uint208","nodeType":"ElementaryTypeName","src":"4262:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":4531,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4257:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4257:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":4535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4271:3:20","memberName":"max","nodeType":"MemberAccess","src":"4257:17:20","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4249:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4543,"nodeType":"IfStatement","src":"4245:105:20","trueBody":{"id":4542,"nodeType":"Block","src":"4276:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":4538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4328:3:20","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":4539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4525,"src":"4333:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4537,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"4297:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4541,"nodeType":"RevertStatement","src":"4290:49:20"}]}},{"expression":{"arguments":[{"id":4546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4525,"src":"4374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4366:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4544,"name":"uint208","nodeType":"ElementaryTypeName","src":"4366:7:20","typeDescriptions":{}}},"id":4547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4366:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":4529,"id":4548,"nodeType":"Return","src":"4359:21:20"}]},"documentation":{"id":4523,"nodeType":"StructuredDocumentation","src":"3884:280:20","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":4550,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4178:9:20","nodeType":"FunctionDefinition","parameters":{"id":4526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4525,"mutability":"mutable","name":"value","nameLocation":"4196:5:20","nodeType":"VariableDeclaration","scope":4550,"src":"4188:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4524,"name":"uint256","nodeType":"ElementaryTypeName","src":"4188:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4187:15:20"},"returnParameters":{"id":4529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4528,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4550,"src":"4226:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":4527,"name":"uint208","nodeType":"ElementaryTypeName","src":"4226:7:20","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4225:9:20"},"scope":6110,"src":"4169:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4577,"nodeType":"Block","src":"4744:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4553,"src":"4758:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4771:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4560,"name":"uint200","nodeType":"ElementaryTypeName","src":"4771:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":4559,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4766:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4766:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":4563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4780:3:20","memberName":"max","nodeType":"MemberAccess","src":"4766:17:20","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4758:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4571,"nodeType":"IfStatement","src":"4754:105:20","trueBody":{"id":4570,"nodeType":"Block","src":"4785:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":4566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4837:3:20","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":4567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4553,"src":"4842:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4565,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"4806:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4806:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4569,"nodeType":"RevertStatement","src":"4799:49:20"}]}},{"expression":{"arguments":[{"id":4574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4553,"src":"4883:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4875:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4572,"name":"uint200","nodeType":"ElementaryTypeName","src":"4875:7:20","typeDescriptions":{}}},"id":4575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4875:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":4557,"id":4576,"nodeType":"Return","src":"4868:21:20"}]},"documentation":{"id":4551,"nodeType":"StructuredDocumentation","src":"4393:280:20","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":4578,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4687:9:20","nodeType":"FunctionDefinition","parameters":{"id":4554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4553,"mutability":"mutable","name":"value","nameLocation":"4705:5:20","nodeType":"VariableDeclaration","scope":4578,"src":"4697:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4552,"name":"uint256","nodeType":"ElementaryTypeName","src":"4697:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4696:15:20"},"returnParameters":{"id":4557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4556,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4578,"src":"4735:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":4555,"name":"uint200","nodeType":"ElementaryTypeName","src":"4735:7:20","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4734:9:20"},"scope":6110,"src":"4678:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4605,"nodeType":"Block","src":"5253:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4581,"src":"5267:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5280:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4588,"name":"uint192","nodeType":"ElementaryTypeName","src":"5280:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":4587,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5275:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5275:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":4591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5289:3:20","memberName":"max","nodeType":"MemberAccess","src":"5275:17:20","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5267:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4599,"nodeType":"IfStatement","src":"5263:105:20","trueBody":{"id":4598,"nodeType":"Block","src":"5294:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":4594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5346:3:20","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":4595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4581,"src":"5351:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4593,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"5315:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5315:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4597,"nodeType":"RevertStatement","src":"5308:49:20"}]}},{"expression":{"arguments":[{"id":4602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4581,"src":"5392:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5384:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4600,"name":"uint192","nodeType":"ElementaryTypeName","src":"5384:7:20","typeDescriptions":{}}},"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5384:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":4585,"id":4604,"nodeType":"Return","src":"5377:21:20"}]},"documentation":{"id":4579,"nodeType":"StructuredDocumentation","src":"4902:280:20","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":4606,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5196:9:20","nodeType":"FunctionDefinition","parameters":{"id":4582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4581,"mutability":"mutable","name":"value","nameLocation":"5214:5:20","nodeType":"VariableDeclaration","scope":4606,"src":"5206:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4580,"name":"uint256","nodeType":"ElementaryTypeName","src":"5206:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5205:15:20"},"returnParameters":{"id":4585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4606,"src":"5244:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":4583,"name":"uint192","nodeType":"ElementaryTypeName","src":"5244:7:20","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5243:9:20"},"scope":6110,"src":"5187:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4633,"nodeType":"Block","src":"5762:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"5776:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5789:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4616,"name":"uint184","nodeType":"ElementaryTypeName","src":"5789:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":4615,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5784:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5784:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":4619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5798:3:20","memberName":"max","nodeType":"MemberAccess","src":"5784:17:20","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5776:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4627,"nodeType":"IfStatement","src":"5772:105:20","trueBody":{"id":4626,"nodeType":"Block","src":"5803:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":4622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5855:3:20","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":4623,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"5860:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4621,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"5824:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5824:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4625,"nodeType":"RevertStatement","src":"5817:49:20"}]}},{"expression":{"arguments":[{"id":4630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"5901:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5893:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4628,"name":"uint184","nodeType":"ElementaryTypeName","src":"5893:7:20","typeDescriptions":{}}},"id":4631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5893:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":4613,"id":4632,"nodeType":"Return","src":"5886:21:20"}]},"documentation":{"id":4607,"nodeType":"StructuredDocumentation","src":"5411:280:20","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":4634,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5705:9:20","nodeType":"FunctionDefinition","parameters":{"id":4610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4609,"mutability":"mutable","name":"value","nameLocation":"5723:5:20","nodeType":"VariableDeclaration","scope":4634,"src":"5715:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4608,"name":"uint256","nodeType":"ElementaryTypeName","src":"5715:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5714:15:20"},"returnParameters":{"id":4613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4634,"src":"5753:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":4611,"name":"uint184","nodeType":"ElementaryTypeName","src":"5753:7:20","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5752:9:20"},"scope":6110,"src":"5696:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4661,"nodeType":"Block","src":"6271:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"6285:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6298:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4644,"name":"uint176","nodeType":"ElementaryTypeName","src":"6298:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":4643,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6293:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6293:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":4647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6307:3:20","memberName":"max","nodeType":"MemberAccess","src":"6293:17:20","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6285:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4655,"nodeType":"IfStatement","src":"6281:105:20","trueBody":{"id":4654,"nodeType":"Block","src":"6312:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":4650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6364:3:20","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":4651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"6369:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4649,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"6333:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6333:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4653,"nodeType":"RevertStatement","src":"6326:49:20"}]}},{"expression":{"arguments":[{"id":4658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"6410:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6402:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4656,"name":"uint176","nodeType":"ElementaryTypeName","src":"6402:7:20","typeDescriptions":{}}},"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6402:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":4641,"id":4660,"nodeType":"Return","src":"6395:21:20"}]},"documentation":{"id":4635,"nodeType":"StructuredDocumentation","src":"5920:280:20","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":4662,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6214:9:20","nodeType":"FunctionDefinition","parameters":{"id":4638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4637,"mutability":"mutable","name":"value","nameLocation":"6232:5:20","nodeType":"VariableDeclaration","scope":4662,"src":"6224:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4636,"name":"uint256","nodeType":"ElementaryTypeName","src":"6224:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6223:15:20"},"returnParameters":{"id":4641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4640,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4662,"src":"6262:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":4639,"name":"uint176","nodeType":"ElementaryTypeName","src":"6262:7:20","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6261:9:20"},"scope":6110,"src":"6205:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4689,"nodeType":"Block","src":"6780:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4665,"src":"6794:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6807:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4672,"name":"uint168","nodeType":"ElementaryTypeName","src":"6807:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":4671,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6802:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6802:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":4675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6816:3:20","memberName":"max","nodeType":"MemberAccess","src":"6802:17:20","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6794:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4683,"nodeType":"IfStatement","src":"6790:105:20","trueBody":{"id":4682,"nodeType":"Block","src":"6821:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":4678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6873:3:20","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":4679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4665,"src":"6878:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4677,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"6842:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6842:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4681,"nodeType":"RevertStatement","src":"6835:49:20"}]}},{"expression":{"arguments":[{"id":4686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4665,"src":"6919:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6911:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4684,"name":"uint168","nodeType":"ElementaryTypeName","src":"6911:7:20","typeDescriptions":{}}},"id":4687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6911:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":4669,"id":4688,"nodeType":"Return","src":"6904:21:20"}]},"documentation":{"id":4663,"nodeType":"StructuredDocumentation","src":"6429:280:20","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":4690,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6723:9:20","nodeType":"FunctionDefinition","parameters":{"id":4666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4665,"mutability":"mutable","name":"value","nameLocation":"6741:5:20","nodeType":"VariableDeclaration","scope":4690,"src":"6733:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4664,"name":"uint256","nodeType":"ElementaryTypeName","src":"6733:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6732:15:20"},"returnParameters":{"id":4669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4690,"src":"6771:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":4667,"name":"uint168","nodeType":"ElementaryTypeName","src":"6771:7:20","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6770:9:20"},"scope":6110,"src":"6714:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4717,"nodeType":"Block","src":"7289:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"7303:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7316:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4700,"name":"uint160","nodeType":"ElementaryTypeName","src":"7316:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":4699,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7311:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7311:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":4703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7325:3:20","memberName":"max","nodeType":"MemberAccess","src":"7311:17:20","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7303:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4711,"nodeType":"IfStatement","src":"7299:105:20","trueBody":{"id":4710,"nodeType":"Block","src":"7330:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":4706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7382:3:20","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":4707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"7387:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4705,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"7351:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7351:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4709,"nodeType":"RevertStatement","src":"7344:49:20"}]}},{"expression":{"arguments":[{"id":4714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"7428:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7420:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4712,"name":"uint160","nodeType":"ElementaryTypeName","src":"7420:7:20","typeDescriptions":{}}},"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7420:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4697,"id":4716,"nodeType":"Return","src":"7413:21:20"}]},"documentation":{"id":4691,"nodeType":"StructuredDocumentation","src":"6938:280:20","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":4718,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7232:9:20","nodeType":"FunctionDefinition","parameters":{"id":4694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4693,"mutability":"mutable","name":"value","nameLocation":"7250:5:20","nodeType":"VariableDeclaration","scope":4718,"src":"7242:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4692,"name":"uint256","nodeType":"ElementaryTypeName","src":"7242:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7241:15:20"},"returnParameters":{"id":4697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4696,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4718,"src":"7280:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4695,"name":"uint160","nodeType":"ElementaryTypeName","src":"7280:7:20","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7279:9:20"},"scope":6110,"src":"7223:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4745,"nodeType":"Block","src":"7798:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"7812:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7825:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4728,"name":"uint152","nodeType":"ElementaryTypeName","src":"7825:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":4727,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7820:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7820:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":4731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7834:3:20","memberName":"max","nodeType":"MemberAccess","src":"7820:17:20","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7812:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4739,"nodeType":"IfStatement","src":"7808:105:20","trueBody":{"id":4738,"nodeType":"Block","src":"7839:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":4734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7891:3:20","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":4735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"7896:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4733,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"7860:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7860:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4737,"nodeType":"RevertStatement","src":"7853:49:20"}]}},{"expression":{"arguments":[{"id":4742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"7937:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7929:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4740,"name":"uint152","nodeType":"ElementaryTypeName","src":"7929:7:20","typeDescriptions":{}}},"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7929:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":4725,"id":4744,"nodeType":"Return","src":"7922:21:20"}]},"documentation":{"id":4719,"nodeType":"StructuredDocumentation","src":"7447:280:20","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":4746,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7741:9:20","nodeType":"FunctionDefinition","parameters":{"id":4722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4721,"mutability":"mutable","name":"value","nameLocation":"7759:5:20","nodeType":"VariableDeclaration","scope":4746,"src":"7751:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4720,"name":"uint256","nodeType":"ElementaryTypeName","src":"7751:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7750:15:20"},"returnParameters":{"id":4725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4746,"src":"7789:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":4723,"name":"uint152","nodeType":"ElementaryTypeName","src":"7789:7:20","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7788:9:20"},"scope":6110,"src":"7732:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4773,"nodeType":"Block","src":"8307:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"8321:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8334:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4756,"name":"uint144","nodeType":"ElementaryTypeName","src":"8334:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":4755,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8329:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8329:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":4759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8343:3:20","memberName":"max","nodeType":"MemberAccess","src":"8329:17:20","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8321:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4767,"nodeType":"IfStatement","src":"8317:105:20","trueBody":{"id":4766,"nodeType":"Block","src":"8348:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":4762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8400:3:20","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":4763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"8405:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4761,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"8369:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8369:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4765,"nodeType":"RevertStatement","src":"8362:49:20"}]}},{"expression":{"arguments":[{"id":4770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"8446:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8438:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4768,"name":"uint144","nodeType":"ElementaryTypeName","src":"8438:7:20","typeDescriptions":{}}},"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8438:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":4753,"id":4772,"nodeType":"Return","src":"8431:21:20"}]},"documentation":{"id":4747,"nodeType":"StructuredDocumentation","src":"7956:280:20","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":4774,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8250:9:20","nodeType":"FunctionDefinition","parameters":{"id":4750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4749,"mutability":"mutable","name":"value","nameLocation":"8268:5:20","nodeType":"VariableDeclaration","scope":4774,"src":"8260:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4748,"name":"uint256","nodeType":"ElementaryTypeName","src":"8260:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8259:15:20"},"returnParameters":{"id":4753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4774,"src":"8298:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":4751,"name":"uint144","nodeType":"ElementaryTypeName","src":"8298:7:20","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8297:9:20"},"scope":6110,"src":"8241:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4801,"nodeType":"Block","src":"8816:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4777,"src":"8830:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8843:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4784,"name":"uint136","nodeType":"ElementaryTypeName","src":"8843:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":4783,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8838:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8838:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":4787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8852:3:20","memberName":"max","nodeType":"MemberAccess","src":"8838:17:20","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8830:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4795,"nodeType":"IfStatement","src":"8826:105:20","trueBody":{"id":4794,"nodeType":"Block","src":"8857:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":4790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8909:3:20","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":4791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4777,"src":"8914:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4789,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"8878:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8878:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4793,"nodeType":"RevertStatement","src":"8871:49:20"}]}},{"expression":{"arguments":[{"id":4798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4777,"src":"8955:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8947:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4796,"name":"uint136","nodeType":"ElementaryTypeName","src":"8947:7:20","typeDescriptions":{}}},"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8947:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":4781,"id":4800,"nodeType":"Return","src":"8940:21:20"}]},"documentation":{"id":4775,"nodeType":"StructuredDocumentation","src":"8465:280:20","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":4802,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8759:9:20","nodeType":"FunctionDefinition","parameters":{"id":4778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4777,"mutability":"mutable","name":"value","nameLocation":"8777:5:20","nodeType":"VariableDeclaration","scope":4802,"src":"8769:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4776,"name":"uint256","nodeType":"ElementaryTypeName","src":"8769:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8768:15:20"},"returnParameters":{"id":4781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4780,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4802,"src":"8807:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":4779,"name":"uint136","nodeType":"ElementaryTypeName","src":"8807:7:20","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8806:9:20"},"scope":6110,"src":"8750:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4829,"nodeType":"Block","src":"9325:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4805,"src":"9339:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9352:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4812,"name":"uint128","nodeType":"ElementaryTypeName","src":"9352:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":4811,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9347:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9347:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":4815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9361:3:20","memberName":"max","nodeType":"MemberAccess","src":"9347:17:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9339:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4823,"nodeType":"IfStatement","src":"9335:105:20","trueBody":{"id":4822,"nodeType":"Block","src":"9366:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":4818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9418:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":4819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4805,"src":"9423:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4817,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"9387:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9387:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4821,"nodeType":"RevertStatement","src":"9380:49:20"}]}},{"expression":{"arguments":[{"id":4826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4805,"src":"9464:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9456:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4824,"name":"uint128","nodeType":"ElementaryTypeName","src":"9456:7:20","typeDescriptions":{}}},"id":4827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9456:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":4809,"id":4828,"nodeType":"Return","src":"9449:21:20"}]},"documentation":{"id":4803,"nodeType":"StructuredDocumentation","src":"8974:280:20","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":4830,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9268:9:20","nodeType":"FunctionDefinition","parameters":{"id":4806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4805,"mutability":"mutable","name":"value","nameLocation":"9286:5:20","nodeType":"VariableDeclaration","scope":4830,"src":"9278:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4804,"name":"uint256","nodeType":"ElementaryTypeName","src":"9278:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9277:15:20"},"returnParameters":{"id":4809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4830,"src":"9316:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4807,"name":"uint128","nodeType":"ElementaryTypeName","src":"9316:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9315:9:20"},"scope":6110,"src":"9259:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4857,"nodeType":"Block","src":"9834:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"9848:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9861:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4840,"name":"uint120","nodeType":"ElementaryTypeName","src":"9861:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":4839,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9856:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9856:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":4843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9870:3:20","memberName":"max","nodeType":"MemberAccess","src":"9856:17:20","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9848:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4851,"nodeType":"IfStatement","src":"9844:105:20","trueBody":{"id":4850,"nodeType":"Block","src":"9875:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":4846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9927:3:20","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":4847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"9932:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4845,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"9896:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9896:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4849,"nodeType":"RevertStatement","src":"9889:49:20"}]}},{"expression":{"arguments":[{"id":4854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"9973:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9965:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4852,"name":"uint120","nodeType":"ElementaryTypeName","src":"9965:7:20","typeDescriptions":{}}},"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9965:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":4837,"id":4856,"nodeType":"Return","src":"9958:21:20"}]},"documentation":{"id":4831,"nodeType":"StructuredDocumentation","src":"9483:280:20","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":4858,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9777:9:20","nodeType":"FunctionDefinition","parameters":{"id":4834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4833,"mutability":"mutable","name":"value","nameLocation":"9795:5:20","nodeType":"VariableDeclaration","scope":4858,"src":"9787:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4832,"name":"uint256","nodeType":"ElementaryTypeName","src":"9787:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9786:15:20"},"returnParameters":{"id":4837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4858,"src":"9825:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":4835,"name":"uint120","nodeType":"ElementaryTypeName","src":"9825:7:20","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9824:9:20"},"scope":6110,"src":"9768:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4885,"nodeType":"Block","src":"10343:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"10357:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10370:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4868,"name":"uint112","nodeType":"ElementaryTypeName","src":"10370:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":4867,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10365:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10365:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":4871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10379:3:20","memberName":"max","nodeType":"MemberAccess","src":"10365:17:20","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10357:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4879,"nodeType":"IfStatement","src":"10353:105:20","trueBody":{"id":4878,"nodeType":"Block","src":"10384:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":4874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10436:3:20","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":4875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"10441:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4873,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"10405:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10405:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4877,"nodeType":"RevertStatement","src":"10398:49:20"}]}},{"expression":{"arguments":[{"id":4882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"10482:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10474:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4880,"name":"uint112","nodeType":"ElementaryTypeName","src":"10474:7:20","typeDescriptions":{}}},"id":4883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10474:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":4865,"id":4884,"nodeType":"Return","src":"10467:21:20"}]},"documentation":{"id":4859,"nodeType":"StructuredDocumentation","src":"9992:280:20","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":4886,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10286:9:20","nodeType":"FunctionDefinition","parameters":{"id":4862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4861,"mutability":"mutable","name":"value","nameLocation":"10304:5:20","nodeType":"VariableDeclaration","scope":4886,"src":"10296:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4860,"name":"uint256","nodeType":"ElementaryTypeName","src":"10296:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10295:15:20"},"returnParameters":{"id":4865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4886,"src":"10334:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":4863,"name":"uint112","nodeType":"ElementaryTypeName","src":"10334:7:20","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10333:9:20"},"scope":6110,"src":"10277:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4913,"nodeType":"Block","src":"10852:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"10866:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10879:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4896,"name":"uint104","nodeType":"ElementaryTypeName","src":"10879:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":4895,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10874:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10874:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":4899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10888:3:20","memberName":"max","nodeType":"MemberAccess","src":"10874:17:20","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10866:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4907,"nodeType":"IfStatement","src":"10862:105:20","trueBody":{"id":4906,"nodeType":"Block","src":"10893:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":4902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10945:3:20","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":4903,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"10950:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4901,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"10914:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10914:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4905,"nodeType":"RevertStatement","src":"10907:49:20"}]}},{"expression":{"arguments":[{"id":4910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"10991:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10983:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4908,"name":"uint104","nodeType":"ElementaryTypeName","src":"10983:7:20","typeDescriptions":{}}},"id":4911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10983:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":4893,"id":4912,"nodeType":"Return","src":"10976:21:20"}]},"documentation":{"id":4887,"nodeType":"StructuredDocumentation","src":"10501:280:20","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":4914,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10795:9:20","nodeType":"FunctionDefinition","parameters":{"id":4890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4889,"mutability":"mutable","name":"value","nameLocation":"10813:5:20","nodeType":"VariableDeclaration","scope":4914,"src":"10805:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4888,"name":"uint256","nodeType":"ElementaryTypeName","src":"10805:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10804:15:20"},"returnParameters":{"id":4893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4914,"src":"10843:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":4891,"name":"uint104","nodeType":"ElementaryTypeName","src":"10843:7:20","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10842:9:20"},"scope":6110,"src":"10786:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4941,"nodeType":"Block","src":"11355:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"11369:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11382:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4924,"name":"uint96","nodeType":"ElementaryTypeName","src":"11382:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":4923,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11377:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11377:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":4927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11390:3:20","memberName":"max","nodeType":"MemberAccess","src":"11377:16:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11369:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4935,"nodeType":"IfStatement","src":"11365:103:20","trueBody":{"id":4934,"nodeType":"Block","src":"11395:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":4930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11447:2:20","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":4931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"11451:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4929,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"11416:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11416:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4933,"nodeType":"RevertStatement","src":"11409:48:20"}]}},{"expression":{"arguments":[{"id":4938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"11491:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11484:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4936,"name":"uint96","nodeType":"ElementaryTypeName","src":"11484:6:20","typeDescriptions":{}}},"id":4939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11484:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":4921,"id":4940,"nodeType":"Return","src":"11477:20:20"}]},"documentation":{"id":4915,"nodeType":"StructuredDocumentation","src":"11010:276:20","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":4942,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11300:8:20","nodeType":"FunctionDefinition","parameters":{"id":4918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4917,"mutability":"mutable","name":"value","nameLocation":"11317:5:20","nodeType":"VariableDeclaration","scope":4942,"src":"11309:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4916,"name":"uint256","nodeType":"ElementaryTypeName","src":"11309:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11308:15:20"},"returnParameters":{"id":4921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4920,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4942,"src":"11347:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4919,"name":"uint96","nodeType":"ElementaryTypeName","src":"11347:6:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11346:8:20"},"scope":6110,"src":"11291:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4969,"nodeType":"Block","src":"11855:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"11869:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11882:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4952,"name":"uint88","nodeType":"ElementaryTypeName","src":"11882:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":4951,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11877:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11877:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":4955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11890:3:20","memberName":"max","nodeType":"MemberAccess","src":"11877:16:20","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11869:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4963,"nodeType":"IfStatement","src":"11865:103:20","trueBody":{"id":4962,"nodeType":"Block","src":"11895:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":4958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11947:2:20","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":4959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"11951:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4957,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"11916:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11916:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4961,"nodeType":"RevertStatement","src":"11909:48:20"}]}},{"expression":{"arguments":[{"id":4966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"11991:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11984:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4964,"name":"uint88","nodeType":"ElementaryTypeName","src":"11984:6:20","typeDescriptions":{}}},"id":4967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11984:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":4949,"id":4968,"nodeType":"Return","src":"11977:20:20"}]},"documentation":{"id":4943,"nodeType":"StructuredDocumentation","src":"11510:276:20","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":4970,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11800:8:20","nodeType":"FunctionDefinition","parameters":{"id":4946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4945,"mutability":"mutable","name":"value","nameLocation":"11817:5:20","nodeType":"VariableDeclaration","scope":4970,"src":"11809:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4944,"name":"uint256","nodeType":"ElementaryTypeName","src":"11809:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11808:15:20"},"returnParameters":{"id":4949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4948,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4970,"src":"11847:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":4947,"name":"uint88","nodeType":"ElementaryTypeName","src":"11847:6:20","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11846:8:20"},"scope":6110,"src":"11791:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4997,"nodeType":"Block","src":"12355:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4973,"src":"12369:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12382:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4980,"name":"uint80","nodeType":"ElementaryTypeName","src":"12382:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":4979,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12377:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12377:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":4983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12390:3:20","memberName":"max","nodeType":"MemberAccess","src":"12377:16:20","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12369:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4991,"nodeType":"IfStatement","src":"12365:103:20","trueBody":{"id":4990,"nodeType":"Block","src":"12395:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":4986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12447:2:20","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":4987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4973,"src":"12451:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4985,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"12416:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12416:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4989,"nodeType":"RevertStatement","src":"12409:48:20"}]}},{"expression":{"arguments":[{"id":4994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4973,"src":"12491:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12484:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4992,"name":"uint80","nodeType":"ElementaryTypeName","src":"12484:6:20","typeDescriptions":{}}},"id":4995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12484:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":4977,"id":4996,"nodeType":"Return","src":"12477:20:20"}]},"documentation":{"id":4971,"nodeType":"StructuredDocumentation","src":"12010:276:20","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":4998,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12300:8:20","nodeType":"FunctionDefinition","parameters":{"id":4974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4973,"mutability":"mutable","name":"value","nameLocation":"12317:5:20","nodeType":"VariableDeclaration","scope":4998,"src":"12309:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4972,"name":"uint256","nodeType":"ElementaryTypeName","src":"12309:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12308:15:20"},"returnParameters":{"id":4977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4998,"src":"12347:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":4975,"name":"uint80","nodeType":"ElementaryTypeName","src":"12347:6:20","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12346:8:20"},"scope":6110,"src":"12291:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5025,"nodeType":"Block","src":"12855:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"12869:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12882:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5008,"name":"uint72","nodeType":"ElementaryTypeName","src":"12882:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5007,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12877:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12877:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12890:3:20","memberName":"max","nodeType":"MemberAccess","src":"12877:16:20","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12869:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5019,"nodeType":"IfStatement","src":"12865:103:20","trueBody":{"id":5018,"nodeType":"Block","src":"12895:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12947:2:20","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"12951:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5013,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"12916:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12916:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5017,"nodeType":"RevertStatement","src":"12909:48:20"}]}},{"expression":{"arguments":[{"id":5022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"12991:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12984:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5020,"name":"uint72","nodeType":"ElementaryTypeName","src":"12984:6:20","typeDescriptions":{}}},"id":5023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12984:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5005,"id":5024,"nodeType":"Return","src":"12977:20:20"}]},"documentation":{"id":4999,"nodeType":"StructuredDocumentation","src":"12510:276:20","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5026,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12800:8:20","nodeType":"FunctionDefinition","parameters":{"id":5002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5001,"mutability":"mutable","name":"value","nameLocation":"12817:5:20","nodeType":"VariableDeclaration","scope":5026,"src":"12809:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5000,"name":"uint256","nodeType":"ElementaryTypeName","src":"12809:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12808:15:20"},"returnParameters":{"id":5005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5026,"src":"12847:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5003,"name":"uint72","nodeType":"ElementaryTypeName","src":"12847:6:20","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12846:8:20"},"scope":6110,"src":"12791:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5053,"nodeType":"Block","src":"13355:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5034,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"13369:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13382:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5036,"name":"uint64","nodeType":"ElementaryTypeName","src":"13382:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5035,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13377:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13377:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13390:3:20","memberName":"max","nodeType":"MemberAccess","src":"13377:16:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13369:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5047,"nodeType":"IfStatement","src":"13365:103:20","trueBody":{"id":5046,"nodeType":"Block","src":"13395:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13447:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"13451:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5041,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"13416:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5045,"nodeType":"RevertStatement","src":"13409:48:20"}]}},{"expression":{"arguments":[{"id":5050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"13491:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13484:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5048,"name":"uint64","nodeType":"ElementaryTypeName","src":"13484:6:20","typeDescriptions":{}}},"id":5051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13484:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5033,"id":5052,"nodeType":"Return","src":"13477:20:20"}]},"documentation":{"id":5027,"nodeType":"StructuredDocumentation","src":"13010:276:20","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5054,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13300:8:20","nodeType":"FunctionDefinition","parameters":{"id":5030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5029,"mutability":"mutable","name":"value","nameLocation":"13317:5:20","nodeType":"VariableDeclaration","scope":5054,"src":"13309:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5028,"name":"uint256","nodeType":"ElementaryTypeName","src":"13309:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13308:15:20"},"returnParameters":{"id":5033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5054,"src":"13347:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5031,"name":"uint64","nodeType":"ElementaryTypeName","src":"13347:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13346:8:20"},"scope":6110,"src":"13291:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5081,"nodeType":"Block","src":"13855:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5057,"src":"13869:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13882:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5064,"name":"uint56","nodeType":"ElementaryTypeName","src":"13882:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5063,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13877:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13877:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13890:3:20","memberName":"max","nodeType":"MemberAccess","src":"13877:16:20","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13869:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5075,"nodeType":"IfStatement","src":"13865:103:20","trueBody":{"id":5074,"nodeType":"Block","src":"13895:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13947:2:20","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5057,"src":"13951:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5069,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"13916:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13916:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5073,"nodeType":"RevertStatement","src":"13909:48:20"}]}},{"expression":{"arguments":[{"id":5078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5057,"src":"13991:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13984:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5076,"name":"uint56","nodeType":"ElementaryTypeName","src":"13984:6:20","typeDescriptions":{}}},"id":5079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13984:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5061,"id":5080,"nodeType":"Return","src":"13977:20:20"}]},"documentation":{"id":5055,"nodeType":"StructuredDocumentation","src":"13510:276:20","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5082,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13800:8:20","nodeType":"FunctionDefinition","parameters":{"id":5058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5057,"mutability":"mutable","name":"value","nameLocation":"13817:5:20","nodeType":"VariableDeclaration","scope":5082,"src":"13809:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5056,"name":"uint256","nodeType":"ElementaryTypeName","src":"13809:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13808:15:20"},"returnParameters":{"id":5061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5060,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5082,"src":"13847:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5059,"name":"uint56","nodeType":"ElementaryTypeName","src":"13847:6:20","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13846:8:20"},"scope":6110,"src":"13791:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5109,"nodeType":"Block","src":"14355:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5085,"src":"14369:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14382:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5092,"name":"uint48","nodeType":"ElementaryTypeName","src":"14382:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5091,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14377:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14377:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14390:3:20","memberName":"max","nodeType":"MemberAccess","src":"14377:16:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14369:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5103,"nodeType":"IfStatement","src":"14365:103:20","trueBody":{"id":5102,"nodeType":"Block","src":"14395:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14447:2:20","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5085,"src":"14451:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5097,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"14416:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14416:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5101,"nodeType":"RevertStatement","src":"14409:48:20"}]}},{"expression":{"arguments":[{"id":5106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5085,"src":"14491:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14484:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5104,"name":"uint48","nodeType":"ElementaryTypeName","src":"14484:6:20","typeDescriptions":{}}},"id":5107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14484:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5089,"id":5108,"nodeType":"Return","src":"14477:20:20"}]},"documentation":{"id":5083,"nodeType":"StructuredDocumentation","src":"14010:276:20","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5110,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14300:8:20","nodeType":"FunctionDefinition","parameters":{"id":5086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5085,"mutability":"mutable","name":"value","nameLocation":"14317:5:20","nodeType":"VariableDeclaration","scope":5110,"src":"14309:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5084,"name":"uint256","nodeType":"ElementaryTypeName","src":"14309:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14308:15:20"},"returnParameters":{"id":5089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5088,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5110,"src":"14347:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5087,"name":"uint48","nodeType":"ElementaryTypeName","src":"14347:6:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14346:8:20"},"scope":6110,"src":"14291:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5137,"nodeType":"Block","src":"14855:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"14869:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14882:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5120,"name":"uint40","nodeType":"ElementaryTypeName","src":"14882:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5119,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14877:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14877:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14890:3:20","memberName":"max","nodeType":"MemberAccess","src":"14877:16:20","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14869:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5131,"nodeType":"IfStatement","src":"14865:103:20","trueBody":{"id":5130,"nodeType":"Block","src":"14895:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14947:2:20","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"14951:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5125,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"14916:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14916:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5129,"nodeType":"RevertStatement","src":"14909:48:20"}]}},{"expression":{"arguments":[{"id":5134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"14991:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14984:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5132,"name":"uint40","nodeType":"ElementaryTypeName","src":"14984:6:20","typeDescriptions":{}}},"id":5135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14984:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5117,"id":5136,"nodeType":"Return","src":"14977:20:20"}]},"documentation":{"id":5111,"nodeType":"StructuredDocumentation","src":"14510:276:20","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5138,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14800:8:20","nodeType":"FunctionDefinition","parameters":{"id":5114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5113,"mutability":"mutable","name":"value","nameLocation":"14817:5:20","nodeType":"VariableDeclaration","scope":5138,"src":"14809:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5112,"name":"uint256","nodeType":"ElementaryTypeName","src":"14809:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14808:15:20"},"returnParameters":{"id":5117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5116,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5138,"src":"14847:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5115,"name":"uint40","nodeType":"ElementaryTypeName","src":"14847:6:20","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14846:8:20"},"scope":6110,"src":"14791:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5165,"nodeType":"Block","src":"15355:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5141,"src":"15369:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15382:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5148,"name":"uint32","nodeType":"ElementaryTypeName","src":"15382:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5147,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15377:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15377:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15390:3:20","memberName":"max","nodeType":"MemberAccess","src":"15377:16:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15369:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5159,"nodeType":"IfStatement","src":"15365:103:20","trueBody":{"id":5158,"nodeType":"Block","src":"15395:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15447:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5141,"src":"15451:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5153,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"15416:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15416:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5157,"nodeType":"RevertStatement","src":"15409:48:20"}]}},{"expression":{"arguments":[{"id":5162,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5141,"src":"15491:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15484:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5160,"name":"uint32","nodeType":"ElementaryTypeName","src":"15484:6:20","typeDescriptions":{}}},"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15484:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5145,"id":5164,"nodeType":"Return","src":"15477:20:20"}]},"documentation":{"id":5139,"nodeType":"StructuredDocumentation","src":"15010:276:20","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5166,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15300:8:20","nodeType":"FunctionDefinition","parameters":{"id":5142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5141,"mutability":"mutable","name":"value","nameLocation":"15317:5:20","nodeType":"VariableDeclaration","scope":5166,"src":"15309:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5140,"name":"uint256","nodeType":"ElementaryTypeName","src":"15309:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15308:15:20"},"returnParameters":{"id":5145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5144,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5166,"src":"15347:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5143,"name":"uint32","nodeType":"ElementaryTypeName","src":"15347:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15346:8:20"},"scope":6110,"src":"15291:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5193,"nodeType":"Block","src":"15855:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5174,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5169,"src":"15869:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15882:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5176,"name":"uint24","nodeType":"ElementaryTypeName","src":"15882:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5175,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15877:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15877:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15890:3:20","memberName":"max","nodeType":"MemberAccess","src":"15877:16:20","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15869:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5187,"nodeType":"IfStatement","src":"15865:103:20","trueBody":{"id":5186,"nodeType":"Block","src":"15895:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15947:2:20","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5169,"src":"15951:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5181,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"15916:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15916:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5185,"nodeType":"RevertStatement","src":"15909:48:20"}]}},{"expression":{"arguments":[{"id":5190,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5169,"src":"15991:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15984:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5188,"name":"uint24","nodeType":"ElementaryTypeName","src":"15984:6:20","typeDescriptions":{}}},"id":5191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15984:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5173,"id":5192,"nodeType":"Return","src":"15977:20:20"}]},"documentation":{"id":5167,"nodeType":"StructuredDocumentation","src":"15510:276:20","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5194,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15800:8:20","nodeType":"FunctionDefinition","parameters":{"id":5170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5169,"mutability":"mutable","name":"value","nameLocation":"15817:5:20","nodeType":"VariableDeclaration","scope":5194,"src":"15809:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5168,"name":"uint256","nodeType":"ElementaryTypeName","src":"15809:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15808:15:20"},"returnParameters":{"id":5173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5194,"src":"15847:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5171,"name":"uint24","nodeType":"ElementaryTypeName","src":"15847:6:20","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15846:8:20"},"scope":6110,"src":"15791:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5221,"nodeType":"Block","src":"16355:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5197,"src":"16369:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16382:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5204,"name":"uint16","nodeType":"ElementaryTypeName","src":"16382:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5203,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16377:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16377:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16390:3:20","memberName":"max","nodeType":"MemberAccess","src":"16377:16:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16369:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5215,"nodeType":"IfStatement","src":"16365:103:20","trueBody":{"id":5214,"nodeType":"Block","src":"16395:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16447:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5197,"src":"16451:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5209,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"16416:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16416:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5213,"nodeType":"RevertStatement","src":"16409:48:20"}]}},{"expression":{"arguments":[{"id":5218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5197,"src":"16491:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16484:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5216,"name":"uint16","nodeType":"ElementaryTypeName","src":"16484:6:20","typeDescriptions":{}}},"id":5219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16484:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5201,"id":5220,"nodeType":"Return","src":"16477:20:20"}]},"documentation":{"id":5195,"nodeType":"StructuredDocumentation","src":"16010:276:20","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5222,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16300:8:20","nodeType":"FunctionDefinition","parameters":{"id":5198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5197,"mutability":"mutable","name":"value","nameLocation":"16317:5:20","nodeType":"VariableDeclaration","scope":5222,"src":"16309:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5196,"name":"uint256","nodeType":"ElementaryTypeName","src":"16309:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16308:15:20"},"returnParameters":{"id":5201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5222,"src":"16347:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5199,"name":"uint16","nodeType":"ElementaryTypeName","src":"16347:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16346:8:20"},"scope":6110,"src":"16291:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5249,"nodeType":"Block","src":"16849:146:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"16863:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16876:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5232,"name":"uint8","nodeType":"ElementaryTypeName","src":"16876:5:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5231,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16871:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16871:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16883:3:20","memberName":"max","nodeType":"MemberAccess","src":"16871:15:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16863:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5243,"nodeType":"IfStatement","src":"16859:101:20","trueBody":{"id":5242,"nodeType":"Block","src":"16888:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16940:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"16943:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5237,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"16909:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16909:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5241,"nodeType":"RevertStatement","src":"16902:47:20"}]}},{"expression":{"arguments":[{"id":5246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"16982:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16976:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5244,"name":"uint8","nodeType":"ElementaryTypeName","src":"16976:5:20","typeDescriptions":{}}},"id":5247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16976:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5229,"id":5248,"nodeType":"Return","src":"16969:19:20"}]},"documentation":{"id":5223,"nodeType":"StructuredDocumentation","src":"16510:272:20","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5250,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16796:7:20","nodeType":"FunctionDefinition","parameters":{"id":5226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5225,"mutability":"mutable","name":"value","nameLocation":"16812:5:20","nodeType":"VariableDeclaration","scope":5250,"src":"16804:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5224,"name":"uint256","nodeType":"ElementaryTypeName","src":"16804:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16803:15:20"},"returnParameters":{"id":5229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5228,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5250,"src":"16842:5:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5227,"name":"uint8","nodeType":"ElementaryTypeName","src":"16842:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16841:7:20"},"scope":6110,"src":"16787:208:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5272,"nodeType":"Block","src":"17231:128:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"17245:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17253:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17245:9:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5266,"nodeType":"IfStatement","src":"17241:81:20","trueBody":{"id":5265,"nodeType":"Block","src":"17256:66:20","statements":[{"errorCall":{"arguments":[{"id":5262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"17305:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5261,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"17277:27:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":5263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17277:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5264,"nodeType":"RevertStatement","src":"17270:41:20"}]}},{"expression":{"arguments":[{"id":5269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"17346:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17338:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5267,"name":"uint256","nodeType":"ElementaryTypeName","src":"17338:7:20","typeDescriptions":{}}},"id":5270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17338:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5257,"id":5271,"nodeType":"Return","src":"17331:21:20"}]},"documentation":{"id":5251,"nodeType":"StructuredDocumentation","src":"17001:160:20","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":5273,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17175:9:20","nodeType":"FunctionDefinition","parameters":{"id":5254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5253,"mutability":"mutable","name":"value","nameLocation":"17192:5:20","nodeType":"VariableDeclaration","scope":5273,"src":"17185:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5252,"name":"int256","nodeType":"ElementaryTypeName","src":"17185:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17184:14:20"},"returnParameters":{"id":5257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5273,"src":"17222:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5255,"name":"uint256","nodeType":"ElementaryTypeName","src":"17222:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17221:9:20"},"scope":6110,"src":"17166:193:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5298,"nodeType":"Block","src":"17756:150:20","statements":[{"expression":{"id":5286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5281,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5279,"src":"17766:10:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5276,"src":"17786:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17779:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5282,"name":"int248","nodeType":"ElementaryTypeName","src":"17779:6:20","typeDescriptions":{}}},"id":5285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17779:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17766:26:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5287,"nodeType":"ExpressionStatement","src":"17766:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5288,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5279,"src":"17806:10:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5289,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5276,"src":"17820:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17806:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5297,"nodeType":"IfStatement","src":"17802:98:20","trueBody":{"id":5296,"nodeType":"Block","src":"17827:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17878:3:20","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5293,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5276,"src":"17883:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5291,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"17848:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17848:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5295,"nodeType":"RevertStatement","src":"17841:48:20"}]}}]},"documentation":{"id":5274,"nodeType":"StructuredDocumentation","src":"17365:312:20","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5299,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17691:8:20","nodeType":"FunctionDefinition","parameters":{"id":5277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5276,"mutability":"mutable","name":"value","nameLocation":"17707:5:20","nodeType":"VariableDeclaration","scope":5299,"src":"17700:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5275,"name":"int256","nodeType":"ElementaryTypeName","src":"17700:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17699:14:20"},"returnParameters":{"id":5280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5279,"mutability":"mutable","name":"downcasted","nameLocation":"17744:10:20","nodeType":"VariableDeclaration","scope":5299,"src":"17737:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5278,"name":"int248","nodeType":"ElementaryTypeName","src":"17737:6:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17736:19:20"},"scope":6110,"src":"17682:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5324,"nodeType":"Block","src":"18303:150:20","statements":[{"expression":{"id":5312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5307,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5305,"src":"18313:10:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5302,"src":"18333:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18326:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5308,"name":"int240","nodeType":"ElementaryTypeName","src":"18326:6:20","typeDescriptions":{}}},"id":5311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18326:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18313:26:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":5313,"nodeType":"ExpressionStatement","src":"18313:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5314,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5305,"src":"18353:10:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5315,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5302,"src":"18367:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18353:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5323,"nodeType":"IfStatement","src":"18349:98:20","trueBody":{"id":5322,"nodeType":"Block","src":"18374:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18425:3:20","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5302,"src":"18430:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5317,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"18395:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18395:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5321,"nodeType":"RevertStatement","src":"18388:48:20"}]}}]},"documentation":{"id":5300,"nodeType":"StructuredDocumentation","src":"17912:312:20","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5325,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18238:8:20","nodeType":"FunctionDefinition","parameters":{"id":5303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5302,"mutability":"mutable","name":"value","nameLocation":"18254:5:20","nodeType":"VariableDeclaration","scope":5325,"src":"18247:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5301,"name":"int256","nodeType":"ElementaryTypeName","src":"18247:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18246:14:20"},"returnParameters":{"id":5306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5305,"mutability":"mutable","name":"downcasted","nameLocation":"18291:10:20","nodeType":"VariableDeclaration","scope":5325,"src":"18284:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":5304,"name":"int240","nodeType":"ElementaryTypeName","src":"18284:6:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18283:19:20"},"scope":6110,"src":"18229:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5350,"nodeType":"Block","src":"18850:150:20","statements":[{"expression":{"id":5338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5333,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5331,"src":"18860:10:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5328,"src":"18880:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18873:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5334,"name":"int232","nodeType":"ElementaryTypeName","src":"18873:6:20","typeDescriptions":{}}},"id":5337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18873:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18860:26:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5339,"nodeType":"ExpressionStatement","src":"18860:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5340,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5331,"src":"18900:10:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5341,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5328,"src":"18914:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18900:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5349,"nodeType":"IfStatement","src":"18896:98:20","trueBody":{"id":5348,"nodeType":"Block","src":"18921:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18972:3:20","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5328,"src":"18977:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5343,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"18942:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18942:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5347,"nodeType":"RevertStatement","src":"18935:48:20"}]}}]},"documentation":{"id":5326,"nodeType":"StructuredDocumentation","src":"18459:312:20","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5351,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18785:8:20","nodeType":"FunctionDefinition","parameters":{"id":5329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5328,"mutability":"mutable","name":"value","nameLocation":"18801:5:20","nodeType":"VariableDeclaration","scope":5351,"src":"18794:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5327,"name":"int256","nodeType":"ElementaryTypeName","src":"18794:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18793:14:20"},"returnParameters":{"id":5332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5331,"mutability":"mutable","name":"downcasted","nameLocation":"18838:10:20","nodeType":"VariableDeclaration","scope":5351,"src":"18831:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":5330,"name":"int232","nodeType":"ElementaryTypeName","src":"18831:6:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18830:19:20"},"scope":6110,"src":"18776:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5376,"nodeType":"Block","src":"19397:150:20","statements":[{"expression":{"id":5364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5359,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5357,"src":"19407:10:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"19427:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19420:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5360,"name":"int224","nodeType":"ElementaryTypeName","src":"19420:6:20","typeDescriptions":{}}},"id":5363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19420:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19407:26:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":5365,"nodeType":"ExpressionStatement","src":"19407:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5366,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5357,"src":"19447:10:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"19461:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19447:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5375,"nodeType":"IfStatement","src":"19443:98:20","trueBody":{"id":5374,"nodeType":"Block","src":"19468:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19519:3:20","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"19524:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5369,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"19489:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19489:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5373,"nodeType":"RevertStatement","src":"19482:48:20"}]}}]},"documentation":{"id":5352,"nodeType":"StructuredDocumentation","src":"19006:312:20","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5377,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19332:8:20","nodeType":"FunctionDefinition","parameters":{"id":5355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5354,"mutability":"mutable","name":"value","nameLocation":"19348:5:20","nodeType":"VariableDeclaration","scope":5377,"src":"19341:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5353,"name":"int256","nodeType":"ElementaryTypeName","src":"19341:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19340:14:20"},"returnParameters":{"id":5358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5357,"mutability":"mutable","name":"downcasted","nameLocation":"19385:10:20","nodeType":"VariableDeclaration","scope":5377,"src":"19378:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5356,"name":"int224","nodeType":"ElementaryTypeName","src":"19378:6:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19377:19:20"},"scope":6110,"src":"19323:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5402,"nodeType":"Block","src":"19944:150:20","statements":[{"expression":{"id":5390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5385,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5383,"src":"19954:10:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"19974:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19967:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5386,"name":"int216","nodeType":"ElementaryTypeName","src":"19967:6:20","typeDescriptions":{}}},"id":5389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19967:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19954:26:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":5391,"nodeType":"ExpressionStatement","src":"19954:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5392,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5383,"src":"19994:10:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5393,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"20008:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19994:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5401,"nodeType":"IfStatement","src":"19990:98:20","trueBody":{"id":5400,"nodeType":"Block","src":"20015:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20066:3:20","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"20071:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5395,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"20036:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20036:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5399,"nodeType":"RevertStatement","src":"20029:48:20"}]}}]},"documentation":{"id":5378,"nodeType":"StructuredDocumentation","src":"19553:312:20","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5403,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19879:8:20","nodeType":"FunctionDefinition","parameters":{"id":5381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5380,"mutability":"mutable","name":"value","nameLocation":"19895:5:20","nodeType":"VariableDeclaration","scope":5403,"src":"19888:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5379,"name":"int256","nodeType":"ElementaryTypeName","src":"19888:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19887:14:20"},"returnParameters":{"id":5384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5383,"mutability":"mutable","name":"downcasted","nameLocation":"19932:10:20","nodeType":"VariableDeclaration","scope":5403,"src":"19925:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":5382,"name":"int216","nodeType":"ElementaryTypeName","src":"19925:6:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19924:19:20"},"scope":6110,"src":"19870:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5428,"nodeType":"Block","src":"20491:150:20","statements":[{"expression":{"id":5416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5411,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5409,"src":"20501:10:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5406,"src":"20521:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20514:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5412,"name":"int208","nodeType":"ElementaryTypeName","src":"20514:6:20","typeDescriptions":{}}},"id":5415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20514:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20501:26:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":5417,"nodeType":"ExpressionStatement","src":"20501:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5418,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5409,"src":"20541:10:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5406,"src":"20555:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20541:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5427,"nodeType":"IfStatement","src":"20537:98:20","trueBody":{"id":5426,"nodeType":"Block","src":"20562:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20613:3:20","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5406,"src":"20618:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5421,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"20583:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20583:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5425,"nodeType":"RevertStatement","src":"20576:48:20"}]}}]},"documentation":{"id":5404,"nodeType":"StructuredDocumentation","src":"20100:312:20","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5429,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20426:8:20","nodeType":"FunctionDefinition","parameters":{"id":5407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5406,"mutability":"mutable","name":"value","nameLocation":"20442:5:20","nodeType":"VariableDeclaration","scope":5429,"src":"20435:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5405,"name":"int256","nodeType":"ElementaryTypeName","src":"20435:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20434:14:20"},"returnParameters":{"id":5410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5409,"mutability":"mutable","name":"downcasted","nameLocation":"20479:10:20","nodeType":"VariableDeclaration","scope":5429,"src":"20472:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":5408,"name":"int208","nodeType":"ElementaryTypeName","src":"20472:6:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20471:19:20"},"scope":6110,"src":"20417:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5454,"nodeType":"Block","src":"21038:150:20","statements":[{"expression":{"id":5442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5437,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5435,"src":"21048:10:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5432,"src":"21068:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21061:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5438,"name":"int200","nodeType":"ElementaryTypeName","src":"21061:6:20","typeDescriptions":{}}},"id":5441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21061:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21048:26:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":5443,"nodeType":"ExpressionStatement","src":"21048:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5444,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5435,"src":"21088:10:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5432,"src":"21102:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21088:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5453,"nodeType":"IfStatement","src":"21084:98:20","trueBody":{"id":5452,"nodeType":"Block","src":"21109:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21160:3:20","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5449,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5432,"src":"21165:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5447,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"21130:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21130:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5451,"nodeType":"RevertStatement","src":"21123:48:20"}]}}]},"documentation":{"id":5430,"nodeType":"StructuredDocumentation","src":"20647:312:20","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5455,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20973:8:20","nodeType":"FunctionDefinition","parameters":{"id":5433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5432,"mutability":"mutable","name":"value","nameLocation":"20989:5:20","nodeType":"VariableDeclaration","scope":5455,"src":"20982:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5431,"name":"int256","nodeType":"ElementaryTypeName","src":"20982:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20981:14:20"},"returnParameters":{"id":5436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5435,"mutability":"mutable","name":"downcasted","nameLocation":"21026:10:20","nodeType":"VariableDeclaration","scope":5455,"src":"21019:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":5434,"name":"int200","nodeType":"ElementaryTypeName","src":"21019:6:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21018:19:20"},"scope":6110,"src":"20964:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5480,"nodeType":"Block","src":"21585:150:20","statements":[{"expression":{"id":5468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5463,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"21595:10:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"21615:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21608:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":5464,"name":"int192","nodeType":"ElementaryTypeName","src":"21608:6:20","typeDescriptions":{}}},"id":5467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21608:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21595:26:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":5469,"nodeType":"ExpressionStatement","src":"21595:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5470,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"21635:10:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5471,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"21649:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21635:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5479,"nodeType":"IfStatement","src":"21631:98:20","trueBody":{"id":5478,"nodeType":"Block","src":"21656:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21707:3:20","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"21712:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5473,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"21677:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21677:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5477,"nodeType":"RevertStatement","src":"21670:48:20"}]}}]},"documentation":{"id":5456,"nodeType":"StructuredDocumentation","src":"21194:312:20","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5481,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21520:8:20","nodeType":"FunctionDefinition","parameters":{"id":5459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5458,"mutability":"mutable","name":"value","nameLocation":"21536:5:20","nodeType":"VariableDeclaration","scope":5481,"src":"21529:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5457,"name":"int256","nodeType":"ElementaryTypeName","src":"21529:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21528:14:20"},"returnParameters":{"id":5462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5461,"mutability":"mutable","name":"downcasted","nameLocation":"21573:10:20","nodeType":"VariableDeclaration","scope":5481,"src":"21566:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":5460,"name":"int192","nodeType":"ElementaryTypeName","src":"21566:6:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21565:19:20"},"scope":6110,"src":"21511:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5506,"nodeType":"Block","src":"22132:150:20","statements":[{"expression":{"id":5494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5489,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5487,"src":"22142:10:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5484,"src":"22162:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22155:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":5490,"name":"int184","nodeType":"ElementaryTypeName","src":"22155:6:20","typeDescriptions":{}}},"id":5493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22155:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22142:26:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":5495,"nodeType":"ExpressionStatement","src":"22142:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5496,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5487,"src":"22182:10:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5484,"src":"22196:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22182:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5505,"nodeType":"IfStatement","src":"22178:98:20","trueBody":{"id":5504,"nodeType":"Block","src":"22203:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22254:3:20","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5484,"src":"22259:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5499,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"22224:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22224:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5503,"nodeType":"RevertStatement","src":"22217:48:20"}]}}]},"documentation":{"id":5482,"nodeType":"StructuredDocumentation","src":"21741:312:20","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5507,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22067:8:20","nodeType":"FunctionDefinition","parameters":{"id":5485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5484,"mutability":"mutable","name":"value","nameLocation":"22083:5:20","nodeType":"VariableDeclaration","scope":5507,"src":"22076:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5483,"name":"int256","nodeType":"ElementaryTypeName","src":"22076:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22075:14:20"},"returnParameters":{"id":5488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5487,"mutability":"mutable","name":"downcasted","nameLocation":"22120:10:20","nodeType":"VariableDeclaration","scope":5507,"src":"22113:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":5486,"name":"int184","nodeType":"ElementaryTypeName","src":"22113:6:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22112:19:20"},"scope":6110,"src":"22058:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5532,"nodeType":"Block","src":"22679:150:20","statements":[{"expression":{"id":5520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5515,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"22689:10:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5510,"src":"22709:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22702:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":5516,"name":"int176","nodeType":"ElementaryTypeName","src":"22702:6:20","typeDescriptions":{}}},"id":5519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22702:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22689:26:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":5521,"nodeType":"ExpressionStatement","src":"22689:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5522,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"22729:10:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5523,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5510,"src":"22743:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22729:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5531,"nodeType":"IfStatement","src":"22725:98:20","trueBody":{"id":5530,"nodeType":"Block","src":"22750:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22801:3:20","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5510,"src":"22806:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5525,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"22771:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22771:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5529,"nodeType":"RevertStatement","src":"22764:48:20"}]}}]},"documentation":{"id":5508,"nodeType":"StructuredDocumentation","src":"22288:312:20","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5533,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22614:8:20","nodeType":"FunctionDefinition","parameters":{"id":5511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5510,"mutability":"mutable","name":"value","nameLocation":"22630:5:20","nodeType":"VariableDeclaration","scope":5533,"src":"22623:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5509,"name":"int256","nodeType":"ElementaryTypeName","src":"22623:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22622:14:20"},"returnParameters":{"id":5514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5513,"mutability":"mutable","name":"downcasted","nameLocation":"22667:10:20","nodeType":"VariableDeclaration","scope":5533,"src":"22660:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":5512,"name":"int176","nodeType":"ElementaryTypeName","src":"22660:6:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22659:19:20"},"scope":6110,"src":"22605:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5558,"nodeType":"Block","src":"23226:150:20","statements":[{"expression":{"id":5546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5541,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5539,"src":"23236:10:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5536,"src":"23256:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23249:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":5542,"name":"int168","nodeType":"ElementaryTypeName","src":"23249:6:20","typeDescriptions":{}}},"id":5545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23249:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23236:26:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":5547,"nodeType":"ExpressionStatement","src":"23236:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5548,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5539,"src":"23276:10:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5536,"src":"23290:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23276:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5557,"nodeType":"IfStatement","src":"23272:98:20","trueBody":{"id":5556,"nodeType":"Block","src":"23297:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23348:3:20","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5536,"src":"23353:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5551,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"23318:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23318:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5555,"nodeType":"RevertStatement","src":"23311:48:20"}]}}]},"documentation":{"id":5534,"nodeType":"StructuredDocumentation","src":"22835:312:20","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5559,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23161:8:20","nodeType":"FunctionDefinition","parameters":{"id":5537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5536,"mutability":"mutable","name":"value","nameLocation":"23177:5:20","nodeType":"VariableDeclaration","scope":5559,"src":"23170:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5535,"name":"int256","nodeType":"ElementaryTypeName","src":"23170:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23169:14:20"},"returnParameters":{"id":5540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5539,"mutability":"mutable","name":"downcasted","nameLocation":"23214:10:20","nodeType":"VariableDeclaration","scope":5559,"src":"23207:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":5538,"name":"int168","nodeType":"ElementaryTypeName","src":"23207:6:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23206:19:20"},"scope":6110,"src":"23152:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5584,"nodeType":"Block","src":"23773:150:20","statements":[{"expression":{"id":5572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5567,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5565,"src":"23783:10:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5562,"src":"23803:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23796:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":5568,"name":"int160","nodeType":"ElementaryTypeName","src":"23796:6:20","typeDescriptions":{}}},"id":5571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23796:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23783:26:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":5573,"nodeType":"ExpressionStatement","src":"23783:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5574,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5565,"src":"23823:10:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5562,"src":"23837:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23823:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5583,"nodeType":"IfStatement","src":"23819:98:20","trueBody":{"id":5582,"nodeType":"Block","src":"23844:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23895:3:20","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5562,"src":"23900:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5577,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"23865:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23865:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5581,"nodeType":"RevertStatement","src":"23858:48:20"}]}}]},"documentation":{"id":5560,"nodeType":"StructuredDocumentation","src":"23382:312:20","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5585,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23708:8:20","nodeType":"FunctionDefinition","parameters":{"id":5563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5562,"mutability":"mutable","name":"value","nameLocation":"23724:5:20","nodeType":"VariableDeclaration","scope":5585,"src":"23717:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5561,"name":"int256","nodeType":"ElementaryTypeName","src":"23717:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23716:14:20"},"returnParameters":{"id":5566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5565,"mutability":"mutable","name":"downcasted","nameLocation":"23761:10:20","nodeType":"VariableDeclaration","scope":5585,"src":"23754:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":5564,"name":"int160","nodeType":"ElementaryTypeName","src":"23754:6:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23753:19:20"},"scope":6110,"src":"23699:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5610,"nodeType":"Block","src":"24320:150:20","statements":[{"expression":{"id":5598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5593,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5591,"src":"24330:10:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5588,"src":"24350:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24343:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":5594,"name":"int152","nodeType":"ElementaryTypeName","src":"24343:6:20","typeDescriptions":{}}},"id":5597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24343:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24330:26:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":5599,"nodeType":"ExpressionStatement","src":"24330:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5600,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5591,"src":"24370:10:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5601,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5588,"src":"24384:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24370:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5609,"nodeType":"IfStatement","src":"24366:98:20","trueBody":{"id":5608,"nodeType":"Block","src":"24391:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24442:3:20","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5605,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5588,"src":"24447:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5603,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"24412:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24412:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5607,"nodeType":"RevertStatement","src":"24405:48:20"}]}}]},"documentation":{"id":5586,"nodeType":"StructuredDocumentation","src":"23929:312:20","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5611,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24255:8:20","nodeType":"FunctionDefinition","parameters":{"id":5589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5588,"mutability":"mutable","name":"value","nameLocation":"24271:5:20","nodeType":"VariableDeclaration","scope":5611,"src":"24264:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5587,"name":"int256","nodeType":"ElementaryTypeName","src":"24264:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24263:14:20"},"returnParameters":{"id":5592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5591,"mutability":"mutable","name":"downcasted","nameLocation":"24308:10:20","nodeType":"VariableDeclaration","scope":5611,"src":"24301:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":5590,"name":"int152","nodeType":"ElementaryTypeName","src":"24301:6:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24300:19:20"},"scope":6110,"src":"24246:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5636,"nodeType":"Block","src":"24867:150:20","statements":[{"expression":{"id":5624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5619,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5617,"src":"24877:10:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"24897:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24890:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":5620,"name":"int144","nodeType":"ElementaryTypeName","src":"24890:6:20","typeDescriptions":{}}},"id":5623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24890:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24877:26:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":5625,"nodeType":"ExpressionStatement","src":"24877:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5626,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5617,"src":"24917:10:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"24931:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24917:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5635,"nodeType":"IfStatement","src":"24913:98:20","trueBody":{"id":5634,"nodeType":"Block","src":"24938:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24989:3:20","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"24994:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5629,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"24959:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24959:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5633,"nodeType":"RevertStatement","src":"24952:48:20"}]}}]},"documentation":{"id":5612,"nodeType":"StructuredDocumentation","src":"24476:312:20","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5637,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24802:8:20","nodeType":"FunctionDefinition","parameters":{"id":5615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5614,"mutability":"mutable","name":"value","nameLocation":"24818:5:20","nodeType":"VariableDeclaration","scope":5637,"src":"24811:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5613,"name":"int256","nodeType":"ElementaryTypeName","src":"24811:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24810:14:20"},"returnParameters":{"id":5618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5617,"mutability":"mutable","name":"downcasted","nameLocation":"24855:10:20","nodeType":"VariableDeclaration","scope":5637,"src":"24848:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":5616,"name":"int144","nodeType":"ElementaryTypeName","src":"24848:6:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24847:19:20"},"scope":6110,"src":"24793:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5662,"nodeType":"Block","src":"25414:150:20","statements":[{"expression":{"id":5650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5645,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5643,"src":"25424:10:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5640,"src":"25444:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25437:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":5646,"name":"int136","nodeType":"ElementaryTypeName","src":"25437:6:20","typeDescriptions":{}}},"id":5649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25437:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25424:26:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":5651,"nodeType":"ExpressionStatement","src":"25424:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5652,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5643,"src":"25464:10:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5653,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5640,"src":"25478:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25464:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5661,"nodeType":"IfStatement","src":"25460:98:20","trueBody":{"id":5660,"nodeType":"Block","src":"25485:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25536:3:20","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5657,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5640,"src":"25541:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5655,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"25506:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25506:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5659,"nodeType":"RevertStatement","src":"25499:48:20"}]}}]},"documentation":{"id":5638,"nodeType":"StructuredDocumentation","src":"25023:312:20","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5663,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25349:8:20","nodeType":"FunctionDefinition","parameters":{"id":5641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5640,"mutability":"mutable","name":"value","nameLocation":"25365:5:20","nodeType":"VariableDeclaration","scope":5663,"src":"25358:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5639,"name":"int256","nodeType":"ElementaryTypeName","src":"25358:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25357:14:20"},"returnParameters":{"id":5644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5643,"mutability":"mutable","name":"downcasted","nameLocation":"25402:10:20","nodeType":"VariableDeclaration","scope":5663,"src":"25395:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":5642,"name":"int136","nodeType":"ElementaryTypeName","src":"25395:6:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25394:19:20"},"scope":6110,"src":"25340:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5688,"nodeType":"Block","src":"25961:150:20","statements":[{"expression":{"id":5676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5671,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5669,"src":"25971:10:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5666,"src":"25991:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25984:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":5672,"name":"int128","nodeType":"ElementaryTypeName","src":"25984:6:20","typeDescriptions":{}}},"id":5675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25984:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25971:26:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":5677,"nodeType":"ExpressionStatement","src":"25971:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5678,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5669,"src":"26011:10:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5666,"src":"26025:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26011:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5687,"nodeType":"IfStatement","src":"26007:98:20","trueBody":{"id":5686,"nodeType":"Block","src":"26032:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26083:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5666,"src":"26088:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5681,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"26053:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26053:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5685,"nodeType":"RevertStatement","src":"26046:48:20"}]}}]},"documentation":{"id":5664,"nodeType":"StructuredDocumentation","src":"25570:312:20","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5689,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25896:8:20","nodeType":"FunctionDefinition","parameters":{"id":5667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5666,"mutability":"mutable","name":"value","nameLocation":"25912:5:20","nodeType":"VariableDeclaration","scope":5689,"src":"25905:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5665,"name":"int256","nodeType":"ElementaryTypeName","src":"25905:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25904:14:20"},"returnParameters":{"id":5670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5669,"mutability":"mutable","name":"downcasted","nameLocation":"25949:10:20","nodeType":"VariableDeclaration","scope":5689,"src":"25942:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":5668,"name":"int128","nodeType":"ElementaryTypeName","src":"25942:6:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25941:19:20"},"scope":6110,"src":"25887:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5714,"nodeType":"Block","src":"26508:150:20","statements":[{"expression":{"id":5702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5697,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5695,"src":"26518:10:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"26538:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26531:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":5698,"name":"int120","nodeType":"ElementaryTypeName","src":"26531:6:20","typeDescriptions":{}}},"id":5701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26531:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26518:26:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":5703,"nodeType":"ExpressionStatement","src":"26518:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5704,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5695,"src":"26558:10:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"26572:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26558:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5713,"nodeType":"IfStatement","src":"26554:98:20","trueBody":{"id":5712,"nodeType":"Block","src":"26579:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26630:3:20","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5709,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"26635:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5707,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"26600:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26600:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5711,"nodeType":"RevertStatement","src":"26593:48:20"}]}}]},"documentation":{"id":5690,"nodeType":"StructuredDocumentation","src":"26117:312:20","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5715,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26443:8:20","nodeType":"FunctionDefinition","parameters":{"id":5693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5692,"mutability":"mutable","name":"value","nameLocation":"26459:5:20","nodeType":"VariableDeclaration","scope":5715,"src":"26452:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5691,"name":"int256","nodeType":"ElementaryTypeName","src":"26452:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26451:14:20"},"returnParameters":{"id":5696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5695,"mutability":"mutable","name":"downcasted","nameLocation":"26496:10:20","nodeType":"VariableDeclaration","scope":5715,"src":"26489:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":5694,"name":"int120","nodeType":"ElementaryTypeName","src":"26489:6:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26488:19:20"},"scope":6110,"src":"26434:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5740,"nodeType":"Block","src":"27055:150:20","statements":[{"expression":{"id":5728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5723,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5721,"src":"27065:10:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5718,"src":"27085:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27078:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":5724,"name":"int112","nodeType":"ElementaryTypeName","src":"27078:6:20","typeDescriptions":{}}},"id":5727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27078:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27065:26:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":5729,"nodeType":"ExpressionStatement","src":"27065:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5730,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5721,"src":"27105:10:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5718,"src":"27119:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27105:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5739,"nodeType":"IfStatement","src":"27101:98:20","trueBody":{"id":5738,"nodeType":"Block","src":"27126:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27177:3:20","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5718,"src":"27182:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5733,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"27147:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27147:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5737,"nodeType":"RevertStatement","src":"27140:48:20"}]}}]},"documentation":{"id":5716,"nodeType":"StructuredDocumentation","src":"26664:312:20","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5741,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26990:8:20","nodeType":"FunctionDefinition","parameters":{"id":5719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5718,"mutability":"mutable","name":"value","nameLocation":"27006:5:20","nodeType":"VariableDeclaration","scope":5741,"src":"26999:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5717,"name":"int256","nodeType":"ElementaryTypeName","src":"26999:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26998:14:20"},"returnParameters":{"id":5722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5721,"mutability":"mutable","name":"downcasted","nameLocation":"27043:10:20","nodeType":"VariableDeclaration","scope":5741,"src":"27036:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":5720,"name":"int112","nodeType":"ElementaryTypeName","src":"27036:6:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27035:19:20"},"scope":6110,"src":"26981:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5766,"nodeType":"Block","src":"27602:150:20","statements":[{"expression":{"id":5754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5749,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"27612:10:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5752,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5744,"src":"27632:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27625:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":5750,"name":"int104","nodeType":"ElementaryTypeName","src":"27625:6:20","typeDescriptions":{}}},"id":5753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27625:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27612:26:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":5755,"nodeType":"ExpressionStatement","src":"27612:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5756,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"27652:10:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5744,"src":"27666:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27652:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5765,"nodeType":"IfStatement","src":"27648:98:20","trueBody":{"id":5764,"nodeType":"Block","src":"27673:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27724:3:20","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5761,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5744,"src":"27729:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5759,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"27694:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27694:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5763,"nodeType":"RevertStatement","src":"27687:48:20"}]}}]},"documentation":{"id":5742,"nodeType":"StructuredDocumentation","src":"27211:312:20","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5767,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27537:8:20","nodeType":"FunctionDefinition","parameters":{"id":5745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5744,"mutability":"mutable","name":"value","nameLocation":"27553:5:20","nodeType":"VariableDeclaration","scope":5767,"src":"27546:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5743,"name":"int256","nodeType":"ElementaryTypeName","src":"27546:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27545:14:20"},"returnParameters":{"id":5748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5747,"mutability":"mutable","name":"downcasted","nameLocation":"27590:10:20","nodeType":"VariableDeclaration","scope":5767,"src":"27583:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":5746,"name":"int104","nodeType":"ElementaryTypeName","src":"27583:6:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27582:19:20"},"scope":6110,"src":"27528:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5792,"nodeType":"Block","src":"28142:148:20","statements":[{"expression":{"id":5780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5775,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5773,"src":"28152:10:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5770,"src":"28171:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28165:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":5776,"name":"int96","nodeType":"ElementaryTypeName","src":"28165:5:20","typeDescriptions":{}}},"id":5779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28165:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28152:25:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":5781,"nodeType":"ExpressionStatement","src":"28152:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5782,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5773,"src":"28191:10:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5770,"src":"28205:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28191:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5791,"nodeType":"IfStatement","src":"28187:97:20","trueBody":{"id":5790,"nodeType":"Block","src":"28212:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28263:2:20","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5770,"src":"28267:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5785,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"28233:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28233:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5789,"nodeType":"RevertStatement","src":"28226:47:20"}]}}]},"documentation":{"id":5768,"nodeType":"StructuredDocumentation","src":"27758:307:20","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5793,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28079:7:20","nodeType":"FunctionDefinition","parameters":{"id":5771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5770,"mutability":"mutable","name":"value","nameLocation":"28094:5:20","nodeType":"VariableDeclaration","scope":5793,"src":"28087:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5769,"name":"int256","nodeType":"ElementaryTypeName","src":"28087:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28086:14:20"},"returnParameters":{"id":5774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5773,"mutability":"mutable","name":"downcasted","nameLocation":"28130:10:20","nodeType":"VariableDeclaration","scope":5793,"src":"28124:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":5772,"name":"int96","nodeType":"ElementaryTypeName","src":"28124:5:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28123:18:20"},"scope":6110,"src":"28070:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5818,"nodeType":"Block","src":"28680:148:20","statements":[{"expression":{"id":5806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5801,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5799,"src":"28690:10:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5796,"src":"28709:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28703:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":5802,"name":"int88","nodeType":"ElementaryTypeName","src":"28703:5:20","typeDescriptions":{}}},"id":5805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28703:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28690:25:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":5807,"nodeType":"ExpressionStatement","src":"28690:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5808,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5799,"src":"28729:10:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5796,"src":"28743:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28729:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5817,"nodeType":"IfStatement","src":"28725:97:20","trueBody":{"id":5816,"nodeType":"Block","src":"28750:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28801:2:20","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5796,"src":"28805:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5811,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"28771:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28771:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5815,"nodeType":"RevertStatement","src":"28764:47:20"}]}}]},"documentation":{"id":5794,"nodeType":"StructuredDocumentation","src":"28296:307:20","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5819,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28617:7:20","nodeType":"FunctionDefinition","parameters":{"id":5797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5796,"mutability":"mutable","name":"value","nameLocation":"28632:5:20","nodeType":"VariableDeclaration","scope":5819,"src":"28625:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5795,"name":"int256","nodeType":"ElementaryTypeName","src":"28625:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28624:14:20"},"returnParameters":{"id":5800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5799,"mutability":"mutable","name":"downcasted","nameLocation":"28668:10:20","nodeType":"VariableDeclaration","scope":5819,"src":"28662:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":5798,"name":"int88","nodeType":"ElementaryTypeName","src":"28662:5:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28661:18:20"},"scope":6110,"src":"28608:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5844,"nodeType":"Block","src":"29218:148:20","statements":[{"expression":{"id":5832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5827,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5825,"src":"29228:10:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"29247:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29241:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":5828,"name":"int80","nodeType":"ElementaryTypeName","src":"29241:5:20","typeDescriptions":{}}},"id":5831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29241:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29228:25:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":5833,"nodeType":"ExpressionStatement","src":"29228:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5834,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5825,"src":"29267:10:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5835,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"29281:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29267:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5843,"nodeType":"IfStatement","src":"29263:97:20","trueBody":{"id":5842,"nodeType":"Block","src":"29288:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29339:2:20","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"29343:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5837,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"29309:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29309:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5841,"nodeType":"RevertStatement","src":"29302:47:20"}]}}]},"documentation":{"id":5820,"nodeType":"StructuredDocumentation","src":"28834:307:20","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5845,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29155:7:20","nodeType":"FunctionDefinition","parameters":{"id":5823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5822,"mutability":"mutable","name":"value","nameLocation":"29170:5:20","nodeType":"VariableDeclaration","scope":5845,"src":"29163:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5821,"name":"int256","nodeType":"ElementaryTypeName","src":"29163:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29162:14:20"},"returnParameters":{"id":5826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5825,"mutability":"mutable","name":"downcasted","nameLocation":"29206:10:20","nodeType":"VariableDeclaration","scope":5845,"src":"29200:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":5824,"name":"int80","nodeType":"ElementaryTypeName","src":"29200:5:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29199:18:20"},"scope":6110,"src":"29146:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5870,"nodeType":"Block","src":"29756:148:20","statements":[{"expression":{"id":5858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5853,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5851,"src":"29766:10:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5856,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5848,"src":"29785:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29779:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":5854,"name":"int72","nodeType":"ElementaryTypeName","src":"29779:5:20","typeDescriptions":{}}},"id":5857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29779:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29766:25:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":5859,"nodeType":"ExpressionStatement","src":"29766:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5860,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5851,"src":"29805:10:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5848,"src":"29819:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29805:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5869,"nodeType":"IfStatement","src":"29801:97:20","trueBody":{"id":5868,"nodeType":"Block","src":"29826:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29877:2:20","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5848,"src":"29881:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5863,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"29847:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29847:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5867,"nodeType":"RevertStatement","src":"29840:47:20"}]}}]},"documentation":{"id":5846,"nodeType":"StructuredDocumentation","src":"29372:307:20","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5871,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29693:7:20","nodeType":"FunctionDefinition","parameters":{"id":5849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5848,"mutability":"mutable","name":"value","nameLocation":"29708:5:20","nodeType":"VariableDeclaration","scope":5871,"src":"29701:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5847,"name":"int256","nodeType":"ElementaryTypeName","src":"29701:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29700:14:20"},"returnParameters":{"id":5852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5851,"mutability":"mutable","name":"downcasted","nameLocation":"29744:10:20","nodeType":"VariableDeclaration","scope":5871,"src":"29738:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":5850,"name":"int72","nodeType":"ElementaryTypeName","src":"29738:5:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29737:18:20"},"scope":6110,"src":"29684:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5896,"nodeType":"Block","src":"30294:148:20","statements":[{"expression":{"id":5884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5879,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5877,"src":"30304:10:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"30323:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30317:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":5880,"name":"int64","nodeType":"ElementaryTypeName","src":"30317:5:20","typeDescriptions":{}}},"id":5883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30317:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30304:25:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":5885,"nodeType":"ExpressionStatement","src":"30304:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5886,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5877,"src":"30343:10:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"30357:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30343:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5895,"nodeType":"IfStatement","src":"30339:97:20","trueBody":{"id":5894,"nodeType":"Block","src":"30364:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30415:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"30419:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5889,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"30385:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30385:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5893,"nodeType":"RevertStatement","src":"30378:47:20"}]}}]},"documentation":{"id":5872,"nodeType":"StructuredDocumentation","src":"29910:307:20","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5897,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30231:7:20","nodeType":"FunctionDefinition","parameters":{"id":5875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5874,"mutability":"mutable","name":"value","nameLocation":"30246:5:20","nodeType":"VariableDeclaration","scope":5897,"src":"30239:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5873,"name":"int256","nodeType":"ElementaryTypeName","src":"30239:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30238:14:20"},"returnParameters":{"id":5878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5877,"mutability":"mutable","name":"downcasted","nameLocation":"30282:10:20","nodeType":"VariableDeclaration","scope":5897,"src":"30276:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5876,"name":"int64","nodeType":"ElementaryTypeName","src":"30276:5:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30275:18:20"},"scope":6110,"src":"30222:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5922,"nodeType":"Block","src":"30832:148:20","statements":[{"expression":{"id":5910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5905,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5903,"src":"30842:10:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5900,"src":"30861:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30855:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":5906,"name":"int56","nodeType":"ElementaryTypeName","src":"30855:5:20","typeDescriptions":{}}},"id":5909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30855:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30842:25:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":5911,"nodeType":"ExpressionStatement","src":"30842:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5912,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5903,"src":"30881:10:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5913,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5900,"src":"30895:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30881:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5921,"nodeType":"IfStatement","src":"30877:97:20","trueBody":{"id":5920,"nodeType":"Block","src":"30902:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30953:2:20","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5900,"src":"30957:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5915,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"30923:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30923:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5919,"nodeType":"RevertStatement","src":"30916:47:20"}]}}]},"documentation":{"id":5898,"nodeType":"StructuredDocumentation","src":"30448:307:20","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5923,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30769:7:20","nodeType":"FunctionDefinition","parameters":{"id":5901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5900,"mutability":"mutable","name":"value","nameLocation":"30784:5:20","nodeType":"VariableDeclaration","scope":5923,"src":"30777:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5899,"name":"int256","nodeType":"ElementaryTypeName","src":"30777:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30776:14:20"},"returnParameters":{"id":5904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5903,"mutability":"mutable","name":"downcasted","nameLocation":"30820:10:20","nodeType":"VariableDeclaration","scope":5923,"src":"30814:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":5902,"name":"int56","nodeType":"ElementaryTypeName","src":"30814:5:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30813:18:20"},"scope":6110,"src":"30760:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5948,"nodeType":"Block","src":"31370:148:20","statements":[{"expression":{"id":5936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5931,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5929,"src":"31380:10:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"31399:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31393:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":5932,"name":"int48","nodeType":"ElementaryTypeName","src":"31393:5:20","typeDescriptions":{}}},"id":5935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31393:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31380:25:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":5937,"nodeType":"ExpressionStatement","src":"31380:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5938,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5929,"src":"31419:10:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"31433:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31419:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5947,"nodeType":"IfStatement","src":"31415:97:20","trueBody":{"id":5946,"nodeType":"Block","src":"31440:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31491:2:20","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"31495:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5941,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"31461:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31461:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5945,"nodeType":"RevertStatement","src":"31454:47:20"}]}}]},"documentation":{"id":5924,"nodeType":"StructuredDocumentation","src":"30986:307:20","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5949,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31307:7:20","nodeType":"FunctionDefinition","parameters":{"id":5927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5926,"mutability":"mutable","name":"value","nameLocation":"31322:5:20","nodeType":"VariableDeclaration","scope":5949,"src":"31315:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5925,"name":"int256","nodeType":"ElementaryTypeName","src":"31315:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31314:14:20"},"returnParameters":{"id":5930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5929,"mutability":"mutable","name":"downcasted","nameLocation":"31358:10:20","nodeType":"VariableDeclaration","scope":5949,"src":"31352:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":5928,"name":"int48","nodeType":"ElementaryTypeName","src":"31352:5:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31351:18:20"},"scope":6110,"src":"31298:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5974,"nodeType":"Block","src":"31908:148:20","statements":[{"expression":{"id":5962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5957,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5955,"src":"31918:10:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5960,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5952,"src":"31937:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31931:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":5958,"name":"int40","nodeType":"ElementaryTypeName","src":"31931:5:20","typeDescriptions":{}}},"id":5961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31931:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31918:25:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":5963,"nodeType":"ExpressionStatement","src":"31918:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5964,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5955,"src":"31957:10:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5965,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5952,"src":"31971:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31957:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5973,"nodeType":"IfStatement","src":"31953:97:20","trueBody":{"id":5972,"nodeType":"Block","src":"31978:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32029:2:20","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5969,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5952,"src":"32033:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5967,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"31999:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31999:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5971,"nodeType":"RevertStatement","src":"31992:47:20"}]}}]},"documentation":{"id":5950,"nodeType":"StructuredDocumentation","src":"31524:307:20","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5975,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31845:7:20","nodeType":"FunctionDefinition","parameters":{"id":5953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5952,"mutability":"mutable","name":"value","nameLocation":"31860:5:20","nodeType":"VariableDeclaration","scope":5975,"src":"31853:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5951,"name":"int256","nodeType":"ElementaryTypeName","src":"31853:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31852:14:20"},"returnParameters":{"id":5956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5955,"mutability":"mutable","name":"downcasted","nameLocation":"31896:10:20","nodeType":"VariableDeclaration","scope":5975,"src":"31890:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":5954,"name":"int40","nodeType":"ElementaryTypeName","src":"31890:5:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31889:18:20"},"scope":6110,"src":"31836:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6000,"nodeType":"Block","src":"32446:148:20","statements":[{"expression":{"id":5988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5983,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5981,"src":"32456:10:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5986,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"32475:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32469:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":5984,"name":"int32","nodeType":"ElementaryTypeName","src":"32469:5:20","typeDescriptions":{}}},"id":5987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32469:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32456:25:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":5989,"nodeType":"ExpressionStatement","src":"32456:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5990,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5981,"src":"32495:10:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"32509:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32495:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5999,"nodeType":"IfStatement","src":"32491:97:20","trueBody":{"id":5998,"nodeType":"Block","src":"32516:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32567:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"32571:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5993,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"32537:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32537:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5997,"nodeType":"RevertStatement","src":"32530:47:20"}]}}]},"documentation":{"id":5976,"nodeType":"StructuredDocumentation","src":"32062:307:20","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6001,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32383:7:20","nodeType":"FunctionDefinition","parameters":{"id":5979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5978,"mutability":"mutable","name":"value","nameLocation":"32398:5:20","nodeType":"VariableDeclaration","scope":6001,"src":"32391:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5977,"name":"int256","nodeType":"ElementaryTypeName","src":"32391:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32390:14:20"},"returnParameters":{"id":5982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5981,"mutability":"mutable","name":"downcasted","nameLocation":"32434:10:20","nodeType":"VariableDeclaration","scope":6001,"src":"32428:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":5980,"name":"int32","nodeType":"ElementaryTypeName","src":"32428:5:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32427:18:20"},"scope":6110,"src":"32374:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6026,"nodeType":"Block","src":"32984:148:20","statements":[{"expression":{"id":6014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6009,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"32994:10:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"33013:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33007:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6010,"name":"int24","nodeType":"ElementaryTypeName","src":"33007:5:20","typeDescriptions":{}}},"id":6013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33007:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32994:25:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6015,"nodeType":"ExpressionStatement","src":"32994:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6016,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"33033:10:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"33047:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33033:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6025,"nodeType":"IfStatement","src":"33029:97:20","trueBody":{"id":6024,"nodeType":"Block","src":"33054:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33105:2:20","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"33109:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6019,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"33075:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33075:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6023,"nodeType":"RevertStatement","src":"33068:47:20"}]}}]},"documentation":{"id":6002,"nodeType":"StructuredDocumentation","src":"32600:307:20","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6027,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32921:7:20","nodeType":"FunctionDefinition","parameters":{"id":6005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6004,"mutability":"mutable","name":"value","nameLocation":"32936:5:20","nodeType":"VariableDeclaration","scope":6027,"src":"32929:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6003,"name":"int256","nodeType":"ElementaryTypeName","src":"32929:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32928:14:20"},"returnParameters":{"id":6008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6007,"mutability":"mutable","name":"downcasted","nameLocation":"32972:10:20","nodeType":"VariableDeclaration","scope":6027,"src":"32966:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6006,"name":"int24","nodeType":"ElementaryTypeName","src":"32966:5:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32965:18:20"},"scope":6110,"src":"32912:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6052,"nodeType":"Block","src":"33522:148:20","statements":[{"expression":{"id":6040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6035,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6033,"src":"33532:10:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6030,"src":"33551:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33545:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6036,"name":"int16","nodeType":"ElementaryTypeName","src":"33545:5:20","typeDescriptions":{}}},"id":6039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33545:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33532:25:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6041,"nodeType":"ExpressionStatement","src":"33532:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6042,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6033,"src":"33571:10:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6030,"src":"33585:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33571:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6051,"nodeType":"IfStatement","src":"33567:97:20","trueBody":{"id":6050,"nodeType":"Block","src":"33592:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33643:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6030,"src":"33647:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6045,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"33613:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33613:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6049,"nodeType":"RevertStatement","src":"33606:47:20"}]}}]},"documentation":{"id":6028,"nodeType":"StructuredDocumentation","src":"33138:307:20","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6053,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33459:7:20","nodeType":"FunctionDefinition","parameters":{"id":6031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6030,"mutability":"mutable","name":"value","nameLocation":"33474:5:20","nodeType":"VariableDeclaration","scope":6053,"src":"33467:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6029,"name":"int256","nodeType":"ElementaryTypeName","src":"33467:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33466:14:20"},"returnParameters":{"id":6034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6033,"mutability":"mutable","name":"downcasted","nameLocation":"33510:10:20","nodeType":"VariableDeclaration","scope":6053,"src":"33504:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6032,"name":"int16","nodeType":"ElementaryTypeName","src":"33504:5:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33503:18:20"},"scope":6110,"src":"33450:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6078,"nodeType":"Block","src":"34053:146:20","statements":[{"expression":{"id":6066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6061,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6059,"src":"34063:10:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6056,"src":"34081:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34076:4:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6062,"name":"int8","nodeType":"ElementaryTypeName","src":"34076:4:20","typeDescriptions":{}}},"id":6065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34076:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34063:24:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6067,"nodeType":"ExpressionStatement","src":"34063:24:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6068,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6059,"src":"34101:10:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6056,"src":"34115:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34101:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6077,"nodeType":"IfStatement","src":"34097:96:20","trueBody":{"id":6076,"nodeType":"Block","src":"34122:71:20","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34173:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6056,"src":"34176:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6071,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"34143:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34143:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6075,"nodeType":"RevertStatement","src":"34136:46:20"}]}}]},"documentation":{"id":6054,"nodeType":"StructuredDocumentation","src":"33676:302:20","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6079,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33992:6:20","nodeType":"FunctionDefinition","parameters":{"id":6057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6056,"mutability":"mutable","name":"value","nameLocation":"34006:5:20","nodeType":"VariableDeclaration","scope":6079,"src":"33999:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6055,"name":"int256","nodeType":"ElementaryTypeName","src":"33999:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33998:14:20"},"returnParameters":{"id":6060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6059,"mutability":"mutable","name":"downcasted","nameLocation":"34041:10:20","nodeType":"VariableDeclaration","scope":6079,"src":"34036:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6058,"name":"int8","nodeType":"ElementaryTypeName","src":"34036:4:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34035:17:20"},"scope":6110,"src":"33983:216:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6108,"nodeType":"Block","src":"34439:250:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6082,"src":"34552:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34573:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6091,"name":"int256","nodeType":"ElementaryTypeName","src":"34573:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6090,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34568:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34568:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34581:3:20","memberName":"max","nodeType":"MemberAccess","src":"34568:16:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34560:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6088,"name":"uint256","nodeType":"ElementaryTypeName","src":"34560:7:20","typeDescriptions":{}}},"id":6095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34560:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34552:33:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6102,"nodeType":"IfStatement","src":"34548:105:20","trueBody":{"id":6101,"nodeType":"Block","src":"34587:66:20","statements":[{"errorCall":{"arguments":[{"id":6098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6082,"src":"34636:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6097,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4382,"src":"34608:27:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34608:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6100,"nodeType":"RevertStatement","src":"34601:41:20"}]}},{"expression":{"arguments":[{"id":6105,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6082,"src":"34676:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34669:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6103,"name":"int256","nodeType":"ElementaryTypeName","src":"34669:6:20","typeDescriptions":{}}},"id":6106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34669:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6086,"id":6107,"nodeType":"Return","src":"34662:20:20"}]},"documentation":{"id":6080,"nodeType":"StructuredDocumentation","src":"34205:165:20","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6109,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34384:8:20","nodeType":"FunctionDefinition","parameters":{"id":6083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6082,"mutability":"mutable","name":"value","nameLocation":"34401:5:20","nodeType":"VariableDeclaration","scope":6109,"src":"34393:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6081,"name":"uint256","nodeType":"ElementaryTypeName","src":"34393:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34392:15:20"},"returnParameters":{"id":6086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6109,"src":"34431:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6084,"name":"int256","nodeType":"ElementaryTypeName","src":"34431:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34430:8:20"},"scope":6110,"src":"34375:314:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6111,"src":"764:33927:20","usedErrors":[4365,4370,4377,4382],"usedEvents":[]}],"src":"192:34500:20"},"id":20},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[6215]},"id":6216,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6112,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6113,"nodeType":"StructuredDocumentation","src":"135:80:21","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6215,"linearizedBaseContracts":[6215],"name":"SignedMath","nameLocation":"224:10:21","nodeType":"ContractDefinition","nodes":[{"body":{"id":6130,"nodeType":"Block","src":"376:37:21","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6123,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6116,"src":"393:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6124,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"397:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"393:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":6127,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"405:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"393:13:21","trueExpression":{"id":6126,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6116,"src":"401:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6122,"id":6129,"nodeType":"Return","src":"386:20:21"}]},"documentation":{"id":6114,"nodeType":"StructuredDocumentation","src":"241:66:21","text":" @dev Returns the largest of two signed numbers."},"id":6131,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"321:3:21","nodeType":"FunctionDefinition","parameters":{"id":6119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6116,"mutability":"mutable","name":"a","nameLocation":"332:1:21","nodeType":"VariableDeclaration","scope":6131,"src":"325:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6115,"name":"int256","nodeType":"ElementaryTypeName","src":"325:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6118,"mutability":"mutable","name":"b","nameLocation":"342:1:21","nodeType":"VariableDeclaration","scope":6131,"src":"335:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6117,"name":"int256","nodeType":"ElementaryTypeName","src":"335:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"324:20:21"},"returnParameters":{"id":6122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6131,"src":"368:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6120,"name":"int256","nodeType":"ElementaryTypeName","src":"368:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"367:8:21"},"scope":6215,"src":"312:101:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6148,"nodeType":"Block","src":"555:37:21","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6141,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6134,"src":"572:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6142,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6136,"src":"576:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"572:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":6145,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6136,"src":"584:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"572:13:21","trueExpression":{"id":6144,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6134,"src":"580:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6140,"id":6147,"nodeType":"Return","src":"565:20:21"}]},"documentation":{"id":6132,"nodeType":"StructuredDocumentation","src":"419:67:21","text":" @dev Returns the smallest of two signed numbers."},"id":6149,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"500:3:21","nodeType":"FunctionDefinition","parameters":{"id":6137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6134,"mutability":"mutable","name":"a","nameLocation":"511:1:21","nodeType":"VariableDeclaration","scope":6149,"src":"504:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6133,"name":"int256","nodeType":"ElementaryTypeName","src":"504:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6136,"mutability":"mutable","name":"b","nameLocation":"521:1:21","nodeType":"VariableDeclaration","scope":6149,"src":"514:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6135,"name":"int256","nodeType":"ElementaryTypeName","src":"514:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"503:20:21"},"returnParameters":{"id":6140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6149,"src":"547:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6138,"name":"int256","nodeType":"ElementaryTypeName","src":"547:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"546:8:21"},"scope":6215,"src":"491:101:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6192,"nodeType":"Block","src":"797:162:21","statements":[{"assignments":[6160],"declarations":[{"constant":false,"id":6160,"mutability":"mutable","name":"x","nameLocation":"866:1:21","nodeType":"VariableDeclaration","scope":6192,"src":"859:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6159,"name":"int256","nodeType":"ElementaryTypeName","src":"859:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6173,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6161,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6152,"src":"871:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6162,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6154,"src":"875:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"871:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6164,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"870:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6165,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6152,"src":"882:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6166,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6154,"src":"886:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"882:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6168,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"881:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"892:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"881:12:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6171,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:14:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:24:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"859:35:21"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6174,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6160,"src":"911:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6179,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6160,"src":"931:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"923:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6177,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:21","typeDescriptions":{}}},"id":6180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"923:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"937:3:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"923:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"916:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6175,"name":"int256","nodeType":"ElementaryTypeName","src":"916:6:21","typeDescriptions":{}}},"id":6183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6184,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6152,"src":"945:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6185,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6154,"src":"949:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"945:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6187,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"944:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"916:35:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6189,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"915:37:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"911:41:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6158,"id":6191,"nodeType":"Return","src":"904:48:21"}]},"documentation":{"id":6150,"nodeType":"StructuredDocumentation","src":"598:126:21","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":6193,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"738:7:21","nodeType":"FunctionDefinition","parameters":{"id":6155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6152,"mutability":"mutable","name":"a","nameLocation":"753:1:21","nodeType":"VariableDeclaration","scope":6193,"src":"746:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6151,"name":"int256","nodeType":"ElementaryTypeName","src":"746:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6154,"mutability":"mutable","name":"b","nameLocation":"763:1:21","nodeType":"VariableDeclaration","scope":6193,"src":"756:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6153,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"745:20:21"},"returnParameters":{"id":6158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6193,"src":"789:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6156,"name":"int256","nodeType":"ElementaryTypeName","src":"789:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"788:8:21"},"scope":6215,"src":"729:230:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6213,"nodeType":"Block","src":"1103:158:21","statements":[{"id":6212,"nodeType":"UncheckedBlock","src":"1113:142:21","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6203,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6196,"src":"1228:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":6204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1233:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1228:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":6208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1241:2:21","subExpression":{"id":6207,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6196,"src":"1242:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1228:15:21","trueExpression":{"id":6206,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6196,"src":"1237:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1220:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6201,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:21","typeDescriptions":{}}},"id":6210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1220:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6200,"id":6211,"nodeType":"Return","src":"1213:31:21"}]}]},"documentation":{"id":6194,"nodeType":"StructuredDocumentation","src":"965:78:21","text":" @dev Returns the absolute unsigned value of a signed value."},"id":6214,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1057:3:21","nodeType":"FunctionDefinition","parameters":{"id":6197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6196,"mutability":"mutable","name":"n","nameLocation":"1068:1:21","nodeType":"VariableDeclaration","scope":6214,"src":"1061:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6195,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1060:10:21"},"returnParameters":{"id":6200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6199,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6214,"src":"1094:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6198,"name":"uint256","nodeType":"ElementaryTypeName","src":"1094:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1093:9:21"},"scope":6215,"src":"1048:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6216,"src":"216:1047:21","usedErrors":[],"usedEvents":[]}],"src":"109:1155:21"},"id":21},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[6828]},"id":6829,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6217,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"205:24:22"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSet","contractDependencies":[],"contractKind":"library","documentation":{"id":6218,"nodeType":"StructuredDocumentation","src":"231:1098:22","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":6828,"linearizedBaseContracts":[6828],"name":"EnumerableSet","nameLocation":"1338:13:22","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":6226,"members":[{"constant":false,"id":6221,"mutability":"mutable","name":"_values","nameLocation":"1862:7:22","nodeType":"VariableDeclaration","scope":6226,"src":"1852:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1852:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6220,"nodeType":"ArrayTypeName","src":"1852:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":6225,"mutability":"mutable","name":"_positions","nameLocation":"2054:10:22","nodeType":"VariableDeclaration","scope":6226,"src":"2020:44:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":6224,"keyName":"value","keyNameLocation":"2036:5:22","keyType":{"id":6222,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2028:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2020:33:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6223,"name":"uint256","nodeType":"ElementaryTypeName","src":"2045:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1805:3:22","nodeType":"StructDefinition","scope":6828,"src":"1798:273:22","visibility":"public"},{"body":{"id":6267,"nodeType":"Block","src":"2310:337:22","statements":[{"condition":{"id":6241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2324:22:22","subExpression":{"arguments":[{"id":6238,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"2335:3:22","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":6239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6232,"src":"2340:5:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6226_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6237,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"2325:9:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6226_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":6240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2325:21:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6265,"nodeType":"Block","src":"2604:37:22","statements":[{"expression":{"hexValue":"66616c7365","id":6263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2625:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":6236,"id":6264,"nodeType":"Return","src":"2618:12:22"}]},"id":6266,"nodeType":"IfStatement","src":"2320:321:22","trueBody":{"id":6262,"nodeType":"Block","src":"2348:250:22","statements":[{"expression":{"arguments":[{"id":6247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6232,"src":"2379:5:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":6242,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"2362:3:22","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6245,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2366:7:22","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6221,"src":"2362:11:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":6246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:4:22","memberName":"push","nodeType":"MemberAccess","src":"2362:16:22","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":6248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2362:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6249,"nodeType":"ExpressionStatement","src":"2362:23:22"},{"expression":{"id":6258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":6250,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"2520:3:22","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6253,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2524:10:22","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":6225,"src":"2520:14:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":6254,"indexExpression":{"id":6252,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6232,"src":"2535:5:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2520:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":6255,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"2544:3:22","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6256,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2548:7:22","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6221,"src":"2544:11:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":6257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2556:6:22","memberName":"length","nodeType":"MemberAccess","src":"2544:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2520:42:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6259,"nodeType":"ExpressionStatement","src":"2520:42:22"},{"expression":{"hexValue":"74727565","id":6260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2583:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6236,"id":6261,"nodeType":"Return","src":"2576:11:22"}]}}]},"documentation":{"id":6227,"nodeType":"StructuredDocumentation","src":"2077:159:22","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":6268,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2250:4:22","nodeType":"FunctionDefinition","parameters":{"id":6233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6230,"mutability":"mutable","name":"set","nameLocation":"2267:3:22","nodeType":"VariableDeclaration","scope":6268,"src":"2255:15:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":6229,"nodeType":"UserDefinedTypeName","pathNode":{"id":6228,"name":"Set","nameLocations":["2255:3:22"],"nodeType":"IdentifierPath","referencedDeclaration":6226,"src":"2255:3:22"},"referencedDeclaration":6226,"src":"2255:3:22","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":6232,"mutability":"mutable","name":"value","nameLocation":"2280:5:22","nodeType":"VariableDeclaration","scope":6268,"src":"2272:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2272:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2254:32:22"},"returnParameters":{"id":6236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6268,"src":"2304:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6234,"name":"bool","nodeType":"ElementaryTypeName","src":"2304:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2303:6:22"},"scope":6828,"src":"2241:406:22","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":6351,"nodeType":"Block","src":"2887:1296:22","statements":[{"assignments":[6280],"declarations":[{"constant":false,"id":6280,"mutability":"mutable","name":"position","nameLocation":"2999:8:22","nodeType":"VariableDeclaration","scope":6351,"src":"2991:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6279,"name":"uint256","nodeType":"ElementaryTypeName","src":"2991:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6285,"initialValue":{"baseExpression":{"expression":{"id":6281,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6272,"src":"3010:3:22","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6282,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3014:10:22","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":6225,"src":"3010:14:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":6284,"indexExpression":{"id":6283,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6274,"src":"3025:5:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3010:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2991:40:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6286,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"3046:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3058:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3046:13:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6349,"nodeType":"Block","src":"4140:37:22","statements":[{"expression":{"hexValue":"66616c7365","id":6347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4161:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":6278,"id":6348,"nodeType":"Return","src":"4154:12:22"}]},"id":6350,"nodeType":"IfStatement","src":"3042:1135:22","trueBody":{"id":6346,"nodeType":"Block","src":"3061:1073:22","statements":[{"assignments":[6290],"declarations":[{"constant":false,"id":6290,"mutability":"mutable","name":"valueIndex","nameLocation":"3421:10:22","nodeType":"VariableDeclaration","scope":6346,"src":"3413:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6289,"name":"uint256","nodeType":"ElementaryTypeName","src":"3413:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6294,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6291,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"3434:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3445:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3434:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3413:33:22"},{"assignments":[6296],"declarations":[{"constant":false,"id":6296,"mutability":"mutable","name":"lastIndex","nameLocation":"3468:9:22","nodeType":"VariableDeclaration","scope":6346,"src":"3460:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6295,"name":"uint256","nodeType":"ElementaryTypeName","src":"3460:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6302,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":6297,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6272,"src":"3480:3:22","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6298,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3484:7:22","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6221,"src":"3480:11:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":6299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3492:6:22","memberName":"length","nodeType":"MemberAccess","src":"3480:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3501:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3480:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3460:42:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6303,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6290,"src":"3521:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6304,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6296,"src":"3535:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3521:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6330,"nodeType":"IfStatement","src":"3517:378:22","trueBody":{"id":6329,"nodeType":"Block","src":"3546:349:22","statements":[{"assignments":[6307],"declarations":[{"constant":false,"id":6307,"mutability":"mutable","name":"lastValue","nameLocation":"3572:9:22","nodeType":"VariableDeclaration","scope":6329,"src":"3564:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6306,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3564:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6312,"initialValue":{"baseExpression":{"expression":{"id":6308,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6272,"src":"3584:3:22","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6309,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3588:7:22","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6221,"src":"3584:11:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":6311,"indexExpression":{"id":6310,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6296,"src":"3596:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3584:22:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3564:42:22"},{"expression":{"id":6319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":6313,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6272,"src":"3705:3:22","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3709:7:22","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6221,"src":"3705:11:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":6317,"indexExpression":{"id":6315,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6290,"src":"3717:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3705:23:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6318,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6307,"src":"3731:9:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3705:35:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6320,"nodeType":"ExpressionStatement","src":"3705:35:22"},{"expression":{"id":6327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":6321,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6272,"src":"3844:3:22","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6324,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3848:10:22","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":6225,"src":"3844:14:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":6325,"indexExpression":{"id":6323,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6307,"src":"3859:9:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3844:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6326,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"3872:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3844:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6328,"nodeType":"ExpressionStatement","src":"3844:36:22"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":6331,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6272,"src":"3973:3:22","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6334,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3977:7:22","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6221,"src":"3973:11:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":6335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3985:3:22","memberName":"pop","nodeType":"MemberAccess","src":"3973:15:22","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":6336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3973:17:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6337,"nodeType":"ExpressionStatement","src":"3973:17:22"},{"expression":{"id":6342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4069:28:22","subExpression":{"baseExpression":{"expression":{"id":6338,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6272,"src":"4076:3:22","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6339,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4080:10:22","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":6225,"src":"4076:14:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":6341,"indexExpression":{"id":6340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6274,"src":"4091:5:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4076:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6343,"nodeType":"ExpressionStatement","src":"4069:28:22"},{"expression":{"hexValue":"74727565","id":6344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4119:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6278,"id":6345,"nodeType":"Return","src":"4112:11:22"}]}}]},"documentation":{"id":6269,"nodeType":"StructuredDocumentation","src":"2653:157:22","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":6352,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2824:7:22","nodeType":"FunctionDefinition","parameters":{"id":6275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6272,"mutability":"mutable","name":"set","nameLocation":"2844:3:22","nodeType":"VariableDeclaration","scope":6352,"src":"2832:15:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":6271,"nodeType":"UserDefinedTypeName","pathNode":{"id":6270,"name":"Set","nameLocations":["2832:3:22"],"nodeType":"IdentifierPath","referencedDeclaration":6226,"src":"2832:3:22"},"referencedDeclaration":6226,"src":"2832:3:22","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":6274,"mutability":"mutable","name":"value","nameLocation":"2857:5:22","nodeType":"VariableDeclaration","scope":6352,"src":"2849:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6273,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2849:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2831:32:22"},"returnParameters":{"id":6278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6352,"src":"2881:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6276,"name":"bool","nodeType":"ElementaryTypeName","src":"2881:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2880:6:22"},"scope":6828,"src":"2815:1368:22","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":6370,"nodeType":"Block","src":"4343:50:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":6363,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6356,"src":"4360:3:22","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6364,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4364:10:22","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":6225,"src":"4360:14:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":6366,"indexExpression":{"id":6365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6358,"src":"4375:5:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4360:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4385:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4360:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6362,"id":6369,"nodeType":"Return","src":"4353:33:22"}]},"documentation":{"id":6353,"nodeType":"StructuredDocumentation","src":"4189:70:22","text":" @dev Returns true if the value is in the set. O(1)."},"id":6371,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4273:9:22","nodeType":"FunctionDefinition","parameters":{"id":6359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6356,"mutability":"mutable","name":"set","nameLocation":"4295:3:22","nodeType":"VariableDeclaration","scope":6371,"src":"4283:15:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":6355,"nodeType":"UserDefinedTypeName","pathNode":{"id":6354,"name":"Set","nameLocations":["4283:3:22"],"nodeType":"IdentifierPath","referencedDeclaration":6226,"src":"4283:3:22"},"referencedDeclaration":6226,"src":"4283:3:22","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":6358,"mutability":"mutable","name":"value","nameLocation":"4308:5:22","nodeType":"VariableDeclaration","scope":6371,"src":"4300:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6357,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4300:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4282:32:22"},"returnParameters":{"id":6362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6371,"src":"4337:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6360,"name":"bool","nodeType":"ElementaryTypeName","src":"4337:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4336:6:22"},"scope":6828,"src":"4264:129:22","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":6384,"nodeType":"Block","src":"4539:42:22","statements":[{"expression":{"expression":{"expression":{"id":6380,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6375,"src":"4556:3:22","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4560:7:22","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6221,"src":"4556:11:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":6382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4568:6:22","memberName":"length","nodeType":"MemberAccess","src":"4556:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6379,"id":6383,"nodeType":"Return","src":"4549:25:22"}]},"documentation":{"id":6372,"nodeType":"StructuredDocumentation","src":"4399:70:22","text":" @dev Returns the number of values on the set. O(1)."},"id":6385,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4483:7:22","nodeType":"FunctionDefinition","parameters":{"id":6376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6375,"mutability":"mutable","name":"set","nameLocation":"4503:3:22","nodeType":"VariableDeclaration","scope":6385,"src":"4491:15:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":6374,"nodeType":"UserDefinedTypeName","pathNode":{"id":6373,"name":"Set","nameLocations":["4491:3:22"],"nodeType":"IdentifierPath","referencedDeclaration":6226,"src":"4491:3:22"},"referencedDeclaration":6226,"src":"4491:3:22","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4490:17:22"},"returnParameters":{"id":6379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6385,"src":"4530:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6377,"name":"uint256","nodeType":"ElementaryTypeName","src":"4530:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4529:9:22"},"scope":6828,"src":"4474:107:22","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":6401,"nodeType":"Block","src":"4999:42:22","statements":[{"expression":{"baseExpression":{"expression":{"id":6396,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"5016:3:22","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5020:7:22","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6221,"src":"5016:11:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":6399,"indexExpression":{"id":6398,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6391,"src":"5028:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5016:18:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6395,"id":6400,"nodeType":"Return","src":"5009:25:22"}]},"documentation":{"id":6386,"nodeType":"StructuredDocumentation","src":"4587:331:22","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":6402,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4932:3:22","nodeType":"FunctionDefinition","parameters":{"id":6392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6389,"mutability":"mutable","name":"set","nameLocation":"4948:3:22","nodeType":"VariableDeclaration","scope":6402,"src":"4936:15:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":6388,"nodeType":"UserDefinedTypeName","pathNode":{"id":6387,"name":"Set","nameLocations":["4936:3:22"],"nodeType":"IdentifierPath","referencedDeclaration":6226,"src":"4936:3:22"},"referencedDeclaration":6226,"src":"4936:3:22","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":6391,"mutability":"mutable","name":"index","nameLocation":"4961:5:22","nodeType":"VariableDeclaration","scope":6402,"src":"4953:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6390,"name":"uint256","nodeType":"ElementaryTypeName","src":"4953:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4935:32:22"},"returnParameters":{"id":6395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6402,"src":"4990:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6393,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4990:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4989:9:22"},"scope":6828,"src":"4923:118:22","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":6415,"nodeType":"Block","src":"5655:35:22","statements":[{"expression":{"expression":{"id":6412,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6406,"src":"5672:3:22","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6413,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5676:7:22","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6221,"src":"5672:11:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":6411,"id":6414,"nodeType":"Return","src":"5665:18:22"}]},"documentation":{"id":6403,"nodeType":"StructuredDocumentation","src":"5047:529:22","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":6416,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5590:7:22","nodeType":"FunctionDefinition","parameters":{"id":6407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6406,"mutability":"mutable","name":"set","nameLocation":"5610:3:22","nodeType":"VariableDeclaration","scope":6416,"src":"5598:15:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":6405,"nodeType":"UserDefinedTypeName","pathNode":{"id":6404,"name":"Set","nameLocations":["5598:3:22"],"nodeType":"IdentifierPath","referencedDeclaration":6226,"src":"5598:3:22"},"referencedDeclaration":6226,"src":"5598:3:22","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5597:17:22"},"returnParameters":{"id":6411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6410,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6416,"src":"5637:16:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6408,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5637:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6409,"nodeType":"ArrayTypeName","src":"5637:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5636:18:22"},"scope":6828,"src":"5581:109:22","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":6420,"members":[{"constant":false,"id":6419,"mutability":"mutable","name":"_inner","nameLocation":"5747:6:22","nodeType":"VariableDeclaration","scope":6420,"src":"5743:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":6418,"nodeType":"UserDefinedTypeName","pathNode":{"id":6417,"name":"Set","nameLocations":["5743:3:22"],"nodeType":"IdentifierPath","referencedDeclaration":6226,"src":"5743:3:22"},"referencedDeclaration":6226,"src":"5743:3:22","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5722:10:22","nodeType":"StructDefinition","scope":6828,"src":"5715:45:22","visibility":"public"},{"body":{"id":6437,"nodeType":"Block","src":"6006:47:22","statements":[{"expression":{"arguments":[{"expression":{"id":6432,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6424,"src":"6028:3:22","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6420_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":6433,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6032:6:22","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6419,"src":"6028:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":6434,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6426,"src":"6040:5:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6226_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6431,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6268,"src":"6023:4:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$6226_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":6435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6023:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6430,"id":6436,"nodeType":"Return","src":"6016:30:22"}]},"documentation":{"id":6421,"nodeType":"StructuredDocumentation","src":"5766:159:22","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":6438,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5939:3:22","nodeType":"FunctionDefinition","parameters":{"id":6427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6424,"mutability":"mutable","name":"set","nameLocation":"5962:3:22","nodeType":"VariableDeclaration","scope":6438,"src":"5943:22:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6420_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":6423,"nodeType":"UserDefinedTypeName","pathNode":{"id":6422,"name":"Bytes32Set","nameLocations":["5943:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":6420,"src":"5943:10:22"},"referencedDeclaration":6420,"src":"5943:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6420_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":6426,"mutability":"mutable","name":"value","nameLocation":"5975:5:22","nodeType":"VariableDeclaration","scope":6438,"src":"5967:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6425,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5967:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5942:39:22"},"returnParameters":{"id":6430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6438,"src":"6000:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6428,"name":"bool","nodeType":"ElementaryTypeName","src":"6000:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5999:6:22"},"scope":6828,"src":"5930:123:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6455,"nodeType":"Block","src":"6300:50:22","statements":[{"expression":{"arguments":[{"expression":{"id":6450,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6442,"src":"6325:3:22","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6420_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":6451,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6329:6:22","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6419,"src":"6325:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":6452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6444,"src":"6337:5:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6226_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6449,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6352,"src":"6317:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$6226_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":6453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6317:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6448,"id":6454,"nodeType":"Return","src":"6310:33:22"}]},"documentation":{"id":6439,"nodeType":"StructuredDocumentation","src":"6059:157:22","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":6456,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6230:6:22","nodeType":"FunctionDefinition","parameters":{"id":6445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6442,"mutability":"mutable","name":"set","nameLocation":"6256:3:22","nodeType":"VariableDeclaration","scope":6456,"src":"6237:22:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6420_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":6441,"nodeType":"UserDefinedTypeName","pathNode":{"id":6440,"name":"Bytes32Set","nameLocations":["6237:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":6420,"src":"6237:10:22"},"referencedDeclaration":6420,"src":"6237:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6420_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":6444,"mutability":"mutable","name":"value","nameLocation":"6269:5:22","nodeType":"VariableDeclaration","scope":6456,"src":"6261:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6443,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6261:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6236:39:22"},"returnParameters":{"id":6448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6456,"src":"6294:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6446,"name":"bool","nodeType":"ElementaryTypeName","src":"6294:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6293:6:22"},"scope":6828,"src":"6221:129:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6473,"nodeType":"Block","src":"6517:52:22","statements":[{"expression":{"arguments":[{"expression":{"id":6468,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6460,"src":"6544:3:22","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6420_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":6469,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6548:6:22","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6419,"src":"6544:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":6470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6462,"src":"6556:5:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6226_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6467,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"6534:9:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6226_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":6471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6534:28:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6466,"id":6472,"nodeType":"Return","src":"6527:35:22"}]},"documentation":{"id":6457,"nodeType":"StructuredDocumentation","src":"6356:70:22","text":" @dev Returns true if the value is in the set. O(1)."},"id":6474,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6440:8:22","nodeType":"FunctionDefinition","parameters":{"id":6463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6460,"mutability":"mutable","name":"set","nameLocation":"6468:3:22","nodeType":"VariableDeclaration","scope":6474,"src":"6449:22:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6420_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":6459,"nodeType":"UserDefinedTypeName","pathNode":{"id":6458,"name":"Bytes32Set","nameLocations":["6449:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":6420,"src":"6449:10:22"},"referencedDeclaration":6420,"src":"6449:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6420_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":6462,"mutability":"mutable","name":"value","nameLocation":"6481:5:22","nodeType":"VariableDeclaration","scope":6474,"src":"6473:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6461,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6473:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6448:39:22"},"returnParameters":{"id":6466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6465,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6474,"src":"6511:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6464,"name":"bool","nodeType":"ElementaryTypeName","src":"6511:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6510:6:22"},"scope":6828,"src":"6431:138:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6488,"nodeType":"Block","src":"6722:43:22","statements":[{"expression":{"arguments":[{"expression":{"id":6484,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6478,"src":"6747:3:22","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6420_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":6485,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6751:6:22","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6419,"src":"6747:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6226_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":6483,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6385,"src":"6739:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6226_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":6486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6739:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6482,"id":6487,"nodeType":"Return","src":"6732:26:22"}]},"documentation":{"id":6475,"nodeType":"StructuredDocumentation","src":"6575:70:22","text":" @dev Returns the number of values in the set. O(1)."},"id":6489,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6659:6:22","nodeType":"FunctionDefinition","parameters":{"id":6479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6478,"mutability":"mutable","name":"set","nameLocation":"6685:3:22","nodeType":"VariableDeclaration","scope":6489,"src":"6666:22:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6420_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":6477,"nodeType":"UserDefinedTypeName","pathNode":{"id":6476,"name":"Bytes32Set","nameLocations":["6666:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":6420,"src":"6666:10:22"},"referencedDeclaration":6420,"src":"6666:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6420_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"6665:24:22"},"returnParameters":{"id":6482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6489,"src":"6713:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6480,"name":"uint256","nodeType":"ElementaryTypeName","src":"6713:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6712:9:22"},"scope":6828,"src":"6650:115:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6506,"nodeType":"Block","src":"7190:46:22","statements":[{"expression":{"arguments":[{"expression":{"id":6501,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6493,"src":"7211:3:22","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6420_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":6502,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7215:6:22","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6419,"src":"7211:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":6503,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6495,"src":"7223:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6226_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6500,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6402,"src":"7207:3:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6226_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":6504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7207:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6499,"id":6505,"nodeType":"Return","src":"7200:29:22"}]},"documentation":{"id":6490,"nodeType":"StructuredDocumentation","src":"6771:331:22","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":6507,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7116:2:22","nodeType":"FunctionDefinition","parameters":{"id":6496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6493,"mutability":"mutable","name":"set","nameLocation":"7138:3:22","nodeType":"VariableDeclaration","scope":6507,"src":"7119:22:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6420_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":6492,"nodeType":"UserDefinedTypeName","pathNode":{"id":6491,"name":"Bytes32Set","nameLocations":["7119:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":6420,"src":"7119:10:22"},"referencedDeclaration":6420,"src":"7119:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6420_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":6495,"mutability":"mutable","name":"index","nameLocation":"7151:5:22","nodeType":"VariableDeclaration","scope":6507,"src":"7143:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6494,"name":"uint256","nodeType":"ElementaryTypeName","src":"7143:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7118:39:22"},"returnParameters":{"id":6499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6507,"src":"7181:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6497,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7181:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7180:9:22"},"scope":6828,"src":"7107:129:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6536,"nodeType":"Block","src":"7857:219:22","statements":[{"assignments":[6521],"declarations":[{"constant":false,"id":6521,"mutability":"mutable","name":"store","nameLocation":"7884:5:22","nodeType":"VariableDeclaration","scope":6536,"src":"7867:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6519,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7867:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6520,"nodeType":"ArrayTypeName","src":"7867:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":6526,"initialValue":{"arguments":[{"expression":{"id":6523,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6511,"src":"7900:3:22","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6420_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":6524,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7904:6:22","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6419,"src":"7900:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6226_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":6522,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"7892:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6226_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":6525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7892:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7867:44:22"},{"assignments":[6531],"declarations":[{"constant":false,"id":6531,"mutability":"mutable","name":"result","nameLocation":"7938:6:22","nodeType":"VariableDeclaration","scope":6536,"src":"7921:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6529,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7921:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6530,"nodeType":"ArrayTypeName","src":"7921:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":6532,"nodeType":"VariableDeclarationStatement","src":"7921:23:22"},{"AST":{"nativeSrc":"8007:39:22","nodeType":"YulBlock","src":"8007:39:22","statements":[{"nativeSrc":"8021:15:22","nodeType":"YulAssignment","src":"8021:15:22","value":{"name":"store","nativeSrc":"8031:5:22","nodeType":"YulIdentifier","src":"8031:5:22"},"variableNames":[{"name":"result","nativeSrc":"8021:6:22","nodeType":"YulIdentifier","src":"8021:6:22"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":6531,"isOffset":false,"isSlot":false,"src":"8021:6:22","valueSize":1},{"declaration":6521,"isOffset":false,"isSlot":false,"src":"8031:5:22","valueSize":1}],"id":6533,"nodeType":"InlineAssembly","src":"7998:48:22"},{"expression":{"id":6534,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6531,"src":"8063:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":6516,"id":6535,"nodeType":"Return","src":"8056:13:22"}]},"documentation":{"id":6508,"nodeType":"StructuredDocumentation","src":"7242:529:22","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":6537,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7785:6:22","nodeType":"FunctionDefinition","parameters":{"id":6512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6511,"mutability":"mutable","name":"set","nameLocation":"7811:3:22","nodeType":"VariableDeclaration","scope":6537,"src":"7792:22:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6420_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":6510,"nodeType":"UserDefinedTypeName","pathNode":{"id":6509,"name":"Bytes32Set","nameLocations":["7792:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":6420,"src":"7792:10:22"},"referencedDeclaration":6420,"src":"7792:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6420_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7791:24:22"},"returnParameters":{"id":6516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6515,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6537,"src":"7839:16:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7839:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6514,"nodeType":"ArrayTypeName","src":"7839:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7838:18:22"},"scope":6828,"src":"7776:300:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":6541,"members":[{"constant":false,"id":6540,"mutability":"mutable","name":"_inner","nameLocation":"8133:6:22","nodeType":"VariableDeclaration","scope":6541,"src":"8129:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":6539,"nodeType":"UserDefinedTypeName","pathNode":{"id":6538,"name":"Set","nameLocations":["8129:3:22"],"nodeType":"IdentifierPath","referencedDeclaration":6226,"src":"8129:3:22"},"referencedDeclaration":6226,"src":"8129:3:22","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8108:10:22","nodeType":"StructDefinition","scope":6828,"src":"8101:45:22","visibility":"public"},{"body":{"id":6567,"nodeType":"Block","src":"8392:74:22","statements":[{"expression":{"arguments":[{"expression":{"id":6553,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"8414:3:22","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6541_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":6554,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8418:6:22","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6540,"src":"8414:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":6561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6547,"src":"8450:5:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8442:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6559,"name":"uint160","nodeType":"ElementaryTypeName","src":"8442:7:22","typeDescriptions":{}}},"id":6562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8442:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":6558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8434:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6557,"name":"uint256","nodeType":"ElementaryTypeName","src":"8434:7:22","typeDescriptions":{}}},"id":6563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8434:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8426:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":6555,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8426:7:22","typeDescriptions":{}}},"id":6564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8426:32:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6226_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6552,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6268,"src":"8409:4:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$6226_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":6565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8409:50:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6551,"id":6566,"nodeType":"Return","src":"8402:57:22"}]},"documentation":{"id":6542,"nodeType":"StructuredDocumentation","src":"8152:159:22","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":6568,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8325:3:22","nodeType":"FunctionDefinition","parameters":{"id":6548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6545,"mutability":"mutable","name":"set","nameLocation":"8348:3:22","nodeType":"VariableDeclaration","scope":6568,"src":"8329:22:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6541_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":6544,"nodeType":"UserDefinedTypeName","pathNode":{"id":6543,"name":"AddressSet","nameLocations":["8329:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":6541,"src":"8329:10:22"},"referencedDeclaration":6541,"src":"8329:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6541_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":6547,"mutability":"mutable","name":"value","nameLocation":"8361:5:22","nodeType":"VariableDeclaration","scope":6568,"src":"8353:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6546,"name":"address","nodeType":"ElementaryTypeName","src":"8353:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8328:39:22"},"returnParameters":{"id":6551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6568,"src":"8386:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6549,"name":"bool","nodeType":"ElementaryTypeName","src":"8386:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8385:6:22"},"scope":6828,"src":"8316:150:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6594,"nodeType":"Block","src":"8713:77:22","statements":[{"expression":{"arguments":[{"expression":{"id":6580,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6572,"src":"8738:3:22","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6541_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":6581,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8742:6:22","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6540,"src":"8738:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":6588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"8774:5:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8766:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6586,"name":"uint160","nodeType":"ElementaryTypeName","src":"8766:7:22","typeDescriptions":{}}},"id":6589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8766:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":6585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8758:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6584,"name":"uint256","nodeType":"ElementaryTypeName","src":"8758:7:22","typeDescriptions":{}}},"id":6590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8758:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8750:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":6582,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8750:7:22","typeDescriptions":{}}},"id":6591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8750:32:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6226_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6579,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6352,"src":"8730:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$6226_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":6592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8730:53:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6578,"id":6593,"nodeType":"Return","src":"8723:60:22"}]},"documentation":{"id":6569,"nodeType":"StructuredDocumentation","src":"8472:157:22","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":6595,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8643:6:22","nodeType":"FunctionDefinition","parameters":{"id":6575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6572,"mutability":"mutable","name":"set","nameLocation":"8669:3:22","nodeType":"VariableDeclaration","scope":6595,"src":"8650:22:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6541_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":6571,"nodeType":"UserDefinedTypeName","pathNode":{"id":6570,"name":"AddressSet","nameLocations":["8650:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":6541,"src":"8650:10:22"},"referencedDeclaration":6541,"src":"8650:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6541_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":6574,"mutability":"mutable","name":"value","nameLocation":"8682:5:22","nodeType":"VariableDeclaration","scope":6595,"src":"8674:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6573,"name":"address","nodeType":"ElementaryTypeName","src":"8674:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8649:39:22"},"returnParameters":{"id":6578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6595,"src":"8707:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6576,"name":"bool","nodeType":"ElementaryTypeName","src":"8707:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8706:6:22"},"scope":6828,"src":"8634:156:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6621,"nodeType":"Block","src":"8957:79:22","statements":[{"expression":{"arguments":[{"expression":{"id":6607,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6599,"src":"8984:3:22","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6541_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":6608,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8988:6:22","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6540,"src":"8984:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":6615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6601,"src":"9020:5:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9012:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6613,"name":"uint160","nodeType":"ElementaryTypeName","src":"9012:7:22","typeDescriptions":{}}},"id":6616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9012:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":6612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9004:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6611,"name":"uint256","nodeType":"ElementaryTypeName","src":"9004:7:22","typeDescriptions":{}}},"id":6617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9004:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8996:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":6609,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8996:7:22","typeDescriptions":{}}},"id":6618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8996:32:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6226_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6606,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"8974:9:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6226_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":6619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8974:55:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6605,"id":6620,"nodeType":"Return","src":"8967:62:22"}]},"documentation":{"id":6596,"nodeType":"StructuredDocumentation","src":"8796:70:22","text":" @dev Returns true if the value is in the set. O(1)."},"id":6622,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8880:8:22","nodeType":"FunctionDefinition","parameters":{"id":6602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6599,"mutability":"mutable","name":"set","nameLocation":"8908:3:22","nodeType":"VariableDeclaration","scope":6622,"src":"8889:22:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6541_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":6598,"nodeType":"UserDefinedTypeName","pathNode":{"id":6597,"name":"AddressSet","nameLocations":["8889:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":6541,"src":"8889:10:22"},"referencedDeclaration":6541,"src":"8889:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6541_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":6601,"mutability":"mutable","name":"value","nameLocation":"8921:5:22","nodeType":"VariableDeclaration","scope":6622,"src":"8913:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6600,"name":"address","nodeType":"ElementaryTypeName","src":"8913:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8888:39:22"},"returnParameters":{"id":6605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6604,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6622,"src":"8951:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6603,"name":"bool","nodeType":"ElementaryTypeName","src":"8951:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8950:6:22"},"scope":6828,"src":"8871:165:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6636,"nodeType":"Block","src":"9189:43:22","statements":[{"expression":{"arguments":[{"expression":{"id":6632,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6626,"src":"9214:3:22","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6541_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":6633,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9218:6:22","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6540,"src":"9214:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6226_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":6631,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6385,"src":"9206:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6226_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":6634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9206:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6630,"id":6635,"nodeType":"Return","src":"9199:26:22"}]},"documentation":{"id":6623,"nodeType":"StructuredDocumentation","src":"9042:70:22","text":" @dev Returns the number of values in the set. O(1)."},"id":6637,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9126:6:22","nodeType":"FunctionDefinition","parameters":{"id":6627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6626,"mutability":"mutable","name":"set","nameLocation":"9152:3:22","nodeType":"VariableDeclaration","scope":6637,"src":"9133:22:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6541_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":6625,"nodeType":"UserDefinedTypeName","pathNode":{"id":6624,"name":"AddressSet","nameLocations":["9133:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":6541,"src":"9133:10:22"},"referencedDeclaration":6541,"src":"9133:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6541_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"9132:24:22"},"returnParameters":{"id":6630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6637,"src":"9180:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6628,"name":"uint256","nodeType":"ElementaryTypeName","src":"9180:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9179:9:22"},"scope":6828,"src":"9117:115:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6663,"nodeType":"Block","src":"9657:73:22","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":6655,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6641,"src":"9702:3:22","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6541_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":6656,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9706:6:22","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6540,"src":"9702:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":6657,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6643,"src":"9714:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6226_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6654,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6402,"src":"9698:3:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6226_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":6658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9698:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9690:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6652,"name":"uint256","nodeType":"ElementaryTypeName","src":"9690:7:22","typeDescriptions":{}}},"id":6659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9690:31:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9682:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6650,"name":"uint160","nodeType":"ElementaryTypeName","src":"9682:7:22","typeDescriptions":{}}},"id":6660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9682:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":6649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9674:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6648,"name":"address","nodeType":"ElementaryTypeName","src":"9674:7:22","typeDescriptions":{}}},"id":6661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9674:49:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":6647,"id":6662,"nodeType":"Return","src":"9667:56:22"}]},"documentation":{"id":6638,"nodeType":"StructuredDocumentation","src":"9238:331:22","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":6664,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9583:2:22","nodeType":"FunctionDefinition","parameters":{"id":6644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6641,"mutability":"mutable","name":"set","nameLocation":"9605:3:22","nodeType":"VariableDeclaration","scope":6664,"src":"9586:22:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6541_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":6640,"nodeType":"UserDefinedTypeName","pathNode":{"id":6639,"name":"AddressSet","nameLocations":["9586:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":6541,"src":"9586:10:22"},"referencedDeclaration":6541,"src":"9586:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6541_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":6643,"mutability":"mutable","name":"index","nameLocation":"9618:5:22","nodeType":"VariableDeclaration","scope":6664,"src":"9610:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6642,"name":"uint256","nodeType":"ElementaryTypeName","src":"9610:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9585:39:22"},"returnParameters":{"id":6647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6646,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6664,"src":"9648:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6645,"name":"address","nodeType":"ElementaryTypeName","src":"9648:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9647:9:22"},"scope":6828,"src":"9574:156:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6693,"nodeType":"Block","src":"10351:219:22","statements":[{"assignments":[6678],"declarations":[{"constant":false,"id":6678,"mutability":"mutable","name":"store","nameLocation":"10378:5:22","nodeType":"VariableDeclaration","scope":6693,"src":"10361:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6676,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10361:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6677,"nodeType":"ArrayTypeName","src":"10361:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":6683,"initialValue":{"arguments":[{"expression":{"id":6680,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6668,"src":"10394:3:22","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6541_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":6681,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10398:6:22","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6540,"src":"10394:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6226_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":6679,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"10386:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6226_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":6682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10386:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10361:44:22"},{"assignments":[6688],"declarations":[{"constant":false,"id":6688,"mutability":"mutable","name":"result","nameLocation":"10432:6:22","nodeType":"VariableDeclaration","scope":6693,"src":"10415:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6686,"name":"address","nodeType":"ElementaryTypeName","src":"10415:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6687,"nodeType":"ArrayTypeName","src":"10415:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":6689,"nodeType":"VariableDeclarationStatement","src":"10415:23:22"},{"AST":{"nativeSrc":"10501:39:22","nodeType":"YulBlock","src":"10501:39:22","statements":[{"nativeSrc":"10515:15:22","nodeType":"YulAssignment","src":"10515:15:22","value":{"name":"store","nativeSrc":"10525:5:22","nodeType":"YulIdentifier","src":"10525:5:22"},"variableNames":[{"name":"result","nativeSrc":"10515:6:22","nodeType":"YulIdentifier","src":"10515:6:22"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":6688,"isOffset":false,"isSlot":false,"src":"10515:6:22","valueSize":1},{"declaration":6678,"isOffset":false,"isSlot":false,"src":"10525:5:22","valueSize":1}],"id":6690,"nodeType":"InlineAssembly","src":"10492:48:22"},{"expression":{"id":6691,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6688,"src":"10557:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":6673,"id":6692,"nodeType":"Return","src":"10550:13:22"}]},"documentation":{"id":6665,"nodeType":"StructuredDocumentation","src":"9736:529:22","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":6694,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10279:6:22","nodeType":"FunctionDefinition","parameters":{"id":6669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6668,"mutability":"mutable","name":"set","nameLocation":"10305:3:22","nodeType":"VariableDeclaration","scope":6694,"src":"10286:22:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6541_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":6667,"nodeType":"UserDefinedTypeName","pathNode":{"id":6666,"name":"AddressSet","nameLocations":["10286:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":6541,"src":"10286:10:22"},"referencedDeclaration":6541,"src":"10286:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6541_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10285:24:22"},"returnParameters":{"id":6673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6672,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6694,"src":"10333:16:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6670,"name":"address","nodeType":"ElementaryTypeName","src":"10333:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6671,"nodeType":"ArrayTypeName","src":"10333:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10332:18:22"},"scope":6828,"src":"10270:300:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":6698,"members":[{"constant":false,"id":6697,"mutability":"mutable","name":"_inner","nameLocation":"10621:6:22","nodeType":"VariableDeclaration","scope":6698,"src":"10617:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":6696,"nodeType":"UserDefinedTypeName","pathNode":{"id":6695,"name":"Set","nameLocations":["10617:3:22"],"nodeType":"IdentifierPath","referencedDeclaration":6226,"src":"10617:3:22"},"referencedDeclaration":6226,"src":"10617:3:22","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10599:7:22","nodeType":"StructDefinition","scope":6828,"src":"10592:42:22","visibility":"public"},{"body":{"id":6718,"nodeType":"Block","src":"10877:56:22","statements":[{"expression":{"arguments":[{"expression":{"id":6710,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6702,"src":"10899:3:22","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6698_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":6711,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10903:6:22","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6697,"src":"10899:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":6714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6704,"src":"10919:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10911:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":6712,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10911:7:22","typeDescriptions":{}}},"id":6715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10911:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6226_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6709,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6268,"src":"10894:4:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$6226_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":6716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10894:32:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6708,"id":6717,"nodeType":"Return","src":"10887:39:22"}]},"documentation":{"id":6699,"nodeType":"StructuredDocumentation","src":"10640:159:22","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":6719,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10813:3:22","nodeType":"FunctionDefinition","parameters":{"id":6705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6702,"mutability":"mutable","name":"set","nameLocation":"10833:3:22","nodeType":"VariableDeclaration","scope":6719,"src":"10817:19:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6698_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":6701,"nodeType":"UserDefinedTypeName","pathNode":{"id":6700,"name":"UintSet","nameLocations":["10817:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":6698,"src":"10817:7:22"},"referencedDeclaration":6698,"src":"10817:7:22","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6698_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":6704,"mutability":"mutable","name":"value","nameLocation":"10846:5:22","nodeType":"VariableDeclaration","scope":6719,"src":"10838:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6703,"name":"uint256","nodeType":"ElementaryTypeName","src":"10838:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10816:36:22"},"returnParameters":{"id":6708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6719,"src":"10871:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6706,"name":"bool","nodeType":"ElementaryTypeName","src":"10871:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10870:6:22"},"scope":6828,"src":"10804:129:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6739,"nodeType":"Block","src":"11177:59:22","statements":[{"expression":{"arguments":[{"expression":{"id":6731,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6723,"src":"11202:3:22","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6698_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":6732,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11206:6:22","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6697,"src":"11202:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":6735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6725,"src":"11222:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11214:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":6733,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11214:7:22","typeDescriptions":{}}},"id":6736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11214:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6226_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6730,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6352,"src":"11194:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$6226_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":6737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11194:35:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6729,"id":6738,"nodeType":"Return","src":"11187:42:22"}]},"documentation":{"id":6720,"nodeType":"StructuredDocumentation","src":"10939:157:22","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":6740,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11110:6:22","nodeType":"FunctionDefinition","parameters":{"id":6726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6723,"mutability":"mutable","name":"set","nameLocation":"11133:3:22","nodeType":"VariableDeclaration","scope":6740,"src":"11117:19:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6698_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":6722,"nodeType":"UserDefinedTypeName","pathNode":{"id":6721,"name":"UintSet","nameLocations":["11117:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":6698,"src":"11117:7:22"},"referencedDeclaration":6698,"src":"11117:7:22","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6698_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":6725,"mutability":"mutable","name":"value","nameLocation":"11146:5:22","nodeType":"VariableDeclaration","scope":6740,"src":"11138:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6724,"name":"uint256","nodeType":"ElementaryTypeName","src":"11138:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11116:36:22"},"returnParameters":{"id":6729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6728,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6740,"src":"11171:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6727,"name":"bool","nodeType":"ElementaryTypeName","src":"11171:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11170:6:22"},"scope":6828,"src":"11101:135:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6760,"nodeType":"Block","src":"11400:61:22","statements":[{"expression":{"arguments":[{"expression":{"id":6752,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6744,"src":"11427:3:22","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6698_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":6753,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11431:6:22","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6697,"src":"11427:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":6756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"11447:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11439:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":6754,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11439:7:22","typeDescriptions":{}}},"id":6757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11439:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6226_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6751,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"11417:9:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6226_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":6758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11417:37:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6750,"id":6759,"nodeType":"Return","src":"11410:44:22"}]},"documentation":{"id":6741,"nodeType":"StructuredDocumentation","src":"11242:70:22","text":" @dev Returns true if the value is in the set. O(1)."},"id":6761,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11326:8:22","nodeType":"FunctionDefinition","parameters":{"id":6747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6744,"mutability":"mutable","name":"set","nameLocation":"11351:3:22","nodeType":"VariableDeclaration","scope":6761,"src":"11335:19:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6698_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":6743,"nodeType":"UserDefinedTypeName","pathNode":{"id":6742,"name":"UintSet","nameLocations":["11335:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":6698,"src":"11335:7:22"},"referencedDeclaration":6698,"src":"11335:7:22","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6698_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":6746,"mutability":"mutable","name":"value","nameLocation":"11364:5:22","nodeType":"VariableDeclaration","scope":6761,"src":"11356:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6745,"name":"uint256","nodeType":"ElementaryTypeName","src":"11356:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11334:36:22"},"returnParameters":{"id":6750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6749,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6761,"src":"11394:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6748,"name":"bool","nodeType":"ElementaryTypeName","src":"11394:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11393:6:22"},"scope":6828,"src":"11317:144:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6775,"nodeType":"Block","src":"11611:43:22","statements":[{"expression":{"arguments":[{"expression":{"id":6771,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6765,"src":"11636:3:22","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6698_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":6772,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11640:6:22","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6697,"src":"11636:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6226_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":6770,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6385,"src":"11628:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6226_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":6773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6769,"id":6774,"nodeType":"Return","src":"11621:26:22"}]},"documentation":{"id":6762,"nodeType":"StructuredDocumentation","src":"11467:70:22","text":" @dev Returns the number of values in the set. O(1)."},"id":6776,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11551:6:22","nodeType":"FunctionDefinition","parameters":{"id":6766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6765,"mutability":"mutable","name":"set","nameLocation":"11574:3:22","nodeType":"VariableDeclaration","scope":6776,"src":"11558:19:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6698_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":6764,"nodeType":"UserDefinedTypeName","pathNode":{"id":6763,"name":"UintSet","nameLocations":["11558:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":6698,"src":"11558:7:22"},"referencedDeclaration":6698,"src":"11558:7:22","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6698_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"11557:21:22"},"returnParameters":{"id":6769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6768,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6776,"src":"11602:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6767,"name":"uint256","nodeType":"ElementaryTypeName","src":"11602:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11601:9:22"},"scope":6828,"src":"11542:112:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6796,"nodeType":"Block","src":"12076:55:22","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":6790,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6780,"src":"12105:3:22","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6698_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":6791,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12109:6:22","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6697,"src":"12105:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":6792,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6782,"src":"12117:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6226_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6789,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6402,"src":"12101:3:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6226_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":6793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12101:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12093:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6787,"name":"uint256","nodeType":"ElementaryTypeName","src":"12093:7:22","typeDescriptions":{}}},"id":6794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12093:31:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6786,"id":6795,"nodeType":"Return","src":"12086:38:22"}]},"documentation":{"id":6777,"nodeType":"StructuredDocumentation","src":"11660:331:22","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":6797,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"12005:2:22","nodeType":"FunctionDefinition","parameters":{"id":6783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6780,"mutability":"mutable","name":"set","nameLocation":"12024:3:22","nodeType":"VariableDeclaration","scope":6797,"src":"12008:19:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6698_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":6779,"nodeType":"UserDefinedTypeName","pathNode":{"id":6778,"name":"UintSet","nameLocations":["12008:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":6698,"src":"12008:7:22"},"referencedDeclaration":6698,"src":"12008:7:22","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6698_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":6782,"mutability":"mutable","name":"index","nameLocation":"12037:5:22","nodeType":"VariableDeclaration","scope":6797,"src":"12029:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6781,"name":"uint256","nodeType":"ElementaryTypeName","src":"12029:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12007:36:22"},"returnParameters":{"id":6786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6797,"src":"12067:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6784,"name":"uint256","nodeType":"ElementaryTypeName","src":"12067:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12066:9:22"},"scope":6828,"src":"11996:135:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6826,"nodeType":"Block","src":"12749:219:22","statements":[{"assignments":[6811],"declarations":[{"constant":false,"id":6811,"mutability":"mutable","name":"store","nameLocation":"12776:5:22","nodeType":"VariableDeclaration","scope":6826,"src":"12759:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6809,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12759:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6810,"nodeType":"ArrayTypeName","src":"12759:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":6816,"initialValue":{"arguments":[{"expression":{"id":6813,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6801,"src":"12792:3:22","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6698_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":6814,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12796:6:22","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6697,"src":"12792:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6226_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6226_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":6812,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"12784:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6226_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":6815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12784:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12759:44:22"},{"assignments":[6821],"declarations":[{"constant":false,"id":6821,"mutability":"mutable","name":"result","nameLocation":"12830:6:22","nodeType":"VariableDeclaration","scope":6826,"src":"12813:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6819,"name":"uint256","nodeType":"ElementaryTypeName","src":"12813:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6820,"nodeType":"ArrayTypeName","src":"12813:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":6822,"nodeType":"VariableDeclarationStatement","src":"12813:23:22"},{"AST":{"nativeSrc":"12899:39:22","nodeType":"YulBlock","src":"12899:39:22","statements":[{"nativeSrc":"12913:15:22","nodeType":"YulAssignment","src":"12913:15:22","value":{"name":"store","nativeSrc":"12923:5:22","nodeType":"YulIdentifier","src":"12923:5:22"},"variableNames":[{"name":"result","nativeSrc":"12913:6:22","nodeType":"YulIdentifier","src":"12913:6:22"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":6821,"isOffset":false,"isSlot":false,"src":"12913:6:22","valueSize":1},{"declaration":6811,"isOffset":false,"isSlot":false,"src":"12923:5:22","valueSize":1}],"id":6823,"nodeType":"InlineAssembly","src":"12890:48:22"},{"expression":{"id":6824,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"12955:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":6806,"id":6825,"nodeType":"Return","src":"12948:13:22"}]},"documentation":{"id":6798,"nodeType":"StructuredDocumentation","src":"12137:529:22","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":6827,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12680:6:22","nodeType":"FunctionDefinition","parameters":{"id":6802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6801,"mutability":"mutable","name":"set","nameLocation":"12703:3:22","nodeType":"VariableDeclaration","scope":6827,"src":"12687:19:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6698_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":6800,"nodeType":"UserDefinedTypeName","pathNode":{"id":6799,"name":"UintSet","nameLocations":["12687:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":6698,"src":"12687:7:22"},"referencedDeclaration":6698,"src":"12687:7:22","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6698_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12686:21:22"},"returnParameters":{"id":6806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6827,"src":"12731:16:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6803,"name":"uint256","nodeType":"ElementaryTypeName","src":"12731:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6804,"nodeType":"ArrayTypeName","src":"12731:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12730:18:22"},"scope":6828,"src":"12671:297:22","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":6829,"src":"1330:11640:22","usedErrors":[],"usedEvents":[]}],"src":"205:12766:22"},"id":22},"contracts/AraraCoin.sol":{"ast":{"absolutePath":"contracts/AraraCoin.sol","exportedSymbols":{"AraraCoin":[7275],"Context":[2002],"ECDSA":[3000],"EIP712":[3227],"ERC20":[1135],"ERC20Permit":[1367],"EnumerableSet":[6828],"IERC20":[1213],"IERC20Errors":[525],"IERC20Metadata":[1393],"IERC20Permit":[1429],"ITaxHandler":[7403],"Nonces":[2070],"Ownable":[147]},"id":7276,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6830,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"81:24:23"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":6831,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7276,"sourceUnit":1136,"src":"107:55:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":6832,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7276,"sourceUnit":1368,"src":"163:72:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":6833,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7276,"sourceUnit":148,"src":"236:52:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","id":6834,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7276,"sourceUnit":6829,"src":"289:65:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/tax/ITaxHandler.sol","file":"./tax/ITaxHandler.sol","id":6835,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7276,"sourceUnit":7404,"src":"357:31:23","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6836,"name":"ERC20","nameLocations":["412:5:23"],"nodeType":"IdentifierPath","referencedDeclaration":1135,"src":"412:5:23"},"id":6837,"nodeType":"InheritanceSpecifier","src":"412:5:23"},{"baseName":{"id":6838,"name":"ERC20Permit","nameLocations":["419:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":1367,"src":"419:11:23"},"id":6839,"nodeType":"InheritanceSpecifier","src":"419:11:23"},{"baseName":{"id":6840,"name":"Ownable","nameLocations":["432:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"432:7:23"},"id":6841,"nodeType":"InheritanceSpecifier","src":"432:7:23"}],"canonicalName":"AraraCoin","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7275,"linearizedBaseContracts":[7275,147,1367,2070,3227,483,1429,1135,525,1393,1213,2002],"name":"AraraCoin","nameLocation":"399:9:23","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"fca6172f","id":6844,"mutability":"mutable","name":"thirdPartyServices","nameLocation":"461:18:23","nodeType":"VariableDeclaration","scope":7275,"src":"446:78:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6842,"name":"address","nodeType":"ElementaryTypeName","src":"446:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307837303939373937304335313831326463334130313043376430316235306530643137646337394338","id":6843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"482:42:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x70997970C51812dc3A010C7d01b50e0d17dc79C8"},"visibility":"public"},{"constant":false,"functionSelector":"5a7adf7f","id":6847,"mutability":"mutable","name":"preSale","nameLocation":"545:7:23","nodeType":"VariableDeclaration","scope":7275,"src":"530:67:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6845,"name":"address","nodeType":"ElementaryTypeName","src":"530:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307833433434436444644236613930306661326235383564643239396530336431324641343239334243","id":6846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"555:42:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC"},"visibility":"public"},{"constant":false,"functionSelector":"bbaa49da","id":6850,"mutability":"mutable","name":"initialLaunch","nameLocation":"618:13:23","nodeType":"VariableDeclaration","scope":7275,"src":"603:73:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6848,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307839304637396266364542326334663837303336354537383539383245316631303145393362393036","id":6849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"634:42:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x90F79bf6EB2c4f870365E785982E1f101E93b906"},"visibility":"public"},{"constant":false,"functionSelector":"8ac27f5f","id":6853,"mutability":"mutable","name":"investors","nameLocation":"697:9:23","nodeType":"VariableDeclaration","scope":7275,"src":"682:69:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6851,"name":"address","nodeType":"ElementaryTypeName","src":"682:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307831356433344141663534323637444237443763333637383339414166373141303061324336413635","id":6852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"709:42:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x15d34AAf54267DB7D7c367839AAf71A00a2C6A65"},"visibility":"public"},{"constant":false,"functionSelector":"c519099d","id":6856,"mutability":"mutable","name":"teamAndFounders","nameLocation":"772:15:23","nodeType":"VariableDeclaration","scope":7275,"src":"757:75:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6854,"name":"address","nodeType":"ElementaryTypeName","src":"757:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307839393635353037443161353562634332363935433538626131364642333764383139423041346463","id":6855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"790:42:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x9965507D1a55bcC2695C58ba16FB37d819B0A4dc"},"visibility":"public"},{"constant":false,"functionSelector":"7edd9e5e","id":6859,"mutability":"mutable","name":"preservationProjects","nameLocation":"853:20:23","nodeType":"VariableDeclaration","scope":7275,"src":"838:80:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6857,"name":"address","nodeType":"ElementaryTypeName","src":"838:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307839373645413734303236453732363535346442363537664135343736336162643043336130616139","id":6858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"876:42:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x976EA74026E726554dB657fA54763abd0C3a0aa9"},"visibility":"public"},{"constant":true,"id":6866,"mutability":"constant","name":"TOTAL_SUPPLY","nameLocation":"949:12:23","nodeType":"VariableDeclaration","scope":7275,"src":"924:66:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6860,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000_by_1","typeString":"int_const 100000000000000000000000000000"},"id":6865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130305f3030305f3030305f303030","id":6861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"964:15:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000000_by_1","typeString":"int_const 100000000000"},"value":"100_000_000_000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":6864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"982:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":6863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"988:2:23","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"982:8:23","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"964:26:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000_by_1","typeString":"int_const 100000000000000000000000000000"}},"visibility":"private"},{"constant":false,"functionSelector":"12280ba8","id":6869,"mutability":"mutable","name":"taxHandler","nameLocation":"1020:10:23","nodeType":"VariableDeclaration","scope":7275,"src":"1001:29:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ITaxHandler_$7403","typeString":"contract ITaxHandler"},"typeName":{"id":6868,"nodeType":"UserDefinedTypeName","pathNode":{"id":6867,"name":"ITaxHandler","nameLocations":["1001:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":7403,"src":"1001:11:23"},"referencedDeclaration":7403,"src":"1001:11:23","typeDescriptions":{"typeIdentifier":"t_contract$_ITaxHandler_$7403","typeString":"contract ITaxHandler"}},"visibility":"public"},{"constant":false,"functionSelector":"4ada218b","id":6871,"mutability":"mutable","name":"tradingEnabled","nameLocation":"1048:14:23","nodeType":"VariableDeclaration","scope":7275,"src":"1036:26:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6870,"name":"bool","nodeType":"ElementaryTypeName","src":"1036:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"global":false,"id":6875,"libraryName":{"id":6872,"name":"EnumerableSet","nameLocations":["1079:13:23"],"nodeType":"IdentifierPath","referencedDeclaration":6828,"src":"1079:13:23"},"nodeType":"UsingForDirective","src":"1073:49:23","typeName":{"id":6874,"nodeType":"UserDefinedTypeName","pathNode":{"id":6873,"name":"EnumerableSet.AddressSet","nameLocations":["1097:13:23","1111:10:23"],"nodeType":"IdentifierPath","referencedDeclaration":6541,"src":"1097:24:23"},"referencedDeclaration":6541,"src":"1097:24:23","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6541_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"constant":false,"documentation":{"id":6876,"nodeType":"StructuredDocumentation","src":"1127:46:23","text":"@dev The set of addresses exempt from tax."},"id":6879,"mutability":"mutable","name":"_canTrade","nameLocation":"1211:9:23","nodeType":"VariableDeclaration","scope":7275,"src":"1178:42:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6541_storage","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":6878,"nodeType":"UserDefinedTypeName","pathNode":{"id":6877,"name":"EnumerableSet.AddressSet","nameLocations":["1178:13:23","1192:10:23"],"nodeType":"IdentifierPath","referencedDeclaration":6541,"src":"1178:24:23"},"referencedDeclaration":6541,"src":"1178:24:23","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6541_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"private"},{"anonymous":false,"eventSelector":"799663458a5ef2936f7fa0c99b3336c69c25890f82974f04e811e5bb359186c7","id":6881,"name":"TradingEnabled","nameLocation":"1237:14:23","nodeType":"EventDefinition","parameters":{"id":6880,"nodeType":"ParameterList","parameters":[],"src":"1251:2:23"},"src":"1231:23:23"},{"anonymous":false,"documentation":{"id":6882,"nodeType":"StructuredDocumentation","src":"1259:61:23","text":"@notice Emitted when the tax handler contract is changed."},"eventSelector":"00d910c9481701ba32afe0c247572aaece27072f230c8ec769bf245fc0b38de6","id":6888,"name":"TaxHandlerChanged","nameLocation":"1331:17:23","nodeType":"EventDefinition","parameters":{"id":6887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6884,"indexed":false,"mutability":"mutable","name":"oldAddress","nameLocation":"1357:10:23","nodeType":"VariableDeclaration","scope":6888,"src":"1349:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6883,"name":"address","nodeType":"ElementaryTypeName","src":"1349:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6886,"indexed":false,"mutability":"mutable","name":"newAddress","nameLocation":"1377:10:23","nodeType":"VariableDeclaration","scope":6888,"src":"1369:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6885,"name":"address","nodeType":"ElementaryTypeName","src":"1369:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1348:40:23"},"src":"1325:64:23"},{"body":{"id":7000,"nodeType":"Block","src":"1589:768:23","statements":[{"expression":{"id":6911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6907,"name":"taxHandler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6869,"src":"1599:10:23","typeDescriptions":{"typeIdentifier":"t_contract$_ITaxHandler_$7403","typeString":"contract ITaxHandler"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6909,"name":"taxHandlerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6892,"src":"1624:17:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6908,"name":"ITaxHandler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7403,"src":"1612:11:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ITaxHandler_$7403_$","typeString":"type(contract ITaxHandler)"}},"id":6910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1612:30:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ITaxHandler_$7403","typeString":"contract ITaxHandler"}},"src":"1599:43:23","typeDescriptions":{"typeIdentifier":"t_contract$_ITaxHandler_$7403","typeString":"contract ITaxHandler"}},"id":6912,"nodeType":"ExpressionStatement","src":"1599:43:23"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":6918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1674:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1666:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6916,"name":"address","nodeType":"ElementaryTypeName","src":"1666:7:23","typeDescriptions":{}}},"id":6919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1666:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6913,"name":"_canTrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6879,"src":"1652:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6541_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":6915,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1662:3:23","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":6568,"src":"1652:13:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$6541_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$6541_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":6920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1652:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6921,"nodeType":"ExpressionStatement","src":"1652:25:23"},{"expression":{"arguments":[{"id":6925,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6890,"src":"1701:12:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6922,"name":"_canTrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6879,"src":"1687:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6541_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":6924,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1697:3:23","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":6568,"src":"1687:13:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$6541_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$6541_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":6926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1687:27:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6927,"nodeType":"ExpressionStatement","src":"1687:27:23"},{"expression":{"arguments":[{"expression":{"id":6929,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1738:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1742:6:23","memberName":"sender","nodeType":"MemberAccess","src":"1738:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6931,"name":"TOTAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"1750:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6928,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"1732:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1732:31:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6933,"nodeType":"ExpressionStatement","src":"1732:31:23"},{"expression":{"arguments":[{"expression":{"id":6935,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1791:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1795:6:23","memberName":"sender","nodeType":"MemberAccess","src":"1791:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6937,"name":"thirdPartyServices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6844,"src":"1803:18:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":6938,"name":"TOTAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"1823:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"35","id":6939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1838:1:23","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"1823:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":6941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1842:3:23","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"1823:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6934,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"1781:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1781:65:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6944,"nodeType":"ExpressionStatement","src":"1781:65:23"},{"expression":{"arguments":[{"expression":{"id":6946,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1875:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1879:6:23","memberName":"sender","nodeType":"MemberAccess","src":"1875:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6948,"name":"preSale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6847,"src":"1887:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":6949,"name":"TOTAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"1897:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130","id":6950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1912:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1897:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":6952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1917:3:23","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"1897:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6945,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"1865:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1865:56:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6955,"nodeType":"ExpressionStatement","src":"1865:56:23"},{"expression":{"arguments":[{"expression":{"id":6957,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1950:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1954:6:23","memberName":"sender","nodeType":"MemberAccess","src":"1950:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6959,"name":"initialLaunch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6850,"src":"1962:13:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":6960,"name":"TOTAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"1978:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3230","id":6961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1993:2:23","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"1978:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":6963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1998:3:23","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"1978:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6956,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"1940:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1940:62:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6966,"nodeType":"ExpressionStatement","src":"1940:62:23"},{"expression":{"arguments":[{"expression":{"id":6968,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2031:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2035:6:23","memberName":"sender","nodeType":"MemberAccess","src":"2031:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6970,"name":"investors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6853,"src":"2043:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":6971,"name":"TOTAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"2055:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3235","id":6972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2070:2:23","typeDescriptions":{"typeIdentifier":"t_rational_25_by_1","typeString":"int_const 25"},"value":"25"},"src":"2055:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":6974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2075:3:23","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"2055:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6967,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"2021:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2021:58:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6977,"nodeType":"ExpressionStatement","src":"2021:58:23"},{"expression":{"arguments":[{"expression":{"id":6979,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2193:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2197:6:23","memberName":"sender","nodeType":"MemberAccess","src":"2193:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6981,"name":"teamAndFoundersVesting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"2205:22:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":6982,"name":"TOTAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"2230:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3230","id":6983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2245:2:23","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"2230:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":6985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2250:3:23","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"2230:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6978,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"2183:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2183:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6988,"nodeType":"ExpressionStatement","src":"2183:71:23"},{"expression":{"arguments":[{"expression":{"id":6990,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2283:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2287:6:23","memberName":"sender","nodeType":"MemberAccess","src":"2283:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6992,"name":"preservationProjects","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6859,"src":"2295:20:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":6993,"name":"TOTAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"2317:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3230","id":6994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2332:2:23","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"2317:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":6996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2337:3:23","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"2317:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6989,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"2273:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:68:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6999,"nodeType":"ExpressionStatement","src":"2273:68:23"}]},"id":7001,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4172617261436f696e","id":6897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1502:11:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_2b3aecf7df38790a64aa47cac0f329e66520f4ad81720e4761e93ce9fb854278","typeString":"literal_string \"AraraCoin\""},"value":"AraraCoin"},{"hexValue":"415241","id":6898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1515:5:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_f7d1bec9d15d3a46b94945959edf7e342087ba88f1ee67d68e32022c75ae2f07","typeString":"literal_string \"ARA\""},"value":"ARA"}],"id":6899,"kind":"baseConstructorSpecifier","modifierName":{"id":6896,"name":"ERC20","nameLocations":["1496:5:23"],"nodeType":"IdentifierPath","referencedDeclaration":1135,"src":"1496:5:23"},"nodeType":"ModifierInvocation","src":"1496:25:23"},{"arguments":[{"hexValue":"4172617261436f696e","id":6901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1542:11:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_2b3aecf7df38790a64aa47cac0f329e66520f4ad81720e4761e93ce9fb854278","typeString":"literal_string \"AraraCoin\""},"value":"AraraCoin"}],"id":6902,"kind":"baseConstructorSpecifier","modifierName":{"id":6900,"name":"ERC20Permit","nameLocations":["1530:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":1367,"src":"1530:11:23"},"nodeType":"ModifierInvocation","src":"1530:24:23"},{"arguments":[{"id":6904,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6890,"src":"1571:12:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6905,"kind":"baseConstructorSpecifier","modifierName":{"id":6903,"name":"Ownable","nameLocations":["1563:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1563:7:23"},"nodeType":"ModifierInvocation","src":"1563:21:23"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6890,"mutability":"mutable","name":"initialOwner","nameLocation":"1415:12:23","nodeType":"VariableDeclaration","scope":7001,"src":"1407:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6889,"name":"address","nodeType":"ElementaryTypeName","src":"1407:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6892,"mutability":"mutable","name":"taxHandlerAddress","nameLocation":"1437:17:23","nodeType":"VariableDeclaration","scope":7001,"src":"1429:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6891,"name":"address","nodeType":"ElementaryTypeName","src":"1429:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6894,"mutability":"mutable","name":"teamAndFoundersVesting","nameLocation":"1464:22:23","nodeType":"VariableDeclaration","scope":7001,"src":"1456:30:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6893,"name":"address","nodeType":"ElementaryTypeName","src":"1456:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1406:81:23"},"returnParameters":{"id":6906,"nodeType":"ParameterList","parameters":[],"src":"1589:0:23"},"scope":7275,"src":"1395:962:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7019,"nodeType":"Block","src":"2407:140:23","statements":[{"expression":{"arguments":[{"id":7008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2425:15:23","subExpression":{"id":7007,"name":"tradingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6871,"src":"2426:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4172617261436f696e2074726164696e6720616c726561647920656e61626c6564","id":7009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2442:35:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4","typeString":"literal_string \"AraraCoin trading already enabled\""},"value":"AraraCoin trading already enabled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4","typeString":"literal_string \"AraraCoin trading already enabled\""}],"id":7006,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2417:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2417:61:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7011,"nodeType":"ExpressionStatement","src":"2417:61:23"},{"expression":{"id":7014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7012,"name":"tradingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6871,"src":"2488:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2505:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2488:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7015,"nodeType":"ExpressionStatement","src":"2488:21:23"},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7016,"name":"TradingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6881,"src":"2524:14:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2524:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7018,"nodeType":"EmitStatement","src":"2519:21:23"}]},"functionSelector":"8a8c523c","id":7020,"implemented":true,"kind":"function","modifiers":[{"id":7004,"kind":"modifierInvocation","modifierName":{"id":7003,"name":"onlyOwner","nameLocations":["2397:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2397:9:23"},"nodeType":"ModifierInvocation","src":"2397:9:23"}],"name":"enableTrading","nameLocation":"2372:13:23","nodeType":"FunctionDefinition","parameters":{"id":7002,"nodeType":"ParameterList","parameters":[],"src":"2385:2:23"},"returnParameters":{"id":7005,"nodeType":"ParameterList","parameters":[],"src":"2407:0:23"},"scope":7275,"src":"2363:184:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7045,"nodeType":"Block","src":"2622:194:23","statements":[{"assignments":[7028],"declarations":[{"constant":false,"id":7028,"mutability":"mutable","name":"oldTaxHandlerAddress","nameLocation":"2640:20:23","nodeType":"VariableDeclaration","scope":7045,"src":"2632:28:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7027,"name":"address","nodeType":"ElementaryTypeName","src":"2632:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7033,"initialValue":{"arguments":[{"id":7031,"name":"taxHandler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6869,"src":"2671:10:23","typeDescriptions":{"typeIdentifier":"t_contract$_ITaxHandler_$7403","typeString":"contract ITaxHandler"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ITaxHandler_$7403","typeString":"contract ITaxHandler"}],"id":7030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2663:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7029,"name":"address","nodeType":"ElementaryTypeName","src":"2663:7:23","typeDescriptions":{}}},"id":7032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2663:19:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2632:50:23"},{"expression":{"id":7038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7034,"name":"taxHandler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6869,"src":"2692:10:23","typeDescriptions":{"typeIdentifier":"t_contract$_ITaxHandler_$7403","typeString":"contract ITaxHandler"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7036,"name":"taxHandlerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7022,"src":"2717:17:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7035,"name":"ITaxHandler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7403,"src":"2705:11:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ITaxHandler_$7403_$","typeString":"type(contract ITaxHandler)"}},"id":7037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2705:30:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ITaxHandler_$7403","typeString":"contract ITaxHandler"}},"src":"2692:43:23","typeDescriptions":{"typeIdentifier":"t_contract$_ITaxHandler_$7403","typeString":"contract ITaxHandler"}},"id":7039,"nodeType":"ExpressionStatement","src":"2692:43:23"},{"eventCall":{"arguments":[{"id":7041,"name":"oldTaxHandlerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7028,"src":"2769:20:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7042,"name":"taxHandlerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7022,"src":"2791:17:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7040,"name":"TaxHandlerChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6888,"src":"2751:17:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":7043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:58:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7044,"nodeType":"EmitStatement","src":"2746:63:23"}]},"functionSelector":"488d4a51","id":7046,"implemented":true,"kind":"function","modifiers":[{"id":7025,"kind":"modifierInvocation","modifierName":{"id":7024,"name":"onlyOwner","nameLocations":["2612:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2612:9:23"},"nodeType":"ModifierInvocation","src":"2612:9:23"}],"name":"setTaxHandler","nameLocation":"2562:13:23","nodeType":"FunctionDefinition","parameters":{"id":7023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7022,"mutability":"mutable","name":"taxHandlerAddress","nameLocation":"2584:17:23","nodeType":"VariableDeclaration","scope":7046,"src":"2576:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7021,"name":"address","nodeType":"ElementaryTypeName","src":"2576:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2575:27:23"},"returnParameters":{"id":7026,"nodeType":"ParameterList","parameters":[],"src":"2622:0:23"},"scope":7275,"src":"2553:263:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7089,"nodeType":"Block","src":"2913:269:23","statements":[{"expression":{"arguments":[{"id":7056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2931:15:23","subExpression":{"id":7055,"name":"tradingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6871,"src":"2932:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5447433a2074726164696e6720616c726561647920656e61626c6564","id":7057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2948:30:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_24cf83481f2a8ba90e1c3f2ad6b040e1487e7c57c8c9c5939238bafe3879f015","typeString":"literal_string \"TGC: trading already enabled\""},"value":"TGC: trading already enabled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24cf83481f2a8ba90e1c3f2ad6b040e1487e7c57c8c9c5939238bafe3879f015","typeString":"literal_string \"TGC: trading already enabled\""}],"id":7054,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2923:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2923:56:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7059,"nodeType":"ExpressionStatement","src":"2923:56:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7061,"name":"allowedAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7049,"src":"2997:16:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":7062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3014:6:23","memberName":"length","nodeType":"MemberAccess","src":"2997:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3024:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2997:28:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5447433a20696e76616c696420706172616d6574657273","id":7065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3027:25:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_ba7cd66ed381e90a6a6f5c81315eeba2f99d0bb92ba7388f35e237d2bf061d88","typeString":"literal_string \"TGC: invalid parameters\""},"value":"TGC: invalid parameters"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ba7cd66ed381e90a6a6f5c81315eeba2f99d0bb92ba7388f35e237d2bf061d88","typeString":"literal_string \"TGC: invalid parameters\""}],"id":7060,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2989:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2989:64:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7067,"nodeType":"ExpressionStatement","src":"2989:64:23"},{"body":{"id":7087,"nodeType":"Block","src":"3117:59:23","statements":[{"expression":{"arguments":[{"baseExpression":{"id":7082,"name":"allowedAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7049,"src":"3145:16:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":7084,"indexExpression":{"id":7083,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7069,"src":"3162:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3145:19:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7079,"name":"_canTrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6879,"src":"3131:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6541_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":7081,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3141:3:23","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":6568,"src":"3131:13:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$6541_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$6541_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":7085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3131:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7086,"nodeType":"ExpressionStatement","src":"3131:34:23"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7072,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7069,"src":"3083:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7073,"name":"allowedAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7049,"src":"3087:16:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":7074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3104:6:23","memberName":"length","nodeType":"MemberAccess","src":"3087:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3083:27:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7088,"initializationExpression":{"assignments":[7069],"declarations":[{"constant":false,"id":7069,"mutability":"mutable","name":"i","nameLocation":"3076:1:23","nodeType":"VariableDeclaration","scope":7088,"src":"3068:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7068,"name":"uint256","nodeType":"ElementaryTypeName","src":"3068:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7071,"initialValue":{"hexValue":"30","id":7070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3080:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3068:13:23"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3112:3:23","subExpression":{"id":7076,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7069,"src":"3112:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7078,"nodeType":"ExpressionStatement","src":"3112:3:23"},"nodeType":"ForStatement","src":"3063:113:23"}]},"functionSelector":"ca40f1c4","id":7090,"implemented":true,"kind":"function","modifiers":[{"id":7052,"kind":"modifierInvocation","modifierName":{"id":7051,"name":"onlyOwner","nameLocations":["2903:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2903:9:23"},"nodeType":"ModifierInvocation","src":"2903:9:23"}],"name":"addCanTrade","nameLocation":"2831:11:23","nodeType":"FunctionDefinition","parameters":{"id":7050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7049,"mutability":"mutable","name":"allowedAddresses","nameLocation":"2871:16:23","nodeType":"VariableDeclaration","scope":7090,"src":"2852:35:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7047,"name":"address","nodeType":"ElementaryTypeName","src":"2852:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7048,"nodeType":"ArrayTypeName","src":"2852:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2842:51:23"},"returnParameters":{"id":7053,"nodeType":"ParameterList","parameters":[],"src":"2913:0:23"},"scope":7275,"src":"2822:360:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[942],"body":{"id":7145,"nodeType":"Block","src":"3292:318:23","statements":[{"condition":{"id":7102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3306:15:23","subExpression":{"id":7101,"name":"tradingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6871,"src":"3307:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7112,"nodeType":"IfStatement","src":"3302:110:23","trueBody":{"id":7111,"nodeType":"Block","src":"3323:89:23","statements":[{"expression":{"arguments":[{"arguments":[{"id":7106,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7092,"src":"3364:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7104,"name":"_canTrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6879,"src":"3345:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6541_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":7105,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3355:8:23","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":6622,"src":"3345:18:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$6541_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$6541_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"}},"id":7107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3345:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4172617261436f696e2074726164652069732064697361626c6564","id":7108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3371:29:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7","typeString":"literal_string \"AraraCoin trade is disabled\""},"value":"AraraCoin trade is disabled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7","typeString":"literal_string \"AraraCoin trade is disabled\""}],"id":7103,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3337:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3337:64:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7110,"nodeType":"ExpressionStatement","src":"3337:64:23"}]}},{"assignments":[7114],"declarations":[{"constant":false,"id":7114,"mutability":"mutable","name":"tax","nameLocation":"3430:3:23","nodeType":"VariableDeclaration","scope":7145,"src":"3422:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7113,"name":"uint256","nodeType":"ElementaryTypeName","src":"3422:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7121,"initialValue":{"arguments":[{"id":7117,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7092,"src":"3454:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7118,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7094,"src":"3460:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7119,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7096,"src":"3464:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7115,"name":"taxHandler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6869,"src":"3436:10:23","typeDescriptions":{"typeIdentifier":"t_contract$_ITaxHandler_$7403","typeString":"contract ITaxHandler"}},"id":7116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3447:6:23","memberName":"getTax","nodeType":"MemberAccess","referencedDeclaration":7402,"src":"3436:17:23","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view external returns (uint256)"}},"id":7120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3436:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3422:48:23"},{"assignments":[7123],"declarations":[{"constant":false,"id":7123,"mutability":"mutable","name":"taxedAmount","nameLocation":"3488:11:23","nodeType":"VariableDeclaration","scope":7145,"src":"3480:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7122,"name":"uint256","nodeType":"ElementaryTypeName","src":"3480:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7127,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7096,"src":"3502:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7125,"name":"tax","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"3510:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3502:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3480:33:23"},{"expression":{"arguments":[{"id":7131,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7092,"src":"3538:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":7132,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"3544:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3544:7:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7134,"name":"tax","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"3553:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7128,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3524:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AraraCoin_$7275_$","typeString":"type(contract super AraraCoin)"}},"id":7130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3530:7:23","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":942,"src":"3524:13:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3524:33:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7136,"nodeType":"ExpressionStatement","src":"3524:33:23"},{"expression":{"arguments":[{"id":7140,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7092,"src":"3581:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7141,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7094,"src":"3587:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7142,"name":"taxedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7123,"src":"3591:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7137,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3567:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AraraCoin_$7275_$","typeString":"type(contract super AraraCoin)"}},"id":7139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3573:7:23","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":942,"src":"3567:13:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3567:36:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7144,"nodeType":"ExpressionStatement","src":"3567:36:23"}]},"id":7146,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"3197:7:23","nodeType":"FunctionDefinition","overrides":{"id":7099,"nodeType":"OverrideSpecifier","overrides":[{"id":7098,"name":"ERC20","nameLocations":["3281:5:23"],"nodeType":"IdentifierPath","referencedDeclaration":1135,"src":"3281:5:23"}],"src":"3272:15:23"},"parameters":{"id":7097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7092,"mutability":"mutable","name":"from","nameLocation":"3213:4:23","nodeType":"VariableDeclaration","scope":7146,"src":"3205:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7091,"name":"address","nodeType":"ElementaryTypeName","src":"3205:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7094,"mutability":"mutable","name":"to","nameLocation":"3227:2:23","nodeType":"VariableDeclaration","scope":7146,"src":"3219:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7093,"name":"address","nodeType":"ElementaryTypeName","src":"3219:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7096,"mutability":"mutable","name":"value","nameLocation":"3239:5:23","nodeType":"VariableDeclaration","scope":7146,"src":"3231:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7095,"name":"uint256","nodeType":"ElementaryTypeName","src":"3231:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3204:41:23"},"returnParameters":{"id":7100,"nodeType":"ParameterList","parameters":[],"src":"3292:0:23"},"scope":7275,"src":"3188:422:23","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":7248,"nodeType":"Block","src":"3692:419:23","statements":[{"assignments":[7154],"declarations":[{"constant":false,"id":7154,"mutability":"mutable","name":"value","nameLocation":"3710:5:23","nodeType":"VariableDeclaration","scope":7248,"src":"3702:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7153,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3702:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7165,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":7161,"name":"_addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7148,"src":"3742:5:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3734:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":7159,"name":"uint160","nodeType":"ElementaryTypeName","src":"3734:7:23","typeDescriptions":{}}},"id":7162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3734:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":7158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3726:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7157,"name":"uint256","nodeType":"ElementaryTypeName","src":"3726:7:23","typeDescriptions":{}}},"id":7163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3726:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3718:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7155,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3718:7:23","typeDescriptions":{}}},"id":7164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3718:32:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3702:48:23"},{"assignments":[7167],"declarations":[{"constant":false,"id":7167,"mutability":"mutable","name":"alphabet","nameLocation":"3773:8:23","nodeType":"VariableDeclaration","scope":7248,"src":"3760:21:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7166,"name":"bytes","nodeType":"ElementaryTypeName","src":"3760:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":7169,"initialValue":{"hexValue":"30313233343536373839616263646566","id":7168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3784:18:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"nodeType":"VariableDeclarationStatement","src":"3760:42:23"},{"assignments":[7171],"declarations":[{"constant":false,"id":7171,"mutability":"mutable","name":"str","nameLocation":"3826:3:23","nodeType":"VariableDeclaration","scope":7248,"src":"3813:16:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7170,"name":"bytes","nodeType":"ElementaryTypeName","src":"3813:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":7176,"initialValue":{"arguments":[{"hexValue":"3432","id":7174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3842:2:23","typeDescriptions":{"typeIdentifier":"t_rational_42_by_1","typeString":"int_const 42"},"value":"42"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_42_by_1","typeString":"int_const 42"}],"id":7173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3832:9:23","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":7172,"name":"bytes","nodeType":"ElementaryTypeName","src":"3836:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":7175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3832:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3813:32:23"},{"expression":{"id":7181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7177,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7171,"src":"3855:3:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7179,"indexExpression":{"hexValue":"30","id":7178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3859:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3855:6:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":7180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3864:3:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"3855:12:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":7182,"nodeType":"ExpressionStatement","src":"3855:12:23"},{"expression":{"id":7187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7183,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7171,"src":"3877:3:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7185,"indexExpression":{"hexValue":"31","id":7184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3881:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3877:6:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":7186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3886:3:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"3877:12:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":7188,"nodeType":"ExpressionStatement","src":"3877:12:23"},{"body":{"id":7241,"nodeType":"Block","src":"3932:145:23","statements":[{"expression":{"id":7218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7199,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7171,"src":"3946:3:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7205,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":7200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3950:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7201,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7190,"src":"3954:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":7202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3958:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3954:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3950:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3946:14:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":7206,"name":"alphabet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7167,"src":"3963:8:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7217,"indexExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":7215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7209,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7154,"src":"3978:5:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7213,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7210,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7190,"src":"3984:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3132","id":7211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3988:2:23","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"src":"3984:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3978:13:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":7214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3995:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3978:18:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":7208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3972:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7207,"name":"uint8","nodeType":"ElementaryTypeName","src":"3972:5:23","typeDescriptions":{}}},"id":7216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3972:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3963:35:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"3946:52:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":7219,"nodeType":"ExpressionStatement","src":"3946:52:23"},{"expression":{"id":7239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7220,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7171,"src":"4012:3:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7226,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":7221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4016:1:23","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7222,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7190,"src":"4020:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":7223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4024:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4020:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4016:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4012:14:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":7227,"name":"alphabet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7167,"src":"4029:8:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7238,"indexExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":7236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7154,"src":"4044:5:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7234,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7231,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7190,"src":"4050:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3132","id":7232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4054:2:23","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"src":"4050:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4044:13:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783066","id":7235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4060:4:23","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0x0f"},"src":"4044:20:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":7229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4038:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7228,"name":"uint8","nodeType":"ElementaryTypeName","src":"4038:5:23","typeDescriptions":{}}},"id":7237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4038:27:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4029:37:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"4012:54:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":7240,"nodeType":"ExpressionStatement","src":"4012:54:23"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7193,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7190,"src":"3919:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3230","id":7194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3923:2:23","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"3919:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7242,"initializationExpression":{"assignments":[7190],"declarations":[{"constant":false,"id":7190,"mutability":"mutable","name":"i","nameLocation":"3912:1:23","nodeType":"VariableDeclaration","scope":7242,"src":"3904:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7189,"name":"uint256","nodeType":"ElementaryTypeName","src":"3904:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7192,"initialValue":{"hexValue":"30","id":7191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3916:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3904:13:23"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3927:3:23","subExpression":{"id":7196,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7190,"src":"3927:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7198,"nodeType":"ExpressionStatement","src":"3927:3:23"},"nodeType":"ForStatement","src":"3899:178:23"},{"expression":{"arguments":[{"id":7245,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7171,"src":"4100:3:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4093:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":7243,"name":"string","nodeType":"ElementaryTypeName","src":"4093:6:23","typeDescriptions":{}}},"id":7246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4093:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":7152,"id":7247,"nodeType":"Return","src":"4086:18:23"}]},"functionSelector":"5e57966d","id":7249,"implemented":true,"kind":"function","modifiers":[],"name":"addressToString","nameLocation":"3625:15:23","nodeType":"FunctionDefinition","parameters":{"id":7149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7148,"mutability":"mutable","name":"_addr","nameLocation":"3649:5:23","nodeType":"VariableDeclaration","scope":7249,"src":"3641:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7147,"name":"address","nodeType":"ElementaryTypeName","src":"3641:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3640:15:23"},"returnParameters":{"id":7152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7151,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7249,"src":"3677:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7150,"name":"string","nodeType":"ElementaryTypeName","src":"3677:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3676:15:23"},"scope":7275,"src":"3616:495:23","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":7273,"nodeType":"Block","src":"4226:119:23","statements":[{"assignments":[7259],"declarations":[{"constant":false,"id":7259,"mutability":"mutable","name":"addrStr","nameLocation":"4250:7:23","nodeType":"VariableDeclaration","scope":7273,"src":"4236:21:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7258,"name":"string","nodeType":"ElementaryTypeName","src":"4236:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":7263,"initialValue":{"arguments":[{"id":7261,"name":"_addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7251,"src":"4276:5:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7260,"name":"addressToString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7249,"src":"4260:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":7262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4260:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"4236:46:23"},{"expression":{"arguments":[{"arguments":[{"id":7268,"name":"addrStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7259,"src":"4323:7:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7269,"name":"_str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7253,"src":"4332:4:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":7266,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4306:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4310:12:23","memberName":"encodePacked","nodeType":"MemberAccess","src":"4306:16:23","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4306:31:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4299:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":7264,"name":"string","nodeType":"ElementaryTypeName","src":"4299:6:23","typeDescriptions":{}}},"id":7271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4299:39:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":7257,"id":7272,"nodeType":"Return","src":"4292:46:23"}]},"functionSelector":"9b75679c","id":7274,"implemented":true,"kind":"function","modifiers":[],"name":"concatenateAddressWithString","nameLocation":"4126:28:23","nodeType":"FunctionDefinition","parameters":{"id":7254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7251,"mutability":"mutable","name":"_addr","nameLocation":"4163:5:23","nodeType":"VariableDeclaration","scope":7274,"src":"4155:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7250,"name":"address","nodeType":"ElementaryTypeName","src":"4155:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7253,"mutability":"mutable","name":"_str","nameLocation":"4184:4:23","nodeType":"VariableDeclaration","scope":7274,"src":"4170:18:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7252,"name":"string","nodeType":"ElementaryTypeName","src":"4170:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4154:35:23"},"returnParameters":{"id":7257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7274,"src":"4211:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7255,"name":"string","nodeType":"ElementaryTypeName","src":"4211:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4210:15:23"},"scope":7275,"src":"4117:228:23","stateMutability":"pure","virtual":false,"visibility":"public"}],"scope":7276,"src":"390:3957:23","usedErrors":[13,18,495,500,505,514,519,524,1244,1251,2012,2084,2086,2663,2668,2673],"usedEvents":[24,463,1147,1156,6881,6888]}],"src":"81:4582:23"},"id":23},"contracts/MyVestingWallet.sol":{"ast":{"absolutePath":"contracts/MyVestingWallet.sol","exportedSymbols":{"Address":[1972],"Context":[2002],"IERC20":[1213],"MyVestingWallet":[7303],"Ownable":[147],"SafeERC20":[1719],"VestingWallet":[458],"VestingWalletCliff":[7387]},"id":7304,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7277,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:24"},{"absolutePath":"@openzeppelin/contracts/finance/VestingWallet.sol","file":"@openzeppelin/contracts/finance/VestingWallet.sol","id":7278,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7304,"sourceUnit":459,"src":"58:59:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/abstract/VestingWalletCliff.sol","file":"./abstract/VestingWalletCliff.sol","id":7280,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7304,"sourceUnit":7388,"src":"118:69:24","symbolAliases":[{"foreign":{"id":7279,"name":"VestingWalletCliff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7387,"src":"126:18:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7281,"name":"VestingWalletCliff","nameLocations":["217:18:24"],"nodeType":"IdentifierPath","referencedDeclaration":7387,"src":"217:18:24"},"id":7282,"nodeType":"InheritanceSpecifier","src":"217:18:24"}],"canonicalName":"MyVestingWallet","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7303,"linearizedBaseContracts":[7303,7387,458,147,2002],"name":"MyVestingWallet","nameLocation":"198:15:24","nodeType":"ContractDefinition","nodes":[{"body":{"id":7301,"nodeType":"Block","src":"494:2:24","statements":[]},"id":7302,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":7293,"name":"beneficiary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7284,"src":"403:11:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7294,"name":"startTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7286,"src":"416:14:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":7295,"name":"durationSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7288,"src":"432:15:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":7296,"kind":"baseConstructorSpecifier","modifierName":{"id":7292,"name":"VestingWallet","nameLocations":["389:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":458,"src":"389:13:24"},"nodeType":"ModifierInvocation","src":"389:59:24"},{"arguments":[{"id":7298,"name":"cliffSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7290,"src":"476:12:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":7299,"kind":"baseConstructorSpecifier","modifierName":{"id":7297,"name":"VestingWalletCliff","nameLocations":["457:18:24"],"nodeType":"IdentifierPath","referencedDeclaration":7387,"src":"457:18:24"},"nodeType":"ModifierInvocation","src":"457:32:24"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7284,"mutability":"mutable","name":"beneficiary","nameLocation":"271:11:24","nodeType":"VariableDeclaration","scope":7302,"src":"263:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7283,"name":"address","nodeType":"ElementaryTypeName","src":"263:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7286,"mutability":"mutable","name":"startTimestamp","nameLocation":"299:14:24","nodeType":"VariableDeclaration","scope":7302,"src":"292:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":7285,"name":"uint64","nodeType":"ElementaryTypeName","src":"292:6:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":7288,"mutability":"mutable","name":"durationSeconds","nameLocation":"330:15:24","nodeType":"VariableDeclaration","scope":7302,"src":"323:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":7287,"name":"uint64","nodeType":"ElementaryTypeName","src":"323:6:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":7290,"mutability":"mutable","name":"cliffSeconds","nameLocation":"362:12:24","nodeType":"VariableDeclaration","scope":7302,"src":"355:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":7289,"name":"uint64","nodeType":"ElementaryTypeName","src":"355:6:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"253:127:24"},"returnParameters":{"id":7300,"nodeType":"ParameterList","parameters":[],"src":"494:0:24"},"scope":7303,"src":"242:254:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":7304,"src":"189:309:24","usedErrors":[13,18,1446,1727,1732,1735,4365,7323],"usedEvents":[24,168,174]}],"src":"32:466:24"},"id":24},"contracts/abstract/VestingWalletCliff.sol":{"ast":{"absolutePath":"contracts/abstract/VestingWalletCliff.sol","exportedSymbols":{"SafeCast":[6110],"VestingWallet":[458],"VestingWalletCliff":[7387]},"id":7388,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7305,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:25"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"@openzeppelin/contracts/utils/math/SafeCast.sol","id":7307,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7388,"sourceUnit":6111,"src":"59:73:25","symbolAliases":[{"foreign":{"id":7306,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6110,"src":"67:8:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/finance/VestingWallet.sol","file":"@openzeppelin/contracts/finance/VestingWallet.sol","id":7309,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7388,"sourceUnit":459,"src":"133:80:25","symbolAliases":[{"foreign":{"id":7308,"name":"VestingWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"141:13:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7311,"name":"VestingWallet","nameLocations":["343:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":458,"src":"343:13:25"},"id":7312,"nodeType":"InheritanceSpecifier","src":"343:13:25"}],"canonicalName":"VestingWalletCliff","contractDependencies":[],"contractKind":"contract","documentation":{"id":7310,"nodeType":"StructuredDocumentation","src":"215:87:25","text":" @dev Extension of {VestingWallet} that adds a cliff to the vesting schedule."},"fullyImplemented":true,"id":7387,"linearizedBaseContracts":[7387,458,147,2002],"name":"VestingWalletCliff","nameLocation":"321:18:25","nodeType":"ContractDefinition","nodes":[{"global":false,"id":7314,"libraryName":{"id":7313,"name":"SafeCast","nameLocations":["369:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":6110,"src":"369:8:25"},"nodeType":"UsingForDirective","src":"363:21:25"},{"constant":false,"id":7316,"mutability":"immutable","name":"_cliff","nameLocation":"415:6:25","nodeType":"VariableDeclaration","scope":7387,"src":"390:31:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":7315,"name":"uint64","nodeType":"ElementaryTypeName","src":"390:6:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"private"},{"documentation":{"id":7317,"nodeType":"StructuredDocumentation","src":"428:74:25","text":"@dev The specified cliff duration is larger than the vesting duration."},"errorSelector":"3be3ef50","id":7323,"name":"InvalidCliffDuration","nameLocation":"513:20:25","nodeType":"ErrorDefinition","parameters":{"id":7322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7319,"mutability":"mutable","name":"cliffSeconds","nameLocation":"541:12:25","nodeType":"VariableDeclaration","scope":7323,"src":"534:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":7318,"name":"uint64","nodeType":"ElementaryTypeName","src":"534:6:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":7321,"mutability":"mutable","name":"durationSeconds","nameLocation":"562:15:25","nodeType":"VariableDeclaration","scope":7323,"src":"555:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":7320,"name":"uint64","nodeType":"ElementaryTypeName","src":"555:6:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"533:45:25"},"src":"507:72:25"},{"body":{"id":7352,"nodeType":"Block","src":"699:188:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7329,"name":"cliffSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7326,"src":"713:12:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7330,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"728:8:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":7331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"728:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"713:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7342,"nodeType":"IfStatement","src":"709:120:25","trueBody":{"id":7341,"nodeType":"Block","src":"740:89:25","statements":[{"errorCall":{"arguments":[{"id":7334,"name":"cliffSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7326,"src":"782:12:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7335,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"796:8:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":7336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"796:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"807:8:25","memberName":"toUint64","nodeType":"MemberAccess","referencedDeclaration":5054,"src":"796:19:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint64_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint64)"}},"id":7338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"796:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":7333,"name":"InvalidCliffDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7323,"src":"761:20:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint64_$_t_uint64_$returns$__$","typeString":"function (uint64,uint64) pure"}},"id":7339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"761:57:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7340,"nodeType":"RevertStatement","src":"754:64:25"}]}},{"expression":{"id":7350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7343,"name":"_cliff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7316,"src":"838:6:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":7349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7344,"name":"start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"847:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":7345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"847:7:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"855:8:25","memberName":"toUint64","nodeType":"MemberAccess","referencedDeclaration":5054,"src":"847:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint64_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint64)"}},"id":7347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"847:18:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7348,"name":"cliffSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7326,"src":"868:12:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"847:33:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"838:42:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":7351,"nodeType":"ExpressionStatement","src":"838:42:25"}]},"documentation":{"id":7324,"nodeType":"StructuredDocumentation","src":"585:76:25","text":" @dev Set the start timestamp of the vesting wallet cliff."},"id":7353,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7326,"mutability":"mutable","name":"cliffSeconds","nameLocation":"685:12:25","nodeType":"VariableDeclaration","scope":7353,"src":"678:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":7325,"name":"uint64","nodeType":"ElementaryTypeName","src":"678:6:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"677:21:25"},"returnParameters":{"id":7328,"nodeType":"ParameterList","parameters":[],"src":"699:0:25"},"scope":7387,"src":"666:221:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7361,"nodeType":"Block","src":"1008:30:25","statements":[{"expression":{"id":7359,"name":"_cliff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7316,"src":"1025:6:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":7358,"id":7360,"nodeType":"Return","src":"1018:13:25"}]},"documentation":{"id":7354,"nodeType":"StructuredDocumentation","src":"893:55:25","text":" @dev Getter for the cliff timestamp."},"functionSelector":"13d033c0","id":7362,"implemented":true,"kind":"function","modifiers":[],"name":"cliff","nameLocation":"962:5:25","nodeType":"FunctionDefinition","parameters":{"id":7355,"nodeType":"ParameterList","parameters":[],"src":"967:2:25"},"returnParameters":{"id":7358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7357,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7362,"src":"999:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7356,"name":"uint256","nodeType":"ElementaryTypeName","src":"999:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"998:9:25"},"scope":7387,"src":"953:85:25","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[457],"body":{"id":7385,"nodeType":"Block","src":"1757:100:25","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7373,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7367,"src":"1774:9:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7374,"name":"cliff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7362,"src":"1786:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":7375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1786:7:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1774:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":7380,"name":"totalAllocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7365,"src":"1823:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7381,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7367,"src":"1840:9:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"expression":{"id":7378,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1800:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_VestingWalletCliff_$7387_$","typeString":"type(contract super VestingWalletCliff)"}},"id":7379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1806:16:25","memberName":"_vestingSchedule","nodeType":"MemberAccess","referencedDeclaration":457,"src":"1800:22:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint64_$returns$_t_uint256_$","typeString":"function (uint256,uint64) view returns (uint256)"}},"id":7382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1800:50:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1774:76:25","trueExpression":{"hexValue":"30","id":7377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1796:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7372,"id":7384,"nodeType":"Return","src":"1767:83:25"}]},"documentation":{"id":7363,"nodeType":"StructuredDocumentation","src":"1044:568:25","text":" @dev Virtual implementation of the vesting formula. This returns the amount vested, as a function of time, for\n an asset given its total historical allocation. Returns 0 if the {cliff} timestamp is not met.\n IMPORTANT: The cliff not only makes the schedule return 0, but it also ignores every possible side\n effect from calling the inherited implementation (i.e. `super._vestingSchedule`). Carefully consider\n this caveat if the overridden implementation of this function has any (e.g. writing to memory or reverting)."},"id":7386,"implemented":true,"kind":"function","modifiers":[],"name":"_vestingSchedule","nameLocation":"1626:16:25","nodeType":"FunctionDefinition","overrides":{"id":7369,"nodeType":"OverrideSpecifier","overrides":[],"src":"1730:8:25"},"parameters":{"id":7368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7365,"mutability":"mutable","name":"totalAllocation","nameLocation":"1660:15:25","nodeType":"VariableDeclaration","scope":7386,"src":"1652:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7364,"name":"uint256","nodeType":"ElementaryTypeName","src":"1652:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7367,"mutability":"mutable","name":"timestamp","nameLocation":"1692:9:25","nodeType":"VariableDeclaration","scope":7386,"src":"1685:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":7366,"name":"uint64","nodeType":"ElementaryTypeName","src":"1685:6:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1642:65:25"},"returnParameters":{"id":7372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7371,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7386,"src":"1748:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7370,"name":"uint256","nodeType":"ElementaryTypeName","src":"1748:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1747:9:25"},"scope":7387,"src":"1617:240:25","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":7388,"src":"303:1556:25","usedErrors":[13,18,1446,1727,1732,1735,4365,7323],"usedEvents":[24,168,174]}],"src":"33:1826:25"},"id":25},"contracts/tax/ITaxHandler.sol":{"ast":{"absolutePath":"contracts/tax/ITaxHandler.sol","exportedSymbols":{"ITaxHandler":[7403]},"id":7404,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7389,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:26"},{"abstract":false,"baseContracts":[],"canonicalName":"ITaxHandler","contractDependencies":[],"contractKind":"interface","documentation":{"id":7390,"nodeType":"StructuredDocumentation","src":"58:140:26","text":" @title Tax handler interface\n @dev Any class that implements this interface can be used for protocol-specific tax calculations."},"fullyImplemented":false,"id":7403,"linearizedBaseContracts":[7403],"name":"ITaxHandler","nameLocation":"209:11:26","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":7391,"nodeType":"StructuredDocumentation","src":"227:270:26","text":" @notice Get number of tokens to pay as tax.\n @param benefactor Address of the benefactor.\n @param beneficiary Address of the beneficiary.\n @param amount Number of tokens in the transfer.\n @return Number of tokens to pay as tax."},"functionSelector":"d7ad21ac","id":7402,"implemented":false,"kind":"function","modifiers":[],"name":"getTax","nameLocation":"511:6:26","nodeType":"FunctionDefinition","parameters":{"id":7398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7393,"mutability":"mutable","name":"benefactor","nameLocation":"535:10:26","nodeType":"VariableDeclaration","scope":7402,"src":"527:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7392,"name":"address","nodeType":"ElementaryTypeName","src":"527:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7395,"mutability":"mutable","name":"beneficiary","nameLocation":"563:11:26","nodeType":"VariableDeclaration","scope":7402,"src":"555:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7394,"name":"address","nodeType":"ElementaryTypeName","src":"555:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7397,"mutability":"mutable","name":"amount","nameLocation":"592:6:26","nodeType":"VariableDeclaration","scope":7402,"src":"584:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7396,"name":"uint256","nodeType":"ElementaryTypeName","src":"584:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"517:87:26"},"returnParameters":{"id":7401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7402,"src":"628:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7399,"name":"uint256","nodeType":"ElementaryTypeName","src":"628:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"627:9:26"},"scope":7403,"src":"502:135:26","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":7404,"src":"199:440:26","usedErrors":[],"usedEvents":[]}],"src":"32:607:26"},"id":26}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/finance/VestingWallet.sol":{"VestingWallet":{"abi":[{"inputs":[{"internalType":"address","name":"beneficiary","type":"address"},{"internalType":"uint64","name":"startTimestamp","type":"uint64"},{"internalType":"uint64","name":"durationSeconds","type":"uint64"}],"stateMutability":"payable","type":"constructor"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ERC20Released","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"EtherReleased","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"duration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"end","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"releasable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"releasable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"release","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"release","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"released","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"released","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"start","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"timestamp","type":"uint64"}],"name":"vestedAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint64","name":"timestamp","type":"uint64"}],"name":"vestedAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_206":{"entryPoint":null,"id":206,"parameterSlots":3,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":242,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":521,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64_fromMemory":{"entryPoint":590,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint64t_uint64_fromMemory":{"entryPoint":613,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":705,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":722,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":475,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":443,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":544,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":438,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":495,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":564,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:2239:27","nodeType":"YulBlock","src":"0:2239:27","statements":[{"body":{"nativeSrc":"47:35:27","nodeType":"YulBlock","src":"47:35:27","statements":[{"nativeSrc":"57:19:27","nodeType":"YulAssignment","src":"57:19:27","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:27","nodeType":"YulLiteral","src":"73:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:27","nodeType":"YulIdentifier","src":"67:5:27"},"nativeSrc":"67:9:27","nodeType":"YulFunctionCall","src":"67:9:27"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:27","nodeType":"YulIdentifier","src":"57:6:27"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:27","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:27","nodeType":"YulTypedName","src":"40:6:27","type":""}],"src":"7:75:27"},{"body":{"nativeSrc":"177:28:27","nodeType":"YulBlock","src":"177:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:27","nodeType":"YulLiteral","src":"194:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:27","nodeType":"YulLiteral","src":"197:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:27","nodeType":"YulIdentifier","src":"187:6:27"},"nativeSrc":"187:12:27","nodeType":"YulFunctionCall","src":"187:12:27"},"nativeSrc":"187:12:27","nodeType":"YulExpressionStatement","src":"187:12:27"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:27","nodeType":"YulFunctionDefinition","src":"88:117:27"},{"body":{"nativeSrc":"300:28:27","nodeType":"YulBlock","src":"300:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:27","nodeType":"YulLiteral","src":"317:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:27","nodeType":"YulLiteral","src":"320:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:27","nodeType":"YulIdentifier","src":"310:6:27"},"nativeSrc":"310:12:27","nodeType":"YulFunctionCall","src":"310:12:27"},"nativeSrc":"310:12:27","nodeType":"YulExpressionStatement","src":"310:12:27"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:27","nodeType":"YulFunctionDefinition","src":"211:117:27"},{"body":{"nativeSrc":"379:81:27","nodeType":"YulBlock","src":"379:81:27","statements":[{"nativeSrc":"389:65:27","nodeType":"YulAssignment","src":"389:65:27","value":{"arguments":[{"name":"value","nativeSrc":"404:5:27","nodeType":"YulIdentifier","src":"404:5:27"},{"kind":"number","nativeSrc":"411:42:27","nodeType":"YulLiteral","src":"411:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:27","nodeType":"YulIdentifier","src":"400:3:27"},"nativeSrc":"400:54:27","nodeType":"YulFunctionCall","src":"400:54:27"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:27","nodeType":"YulIdentifier","src":"389:7:27"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:27","nodeType":"YulTypedName","src":"361:5:27","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:27","nodeType":"YulTypedName","src":"371:7:27","type":""}],"src":"334:126:27"},{"body":{"nativeSrc":"511:51:27","nodeType":"YulBlock","src":"511:51:27","statements":[{"nativeSrc":"521:35:27","nodeType":"YulAssignment","src":"521:35:27","value":{"arguments":[{"name":"value","nativeSrc":"550:5:27","nodeType":"YulIdentifier","src":"550:5:27"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:27","nodeType":"YulIdentifier","src":"532:17:27"},"nativeSrc":"532:24:27","nodeType":"YulFunctionCall","src":"532:24:27"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:27","nodeType":"YulIdentifier","src":"521:7:27"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:27","nodeType":"YulTypedName","src":"493:5:27","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:27","nodeType":"YulTypedName","src":"503:7:27","type":""}],"src":"466:96:27"},{"body":{"nativeSrc":"611:79:27","nodeType":"YulBlock","src":"611:79:27","statements":[{"body":{"nativeSrc":"668:16:27","nodeType":"YulBlock","src":"668:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:27","nodeType":"YulLiteral","src":"677:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:27","nodeType":"YulLiteral","src":"680:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:27","nodeType":"YulIdentifier","src":"670:6:27"},"nativeSrc":"670:12:27","nodeType":"YulFunctionCall","src":"670:12:27"},"nativeSrc":"670:12:27","nodeType":"YulExpressionStatement","src":"670:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:27","nodeType":"YulIdentifier","src":"634:5:27"},{"arguments":[{"name":"value","nativeSrc":"659:5:27","nodeType":"YulIdentifier","src":"659:5:27"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:27","nodeType":"YulIdentifier","src":"641:17:27"},"nativeSrc":"641:24:27","nodeType":"YulFunctionCall","src":"641:24:27"}],"functionName":{"name":"eq","nativeSrc":"631:2:27","nodeType":"YulIdentifier","src":"631:2:27"},"nativeSrc":"631:35:27","nodeType":"YulFunctionCall","src":"631:35:27"}],"functionName":{"name":"iszero","nativeSrc":"624:6:27","nodeType":"YulIdentifier","src":"624:6:27"},"nativeSrc":"624:43:27","nodeType":"YulFunctionCall","src":"624:43:27"},"nativeSrc":"621:63:27","nodeType":"YulIf","src":"621:63:27"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:27","nodeType":"YulTypedName","src":"604:5:27","type":""}],"src":"568:122:27"},{"body":{"nativeSrc":"759:80:27","nodeType":"YulBlock","src":"759:80:27","statements":[{"nativeSrc":"769:22:27","nodeType":"YulAssignment","src":"769:22:27","value":{"arguments":[{"name":"offset","nativeSrc":"784:6:27","nodeType":"YulIdentifier","src":"784:6:27"}],"functionName":{"name":"mload","nativeSrc":"778:5:27","nodeType":"YulIdentifier","src":"778:5:27"},"nativeSrc":"778:13:27","nodeType":"YulFunctionCall","src":"778:13:27"},"variableNames":[{"name":"value","nativeSrc":"769:5:27","nodeType":"YulIdentifier","src":"769:5:27"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"827:5:27","nodeType":"YulIdentifier","src":"827:5:27"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"800:26:27","nodeType":"YulIdentifier","src":"800:26:27"},"nativeSrc":"800:33:27","nodeType":"YulFunctionCall","src":"800:33:27"},"nativeSrc":"800:33:27","nodeType":"YulExpressionStatement","src":"800:33:27"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"696:143:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"737:6:27","nodeType":"YulTypedName","src":"737:6:27","type":""},{"name":"end","nativeSrc":"745:3:27","nodeType":"YulTypedName","src":"745:3:27","type":""}],"returnVariables":[{"name":"value","nativeSrc":"753:5:27","nodeType":"YulTypedName","src":"753:5:27","type":""}],"src":"696:143:27"},{"body":{"nativeSrc":"889:57:27","nodeType":"YulBlock","src":"889:57:27","statements":[{"nativeSrc":"899:41:27","nodeType":"YulAssignment","src":"899:41:27","value":{"arguments":[{"name":"value","nativeSrc":"914:5:27","nodeType":"YulIdentifier","src":"914:5:27"},{"kind":"number","nativeSrc":"921:18:27","nodeType":"YulLiteral","src":"921:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"910:3:27","nodeType":"YulIdentifier","src":"910:3:27"},"nativeSrc":"910:30:27","nodeType":"YulFunctionCall","src":"910:30:27"},"variableNames":[{"name":"cleaned","nativeSrc":"899:7:27","nodeType":"YulIdentifier","src":"899:7:27"}]}]},"name":"cleanup_t_uint64","nativeSrc":"845:101:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"871:5:27","nodeType":"YulTypedName","src":"871:5:27","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"881:7:27","nodeType":"YulTypedName","src":"881:7:27","type":""}],"src":"845:101:27"},{"body":{"nativeSrc":"994:78:27","nodeType":"YulBlock","src":"994:78:27","statements":[{"body":{"nativeSrc":"1050:16:27","nodeType":"YulBlock","src":"1050:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1059:1:27","nodeType":"YulLiteral","src":"1059:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"1062:1:27","nodeType":"YulLiteral","src":"1062:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1052:6:27","nodeType":"YulIdentifier","src":"1052:6:27"},"nativeSrc":"1052:12:27","nodeType":"YulFunctionCall","src":"1052:12:27"},"nativeSrc":"1052:12:27","nodeType":"YulExpressionStatement","src":"1052:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1017:5:27","nodeType":"YulIdentifier","src":"1017:5:27"},{"arguments":[{"name":"value","nativeSrc":"1041:5:27","nodeType":"YulIdentifier","src":"1041:5:27"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"1024:16:27","nodeType":"YulIdentifier","src":"1024:16:27"},"nativeSrc":"1024:23:27","nodeType":"YulFunctionCall","src":"1024:23:27"}],"functionName":{"name":"eq","nativeSrc":"1014:2:27","nodeType":"YulIdentifier","src":"1014:2:27"},"nativeSrc":"1014:34:27","nodeType":"YulFunctionCall","src":"1014:34:27"}],"functionName":{"name":"iszero","nativeSrc":"1007:6:27","nodeType":"YulIdentifier","src":"1007:6:27"},"nativeSrc":"1007:42:27","nodeType":"YulFunctionCall","src":"1007:42:27"},"nativeSrc":"1004:62:27","nodeType":"YulIf","src":"1004:62:27"}]},"name":"validator_revert_t_uint64","nativeSrc":"952:120:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"987:5:27","nodeType":"YulTypedName","src":"987:5:27","type":""}],"src":"952:120:27"},{"body":{"nativeSrc":"1140:79:27","nodeType":"YulBlock","src":"1140:79:27","statements":[{"nativeSrc":"1150:22:27","nodeType":"YulAssignment","src":"1150:22:27","value":{"arguments":[{"name":"offset","nativeSrc":"1165:6:27","nodeType":"YulIdentifier","src":"1165:6:27"}],"functionName":{"name":"mload","nativeSrc":"1159:5:27","nodeType":"YulIdentifier","src":"1159:5:27"},"nativeSrc":"1159:13:27","nodeType":"YulFunctionCall","src":"1159:13:27"},"variableNames":[{"name":"value","nativeSrc":"1150:5:27","nodeType":"YulIdentifier","src":"1150:5:27"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1207:5:27","nodeType":"YulIdentifier","src":"1207:5:27"}],"functionName":{"name":"validator_revert_t_uint64","nativeSrc":"1181:25:27","nodeType":"YulIdentifier","src":"1181:25:27"},"nativeSrc":"1181:32:27","nodeType":"YulFunctionCall","src":"1181:32:27"},"nativeSrc":"1181:32:27","nodeType":"YulExpressionStatement","src":"1181:32:27"}]},"name":"abi_decode_t_uint64_fromMemory","nativeSrc":"1078:141:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1118:6:27","nodeType":"YulTypedName","src":"1118:6:27","type":""},{"name":"end","nativeSrc":"1126:3:27","nodeType":"YulTypedName","src":"1126:3:27","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1134:5:27","nodeType":"YulTypedName","src":"1134:5:27","type":""}],"src":"1078:141:27"},{"body":{"nativeSrc":"1334:550:27","nodeType":"YulBlock","src":"1334:550:27","statements":[{"body":{"nativeSrc":"1380:83:27","nodeType":"YulBlock","src":"1380:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1382:77:27","nodeType":"YulIdentifier","src":"1382:77:27"},"nativeSrc":"1382:79:27","nodeType":"YulFunctionCall","src":"1382:79:27"},"nativeSrc":"1382:79:27","nodeType":"YulExpressionStatement","src":"1382:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1355:7:27","nodeType":"YulIdentifier","src":"1355:7:27"},{"name":"headStart","nativeSrc":"1364:9:27","nodeType":"YulIdentifier","src":"1364:9:27"}],"functionName":{"name":"sub","nativeSrc":"1351:3:27","nodeType":"YulIdentifier","src":"1351:3:27"},"nativeSrc":"1351:23:27","nodeType":"YulFunctionCall","src":"1351:23:27"},{"kind":"number","nativeSrc":"1376:2:27","nodeType":"YulLiteral","src":"1376:2:27","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"1347:3:27","nodeType":"YulIdentifier","src":"1347:3:27"},"nativeSrc":"1347:32:27","nodeType":"YulFunctionCall","src":"1347:32:27"},"nativeSrc":"1344:119:27","nodeType":"YulIf","src":"1344:119:27"},{"nativeSrc":"1473:128:27","nodeType":"YulBlock","src":"1473:128:27","statements":[{"nativeSrc":"1488:15:27","nodeType":"YulVariableDeclaration","src":"1488:15:27","value":{"kind":"number","nativeSrc":"1502:1:27","nodeType":"YulLiteral","src":"1502:1:27","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1492:6:27","nodeType":"YulTypedName","src":"1492:6:27","type":""}]},{"nativeSrc":"1517:74:27","nodeType":"YulAssignment","src":"1517:74:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1563:9:27","nodeType":"YulIdentifier","src":"1563:9:27"},{"name":"offset","nativeSrc":"1574:6:27","nodeType":"YulIdentifier","src":"1574:6:27"}],"functionName":{"name":"add","nativeSrc":"1559:3:27","nodeType":"YulIdentifier","src":"1559:3:27"},"nativeSrc":"1559:22:27","nodeType":"YulFunctionCall","src":"1559:22:27"},{"name":"dataEnd","nativeSrc":"1583:7:27","nodeType":"YulIdentifier","src":"1583:7:27"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1527:31:27","nodeType":"YulIdentifier","src":"1527:31:27"},"nativeSrc":"1527:64:27","nodeType":"YulFunctionCall","src":"1527:64:27"},"variableNames":[{"name":"value0","nativeSrc":"1517:6:27","nodeType":"YulIdentifier","src":"1517:6:27"}]}]},{"nativeSrc":"1611:128:27","nodeType":"YulBlock","src":"1611:128:27","statements":[{"nativeSrc":"1626:16:27","nodeType":"YulVariableDeclaration","src":"1626:16:27","value":{"kind":"number","nativeSrc":"1640:2:27","nodeType":"YulLiteral","src":"1640:2:27","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1630:6:27","nodeType":"YulTypedName","src":"1630:6:27","type":""}]},{"nativeSrc":"1656:73:27","nodeType":"YulAssignment","src":"1656:73:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1701:9:27","nodeType":"YulIdentifier","src":"1701:9:27"},{"name":"offset","nativeSrc":"1712:6:27","nodeType":"YulIdentifier","src":"1712:6:27"}],"functionName":{"name":"add","nativeSrc":"1697:3:27","nodeType":"YulIdentifier","src":"1697:3:27"},"nativeSrc":"1697:22:27","nodeType":"YulFunctionCall","src":"1697:22:27"},{"name":"dataEnd","nativeSrc":"1721:7:27","nodeType":"YulIdentifier","src":"1721:7:27"}],"functionName":{"name":"abi_decode_t_uint64_fromMemory","nativeSrc":"1666:30:27","nodeType":"YulIdentifier","src":"1666:30:27"},"nativeSrc":"1666:63:27","nodeType":"YulFunctionCall","src":"1666:63:27"},"variableNames":[{"name":"value1","nativeSrc":"1656:6:27","nodeType":"YulIdentifier","src":"1656:6:27"}]}]},{"nativeSrc":"1749:128:27","nodeType":"YulBlock","src":"1749:128:27","statements":[{"nativeSrc":"1764:16:27","nodeType":"YulVariableDeclaration","src":"1764:16:27","value":{"kind":"number","nativeSrc":"1778:2:27","nodeType":"YulLiteral","src":"1778:2:27","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"1768:6:27","nodeType":"YulTypedName","src":"1768:6:27","type":""}]},{"nativeSrc":"1794:73:27","nodeType":"YulAssignment","src":"1794:73:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1839:9:27","nodeType":"YulIdentifier","src":"1839:9:27"},{"name":"offset","nativeSrc":"1850:6:27","nodeType":"YulIdentifier","src":"1850:6:27"}],"functionName":{"name":"add","nativeSrc":"1835:3:27","nodeType":"YulIdentifier","src":"1835:3:27"},"nativeSrc":"1835:22:27","nodeType":"YulFunctionCall","src":"1835:22:27"},{"name":"dataEnd","nativeSrc":"1859:7:27","nodeType":"YulIdentifier","src":"1859:7:27"}],"functionName":{"name":"abi_decode_t_uint64_fromMemory","nativeSrc":"1804:30:27","nodeType":"YulIdentifier","src":"1804:30:27"},"nativeSrc":"1804:63:27","nodeType":"YulFunctionCall","src":"1804:63:27"},"variableNames":[{"name":"value2","nativeSrc":"1794:6:27","nodeType":"YulIdentifier","src":"1794:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint64t_uint64_fromMemory","nativeSrc":"1225:659:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1288:9:27","nodeType":"YulTypedName","src":"1288:9:27","type":""},{"name":"dataEnd","nativeSrc":"1299:7:27","nodeType":"YulTypedName","src":"1299:7:27","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1311:6:27","nodeType":"YulTypedName","src":"1311:6:27","type":""},{"name":"value1","nativeSrc":"1319:6:27","nodeType":"YulTypedName","src":"1319:6:27","type":""},{"name":"value2","nativeSrc":"1327:6:27","nodeType":"YulTypedName","src":"1327:6:27","type":""}],"src":"1225:659:27"},{"body":{"nativeSrc":"1955:53:27","nodeType":"YulBlock","src":"1955:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1972:3:27","nodeType":"YulIdentifier","src":"1972:3:27"},{"arguments":[{"name":"value","nativeSrc":"1995:5:27","nodeType":"YulIdentifier","src":"1995:5:27"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1977:17:27","nodeType":"YulIdentifier","src":"1977:17:27"},"nativeSrc":"1977:24:27","nodeType":"YulFunctionCall","src":"1977:24:27"}],"functionName":{"name":"mstore","nativeSrc":"1965:6:27","nodeType":"YulIdentifier","src":"1965:6:27"},"nativeSrc":"1965:37:27","nodeType":"YulFunctionCall","src":"1965:37:27"},"nativeSrc":"1965:37:27","nodeType":"YulExpressionStatement","src":"1965:37:27"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"1890:118:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1943:5:27","nodeType":"YulTypedName","src":"1943:5:27","type":""},{"name":"pos","nativeSrc":"1950:3:27","nodeType":"YulTypedName","src":"1950:3:27","type":""}],"src":"1890:118:27"},{"body":{"nativeSrc":"2112:124:27","nodeType":"YulBlock","src":"2112:124:27","statements":[{"nativeSrc":"2122:26:27","nodeType":"YulAssignment","src":"2122:26:27","value":{"arguments":[{"name":"headStart","nativeSrc":"2134:9:27","nodeType":"YulIdentifier","src":"2134:9:27"},{"kind":"number","nativeSrc":"2145:2:27","nodeType":"YulLiteral","src":"2145:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2130:3:27","nodeType":"YulIdentifier","src":"2130:3:27"},"nativeSrc":"2130:18:27","nodeType":"YulFunctionCall","src":"2130:18:27"},"variableNames":[{"name":"tail","nativeSrc":"2122:4:27","nodeType":"YulIdentifier","src":"2122:4:27"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"2202:6:27","nodeType":"YulIdentifier","src":"2202:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"2215:9:27","nodeType":"YulIdentifier","src":"2215:9:27"},{"kind":"number","nativeSrc":"2226:1:27","nodeType":"YulLiteral","src":"2226:1:27","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2211:3:27","nodeType":"YulIdentifier","src":"2211:3:27"},"nativeSrc":"2211:17:27","nodeType":"YulFunctionCall","src":"2211:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"2158:43:27","nodeType":"YulIdentifier","src":"2158:43:27"},"nativeSrc":"2158:71:27","nodeType":"YulFunctionCall","src":"2158:71:27"},"nativeSrc":"2158:71:27","nodeType":"YulExpressionStatement","src":"2158:71:27"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"2014:222:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2084:9:27","nodeType":"YulTypedName","src":"2084:9:27","type":""},{"name":"value0","nativeSrc":"2096:6:27","nodeType":"YulTypedName","src":"2096:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2107:4:27","nodeType":"YulTypedName","src":"2107:4:27","type":""}],"src":"2014:222:27"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint64t_uint64_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":27,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60c06040526040516200149f3803806200149f833981810160405281019062000029919062000265565b82600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200009f5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000969190620002d2565b60405180910390fd5b620000b081620000f260201b60201c565b508167ffffffffffffffff1660808167ffffffffffffffff16815250508067ffffffffffffffff1660a08167ffffffffffffffff1681525050505050620002ef565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001e882620001bb565b9050919050565b620001fa81620001db565b81146200020657600080fd5b50565b6000815190506200021a81620001ef565b92915050565b600067ffffffffffffffff82169050919050565b6200023f8162000220565b81146200024b57600080fd5b50565b6000815190506200025f8162000234565b92915050565b600080600060608486031215620002815762000280620001b6565b5b6000620002918682870162000209565b9350506020620002a4868287016200024e565b9250506040620002b7868287016200024e565b9150509250925092565b620002cc81620001db565b82525050565b6000602082019050620002e96000830184620002c1565b92915050565b60805160a05161118a62000315600039600061038c0152600061064b015261118a6000f3fe6080604052600436106100e15760003560e01c8063961325211161007f578063be9a655511610059578063be9a6555146102b9578063efbe1c1c146102e4578063f2fde38b1461030f578063fbccedae14610338576100e8565b806396132521146102145780639852595c1461023f578063a3f8eace1461027c576100e8565b8063715018a6116100bb578063715018a61461017e578063810ec23b1461019557806386d1a69f146101d25780638da5cb5b146101e9576100e8565b80630a17b06b146100ed5780630fb5a6b41461012a5780631916558714610155576100e8565b366100e857005b600080fd5b3480156100f957600080fd5b50610114600480360381019061010f9190610d1b565b610363565b6040516101219190610d61565b60405180910390f35b34801561013657600080fd5b5061013f610388565b60405161014c9190610d61565b60405180910390f35b34801561016157600080fd5b5061017c60048036038101906101779190610dda565b6103ba565b005b34801561018a57600080fd5b50610193610481565b005b3480156101a157600080fd5b506101bc60048036038101906101b79190610e07565b610495565b6040516101c99190610d61565b60405180910390f35b3480156101de57600080fd5b506101e7610535565b005b3480156101f557600080fd5b506101fe6105a5565b60405161020b9190610e56565b60405180910390f35b34801561022057600080fd5b506102296105ce565b6040516102369190610d61565b60405180910390f35b34801561024b57600080fd5b5061026660048036038101906102619190610dda565b6105d8565b6040516102739190610d61565b60405180910390f35b34801561028857600080fd5b506102a3600480360381019061029e9190610dda565b610621565b6040516102b09190610d61565b60405180910390f35b3480156102c557600080fd5b506102ce610647565b6040516102db9190610d61565b60405180910390f35b3480156102f057600080fd5b506102f9610679565b6040516103069190610d61565b60405180910390f35b34801561031b57600080fd5b5061033660048036038101906103319190610dda565b61069a565b005b34801561034457600080fd5b5061034d610720565b60405161035a9190610d61565b60405180910390f35b60006103816103706105ce565b4761037b9190610ea0565b83610742565b9050919050565b60007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16905090565b60006103c582610621565b905080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104169190610ea0565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b826040516104639190610d61565b60405180910390a261047d826104776105a5565b836107c9565b5050565b610489610848565b61049360006108cf565b565b600061052d6104a3846105d8565b8473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104dc9190610e56565b602060405180830381865afa1580156104f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051d9190610f00565b6105279190610ea0565b83610742565b905092915050565b600061053f610720565b905080600160008282546105539190610ea0565b925050819055507fda9d4e5f101b8b9b1c5b76d0c5a9f7923571acfc02376aa076b75a8c080c956b816040516105899190610d61565b60405180910390a16105a261059c6105a5565b82610993565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600154905090565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600061062c826105d8565b6106368342610495565b6106409190610f2d565b9050919050565b60007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16905090565b6000610683610388565b61068b610647565b6106959190610ea0565b905090565b6106a2610848565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107145760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161070b9190610e56565b60405180910390fd5b61071d816108cf565b50565b600061072a6105ce565b61073342610363565b61073d9190610f2d565b905090565b600061074c610647565b8267ffffffffffffffff16101561076657600090506107c3565b61076e610679565b8267ffffffffffffffff1610610786578290506107c3565b61078e610388565b610796610647565b8367ffffffffffffffff166107ab9190610f2d565b846107b69190610f61565b6107c09190610fd2565b90505b92915050565b610843838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016107fc929190611003565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610a80565b505050565b610850610b17565b73ffffffffffffffffffffffffffffffffffffffff1661086e6105a5565b73ffffffffffffffffffffffffffffffffffffffff16146108cd57610891610b17565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108c49190610e56565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b804710156109d857306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016109cf9190610e56565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff16826040516109fe9061105d565b60006040518083038185875af1925050503d8060008114610a3b576040519150601f19603f3d011682016040523d82523d6000602084013e610a40565b606091505b5050905080610a7b576040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b6000610aab828473ffffffffffffffffffffffffffffffffffffffff16610b1f90919063ffffffff16565b90506000815114158015610ad0575080806020019051810190610ace91906110aa565b155b15610b1257826040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610b099190610e56565b60405180910390fd5b505050565b600033905090565b6060610b2d83836000610b35565b905092915050565b606081471015610b7c57306040517fcd786059000000000000000000000000000000000000000000000000000000008152600401610b739190610e56565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff168486604051610ba5919061113d565b60006040518083038185875af1925050503d8060008114610be2576040519150601f19603f3d011682016040523d82523d6000602084013e610be7565b606091505b5091509150610bf7868383610c02565b925050509392505050565b606082610c1757610c1282610c91565b610c89565b60008251148015610c3f575060008473ffffffffffffffffffffffffffffffffffffffff163b145b15610c8157836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401610c789190610e56565b60405180910390fd5b819050610c8a565b5b9392505050565b600081511115610ca45780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080fd5b600067ffffffffffffffff82169050919050565b610cf881610cdb565b8114610d0357600080fd5b50565b600081359050610d1581610cef565b92915050565b600060208284031215610d3157610d30610cd6565b5b6000610d3f84828501610d06565b91505092915050565b6000819050919050565b610d5b81610d48565b82525050565b6000602082019050610d766000830184610d52565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610da782610d7c565b9050919050565b610db781610d9c565b8114610dc257600080fd5b50565b600081359050610dd481610dae565b92915050565b600060208284031215610df057610def610cd6565b5b6000610dfe84828501610dc5565b91505092915050565b60008060408385031215610e1e57610e1d610cd6565b5b6000610e2c85828601610dc5565b9250506020610e3d85828601610d06565b9150509250929050565b610e5081610d9c565b82525050565b6000602082019050610e6b6000830184610e47565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610eab82610d48565b9150610eb683610d48565b9250828201905080821115610ece57610ecd610e71565b5b92915050565b610edd81610d48565b8114610ee857600080fd5b50565b600081519050610efa81610ed4565b92915050565b600060208284031215610f1657610f15610cd6565b5b6000610f2484828501610eeb565b91505092915050565b6000610f3882610d48565b9150610f4383610d48565b9250828203905081811115610f5b57610f5a610e71565b5b92915050565b6000610f6c82610d48565b9150610f7783610d48565b9250828202610f8581610d48565b91508282048414831517610f9c57610f9b610e71565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610fdd82610d48565b9150610fe883610d48565b925082610ff857610ff7610fa3565b5b828204905092915050565b60006040820190506110186000830185610e47565b6110256020830184610d52565b9392505050565b600081905092915050565b50565b600061104760008361102c565b915061105282611037565b600082019050919050565b60006110688261103a565b9150819050919050565b60008115159050919050565b61108781611072565b811461109257600080fd5b50565b6000815190506110a48161107e565b92915050565b6000602082840312156110c0576110bf610cd6565b5b60006110ce84828501611095565b91505092915050565b600081519050919050565b60005b838110156111005780820151818401526020810190506110e5565b60008484015250505050565b6000611117826110d7565b611121818561102c565b93506111318185602086016110e2565b80840191505092915050565b6000611149828461110c565b91508190509291505056fea26469706673582212202bb56f1f9348c000eea4ff0f22e80af2c473cfba2642417c6b4a02bf5c1b54c564736f6c63430008180033","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH3 0x149F CODESIZE SUB DUP1 PUSH3 0x149F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x29 SWAP2 SWAP1 PUSH3 0x265 JUMP JUMPDEST DUP3 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x9F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x96 SWAP2 SWAP1 PUSH3 0x2D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xB0 DUP2 PUSH3 0xF2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH3 0x2EF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1E8 DUP3 PUSH3 0x1BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1FA DUP2 PUSH3 0x1DB JUMP JUMPDEST DUP2 EQ PUSH3 0x206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x21A DUP2 PUSH3 0x1EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x23F DUP2 PUSH3 0x220 JUMP JUMPDEST DUP2 EQ PUSH3 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x25F DUP2 PUSH3 0x234 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x281 JUMPI PUSH3 0x280 PUSH3 0x1B6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x291 DUP7 DUP3 DUP8 ADD PUSH3 0x209 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x2A4 DUP7 DUP3 DUP8 ADD PUSH3 0x24E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x2B7 DUP7 DUP3 DUP8 ADD PUSH3 0x24E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH3 0x2CC DUP2 PUSH3 0x1DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x2E9 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x2C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x118A PUSH3 0x315 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x38C ADD MSTORE PUSH1 0x0 PUSH2 0x64B ADD MSTORE PUSH2 0x118A PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE1 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x96132521 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xBE9A6555 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0xEFBE1C1C EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xFBCCEDAE EQ PUSH2 0x338 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x96132521 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x9852595C EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0xA3F8EACE EQ PUSH2 0x27C JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x810EC23B EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x86D1A69F EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E9 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0xA17B06B EQ PUSH2 0xED JUMPI DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x19165587 EQ PUSH2 0x155 JUMPI PUSH2 0xE8 JUMP JUMPDEST CALLDATASIZE PUSH2 0xE8 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xD1B JUMP JUMPDEST PUSH2 0x363 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH2 0x388 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x177 SWAP2 SWAP1 PUSH2 0xDDA JUMP JUMPDEST PUSH2 0x3BA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x193 PUSH2 0x481 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x495 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x535 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x5CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x266 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x261 SWAP2 SWAP1 PUSH2 0xDDA JUMP JUMPDEST PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29E SWAP2 SWAP1 PUSH2 0xDDA JUMP JUMPDEST PUSH2 0x621 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CE PUSH2 0x647 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F9 PUSH2 0x679 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x306 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x336 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x331 SWAP2 SWAP1 PUSH2 0xDDA JUMP JUMPDEST PUSH2 0x69A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34D PUSH2 0x720 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35A SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x381 PUSH2 0x370 PUSH2 0x5CE JUMP JUMPDEST SELFBALANCE PUSH2 0x37B SWAP2 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST DUP4 PUSH2 0x742 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C5 DUP3 PUSH2 0x621 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x416 SWAP2 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B DUP3 PUSH1 0x40 MLOAD PUSH2 0x463 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x47D DUP3 PUSH2 0x477 PUSH2 0x5A5 JUMP JUMPDEST DUP4 PUSH2 0x7C9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x489 PUSH2 0x848 JUMP JUMPDEST PUSH2 0x493 PUSH1 0x0 PUSH2 0x8CF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52D PUSH2 0x4A3 DUP5 PUSH2 0x5D8 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DC SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x51D SWAP2 SWAP1 PUSH2 0xF00 JUMP JUMPDEST PUSH2 0x527 SWAP2 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST DUP4 PUSH2 0x742 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53F PUSH2 0x720 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x553 SWAP2 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xDA9D4E5F101B8B9B1C5B76D0C5A9F7923571ACFC02376AA076B75A8C080C956B DUP2 PUSH1 0x40 MLOAD PUSH2 0x589 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x5A2 PUSH2 0x59C PUSH2 0x5A5 JUMP JUMPDEST DUP3 PUSH2 0x993 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62C DUP3 PUSH2 0x5D8 JUMP JUMPDEST PUSH2 0x636 DUP4 TIMESTAMP PUSH2 0x495 JUMP JUMPDEST PUSH2 0x640 SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x683 PUSH2 0x388 JUMP JUMPDEST PUSH2 0x68B PUSH2 0x647 JUMP JUMPDEST PUSH2 0x695 SWAP2 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6A2 PUSH2 0x848 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x714 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70B SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x71D DUP2 PUSH2 0x8CF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x72A PUSH2 0x5CE JUMP JUMPDEST PUSH2 0x733 TIMESTAMP PUSH2 0x363 JUMP JUMPDEST PUSH2 0x73D SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74C PUSH2 0x647 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x766 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x7C3 JUMP JUMPDEST PUSH2 0x76E PUSH2 0x679 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT PUSH2 0x786 JUMPI DUP3 SWAP1 POP PUSH2 0x7C3 JUMP JUMPDEST PUSH2 0x78E PUSH2 0x388 JUMP JUMPDEST PUSH2 0x796 PUSH2 0x647 JUMP JUMPDEST DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x7AB SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST DUP5 PUSH2 0x7B6 SWAP2 SWAP1 PUSH2 0xF61 JUMP JUMPDEST PUSH2 0x7C0 SWAP2 SWAP1 PUSH2 0xFD2 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x843 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x7FC SWAP3 SWAP2 SWAP1 PUSH2 0x1003 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xA80 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x850 PUSH2 0xB17 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x86E PUSH2 0x5A5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8CD JUMPI PUSH2 0x891 PUSH2 0xB17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C4 SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x9D8 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CF SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x9FE SWAP1 PUSH2 0x105D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA3B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAAB DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB1F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0xAD0 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xACE SWAP2 SWAP1 PUSH2 0x10AA JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xB12 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB09 SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB2D DUP4 DUP4 PUSH1 0x0 PUSH2 0xB35 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0xB7C JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB73 SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0xBA5 SWAP2 SWAP1 PUSH2 0x113D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xBE2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xBF7 DUP7 DUP4 DUP4 PUSH2 0xC02 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0xC17 JUMPI PUSH2 0xC12 DUP3 PUSH2 0xC91 JUMP JUMPDEST PUSH2 0xC89 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0xC3F JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xC81 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC78 SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0xC8A JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xCA4 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF8 DUP2 PUSH2 0xCDB JUMP JUMPDEST DUP2 EQ PUSH2 0xD03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD15 DUP2 PUSH2 0xCEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD31 JUMPI PUSH2 0xD30 PUSH2 0xCD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD3F DUP5 DUP3 DUP6 ADD PUSH2 0xD06 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD5B DUP2 PUSH2 0xD48 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD76 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD52 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA7 DUP3 PUSH2 0xD7C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDB7 DUP2 PUSH2 0xD9C JUMP JUMPDEST DUP2 EQ PUSH2 0xDC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDD4 DUP2 PUSH2 0xDAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF0 JUMPI PUSH2 0xDEF PUSH2 0xCD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDFE DUP5 DUP3 DUP6 ADD PUSH2 0xDC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE1E JUMPI PUSH2 0xE1D PUSH2 0xCD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE2C DUP6 DUP3 DUP7 ADD PUSH2 0xDC5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE3D DUP6 DUP3 DUP7 ADD PUSH2 0xD06 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xE50 DUP2 PUSH2 0xD9C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE6B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE47 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEAB DUP3 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP PUSH2 0xEB6 DUP4 PUSH2 0xD48 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xECE JUMPI PUSH2 0xECD PUSH2 0xE71 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEDD DUP2 PUSH2 0xD48 JUMP JUMPDEST DUP2 EQ PUSH2 0xEE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xEFA DUP2 PUSH2 0xED4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF16 JUMPI PUSH2 0xF15 PUSH2 0xCD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF24 DUP5 DUP3 DUP6 ADD PUSH2 0xEEB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF38 DUP3 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP PUSH2 0xF43 DUP4 PUSH2 0xD48 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xF5B JUMPI PUSH2 0xF5A PUSH2 0xE71 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF6C DUP3 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP PUSH2 0xF77 DUP4 PUSH2 0xD48 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xF85 DUP2 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xF9C JUMPI PUSH2 0xF9B PUSH2 0xE71 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFDD DUP3 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP PUSH2 0xFE8 DUP4 PUSH2 0xD48 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xFF8 JUMPI PUSH2 0xFF7 PUSH2 0xFA3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1018 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xE47 JUMP JUMPDEST PUSH2 0x1025 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD52 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1047 PUSH1 0x0 DUP4 PUSH2 0x102C JUMP JUMPDEST SWAP2 POP PUSH2 0x1052 DUP3 PUSH2 0x1037 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1068 DUP3 PUSH2 0x103A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1087 DUP2 PUSH2 0x1072 JUMP JUMPDEST DUP2 EQ PUSH2 0x1092 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x10A4 DUP2 PUSH2 0x107E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10C0 JUMPI PUSH2 0x10BF PUSH2 0xCD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10CE DUP5 DUP3 DUP6 ADD PUSH2 0x1095 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1100 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1117 DUP3 PUSH2 0x10D7 JUMP JUMPDEST PUSH2 0x1121 DUP2 DUP6 PUSH2 0x102C JUMP JUMPDEST SWAP4 POP PUSH2 0x1131 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x10E2 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1149 DUP3 DUP5 PUSH2 0x110C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B 0xB5 PUSH16 0x1F9348C000EEA4FF0F22E80AF2C473CF 0xBA 0x26 TIMESTAMP COINBASE PUSH29 0x6B4A02BF5C1B54C564736F6C6343000818003300000000000000000000 ","sourceMap":"1638:4032:1:-:0;;;2143:186;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2239:11;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;2271:14:1::1;2262:23;;;;;;;;::::0;::::1;2307:15;2295:27;;;;;;;;::::0;::::1;2143:186:::0;;;1638:4032;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:27:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:101::-;881:7;921:18;914:5;910:30;899:41;;845:101;;;:::o;952:120::-;1024:23;1041:5;1024:23;:::i;:::-;1017:5;1014:34;1004:62;;1062:1;1059;1052:12;1004:62;952:120;:::o;1078:141::-;1134:5;1165:6;1159:13;1150:22;;1181:32;1207:5;1181:32;:::i;:::-;1078:141;;;;:::o;1225:659::-;1311:6;1319;1327;1376:2;1364:9;1355:7;1351:23;1347:32;1344:119;;;1382:79;;:::i;:::-;1344:119;1502:1;1527:64;1583:7;1574:6;1563:9;1559:22;1527:64;:::i;:::-;1517:74;;1473:128;1640:2;1666:63;1721:7;1712:6;1701:9;1697:22;1666:63;:::i;:::-;1656:73;;1611:128;1778:2;1804:63;1859:7;1850:6;1839:9;1835:22;1804:63;:::i;:::-;1794:73;;1749:128;1225:659;;;;;:::o;1890:118::-;1977:24;1995:5;1977:24;:::i;:::-;1972:3;1965:37;1890:118;;:::o;2014:222::-;2107:4;2145:2;2134:9;2130:18;2122:26;;2158:71;2226:1;2215:9;2211:17;2202:6;2158:71;:::i;:::-;2014:222;;;;:::o;1638:4032:1:-;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_211":{"entryPoint":null,"id":211,"parameterSlots":0,"returnSlots":0},"@_callOptionalReturn_1669":{"entryPoint":2688,"id":1669,"parameterSlots":2,"returnSlots":0},"@_checkOwner_84":{"entryPoint":2120,"id":84,"parameterSlots":0,"returnSlots":0},"@_msgSender_1984":{"entryPoint":2839,"id":1984,"parameterSlots":0,"returnSlots":1},"@_revert_1971":{"entryPoint":3217,"id":1971,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":2255,"id":146,"parameterSlots":1,"returnSlots":0},"@_vestingSchedule_457":{"entryPoint":1858,"id":457,"parameterSlots":2,"returnSlots":1},"@duration_229":{"entryPoint":904,"id":229,"parameterSlots":0,"returnSlots":1},"@end_242":{"entryPoint":1657,"id":242,"parameterSlots":0,"returnSlots":1},"@functionCallWithValue_1839":{"entryPoint":2869,"id":1839,"parameterSlots":3,"returnSlots":1},"@functionCall_1793":{"entryPoint":2847,"id":1793,"parameterSlots":2,"returnSlots":1},"@owner_67":{"entryPoint":1445,"id":67,"parameterSlots":0,"returnSlots":1},"@releasable_282":{"entryPoint":1824,"id":282,"parameterSlots":0,"returnSlots":1},"@releasable_304":{"entryPoint":1569,"id":304,"parameterSlots":1,"returnSlots":1},"@release_333":{"entryPoint":1333,"id":333,"parameterSlots":0,"returnSlots":0},"@release_368":{"entryPoint":954,"id":368,"parameterSlots":1,"returnSlots":0},"@released_251":{"entryPoint":1486,"id":251,"parameterSlots":0,"returnSlots":1},"@released_264":{"entryPoint":1496,"id":264,"parameterSlots":1,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":1153,"id":98,"parameterSlots":0,"returnSlots":0},"@safeTransfer_1479":{"entryPoint":1993,"id":1479,"parameterSlots":3,"returnSlots":0},"@sendValue_1776":{"entryPoint":2451,"id":1776,"parameterSlots":2,"returnSlots":0},"@start_220":{"entryPoint":1607,"id":220,"parameterSlots":0,"returnSlots":1},"@transferOwnership_126":{"entryPoint":1690,"id":126,"parameterSlots":1,"returnSlots":0},"@verifyCallResultFromTarget_1931":{"entryPoint":3074,"id":1931,"parameterSlots":3,"returnSlots":1},"@vestedAmount_389":{"entryPoint":867,"id":389,"parameterSlots":1,"returnSlots":1},"@vestedAmount_417":{"entryPoint":1173,"id":417,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":3525,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":4245,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":3819,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64":{"entryPoint":3334,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3546,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint64":{"entryPoint":3591,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":4266,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":3840,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint64":{"entryPoint":3355,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3655,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4364,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4154,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3410,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":4413,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":4189,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3670,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":4099,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3425,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":4311,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4140,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3744,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":4050,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":3937,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":3885,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3484,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":4210,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3452,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3400,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":3291,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":4322,"id":null,"parameterSlots":3,"returnSlots":0},"panic_error_0x11":{"entryPoint":3697,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":4003,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3286,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":4151,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3502,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":4222,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3796,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":3311,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:8294:27","nodeType":"YulBlock","src":"0:8294:27","statements":[{"body":{"nativeSrc":"47:35:27","nodeType":"YulBlock","src":"47:35:27","statements":[{"nativeSrc":"57:19:27","nodeType":"YulAssignment","src":"57:19:27","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:27","nodeType":"YulLiteral","src":"73:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:27","nodeType":"YulIdentifier","src":"67:5:27"},"nativeSrc":"67:9:27","nodeType":"YulFunctionCall","src":"67:9:27"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:27","nodeType":"YulIdentifier","src":"57:6:27"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:27","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:27","nodeType":"YulTypedName","src":"40:6:27","type":""}],"src":"7:75:27"},{"body":{"nativeSrc":"177:28:27","nodeType":"YulBlock","src":"177:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:27","nodeType":"YulLiteral","src":"194:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:27","nodeType":"YulLiteral","src":"197:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:27","nodeType":"YulIdentifier","src":"187:6:27"},"nativeSrc":"187:12:27","nodeType":"YulFunctionCall","src":"187:12:27"},"nativeSrc":"187:12:27","nodeType":"YulExpressionStatement","src":"187:12:27"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:27","nodeType":"YulFunctionDefinition","src":"88:117:27"},{"body":{"nativeSrc":"300:28:27","nodeType":"YulBlock","src":"300:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:27","nodeType":"YulLiteral","src":"317:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:27","nodeType":"YulLiteral","src":"320:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:27","nodeType":"YulIdentifier","src":"310:6:27"},"nativeSrc":"310:12:27","nodeType":"YulFunctionCall","src":"310:12:27"},"nativeSrc":"310:12:27","nodeType":"YulExpressionStatement","src":"310:12:27"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:27","nodeType":"YulFunctionDefinition","src":"211:117:27"},{"body":{"nativeSrc":"378:57:27","nodeType":"YulBlock","src":"378:57:27","statements":[{"nativeSrc":"388:41:27","nodeType":"YulAssignment","src":"388:41:27","value":{"arguments":[{"name":"value","nativeSrc":"403:5:27","nodeType":"YulIdentifier","src":"403:5:27"},{"kind":"number","nativeSrc":"410:18:27","nodeType":"YulLiteral","src":"410:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"399:3:27","nodeType":"YulIdentifier","src":"399:3:27"},"nativeSrc":"399:30:27","nodeType":"YulFunctionCall","src":"399:30:27"},"variableNames":[{"name":"cleaned","nativeSrc":"388:7:27","nodeType":"YulIdentifier","src":"388:7:27"}]}]},"name":"cleanup_t_uint64","nativeSrc":"334:101:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"360:5:27","nodeType":"YulTypedName","src":"360:5:27","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"370:7:27","nodeType":"YulTypedName","src":"370:7:27","type":""}],"src":"334:101:27"},{"body":{"nativeSrc":"483:78:27","nodeType":"YulBlock","src":"483:78:27","statements":[{"body":{"nativeSrc":"539:16:27","nodeType":"YulBlock","src":"539:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"548:1:27","nodeType":"YulLiteral","src":"548:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"551:1:27","nodeType":"YulLiteral","src":"551:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"541:6:27","nodeType":"YulIdentifier","src":"541:6:27"},"nativeSrc":"541:12:27","nodeType":"YulFunctionCall","src":"541:12:27"},"nativeSrc":"541:12:27","nodeType":"YulExpressionStatement","src":"541:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"506:5:27","nodeType":"YulIdentifier","src":"506:5:27"},{"arguments":[{"name":"value","nativeSrc":"530:5:27","nodeType":"YulIdentifier","src":"530:5:27"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"513:16:27","nodeType":"YulIdentifier","src":"513:16:27"},"nativeSrc":"513:23:27","nodeType":"YulFunctionCall","src":"513:23:27"}],"functionName":{"name":"eq","nativeSrc":"503:2:27","nodeType":"YulIdentifier","src":"503:2:27"},"nativeSrc":"503:34:27","nodeType":"YulFunctionCall","src":"503:34:27"}],"functionName":{"name":"iszero","nativeSrc":"496:6:27","nodeType":"YulIdentifier","src":"496:6:27"},"nativeSrc":"496:42:27","nodeType":"YulFunctionCall","src":"496:42:27"},"nativeSrc":"493:62:27","nodeType":"YulIf","src":"493:62:27"}]},"name":"validator_revert_t_uint64","nativeSrc":"441:120:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"476:5:27","nodeType":"YulTypedName","src":"476:5:27","type":""}],"src":"441:120:27"},{"body":{"nativeSrc":"618:86:27","nodeType":"YulBlock","src":"618:86:27","statements":[{"nativeSrc":"628:29:27","nodeType":"YulAssignment","src":"628:29:27","value":{"arguments":[{"name":"offset","nativeSrc":"650:6:27","nodeType":"YulIdentifier","src":"650:6:27"}],"functionName":{"name":"calldataload","nativeSrc":"637:12:27","nodeType":"YulIdentifier","src":"637:12:27"},"nativeSrc":"637:20:27","nodeType":"YulFunctionCall","src":"637:20:27"},"variableNames":[{"name":"value","nativeSrc":"628:5:27","nodeType":"YulIdentifier","src":"628:5:27"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"692:5:27","nodeType":"YulIdentifier","src":"692:5:27"}],"functionName":{"name":"validator_revert_t_uint64","nativeSrc":"666:25:27","nodeType":"YulIdentifier","src":"666:25:27"},"nativeSrc":"666:32:27","nodeType":"YulFunctionCall","src":"666:32:27"},"nativeSrc":"666:32:27","nodeType":"YulExpressionStatement","src":"666:32:27"}]},"name":"abi_decode_t_uint64","nativeSrc":"567:137:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"596:6:27","nodeType":"YulTypedName","src":"596:6:27","type":""},{"name":"end","nativeSrc":"604:3:27","nodeType":"YulTypedName","src":"604:3:27","type":""}],"returnVariables":[{"name":"value","nativeSrc":"612:5:27","nodeType":"YulTypedName","src":"612:5:27","type":""}],"src":"567:137:27"},{"body":{"nativeSrc":"775:262:27","nodeType":"YulBlock","src":"775:262:27","statements":[{"body":{"nativeSrc":"821:83:27","nodeType":"YulBlock","src":"821:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"823:77:27","nodeType":"YulIdentifier","src":"823:77:27"},"nativeSrc":"823:79:27","nodeType":"YulFunctionCall","src":"823:79:27"},"nativeSrc":"823:79:27","nodeType":"YulExpressionStatement","src":"823:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"796:7:27","nodeType":"YulIdentifier","src":"796:7:27"},{"name":"headStart","nativeSrc":"805:9:27","nodeType":"YulIdentifier","src":"805:9:27"}],"functionName":{"name":"sub","nativeSrc":"792:3:27","nodeType":"YulIdentifier","src":"792:3:27"},"nativeSrc":"792:23:27","nodeType":"YulFunctionCall","src":"792:23:27"},{"kind":"number","nativeSrc":"817:2:27","nodeType":"YulLiteral","src":"817:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"788:3:27","nodeType":"YulIdentifier","src":"788:3:27"},"nativeSrc":"788:32:27","nodeType":"YulFunctionCall","src":"788:32:27"},"nativeSrc":"785:119:27","nodeType":"YulIf","src":"785:119:27"},{"nativeSrc":"914:116:27","nodeType":"YulBlock","src":"914:116:27","statements":[{"nativeSrc":"929:15:27","nodeType":"YulVariableDeclaration","src":"929:15:27","value":{"kind":"number","nativeSrc":"943:1:27","nodeType":"YulLiteral","src":"943:1:27","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"933:6:27","nodeType":"YulTypedName","src":"933:6:27","type":""}]},{"nativeSrc":"958:62:27","nodeType":"YulAssignment","src":"958:62:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"992:9:27","nodeType":"YulIdentifier","src":"992:9:27"},{"name":"offset","nativeSrc":"1003:6:27","nodeType":"YulIdentifier","src":"1003:6:27"}],"functionName":{"name":"add","nativeSrc":"988:3:27","nodeType":"YulIdentifier","src":"988:3:27"},"nativeSrc":"988:22:27","nodeType":"YulFunctionCall","src":"988:22:27"},{"name":"dataEnd","nativeSrc":"1012:7:27","nodeType":"YulIdentifier","src":"1012:7:27"}],"functionName":{"name":"abi_decode_t_uint64","nativeSrc":"968:19:27","nodeType":"YulIdentifier","src":"968:19:27"},"nativeSrc":"968:52:27","nodeType":"YulFunctionCall","src":"968:52:27"},"variableNames":[{"name":"value0","nativeSrc":"958:6:27","nodeType":"YulIdentifier","src":"958:6:27"}]}]}]},"name":"abi_decode_tuple_t_uint64","nativeSrc":"710:327:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"745:9:27","nodeType":"YulTypedName","src":"745:9:27","type":""},{"name":"dataEnd","nativeSrc":"756:7:27","nodeType":"YulTypedName","src":"756:7:27","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"768:6:27","nodeType":"YulTypedName","src":"768:6:27","type":""}],"src":"710:327:27"},{"body":{"nativeSrc":"1088:32:27","nodeType":"YulBlock","src":"1088:32:27","statements":[{"nativeSrc":"1098:16:27","nodeType":"YulAssignment","src":"1098:16:27","value":{"name":"value","nativeSrc":"1109:5:27","nodeType":"YulIdentifier","src":"1109:5:27"},"variableNames":[{"name":"cleaned","nativeSrc":"1098:7:27","nodeType":"YulIdentifier","src":"1098:7:27"}]}]},"name":"cleanup_t_uint256","nativeSrc":"1043:77:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1070:5:27","nodeType":"YulTypedName","src":"1070:5:27","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1080:7:27","nodeType":"YulTypedName","src":"1080:7:27","type":""}],"src":"1043:77:27"},{"body":{"nativeSrc":"1191:53:27","nodeType":"YulBlock","src":"1191:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1208:3:27","nodeType":"YulIdentifier","src":"1208:3:27"},{"arguments":[{"name":"value","nativeSrc":"1231:5:27","nodeType":"YulIdentifier","src":"1231:5:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1213:17:27","nodeType":"YulIdentifier","src":"1213:17:27"},"nativeSrc":"1213:24:27","nodeType":"YulFunctionCall","src":"1213:24:27"}],"functionName":{"name":"mstore","nativeSrc":"1201:6:27","nodeType":"YulIdentifier","src":"1201:6:27"},"nativeSrc":"1201:37:27","nodeType":"YulFunctionCall","src":"1201:37:27"},"nativeSrc":"1201:37:27","nodeType":"YulExpressionStatement","src":"1201:37:27"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"1126:118:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1179:5:27","nodeType":"YulTypedName","src":"1179:5:27","type":""},{"name":"pos","nativeSrc":"1186:3:27","nodeType":"YulTypedName","src":"1186:3:27","type":""}],"src":"1126:118:27"},{"body":{"nativeSrc":"1348:124:27","nodeType":"YulBlock","src":"1348:124:27","statements":[{"nativeSrc":"1358:26:27","nodeType":"YulAssignment","src":"1358:26:27","value":{"arguments":[{"name":"headStart","nativeSrc":"1370:9:27","nodeType":"YulIdentifier","src":"1370:9:27"},{"kind":"number","nativeSrc":"1381:2:27","nodeType":"YulLiteral","src":"1381:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1366:3:27","nodeType":"YulIdentifier","src":"1366:3:27"},"nativeSrc":"1366:18:27","nodeType":"YulFunctionCall","src":"1366:18:27"},"variableNames":[{"name":"tail","nativeSrc":"1358:4:27","nodeType":"YulIdentifier","src":"1358:4:27"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1438:6:27","nodeType":"YulIdentifier","src":"1438:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"1451:9:27","nodeType":"YulIdentifier","src":"1451:9:27"},{"kind":"number","nativeSrc":"1462:1:27","nodeType":"YulLiteral","src":"1462:1:27","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1447:3:27","nodeType":"YulIdentifier","src":"1447:3:27"},"nativeSrc":"1447:17:27","nodeType":"YulFunctionCall","src":"1447:17:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"1394:43:27","nodeType":"YulIdentifier","src":"1394:43:27"},"nativeSrc":"1394:71:27","nodeType":"YulFunctionCall","src":"1394:71:27"},"nativeSrc":"1394:71:27","nodeType":"YulExpressionStatement","src":"1394:71:27"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"1250:222:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1320:9:27","nodeType":"YulTypedName","src":"1320:9:27","type":""},{"name":"value0","nativeSrc":"1332:6:27","nodeType":"YulTypedName","src":"1332:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1343:4:27","nodeType":"YulTypedName","src":"1343:4:27","type":""}],"src":"1250:222:27"},{"body":{"nativeSrc":"1523:81:27","nodeType":"YulBlock","src":"1523:81:27","statements":[{"nativeSrc":"1533:65:27","nodeType":"YulAssignment","src":"1533:65:27","value":{"arguments":[{"name":"value","nativeSrc":"1548:5:27","nodeType":"YulIdentifier","src":"1548:5:27"},{"kind":"number","nativeSrc":"1555:42:27","nodeType":"YulLiteral","src":"1555:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1544:3:27","nodeType":"YulIdentifier","src":"1544:3:27"},"nativeSrc":"1544:54:27","nodeType":"YulFunctionCall","src":"1544:54:27"},"variableNames":[{"name":"cleaned","nativeSrc":"1533:7:27","nodeType":"YulIdentifier","src":"1533:7:27"}]}]},"name":"cleanup_t_uint160","nativeSrc":"1478:126:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1505:5:27","nodeType":"YulTypedName","src":"1505:5:27","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1515:7:27","nodeType":"YulTypedName","src":"1515:7:27","type":""}],"src":"1478:126:27"},{"body":{"nativeSrc":"1655:51:27","nodeType":"YulBlock","src":"1655:51:27","statements":[{"nativeSrc":"1665:35:27","nodeType":"YulAssignment","src":"1665:35:27","value":{"arguments":[{"name":"value","nativeSrc":"1694:5:27","nodeType":"YulIdentifier","src":"1694:5:27"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1676:17:27","nodeType":"YulIdentifier","src":"1676:17:27"},"nativeSrc":"1676:24:27","nodeType":"YulFunctionCall","src":"1676:24:27"},"variableNames":[{"name":"cleaned","nativeSrc":"1665:7:27","nodeType":"YulIdentifier","src":"1665:7:27"}]}]},"name":"cleanup_t_address","nativeSrc":"1610:96:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1637:5:27","nodeType":"YulTypedName","src":"1637:5:27","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1647:7:27","nodeType":"YulTypedName","src":"1647:7:27","type":""}],"src":"1610:96:27"},{"body":{"nativeSrc":"1755:79:27","nodeType":"YulBlock","src":"1755:79:27","statements":[{"body":{"nativeSrc":"1812:16:27","nodeType":"YulBlock","src":"1812:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1821:1:27","nodeType":"YulLiteral","src":"1821:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"1824:1:27","nodeType":"YulLiteral","src":"1824:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1814:6:27","nodeType":"YulIdentifier","src":"1814:6:27"},"nativeSrc":"1814:12:27","nodeType":"YulFunctionCall","src":"1814:12:27"},"nativeSrc":"1814:12:27","nodeType":"YulExpressionStatement","src":"1814:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1778:5:27","nodeType":"YulIdentifier","src":"1778:5:27"},{"arguments":[{"name":"value","nativeSrc":"1803:5:27","nodeType":"YulIdentifier","src":"1803:5:27"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1785:17:27","nodeType":"YulIdentifier","src":"1785:17:27"},"nativeSrc":"1785:24:27","nodeType":"YulFunctionCall","src":"1785:24:27"}],"functionName":{"name":"eq","nativeSrc":"1775:2:27","nodeType":"YulIdentifier","src":"1775:2:27"},"nativeSrc":"1775:35:27","nodeType":"YulFunctionCall","src":"1775:35:27"}],"functionName":{"name":"iszero","nativeSrc":"1768:6:27","nodeType":"YulIdentifier","src":"1768:6:27"},"nativeSrc":"1768:43:27","nodeType":"YulFunctionCall","src":"1768:43:27"},"nativeSrc":"1765:63:27","nodeType":"YulIf","src":"1765:63:27"}]},"name":"validator_revert_t_address","nativeSrc":"1712:122:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1748:5:27","nodeType":"YulTypedName","src":"1748:5:27","type":""}],"src":"1712:122:27"},{"body":{"nativeSrc":"1892:87:27","nodeType":"YulBlock","src":"1892:87:27","statements":[{"nativeSrc":"1902:29:27","nodeType":"YulAssignment","src":"1902:29:27","value":{"arguments":[{"name":"offset","nativeSrc":"1924:6:27","nodeType":"YulIdentifier","src":"1924:6:27"}],"functionName":{"name":"calldataload","nativeSrc":"1911:12:27","nodeType":"YulIdentifier","src":"1911:12:27"},"nativeSrc":"1911:20:27","nodeType":"YulFunctionCall","src":"1911:20:27"},"variableNames":[{"name":"value","nativeSrc":"1902:5:27","nodeType":"YulIdentifier","src":"1902:5:27"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1967:5:27","nodeType":"YulIdentifier","src":"1967:5:27"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"1940:26:27","nodeType":"YulIdentifier","src":"1940:26:27"},"nativeSrc":"1940:33:27","nodeType":"YulFunctionCall","src":"1940:33:27"},"nativeSrc":"1940:33:27","nodeType":"YulExpressionStatement","src":"1940:33:27"}]},"name":"abi_decode_t_address","nativeSrc":"1840:139:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1870:6:27","nodeType":"YulTypedName","src":"1870:6:27","type":""},{"name":"end","nativeSrc":"1878:3:27","nodeType":"YulTypedName","src":"1878:3:27","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1886:5:27","nodeType":"YulTypedName","src":"1886:5:27","type":""}],"src":"1840:139:27"},{"body":{"nativeSrc":"2051:263:27","nodeType":"YulBlock","src":"2051:263:27","statements":[{"body":{"nativeSrc":"2097:83:27","nodeType":"YulBlock","src":"2097:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2099:77:27","nodeType":"YulIdentifier","src":"2099:77:27"},"nativeSrc":"2099:79:27","nodeType":"YulFunctionCall","src":"2099:79:27"},"nativeSrc":"2099:79:27","nodeType":"YulExpressionStatement","src":"2099:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2072:7:27","nodeType":"YulIdentifier","src":"2072:7:27"},{"name":"headStart","nativeSrc":"2081:9:27","nodeType":"YulIdentifier","src":"2081:9:27"}],"functionName":{"name":"sub","nativeSrc":"2068:3:27","nodeType":"YulIdentifier","src":"2068:3:27"},"nativeSrc":"2068:23:27","nodeType":"YulFunctionCall","src":"2068:23:27"},{"kind":"number","nativeSrc":"2093:2:27","nodeType":"YulLiteral","src":"2093:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2064:3:27","nodeType":"YulIdentifier","src":"2064:3:27"},"nativeSrc":"2064:32:27","nodeType":"YulFunctionCall","src":"2064:32:27"},"nativeSrc":"2061:119:27","nodeType":"YulIf","src":"2061:119:27"},{"nativeSrc":"2190:117:27","nodeType":"YulBlock","src":"2190:117:27","statements":[{"nativeSrc":"2205:15:27","nodeType":"YulVariableDeclaration","src":"2205:15:27","value":{"kind":"number","nativeSrc":"2219:1:27","nodeType":"YulLiteral","src":"2219:1:27","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2209:6:27","nodeType":"YulTypedName","src":"2209:6:27","type":""}]},{"nativeSrc":"2234:63:27","nodeType":"YulAssignment","src":"2234:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2269:9:27","nodeType":"YulIdentifier","src":"2269:9:27"},{"name":"offset","nativeSrc":"2280:6:27","nodeType":"YulIdentifier","src":"2280:6:27"}],"functionName":{"name":"add","nativeSrc":"2265:3:27","nodeType":"YulIdentifier","src":"2265:3:27"},"nativeSrc":"2265:22:27","nodeType":"YulFunctionCall","src":"2265:22:27"},{"name":"dataEnd","nativeSrc":"2289:7:27","nodeType":"YulIdentifier","src":"2289:7:27"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2244:20:27","nodeType":"YulIdentifier","src":"2244:20:27"},"nativeSrc":"2244:53:27","nodeType":"YulFunctionCall","src":"2244:53:27"},"variableNames":[{"name":"value0","nativeSrc":"2234:6:27","nodeType":"YulIdentifier","src":"2234:6:27"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"1985:329:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2021:9:27","nodeType":"YulTypedName","src":"2021:9:27","type":""},{"name":"dataEnd","nativeSrc":"2032:7:27","nodeType":"YulTypedName","src":"2032:7:27","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2044:6:27","nodeType":"YulTypedName","src":"2044:6:27","type":""}],"src":"1985:329:27"},{"body":{"nativeSrc":"2402:390:27","nodeType":"YulBlock","src":"2402:390:27","statements":[{"body":{"nativeSrc":"2448:83:27","nodeType":"YulBlock","src":"2448:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2450:77:27","nodeType":"YulIdentifier","src":"2450:77:27"},"nativeSrc":"2450:79:27","nodeType":"YulFunctionCall","src":"2450:79:27"},"nativeSrc":"2450:79:27","nodeType":"YulExpressionStatement","src":"2450:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2423:7:27","nodeType":"YulIdentifier","src":"2423:7:27"},{"name":"headStart","nativeSrc":"2432:9:27","nodeType":"YulIdentifier","src":"2432:9:27"}],"functionName":{"name":"sub","nativeSrc":"2419:3:27","nodeType":"YulIdentifier","src":"2419:3:27"},"nativeSrc":"2419:23:27","nodeType":"YulFunctionCall","src":"2419:23:27"},{"kind":"number","nativeSrc":"2444:2:27","nodeType":"YulLiteral","src":"2444:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2415:3:27","nodeType":"YulIdentifier","src":"2415:3:27"},"nativeSrc":"2415:32:27","nodeType":"YulFunctionCall","src":"2415:32:27"},"nativeSrc":"2412:119:27","nodeType":"YulIf","src":"2412:119:27"},{"nativeSrc":"2541:117:27","nodeType":"YulBlock","src":"2541:117:27","statements":[{"nativeSrc":"2556:15:27","nodeType":"YulVariableDeclaration","src":"2556:15:27","value":{"kind":"number","nativeSrc":"2570:1:27","nodeType":"YulLiteral","src":"2570:1:27","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2560:6:27","nodeType":"YulTypedName","src":"2560:6:27","type":""}]},{"nativeSrc":"2585:63:27","nodeType":"YulAssignment","src":"2585:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2620:9:27","nodeType":"YulIdentifier","src":"2620:9:27"},{"name":"offset","nativeSrc":"2631:6:27","nodeType":"YulIdentifier","src":"2631:6:27"}],"functionName":{"name":"add","nativeSrc":"2616:3:27","nodeType":"YulIdentifier","src":"2616:3:27"},"nativeSrc":"2616:22:27","nodeType":"YulFunctionCall","src":"2616:22:27"},{"name":"dataEnd","nativeSrc":"2640:7:27","nodeType":"YulIdentifier","src":"2640:7:27"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2595:20:27","nodeType":"YulIdentifier","src":"2595:20:27"},"nativeSrc":"2595:53:27","nodeType":"YulFunctionCall","src":"2595:53:27"},"variableNames":[{"name":"value0","nativeSrc":"2585:6:27","nodeType":"YulIdentifier","src":"2585:6:27"}]}]},{"nativeSrc":"2668:117:27","nodeType":"YulBlock","src":"2668:117:27","statements":[{"nativeSrc":"2683:16:27","nodeType":"YulVariableDeclaration","src":"2683:16:27","value":{"kind":"number","nativeSrc":"2697:2:27","nodeType":"YulLiteral","src":"2697:2:27","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2687:6:27","nodeType":"YulTypedName","src":"2687:6:27","type":""}]},{"nativeSrc":"2713:62:27","nodeType":"YulAssignment","src":"2713:62:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2747:9:27","nodeType":"YulIdentifier","src":"2747:9:27"},{"name":"offset","nativeSrc":"2758:6:27","nodeType":"YulIdentifier","src":"2758:6:27"}],"functionName":{"name":"add","nativeSrc":"2743:3:27","nodeType":"YulIdentifier","src":"2743:3:27"},"nativeSrc":"2743:22:27","nodeType":"YulFunctionCall","src":"2743:22:27"},{"name":"dataEnd","nativeSrc":"2767:7:27","nodeType":"YulIdentifier","src":"2767:7:27"}],"functionName":{"name":"abi_decode_t_uint64","nativeSrc":"2723:19:27","nodeType":"YulIdentifier","src":"2723:19:27"},"nativeSrc":"2723:52:27","nodeType":"YulFunctionCall","src":"2723:52:27"},"variableNames":[{"name":"value1","nativeSrc":"2713:6:27","nodeType":"YulIdentifier","src":"2713:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint64","nativeSrc":"2320:472:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2364:9:27","nodeType":"YulTypedName","src":"2364:9:27","type":""},{"name":"dataEnd","nativeSrc":"2375:7:27","nodeType":"YulTypedName","src":"2375:7:27","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2387:6:27","nodeType":"YulTypedName","src":"2387:6:27","type":""},{"name":"value1","nativeSrc":"2395:6:27","nodeType":"YulTypedName","src":"2395:6:27","type":""}],"src":"2320:472:27"},{"body":{"nativeSrc":"2863:53:27","nodeType":"YulBlock","src":"2863:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2880:3:27","nodeType":"YulIdentifier","src":"2880:3:27"},{"arguments":[{"name":"value","nativeSrc":"2903:5:27","nodeType":"YulIdentifier","src":"2903:5:27"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"2885:17:27","nodeType":"YulIdentifier","src":"2885:17:27"},"nativeSrc":"2885:24:27","nodeType":"YulFunctionCall","src":"2885:24:27"}],"functionName":{"name":"mstore","nativeSrc":"2873:6:27","nodeType":"YulIdentifier","src":"2873:6:27"},"nativeSrc":"2873:37:27","nodeType":"YulFunctionCall","src":"2873:37:27"},"nativeSrc":"2873:37:27","nodeType":"YulExpressionStatement","src":"2873:37:27"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"2798:118:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2851:5:27","nodeType":"YulTypedName","src":"2851:5:27","type":""},{"name":"pos","nativeSrc":"2858:3:27","nodeType":"YulTypedName","src":"2858:3:27","type":""}],"src":"2798:118:27"},{"body":{"nativeSrc":"3020:124:27","nodeType":"YulBlock","src":"3020:124:27","statements":[{"nativeSrc":"3030:26:27","nodeType":"YulAssignment","src":"3030:26:27","value":{"arguments":[{"name":"headStart","nativeSrc":"3042:9:27","nodeType":"YulIdentifier","src":"3042:9:27"},{"kind":"number","nativeSrc":"3053:2:27","nodeType":"YulLiteral","src":"3053:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3038:3:27","nodeType":"YulIdentifier","src":"3038:3:27"},"nativeSrc":"3038:18:27","nodeType":"YulFunctionCall","src":"3038:18:27"},"variableNames":[{"name":"tail","nativeSrc":"3030:4:27","nodeType":"YulIdentifier","src":"3030:4:27"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3110:6:27","nodeType":"YulIdentifier","src":"3110:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"3123:9:27","nodeType":"YulIdentifier","src":"3123:9:27"},{"kind":"number","nativeSrc":"3134:1:27","nodeType":"YulLiteral","src":"3134:1:27","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3119:3:27","nodeType":"YulIdentifier","src":"3119:3:27"},"nativeSrc":"3119:17:27","nodeType":"YulFunctionCall","src":"3119:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"3066:43:27","nodeType":"YulIdentifier","src":"3066:43:27"},"nativeSrc":"3066:71:27","nodeType":"YulFunctionCall","src":"3066:71:27"},"nativeSrc":"3066:71:27","nodeType":"YulExpressionStatement","src":"3066:71:27"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"2922:222:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2992:9:27","nodeType":"YulTypedName","src":"2992:9:27","type":""},{"name":"value0","nativeSrc":"3004:6:27","nodeType":"YulTypedName","src":"3004:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3015:4:27","nodeType":"YulTypedName","src":"3015:4:27","type":""}],"src":"2922:222:27"},{"body":{"nativeSrc":"3178:152:27","nodeType":"YulBlock","src":"3178:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3195:1:27","nodeType":"YulLiteral","src":"3195:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"3198:77:27","nodeType":"YulLiteral","src":"3198:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"3188:6:27","nodeType":"YulIdentifier","src":"3188:6:27"},"nativeSrc":"3188:88:27","nodeType":"YulFunctionCall","src":"3188:88:27"},"nativeSrc":"3188:88:27","nodeType":"YulExpressionStatement","src":"3188:88:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3292:1:27","nodeType":"YulLiteral","src":"3292:1:27","type":"","value":"4"},{"kind":"number","nativeSrc":"3295:4:27","nodeType":"YulLiteral","src":"3295:4:27","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"3285:6:27","nodeType":"YulIdentifier","src":"3285:6:27"},"nativeSrc":"3285:15:27","nodeType":"YulFunctionCall","src":"3285:15:27"},"nativeSrc":"3285:15:27","nodeType":"YulExpressionStatement","src":"3285:15:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3316:1:27","nodeType":"YulLiteral","src":"3316:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"3319:4:27","nodeType":"YulLiteral","src":"3319:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3309:6:27","nodeType":"YulIdentifier","src":"3309:6:27"},"nativeSrc":"3309:15:27","nodeType":"YulFunctionCall","src":"3309:15:27"},"nativeSrc":"3309:15:27","nodeType":"YulExpressionStatement","src":"3309:15:27"}]},"name":"panic_error_0x11","nativeSrc":"3150:180:27","nodeType":"YulFunctionDefinition","src":"3150:180:27"},{"body":{"nativeSrc":"3380:147:27","nodeType":"YulBlock","src":"3380:147:27","statements":[{"nativeSrc":"3390:25:27","nodeType":"YulAssignment","src":"3390:25:27","value":{"arguments":[{"name":"x","nativeSrc":"3413:1:27","nodeType":"YulIdentifier","src":"3413:1:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3395:17:27","nodeType":"YulIdentifier","src":"3395:17:27"},"nativeSrc":"3395:20:27","nodeType":"YulFunctionCall","src":"3395:20:27"},"variableNames":[{"name":"x","nativeSrc":"3390:1:27","nodeType":"YulIdentifier","src":"3390:1:27"}]},{"nativeSrc":"3424:25:27","nodeType":"YulAssignment","src":"3424:25:27","value":{"arguments":[{"name":"y","nativeSrc":"3447:1:27","nodeType":"YulIdentifier","src":"3447:1:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3429:17:27","nodeType":"YulIdentifier","src":"3429:17:27"},"nativeSrc":"3429:20:27","nodeType":"YulFunctionCall","src":"3429:20:27"},"variableNames":[{"name":"y","nativeSrc":"3424:1:27","nodeType":"YulIdentifier","src":"3424:1:27"}]},{"nativeSrc":"3458:16:27","nodeType":"YulAssignment","src":"3458:16:27","value":{"arguments":[{"name":"x","nativeSrc":"3469:1:27","nodeType":"YulIdentifier","src":"3469:1:27"},{"name":"y","nativeSrc":"3472:1:27","nodeType":"YulIdentifier","src":"3472:1:27"}],"functionName":{"name":"add","nativeSrc":"3465:3:27","nodeType":"YulIdentifier","src":"3465:3:27"},"nativeSrc":"3465:9:27","nodeType":"YulFunctionCall","src":"3465:9:27"},"variableNames":[{"name":"sum","nativeSrc":"3458:3:27","nodeType":"YulIdentifier","src":"3458:3:27"}]},{"body":{"nativeSrc":"3498:22:27","nodeType":"YulBlock","src":"3498:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"3500:16:27","nodeType":"YulIdentifier","src":"3500:16:27"},"nativeSrc":"3500:18:27","nodeType":"YulFunctionCall","src":"3500:18:27"},"nativeSrc":"3500:18:27","nodeType":"YulExpressionStatement","src":"3500:18:27"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"3490:1:27","nodeType":"YulIdentifier","src":"3490:1:27"},{"name":"sum","nativeSrc":"3493:3:27","nodeType":"YulIdentifier","src":"3493:3:27"}],"functionName":{"name":"gt","nativeSrc":"3487:2:27","nodeType":"YulIdentifier","src":"3487:2:27"},"nativeSrc":"3487:10:27","nodeType":"YulFunctionCall","src":"3487:10:27"},"nativeSrc":"3484:36:27","nodeType":"YulIf","src":"3484:36:27"}]},"name":"checked_add_t_uint256","nativeSrc":"3336:191:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"3367:1:27","nodeType":"YulTypedName","src":"3367:1:27","type":""},{"name":"y","nativeSrc":"3370:1:27","nodeType":"YulTypedName","src":"3370:1:27","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"3376:3:27","nodeType":"YulTypedName","src":"3376:3:27","type":""}],"src":"3336:191:27"},{"body":{"nativeSrc":"3576:79:27","nodeType":"YulBlock","src":"3576:79:27","statements":[{"body":{"nativeSrc":"3633:16:27","nodeType":"YulBlock","src":"3633:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3642:1:27","nodeType":"YulLiteral","src":"3642:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"3645:1:27","nodeType":"YulLiteral","src":"3645:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3635:6:27","nodeType":"YulIdentifier","src":"3635:6:27"},"nativeSrc":"3635:12:27","nodeType":"YulFunctionCall","src":"3635:12:27"},"nativeSrc":"3635:12:27","nodeType":"YulExpressionStatement","src":"3635:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3599:5:27","nodeType":"YulIdentifier","src":"3599:5:27"},{"arguments":[{"name":"value","nativeSrc":"3624:5:27","nodeType":"YulIdentifier","src":"3624:5:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3606:17:27","nodeType":"YulIdentifier","src":"3606:17:27"},"nativeSrc":"3606:24:27","nodeType":"YulFunctionCall","src":"3606:24:27"}],"functionName":{"name":"eq","nativeSrc":"3596:2:27","nodeType":"YulIdentifier","src":"3596:2:27"},"nativeSrc":"3596:35:27","nodeType":"YulFunctionCall","src":"3596:35:27"}],"functionName":{"name":"iszero","nativeSrc":"3589:6:27","nodeType":"YulIdentifier","src":"3589:6:27"},"nativeSrc":"3589:43:27","nodeType":"YulFunctionCall","src":"3589:43:27"},"nativeSrc":"3586:63:27","nodeType":"YulIf","src":"3586:63:27"}]},"name":"validator_revert_t_uint256","nativeSrc":"3533:122:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3569:5:27","nodeType":"YulTypedName","src":"3569:5:27","type":""}],"src":"3533:122:27"},{"body":{"nativeSrc":"3724:80:27","nodeType":"YulBlock","src":"3724:80:27","statements":[{"nativeSrc":"3734:22:27","nodeType":"YulAssignment","src":"3734:22:27","value":{"arguments":[{"name":"offset","nativeSrc":"3749:6:27","nodeType":"YulIdentifier","src":"3749:6:27"}],"functionName":{"name":"mload","nativeSrc":"3743:5:27","nodeType":"YulIdentifier","src":"3743:5:27"},"nativeSrc":"3743:13:27","nodeType":"YulFunctionCall","src":"3743:13:27"},"variableNames":[{"name":"value","nativeSrc":"3734:5:27","nodeType":"YulIdentifier","src":"3734:5:27"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3792:5:27","nodeType":"YulIdentifier","src":"3792:5:27"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"3765:26:27","nodeType":"YulIdentifier","src":"3765:26:27"},"nativeSrc":"3765:33:27","nodeType":"YulFunctionCall","src":"3765:33:27"},"nativeSrc":"3765:33:27","nodeType":"YulExpressionStatement","src":"3765:33:27"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"3661:143:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3702:6:27","nodeType":"YulTypedName","src":"3702:6:27","type":""},{"name":"end","nativeSrc":"3710:3:27","nodeType":"YulTypedName","src":"3710:3:27","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3718:5:27","nodeType":"YulTypedName","src":"3718:5:27","type":""}],"src":"3661:143:27"},{"body":{"nativeSrc":"3887:274:27","nodeType":"YulBlock","src":"3887:274:27","statements":[{"body":{"nativeSrc":"3933:83:27","nodeType":"YulBlock","src":"3933:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3935:77:27","nodeType":"YulIdentifier","src":"3935:77:27"},"nativeSrc":"3935:79:27","nodeType":"YulFunctionCall","src":"3935:79:27"},"nativeSrc":"3935:79:27","nodeType":"YulExpressionStatement","src":"3935:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3908:7:27","nodeType":"YulIdentifier","src":"3908:7:27"},{"name":"headStart","nativeSrc":"3917:9:27","nodeType":"YulIdentifier","src":"3917:9:27"}],"functionName":{"name":"sub","nativeSrc":"3904:3:27","nodeType":"YulIdentifier","src":"3904:3:27"},"nativeSrc":"3904:23:27","nodeType":"YulFunctionCall","src":"3904:23:27"},{"kind":"number","nativeSrc":"3929:2:27","nodeType":"YulLiteral","src":"3929:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3900:3:27","nodeType":"YulIdentifier","src":"3900:3:27"},"nativeSrc":"3900:32:27","nodeType":"YulFunctionCall","src":"3900:32:27"},"nativeSrc":"3897:119:27","nodeType":"YulIf","src":"3897:119:27"},{"nativeSrc":"4026:128:27","nodeType":"YulBlock","src":"4026:128:27","statements":[{"nativeSrc":"4041:15:27","nodeType":"YulVariableDeclaration","src":"4041:15:27","value":{"kind":"number","nativeSrc":"4055:1:27","nodeType":"YulLiteral","src":"4055:1:27","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4045:6:27","nodeType":"YulTypedName","src":"4045:6:27","type":""}]},{"nativeSrc":"4070:74:27","nodeType":"YulAssignment","src":"4070:74:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4116:9:27","nodeType":"YulIdentifier","src":"4116:9:27"},{"name":"offset","nativeSrc":"4127:6:27","nodeType":"YulIdentifier","src":"4127:6:27"}],"functionName":{"name":"add","nativeSrc":"4112:3:27","nodeType":"YulIdentifier","src":"4112:3:27"},"nativeSrc":"4112:22:27","nodeType":"YulFunctionCall","src":"4112:22:27"},{"name":"dataEnd","nativeSrc":"4136:7:27","nodeType":"YulIdentifier","src":"4136:7:27"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"4080:31:27","nodeType":"YulIdentifier","src":"4080:31:27"},"nativeSrc":"4080:64:27","nodeType":"YulFunctionCall","src":"4080:64:27"},"variableNames":[{"name":"value0","nativeSrc":"4070:6:27","nodeType":"YulIdentifier","src":"4070:6:27"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"3810:351:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3857:9:27","nodeType":"YulTypedName","src":"3857:9:27","type":""},{"name":"dataEnd","nativeSrc":"3868:7:27","nodeType":"YulTypedName","src":"3868:7:27","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3880:6:27","nodeType":"YulTypedName","src":"3880:6:27","type":""}],"src":"3810:351:27"},{"body":{"nativeSrc":"4212:149:27","nodeType":"YulBlock","src":"4212:149:27","statements":[{"nativeSrc":"4222:25:27","nodeType":"YulAssignment","src":"4222:25:27","value":{"arguments":[{"name":"x","nativeSrc":"4245:1:27","nodeType":"YulIdentifier","src":"4245:1:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"4227:17:27","nodeType":"YulIdentifier","src":"4227:17:27"},"nativeSrc":"4227:20:27","nodeType":"YulFunctionCall","src":"4227:20:27"},"variableNames":[{"name":"x","nativeSrc":"4222:1:27","nodeType":"YulIdentifier","src":"4222:1:27"}]},{"nativeSrc":"4256:25:27","nodeType":"YulAssignment","src":"4256:25:27","value":{"arguments":[{"name":"y","nativeSrc":"4279:1:27","nodeType":"YulIdentifier","src":"4279:1:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"4261:17:27","nodeType":"YulIdentifier","src":"4261:17:27"},"nativeSrc":"4261:20:27","nodeType":"YulFunctionCall","src":"4261:20:27"},"variableNames":[{"name":"y","nativeSrc":"4256:1:27","nodeType":"YulIdentifier","src":"4256:1:27"}]},{"nativeSrc":"4290:17:27","nodeType":"YulAssignment","src":"4290:17:27","value":{"arguments":[{"name":"x","nativeSrc":"4302:1:27","nodeType":"YulIdentifier","src":"4302:1:27"},{"name":"y","nativeSrc":"4305:1:27","nodeType":"YulIdentifier","src":"4305:1:27"}],"functionName":{"name":"sub","nativeSrc":"4298:3:27","nodeType":"YulIdentifier","src":"4298:3:27"},"nativeSrc":"4298:9:27","nodeType":"YulFunctionCall","src":"4298:9:27"},"variableNames":[{"name":"diff","nativeSrc":"4290:4:27","nodeType":"YulIdentifier","src":"4290:4:27"}]},{"body":{"nativeSrc":"4332:22:27","nodeType":"YulBlock","src":"4332:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"4334:16:27","nodeType":"YulIdentifier","src":"4334:16:27"},"nativeSrc":"4334:18:27","nodeType":"YulFunctionCall","src":"4334:18:27"},"nativeSrc":"4334:18:27","nodeType":"YulExpressionStatement","src":"4334:18:27"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"4323:4:27","nodeType":"YulIdentifier","src":"4323:4:27"},{"name":"x","nativeSrc":"4329:1:27","nodeType":"YulIdentifier","src":"4329:1:27"}],"functionName":{"name":"gt","nativeSrc":"4320:2:27","nodeType":"YulIdentifier","src":"4320:2:27"},"nativeSrc":"4320:11:27","nodeType":"YulFunctionCall","src":"4320:11:27"},"nativeSrc":"4317:37:27","nodeType":"YulIf","src":"4317:37:27"}]},"name":"checked_sub_t_uint256","nativeSrc":"4167:194:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"4198:1:27","nodeType":"YulTypedName","src":"4198:1:27","type":""},{"name":"y","nativeSrc":"4201:1:27","nodeType":"YulTypedName","src":"4201:1:27","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"4207:4:27","nodeType":"YulTypedName","src":"4207:4:27","type":""}],"src":"4167:194:27"},{"body":{"nativeSrc":"4415:362:27","nodeType":"YulBlock","src":"4415:362:27","statements":[{"nativeSrc":"4425:25:27","nodeType":"YulAssignment","src":"4425:25:27","value":{"arguments":[{"name":"x","nativeSrc":"4448:1:27","nodeType":"YulIdentifier","src":"4448:1:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"4430:17:27","nodeType":"YulIdentifier","src":"4430:17:27"},"nativeSrc":"4430:20:27","nodeType":"YulFunctionCall","src":"4430:20:27"},"variableNames":[{"name":"x","nativeSrc":"4425:1:27","nodeType":"YulIdentifier","src":"4425:1:27"}]},{"nativeSrc":"4459:25:27","nodeType":"YulAssignment","src":"4459:25:27","value":{"arguments":[{"name":"y","nativeSrc":"4482:1:27","nodeType":"YulIdentifier","src":"4482:1:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"4464:17:27","nodeType":"YulIdentifier","src":"4464:17:27"},"nativeSrc":"4464:20:27","nodeType":"YulFunctionCall","src":"4464:20:27"},"variableNames":[{"name":"y","nativeSrc":"4459:1:27","nodeType":"YulIdentifier","src":"4459:1:27"}]},{"nativeSrc":"4493:28:27","nodeType":"YulVariableDeclaration","src":"4493:28:27","value":{"arguments":[{"name":"x","nativeSrc":"4516:1:27","nodeType":"YulIdentifier","src":"4516:1:27"},{"name":"y","nativeSrc":"4519:1:27","nodeType":"YulIdentifier","src":"4519:1:27"}],"functionName":{"name":"mul","nativeSrc":"4512:3:27","nodeType":"YulIdentifier","src":"4512:3:27"},"nativeSrc":"4512:9:27","nodeType":"YulFunctionCall","src":"4512:9:27"},"variables":[{"name":"product_raw","nativeSrc":"4497:11:27","nodeType":"YulTypedName","src":"4497:11:27","type":""}]},{"nativeSrc":"4530:41:27","nodeType":"YulAssignment","src":"4530:41:27","value":{"arguments":[{"name":"product_raw","nativeSrc":"4559:11:27","nodeType":"YulIdentifier","src":"4559:11:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"4541:17:27","nodeType":"YulIdentifier","src":"4541:17:27"},"nativeSrc":"4541:30:27","nodeType":"YulFunctionCall","src":"4541:30:27"},"variableNames":[{"name":"product","nativeSrc":"4530:7:27","nodeType":"YulIdentifier","src":"4530:7:27"}]},{"body":{"nativeSrc":"4748:22:27","nodeType":"YulBlock","src":"4748:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"4750:16:27","nodeType":"YulIdentifier","src":"4750:16:27"},"nativeSrc":"4750:18:27","nodeType":"YulFunctionCall","src":"4750:18:27"},"nativeSrc":"4750:18:27","nodeType":"YulExpressionStatement","src":"4750:18:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"4681:1:27","nodeType":"YulIdentifier","src":"4681:1:27"}],"functionName":{"name":"iszero","nativeSrc":"4674:6:27","nodeType":"YulIdentifier","src":"4674:6:27"},"nativeSrc":"4674:9:27","nodeType":"YulFunctionCall","src":"4674:9:27"},{"arguments":[{"name":"y","nativeSrc":"4704:1:27","nodeType":"YulIdentifier","src":"4704:1:27"},{"arguments":[{"name":"product","nativeSrc":"4711:7:27","nodeType":"YulIdentifier","src":"4711:7:27"},{"name":"x","nativeSrc":"4720:1:27","nodeType":"YulIdentifier","src":"4720:1:27"}],"functionName":{"name":"div","nativeSrc":"4707:3:27","nodeType":"YulIdentifier","src":"4707:3:27"},"nativeSrc":"4707:15:27","nodeType":"YulFunctionCall","src":"4707:15:27"}],"functionName":{"name":"eq","nativeSrc":"4701:2:27","nodeType":"YulIdentifier","src":"4701:2:27"},"nativeSrc":"4701:22:27","nodeType":"YulFunctionCall","src":"4701:22:27"}],"functionName":{"name":"or","nativeSrc":"4654:2:27","nodeType":"YulIdentifier","src":"4654:2:27"},"nativeSrc":"4654:83:27","nodeType":"YulFunctionCall","src":"4654:83:27"}],"functionName":{"name":"iszero","nativeSrc":"4634:6:27","nodeType":"YulIdentifier","src":"4634:6:27"},"nativeSrc":"4634:113:27","nodeType":"YulFunctionCall","src":"4634:113:27"},"nativeSrc":"4631:139:27","nodeType":"YulIf","src":"4631:139:27"}]},"name":"checked_mul_t_uint256","nativeSrc":"4367:410:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"4398:1:27","nodeType":"YulTypedName","src":"4398:1:27","type":""},{"name":"y","nativeSrc":"4401:1:27","nodeType":"YulTypedName","src":"4401:1:27","type":""}],"returnVariables":[{"name":"product","nativeSrc":"4407:7:27","nodeType":"YulTypedName","src":"4407:7:27","type":""}],"src":"4367:410:27"},{"body":{"nativeSrc":"4811:152:27","nodeType":"YulBlock","src":"4811:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4828:1:27","nodeType":"YulLiteral","src":"4828:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"4831:77:27","nodeType":"YulLiteral","src":"4831:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"4821:6:27","nodeType":"YulIdentifier","src":"4821:6:27"},"nativeSrc":"4821:88:27","nodeType":"YulFunctionCall","src":"4821:88:27"},"nativeSrc":"4821:88:27","nodeType":"YulExpressionStatement","src":"4821:88:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4925:1:27","nodeType":"YulLiteral","src":"4925:1:27","type":"","value":"4"},{"kind":"number","nativeSrc":"4928:4:27","nodeType":"YulLiteral","src":"4928:4:27","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"4918:6:27","nodeType":"YulIdentifier","src":"4918:6:27"},"nativeSrc":"4918:15:27","nodeType":"YulFunctionCall","src":"4918:15:27"},"nativeSrc":"4918:15:27","nodeType":"YulExpressionStatement","src":"4918:15:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4949:1:27","nodeType":"YulLiteral","src":"4949:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"4952:4:27","nodeType":"YulLiteral","src":"4952:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"4942:6:27","nodeType":"YulIdentifier","src":"4942:6:27"},"nativeSrc":"4942:15:27","nodeType":"YulFunctionCall","src":"4942:15:27"},"nativeSrc":"4942:15:27","nodeType":"YulExpressionStatement","src":"4942:15:27"}]},"name":"panic_error_0x12","nativeSrc":"4783:180:27","nodeType":"YulFunctionDefinition","src":"4783:180:27"},{"body":{"nativeSrc":"5011:143:27","nodeType":"YulBlock","src":"5011:143:27","statements":[{"nativeSrc":"5021:25:27","nodeType":"YulAssignment","src":"5021:25:27","value":{"arguments":[{"name":"x","nativeSrc":"5044:1:27","nodeType":"YulIdentifier","src":"5044:1:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5026:17:27","nodeType":"YulIdentifier","src":"5026:17:27"},"nativeSrc":"5026:20:27","nodeType":"YulFunctionCall","src":"5026:20:27"},"variableNames":[{"name":"x","nativeSrc":"5021:1:27","nodeType":"YulIdentifier","src":"5021:1:27"}]},{"nativeSrc":"5055:25:27","nodeType":"YulAssignment","src":"5055:25:27","value":{"arguments":[{"name":"y","nativeSrc":"5078:1:27","nodeType":"YulIdentifier","src":"5078:1:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5060:17:27","nodeType":"YulIdentifier","src":"5060:17:27"},"nativeSrc":"5060:20:27","nodeType":"YulFunctionCall","src":"5060:20:27"},"variableNames":[{"name":"y","nativeSrc":"5055:1:27","nodeType":"YulIdentifier","src":"5055:1:27"}]},{"body":{"nativeSrc":"5102:22:27","nodeType":"YulBlock","src":"5102:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"5104:16:27","nodeType":"YulIdentifier","src":"5104:16:27"},"nativeSrc":"5104:18:27","nodeType":"YulFunctionCall","src":"5104:18:27"},"nativeSrc":"5104:18:27","nodeType":"YulExpressionStatement","src":"5104:18:27"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"5099:1:27","nodeType":"YulIdentifier","src":"5099:1:27"}],"functionName":{"name":"iszero","nativeSrc":"5092:6:27","nodeType":"YulIdentifier","src":"5092:6:27"},"nativeSrc":"5092:9:27","nodeType":"YulFunctionCall","src":"5092:9:27"},"nativeSrc":"5089:35:27","nodeType":"YulIf","src":"5089:35:27"},{"nativeSrc":"5134:14:27","nodeType":"YulAssignment","src":"5134:14:27","value":{"arguments":[{"name":"x","nativeSrc":"5143:1:27","nodeType":"YulIdentifier","src":"5143:1:27"},{"name":"y","nativeSrc":"5146:1:27","nodeType":"YulIdentifier","src":"5146:1:27"}],"functionName":{"name":"div","nativeSrc":"5139:3:27","nodeType":"YulIdentifier","src":"5139:3:27"},"nativeSrc":"5139:9:27","nodeType":"YulFunctionCall","src":"5139:9:27"},"variableNames":[{"name":"r","nativeSrc":"5134:1:27","nodeType":"YulIdentifier","src":"5134:1:27"}]}]},"name":"checked_div_t_uint256","nativeSrc":"4969:185:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"5000:1:27","nodeType":"YulTypedName","src":"5000:1:27","type":""},{"name":"y","nativeSrc":"5003:1:27","nodeType":"YulTypedName","src":"5003:1:27","type":""}],"returnVariables":[{"name":"r","nativeSrc":"5009:1:27","nodeType":"YulTypedName","src":"5009:1:27","type":""}],"src":"4969:185:27"},{"body":{"nativeSrc":"5286:206:27","nodeType":"YulBlock","src":"5286:206:27","statements":[{"nativeSrc":"5296:26:27","nodeType":"YulAssignment","src":"5296:26:27","value":{"arguments":[{"name":"headStart","nativeSrc":"5308:9:27","nodeType":"YulIdentifier","src":"5308:9:27"},{"kind":"number","nativeSrc":"5319:2:27","nodeType":"YulLiteral","src":"5319:2:27","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5304:3:27","nodeType":"YulIdentifier","src":"5304:3:27"},"nativeSrc":"5304:18:27","nodeType":"YulFunctionCall","src":"5304:18:27"},"variableNames":[{"name":"tail","nativeSrc":"5296:4:27","nodeType":"YulIdentifier","src":"5296:4:27"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5376:6:27","nodeType":"YulIdentifier","src":"5376:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"5389:9:27","nodeType":"YulIdentifier","src":"5389:9:27"},{"kind":"number","nativeSrc":"5400:1:27","nodeType":"YulLiteral","src":"5400:1:27","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5385:3:27","nodeType":"YulIdentifier","src":"5385:3:27"},"nativeSrc":"5385:17:27","nodeType":"YulFunctionCall","src":"5385:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5332:43:27","nodeType":"YulIdentifier","src":"5332:43:27"},"nativeSrc":"5332:71:27","nodeType":"YulFunctionCall","src":"5332:71:27"},"nativeSrc":"5332:71:27","nodeType":"YulExpressionStatement","src":"5332:71:27"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"5457:6:27","nodeType":"YulIdentifier","src":"5457:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"5470:9:27","nodeType":"YulIdentifier","src":"5470:9:27"},{"kind":"number","nativeSrc":"5481:2:27","nodeType":"YulLiteral","src":"5481:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5466:3:27","nodeType":"YulIdentifier","src":"5466:3:27"},"nativeSrc":"5466:18:27","nodeType":"YulFunctionCall","src":"5466:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"5413:43:27","nodeType":"YulIdentifier","src":"5413:43:27"},"nativeSrc":"5413:72:27","nodeType":"YulFunctionCall","src":"5413:72:27"},"nativeSrc":"5413:72:27","nodeType":"YulExpressionStatement","src":"5413:72:27"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"5160:332:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5250:9:27","nodeType":"YulTypedName","src":"5250:9:27","type":""},{"name":"value1","nativeSrc":"5262:6:27","nodeType":"YulTypedName","src":"5262:6:27","type":""},{"name":"value0","nativeSrc":"5270:6:27","nodeType":"YulTypedName","src":"5270:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5281:4:27","nodeType":"YulTypedName","src":"5281:4:27","type":""}],"src":"5160:332:27"},{"body":{"nativeSrc":"5611:34:27","nodeType":"YulBlock","src":"5611:34:27","statements":[{"nativeSrc":"5621:18:27","nodeType":"YulAssignment","src":"5621:18:27","value":{"name":"pos","nativeSrc":"5636:3:27","nodeType":"YulIdentifier","src":"5636:3:27"},"variableNames":[{"name":"updated_pos","nativeSrc":"5621:11:27","nodeType":"YulIdentifier","src":"5621:11:27"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"5498:147:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"5583:3:27","nodeType":"YulTypedName","src":"5583:3:27","type":""},{"name":"length","nativeSrc":"5588:6:27","nodeType":"YulTypedName","src":"5588:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"5599:11:27","nodeType":"YulTypedName","src":"5599:11:27","type":""}],"src":"5498:147:27"},{"body":{"nativeSrc":"5757:8:27","nodeType":"YulBlock","src":"5757:8:27","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"5651:114:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"5749:6:27","nodeType":"YulTypedName","src":"5749:6:27","type":""}],"src":"5651:114:27"},{"body":{"nativeSrc":"5934:235:27","nodeType":"YulBlock","src":"5934:235:27","statements":[{"nativeSrc":"5944:90:27","nodeType":"YulAssignment","src":"5944:90:27","value":{"arguments":[{"name":"pos","nativeSrc":"6027:3:27","nodeType":"YulIdentifier","src":"6027:3:27"},{"kind":"number","nativeSrc":"6032:1:27","nodeType":"YulLiteral","src":"6032:1:27","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"5951:75:27","nodeType":"YulIdentifier","src":"5951:75:27"},"nativeSrc":"5951:83:27","nodeType":"YulFunctionCall","src":"5951:83:27"},"variableNames":[{"name":"pos","nativeSrc":"5944:3:27","nodeType":"YulIdentifier","src":"5944:3:27"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"6132:3:27","nodeType":"YulIdentifier","src":"6132:3:27"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"6043:88:27","nodeType":"YulIdentifier","src":"6043:88:27"},"nativeSrc":"6043:93:27","nodeType":"YulFunctionCall","src":"6043:93:27"},"nativeSrc":"6043:93:27","nodeType":"YulExpressionStatement","src":"6043:93:27"},{"nativeSrc":"6145:18:27","nodeType":"YulAssignment","src":"6145:18:27","value":{"arguments":[{"name":"pos","nativeSrc":"6156:3:27","nodeType":"YulIdentifier","src":"6156:3:27"},{"kind":"number","nativeSrc":"6161:1:27","nodeType":"YulLiteral","src":"6161:1:27","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6152:3:27","nodeType":"YulIdentifier","src":"6152:3:27"},"nativeSrc":"6152:11:27","nodeType":"YulFunctionCall","src":"6152:11:27"},"variableNames":[{"name":"end","nativeSrc":"6145:3:27","nodeType":"YulIdentifier","src":"6145:3:27"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"5771:398:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"5922:3:27","nodeType":"YulTypedName","src":"5922:3:27","type":""}],"returnVariables":[{"name":"end","nativeSrc":"5930:3:27","nodeType":"YulTypedName","src":"5930:3:27","type":""}],"src":"5771:398:27"},{"body":{"nativeSrc":"6363:191:27","nodeType":"YulBlock","src":"6363:191:27","statements":[{"nativeSrc":"6374:154:27","nodeType":"YulAssignment","src":"6374:154:27","value":{"arguments":[{"name":"pos","nativeSrc":"6524:3:27","nodeType":"YulIdentifier","src":"6524:3:27"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"6381:141:27","nodeType":"YulIdentifier","src":"6381:141:27"},"nativeSrc":"6381:147:27","nodeType":"YulFunctionCall","src":"6381:147:27"},"variableNames":[{"name":"pos","nativeSrc":"6374:3:27","nodeType":"YulIdentifier","src":"6374:3:27"}]},{"nativeSrc":"6538:10:27","nodeType":"YulAssignment","src":"6538:10:27","value":{"name":"pos","nativeSrc":"6545:3:27","nodeType":"YulIdentifier","src":"6545:3:27"},"variableNames":[{"name":"end","nativeSrc":"6538:3:27","nodeType":"YulIdentifier","src":"6538:3:27"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"6175:379:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"6350:3:27","nodeType":"YulTypedName","src":"6350:3:27","type":""}],"returnVariables":[{"name":"end","nativeSrc":"6359:3:27","nodeType":"YulTypedName","src":"6359:3:27","type":""}],"src":"6175:379:27"},{"body":{"nativeSrc":"6602:48:27","nodeType":"YulBlock","src":"6602:48:27","statements":[{"nativeSrc":"6612:32:27","nodeType":"YulAssignment","src":"6612:32:27","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6637:5:27","nodeType":"YulIdentifier","src":"6637:5:27"}],"functionName":{"name":"iszero","nativeSrc":"6630:6:27","nodeType":"YulIdentifier","src":"6630:6:27"},"nativeSrc":"6630:13:27","nodeType":"YulFunctionCall","src":"6630:13:27"}],"functionName":{"name":"iszero","nativeSrc":"6623:6:27","nodeType":"YulIdentifier","src":"6623:6:27"},"nativeSrc":"6623:21:27","nodeType":"YulFunctionCall","src":"6623:21:27"},"variableNames":[{"name":"cleaned","nativeSrc":"6612:7:27","nodeType":"YulIdentifier","src":"6612:7:27"}]}]},"name":"cleanup_t_bool","nativeSrc":"6560:90:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6584:5:27","nodeType":"YulTypedName","src":"6584:5:27","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"6594:7:27","nodeType":"YulTypedName","src":"6594:7:27","type":""}],"src":"6560:90:27"},{"body":{"nativeSrc":"6696:76:27","nodeType":"YulBlock","src":"6696:76:27","statements":[{"body":{"nativeSrc":"6750:16:27","nodeType":"YulBlock","src":"6750:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6759:1:27","nodeType":"YulLiteral","src":"6759:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"6762:1:27","nodeType":"YulLiteral","src":"6762:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6752:6:27","nodeType":"YulIdentifier","src":"6752:6:27"},"nativeSrc":"6752:12:27","nodeType":"YulFunctionCall","src":"6752:12:27"},"nativeSrc":"6752:12:27","nodeType":"YulExpressionStatement","src":"6752:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6719:5:27","nodeType":"YulIdentifier","src":"6719:5:27"},{"arguments":[{"name":"value","nativeSrc":"6741:5:27","nodeType":"YulIdentifier","src":"6741:5:27"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"6726:14:27","nodeType":"YulIdentifier","src":"6726:14:27"},"nativeSrc":"6726:21:27","nodeType":"YulFunctionCall","src":"6726:21:27"}],"functionName":{"name":"eq","nativeSrc":"6716:2:27","nodeType":"YulIdentifier","src":"6716:2:27"},"nativeSrc":"6716:32:27","nodeType":"YulFunctionCall","src":"6716:32:27"}],"functionName":{"name":"iszero","nativeSrc":"6709:6:27","nodeType":"YulIdentifier","src":"6709:6:27"},"nativeSrc":"6709:40:27","nodeType":"YulFunctionCall","src":"6709:40:27"},"nativeSrc":"6706:60:27","nodeType":"YulIf","src":"6706:60:27"}]},"name":"validator_revert_t_bool","nativeSrc":"6656:116:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6689:5:27","nodeType":"YulTypedName","src":"6689:5:27","type":""}],"src":"6656:116:27"},{"body":{"nativeSrc":"6838:77:27","nodeType":"YulBlock","src":"6838:77:27","statements":[{"nativeSrc":"6848:22:27","nodeType":"YulAssignment","src":"6848:22:27","value":{"arguments":[{"name":"offset","nativeSrc":"6863:6:27","nodeType":"YulIdentifier","src":"6863:6:27"}],"functionName":{"name":"mload","nativeSrc":"6857:5:27","nodeType":"YulIdentifier","src":"6857:5:27"},"nativeSrc":"6857:13:27","nodeType":"YulFunctionCall","src":"6857:13:27"},"variableNames":[{"name":"value","nativeSrc":"6848:5:27","nodeType":"YulIdentifier","src":"6848:5:27"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"6903:5:27","nodeType":"YulIdentifier","src":"6903:5:27"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"6879:23:27","nodeType":"YulIdentifier","src":"6879:23:27"},"nativeSrc":"6879:30:27","nodeType":"YulFunctionCall","src":"6879:30:27"},"nativeSrc":"6879:30:27","nodeType":"YulExpressionStatement","src":"6879:30:27"}]},"name":"abi_decode_t_bool_fromMemory","nativeSrc":"6778:137:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"6816:6:27","nodeType":"YulTypedName","src":"6816:6:27","type":""},{"name":"end","nativeSrc":"6824:3:27","nodeType":"YulTypedName","src":"6824:3:27","type":""}],"returnVariables":[{"name":"value","nativeSrc":"6832:5:27","nodeType":"YulTypedName","src":"6832:5:27","type":""}],"src":"6778:137:27"},{"body":{"nativeSrc":"6995:271:27","nodeType":"YulBlock","src":"6995:271:27","statements":[{"body":{"nativeSrc":"7041:83:27","nodeType":"YulBlock","src":"7041:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"7043:77:27","nodeType":"YulIdentifier","src":"7043:77:27"},"nativeSrc":"7043:79:27","nodeType":"YulFunctionCall","src":"7043:79:27"},"nativeSrc":"7043:79:27","nodeType":"YulExpressionStatement","src":"7043:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7016:7:27","nodeType":"YulIdentifier","src":"7016:7:27"},{"name":"headStart","nativeSrc":"7025:9:27","nodeType":"YulIdentifier","src":"7025:9:27"}],"functionName":{"name":"sub","nativeSrc":"7012:3:27","nodeType":"YulIdentifier","src":"7012:3:27"},"nativeSrc":"7012:23:27","nodeType":"YulFunctionCall","src":"7012:23:27"},{"kind":"number","nativeSrc":"7037:2:27","nodeType":"YulLiteral","src":"7037:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"7008:3:27","nodeType":"YulIdentifier","src":"7008:3:27"},"nativeSrc":"7008:32:27","nodeType":"YulFunctionCall","src":"7008:32:27"},"nativeSrc":"7005:119:27","nodeType":"YulIf","src":"7005:119:27"},{"nativeSrc":"7134:125:27","nodeType":"YulBlock","src":"7134:125:27","statements":[{"nativeSrc":"7149:15:27","nodeType":"YulVariableDeclaration","src":"7149:15:27","value":{"kind":"number","nativeSrc":"7163:1:27","nodeType":"YulLiteral","src":"7163:1:27","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"7153:6:27","nodeType":"YulTypedName","src":"7153:6:27","type":""}]},{"nativeSrc":"7178:71:27","nodeType":"YulAssignment","src":"7178:71:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7221:9:27","nodeType":"YulIdentifier","src":"7221:9:27"},{"name":"offset","nativeSrc":"7232:6:27","nodeType":"YulIdentifier","src":"7232:6:27"}],"functionName":{"name":"add","nativeSrc":"7217:3:27","nodeType":"YulIdentifier","src":"7217:3:27"},"nativeSrc":"7217:22:27","nodeType":"YulFunctionCall","src":"7217:22:27"},{"name":"dataEnd","nativeSrc":"7241:7:27","nodeType":"YulIdentifier","src":"7241:7:27"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nativeSrc":"7188:28:27","nodeType":"YulIdentifier","src":"7188:28:27"},"nativeSrc":"7188:61:27","nodeType":"YulFunctionCall","src":"7188:61:27"},"variableNames":[{"name":"value0","nativeSrc":"7178:6:27","nodeType":"YulIdentifier","src":"7178:6:27"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"6921:345:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6965:9:27","nodeType":"YulTypedName","src":"6965:9:27","type":""},{"name":"dataEnd","nativeSrc":"6976:7:27","nodeType":"YulTypedName","src":"6976:7:27","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6988:6:27","nodeType":"YulTypedName","src":"6988:6:27","type":""}],"src":"6921:345:27"},{"body":{"nativeSrc":"7330:40:27","nodeType":"YulBlock","src":"7330:40:27","statements":[{"nativeSrc":"7341:22:27","nodeType":"YulAssignment","src":"7341:22:27","value":{"arguments":[{"name":"value","nativeSrc":"7357:5:27","nodeType":"YulIdentifier","src":"7357:5:27"}],"functionName":{"name":"mload","nativeSrc":"7351:5:27","nodeType":"YulIdentifier","src":"7351:5:27"},"nativeSrc":"7351:12:27","nodeType":"YulFunctionCall","src":"7351:12:27"},"variableNames":[{"name":"length","nativeSrc":"7341:6:27","nodeType":"YulIdentifier","src":"7341:6:27"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"7272:98:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7313:5:27","nodeType":"YulTypedName","src":"7313:5:27","type":""}],"returnVariables":[{"name":"length","nativeSrc":"7323:6:27","nodeType":"YulTypedName","src":"7323:6:27","type":""}],"src":"7272:98:27"},{"body":{"nativeSrc":"7438:184:27","nodeType":"YulBlock","src":"7438:184:27","statements":[{"nativeSrc":"7448:10:27","nodeType":"YulVariableDeclaration","src":"7448:10:27","value":{"kind":"number","nativeSrc":"7457:1:27","nodeType":"YulLiteral","src":"7457:1:27","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"7452:1:27","nodeType":"YulTypedName","src":"7452:1:27","type":""}]},{"body":{"nativeSrc":"7517:63:27","nodeType":"YulBlock","src":"7517:63:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"7542:3:27","nodeType":"YulIdentifier","src":"7542:3:27"},{"name":"i","nativeSrc":"7547:1:27","nodeType":"YulIdentifier","src":"7547:1:27"}],"functionName":{"name":"add","nativeSrc":"7538:3:27","nodeType":"YulIdentifier","src":"7538:3:27"},"nativeSrc":"7538:11:27","nodeType":"YulFunctionCall","src":"7538:11:27"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"7561:3:27","nodeType":"YulIdentifier","src":"7561:3:27"},{"name":"i","nativeSrc":"7566:1:27","nodeType":"YulIdentifier","src":"7566:1:27"}],"functionName":{"name":"add","nativeSrc":"7557:3:27","nodeType":"YulIdentifier","src":"7557:3:27"},"nativeSrc":"7557:11:27","nodeType":"YulFunctionCall","src":"7557:11:27"}],"functionName":{"name":"mload","nativeSrc":"7551:5:27","nodeType":"YulIdentifier","src":"7551:5:27"},"nativeSrc":"7551:18:27","nodeType":"YulFunctionCall","src":"7551:18:27"}],"functionName":{"name":"mstore","nativeSrc":"7531:6:27","nodeType":"YulIdentifier","src":"7531:6:27"},"nativeSrc":"7531:39:27","nodeType":"YulFunctionCall","src":"7531:39:27"},"nativeSrc":"7531:39:27","nodeType":"YulExpressionStatement","src":"7531:39:27"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"7478:1:27","nodeType":"YulIdentifier","src":"7478:1:27"},{"name":"length","nativeSrc":"7481:6:27","nodeType":"YulIdentifier","src":"7481:6:27"}],"functionName":{"name":"lt","nativeSrc":"7475:2:27","nodeType":"YulIdentifier","src":"7475:2:27"},"nativeSrc":"7475:13:27","nodeType":"YulFunctionCall","src":"7475:13:27"},"nativeSrc":"7467:113:27","nodeType":"YulForLoop","post":{"nativeSrc":"7489:19:27","nodeType":"YulBlock","src":"7489:19:27","statements":[{"nativeSrc":"7491:15:27","nodeType":"YulAssignment","src":"7491:15:27","value":{"arguments":[{"name":"i","nativeSrc":"7500:1:27","nodeType":"YulIdentifier","src":"7500:1:27"},{"kind":"number","nativeSrc":"7503:2:27","nodeType":"YulLiteral","src":"7503:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7496:3:27","nodeType":"YulIdentifier","src":"7496:3:27"},"nativeSrc":"7496:10:27","nodeType":"YulFunctionCall","src":"7496:10:27"},"variableNames":[{"name":"i","nativeSrc":"7491:1:27","nodeType":"YulIdentifier","src":"7491:1:27"}]}]},"pre":{"nativeSrc":"7471:3:27","nodeType":"YulBlock","src":"7471:3:27","statements":[]},"src":"7467:113:27"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"7600:3:27","nodeType":"YulIdentifier","src":"7600:3:27"},{"name":"length","nativeSrc":"7605:6:27","nodeType":"YulIdentifier","src":"7605:6:27"}],"functionName":{"name":"add","nativeSrc":"7596:3:27","nodeType":"YulIdentifier","src":"7596:3:27"},"nativeSrc":"7596:16:27","nodeType":"YulFunctionCall","src":"7596:16:27"},{"kind":"number","nativeSrc":"7614:1:27","nodeType":"YulLiteral","src":"7614:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"7589:6:27","nodeType":"YulIdentifier","src":"7589:6:27"},"nativeSrc":"7589:27:27","nodeType":"YulFunctionCall","src":"7589:27:27"},"nativeSrc":"7589:27:27","nodeType":"YulExpressionStatement","src":"7589:27:27"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"7376:246:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"7420:3:27","nodeType":"YulTypedName","src":"7420:3:27","type":""},{"name":"dst","nativeSrc":"7425:3:27","nodeType":"YulTypedName","src":"7425:3:27","type":""},{"name":"length","nativeSrc":"7430:6:27","nodeType":"YulTypedName","src":"7430:6:27","type":""}],"src":"7376:246:27"},{"body":{"nativeSrc":"7736:278:27","nodeType":"YulBlock","src":"7736:278:27","statements":[{"nativeSrc":"7746:52:27","nodeType":"YulVariableDeclaration","src":"7746:52:27","value":{"arguments":[{"name":"value","nativeSrc":"7792:5:27","nodeType":"YulIdentifier","src":"7792:5:27"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"7760:31:27","nodeType":"YulIdentifier","src":"7760:31:27"},"nativeSrc":"7760:38:27","nodeType":"YulFunctionCall","src":"7760:38:27"},"variables":[{"name":"length","nativeSrc":"7750:6:27","nodeType":"YulTypedName","src":"7750:6:27","type":""}]},{"nativeSrc":"7807:95:27","nodeType":"YulAssignment","src":"7807:95:27","value":{"arguments":[{"name":"pos","nativeSrc":"7890:3:27","nodeType":"YulIdentifier","src":"7890:3:27"},{"name":"length","nativeSrc":"7895:6:27","nodeType":"YulIdentifier","src":"7895:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"7814:75:27","nodeType":"YulIdentifier","src":"7814:75:27"},"nativeSrc":"7814:88:27","nodeType":"YulFunctionCall","src":"7814:88:27"},"variableNames":[{"name":"pos","nativeSrc":"7807:3:27","nodeType":"YulIdentifier","src":"7807:3:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7950:5:27","nodeType":"YulIdentifier","src":"7950:5:27"},{"kind":"number","nativeSrc":"7957:4:27","nodeType":"YulLiteral","src":"7957:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7946:3:27","nodeType":"YulIdentifier","src":"7946:3:27"},"nativeSrc":"7946:16:27","nodeType":"YulFunctionCall","src":"7946:16:27"},{"name":"pos","nativeSrc":"7964:3:27","nodeType":"YulIdentifier","src":"7964:3:27"},{"name":"length","nativeSrc":"7969:6:27","nodeType":"YulIdentifier","src":"7969:6:27"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"7911:34:27","nodeType":"YulIdentifier","src":"7911:34:27"},"nativeSrc":"7911:65:27","nodeType":"YulFunctionCall","src":"7911:65:27"},"nativeSrc":"7911:65:27","nodeType":"YulExpressionStatement","src":"7911:65:27"},{"nativeSrc":"7985:23:27","nodeType":"YulAssignment","src":"7985:23:27","value":{"arguments":[{"name":"pos","nativeSrc":"7996:3:27","nodeType":"YulIdentifier","src":"7996:3:27"},{"name":"length","nativeSrc":"8001:6:27","nodeType":"YulIdentifier","src":"8001:6:27"}],"functionName":{"name":"add","nativeSrc":"7992:3:27","nodeType":"YulIdentifier","src":"7992:3:27"},"nativeSrc":"7992:16:27","nodeType":"YulFunctionCall","src":"7992:16:27"},"variableNames":[{"name":"end","nativeSrc":"7985:3:27","nodeType":"YulIdentifier","src":"7985:3:27"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"7628:386:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7717:5:27","nodeType":"YulTypedName","src":"7717:5:27","type":""},{"name":"pos","nativeSrc":"7724:3:27","nodeType":"YulTypedName","src":"7724:3:27","type":""}],"returnVariables":[{"name":"end","nativeSrc":"7732:3:27","nodeType":"YulTypedName","src":"7732:3:27","type":""}],"src":"7628:386:27"},{"body":{"nativeSrc":"8154:137:27","nodeType":"YulBlock","src":"8154:137:27","statements":[{"nativeSrc":"8165:100:27","nodeType":"YulAssignment","src":"8165:100:27","value":{"arguments":[{"name":"value0","nativeSrc":"8252:6:27","nodeType":"YulIdentifier","src":"8252:6:27"},{"name":"pos","nativeSrc":"8261:3:27","nodeType":"YulIdentifier","src":"8261:3:27"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"8172:79:27","nodeType":"YulIdentifier","src":"8172:79:27"},"nativeSrc":"8172:93:27","nodeType":"YulFunctionCall","src":"8172:93:27"},"variableNames":[{"name":"pos","nativeSrc":"8165:3:27","nodeType":"YulIdentifier","src":"8165:3:27"}]},{"nativeSrc":"8275:10:27","nodeType":"YulAssignment","src":"8275:10:27","value":{"name":"pos","nativeSrc":"8282:3:27","nodeType":"YulIdentifier","src":"8282:3:27"},"variableNames":[{"name":"end","nativeSrc":"8275:3:27","nodeType":"YulIdentifier","src":"8275:3:27"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"8020:271:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"8133:3:27","nodeType":"YulTypedName","src":"8133:3:27","type":""},{"name":"value0","nativeSrc":"8139:6:27","nodeType":"YulTypedName","src":"8139:6:27","type":""}],"returnVariables":[{"name":"end","nativeSrc":"8150:3:27","nodeType":"YulTypedName","src":"8150:3:27","type":""}],"src":"8020:271:27"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_uint64(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint64(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n","id":27,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"182":[{"length":32,"start":1611}],"184":[{"length":32,"start":908}]},"linkReferences":{},"object":"6080604052600436106100e15760003560e01c8063961325211161007f578063be9a655511610059578063be9a6555146102b9578063efbe1c1c146102e4578063f2fde38b1461030f578063fbccedae14610338576100e8565b806396132521146102145780639852595c1461023f578063a3f8eace1461027c576100e8565b8063715018a6116100bb578063715018a61461017e578063810ec23b1461019557806386d1a69f146101d25780638da5cb5b146101e9576100e8565b80630a17b06b146100ed5780630fb5a6b41461012a5780631916558714610155576100e8565b366100e857005b600080fd5b3480156100f957600080fd5b50610114600480360381019061010f9190610d1b565b610363565b6040516101219190610d61565b60405180910390f35b34801561013657600080fd5b5061013f610388565b60405161014c9190610d61565b60405180910390f35b34801561016157600080fd5b5061017c60048036038101906101779190610dda565b6103ba565b005b34801561018a57600080fd5b50610193610481565b005b3480156101a157600080fd5b506101bc60048036038101906101b79190610e07565b610495565b6040516101c99190610d61565b60405180910390f35b3480156101de57600080fd5b506101e7610535565b005b3480156101f557600080fd5b506101fe6105a5565b60405161020b9190610e56565b60405180910390f35b34801561022057600080fd5b506102296105ce565b6040516102369190610d61565b60405180910390f35b34801561024b57600080fd5b5061026660048036038101906102619190610dda565b6105d8565b6040516102739190610d61565b60405180910390f35b34801561028857600080fd5b506102a3600480360381019061029e9190610dda565b610621565b6040516102b09190610d61565b60405180910390f35b3480156102c557600080fd5b506102ce610647565b6040516102db9190610d61565b60405180910390f35b3480156102f057600080fd5b506102f9610679565b6040516103069190610d61565b60405180910390f35b34801561031b57600080fd5b5061033660048036038101906103319190610dda565b61069a565b005b34801561034457600080fd5b5061034d610720565b60405161035a9190610d61565b60405180910390f35b60006103816103706105ce565b4761037b9190610ea0565b83610742565b9050919050565b60007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16905090565b60006103c582610621565b905080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104169190610ea0565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b826040516104639190610d61565b60405180910390a261047d826104776105a5565b836107c9565b5050565b610489610848565b61049360006108cf565b565b600061052d6104a3846105d8565b8473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104dc9190610e56565b602060405180830381865afa1580156104f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051d9190610f00565b6105279190610ea0565b83610742565b905092915050565b600061053f610720565b905080600160008282546105539190610ea0565b925050819055507fda9d4e5f101b8b9b1c5b76d0c5a9f7923571acfc02376aa076b75a8c080c956b816040516105899190610d61565b60405180910390a16105a261059c6105a5565b82610993565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600154905090565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600061062c826105d8565b6106368342610495565b6106409190610f2d565b9050919050565b60007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16905090565b6000610683610388565b61068b610647565b6106959190610ea0565b905090565b6106a2610848565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107145760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161070b9190610e56565b60405180910390fd5b61071d816108cf565b50565b600061072a6105ce565b61073342610363565b61073d9190610f2d565b905090565b600061074c610647565b8267ffffffffffffffff16101561076657600090506107c3565b61076e610679565b8267ffffffffffffffff1610610786578290506107c3565b61078e610388565b610796610647565b8367ffffffffffffffff166107ab9190610f2d565b846107b69190610f61565b6107c09190610fd2565b90505b92915050565b610843838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016107fc929190611003565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610a80565b505050565b610850610b17565b73ffffffffffffffffffffffffffffffffffffffff1661086e6105a5565b73ffffffffffffffffffffffffffffffffffffffff16146108cd57610891610b17565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108c49190610e56565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b804710156109d857306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016109cf9190610e56565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff16826040516109fe9061105d565b60006040518083038185875af1925050503d8060008114610a3b576040519150601f19603f3d011682016040523d82523d6000602084013e610a40565b606091505b5050905080610a7b576040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b6000610aab828473ffffffffffffffffffffffffffffffffffffffff16610b1f90919063ffffffff16565b90506000815114158015610ad0575080806020019051810190610ace91906110aa565b155b15610b1257826040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610b099190610e56565b60405180910390fd5b505050565b600033905090565b6060610b2d83836000610b35565b905092915050565b606081471015610b7c57306040517fcd786059000000000000000000000000000000000000000000000000000000008152600401610b739190610e56565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff168486604051610ba5919061113d565b60006040518083038185875af1925050503d8060008114610be2576040519150601f19603f3d011682016040523d82523d6000602084013e610be7565b606091505b5091509150610bf7868383610c02565b925050509392505050565b606082610c1757610c1282610c91565b610c89565b60008251148015610c3f575060008473ffffffffffffffffffffffffffffffffffffffff163b145b15610c8157836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401610c789190610e56565b60405180910390fd5b819050610c8a565b5b9392505050565b600081511115610ca45780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080fd5b600067ffffffffffffffff82169050919050565b610cf881610cdb565b8114610d0357600080fd5b50565b600081359050610d1581610cef565b92915050565b600060208284031215610d3157610d30610cd6565b5b6000610d3f84828501610d06565b91505092915050565b6000819050919050565b610d5b81610d48565b82525050565b6000602082019050610d766000830184610d52565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610da782610d7c565b9050919050565b610db781610d9c565b8114610dc257600080fd5b50565b600081359050610dd481610dae565b92915050565b600060208284031215610df057610def610cd6565b5b6000610dfe84828501610dc5565b91505092915050565b60008060408385031215610e1e57610e1d610cd6565b5b6000610e2c85828601610dc5565b9250506020610e3d85828601610d06565b9150509250929050565b610e5081610d9c565b82525050565b6000602082019050610e6b6000830184610e47565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610eab82610d48565b9150610eb683610d48565b9250828201905080821115610ece57610ecd610e71565b5b92915050565b610edd81610d48565b8114610ee857600080fd5b50565b600081519050610efa81610ed4565b92915050565b600060208284031215610f1657610f15610cd6565b5b6000610f2484828501610eeb565b91505092915050565b6000610f3882610d48565b9150610f4383610d48565b9250828203905081811115610f5b57610f5a610e71565b5b92915050565b6000610f6c82610d48565b9150610f7783610d48565b9250828202610f8581610d48565b91508282048414831517610f9c57610f9b610e71565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610fdd82610d48565b9150610fe883610d48565b925082610ff857610ff7610fa3565b5b828204905092915050565b60006040820190506110186000830185610e47565b6110256020830184610d52565b9392505050565b600081905092915050565b50565b600061104760008361102c565b915061105282611037565b600082019050919050565b60006110688261103a565b9150819050919050565b60008115159050919050565b61108781611072565b811461109257600080fd5b50565b6000815190506110a48161107e565b92915050565b6000602082840312156110c0576110bf610cd6565b5b60006110ce84828501611095565b91505092915050565b600081519050919050565b60005b838110156111005780820151818401526020810190506110e5565b60008484015250505050565b6000611117826110d7565b611121818561102c565b93506111318185602086016110e2565b80840191505092915050565b6000611149828461110c565b91508190509291505056fea26469706673582212202bb56f1f9348c000eea4ff0f22e80af2c473cfba2642417c6b4a02bf5c1b54c564736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE1 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x96132521 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xBE9A6555 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0xEFBE1C1C EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xFBCCEDAE EQ PUSH2 0x338 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x96132521 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x9852595C EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0xA3F8EACE EQ PUSH2 0x27C JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x810EC23B EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x86D1A69F EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E9 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0xA17B06B EQ PUSH2 0xED JUMPI DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x19165587 EQ PUSH2 0x155 JUMPI PUSH2 0xE8 JUMP JUMPDEST CALLDATASIZE PUSH2 0xE8 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xD1B JUMP JUMPDEST PUSH2 0x363 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH2 0x388 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x177 SWAP2 SWAP1 PUSH2 0xDDA JUMP JUMPDEST PUSH2 0x3BA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x193 PUSH2 0x481 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x495 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x535 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x5CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x266 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x261 SWAP2 SWAP1 PUSH2 0xDDA JUMP JUMPDEST PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29E SWAP2 SWAP1 PUSH2 0xDDA JUMP JUMPDEST PUSH2 0x621 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CE PUSH2 0x647 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F9 PUSH2 0x679 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x306 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x336 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x331 SWAP2 SWAP1 PUSH2 0xDDA JUMP JUMPDEST PUSH2 0x69A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34D PUSH2 0x720 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35A SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x381 PUSH2 0x370 PUSH2 0x5CE JUMP JUMPDEST SELFBALANCE PUSH2 0x37B SWAP2 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST DUP4 PUSH2 0x742 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C5 DUP3 PUSH2 0x621 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x416 SWAP2 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B DUP3 PUSH1 0x40 MLOAD PUSH2 0x463 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x47D DUP3 PUSH2 0x477 PUSH2 0x5A5 JUMP JUMPDEST DUP4 PUSH2 0x7C9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x489 PUSH2 0x848 JUMP JUMPDEST PUSH2 0x493 PUSH1 0x0 PUSH2 0x8CF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52D PUSH2 0x4A3 DUP5 PUSH2 0x5D8 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DC SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x51D SWAP2 SWAP1 PUSH2 0xF00 JUMP JUMPDEST PUSH2 0x527 SWAP2 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST DUP4 PUSH2 0x742 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53F PUSH2 0x720 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x553 SWAP2 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xDA9D4E5F101B8B9B1C5B76D0C5A9F7923571ACFC02376AA076B75A8C080C956B DUP2 PUSH1 0x40 MLOAD PUSH2 0x589 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x5A2 PUSH2 0x59C PUSH2 0x5A5 JUMP JUMPDEST DUP3 PUSH2 0x993 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62C DUP3 PUSH2 0x5D8 JUMP JUMPDEST PUSH2 0x636 DUP4 TIMESTAMP PUSH2 0x495 JUMP JUMPDEST PUSH2 0x640 SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x683 PUSH2 0x388 JUMP JUMPDEST PUSH2 0x68B PUSH2 0x647 JUMP JUMPDEST PUSH2 0x695 SWAP2 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6A2 PUSH2 0x848 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x714 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70B SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x71D DUP2 PUSH2 0x8CF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x72A PUSH2 0x5CE JUMP JUMPDEST PUSH2 0x733 TIMESTAMP PUSH2 0x363 JUMP JUMPDEST PUSH2 0x73D SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74C PUSH2 0x647 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x766 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x7C3 JUMP JUMPDEST PUSH2 0x76E PUSH2 0x679 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT PUSH2 0x786 JUMPI DUP3 SWAP1 POP PUSH2 0x7C3 JUMP JUMPDEST PUSH2 0x78E PUSH2 0x388 JUMP JUMPDEST PUSH2 0x796 PUSH2 0x647 JUMP JUMPDEST DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x7AB SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST DUP5 PUSH2 0x7B6 SWAP2 SWAP1 PUSH2 0xF61 JUMP JUMPDEST PUSH2 0x7C0 SWAP2 SWAP1 PUSH2 0xFD2 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x843 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x7FC SWAP3 SWAP2 SWAP1 PUSH2 0x1003 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xA80 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x850 PUSH2 0xB17 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x86E PUSH2 0x5A5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8CD JUMPI PUSH2 0x891 PUSH2 0xB17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C4 SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x9D8 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CF SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x9FE SWAP1 PUSH2 0x105D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA3B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAAB DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB1F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0xAD0 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xACE SWAP2 SWAP1 PUSH2 0x10AA JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xB12 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB09 SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB2D DUP4 DUP4 PUSH1 0x0 PUSH2 0xB35 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0xB7C JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB73 SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0xBA5 SWAP2 SWAP1 PUSH2 0x113D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xBE2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xBF7 DUP7 DUP4 DUP4 PUSH2 0xC02 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0xC17 JUMPI PUSH2 0xC12 DUP3 PUSH2 0xC91 JUMP JUMPDEST PUSH2 0xC89 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0xC3F JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xC81 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC78 SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0xC8A JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xCA4 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF8 DUP2 PUSH2 0xCDB JUMP JUMPDEST DUP2 EQ PUSH2 0xD03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD15 DUP2 PUSH2 0xCEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD31 JUMPI PUSH2 0xD30 PUSH2 0xCD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD3F DUP5 DUP3 DUP6 ADD PUSH2 0xD06 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD5B DUP2 PUSH2 0xD48 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD76 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD52 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA7 DUP3 PUSH2 0xD7C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDB7 DUP2 PUSH2 0xD9C JUMP JUMPDEST DUP2 EQ PUSH2 0xDC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDD4 DUP2 PUSH2 0xDAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF0 JUMPI PUSH2 0xDEF PUSH2 0xCD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDFE DUP5 DUP3 DUP6 ADD PUSH2 0xDC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE1E JUMPI PUSH2 0xE1D PUSH2 0xCD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE2C DUP6 DUP3 DUP7 ADD PUSH2 0xDC5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE3D DUP6 DUP3 DUP7 ADD PUSH2 0xD06 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xE50 DUP2 PUSH2 0xD9C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE6B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE47 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEAB DUP3 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP PUSH2 0xEB6 DUP4 PUSH2 0xD48 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xECE JUMPI PUSH2 0xECD PUSH2 0xE71 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEDD DUP2 PUSH2 0xD48 JUMP JUMPDEST DUP2 EQ PUSH2 0xEE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xEFA DUP2 PUSH2 0xED4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF16 JUMPI PUSH2 0xF15 PUSH2 0xCD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF24 DUP5 DUP3 DUP6 ADD PUSH2 0xEEB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF38 DUP3 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP PUSH2 0xF43 DUP4 PUSH2 0xD48 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xF5B JUMPI PUSH2 0xF5A PUSH2 0xE71 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF6C DUP3 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP PUSH2 0xF77 DUP4 PUSH2 0xD48 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xF85 DUP2 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xF9C JUMPI PUSH2 0xF9B PUSH2 0xE71 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFDD DUP3 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP PUSH2 0xFE8 DUP4 PUSH2 0xD48 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xFF8 JUMPI PUSH2 0xFF7 PUSH2 0xFA3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1018 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xE47 JUMP JUMPDEST PUSH2 0x1025 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD52 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1047 PUSH1 0x0 DUP4 PUSH2 0x102C JUMP JUMPDEST SWAP2 POP PUSH2 0x1052 DUP3 PUSH2 0x1037 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1068 DUP3 PUSH2 0x103A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1087 DUP2 PUSH2 0x1072 JUMP JUMPDEST DUP2 EQ PUSH2 0x1092 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x10A4 DUP2 PUSH2 0x107E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10C0 JUMPI PUSH2 0x10BF PUSH2 0xCD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10CE DUP5 DUP3 DUP6 ADD PUSH2 0x1095 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1100 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1117 DUP3 PUSH2 0x10D7 JUMP JUMPDEST PUSH2 0x1121 DUP2 DUP6 PUSH2 0x102C JUMP JUMPDEST SWAP4 POP PUSH2 0x1131 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x10E2 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1149 DUP3 DUP5 PUSH2 0x110C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B 0xB5 PUSH16 0x1F9348C000EEA4FF0F22E80AF2C473CF 0xBA 0x26 TIMESTAMP COINBASE PUSH29 0x6B4A02BF5C1B54C564736F6C6343000818003300000000000000000000 ","sourceMap":"1638:4032:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4613:165;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2662:91;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4227:246;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;4919:202:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3905:198;;;;;;;;;;;;;:::i;:::-;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2979:91:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3137:116;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3608:159;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2510:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2817:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3328:134:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4613:165;4682:7;4708:63;4749:10;:8;:10::i;:::-;4725:21;:34;;;;:::i;:::-;4761:9;4708:16;:63::i;:::-;4701:70;;4613:165;;;:::o;2662:91::-;2711:7;2737:9;2730:16;;;;2662:91;:::o;4227:246::-;4284:14;4301:17;4312:5;4301:10;:17::i;:::-;4284:34;;4353:6;4328:14;:21;4343:5;4328:21;;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;4388:5;4374:28;;;4395:6;4374:28;;;;;;:::i;:::-;;;;;;;;4412:54;4442:5;4450:7;:5;:7::i;:::-;4459:6;4412:22;:54::i;:::-;4274:199;4227:246;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;4919:202:1:-;5003:7;5029:85;5087:15;5096:5;5087:8;:15::i;:::-;5053:5;5046:23;;;5078:4;5046:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:56;;;;:::i;:::-;5104:9;5029:16;:85::i;:::-;5022:92;;4919:202;;;;:::o;3905:198::-;3949:14;3966:12;:10;:12::i;:::-;3949:29;;4001:6;3988:9;;:19;;;;;;;:::i;:::-;;;;;;;;4022:21;4036:6;4022:21;;;;;;:::i;:::-;;;;;;;;4053:43;4079:7;:5;:7::i;:::-;4089:6;4053:17;:43::i;:::-;3939:164;3905:198::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2979:91:1:-;3028:7;3054:9;;3047:16;;2979:91;:::o;3137:116::-;3199:7;3225:14;:21;3240:5;3225:21;;;;;;;;;;;;;;;;3218:28;;3137:116;;;:::o;3608:159::-;3672:7;3745:15;3754:5;3745:8;:15::i;:::-;3698:44;3711:5;3725:15;3698:12;:44::i;:::-;:62;;;;:::i;:::-;3691:69;;3608:159;;;:::o;2510:85::-;2556:7;2582:6;2575:13;;;;2510:85;:::o;2817:97::-;2861:7;2897:10;:8;:10::i;:::-;2887:7;:5;:7::i;:::-;:20;;;;:::i;:::-;2880:27;;2817:97;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;3328:134:1:-;3379:7;3445:10;:8;:10::i;:::-;3405:37;3425:15;3405:12;:37::i;:::-;:50;;;;:::i;:::-;3398:57;;3328:134;:::o;5316:352::-;5416:7;5451;:5;:7::i;:::-;5439:9;:19;;;5435:227;;;5481:1;5474:8;;;;5435:227;5516:5;:3;:5::i;:::-;5503:9;:18;;;5499:163;;5544:15;5537:22;;;;5499:163;5641:10;:8;:10::i;:::-;5629:7;:5;:7::i;:::-;5617:9;:19;;;;;;:::i;:::-;5598:15;:39;;;;:::i;:::-;5597:54;;;;:::i;:::-;5590:61;;5316:352;;;;;:::o;1303:160:9:-;1385:71;1405:5;1427;:14;;;1444:2;1448:5;1412:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1385:19;:71::i;:::-;1303:160;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1531:331:10:-;1640:6;1616:21;:30;1612:109;;;1704:4;1669:41;;;;;;;;;;;:::i;:::-;;;;;;;;1612:109;1732:12;1750:9;:14;;1772:6;1750:33;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1731:52;;;1798:7;1793:63;;1828:17;;;;;;;;;;;;;;1793:63;1602:260;1531:331;;:::o;4059:629:9:-;4478:23;4504:33;4532:4;4512:5;4504:27;;;;:33;;;;:::i;:::-;4478:59;;4572:1;4551:10;:17;:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4664:5;4631:40;;;;;;;;;;;:::i;:::-;;;;;;;;4547:135;4129:559;4059:629;;:::o;656:96:11:-;709:7;735:10;728:17;;656:96;:::o;2705:151:10:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3394:4;3359:41;;;;;;;;;;;:::i;:::-;;;;;;;;3303:108;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;88:117:27;197:1;194;187:12;334:101;370:7;410:18;403:5;399:30;388:41;;334:101;;;:::o;441:120::-;513:23;530:5;513:23;:::i;:::-;506:5;503:34;493:62;;551:1;548;541:12;493:62;441:120;:::o;567:137::-;612:5;650:6;637:20;628:29;;666:32;692:5;666:32;:::i;:::-;567:137;;;;:::o;710:327::-;768:6;817:2;805:9;796:7;792:23;788:32;785:119;;;823:79;;:::i;:::-;785:119;943:1;968:52;1012:7;1003:6;992:9;988:22;968:52;:::i;:::-;958:62;;914:116;710:327;;;;:::o;1043:77::-;1080:7;1109:5;1098:16;;1043:77;;;:::o;1126:118::-;1213:24;1231:5;1213:24;:::i;:::-;1208:3;1201:37;1126:118;;:::o;1250:222::-;1343:4;1381:2;1370:9;1366:18;1358:26;;1394:71;1462:1;1451:9;1447:17;1438:6;1394:71;:::i;:::-;1250:222;;;;:::o;1478:126::-;1515:7;1555:42;1548:5;1544:54;1533:65;;1478:126;;;:::o;1610:96::-;1647:7;1676:24;1694:5;1676:24;:::i;:::-;1665:35;;1610:96;;;:::o;1712:122::-;1785:24;1803:5;1785:24;:::i;:::-;1778:5;1775:35;1765:63;;1824:1;1821;1814:12;1765:63;1712:122;:::o;1840:139::-;1886:5;1924:6;1911:20;1902:29;;1940:33;1967:5;1940:33;:::i;:::-;1840:139;;;;:::o;1985:329::-;2044:6;2093:2;2081:9;2072:7;2068:23;2064:32;2061:119;;;2099:79;;:::i;:::-;2061:119;2219:1;2244:53;2289:7;2280:6;2269:9;2265:22;2244:53;:::i;:::-;2234:63;;2190:117;1985:329;;;;:::o;2320:472::-;2387:6;2395;2444:2;2432:9;2423:7;2419:23;2415:32;2412:119;;;2450:79;;:::i;:::-;2412:119;2570:1;2595:53;2640:7;2631:6;2620:9;2616:22;2595:53;:::i;:::-;2585:63;;2541:117;2697:2;2723:52;2767:7;2758:6;2747:9;2743:22;2723:52;:::i;:::-;2713:62;;2668:117;2320:472;;;;;:::o;2798:118::-;2885:24;2903:5;2885:24;:::i;:::-;2880:3;2873:37;2798:118;;:::o;2922:222::-;3015:4;3053:2;3042:9;3038:18;3030:26;;3066:71;3134:1;3123:9;3119:17;3110:6;3066:71;:::i;:::-;2922:222;;;;:::o;3150:180::-;3198:77;3195:1;3188:88;3295:4;3292:1;3285:15;3319:4;3316:1;3309:15;3336:191;3376:3;3395:20;3413:1;3395:20;:::i;:::-;3390:25;;3429:20;3447:1;3429:20;:::i;:::-;3424:25;;3472:1;3469;3465:9;3458:16;;3493:3;3490:1;3487:10;3484:36;;;3500:18;;:::i;:::-;3484:36;3336:191;;;;:::o;3533:122::-;3606:24;3624:5;3606:24;:::i;:::-;3599:5;3596:35;3586:63;;3645:1;3642;3635:12;3586:63;3533:122;:::o;3661:143::-;3718:5;3749:6;3743:13;3734:22;;3765:33;3792:5;3765:33;:::i;:::-;3661:143;;;;:::o;3810:351::-;3880:6;3929:2;3917:9;3908:7;3904:23;3900:32;3897:119;;;3935:79;;:::i;:::-;3897:119;4055:1;4080:64;4136:7;4127:6;4116:9;4112:22;4080:64;:::i;:::-;4070:74;;4026:128;3810:351;;;;:::o;4167:194::-;4207:4;4227:20;4245:1;4227:20;:::i;:::-;4222:25;;4261:20;4279:1;4261:20;:::i;:::-;4256:25;;4305:1;4302;4298:9;4290:17;;4329:1;4323:4;4320:11;4317:37;;;4334:18;;:::i;:::-;4317:37;4167:194;;;;:::o;4367:410::-;4407:7;4430:20;4448:1;4430:20;:::i;:::-;4425:25;;4464:20;4482:1;4464:20;:::i;:::-;4459:25;;4519:1;4516;4512:9;4541:30;4559:11;4541:30;:::i;:::-;4530:41;;4720:1;4711:7;4707:15;4704:1;4701:22;4681:1;4674:9;4654:83;4631:139;;4750:18;;:::i;:::-;4631:139;4415:362;4367:410;;;;:::o;4783:180::-;4831:77;4828:1;4821:88;4928:4;4925:1;4918:15;4952:4;4949:1;4942:15;4969:185;5009:1;5026:20;5044:1;5026:20;:::i;:::-;5021:25;;5060:20;5078:1;5060:20;:::i;:::-;5055:25;;5099:1;5089:35;;5104:18;;:::i;:::-;5089:35;5146:1;5143;5139:9;5134:14;;4969:185;;;;:::o;5160:332::-;5281:4;5319:2;5308:9;5304:18;5296:26;;5332:71;5400:1;5389:9;5385:17;5376:6;5332:71;:::i;:::-;5413:72;5481:2;5470:9;5466:18;5457:6;5413:72;:::i;:::-;5160:332;;;;;:::o;5498:147::-;5599:11;5636:3;5621:18;;5498:147;;;;:::o;5651:114::-;;:::o;5771:398::-;5930:3;5951:83;6032:1;6027:3;5951:83;:::i;:::-;5944:90;;6043:93;6132:3;6043:93;:::i;:::-;6161:1;6156:3;6152:11;6145:18;;5771:398;;;:::o;6175:379::-;6359:3;6381:147;6524:3;6381:147;:::i;:::-;6374:154;;6545:3;6538:10;;6175:379;;;:::o;6560:90::-;6594:7;6637:5;6630:13;6623:21;6612:32;;6560:90;;;:::o;6656:116::-;6726:21;6741:5;6726:21;:::i;:::-;6719:5;6716:32;6706:60;;6762:1;6759;6752:12;6706:60;6656:116;:::o;6778:137::-;6832:5;6863:6;6857:13;6848:22;;6879:30;6903:5;6879:30;:::i;:::-;6778:137;;;;:::o;6921:345::-;6988:6;7037:2;7025:9;7016:7;7012:23;7008:32;7005:119;;;7043:79;;:::i;:::-;7005:119;7163:1;7188:61;7241:7;7232:6;7221:9;7217:22;7188:61;:::i;:::-;7178:71;;7134:125;6921:345;;;;:::o;7272:98::-;7323:6;7357:5;7351:12;7341:22;;7272:98;;;:::o;7376:246::-;7457:1;7467:113;7481:6;7478:1;7475:13;7467:113;;;7566:1;7561:3;7557:11;7551:18;7547:1;7542:3;7538:11;7531:39;7503:2;7500:1;7496:10;7491:15;;7467:113;;;7614:1;7605:6;7600:3;7596:16;7589:27;7438:184;7376:246;;;:::o;7628:386::-;7732:3;7760:38;7792:5;7760:38;:::i;:::-;7814:88;7895:6;7890:3;7814:88;:::i;:::-;7807:95;;7911:65;7969:6;7964:3;7957:4;7950:5;7946:16;7911:65;:::i;:::-;8001:6;7996:3;7992:16;7985:23;;7736:278;7628:386;;;;:::o;8020:271::-;8150:3;8172:93;8261:3;8252:6;8172:93;:::i;:::-;8165:100;;8282:3;8275:10;;8020:271;;;;:::o"},"methodIdentifiers":{"duration()":"0fb5a6b4","end()":"efbe1c1c","owner()":"8da5cb5b","releasable()":"fbccedae","releasable(address)":"a3f8eace","release()":"86d1a69f","release(address)":"19165587","released()":"96132521","released(address)":"9852595c","renounceOwnership()":"715018a6","start()":"be9a6555","transferOwnership(address)":"f2fde38b","vestedAmount(address,uint64)":"810ec23b","vestedAmount(uint64)":"0a17b06b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"durationSeconds\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Released\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EtherReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"end\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"releasable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releasable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"vestedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"vestedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"A vesting wallet is an ownable contract that can receive native currency and ERC20 tokens, and release these assets to the wallet owner, also referred to as \\\"beneficiary\\\", according to a vesting schedule. Any assets transferred to this contract will follow the vesting schedule as if they were locked from the beginning. Consequently, if the vesting has already started, any amount of tokens sent to this contract will (at least partly) be immediately releasable. By setting the duration to 0, one can configure this contract to behave like an asset timelock that hold tokens for a beneficiary until a specified time. NOTE: Since the wallet is {Ownable}, and ownership can be transferred, it is possible to sell unvested tokens. Preventing this in a smart contract is difficult, considering that: 1) a beneficiary address could be a counterfactually deployed contract, 2) there is likely to be a migration path for EOAs to become contracts in the near future. NOTE: When using this contract with any token whose balance is adjusted automatically (i.e. a rebase token), make sure to account the supply/balance adjustment in the vesting schedule to ensure the vested amount is as intended.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Sets the sender as the initial owner, the beneficiary as the pending owner, the start timestamp and the vesting duration of the vesting wallet.\"},\"duration()\":{\"details\":\"Getter for the vesting duration.\"},\"end()\":{\"details\":\"Getter for the end timestamp.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"releasable()\":{\"details\":\"Getter for the amount of releasable eth.\"},\"releasable(address)\":{\"details\":\"Getter for the amount of releasable `token` tokens. `token` should be the address of an IERC20 contract.\"},\"release()\":{\"details\":\"Release the native token (ether) that have already vested. Emits a {EtherReleased} event.\"},\"release(address)\":{\"details\":\"Release the tokens that have already vested. Emits a {ERC20Released} event.\"},\"released()\":{\"details\":\"Amount of eth already released\"},\"released(address)\":{\"details\":\"Amount of token already released\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"start()\":{\"details\":\"Getter for the start timestamp.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"vestedAmount(address,uint64)\":{\"details\":\"Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve.\"},\"vestedAmount(uint64)\":{\"details\":\"Calculates the amount of ether that has already vested. Default implementation is a linear vesting curve.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/finance/VestingWallet.sol\":\"VestingWallet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/finance/VestingWallet.sol\":{\"keccak256\":\"0xe46e33a420df1cf184e1c64f8bbaf0943b548bc264cca7591e447268acc04e8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6b7d43c2e04b6340585b575e8faf3b64ab44a81339124edaa8f1d0ffbe1f340\",\"dweb:/ipfs/QmRspj2wscchcRGFEUVRLXU8K6irbiTzvdf8cz7nKeQZz5\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bee81b5584822cc9d15e32b72d250db08a96fd9dcae7e9ba6e4db7f200a2c15b64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xE8 SHL SSTORE DUP5 DUP3 0x2C 0xC9 0xD1 MCOPY ORIGIN 0xB7 0x2D 0x25 0xD 0xB0 DUP11 SWAP7 REVERT SWAP14 0xCA 0xE7 0xE9 0xBA PUSH15 0x4DB7F200A2C15B64736F6C63430008 XOR STOP CALLER ","sourceMap":"751:5018:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bee81b5584822cc9d15e32b72d250db08a96fd9dcae7e9ba6e4db7f200a2c15b64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xE8 SHL SSTORE DUP5 DUP3 0x2C 0xC9 0xD1 MCOPY ORIGIN 0xB7 0x2D 0x25 0xD 0xB0 DUP11 SWAP7 REVERT SWAP14 0xCA 0xE7 0xE9 0xBA PUSH15 0x4DB7F200A2C15B64736F6C63430008 XOR STOP CALLER ","sourceMap":"751:5018:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203ef1cecb04d6d1af6bfa5999d57c0bca9393831517973b7dcee45c3febbe102564736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY CALL 0xCE 0xCB DIV 0xD6 0xD1 0xAF PUSH12 0xFA5999D57C0BCA9393831517 SWAP8 EXTCODESIZE PUSH30 0xCEE45C3FEBBE102564736F6C634300081800330000000000000000000000 ","sourceMap":"195:6066:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203ef1cecb04d6d1af6bfa5999d57c0bca9393831517973b7dcee45c3febbe102564736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY CALL 0xCE 0xCB DIV 0xD6 0xD1 0xAF PUSH12 0xFA5999D57C0BCA9393831517 SWAP8 EXTCODESIZE PUSH30 0xCEE45C3FEBBE102564736F6C634300081800330000000000000000000000 ","sourceMap":"195:6066:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Nonces.sol":{"Nonces":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cfec0fdf9ffd764137a8d2e0ca2307a36b05be155fbb680fced6c37e5277843964736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF 0xEC 0xF 0xDF SWAP16 REVERT PUSH23 0x4137A8D2E0CA2307A36B05BE155FBB680FCED6C37E5277 DUP5 CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1255:3053:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cfec0fdf9ffd764137a8d2e0ca2307a36b05be155fbb680fced6c37e5277843964736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF 0xEC 0xF 0xDF SWAP16 REVERT PUSH23 0x4137A8D2E0CA2307A36B05BE155FBB680FCED6C37E5277 DUP5 CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1255:3053:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200d9d594500b0633db8c36b486b2e5bd19779e3026132b93582c791873a3dee9064736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD SWAP14 MSIZE GASLIMIT STOP 0xB0 PUSH4 0x3DB8C36B BASEFEE PUSH12 0x2E5BD19779E3026132B93582 0xC7 SWAP2 DUP8 GASPRICE RETURNDATASIZE 0xEE SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1245:2685:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200d9d594500b0633db8c36b486b2e5bd19779e3026132b93582c791873a3dee9064736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD SWAP14 MSIZE GASLIMIT STOP 0xB0 PUSH4 0x3DB8C36B BASEFEE PUSH12 0x2E5BD19779E3026132B93582 0xC7 SWAP2 DUP8 GASPRICE RETURNDATASIZE 0xEE SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1245:2685:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122022ea8e82b761ff0f2c8fae5d36bcca20db5176a1081cc893147086b57be5cf8f64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xEA DUP15 DUP3 0xB7 PUSH2 0xFF0F 0x2C DUP16 0xAE TSTORE CALLDATASIZE 0xBC 0xCA KECCAK256 0xDB MLOAD PUSH23 0xA1081CC893147086B57BE5CF8F64736F6C634300081800 CALLER ","sourceMap":"251:2847:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122022ea8e82b761ff0f2c8fae5d36bcca20db5176a1081cc893147086b57be5cf8f64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xEA DUP15 DUP3 0xB7 PUSH2 0xFF0F 0x2C DUP16 0xAE TSTORE CALLDATASIZE 0xBC 0xCA KECCAK256 0xDB MLOAD PUSH23 0xA1081CC893147086B57BE5CF8F64736F6C634300081800 CALLER ","sourceMap":"251:2847:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a0f0af1e89f3ddbdff57fa81e414c48e503c1b1d880410ba3858747441326c1664736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 CREATE 0xAF 0x1E DUP10 RETURN 0xDD 0xBD SELFDESTRUCT JUMPI STATICCALL DUP2 0xE4 EQ 0xC4 DUP15 POP EXTCODECOPY SHL SAR DUP9 DIV LT 0xBA CODESIZE PC PUSH21 0x7441326C1664736F6C634300081800330000000000 ","sourceMap":"344:7386:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a0f0af1e89f3ddbdff57fa81e414c48e503c1b1d880410ba3858747441326c1664736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 CREATE 0xAF 0x1E DUP10 RETURN 0xDD 0xBD SELFDESTRUCT JUMPI STATICCALL DUP2 0xE4 EQ 0xC4 DUP15 POP EXTCODECOPY SHL SAR DUP9 DIV LT 0xBA CODESIZE PC PUSH21 0x7441326C1664736F6C634300081800330000000000 ","sourceMap":"344:7386:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bdf6ac08341bc2c8c72c89b479b09c45d1cc23f4b55e7965962b8679a082214a64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0xF6 0xAC ADDMOD CALLVALUE SHL 0xC2 0xC8 0xC7 0x2C DUP10 0xB4 PUSH26 0xB09C45D1CC23F4B55E7965962B8679A082214A64736F6C634300 ADDMOD XOR STOP CALLER ","sourceMap":"521:3235:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bdf6ac08341bc2c8c72c89b479b09c45d1cc23f4b55e7965962b8679a082214a64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0xF6 0xAC ADDMOD CALLVALUE SHL 0xC2 0xC8 0xC7 0x2C DUP10 0xB4 PUSH26 0xB09C45D1CC23F4B55E7965962B8679A082214A64736F6C634300 ADDMOD XOR STOP CALLER ","sourceMap":"521:3235:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205f1847e716d326528b8b9324e0228d1e4971145e5ba1173b4269248a23a4838564736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH0 XOR SELFBALANCE 0xE7 AND 0xD3 0x26 MSTORE DUP12 DUP12 SWAP4 0x24 0xE0 0x22 DUP14 0x1E BLOBHASH PUSH18 0x145E5BA1173B4269248A23A4838564736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"203:14914:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205f1847e716d326528b8b9324e0228d1e4971145e5ba1173b4269248a23a4838564736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH0 XOR SELFBALANCE 0xE7 AND 0xD3 0x26 MSTORE DUP12 DUP12 SWAP4 0x24 0xE0 0x22 DUP14 0x1E BLOBHASH PUSH18 0x145E5BA1173B4269248A23A4838564736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"203:14914:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201d2aedc0cb0fa896656ea0fe50229c9af49c2a90d8c22c903759c3543a7d46ba64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR 0x2A 0xED 0xC0 0xCB 0xF 0xA8 SWAP7 PUSH6 0x6EA0FE50229C SWAP11 DELEGATECALL SWAP13 0x2A SWAP1 0xD8 0xC2 0x2C SWAP1 CALLDATACOPY MSIZE 0xC3 SLOAD GASPRICE PUSH30 0x46BA64736F6C634300081800330000000000000000000000000000000000 ","sourceMap":"764:33927:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201d2aedc0cb0fa896656ea0fe50229c9af49c2a90d8c22c903759c3543a7d46ba64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR 0x2A 0xED 0xC0 0xCB 0xF 0xA8 SWAP7 PUSH6 0x6EA0FE50229C SWAP11 DELEGATECALL SWAP13 0x2A SWAP1 0xD8 0xC2 0x2C SWAP1 CALLDATACOPY MSIZE 0xC3 SLOAD GASPRICE PUSH30 0x46BA64736F6C634300081800330000000000000000000000000000000000 ","sourceMap":"764:33927:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209275fb1eb703f1ada4f4ce7bacc8dfe6c85df9651d82c9adda1c7e92c94ddc8464736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 PUSH22 0xFB1EB703F1ADA4F4CE7BACC8DFE6C85DF9651D82C9AD 0xDA SHR PUSH31 0x92C94DDC8464736F6C63430008180033000000000000000000000000000000 ","sourceMap":"216:1047:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209275fb1eb703f1ada4f4ce7bacc8dfe6c85df9651d82c9adda1c7e92c94ddc8464736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 PUSH22 0xFB1EB703F1ADA4F4CE7BACC8DFE6C85DF9651D82C9AD 0xDA SHR PUSH31 0x92C94DDC8464736F6C63430008180033000000000000000000000000000000 ","sourceMap":"216:1047:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fc5d1723b91d94412ddf31a27681e58d7fea5f8cde80092c9e6170733b5de0ff64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC TSTORE OR 0x23 0xB9 SAR SWAP5 COINBASE 0x2D 0xDF BALANCE LOG2 PUSH23 0x81E58D7FEA5F8CDE80092C9E6170733B5DE0FF64736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"1330:11640:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fc5d1723b91d94412ddf31a27681e58d7fea5f8cde80092c9e6170733b5de0ff64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC TSTORE OR 0x23 0xB9 SAR SWAP5 COINBASE 0x2D 0xDF BALANCE LOG2 PUSH23 0x81E58D7FEA5F8CDE80092C9E6170733B5DE0FF64736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"1330:11640:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]}},\"version\":1}"}},"contracts/AraraCoin.sol":{"AraraCoin":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"},{"internalType":"address","name":"taxHandlerAddress","type":"address"},{"internalType":"address","name":"teamAndFoundersVesting","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":false,"internalType":"address","name":"newAddress","type":"address"}],"name":"TaxHandlerChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"TradingEnabled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"allowedAddresses","type":"address[]"}],"name":"addCanTrade","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_addr","type":"address"}],"name":"addressToString","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_addr","type":"address"},{"internalType":"string","name":"_str","type":"string"}],"name":"concatenateAddressWithString","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"enableTrading","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"initialLaunch","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"investors","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"preSale","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"preservationProjects","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"taxHandlerAddress","type":"address"}],"name":"setTaxHandler","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"taxHandler","outputs":[{"internalType":"contract ITaxHandler","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"teamAndFounders","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"thirdPartyServices","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tradingEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1262":{"entryPoint":null,"id":1262,"parameterSlots":1,"returnSlots":0},"@_3097":{"entryPoint":null,"id":3097,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_672":{"entryPoint":null,"id":672,"parameterSlots":2,"returnSlots":0},"@_7001":{"entryPoint":null,"id":7001,"parameterSlots":3,"returnSlots":0},"@_add_6268":{"entryPoint":2769,"id":6268,"parameterSlots":2,"returnSlots":1},"@_buildDomainSeparator_3144":{"entryPoint":1904,"id":3144,"parameterSlots":0,"returnSlots":1},"@_contains_6371":{"entryPoint":3248,"id":6371,"parameterSlots":2,"returnSlots":1},"@_mint_975":{"entryPoint":2251,"id":975,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":1997,"id":146,"parameterSlots":1,"returnSlots":0},"@_transfer_865":{"entryPoint":2392,"id":865,"parameterSlots":3,"returnSlots":0},"@_update_7146":{"entryPoint":2891,"id":7146,"parameterSlots":3,"returnSlots":0},"@_update_942":{"entryPoint":3381,"id":942,"parameterSlots":3,"returnSlots":0},"@add_6568":{"entryPoint":2195,"id":6568,"parameterSlots":2,"returnSlots":1},"@contains_6622":{"entryPoint":3283,"id":6622,"parameterSlots":2,"returnSlots":1},"@getStringSlot_2374":{"entryPoint":2759,"id":2374,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":3339,"id":67,"parameterSlots":0,"returnSlots":1},"@toShortStringWithFallback_2228":{"entryPoint":1816,"id":2228,"parameterSlots":2,"returnSlots":1},"@toShortString_2130":{"entryPoint":2650,"id":2130,"parameterSlots":1,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":4024,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":5954,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_address_fromMemory":{"entryPoint":4047,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":5977,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5004,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":5285,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":5490,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7_to_t_string_memory_ptr_fromStack":{"entryPoint":5794,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5302,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5021,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":5867,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":6145,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":5319,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5555,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5833,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":6206,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_bytes_memory_ptr":{"entryPoint":5602,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":4297,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":5591,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":4139,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":5412,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":6086,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":5219,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":5097,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":6027,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":4618,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":3978,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":5275,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3946,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":4433,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":4579,"id":null,"parameterSlots":2,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":5641,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":4453,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":4773,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":5429,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":4318,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":4244,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":4743,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":4443,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":4711,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":5050,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":5172,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":4197,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4150,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":4493,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":5618,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3941,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5473,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":4334,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":4698,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":4551,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7":{"entryPoint":5753,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":4347,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":4503,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3998,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5928,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":4546,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:14428:27","nodeType":"YulBlock","src":"0:14428:27","statements":[{"body":{"nativeSrc":"47:35:27","nodeType":"YulBlock","src":"47:35:27","statements":[{"nativeSrc":"57:19:27","nodeType":"YulAssignment","src":"57:19:27","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:27","nodeType":"YulLiteral","src":"73:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:27","nodeType":"YulIdentifier","src":"67:5:27"},"nativeSrc":"67:9:27","nodeType":"YulFunctionCall","src":"67:9:27"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:27","nodeType":"YulIdentifier","src":"57:6:27"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:27","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:27","nodeType":"YulTypedName","src":"40:6:27","type":""}],"src":"7:75:27"},{"body":{"nativeSrc":"177:28:27","nodeType":"YulBlock","src":"177:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:27","nodeType":"YulLiteral","src":"194:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:27","nodeType":"YulLiteral","src":"197:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:27","nodeType":"YulIdentifier","src":"187:6:27"},"nativeSrc":"187:12:27","nodeType":"YulFunctionCall","src":"187:12:27"},"nativeSrc":"187:12:27","nodeType":"YulExpressionStatement","src":"187:12:27"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:27","nodeType":"YulFunctionDefinition","src":"88:117:27"},{"body":{"nativeSrc":"300:28:27","nodeType":"YulBlock","src":"300:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:27","nodeType":"YulLiteral","src":"317:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:27","nodeType":"YulLiteral","src":"320:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:27","nodeType":"YulIdentifier","src":"310:6:27"},"nativeSrc":"310:12:27","nodeType":"YulFunctionCall","src":"310:12:27"},"nativeSrc":"310:12:27","nodeType":"YulExpressionStatement","src":"310:12:27"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:27","nodeType":"YulFunctionDefinition","src":"211:117:27"},{"body":{"nativeSrc":"379:81:27","nodeType":"YulBlock","src":"379:81:27","statements":[{"nativeSrc":"389:65:27","nodeType":"YulAssignment","src":"389:65:27","value":{"arguments":[{"name":"value","nativeSrc":"404:5:27","nodeType":"YulIdentifier","src":"404:5:27"},{"kind":"number","nativeSrc":"411:42:27","nodeType":"YulLiteral","src":"411:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:27","nodeType":"YulIdentifier","src":"400:3:27"},"nativeSrc":"400:54:27","nodeType":"YulFunctionCall","src":"400:54:27"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:27","nodeType":"YulIdentifier","src":"389:7:27"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:27","nodeType":"YulTypedName","src":"361:5:27","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:27","nodeType":"YulTypedName","src":"371:7:27","type":""}],"src":"334:126:27"},{"body":{"nativeSrc":"511:51:27","nodeType":"YulBlock","src":"511:51:27","statements":[{"nativeSrc":"521:35:27","nodeType":"YulAssignment","src":"521:35:27","value":{"arguments":[{"name":"value","nativeSrc":"550:5:27","nodeType":"YulIdentifier","src":"550:5:27"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:27","nodeType":"YulIdentifier","src":"532:17:27"},"nativeSrc":"532:24:27","nodeType":"YulFunctionCall","src":"532:24:27"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:27","nodeType":"YulIdentifier","src":"521:7:27"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:27","nodeType":"YulTypedName","src":"493:5:27","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:27","nodeType":"YulTypedName","src":"503:7:27","type":""}],"src":"466:96:27"},{"body":{"nativeSrc":"611:79:27","nodeType":"YulBlock","src":"611:79:27","statements":[{"body":{"nativeSrc":"668:16:27","nodeType":"YulBlock","src":"668:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:27","nodeType":"YulLiteral","src":"677:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:27","nodeType":"YulLiteral","src":"680:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:27","nodeType":"YulIdentifier","src":"670:6:27"},"nativeSrc":"670:12:27","nodeType":"YulFunctionCall","src":"670:12:27"},"nativeSrc":"670:12:27","nodeType":"YulExpressionStatement","src":"670:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:27","nodeType":"YulIdentifier","src":"634:5:27"},{"arguments":[{"name":"value","nativeSrc":"659:5:27","nodeType":"YulIdentifier","src":"659:5:27"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:27","nodeType":"YulIdentifier","src":"641:17:27"},"nativeSrc":"641:24:27","nodeType":"YulFunctionCall","src":"641:24:27"}],"functionName":{"name":"eq","nativeSrc":"631:2:27","nodeType":"YulIdentifier","src":"631:2:27"},"nativeSrc":"631:35:27","nodeType":"YulFunctionCall","src":"631:35:27"}],"functionName":{"name":"iszero","nativeSrc":"624:6:27","nodeType":"YulIdentifier","src":"624:6:27"},"nativeSrc":"624:43:27","nodeType":"YulFunctionCall","src":"624:43:27"},"nativeSrc":"621:63:27","nodeType":"YulIf","src":"621:63:27"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:27","nodeType":"YulTypedName","src":"604:5:27","type":""}],"src":"568:122:27"},{"body":{"nativeSrc":"759:80:27","nodeType":"YulBlock","src":"759:80:27","statements":[{"nativeSrc":"769:22:27","nodeType":"YulAssignment","src":"769:22:27","value":{"arguments":[{"name":"offset","nativeSrc":"784:6:27","nodeType":"YulIdentifier","src":"784:6:27"}],"functionName":{"name":"mload","nativeSrc":"778:5:27","nodeType":"YulIdentifier","src":"778:5:27"},"nativeSrc":"778:13:27","nodeType":"YulFunctionCall","src":"778:13:27"},"variableNames":[{"name":"value","nativeSrc":"769:5:27","nodeType":"YulIdentifier","src":"769:5:27"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"827:5:27","nodeType":"YulIdentifier","src":"827:5:27"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"800:26:27","nodeType":"YulIdentifier","src":"800:26:27"},"nativeSrc":"800:33:27","nodeType":"YulFunctionCall","src":"800:33:27"},"nativeSrc":"800:33:27","nodeType":"YulExpressionStatement","src":"800:33:27"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"696:143:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"737:6:27","nodeType":"YulTypedName","src":"737:6:27","type":""},{"name":"end","nativeSrc":"745:3:27","nodeType":"YulTypedName","src":"745:3:27","type":""}],"returnVariables":[{"name":"value","nativeSrc":"753:5:27","nodeType":"YulTypedName","src":"753:5:27","type":""}],"src":"696:143:27"},{"body":{"nativeSrc":"956:552:27","nodeType":"YulBlock","src":"956:552:27","statements":[{"body":{"nativeSrc":"1002:83:27","nodeType":"YulBlock","src":"1002:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1004:77:27","nodeType":"YulIdentifier","src":"1004:77:27"},"nativeSrc":"1004:79:27","nodeType":"YulFunctionCall","src":"1004:79:27"},"nativeSrc":"1004:79:27","nodeType":"YulExpressionStatement","src":"1004:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"977:7:27","nodeType":"YulIdentifier","src":"977:7:27"},{"name":"headStart","nativeSrc":"986:9:27","nodeType":"YulIdentifier","src":"986:9:27"}],"functionName":{"name":"sub","nativeSrc":"973:3:27","nodeType":"YulIdentifier","src":"973:3:27"},"nativeSrc":"973:23:27","nodeType":"YulFunctionCall","src":"973:23:27"},{"kind":"number","nativeSrc":"998:2:27","nodeType":"YulLiteral","src":"998:2:27","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"969:3:27","nodeType":"YulIdentifier","src":"969:3:27"},"nativeSrc":"969:32:27","nodeType":"YulFunctionCall","src":"969:32:27"},"nativeSrc":"966:119:27","nodeType":"YulIf","src":"966:119:27"},{"nativeSrc":"1095:128:27","nodeType":"YulBlock","src":"1095:128:27","statements":[{"nativeSrc":"1110:15:27","nodeType":"YulVariableDeclaration","src":"1110:15:27","value":{"kind":"number","nativeSrc":"1124:1:27","nodeType":"YulLiteral","src":"1124:1:27","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1114:6:27","nodeType":"YulTypedName","src":"1114:6:27","type":""}]},{"nativeSrc":"1139:74:27","nodeType":"YulAssignment","src":"1139:74:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1185:9:27","nodeType":"YulIdentifier","src":"1185:9:27"},{"name":"offset","nativeSrc":"1196:6:27","nodeType":"YulIdentifier","src":"1196:6:27"}],"functionName":{"name":"add","nativeSrc":"1181:3:27","nodeType":"YulIdentifier","src":"1181:3:27"},"nativeSrc":"1181:22:27","nodeType":"YulFunctionCall","src":"1181:22:27"},{"name":"dataEnd","nativeSrc":"1205:7:27","nodeType":"YulIdentifier","src":"1205:7:27"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1149:31:27","nodeType":"YulIdentifier","src":"1149:31:27"},"nativeSrc":"1149:64:27","nodeType":"YulFunctionCall","src":"1149:64:27"},"variableNames":[{"name":"value0","nativeSrc":"1139:6:27","nodeType":"YulIdentifier","src":"1139:6:27"}]}]},{"nativeSrc":"1233:129:27","nodeType":"YulBlock","src":"1233:129:27","statements":[{"nativeSrc":"1248:16:27","nodeType":"YulVariableDeclaration","src":"1248:16:27","value":{"kind":"number","nativeSrc":"1262:2:27","nodeType":"YulLiteral","src":"1262:2:27","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1252:6:27","nodeType":"YulTypedName","src":"1252:6:27","type":""}]},{"nativeSrc":"1278:74:27","nodeType":"YulAssignment","src":"1278:74:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1324:9:27","nodeType":"YulIdentifier","src":"1324:9:27"},{"name":"offset","nativeSrc":"1335:6:27","nodeType":"YulIdentifier","src":"1335:6:27"}],"functionName":{"name":"add","nativeSrc":"1320:3:27","nodeType":"YulIdentifier","src":"1320:3:27"},"nativeSrc":"1320:22:27","nodeType":"YulFunctionCall","src":"1320:22:27"},{"name":"dataEnd","nativeSrc":"1344:7:27","nodeType":"YulIdentifier","src":"1344:7:27"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1288:31:27","nodeType":"YulIdentifier","src":"1288:31:27"},"nativeSrc":"1288:64:27","nodeType":"YulFunctionCall","src":"1288:64:27"},"variableNames":[{"name":"value1","nativeSrc":"1278:6:27","nodeType":"YulIdentifier","src":"1278:6:27"}]}]},{"nativeSrc":"1372:129:27","nodeType":"YulBlock","src":"1372:129:27","statements":[{"nativeSrc":"1387:16:27","nodeType":"YulVariableDeclaration","src":"1387:16:27","value":{"kind":"number","nativeSrc":"1401:2:27","nodeType":"YulLiteral","src":"1401:2:27","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"1391:6:27","nodeType":"YulTypedName","src":"1391:6:27","type":""}]},{"nativeSrc":"1417:74:27","nodeType":"YulAssignment","src":"1417:74:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1463:9:27","nodeType":"YulIdentifier","src":"1463:9:27"},{"name":"offset","nativeSrc":"1474:6:27","nodeType":"YulIdentifier","src":"1474:6:27"}],"functionName":{"name":"add","nativeSrc":"1459:3:27","nodeType":"YulIdentifier","src":"1459:3:27"},"nativeSrc":"1459:22:27","nodeType":"YulFunctionCall","src":"1459:22:27"},{"name":"dataEnd","nativeSrc":"1483:7:27","nodeType":"YulIdentifier","src":"1483:7:27"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1427:31:27","nodeType":"YulIdentifier","src":"1427:31:27"},"nativeSrc":"1427:64:27","nodeType":"YulFunctionCall","src":"1427:64:27"},"variableNames":[{"name":"value2","nativeSrc":"1417:6:27","nodeType":"YulIdentifier","src":"1417:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_address_fromMemory","nativeSrc":"845:663:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"910:9:27","nodeType":"YulTypedName","src":"910:9:27","type":""},{"name":"dataEnd","nativeSrc":"921:7:27","nodeType":"YulTypedName","src":"921:7:27","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"933:6:27","nodeType":"YulTypedName","src":"933:6:27","type":""},{"name":"value1","nativeSrc":"941:6:27","nodeType":"YulTypedName","src":"941:6:27","type":""},{"name":"value2","nativeSrc":"949:6:27","nodeType":"YulTypedName","src":"949:6:27","type":""}],"src":"845:663:27"},{"body":{"nativeSrc":"1573:40:27","nodeType":"YulBlock","src":"1573:40:27","statements":[{"nativeSrc":"1584:22:27","nodeType":"YulAssignment","src":"1584:22:27","value":{"arguments":[{"name":"value","nativeSrc":"1600:5:27","nodeType":"YulIdentifier","src":"1600:5:27"}],"functionName":{"name":"mload","nativeSrc":"1594:5:27","nodeType":"YulIdentifier","src":"1594:5:27"},"nativeSrc":"1594:12:27","nodeType":"YulFunctionCall","src":"1594:12:27"},"variableNames":[{"name":"length","nativeSrc":"1584:6:27","nodeType":"YulIdentifier","src":"1584:6:27"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"1514:99:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1556:5:27","nodeType":"YulTypedName","src":"1556:5:27","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1566:6:27","nodeType":"YulTypedName","src":"1566:6:27","type":""}],"src":"1514:99:27"},{"body":{"nativeSrc":"1647:152:27","nodeType":"YulBlock","src":"1647:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1664:1:27","nodeType":"YulLiteral","src":"1664:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"1667:77:27","nodeType":"YulLiteral","src":"1667:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1657:6:27","nodeType":"YulIdentifier","src":"1657:6:27"},"nativeSrc":"1657:88:27","nodeType":"YulFunctionCall","src":"1657:88:27"},"nativeSrc":"1657:88:27","nodeType":"YulExpressionStatement","src":"1657:88:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1761:1:27","nodeType":"YulLiteral","src":"1761:1:27","type":"","value":"4"},{"kind":"number","nativeSrc":"1764:4:27","nodeType":"YulLiteral","src":"1764:4:27","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"1754:6:27","nodeType":"YulIdentifier","src":"1754:6:27"},"nativeSrc":"1754:15:27","nodeType":"YulFunctionCall","src":"1754:15:27"},"nativeSrc":"1754:15:27","nodeType":"YulExpressionStatement","src":"1754:15:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1785:1:27","nodeType":"YulLiteral","src":"1785:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"1788:4:27","nodeType":"YulLiteral","src":"1788:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1778:6:27","nodeType":"YulIdentifier","src":"1778:6:27"},"nativeSrc":"1778:15:27","nodeType":"YulFunctionCall","src":"1778:15:27"},"nativeSrc":"1778:15:27","nodeType":"YulExpressionStatement","src":"1778:15:27"}]},"name":"panic_error_0x41","nativeSrc":"1619:180:27","nodeType":"YulFunctionDefinition","src":"1619:180:27"},{"body":{"nativeSrc":"1833:152:27","nodeType":"YulBlock","src":"1833:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1850:1:27","nodeType":"YulLiteral","src":"1850:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"1853:77:27","nodeType":"YulLiteral","src":"1853:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1843:6:27","nodeType":"YulIdentifier","src":"1843:6:27"},"nativeSrc":"1843:88:27","nodeType":"YulFunctionCall","src":"1843:88:27"},"nativeSrc":"1843:88:27","nodeType":"YulExpressionStatement","src":"1843:88:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1947:1:27","nodeType":"YulLiteral","src":"1947:1:27","type":"","value":"4"},{"kind":"number","nativeSrc":"1950:4:27","nodeType":"YulLiteral","src":"1950:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"1940:6:27","nodeType":"YulIdentifier","src":"1940:6:27"},"nativeSrc":"1940:15:27","nodeType":"YulFunctionCall","src":"1940:15:27"},"nativeSrc":"1940:15:27","nodeType":"YulExpressionStatement","src":"1940:15:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1971:1:27","nodeType":"YulLiteral","src":"1971:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"1974:4:27","nodeType":"YulLiteral","src":"1974:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1964:6:27","nodeType":"YulIdentifier","src":"1964:6:27"},"nativeSrc":"1964:15:27","nodeType":"YulFunctionCall","src":"1964:15:27"},"nativeSrc":"1964:15:27","nodeType":"YulExpressionStatement","src":"1964:15:27"}]},"name":"panic_error_0x22","nativeSrc":"1805:180:27","nodeType":"YulFunctionDefinition","src":"1805:180:27"},{"body":{"nativeSrc":"2042:269:27","nodeType":"YulBlock","src":"2042:269:27","statements":[{"nativeSrc":"2052:22:27","nodeType":"YulAssignment","src":"2052:22:27","value":{"arguments":[{"name":"data","nativeSrc":"2066:4:27","nodeType":"YulIdentifier","src":"2066:4:27"},{"kind":"number","nativeSrc":"2072:1:27","nodeType":"YulLiteral","src":"2072:1:27","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"2062:3:27","nodeType":"YulIdentifier","src":"2062:3:27"},"nativeSrc":"2062:12:27","nodeType":"YulFunctionCall","src":"2062:12:27"},"variableNames":[{"name":"length","nativeSrc":"2052:6:27","nodeType":"YulIdentifier","src":"2052:6:27"}]},{"nativeSrc":"2083:38:27","nodeType":"YulVariableDeclaration","src":"2083:38:27","value":{"arguments":[{"name":"data","nativeSrc":"2113:4:27","nodeType":"YulIdentifier","src":"2113:4:27"},{"kind":"number","nativeSrc":"2119:1:27","nodeType":"YulLiteral","src":"2119:1:27","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"2109:3:27","nodeType":"YulIdentifier","src":"2109:3:27"},"nativeSrc":"2109:12:27","nodeType":"YulFunctionCall","src":"2109:12:27"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"2087:18:27","nodeType":"YulTypedName","src":"2087:18:27","type":""}]},{"body":{"nativeSrc":"2160:51:27","nodeType":"YulBlock","src":"2160:51:27","statements":[{"nativeSrc":"2174:27:27","nodeType":"YulAssignment","src":"2174:27:27","value":{"arguments":[{"name":"length","nativeSrc":"2188:6:27","nodeType":"YulIdentifier","src":"2188:6:27"},{"kind":"number","nativeSrc":"2196:4:27","nodeType":"YulLiteral","src":"2196:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"2184:3:27","nodeType":"YulIdentifier","src":"2184:3:27"},"nativeSrc":"2184:17:27","nodeType":"YulFunctionCall","src":"2184:17:27"},"variableNames":[{"name":"length","nativeSrc":"2174:6:27","nodeType":"YulIdentifier","src":"2174:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"2140:18:27","nodeType":"YulIdentifier","src":"2140:18:27"}],"functionName":{"name":"iszero","nativeSrc":"2133:6:27","nodeType":"YulIdentifier","src":"2133:6:27"},"nativeSrc":"2133:26:27","nodeType":"YulFunctionCall","src":"2133:26:27"},"nativeSrc":"2130:81:27","nodeType":"YulIf","src":"2130:81:27"},{"body":{"nativeSrc":"2263:42:27","nodeType":"YulBlock","src":"2263:42:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"2277:16:27","nodeType":"YulIdentifier","src":"2277:16:27"},"nativeSrc":"2277:18:27","nodeType":"YulFunctionCall","src":"2277:18:27"},"nativeSrc":"2277:18:27","nodeType":"YulExpressionStatement","src":"2277:18:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"2227:18:27","nodeType":"YulIdentifier","src":"2227:18:27"},{"arguments":[{"name":"length","nativeSrc":"2250:6:27","nodeType":"YulIdentifier","src":"2250:6:27"},{"kind":"number","nativeSrc":"2258:2:27","nodeType":"YulLiteral","src":"2258:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"2247:2:27","nodeType":"YulIdentifier","src":"2247:2:27"},"nativeSrc":"2247:14:27","nodeType":"YulFunctionCall","src":"2247:14:27"}],"functionName":{"name":"eq","nativeSrc":"2224:2:27","nodeType":"YulIdentifier","src":"2224:2:27"},"nativeSrc":"2224:38:27","nodeType":"YulFunctionCall","src":"2224:38:27"},"nativeSrc":"2221:84:27","nodeType":"YulIf","src":"2221:84:27"}]},"name":"extract_byte_array_length","nativeSrc":"1991:320:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"2026:4:27","nodeType":"YulTypedName","src":"2026:4:27","type":""}],"returnVariables":[{"name":"length","nativeSrc":"2035:6:27","nodeType":"YulTypedName","src":"2035:6:27","type":""}],"src":"1991:320:27"},{"body":{"nativeSrc":"2371:87:27","nodeType":"YulBlock","src":"2371:87:27","statements":[{"nativeSrc":"2381:11:27","nodeType":"YulAssignment","src":"2381:11:27","value":{"name":"ptr","nativeSrc":"2389:3:27","nodeType":"YulIdentifier","src":"2389:3:27"},"variableNames":[{"name":"data","nativeSrc":"2381:4:27","nodeType":"YulIdentifier","src":"2381:4:27"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2409:1:27","nodeType":"YulLiteral","src":"2409:1:27","type":"","value":"0"},{"name":"ptr","nativeSrc":"2412:3:27","nodeType":"YulIdentifier","src":"2412:3:27"}],"functionName":{"name":"mstore","nativeSrc":"2402:6:27","nodeType":"YulIdentifier","src":"2402:6:27"},"nativeSrc":"2402:14:27","nodeType":"YulFunctionCall","src":"2402:14:27"},"nativeSrc":"2402:14:27","nodeType":"YulExpressionStatement","src":"2402:14:27"},{"nativeSrc":"2425:26:27","nodeType":"YulAssignment","src":"2425:26:27","value":{"arguments":[{"kind":"number","nativeSrc":"2443:1:27","nodeType":"YulLiteral","src":"2443:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"2446:4:27","nodeType":"YulLiteral","src":"2446:4:27","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2433:9:27","nodeType":"YulIdentifier","src":"2433:9:27"},"nativeSrc":"2433:18:27","nodeType":"YulFunctionCall","src":"2433:18:27"},"variableNames":[{"name":"data","nativeSrc":"2425:4:27","nodeType":"YulIdentifier","src":"2425:4:27"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"2317:141:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"2358:3:27","nodeType":"YulTypedName","src":"2358:3:27","type":""}],"returnVariables":[{"name":"data","nativeSrc":"2366:4:27","nodeType":"YulTypedName","src":"2366:4:27","type":""}],"src":"2317:141:27"},{"body":{"nativeSrc":"2508:49:27","nodeType":"YulBlock","src":"2508:49:27","statements":[{"nativeSrc":"2518:33:27","nodeType":"YulAssignment","src":"2518:33:27","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2536:5:27","nodeType":"YulIdentifier","src":"2536:5:27"},{"kind":"number","nativeSrc":"2543:2:27","nodeType":"YulLiteral","src":"2543:2:27","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2532:3:27","nodeType":"YulIdentifier","src":"2532:3:27"},"nativeSrc":"2532:14:27","nodeType":"YulFunctionCall","src":"2532:14:27"},{"kind":"number","nativeSrc":"2548:2:27","nodeType":"YulLiteral","src":"2548:2:27","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"2528:3:27","nodeType":"YulIdentifier","src":"2528:3:27"},"nativeSrc":"2528:23:27","nodeType":"YulFunctionCall","src":"2528:23:27"},"variableNames":[{"name":"result","nativeSrc":"2518:6:27","nodeType":"YulIdentifier","src":"2518:6:27"}]}]},"name":"divide_by_32_ceil","nativeSrc":"2464:93:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2491:5:27","nodeType":"YulTypedName","src":"2491:5:27","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2501:6:27","nodeType":"YulTypedName","src":"2501:6:27","type":""}],"src":"2464:93:27"},{"body":{"nativeSrc":"2616:54:27","nodeType":"YulBlock","src":"2616:54:27","statements":[{"nativeSrc":"2626:37:27","nodeType":"YulAssignment","src":"2626:37:27","value":{"arguments":[{"name":"bits","nativeSrc":"2651:4:27","nodeType":"YulIdentifier","src":"2651:4:27"},{"name":"value","nativeSrc":"2657:5:27","nodeType":"YulIdentifier","src":"2657:5:27"}],"functionName":{"name":"shl","nativeSrc":"2647:3:27","nodeType":"YulIdentifier","src":"2647:3:27"},"nativeSrc":"2647:16:27","nodeType":"YulFunctionCall","src":"2647:16:27"},"variableNames":[{"name":"newValue","nativeSrc":"2626:8:27","nodeType":"YulIdentifier","src":"2626:8:27"}]}]},"name":"shift_left_dynamic","nativeSrc":"2563:107:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"2591:4:27","nodeType":"YulTypedName","src":"2591:4:27","type":""},{"name":"value","nativeSrc":"2597:5:27","nodeType":"YulTypedName","src":"2597:5:27","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"2607:8:27","nodeType":"YulTypedName","src":"2607:8:27","type":""}],"src":"2563:107:27"},{"body":{"nativeSrc":"2752:317:27","nodeType":"YulBlock","src":"2752:317:27","statements":[{"nativeSrc":"2762:35:27","nodeType":"YulVariableDeclaration","src":"2762:35:27","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"2783:10:27","nodeType":"YulIdentifier","src":"2783:10:27"},{"kind":"number","nativeSrc":"2795:1:27","nodeType":"YulLiteral","src":"2795:1:27","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"2779:3:27","nodeType":"YulIdentifier","src":"2779:3:27"},"nativeSrc":"2779:18:27","nodeType":"YulFunctionCall","src":"2779:18:27"},"variables":[{"name":"shiftBits","nativeSrc":"2766:9:27","nodeType":"YulTypedName","src":"2766:9:27","type":""}]},{"nativeSrc":"2806:109:27","nodeType":"YulVariableDeclaration","src":"2806:109:27","value":{"arguments":[{"name":"shiftBits","nativeSrc":"2837:9:27","nodeType":"YulIdentifier","src":"2837:9:27"},{"kind":"number","nativeSrc":"2848:66:27","nodeType":"YulLiteral","src":"2848:66:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"2818:18:27","nodeType":"YulIdentifier","src":"2818:18:27"},"nativeSrc":"2818:97:27","nodeType":"YulFunctionCall","src":"2818:97:27"},"variables":[{"name":"mask","nativeSrc":"2810:4:27","nodeType":"YulTypedName","src":"2810:4:27","type":""}]},{"nativeSrc":"2924:51:27","nodeType":"YulAssignment","src":"2924:51:27","value":{"arguments":[{"name":"shiftBits","nativeSrc":"2955:9:27","nodeType":"YulIdentifier","src":"2955:9:27"},{"name":"toInsert","nativeSrc":"2966:8:27","nodeType":"YulIdentifier","src":"2966:8:27"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"2936:18:27","nodeType":"YulIdentifier","src":"2936:18:27"},"nativeSrc":"2936:39:27","nodeType":"YulFunctionCall","src":"2936:39:27"},"variableNames":[{"name":"toInsert","nativeSrc":"2924:8:27","nodeType":"YulIdentifier","src":"2924:8:27"}]},{"nativeSrc":"2984:30:27","nodeType":"YulAssignment","src":"2984:30:27","value":{"arguments":[{"name":"value","nativeSrc":"2997:5:27","nodeType":"YulIdentifier","src":"2997:5:27"},{"arguments":[{"name":"mask","nativeSrc":"3008:4:27","nodeType":"YulIdentifier","src":"3008:4:27"}],"functionName":{"name":"not","nativeSrc":"3004:3:27","nodeType":"YulIdentifier","src":"3004:3:27"},"nativeSrc":"3004:9:27","nodeType":"YulFunctionCall","src":"3004:9:27"}],"functionName":{"name":"and","nativeSrc":"2993:3:27","nodeType":"YulIdentifier","src":"2993:3:27"},"nativeSrc":"2993:21:27","nodeType":"YulFunctionCall","src":"2993:21:27"},"variableNames":[{"name":"value","nativeSrc":"2984:5:27","nodeType":"YulIdentifier","src":"2984:5:27"}]},{"nativeSrc":"3023:40:27","nodeType":"YulAssignment","src":"3023:40:27","value":{"arguments":[{"name":"value","nativeSrc":"3036:5:27","nodeType":"YulIdentifier","src":"3036:5:27"},{"arguments":[{"name":"toInsert","nativeSrc":"3047:8:27","nodeType":"YulIdentifier","src":"3047:8:27"},{"name":"mask","nativeSrc":"3057:4:27","nodeType":"YulIdentifier","src":"3057:4:27"}],"functionName":{"name":"and","nativeSrc":"3043:3:27","nodeType":"YulIdentifier","src":"3043:3:27"},"nativeSrc":"3043:19:27","nodeType":"YulFunctionCall","src":"3043:19:27"}],"functionName":{"name":"or","nativeSrc":"3033:2:27","nodeType":"YulIdentifier","src":"3033:2:27"},"nativeSrc":"3033:30:27","nodeType":"YulFunctionCall","src":"3033:30:27"},"variableNames":[{"name":"result","nativeSrc":"3023:6:27","nodeType":"YulIdentifier","src":"3023:6:27"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"2676:393:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2713:5:27","nodeType":"YulTypedName","src":"2713:5:27","type":""},{"name":"shiftBytes","nativeSrc":"2720:10:27","nodeType":"YulTypedName","src":"2720:10:27","type":""},{"name":"toInsert","nativeSrc":"2732:8:27","nodeType":"YulTypedName","src":"2732:8:27","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2745:6:27","nodeType":"YulTypedName","src":"2745:6:27","type":""}],"src":"2676:393:27"},{"body":{"nativeSrc":"3120:32:27","nodeType":"YulBlock","src":"3120:32:27","statements":[{"nativeSrc":"3130:16:27","nodeType":"YulAssignment","src":"3130:16:27","value":{"name":"value","nativeSrc":"3141:5:27","nodeType":"YulIdentifier","src":"3141:5:27"},"variableNames":[{"name":"cleaned","nativeSrc":"3130:7:27","nodeType":"YulIdentifier","src":"3130:7:27"}]}]},"name":"cleanup_t_uint256","nativeSrc":"3075:77:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3102:5:27","nodeType":"YulTypedName","src":"3102:5:27","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3112:7:27","nodeType":"YulTypedName","src":"3112:7:27","type":""}],"src":"3075:77:27"},{"body":{"nativeSrc":"3190:28:27","nodeType":"YulBlock","src":"3190:28:27","statements":[{"nativeSrc":"3200:12:27","nodeType":"YulAssignment","src":"3200:12:27","value":{"name":"value","nativeSrc":"3207:5:27","nodeType":"YulIdentifier","src":"3207:5:27"},"variableNames":[{"name":"ret","nativeSrc":"3200:3:27","nodeType":"YulIdentifier","src":"3200:3:27"}]}]},"name":"identity","nativeSrc":"3158:60:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3176:5:27","nodeType":"YulTypedName","src":"3176:5:27","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"3186:3:27","nodeType":"YulTypedName","src":"3186:3:27","type":""}],"src":"3158:60:27"},{"body":{"nativeSrc":"3284:82:27","nodeType":"YulBlock","src":"3284:82:27","statements":[{"nativeSrc":"3294:66:27","nodeType":"YulAssignment","src":"3294:66:27","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3352:5:27","nodeType":"YulIdentifier","src":"3352:5:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3334:17:27","nodeType":"YulIdentifier","src":"3334:17:27"},"nativeSrc":"3334:24:27","nodeType":"YulFunctionCall","src":"3334:24:27"}],"functionName":{"name":"identity","nativeSrc":"3325:8:27","nodeType":"YulIdentifier","src":"3325:8:27"},"nativeSrc":"3325:34:27","nodeType":"YulFunctionCall","src":"3325:34:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3307:17:27","nodeType":"YulIdentifier","src":"3307:17:27"},"nativeSrc":"3307:53:27","nodeType":"YulFunctionCall","src":"3307:53:27"},"variableNames":[{"name":"converted","nativeSrc":"3294:9:27","nodeType":"YulIdentifier","src":"3294:9:27"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"3224:142:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3264:5:27","nodeType":"YulTypedName","src":"3264:5:27","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"3274:9:27","nodeType":"YulTypedName","src":"3274:9:27","type":""}],"src":"3224:142:27"},{"body":{"nativeSrc":"3419:28:27","nodeType":"YulBlock","src":"3419:28:27","statements":[{"nativeSrc":"3429:12:27","nodeType":"YulAssignment","src":"3429:12:27","value":{"name":"value","nativeSrc":"3436:5:27","nodeType":"YulIdentifier","src":"3436:5:27"},"variableNames":[{"name":"ret","nativeSrc":"3429:3:27","nodeType":"YulIdentifier","src":"3429:3:27"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"3372:75:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3405:5:27","nodeType":"YulTypedName","src":"3405:5:27","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"3415:3:27","nodeType":"YulTypedName","src":"3415:3:27","type":""}],"src":"3372:75:27"},{"body":{"nativeSrc":"3529:193:27","nodeType":"YulBlock","src":"3529:193:27","statements":[{"nativeSrc":"3539:63:27","nodeType":"YulVariableDeclaration","src":"3539:63:27","value":{"arguments":[{"name":"value_0","nativeSrc":"3594:7:27","nodeType":"YulIdentifier","src":"3594:7:27"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"3563:30:27","nodeType":"YulIdentifier","src":"3563:30:27"},"nativeSrc":"3563:39:27","nodeType":"YulFunctionCall","src":"3563:39:27"},"variables":[{"name":"convertedValue_0","nativeSrc":"3543:16:27","nodeType":"YulTypedName","src":"3543:16:27","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3618:4:27","nodeType":"YulIdentifier","src":"3618:4:27"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"3658:4:27","nodeType":"YulIdentifier","src":"3658:4:27"}],"functionName":{"name":"sload","nativeSrc":"3652:5:27","nodeType":"YulIdentifier","src":"3652:5:27"},"nativeSrc":"3652:11:27","nodeType":"YulFunctionCall","src":"3652:11:27"},{"name":"offset","nativeSrc":"3665:6:27","nodeType":"YulIdentifier","src":"3665:6:27"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"3697:16:27","nodeType":"YulIdentifier","src":"3697:16:27"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"3673:23:27","nodeType":"YulIdentifier","src":"3673:23:27"},"nativeSrc":"3673:41:27","nodeType":"YulFunctionCall","src":"3673:41:27"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"3624:27:27","nodeType":"YulIdentifier","src":"3624:27:27"},"nativeSrc":"3624:91:27","nodeType":"YulFunctionCall","src":"3624:91:27"}],"functionName":{"name":"sstore","nativeSrc":"3611:6:27","nodeType":"YulIdentifier","src":"3611:6:27"},"nativeSrc":"3611:105:27","nodeType":"YulFunctionCall","src":"3611:105:27"},"nativeSrc":"3611:105:27","nodeType":"YulExpressionStatement","src":"3611:105:27"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"3453:269:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3506:4:27","nodeType":"YulTypedName","src":"3506:4:27","type":""},{"name":"offset","nativeSrc":"3512:6:27","nodeType":"YulTypedName","src":"3512:6:27","type":""},{"name":"value_0","nativeSrc":"3520:7:27","nodeType":"YulTypedName","src":"3520:7:27","type":""}],"src":"3453:269:27"},{"body":{"nativeSrc":"3777:24:27","nodeType":"YulBlock","src":"3777:24:27","statements":[{"nativeSrc":"3787:8:27","nodeType":"YulAssignment","src":"3787:8:27","value":{"kind":"number","nativeSrc":"3794:1:27","nodeType":"YulLiteral","src":"3794:1:27","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"3787:3:27","nodeType":"YulIdentifier","src":"3787:3:27"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"3728:73:27","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"3773:3:27","nodeType":"YulTypedName","src":"3773:3:27","type":""}],"src":"3728:73:27"},{"body":{"nativeSrc":"3860:136:27","nodeType":"YulBlock","src":"3860:136:27","statements":[{"nativeSrc":"3870:46:27","nodeType":"YulVariableDeclaration","src":"3870:46:27","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"3884:30:27","nodeType":"YulIdentifier","src":"3884:30:27"},"nativeSrc":"3884:32:27","nodeType":"YulFunctionCall","src":"3884:32:27"},"variables":[{"name":"zero_0","nativeSrc":"3874:6:27","nodeType":"YulTypedName","src":"3874:6:27","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3969:4:27","nodeType":"YulIdentifier","src":"3969:4:27"},{"name":"offset","nativeSrc":"3975:6:27","nodeType":"YulIdentifier","src":"3975:6:27"},{"name":"zero_0","nativeSrc":"3983:6:27","nodeType":"YulIdentifier","src":"3983:6:27"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"3925:43:27","nodeType":"YulIdentifier","src":"3925:43:27"},"nativeSrc":"3925:65:27","nodeType":"YulFunctionCall","src":"3925:65:27"},"nativeSrc":"3925:65:27","nodeType":"YulExpressionStatement","src":"3925:65:27"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"3807:189:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3846:4:27","nodeType":"YulTypedName","src":"3846:4:27","type":""},{"name":"offset","nativeSrc":"3852:6:27","nodeType":"YulTypedName","src":"3852:6:27","type":""}],"src":"3807:189:27"},{"body":{"nativeSrc":"4052:136:27","nodeType":"YulBlock","src":"4052:136:27","statements":[{"body":{"nativeSrc":"4119:63:27","nodeType":"YulBlock","src":"4119:63:27","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"4163:5:27","nodeType":"YulIdentifier","src":"4163:5:27"},{"kind":"number","nativeSrc":"4170:1:27","nodeType":"YulLiteral","src":"4170:1:27","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"4133:29:27","nodeType":"YulIdentifier","src":"4133:29:27"},"nativeSrc":"4133:39:27","nodeType":"YulFunctionCall","src":"4133:39:27"},"nativeSrc":"4133:39:27","nodeType":"YulExpressionStatement","src":"4133:39:27"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"4072:5:27","nodeType":"YulIdentifier","src":"4072:5:27"},{"name":"end","nativeSrc":"4079:3:27","nodeType":"YulIdentifier","src":"4079:3:27"}],"functionName":{"name":"lt","nativeSrc":"4069:2:27","nodeType":"YulIdentifier","src":"4069:2:27"},"nativeSrc":"4069:14:27","nodeType":"YulFunctionCall","src":"4069:14:27"},"nativeSrc":"4062:120:27","nodeType":"YulForLoop","post":{"nativeSrc":"4084:26:27","nodeType":"YulBlock","src":"4084:26:27","statements":[{"nativeSrc":"4086:22:27","nodeType":"YulAssignment","src":"4086:22:27","value":{"arguments":[{"name":"start","nativeSrc":"4099:5:27","nodeType":"YulIdentifier","src":"4099:5:27"},{"kind":"number","nativeSrc":"4106:1:27","nodeType":"YulLiteral","src":"4106:1:27","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4095:3:27","nodeType":"YulIdentifier","src":"4095:3:27"},"nativeSrc":"4095:13:27","nodeType":"YulFunctionCall","src":"4095:13:27"},"variableNames":[{"name":"start","nativeSrc":"4086:5:27","nodeType":"YulIdentifier","src":"4086:5:27"}]}]},"pre":{"nativeSrc":"4066:2:27","nodeType":"YulBlock","src":"4066:2:27","statements":[]},"src":"4062:120:27"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"4002:186:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"4040:5:27","nodeType":"YulTypedName","src":"4040:5:27","type":""},{"name":"end","nativeSrc":"4047:3:27","nodeType":"YulTypedName","src":"4047:3:27","type":""}],"src":"4002:186:27"},{"body":{"nativeSrc":"4273:464:27","nodeType":"YulBlock","src":"4273:464:27","statements":[{"body":{"nativeSrc":"4299:431:27","nodeType":"YulBlock","src":"4299:431:27","statements":[{"nativeSrc":"4313:54:27","nodeType":"YulVariableDeclaration","src":"4313:54:27","value":{"arguments":[{"name":"array","nativeSrc":"4361:5:27","nodeType":"YulIdentifier","src":"4361:5:27"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"4329:31:27","nodeType":"YulIdentifier","src":"4329:31:27"},"nativeSrc":"4329:38:27","nodeType":"YulFunctionCall","src":"4329:38:27"},"variables":[{"name":"dataArea","nativeSrc":"4317:8:27","nodeType":"YulTypedName","src":"4317:8:27","type":""}]},{"nativeSrc":"4380:63:27","nodeType":"YulVariableDeclaration","src":"4380:63:27","value":{"arguments":[{"name":"dataArea","nativeSrc":"4403:8:27","nodeType":"YulIdentifier","src":"4403:8:27"},{"arguments":[{"name":"startIndex","nativeSrc":"4431:10:27","nodeType":"YulIdentifier","src":"4431:10:27"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"4413:17:27","nodeType":"YulIdentifier","src":"4413:17:27"},"nativeSrc":"4413:29:27","nodeType":"YulFunctionCall","src":"4413:29:27"}],"functionName":{"name":"add","nativeSrc":"4399:3:27","nodeType":"YulIdentifier","src":"4399:3:27"},"nativeSrc":"4399:44:27","nodeType":"YulFunctionCall","src":"4399:44:27"},"variables":[{"name":"deleteStart","nativeSrc":"4384:11:27","nodeType":"YulTypedName","src":"4384:11:27","type":""}]},{"body":{"nativeSrc":"4600:27:27","nodeType":"YulBlock","src":"4600:27:27","statements":[{"nativeSrc":"4602:23:27","nodeType":"YulAssignment","src":"4602:23:27","value":{"name":"dataArea","nativeSrc":"4617:8:27","nodeType":"YulIdentifier","src":"4617:8:27"},"variableNames":[{"name":"deleteStart","nativeSrc":"4602:11:27","nodeType":"YulIdentifier","src":"4602:11:27"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"4584:10:27","nodeType":"YulIdentifier","src":"4584:10:27"},{"kind":"number","nativeSrc":"4596:2:27","nodeType":"YulLiteral","src":"4596:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"4581:2:27","nodeType":"YulIdentifier","src":"4581:2:27"},"nativeSrc":"4581:18:27","nodeType":"YulFunctionCall","src":"4581:18:27"},"nativeSrc":"4578:49:27","nodeType":"YulIf","src":"4578:49:27"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"4669:11:27","nodeType":"YulIdentifier","src":"4669:11:27"},{"arguments":[{"name":"dataArea","nativeSrc":"4686:8:27","nodeType":"YulIdentifier","src":"4686:8:27"},{"arguments":[{"name":"len","nativeSrc":"4714:3:27","nodeType":"YulIdentifier","src":"4714:3:27"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"4696:17:27","nodeType":"YulIdentifier","src":"4696:17:27"},"nativeSrc":"4696:22:27","nodeType":"YulFunctionCall","src":"4696:22:27"}],"functionName":{"name":"add","nativeSrc":"4682:3:27","nodeType":"YulIdentifier","src":"4682:3:27"},"nativeSrc":"4682:37:27","nodeType":"YulFunctionCall","src":"4682:37:27"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"4640:28:27","nodeType":"YulIdentifier","src":"4640:28:27"},"nativeSrc":"4640:80:27","nodeType":"YulFunctionCall","src":"4640:80:27"},"nativeSrc":"4640:80:27","nodeType":"YulExpressionStatement","src":"4640:80:27"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"4290:3:27","nodeType":"YulIdentifier","src":"4290:3:27"},{"kind":"number","nativeSrc":"4295:2:27","nodeType":"YulLiteral","src":"4295:2:27","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"4287:2:27","nodeType":"YulIdentifier","src":"4287:2:27"},"nativeSrc":"4287:11:27","nodeType":"YulFunctionCall","src":"4287:11:27"},"nativeSrc":"4284:446:27","nodeType":"YulIf","src":"4284:446:27"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"4194:543:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"4249:5:27","nodeType":"YulTypedName","src":"4249:5:27","type":""},{"name":"len","nativeSrc":"4256:3:27","nodeType":"YulTypedName","src":"4256:3:27","type":""},{"name":"startIndex","nativeSrc":"4261:10:27","nodeType":"YulTypedName","src":"4261:10:27","type":""}],"src":"4194:543:27"},{"body":{"nativeSrc":"4806:54:27","nodeType":"YulBlock","src":"4806:54:27","statements":[{"nativeSrc":"4816:37:27","nodeType":"YulAssignment","src":"4816:37:27","value":{"arguments":[{"name":"bits","nativeSrc":"4841:4:27","nodeType":"YulIdentifier","src":"4841:4:27"},{"name":"value","nativeSrc":"4847:5:27","nodeType":"YulIdentifier","src":"4847:5:27"}],"functionName":{"name":"shr","nativeSrc":"4837:3:27","nodeType":"YulIdentifier","src":"4837:3:27"},"nativeSrc":"4837:16:27","nodeType":"YulFunctionCall","src":"4837:16:27"},"variableNames":[{"name":"newValue","nativeSrc":"4816:8:27","nodeType":"YulIdentifier","src":"4816:8:27"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"4743:117:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"4781:4:27","nodeType":"YulTypedName","src":"4781:4:27","type":""},{"name":"value","nativeSrc":"4787:5:27","nodeType":"YulTypedName","src":"4787:5:27","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"4797:8:27","nodeType":"YulTypedName","src":"4797:8:27","type":""}],"src":"4743:117:27"},{"body":{"nativeSrc":"4917:118:27","nodeType":"YulBlock","src":"4917:118:27","statements":[{"nativeSrc":"4927:68:27","nodeType":"YulVariableDeclaration","src":"4927:68:27","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4976:1:27","nodeType":"YulLiteral","src":"4976:1:27","type":"","value":"8"},{"name":"bytes","nativeSrc":"4979:5:27","nodeType":"YulIdentifier","src":"4979:5:27"}],"functionName":{"name":"mul","nativeSrc":"4972:3:27","nodeType":"YulIdentifier","src":"4972:3:27"},"nativeSrc":"4972:13:27","nodeType":"YulFunctionCall","src":"4972:13:27"},{"arguments":[{"kind":"number","nativeSrc":"4991:1:27","nodeType":"YulLiteral","src":"4991:1:27","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4987:3:27","nodeType":"YulIdentifier","src":"4987:3:27"},"nativeSrc":"4987:6:27","nodeType":"YulFunctionCall","src":"4987:6:27"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"4943:28:27","nodeType":"YulIdentifier","src":"4943:28:27"},"nativeSrc":"4943:51:27","nodeType":"YulFunctionCall","src":"4943:51:27"}],"functionName":{"name":"not","nativeSrc":"4939:3:27","nodeType":"YulIdentifier","src":"4939:3:27"},"nativeSrc":"4939:56:27","nodeType":"YulFunctionCall","src":"4939:56:27"},"variables":[{"name":"mask","nativeSrc":"4931:4:27","nodeType":"YulTypedName","src":"4931:4:27","type":""}]},{"nativeSrc":"5004:25:27","nodeType":"YulAssignment","src":"5004:25:27","value":{"arguments":[{"name":"data","nativeSrc":"5018:4:27","nodeType":"YulIdentifier","src":"5018:4:27"},{"name":"mask","nativeSrc":"5024:4:27","nodeType":"YulIdentifier","src":"5024:4:27"}],"functionName":{"name":"and","nativeSrc":"5014:3:27","nodeType":"YulIdentifier","src":"5014:3:27"},"nativeSrc":"5014:15:27","nodeType":"YulFunctionCall","src":"5014:15:27"},"variableNames":[{"name":"result","nativeSrc":"5004:6:27","nodeType":"YulIdentifier","src":"5004:6:27"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"4866:169:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4894:4:27","nodeType":"YulTypedName","src":"4894:4:27","type":""},{"name":"bytes","nativeSrc":"4900:5:27","nodeType":"YulTypedName","src":"4900:5:27","type":""}],"returnVariables":[{"name":"result","nativeSrc":"4910:6:27","nodeType":"YulTypedName","src":"4910:6:27","type":""}],"src":"4866:169:27"},{"body":{"nativeSrc":"5121:214:27","nodeType":"YulBlock","src":"5121:214:27","statements":[{"nativeSrc":"5254:37:27","nodeType":"YulAssignment","src":"5254:37:27","value":{"arguments":[{"name":"data","nativeSrc":"5281:4:27","nodeType":"YulIdentifier","src":"5281:4:27"},{"name":"len","nativeSrc":"5287:3:27","nodeType":"YulIdentifier","src":"5287:3:27"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"5262:18:27","nodeType":"YulIdentifier","src":"5262:18:27"},"nativeSrc":"5262:29:27","nodeType":"YulFunctionCall","src":"5262:29:27"},"variableNames":[{"name":"data","nativeSrc":"5254:4:27","nodeType":"YulIdentifier","src":"5254:4:27"}]},{"nativeSrc":"5300:29:27","nodeType":"YulAssignment","src":"5300:29:27","value":{"arguments":[{"name":"data","nativeSrc":"5311:4:27","nodeType":"YulIdentifier","src":"5311:4:27"},{"arguments":[{"kind":"number","nativeSrc":"5321:1:27","nodeType":"YulLiteral","src":"5321:1:27","type":"","value":"2"},{"name":"len","nativeSrc":"5324:3:27","nodeType":"YulIdentifier","src":"5324:3:27"}],"functionName":{"name":"mul","nativeSrc":"5317:3:27","nodeType":"YulIdentifier","src":"5317:3:27"},"nativeSrc":"5317:11:27","nodeType":"YulFunctionCall","src":"5317:11:27"}],"functionName":{"name":"or","nativeSrc":"5308:2:27","nodeType":"YulIdentifier","src":"5308:2:27"},"nativeSrc":"5308:21:27","nodeType":"YulFunctionCall","src":"5308:21:27"},"variableNames":[{"name":"used","nativeSrc":"5300:4:27","nodeType":"YulIdentifier","src":"5300:4:27"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"5040:295:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"5102:4:27","nodeType":"YulTypedName","src":"5102:4:27","type":""},{"name":"len","nativeSrc":"5108:3:27","nodeType":"YulTypedName","src":"5108:3:27","type":""}],"returnVariables":[{"name":"used","nativeSrc":"5116:4:27","nodeType":"YulTypedName","src":"5116:4:27","type":""}],"src":"5040:295:27"},{"body":{"nativeSrc":"5432:1303:27","nodeType":"YulBlock","src":"5432:1303:27","statements":[{"nativeSrc":"5443:51:27","nodeType":"YulVariableDeclaration","src":"5443:51:27","value":{"arguments":[{"name":"src","nativeSrc":"5490:3:27","nodeType":"YulIdentifier","src":"5490:3:27"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"5457:32:27","nodeType":"YulIdentifier","src":"5457:32:27"},"nativeSrc":"5457:37:27","nodeType":"YulFunctionCall","src":"5457:37:27"},"variables":[{"name":"newLen","nativeSrc":"5447:6:27","nodeType":"YulTypedName","src":"5447:6:27","type":""}]},{"body":{"nativeSrc":"5579:22:27","nodeType":"YulBlock","src":"5579:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"5581:16:27","nodeType":"YulIdentifier","src":"5581:16:27"},"nativeSrc":"5581:18:27","nodeType":"YulFunctionCall","src":"5581:18:27"},"nativeSrc":"5581:18:27","nodeType":"YulExpressionStatement","src":"5581:18:27"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"5551:6:27","nodeType":"YulIdentifier","src":"5551:6:27"},{"kind":"number","nativeSrc":"5559:18:27","nodeType":"YulLiteral","src":"5559:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5548:2:27","nodeType":"YulIdentifier","src":"5548:2:27"},"nativeSrc":"5548:30:27","nodeType":"YulFunctionCall","src":"5548:30:27"},"nativeSrc":"5545:56:27","nodeType":"YulIf","src":"5545:56:27"},{"nativeSrc":"5611:52:27","nodeType":"YulVariableDeclaration","src":"5611:52:27","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"5657:4:27","nodeType":"YulIdentifier","src":"5657:4:27"}],"functionName":{"name":"sload","nativeSrc":"5651:5:27","nodeType":"YulIdentifier","src":"5651:5:27"},"nativeSrc":"5651:11:27","nodeType":"YulFunctionCall","src":"5651:11:27"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"5625:25:27","nodeType":"YulIdentifier","src":"5625:25:27"},"nativeSrc":"5625:38:27","nodeType":"YulFunctionCall","src":"5625:38:27"},"variables":[{"name":"oldLen","nativeSrc":"5615:6:27","nodeType":"YulTypedName","src":"5615:6:27","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5756:4:27","nodeType":"YulIdentifier","src":"5756:4:27"},{"name":"oldLen","nativeSrc":"5762:6:27","nodeType":"YulIdentifier","src":"5762:6:27"},{"name":"newLen","nativeSrc":"5770:6:27","nodeType":"YulIdentifier","src":"5770:6:27"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"5710:45:27","nodeType":"YulIdentifier","src":"5710:45:27"},"nativeSrc":"5710:67:27","nodeType":"YulFunctionCall","src":"5710:67:27"},"nativeSrc":"5710:67:27","nodeType":"YulExpressionStatement","src":"5710:67:27"},{"nativeSrc":"5787:18:27","nodeType":"YulVariableDeclaration","src":"5787:18:27","value":{"kind":"number","nativeSrc":"5804:1:27","nodeType":"YulLiteral","src":"5804:1:27","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"5791:9:27","nodeType":"YulTypedName","src":"5791:9:27","type":""}]},{"nativeSrc":"5815:17:27","nodeType":"YulAssignment","src":"5815:17:27","value":{"kind":"number","nativeSrc":"5828:4:27","nodeType":"YulLiteral","src":"5828:4:27","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"5815:9:27","nodeType":"YulIdentifier","src":"5815:9:27"}]},{"cases":[{"body":{"nativeSrc":"5879:611:27","nodeType":"YulBlock","src":"5879:611:27","statements":[{"nativeSrc":"5893:37:27","nodeType":"YulVariableDeclaration","src":"5893:37:27","value":{"arguments":[{"name":"newLen","nativeSrc":"5912:6:27","nodeType":"YulIdentifier","src":"5912:6:27"},{"arguments":[{"kind":"number","nativeSrc":"5924:4:27","nodeType":"YulLiteral","src":"5924:4:27","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"5920:3:27","nodeType":"YulIdentifier","src":"5920:3:27"},"nativeSrc":"5920:9:27","nodeType":"YulFunctionCall","src":"5920:9:27"}],"functionName":{"name":"and","nativeSrc":"5908:3:27","nodeType":"YulIdentifier","src":"5908:3:27"},"nativeSrc":"5908:22:27","nodeType":"YulFunctionCall","src":"5908:22:27"},"variables":[{"name":"loopEnd","nativeSrc":"5897:7:27","nodeType":"YulTypedName","src":"5897:7:27","type":""}]},{"nativeSrc":"5944:51:27","nodeType":"YulVariableDeclaration","src":"5944:51:27","value":{"arguments":[{"name":"slot","nativeSrc":"5990:4:27","nodeType":"YulIdentifier","src":"5990:4:27"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"5958:31:27","nodeType":"YulIdentifier","src":"5958:31:27"},"nativeSrc":"5958:37:27","nodeType":"YulFunctionCall","src":"5958:37:27"},"variables":[{"name":"dstPtr","nativeSrc":"5948:6:27","nodeType":"YulTypedName","src":"5948:6:27","type":""}]},{"nativeSrc":"6008:10:27","nodeType":"YulVariableDeclaration","src":"6008:10:27","value":{"kind":"number","nativeSrc":"6017:1:27","nodeType":"YulLiteral","src":"6017:1:27","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"6012:1:27","nodeType":"YulTypedName","src":"6012:1:27","type":""}]},{"body":{"nativeSrc":"6076:163:27","nodeType":"YulBlock","src":"6076:163:27","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"6101:6:27","nodeType":"YulIdentifier","src":"6101:6:27"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6119:3:27","nodeType":"YulIdentifier","src":"6119:3:27"},{"name":"srcOffset","nativeSrc":"6124:9:27","nodeType":"YulIdentifier","src":"6124:9:27"}],"functionName":{"name":"add","nativeSrc":"6115:3:27","nodeType":"YulIdentifier","src":"6115:3:27"},"nativeSrc":"6115:19:27","nodeType":"YulFunctionCall","src":"6115:19:27"}],"functionName":{"name":"mload","nativeSrc":"6109:5:27","nodeType":"YulIdentifier","src":"6109:5:27"},"nativeSrc":"6109:26:27","nodeType":"YulFunctionCall","src":"6109:26:27"}],"functionName":{"name":"sstore","nativeSrc":"6094:6:27","nodeType":"YulIdentifier","src":"6094:6:27"},"nativeSrc":"6094:42:27","nodeType":"YulFunctionCall","src":"6094:42:27"},"nativeSrc":"6094:42:27","nodeType":"YulExpressionStatement","src":"6094:42:27"},{"nativeSrc":"6153:24:27","nodeType":"YulAssignment","src":"6153:24:27","value":{"arguments":[{"name":"dstPtr","nativeSrc":"6167:6:27","nodeType":"YulIdentifier","src":"6167:6:27"},{"kind":"number","nativeSrc":"6175:1:27","nodeType":"YulLiteral","src":"6175:1:27","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6163:3:27","nodeType":"YulIdentifier","src":"6163:3:27"},"nativeSrc":"6163:14:27","nodeType":"YulFunctionCall","src":"6163:14:27"},"variableNames":[{"name":"dstPtr","nativeSrc":"6153:6:27","nodeType":"YulIdentifier","src":"6153:6:27"}]},{"nativeSrc":"6194:31:27","nodeType":"YulAssignment","src":"6194:31:27","value":{"arguments":[{"name":"srcOffset","nativeSrc":"6211:9:27","nodeType":"YulIdentifier","src":"6211:9:27"},{"kind":"number","nativeSrc":"6222:2:27","nodeType":"YulLiteral","src":"6222:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6207:3:27","nodeType":"YulIdentifier","src":"6207:3:27"},"nativeSrc":"6207:18:27","nodeType":"YulFunctionCall","src":"6207:18:27"},"variableNames":[{"name":"srcOffset","nativeSrc":"6194:9:27","nodeType":"YulIdentifier","src":"6194:9:27"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"6042:1:27","nodeType":"YulIdentifier","src":"6042:1:27"},{"name":"loopEnd","nativeSrc":"6045:7:27","nodeType":"YulIdentifier","src":"6045:7:27"}],"functionName":{"name":"lt","nativeSrc":"6039:2:27","nodeType":"YulIdentifier","src":"6039:2:27"},"nativeSrc":"6039:14:27","nodeType":"YulFunctionCall","src":"6039:14:27"},"nativeSrc":"6031:208:27","nodeType":"YulForLoop","post":{"nativeSrc":"6054:21:27","nodeType":"YulBlock","src":"6054:21:27","statements":[{"nativeSrc":"6056:17:27","nodeType":"YulAssignment","src":"6056:17:27","value":{"arguments":[{"name":"i","nativeSrc":"6065:1:27","nodeType":"YulIdentifier","src":"6065:1:27"},{"kind":"number","nativeSrc":"6068:4:27","nodeType":"YulLiteral","src":"6068:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6061:3:27","nodeType":"YulIdentifier","src":"6061:3:27"},"nativeSrc":"6061:12:27","nodeType":"YulFunctionCall","src":"6061:12:27"},"variableNames":[{"name":"i","nativeSrc":"6056:1:27","nodeType":"YulIdentifier","src":"6056:1:27"}]}]},"pre":{"nativeSrc":"6035:3:27","nodeType":"YulBlock","src":"6035:3:27","statements":[]},"src":"6031:208:27"},{"body":{"nativeSrc":"6275:156:27","nodeType":"YulBlock","src":"6275:156:27","statements":[{"nativeSrc":"6293:43:27","nodeType":"YulVariableDeclaration","src":"6293:43:27","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6320:3:27","nodeType":"YulIdentifier","src":"6320:3:27"},{"name":"srcOffset","nativeSrc":"6325:9:27","nodeType":"YulIdentifier","src":"6325:9:27"}],"functionName":{"name":"add","nativeSrc":"6316:3:27","nodeType":"YulIdentifier","src":"6316:3:27"},"nativeSrc":"6316:19:27","nodeType":"YulFunctionCall","src":"6316:19:27"}],"functionName":{"name":"mload","nativeSrc":"6310:5:27","nodeType":"YulIdentifier","src":"6310:5:27"},"nativeSrc":"6310:26:27","nodeType":"YulFunctionCall","src":"6310:26:27"},"variables":[{"name":"lastValue","nativeSrc":"6297:9:27","nodeType":"YulTypedName","src":"6297:9:27","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"6360:6:27","nodeType":"YulIdentifier","src":"6360:6:27"},{"arguments":[{"name":"lastValue","nativeSrc":"6387:9:27","nodeType":"YulIdentifier","src":"6387:9:27"},{"arguments":[{"name":"newLen","nativeSrc":"6402:6:27","nodeType":"YulIdentifier","src":"6402:6:27"},{"kind":"number","nativeSrc":"6410:4:27","nodeType":"YulLiteral","src":"6410:4:27","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"6398:3:27","nodeType":"YulIdentifier","src":"6398:3:27"},"nativeSrc":"6398:17:27","nodeType":"YulFunctionCall","src":"6398:17:27"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"6368:18:27","nodeType":"YulIdentifier","src":"6368:18:27"},"nativeSrc":"6368:48:27","nodeType":"YulFunctionCall","src":"6368:48:27"}],"functionName":{"name":"sstore","nativeSrc":"6353:6:27","nodeType":"YulIdentifier","src":"6353:6:27"},"nativeSrc":"6353:64:27","nodeType":"YulFunctionCall","src":"6353:64:27"},"nativeSrc":"6353:64:27","nodeType":"YulExpressionStatement","src":"6353:64:27"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"6258:7:27","nodeType":"YulIdentifier","src":"6258:7:27"},{"name":"newLen","nativeSrc":"6267:6:27","nodeType":"YulIdentifier","src":"6267:6:27"}],"functionName":{"name":"lt","nativeSrc":"6255:2:27","nodeType":"YulIdentifier","src":"6255:2:27"},"nativeSrc":"6255:19:27","nodeType":"YulFunctionCall","src":"6255:19:27"},"nativeSrc":"6252:179:27","nodeType":"YulIf","src":"6252:179:27"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6451:4:27","nodeType":"YulIdentifier","src":"6451:4:27"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"6465:6:27","nodeType":"YulIdentifier","src":"6465:6:27"},{"kind":"number","nativeSrc":"6473:1:27","nodeType":"YulLiteral","src":"6473:1:27","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"6461:3:27","nodeType":"YulIdentifier","src":"6461:3:27"},"nativeSrc":"6461:14:27","nodeType":"YulFunctionCall","src":"6461:14:27"},{"kind":"number","nativeSrc":"6477:1:27","nodeType":"YulLiteral","src":"6477:1:27","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6457:3:27","nodeType":"YulIdentifier","src":"6457:3:27"},"nativeSrc":"6457:22:27","nodeType":"YulFunctionCall","src":"6457:22:27"}],"functionName":{"name":"sstore","nativeSrc":"6444:6:27","nodeType":"YulIdentifier","src":"6444:6:27"},"nativeSrc":"6444:36:27","nodeType":"YulFunctionCall","src":"6444:36:27"},"nativeSrc":"6444:36:27","nodeType":"YulExpressionStatement","src":"6444:36:27"}]},"nativeSrc":"5872:618:27","nodeType":"YulCase","src":"5872:618:27","value":{"kind":"number","nativeSrc":"5877:1:27","nodeType":"YulLiteral","src":"5877:1:27","type":"","value":"1"}},{"body":{"nativeSrc":"6507:222:27","nodeType":"YulBlock","src":"6507:222:27","statements":[{"nativeSrc":"6521:14:27","nodeType":"YulVariableDeclaration","src":"6521:14:27","value":{"kind":"number","nativeSrc":"6534:1:27","nodeType":"YulLiteral","src":"6534:1:27","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"6525:5:27","nodeType":"YulTypedName","src":"6525:5:27","type":""}]},{"body":{"nativeSrc":"6558:67:27","nodeType":"YulBlock","src":"6558:67:27","statements":[{"nativeSrc":"6576:35:27","nodeType":"YulAssignment","src":"6576:35:27","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6595:3:27","nodeType":"YulIdentifier","src":"6595:3:27"},{"name":"srcOffset","nativeSrc":"6600:9:27","nodeType":"YulIdentifier","src":"6600:9:27"}],"functionName":{"name":"add","nativeSrc":"6591:3:27","nodeType":"YulIdentifier","src":"6591:3:27"},"nativeSrc":"6591:19:27","nodeType":"YulFunctionCall","src":"6591:19:27"}],"functionName":{"name":"mload","nativeSrc":"6585:5:27","nodeType":"YulIdentifier","src":"6585:5:27"},"nativeSrc":"6585:26:27","nodeType":"YulFunctionCall","src":"6585:26:27"},"variableNames":[{"name":"value","nativeSrc":"6576:5:27","nodeType":"YulIdentifier","src":"6576:5:27"}]}]},"condition":{"name":"newLen","nativeSrc":"6551:6:27","nodeType":"YulIdentifier","src":"6551:6:27"},"nativeSrc":"6548:77:27","nodeType":"YulIf","src":"6548:77:27"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6645:4:27","nodeType":"YulIdentifier","src":"6645:4:27"},{"arguments":[{"name":"value","nativeSrc":"6704:5:27","nodeType":"YulIdentifier","src":"6704:5:27"},{"name":"newLen","nativeSrc":"6711:6:27","nodeType":"YulIdentifier","src":"6711:6:27"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"6651:52:27","nodeType":"YulIdentifier","src":"6651:52:27"},"nativeSrc":"6651:67:27","nodeType":"YulFunctionCall","src":"6651:67:27"}],"functionName":{"name":"sstore","nativeSrc":"6638:6:27","nodeType":"YulIdentifier","src":"6638:6:27"},"nativeSrc":"6638:81:27","nodeType":"YulFunctionCall","src":"6638:81:27"},"nativeSrc":"6638:81:27","nodeType":"YulExpressionStatement","src":"6638:81:27"}]},"nativeSrc":"6499:230:27","nodeType":"YulCase","src":"6499:230:27","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"5852:6:27","nodeType":"YulIdentifier","src":"5852:6:27"},{"kind":"number","nativeSrc":"5860:2:27","nodeType":"YulLiteral","src":"5860:2:27","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"5849:2:27","nodeType":"YulIdentifier","src":"5849:2:27"},"nativeSrc":"5849:14:27","nodeType":"YulFunctionCall","src":"5849:14:27"},"nativeSrc":"5842:887:27","nodeType":"YulSwitch","src":"5842:887:27"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"5340:1395:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"5421:4:27","nodeType":"YulTypedName","src":"5421:4:27","type":""},{"name":"src","nativeSrc":"5427:3:27","nodeType":"YulTypedName","src":"5427:3:27","type":""}],"src":"5340:1395:27"},{"body":{"nativeSrc":"6806:53:27","nodeType":"YulBlock","src":"6806:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6823:3:27","nodeType":"YulIdentifier","src":"6823:3:27"},{"arguments":[{"name":"value","nativeSrc":"6846:5:27","nodeType":"YulIdentifier","src":"6846:5:27"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"6828:17:27","nodeType":"YulIdentifier","src":"6828:17:27"},"nativeSrc":"6828:24:27","nodeType":"YulFunctionCall","src":"6828:24:27"}],"functionName":{"name":"mstore","nativeSrc":"6816:6:27","nodeType":"YulIdentifier","src":"6816:6:27"},"nativeSrc":"6816:37:27","nodeType":"YulFunctionCall","src":"6816:37:27"},"nativeSrc":"6816:37:27","nodeType":"YulExpressionStatement","src":"6816:37:27"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6741:118:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6794:5:27","nodeType":"YulTypedName","src":"6794:5:27","type":""},{"name":"pos","nativeSrc":"6801:3:27","nodeType":"YulTypedName","src":"6801:3:27","type":""}],"src":"6741:118:27"},{"body":{"nativeSrc":"6963:124:27","nodeType":"YulBlock","src":"6963:124:27","statements":[{"nativeSrc":"6973:26:27","nodeType":"YulAssignment","src":"6973:26:27","value":{"arguments":[{"name":"headStart","nativeSrc":"6985:9:27","nodeType":"YulIdentifier","src":"6985:9:27"},{"kind":"number","nativeSrc":"6996:2:27","nodeType":"YulLiteral","src":"6996:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6981:3:27","nodeType":"YulIdentifier","src":"6981:3:27"},"nativeSrc":"6981:18:27","nodeType":"YulFunctionCall","src":"6981:18:27"},"variableNames":[{"name":"tail","nativeSrc":"6973:4:27","nodeType":"YulIdentifier","src":"6973:4:27"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"7053:6:27","nodeType":"YulIdentifier","src":"7053:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"7066:9:27","nodeType":"YulIdentifier","src":"7066:9:27"},{"kind":"number","nativeSrc":"7077:1:27","nodeType":"YulLiteral","src":"7077:1:27","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7062:3:27","nodeType":"YulIdentifier","src":"7062:3:27"},"nativeSrc":"7062:17:27","nodeType":"YulFunctionCall","src":"7062:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"7009:43:27","nodeType":"YulIdentifier","src":"7009:43:27"},"nativeSrc":"7009:71:27","nodeType":"YulFunctionCall","src":"7009:71:27"},"nativeSrc":"7009:71:27","nodeType":"YulExpressionStatement","src":"7009:71:27"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"6865:222:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6935:9:27","nodeType":"YulTypedName","src":"6935:9:27","type":""},{"name":"value0","nativeSrc":"6947:6:27","nodeType":"YulTypedName","src":"6947:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6958:4:27","nodeType":"YulTypedName","src":"6958:4:27","type":""}],"src":"6865:222:27"},{"body":{"nativeSrc":"7121:152:27","nodeType":"YulBlock","src":"7121:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7138:1:27","nodeType":"YulLiteral","src":"7138:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"7141:77:27","nodeType":"YulLiteral","src":"7141:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"7131:6:27","nodeType":"YulIdentifier","src":"7131:6:27"},"nativeSrc":"7131:88:27","nodeType":"YulFunctionCall","src":"7131:88:27"},"nativeSrc":"7131:88:27","nodeType":"YulExpressionStatement","src":"7131:88:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7235:1:27","nodeType":"YulLiteral","src":"7235:1:27","type":"","value":"4"},{"kind":"number","nativeSrc":"7238:4:27","nodeType":"YulLiteral","src":"7238:4:27","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"7228:6:27","nodeType":"YulIdentifier","src":"7228:6:27"},"nativeSrc":"7228:15:27","nodeType":"YulFunctionCall","src":"7228:15:27"},"nativeSrc":"7228:15:27","nodeType":"YulExpressionStatement","src":"7228:15:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7259:1:27","nodeType":"YulLiteral","src":"7259:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"7262:4:27","nodeType":"YulLiteral","src":"7262:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7252:6:27","nodeType":"YulIdentifier","src":"7252:6:27"},"nativeSrc":"7252:15:27","nodeType":"YulFunctionCall","src":"7252:15:27"},"nativeSrc":"7252:15:27","nodeType":"YulExpressionStatement","src":"7252:15:27"}]},"name":"panic_error_0x11","nativeSrc":"7093:180:27","nodeType":"YulFunctionDefinition","src":"7093:180:27"},{"body":{"nativeSrc":"7327:362:27","nodeType":"YulBlock","src":"7327:362:27","statements":[{"nativeSrc":"7337:25:27","nodeType":"YulAssignment","src":"7337:25:27","value":{"arguments":[{"name":"x","nativeSrc":"7360:1:27","nodeType":"YulIdentifier","src":"7360:1:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7342:17:27","nodeType":"YulIdentifier","src":"7342:17:27"},"nativeSrc":"7342:20:27","nodeType":"YulFunctionCall","src":"7342:20:27"},"variableNames":[{"name":"x","nativeSrc":"7337:1:27","nodeType":"YulIdentifier","src":"7337:1:27"}]},{"nativeSrc":"7371:25:27","nodeType":"YulAssignment","src":"7371:25:27","value":{"arguments":[{"name":"y","nativeSrc":"7394:1:27","nodeType":"YulIdentifier","src":"7394:1:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7376:17:27","nodeType":"YulIdentifier","src":"7376:17:27"},"nativeSrc":"7376:20:27","nodeType":"YulFunctionCall","src":"7376:20:27"},"variableNames":[{"name":"y","nativeSrc":"7371:1:27","nodeType":"YulIdentifier","src":"7371:1:27"}]},{"nativeSrc":"7405:28:27","nodeType":"YulVariableDeclaration","src":"7405:28:27","value":{"arguments":[{"name":"x","nativeSrc":"7428:1:27","nodeType":"YulIdentifier","src":"7428:1:27"},{"name":"y","nativeSrc":"7431:1:27","nodeType":"YulIdentifier","src":"7431:1:27"}],"functionName":{"name":"mul","nativeSrc":"7424:3:27","nodeType":"YulIdentifier","src":"7424:3:27"},"nativeSrc":"7424:9:27","nodeType":"YulFunctionCall","src":"7424:9:27"},"variables":[{"name":"product_raw","nativeSrc":"7409:11:27","nodeType":"YulTypedName","src":"7409:11:27","type":""}]},{"nativeSrc":"7442:41:27","nodeType":"YulAssignment","src":"7442:41:27","value":{"arguments":[{"name":"product_raw","nativeSrc":"7471:11:27","nodeType":"YulIdentifier","src":"7471:11:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7453:17:27","nodeType":"YulIdentifier","src":"7453:17:27"},"nativeSrc":"7453:30:27","nodeType":"YulFunctionCall","src":"7453:30:27"},"variableNames":[{"name":"product","nativeSrc":"7442:7:27","nodeType":"YulIdentifier","src":"7442:7:27"}]},{"body":{"nativeSrc":"7660:22:27","nodeType":"YulBlock","src":"7660:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7662:16:27","nodeType":"YulIdentifier","src":"7662:16:27"},"nativeSrc":"7662:18:27","nodeType":"YulFunctionCall","src":"7662:18:27"},"nativeSrc":"7662:18:27","nodeType":"YulExpressionStatement","src":"7662:18:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"7593:1:27","nodeType":"YulIdentifier","src":"7593:1:27"}],"functionName":{"name":"iszero","nativeSrc":"7586:6:27","nodeType":"YulIdentifier","src":"7586:6:27"},"nativeSrc":"7586:9:27","nodeType":"YulFunctionCall","src":"7586:9:27"},{"arguments":[{"name":"y","nativeSrc":"7616:1:27","nodeType":"YulIdentifier","src":"7616:1:27"},{"arguments":[{"name":"product","nativeSrc":"7623:7:27","nodeType":"YulIdentifier","src":"7623:7:27"},{"name":"x","nativeSrc":"7632:1:27","nodeType":"YulIdentifier","src":"7632:1:27"}],"functionName":{"name":"div","nativeSrc":"7619:3:27","nodeType":"YulIdentifier","src":"7619:3:27"},"nativeSrc":"7619:15:27","nodeType":"YulFunctionCall","src":"7619:15:27"}],"functionName":{"name":"eq","nativeSrc":"7613:2:27","nodeType":"YulIdentifier","src":"7613:2:27"},"nativeSrc":"7613:22:27","nodeType":"YulFunctionCall","src":"7613:22:27"}],"functionName":{"name":"or","nativeSrc":"7566:2:27","nodeType":"YulIdentifier","src":"7566:2:27"},"nativeSrc":"7566:83:27","nodeType":"YulFunctionCall","src":"7566:83:27"}],"functionName":{"name":"iszero","nativeSrc":"7546:6:27","nodeType":"YulIdentifier","src":"7546:6:27"},"nativeSrc":"7546:113:27","nodeType":"YulFunctionCall","src":"7546:113:27"},"nativeSrc":"7543:139:27","nodeType":"YulIf","src":"7543:139:27"}]},"name":"checked_mul_t_uint256","nativeSrc":"7279:410:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"7310:1:27","nodeType":"YulTypedName","src":"7310:1:27","type":""},{"name":"y","nativeSrc":"7313:1:27","nodeType":"YulTypedName","src":"7313:1:27","type":""}],"returnVariables":[{"name":"product","nativeSrc":"7319:7:27","nodeType":"YulTypedName","src":"7319:7:27","type":""}],"src":"7279:410:27"},{"body":{"nativeSrc":"7723:152:27","nodeType":"YulBlock","src":"7723:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7740:1:27","nodeType":"YulLiteral","src":"7740:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"7743:77:27","nodeType":"YulLiteral","src":"7743:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"7733:6:27","nodeType":"YulIdentifier","src":"7733:6:27"},"nativeSrc":"7733:88:27","nodeType":"YulFunctionCall","src":"7733:88:27"},"nativeSrc":"7733:88:27","nodeType":"YulExpressionStatement","src":"7733:88:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7837:1:27","nodeType":"YulLiteral","src":"7837:1:27","type":"","value":"4"},{"kind":"number","nativeSrc":"7840:4:27","nodeType":"YulLiteral","src":"7840:4:27","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"7830:6:27","nodeType":"YulIdentifier","src":"7830:6:27"},"nativeSrc":"7830:15:27","nodeType":"YulFunctionCall","src":"7830:15:27"},"nativeSrc":"7830:15:27","nodeType":"YulExpressionStatement","src":"7830:15:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7861:1:27","nodeType":"YulLiteral","src":"7861:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"7864:4:27","nodeType":"YulLiteral","src":"7864:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7854:6:27","nodeType":"YulIdentifier","src":"7854:6:27"},"nativeSrc":"7854:15:27","nodeType":"YulFunctionCall","src":"7854:15:27"},"nativeSrc":"7854:15:27","nodeType":"YulExpressionStatement","src":"7854:15:27"}]},"name":"panic_error_0x12","nativeSrc":"7695:180:27","nodeType":"YulFunctionDefinition","src":"7695:180:27"},{"body":{"nativeSrc":"7923:143:27","nodeType":"YulBlock","src":"7923:143:27","statements":[{"nativeSrc":"7933:25:27","nodeType":"YulAssignment","src":"7933:25:27","value":{"arguments":[{"name":"x","nativeSrc":"7956:1:27","nodeType":"YulIdentifier","src":"7956:1:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7938:17:27","nodeType":"YulIdentifier","src":"7938:17:27"},"nativeSrc":"7938:20:27","nodeType":"YulFunctionCall","src":"7938:20:27"},"variableNames":[{"name":"x","nativeSrc":"7933:1:27","nodeType":"YulIdentifier","src":"7933:1:27"}]},{"nativeSrc":"7967:25:27","nodeType":"YulAssignment","src":"7967:25:27","value":{"arguments":[{"name":"y","nativeSrc":"7990:1:27","nodeType":"YulIdentifier","src":"7990:1:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7972:17:27","nodeType":"YulIdentifier","src":"7972:17:27"},"nativeSrc":"7972:20:27","nodeType":"YulFunctionCall","src":"7972:20:27"},"variableNames":[{"name":"y","nativeSrc":"7967:1:27","nodeType":"YulIdentifier","src":"7967:1:27"}]},{"body":{"nativeSrc":"8014:22:27","nodeType":"YulBlock","src":"8014:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"8016:16:27","nodeType":"YulIdentifier","src":"8016:16:27"},"nativeSrc":"8016:18:27","nodeType":"YulFunctionCall","src":"8016:18:27"},"nativeSrc":"8016:18:27","nodeType":"YulExpressionStatement","src":"8016:18:27"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"8011:1:27","nodeType":"YulIdentifier","src":"8011:1:27"}],"functionName":{"name":"iszero","nativeSrc":"8004:6:27","nodeType":"YulIdentifier","src":"8004:6:27"},"nativeSrc":"8004:9:27","nodeType":"YulFunctionCall","src":"8004:9:27"},"nativeSrc":"8001:35:27","nodeType":"YulIf","src":"8001:35:27"},{"nativeSrc":"8046:14:27","nodeType":"YulAssignment","src":"8046:14:27","value":{"arguments":[{"name":"x","nativeSrc":"8055:1:27","nodeType":"YulIdentifier","src":"8055:1:27"},{"name":"y","nativeSrc":"8058:1:27","nodeType":"YulIdentifier","src":"8058:1:27"}],"functionName":{"name":"div","nativeSrc":"8051:3:27","nodeType":"YulIdentifier","src":"8051:3:27"},"nativeSrc":"8051:9:27","nodeType":"YulFunctionCall","src":"8051:9:27"},"variableNames":[{"name":"r","nativeSrc":"8046:1:27","nodeType":"YulIdentifier","src":"8046:1:27"}]}]},"name":"checked_div_t_uint256","nativeSrc":"7881:185:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"7912:1:27","nodeType":"YulTypedName","src":"7912:1:27","type":""},{"name":"y","nativeSrc":"7915:1:27","nodeType":"YulTypedName","src":"7915:1:27","type":""}],"returnVariables":[{"name":"r","nativeSrc":"7921:1:27","nodeType":"YulTypedName","src":"7921:1:27","type":""}],"src":"7881:185:27"},{"body":{"nativeSrc":"8117:32:27","nodeType":"YulBlock","src":"8117:32:27","statements":[{"nativeSrc":"8127:16:27","nodeType":"YulAssignment","src":"8127:16:27","value":{"name":"value","nativeSrc":"8138:5:27","nodeType":"YulIdentifier","src":"8138:5:27"},"variableNames":[{"name":"cleaned","nativeSrc":"8127:7:27","nodeType":"YulIdentifier","src":"8127:7:27"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"8072:77:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8099:5:27","nodeType":"YulTypedName","src":"8099:5:27","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"8109:7:27","nodeType":"YulTypedName","src":"8109:7:27","type":""}],"src":"8072:77:27"},{"body":{"nativeSrc":"8220:53:27","nodeType":"YulBlock","src":"8220:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8237:3:27","nodeType":"YulIdentifier","src":"8237:3:27"},{"arguments":[{"name":"value","nativeSrc":"8260:5:27","nodeType":"YulIdentifier","src":"8260:5:27"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"8242:17:27","nodeType":"YulIdentifier","src":"8242:17:27"},"nativeSrc":"8242:24:27","nodeType":"YulFunctionCall","src":"8242:24:27"}],"functionName":{"name":"mstore","nativeSrc":"8230:6:27","nodeType":"YulIdentifier","src":"8230:6:27"},"nativeSrc":"8230:37:27","nodeType":"YulFunctionCall","src":"8230:37:27"},"nativeSrc":"8230:37:27","nodeType":"YulExpressionStatement","src":"8230:37:27"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"8155:118:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8208:5:27","nodeType":"YulTypedName","src":"8208:5:27","type":""},{"name":"pos","nativeSrc":"8215:3:27","nodeType":"YulTypedName","src":"8215:3:27","type":""}],"src":"8155:118:27"},{"body":{"nativeSrc":"8344:53:27","nodeType":"YulBlock","src":"8344:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8361:3:27","nodeType":"YulIdentifier","src":"8361:3:27"},{"arguments":[{"name":"value","nativeSrc":"8384:5:27","nodeType":"YulIdentifier","src":"8384:5:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"8366:17:27","nodeType":"YulIdentifier","src":"8366:17:27"},"nativeSrc":"8366:24:27","nodeType":"YulFunctionCall","src":"8366:24:27"}],"functionName":{"name":"mstore","nativeSrc":"8354:6:27","nodeType":"YulIdentifier","src":"8354:6:27"},"nativeSrc":"8354:37:27","nodeType":"YulFunctionCall","src":"8354:37:27"},"nativeSrc":"8354:37:27","nodeType":"YulExpressionStatement","src":"8354:37:27"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"8279:118:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8332:5:27","nodeType":"YulTypedName","src":"8332:5:27","type":""},{"name":"pos","nativeSrc":"8339:3:27","nodeType":"YulTypedName","src":"8339:3:27","type":""}],"src":"8279:118:27"},{"body":{"nativeSrc":"8613:454:27","nodeType":"YulBlock","src":"8613:454:27","statements":[{"nativeSrc":"8623:27:27","nodeType":"YulAssignment","src":"8623:27:27","value":{"arguments":[{"name":"headStart","nativeSrc":"8635:9:27","nodeType":"YulIdentifier","src":"8635:9:27"},{"kind":"number","nativeSrc":"8646:3:27","nodeType":"YulLiteral","src":"8646:3:27","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"8631:3:27","nodeType":"YulIdentifier","src":"8631:3:27"},"nativeSrc":"8631:19:27","nodeType":"YulFunctionCall","src":"8631:19:27"},"variableNames":[{"name":"tail","nativeSrc":"8623:4:27","nodeType":"YulIdentifier","src":"8623:4:27"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"8704:6:27","nodeType":"YulIdentifier","src":"8704:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"8717:9:27","nodeType":"YulIdentifier","src":"8717:9:27"},{"kind":"number","nativeSrc":"8728:1:27","nodeType":"YulLiteral","src":"8728:1:27","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8713:3:27","nodeType":"YulIdentifier","src":"8713:3:27"},"nativeSrc":"8713:17:27","nodeType":"YulFunctionCall","src":"8713:17:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"8660:43:27","nodeType":"YulIdentifier","src":"8660:43:27"},"nativeSrc":"8660:71:27","nodeType":"YulFunctionCall","src":"8660:71:27"},"nativeSrc":"8660:71:27","nodeType":"YulExpressionStatement","src":"8660:71:27"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"8785:6:27","nodeType":"YulIdentifier","src":"8785:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"8798:9:27","nodeType":"YulIdentifier","src":"8798:9:27"},{"kind":"number","nativeSrc":"8809:2:27","nodeType":"YulLiteral","src":"8809:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8794:3:27","nodeType":"YulIdentifier","src":"8794:3:27"},"nativeSrc":"8794:18:27","nodeType":"YulFunctionCall","src":"8794:18:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"8741:43:27","nodeType":"YulIdentifier","src":"8741:43:27"},"nativeSrc":"8741:72:27","nodeType":"YulFunctionCall","src":"8741:72:27"},"nativeSrc":"8741:72:27","nodeType":"YulExpressionStatement","src":"8741:72:27"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"8867:6:27","nodeType":"YulIdentifier","src":"8867:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"8880:9:27","nodeType":"YulIdentifier","src":"8880:9:27"},{"kind":"number","nativeSrc":"8891:2:27","nodeType":"YulLiteral","src":"8891:2:27","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8876:3:27","nodeType":"YulIdentifier","src":"8876:3:27"},"nativeSrc":"8876:18:27","nodeType":"YulFunctionCall","src":"8876:18:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"8823:43:27","nodeType":"YulIdentifier","src":"8823:43:27"},"nativeSrc":"8823:72:27","nodeType":"YulFunctionCall","src":"8823:72:27"},"nativeSrc":"8823:72:27","nodeType":"YulExpressionStatement","src":"8823:72:27"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"8949:6:27","nodeType":"YulIdentifier","src":"8949:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"8962:9:27","nodeType":"YulIdentifier","src":"8962:9:27"},{"kind":"number","nativeSrc":"8973:2:27","nodeType":"YulLiteral","src":"8973:2:27","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8958:3:27","nodeType":"YulIdentifier","src":"8958:3:27"},"nativeSrc":"8958:18:27","nodeType":"YulFunctionCall","src":"8958:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"8905:43:27","nodeType":"YulIdentifier","src":"8905:43:27"},"nativeSrc":"8905:72:27","nodeType":"YulFunctionCall","src":"8905:72:27"},"nativeSrc":"8905:72:27","nodeType":"YulExpressionStatement","src":"8905:72:27"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"9031:6:27","nodeType":"YulIdentifier","src":"9031:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"9044:9:27","nodeType":"YulIdentifier","src":"9044:9:27"},{"kind":"number","nativeSrc":"9055:3:27","nodeType":"YulLiteral","src":"9055:3:27","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"9040:3:27","nodeType":"YulIdentifier","src":"9040:3:27"},"nativeSrc":"9040:19:27","nodeType":"YulFunctionCall","src":"9040:19:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"8987:43:27","nodeType":"YulIdentifier","src":"8987:43:27"},"nativeSrc":"8987:73:27","nodeType":"YulFunctionCall","src":"8987:73:27"},"nativeSrc":"8987:73:27","nodeType":"YulExpressionStatement","src":"8987:73:27"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"8403:664:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8553:9:27","nodeType":"YulTypedName","src":"8553:9:27","type":""},{"name":"value4","nativeSrc":"8565:6:27","nodeType":"YulTypedName","src":"8565:6:27","type":""},{"name":"value3","nativeSrc":"8573:6:27","nodeType":"YulTypedName","src":"8573:6:27","type":""},{"name":"value2","nativeSrc":"8581:6:27","nodeType":"YulTypedName","src":"8581:6:27","type":""},{"name":"value1","nativeSrc":"8589:6:27","nodeType":"YulTypedName","src":"8589:6:27","type":""},{"name":"value0","nativeSrc":"8597:6:27","nodeType":"YulTypedName","src":"8597:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8608:4:27","nodeType":"YulTypedName","src":"8608:4:27","type":""}],"src":"8403:664:27"},{"body":{"nativeSrc":"9169:73:27","nodeType":"YulBlock","src":"9169:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9186:3:27","nodeType":"YulIdentifier","src":"9186:3:27"},{"name":"length","nativeSrc":"9191:6:27","nodeType":"YulIdentifier","src":"9191:6:27"}],"functionName":{"name":"mstore","nativeSrc":"9179:6:27","nodeType":"YulIdentifier","src":"9179:6:27"},"nativeSrc":"9179:19:27","nodeType":"YulFunctionCall","src":"9179:19:27"},"nativeSrc":"9179:19:27","nodeType":"YulExpressionStatement","src":"9179:19:27"},{"nativeSrc":"9207:29:27","nodeType":"YulAssignment","src":"9207:29:27","value":{"arguments":[{"name":"pos","nativeSrc":"9226:3:27","nodeType":"YulIdentifier","src":"9226:3:27"},{"kind":"number","nativeSrc":"9231:4:27","nodeType":"YulLiteral","src":"9231:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9222:3:27","nodeType":"YulIdentifier","src":"9222:3:27"},"nativeSrc":"9222:14:27","nodeType":"YulFunctionCall","src":"9222:14:27"},"variableNames":[{"name":"updated_pos","nativeSrc":"9207:11:27","nodeType":"YulIdentifier","src":"9207:11:27"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"9073:169:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"9141:3:27","nodeType":"YulTypedName","src":"9141:3:27","type":""},{"name":"length","nativeSrc":"9146:6:27","nodeType":"YulTypedName","src":"9146:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"9157:11:27","nodeType":"YulTypedName","src":"9157:11:27","type":""}],"src":"9073:169:27"},{"body":{"nativeSrc":"9310:184:27","nodeType":"YulBlock","src":"9310:184:27","statements":[{"nativeSrc":"9320:10:27","nodeType":"YulVariableDeclaration","src":"9320:10:27","value":{"kind":"number","nativeSrc":"9329:1:27","nodeType":"YulLiteral","src":"9329:1:27","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"9324:1:27","nodeType":"YulTypedName","src":"9324:1:27","type":""}]},{"body":{"nativeSrc":"9389:63:27","nodeType":"YulBlock","src":"9389:63:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"9414:3:27","nodeType":"YulIdentifier","src":"9414:3:27"},{"name":"i","nativeSrc":"9419:1:27","nodeType":"YulIdentifier","src":"9419:1:27"}],"functionName":{"name":"add","nativeSrc":"9410:3:27","nodeType":"YulIdentifier","src":"9410:3:27"},"nativeSrc":"9410:11:27","nodeType":"YulFunctionCall","src":"9410:11:27"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"9433:3:27","nodeType":"YulIdentifier","src":"9433:3:27"},{"name":"i","nativeSrc":"9438:1:27","nodeType":"YulIdentifier","src":"9438:1:27"}],"functionName":{"name":"add","nativeSrc":"9429:3:27","nodeType":"YulIdentifier","src":"9429:3:27"},"nativeSrc":"9429:11:27","nodeType":"YulFunctionCall","src":"9429:11:27"}],"functionName":{"name":"mload","nativeSrc":"9423:5:27","nodeType":"YulIdentifier","src":"9423:5:27"},"nativeSrc":"9423:18:27","nodeType":"YulFunctionCall","src":"9423:18:27"}],"functionName":{"name":"mstore","nativeSrc":"9403:6:27","nodeType":"YulIdentifier","src":"9403:6:27"},"nativeSrc":"9403:39:27","nodeType":"YulFunctionCall","src":"9403:39:27"},"nativeSrc":"9403:39:27","nodeType":"YulExpressionStatement","src":"9403:39:27"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"9350:1:27","nodeType":"YulIdentifier","src":"9350:1:27"},{"name":"length","nativeSrc":"9353:6:27","nodeType":"YulIdentifier","src":"9353:6:27"}],"functionName":{"name":"lt","nativeSrc":"9347:2:27","nodeType":"YulIdentifier","src":"9347:2:27"},"nativeSrc":"9347:13:27","nodeType":"YulFunctionCall","src":"9347:13:27"},"nativeSrc":"9339:113:27","nodeType":"YulForLoop","post":{"nativeSrc":"9361:19:27","nodeType":"YulBlock","src":"9361:19:27","statements":[{"nativeSrc":"9363:15:27","nodeType":"YulAssignment","src":"9363:15:27","value":{"arguments":[{"name":"i","nativeSrc":"9372:1:27","nodeType":"YulIdentifier","src":"9372:1:27"},{"kind":"number","nativeSrc":"9375:2:27","nodeType":"YulLiteral","src":"9375:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9368:3:27","nodeType":"YulIdentifier","src":"9368:3:27"},"nativeSrc":"9368:10:27","nodeType":"YulFunctionCall","src":"9368:10:27"},"variableNames":[{"name":"i","nativeSrc":"9363:1:27","nodeType":"YulIdentifier","src":"9363:1:27"}]}]},"pre":{"nativeSrc":"9343:3:27","nodeType":"YulBlock","src":"9343:3:27","statements":[]},"src":"9339:113:27"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"9472:3:27","nodeType":"YulIdentifier","src":"9472:3:27"},{"name":"length","nativeSrc":"9477:6:27","nodeType":"YulIdentifier","src":"9477:6:27"}],"functionName":{"name":"add","nativeSrc":"9468:3:27","nodeType":"YulIdentifier","src":"9468:3:27"},"nativeSrc":"9468:16:27","nodeType":"YulFunctionCall","src":"9468:16:27"},{"kind":"number","nativeSrc":"9486:1:27","nodeType":"YulLiteral","src":"9486:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"9461:6:27","nodeType":"YulIdentifier","src":"9461:6:27"},"nativeSrc":"9461:27:27","nodeType":"YulFunctionCall","src":"9461:27:27"},"nativeSrc":"9461:27:27","nodeType":"YulExpressionStatement","src":"9461:27:27"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"9248:246:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"9292:3:27","nodeType":"YulTypedName","src":"9292:3:27","type":""},{"name":"dst","nativeSrc":"9297:3:27","nodeType":"YulTypedName","src":"9297:3:27","type":""},{"name":"length","nativeSrc":"9302:6:27","nodeType":"YulTypedName","src":"9302:6:27","type":""}],"src":"9248:246:27"},{"body":{"nativeSrc":"9548:54:27","nodeType":"YulBlock","src":"9548:54:27","statements":[{"nativeSrc":"9558:38:27","nodeType":"YulAssignment","src":"9558:38:27","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"9576:5:27","nodeType":"YulIdentifier","src":"9576:5:27"},{"kind":"number","nativeSrc":"9583:2:27","nodeType":"YulLiteral","src":"9583:2:27","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"9572:3:27","nodeType":"YulIdentifier","src":"9572:3:27"},"nativeSrc":"9572:14:27","nodeType":"YulFunctionCall","src":"9572:14:27"},{"arguments":[{"kind":"number","nativeSrc":"9592:2:27","nodeType":"YulLiteral","src":"9592:2:27","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"9588:3:27","nodeType":"YulIdentifier","src":"9588:3:27"},"nativeSrc":"9588:7:27","nodeType":"YulFunctionCall","src":"9588:7:27"}],"functionName":{"name":"and","nativeSrc":"9568:3:27","nodeType":"YulIdentifier","src":"9568:3:27"},"nativeSrc":"9568:28:27","nodeType":"YulFunctionCall","src":"9568:28:27"},"variableNames":[{"name":"result","nativeSrc":"9558:6:27","nodeType":"YulIdentifier","src":"9558:6:27"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"9500:102:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9531:5:27","nodeType":"YulTypedName","src":"9531:5:27","type":""}],"returnVariables":[{"name":"result","nativeSrc":"9541:6:27","nodeType":"YulTypedName","src":"9541:6:27","type":""}],"src":"9500:102:27"},{"body":{"nativeSrc":"9700:285:27","nodeType":"YulBlock","src":"9700:285:27","statements":[{"nativeSrc":"9710:53:27","nodeType":"YulVariableDeclaration","src":"9710:53:27","value":{"arguments":[{"name":"value","nativeSrc":"9757:5:27","nodeType":"YulIdentifier","src":"9757:5:27"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"9724:32:27","nodeType":"YulIdentifier","src":"9724:32:27"},"nativeSrc":"9724:39:27","nodeType":"YulFunctionCall","src":"9724:39:27"},"variables":[{"name":"length","nativeSrc":"9714:6:27","nodeType":"YulTypedName","src":"9714:6:27","type":""}]},{"nativeSrc":"9772:78:27","nodeType":"YulAssignment","src":"9772:78:27","value":{"arguments":[{"name":"pos","nativeSrc":"9838:3:27","nodeType":"YulIdentifier","src":"9838:3:27"},{"name":"length","nativeSrc":"9843:6:27","nodeType":"YulIdentifier","src":"9843:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"9779:58:27","nodeType":"YulIdentifier","src":"9779:58:27"},"nativeSrc":"9779:71:27","nodeType":"YulFunctionCall","src":"9779:71:27"},"variableNames":[{"name":"pos","nativeSrc":"9772:3:27","nodeType":"YulIdentifier","src":"9772:3:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"9898:5:27","nodeType":"YulIdentifier","src":"9898:5:27"},{"kind":"number","nativeSrc":"9905:4:27","nodeType":"YulLiteral","src":"9905:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9894:3:27","nodeType":"YulIdentifier","src":"9894:3:27"},"nativeSrc":"9894:16:27","nodeType":"YulFunctionCall","src":"9894:16:27"},{"name":"pos","nativeSrc":"9912:3:27","nodeType":"YulIdentifier","src":"9912:3:27"},{"name":"length","nativeSrc":"9917:6:27","nodeType":"YulIdentifier","src":"9917:6:27"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"9859:34:27","nodeType":"YulIdentifier","src":"9859:34:27"},"nativeSrc":"9859:65:27","nodeType":"YulFunctionCall","src":"9859:65:27"},"nativeSrc":"9859:65:27","nodeType":"YulExpressionStatement","src":"9859:65:27"},{"nativeSrc":"9933:46:27","nodeType":"YulAssignment","src":"9933:46:27","value":{"arguments":[{"name":"pos","nativeSrc":"9944:3:27","nodeType":"YulIdentifier","src":"9944:3:27"},{"arguments":[{"name":"length","nativeSrc":"9971:6:27","nodeType":"YulIdentifier","src":"9971:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"9949:21:27","nodeType":"YulIdentifier","src":"9949:21:27"},"nativeSrc":"9949:29:27","nodeType":"YulFunctionCall","src":"9949:29:27"}],"functionName":{"name":"add","nativeSrc":"9940:3:27","nodeType":"YulIdentifier","src":"9940:3:27"},"nativeSrc":"9940:39:27","nodeType":"YulFunctionCall","src":"9940:39:27"},"variableNames":[{"name":"end","nativeSrc":"9933:3:27","nodeType":"YulIdentifier","src":"9933:3:27"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"9608:377:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9681:5:27","nodeType":"YulTypedName","src":"9681:5:27","type":""},{"name":"pos","nativeSrc":"9688:3:27","nodeType":"YulTypedName","src":"9688:3:27","type":""}],"returnVariables":[{"name":"end","nativeSrc":"9696:3:27","nodeType":"YulTypedName","src":"9696:3:27","type":""}],"src":"9608:377:27"},{"body":{"nativeSrc":"10109:195:27","nodeType":"YulBlock","src":"10109:195:27","statements":[{"nativeSrc":"10119:26:27","nodeType":"YulAssignment","src":"10119:26:27","value":{"arguments":[{"name":"headStart","nativeSrc":"10131:9:27","nodeType":"YulIdentifier","src":"10131:9:27"},{"kind":"number","nativeSrc":"10142:2:27","nodeType":"YulLiteral","src":"10142:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10127:3:27","nodeType":"YulIdentifier","src":"10127:3:27"},"nativeSrc":"10127:18:27","nodeType":"YulFunctionCall","src":"10127:18:27"},"variableNames":[{"name":"tail","nativeSrc":"10119:4:27","nodeType":"YulIdentifier","src":"10119:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10166:9:27","nodeType":"YulIdentifier","src":"10166:9:27"},{"kind":"number","nativeSrc":"10177:1:27","nodeType":"YulLiteral","src":"10177:1:27","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10162:3:27","nodeType":"YulIdentifier","src":"10162:3:27"},"nativeSrc":"10162:17:27","nodeType":"YulFunctionCall","src":"10162:17:27"},{"arguments":[{"name":"tail","nativeSrc":"10185:4:27","nodeType":"YulIdentifier","src":"10185:4:27"},{"name":"headStart","nativeSrc":"10191:9:27","nodeType":"YulIdentifier","src":"10191:9:27"}],"functionName":{"name":"sub","nativeSrc":"10181:3:27","nodeType":"YulIdentifier","src":"10181:3:27"},"nativeSrc":"10181:20:27","nodeType":"YulFunctionCall","src":"10181:20:27"}],"functionName":{"name":"mstore","nativeSrc":"10155:6:27","nodeType":"YulIdentifier","src":"10155:6:27"},"nativeSrc":"10155:47:27","nodeType":"YulFunctionCall","src":"10155:47:27"},"nativeSrc":"10155:47:27","nodeType":"YulExpressionStatement","src":"10155:47:27"},{"nativeSrc":"10211:86:27","nodeType":"YulAssignment","src":"10211:86:27","value":{"arguments":[{"name":"value0","nativeSrc":"10283:6:27","nodeType":"YulIdentifier","src":"10283:6:27"},{"name":"tail","nativeSrc":"10292:4:27","nodeType":"YulIdentifier","src":"10292:4:27"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"10219:63:27","nodeType":"YulIdentifier","src":"10219:63:27"},"nativeSrc":"10219:78:27","nodeType":"YulFunctionCall","src":"10219:78:27"},"variableNames":[{"name":"tail","nativeSrc":"10211:4:27","nodeType":"YulIdentifier","src":"10211:4:27"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"9991:313:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10081:9:27","nodeType":"YulTypedName","src":"10081:9:27","type":""},{"name":"value0","nativeSrc":"10093:6:27","nodeType":"YulTypedName","src":"10093:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10104:4:27","nodeType":"YulTypedName","src":"10104:4:27","type":""}],"src":"9991:313:27"},{"body":{"nativeSrc":"10368:40:27","nodeType":"YulBlock","src":"10368:40:27","statements":[{"nativeSrc":"10379:22:27","nodeType":"YulAssignment","src":"10379:22:27","value":{"arguments":[{"name":"value","nativeSrc":"10395:5:27","nodeType":"YulIdentifier","src":"10395:5:27"}],"functionName":{"name":"mload","nativeSrc":"10389:5:27","nodeType":"YulIdentifier","src":"10389:5:27"},"nativeSrc":"10389:12:27","nodeType":"YulFunctionCall","src":"10389:12:27"},"variableNames":[{"name":"length","nativeSrc":"10379:6:27","nodeType":"YulIdentifier","src":"10379:6:27"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"10310:98:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10351:5:27","nodeType":"YulTypedName","src":"10351:5:27","type":""}],"returnVariables":[{"name":"length","nativeSrc":"10361:6:27","nodeType":"YulTypedName","src":"10361:6:27","type":""}],"src":"10310:98:27"},{"body":{"nativeSrc":"10470:60:27","nodeType":"YulBlock","src":"10470:60:27","statements":[{"nativeSrc":"10480:11:27","nodeType":"YulAssignment","src":"10480:11:27","value":{"name":"ptr","nativeSrc":"10488:3:27","nodeType":"YulIdentifier","src":"10488:3:27"},"variableNames":[{"name":"data","nativeSrc":"10480:4:27","nodeType":"YulIdentifier","src":"10480:4:27"}]},{"nativeSrc":"10501:22:27","nodeType":"YulAssignment","src":"10501:22:27","value":{"arguments":[{"name":"ptr","nativeSrc":"10513:3:27","nodeType":"YulIdentifier","src":"10513:3:27"},{"kind":"number","nativeSrc":"10518:4:27","nodeType":"YulLiteral","src":"10518:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10509:3:27","nodeType":"YulIdentifier","src":"10509:3:27"},"nativeSrc":"10509:14:27","nodeType":"YulFunctionCall","src":"10509:14:27"},"variableNames":[{"name":"data","nativeSrc":"10501:4:27","nodeType":"YulIdentifier","src":"10501:4:27"}]}]},"name":"array_dataslot_t_bytes_memory_ptr","nativeSrc":"10414:116:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"10457:3:27","nodeType":"YulTypedName","src":"10457:3:27","type":""}],"returnVariables":[{"name":"data","nativeSrc":"10465:4:27","nodeType":"YulTypedName","src":"10465:4:27","type":""}],"src":"10414:116:27"},{"body":{"nativeSrc":"10591:99:27","nodeType":"YulBlock","src":"10591:99:27","statements":[{"nativeSrc":"10602:42:27","nodeType":"YulVariableDeclaration","src":"10602:42:27","value":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"10639:3:27","nodeType":"YulIdentifier","src":"10639:3:27"}],"functionName":{"name":"mload","nativeSrc":"10633:5:27","nodeType":"YulIdentifier","src":"10633:5:27"},"nativeSrc":"10633:10:27","nodeType":"YulFunctionCall","src":"10633:10:27"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"10615:17:27","nodeType":"YulIdentifier","src":"10615:17:27"},"nativeSrc":"10615:29:27","nodeType":"YulFunctionCall","src":"10615:29:27"},"variables":[{"name":"value","nativeSrc":"10606:5:27","nodeType":"YulTypedName","src":"10606:5:27","type":""}]},{"nativeSrc":"10654:29:27","nodeType":"YulAssignment","src":"10654:29:27","value":{"name":"value","nativeSrc":"10678:5:27","nodeType":"YulIdentifier","src":"10678:5:27"},"variableNames":[{"name":"returnValue","nativeSrc":"10654:11:27","nodeType":"YulIdentifier","src":"10654:11:27"}]}]},"name":"read_from_memoryt_bytes32","nativeSrc":"10536:154:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"10571:3:27","nodeType":"YulTypedName","src":"10571:3:27","type":""}],"returnVariables":[{"name":"returnValue","nativeSrc":"10579:11:27","nodeType":"YulTypedName","src":"10579:11:27","type":""}],"src":"10536:154:27"},{"body":{"nativeSrc":"10786:504:27","nodeType":"YulBlock","src":"10786:504:27","statements":[{"nativeSrc":"10797:52:27","nodeType":"YulVariableDeclaration","src":"10797:52:27","value":{"arguments":[{"name":"array","nativeSrc":"10843:5:27","nodeType":"YulIdentifier","src":"10843:5:27"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"10811:31:27","nodeType":"YulIdentifier","src":"10811:31:27"},"nativeSrc":"10811:38:27","nodeType":"YulFunctionCall","src":"10811:38:27"},"variables":[{"name":"length","nativeSrc":"10801:6:27","nodeType":"YulTypedName","src":"10801:6:27","type":""}]},{"nativeSrc":"10858:21:27","nodeType":"YulVariableDeclaration","src":"10858:21:27","value":{"name":"array","nativeSrc":"10874:5:27","nodeType":"YulIdentifier","src":"10874:5:27"},"variables":[{"name":"dataArea","nativeSrc":"10862:8:27","nodeType":"YulTypedName","src":"10862:8:27","type":""}]},{"nativeSrc":"10889:52:27","nodeType":"YulAssignment","src":"10889:52:27","value":{"arguments":[{"name":"array","nativeSrc":"10935:5:27","nodeType":"YulIdentifier","src":"10935:5:27"}],"functionName":{"name":"array_dataslot_t_bytes_memory_ptr","nativeSrc":"10901:33:27","nodeType":"YulIdentifier","src":"10901:33:27"},"nativeSrc":"10901:40:27","nodeType":"YulFunctionCall","src":"10901:40:27"},"variableNames":[{"name":"dataArea","nativeSrc":"10889:8:27","nodeType":"YulIdentifier","src":"10889:8:27"}]},{"nativeSrc":"10951:44:27","nodeType":"YulAssignment","src":"10951:44:27","value":{"arguments":[{"name":"dataArea","nativeSrc":"10986:8:27","nodeType":"YulIdentifier","src":"10986:8:27"}],"functionName":{"name":"read_from_memoryt_bytes32","nativeSrc":"10960:25:27","nodeType":"YulIdentifier","src":"10960:25:27"},"nativeSrc":"10960:35:27","nodeType":"YulFunctionCall","src":"10960:35:27"},"variableNames":[{"name":"value","nativeSrc":"10951:5:27","nodeType":"YulIdentifier","src":"10951:5:27"}]},{"body":{"nativeSrc":"11023:260:27","nodeType":"YulBlock","src":"11023:260:27","statements":[{"nativeSrc":"11037:236:27","nodeType":"YulAssignment","src":"11037:236:27","value":{"arguments":[{"name":"value","nativeSrc":"11067:5:27","nodeType":"YulIdentifier","src":"11067:5:27"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"11134:1:27","nodeType":"YulLiteral","src":"11134:1:27","type":"","value":"8"},{"arguments":[{"kind":"number","nativeSrc":"11141:2:27","nodeType":"YulLiteral","src":"11141:2:27","type":"","value":"32"},{"name":"length","nativeSrc":"11145:6:27","nodeType":"YulIdentifier","src":"11145:6:27"}],"functionName":{"name":"sub","nativeSrc":"11137:3:27","nodeType":"YulIdentifier","src":"11137:3:27"},"nativeSrc":"11137:15:27","nodeType":"YulFunctionCall","src":"11137:15:27"}],"functionName":{"name":"mul","nativeSrc":"11130:3:27","nodeType":"YulIdentifier","src":"11130:3:27"},"nativeSrc":"11130:23:27","nodeType":"YulFunctionCall","src":"11130:23:27"},{"kind":"number","nativeSrc":"11175:66:27","nodeType":"YulLiteral","src":"11175:66:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"11090:18:27","nodeType":"YulIdentifier","src":"11090:18:27"},"nativeSrc":"11090:169:27","nodeType":"YulFunctionCall","src":"11090:169:27"}],"functionName":{"name":"and","nativeSrc":"11046:3:27","nodeType":"YulIdentifier","src":"11046:3:27"},"nativeSrc":"11046:227:27","nodeType":"YulFunctionCall","src":"11046:227:27"},"variableNames":[{"name":"value","nativeSrc":"11037:5:27","nodeType":"YulIdentifier","src":"11037:5:27"}]}]},"condition":{"arguments":[{"name":"length","nativeSrc":"11011:6:27","nodeType":"YulIdentifier","src":"11011:6:27"},{"kind":"number","nativeSrc":"11019:2:27","nodeType":"YulLiteral","src":"11019:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"11008:2:27","nodeType":"YulIdentifier","src":"11008:2:27"},"nativeSrc":"11008:14:27","nodeType":"YulFunctionCall","src":"11008:14:27"},"nativeSrc":"11005:278:27","nodeType":"YulIf","src":"11005:278:27"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nativeSrc":"10696:594:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"10770:5:27","nodeType":"YulTypedName","src":"10770:5:27","type":""}],"returnVariables":[{"name":"value","nativeSrc":"10780:5:27","nodeType":"YulTypedName","src":"10780:5:27","type":""}],"src":"10696:594:27"},{"body":{"nativeSrc":"11402:71:27","nodeType":"YulBlock","src":"11402:71:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"11424:6:27","nodeType":"YulIdentifier","src":"11424:6:27"},{"kind":"number","nativeSrc":"11432:1:27","nodeType":"YulLiteral","src":"11432:1:27","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11420:3:27","nodeType":"YulIdentifier","src":"11420:3:27"},"nativeSrc":"11420:14:27","nodeType":"YulFunctionCall","src":"11420:14:27"},{"hexValue":"4172617261436f696e2074726164652069732064697361626c6564","kind":"string","nativeSrc":"11436:29:27","nodeType":"YulLiteral","src":"11436:29:27","type":"","value":"AraraCoin trade is disabled"}],"functionName":{"name":"mstore","nativeSrc":"11413:6:27","nodeType":"YulIdentifier","src":"11413:6:27"},"nativeSrc":"11413:53:27","nodeType":"YulFunctionCall","src":"11413:53:27"},"nativeSrc":"11413:53:27","nodeType":"YulExpressionStatement","src":"11413:53:27"}]},"name":"store_literal_in_memory_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7","nativeSrc":"11296:177:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"11394:6:27","nodeType":"YulTypedName","src":"11394:6:27","type":""}],"src":"11296:177:27"},{"body":{"nativeSrc":"11625:220:27","nodeType":"YulBlock","src":"11625:220:27","statements":[{"nativeSrc":"11635:74:27","nodeType":"YulAssignment","src":"11635:74:27","value":{"arguments":[{"name":"pos","nativeSrc":"11701:3:27","nodeType":"YulIdentifier","src":"11701:3:27"},{"kind":"number","nativeSrc":"11706:2:27","nodeType":"YulLiteral","src":"11706:2:27","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"11642:58:27","nodeType":"YulIdentifier","src":"11642:58:27"},"nativeSrc":"11642:67:27","nodeType":"YulFunctionCall","src":"11642:67:27"},"variableNames":[{"name":"pos","nativeSrc":"11635:3:27","nodeType":"YulIdentifier","src":"11635:3:27"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"11807:3:27","nodeType":"YulIdentifier","src":"11807:3:27"}],"functionName":{"name":"store_literal_in_memory_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7","nativeSrc":"11718:88:27","nodeType":"YulIdentifier","src":"11718:88:27"},"nativeSrc":"11718:93:27","nodeType":"YulFunctionCall","src":"11718:93:27"},"nativeSrc":"11718:93:27","nodeType":"YulExpressionStatement","src":"11718:93:27"},{"nativeSrc":"11820:19:27","nodeType":"YulAssignment","src":"11820:19:27","value":{"arguments":[{"name":"pos","nativeSrc":"11831:3:27","nodeType":"YulIdentifier","src":"11831:3:27"},{"kind":"number","nativeSrc":"11836:2:27","nodeType":"YulLiteral","src":"11836:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11827:3:27","nodeType":"YulIdentifier","src":"11827:3:27"},"nativeSrc":"11827:12:27","nodeType":"YulFunctionCall","src":"11827:12:27"},"variableNames":[{"name":"end","nativeSrc":"11820:3:27","nodeType":"YulIdentifier","src":"11820:3:27"}]}]},"name":"abi_encode_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7_to_t_string_memory_ptr_fromStack","nativeSrc":"11479:366:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"11613:3:27","nodeType":"YulTypedName","src":"11613:3:27","type":""}],"returnVariables":[{"name":"end","nativeSrc":"11621:3:27","nodeType":"YulTypedName","src":"11621:3:27","type":""}],"src":"11479:366:27"},{"body":{"nativeSrc":"12022:248:27","nodeType":"YulBlock","src":"12022:248:27","statements":[{"nativeSrc":"12032:26:27","nodeType":"YulAssignment","src":"12032:26:27","value":{"arguments":[{"name":"headStart","nativeSrc":"12044:9:27","nodeType":"YulIdentifier","src":"12044:9:27"},{"kind":"number","nativeSrc":"12055:2:27","nodeType":"YulLiteral","src":"12055:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12040:3:27","nodeType":"YulIdentifier","src":"12040:3:27"},"nativeSrc":"12040:18:27","nodeType":"YulFunctionCall","src":"12040:18:27"},"variableNames":[{"name":"tail","nativeSrc":"12032:4:27","nodeType":"YulIdentifier","src":"12032:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12079:9:27","nodeType":"YulIdentifier","src":"12079:9:27"},{"kind":"number","nativeSrc":"12090:1:27","nodeType":"YulLiteral","src":"12090:1:27","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12075:3:27","nodeType":"YulIdentifier","src":"12075:3:27"},"nativeSrc":"12075:17:27","nodeType":"YulFunctionCall","src":"12075:17:27"},{"arguments":[{"name":"tail","nativeSrc":"12098:4:27","nodeType":"YulIdentifier","src":"12098:4:27"},{"name":"headStart","nativeSrc":"12104:9:27","nodeType":"YulIdentifier","src":"12104:9:27"}],"functionName":{"name":"sub","nativeSrc":"12094:3:27","nodeType":"YulIdentifier","src":"12094:3:27"},"nativeSrc":"12094:20:27","nodeType":"YulFunctionCall","src":"12094:20:27"}],"functionName":{"name":"mstore","nativeSrc":"12068:6:27","nodeType":"YulIdentifier","src":"12068:6:27"},"nativeSrc":"12068:47:27","nodeType":"YulFunctionCall","src":"12068:47:27"},"nativeSrc":"12068:47:27","nodeType":"YulExpressionStatement","src":"12068:47:27"},{"nativeSrc":"12124:139:27","nodeType":"YulAssignment","src":"12124:139:27","value":{"arguments":[{"name":"tail","nativeSrc":"12258:4:27","nodeType":"YulIdentifier","src":"12258:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7_to_t_string_memory_ptr_fromStack","nativeSrc":"12132:124:27","nodeType":"YulIdentifier","src":"12132:124:27"},"nativeSrc":"12132:131:27","nodeType":"YulFunctionCall","src":"12132:131:27"},"variableNames":[{"name":"tail","nativeSrc":"12124:4:27","nodeType":"YulIdentifier","src":"12124:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"11851:419:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12002:9:27","nodeType":"YulTypedName","src":"12002:9:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12017:4:27","nodeType":"YulTypedName","src":"12017:4:27","type":""}],"src":"11851:419:27"},{"body":{"nativeSrc":"12430:288:27","nodeType":"YulBlock","src":"12430:288:27","statements":[{"nativeSrc":"12440:26:27","nodeType":"YulAssignment","src":"12440:26:27","value":{"arguments":[{"name":"headStart","nativeSrc":"12452:9:27","nodeType":"YulIdentifier","src":"12452:9:27"},{"kind":"number","nativeSrc":"12463:2:27","nodeType":"YulLiteral","src":"12463:2:27","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12448:3:27","nodeType":"YulIdentifier","src":"12448:3:27"},"nativeSrc":"12448:18:27","nodeType":"YulFunctionCall","src":"12448:18:27"},"variableNames":[{"name":"tail","nativeSrc":"12440:4:27","nodeType":"YulIdentifier","src":"12440:4:27"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12520:6:27","nodeType":"YulIdentifier","src":"12520:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"12533:9:27","nodeType":"YulIdentifier","src":"12533:9:27"},{"kind":"number","nativeSrc":"12544:1:27","nodeType":"YulLiteral","src":"12544:1:27","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12529:3:27","nodeType":"YulIdentifier","src":"12529:3:27"},"nativeSrc":"12529:17:27","nodeType":"YulFunctionCall","src":"12529:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12476:43:27","nodeType":"YulIdentifier","src":"12476:43:27"},"nativeSrc":"12476:71:27","nodeType":"YulFunctionCall","src":"12476:71:27"},"nativeSrc":"12476:71:27","nodeType":"YulExpressionStatement","src":"12476:71:27"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"12601:6:27","nodeType":"YulIdentifier","src":"12601:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"12614:9:27","nodeType":"YulIdentifier","src":"12614:9:27"},{"kind":"number","nativeSrc":"12625:2:27","nodeType":"YulLiteral","src":"12625:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12610:3:27","nodeType":"YulIdentifier","src":"12610:3:27"},"nativeSrc":"12610:18:27","nodeType":"YulFunctionCall","src":"12610:18:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12557:43:27","nodeType":"YulIdentifier","src":"12557:43:27"},"nativeSrc":"12557:72:27","nodeType":"YulFunctionCall","src":"12557:72:27"},"nativeSrc":"12557:72:27","nodeType":"YulExpressionStatement","src":"12557:72:27"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"12683:6:27","nodeType":"YulIdentifier","src":"12683:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"12696:9:27","nodeType":"YulIdentifier","src":"12696:9:27"},{"kind":"number","nativeSrc":"12707:2:27","nodeType":"YulLiteral","src":"12707:2:27","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12692:3:27","nodeType":"YulIdentifier","src":"12692:3:27"},"nativeSrc":"12692:18:27","nodeType":"YulFunctionCall","src":"12692:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12639:43:27","nodeType":"YulIdentifier","src":"12639:43:27"},"nativeSrc":"12639:72:27","nodeType":"YulFunctionCall","src":"12639:72:27"},"nativeSrc":"12639:72:27","nodeType":"YulExpressionStatement","src":"12639:72:27"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"12276:442:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12386:9:27","nodeType":"YulTypedName","src":"12386:9:27","type":""},{"name":"value2","nativeSrc":"12398:6:27","nodeType":"YulTypedName","src":"12398:6:27","type":""},{"name":"value1","nativeSrc":"12406:6:27","nodeType":"YulTypedName","src":"12406:6:27","type":""},{"name":"value0","nativeSrc":"12414:6:27","nodeType":"YulTypedName","src":"12414:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12425:4:27","nodeType":"YulTypedName","src":"12425:4:27","type":""}],"src":"12276:442:27"},{"body":{"nativeSrc":"12767:79:27","nodeType":"YulBlock","src":"12767:79:27","statements":[{"body":{"nativeSrc":"12824:16:27","nodeType":"YulBlock","src":"12824:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12833:1:27","nodeType":"YulLiteral","src":"12833:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"12836:1:27","nodeType":"YulLiteral","src":"12836:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"12826:6:27","nodeType":"YulIdentifier","src":"12826:6:27"},"nativeSrc":"12826:12:27","nodeType":"YulFunctionCall","src":"12826:12:27"},"nativeSrc":"12826:12:27","nodeType":"YulExpressionStatement","src":"12826:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"12790:5:27","nodeType":"YulIdentifier","src":"12790:5:27"},{"arguments":[{"name":"value","nativeSrc":"12815:5:27","nodeType":"YulIdentifier","src":"12815:5:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"12797:17:27","nodeType":"YulIdentifier","src":"12797:17:27"},"nativeSrc":"12797:24:27","nodeType":"YulFunctionCall","src":"12797:24:27"}],"functionName":{"name":"eq","nativeSrc":"12787:2:27","nodeType":"YulIdentifier","src":"12787:2:27"},"nativeSrc":"12787:35:27","nodeType":"YulFunctionCall","src":"12787:35:27"}],"functionName":{"name":"iszero","nativeSrc":"12780:6:27","nodeType":"YulIdentifier","src":"12780:6:27"},"nativeSrc":"12780:43:27","nodeType":"YulFunctionCall","src":"12780:43:27"},"nativeSrc":"12777:63:27","nodeType":"YulIf","src":"12777:63:27"}]},"name":"validator_revert_t_uint256","nativeSrc":"12724:122:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12760:5:27","nodeType":"YulTypedName","src":"12760:5:27","type":""}],"src":"12724:122:27"},{"body":{"nativeSrc":"12915:80:27","nodeType":"YulBlock","src":"12915:80:27","statements":[{"nativeSrc":"12925:22:27","nodeType":"YulAssignment","src":"12925:22:27","value":{"arguments":[{"name":"offset","nativeSrc":"12940:6:27","nodeType":"YulIdentifier","src":"12940:6:27"}],"functionName":{"name":"mload","nativeSrc":"12934:5:27","nodeType":"YulIdentifier","src":"12934:5:27"},"nativeSrc":"12934:13:27","nodeType":"YulFunctionCall","src":"12934:13:27"},"variableNames":[{"name":"value","nativeSrc":"12925:5:27","nodeType":"YulIdentifier","src":"12925:5:27"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"12983:5:27","nodeType":"YulIdentifier","src":"12983:5:27"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"12956:26:27","nodeType":"YulIdentifier","src":"12956:26:27"},"nativeSrc":"12956:33:27","nodeType":"YulFunctionCall","src":"12956:33:27"},"nativeSrc":"12956:33:27","nodeType":"YulExpressionStatement","src":"12956:33:27"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"12852:143:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"12893:6:27","nodeType":"YulTypedName","src":"12893:6:27","type":""},{"name":"end","nativeSrc":"12901:3:27","nodeType":"YulTypedName","src":"12901:3:27","type":""}],"returnVariables":[{"name":"value","nativeSrc":"12909:5:27","nodeType":"YulTypedName","src":"12909:5:27","type":""}],"src":"12852:143:27"},{"body":{"nativeSrc":"13078:274:27","nodeType":"YulBlock","src":"13078:274:27","statements":[{"body":{"nativeSrc":"13124:83:27","nodeType":"YulBlock","src":"13124:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"13126:77:27","nodeType":"YulIdentifier","src":"13126:77:27"},"nativeSrc":"13126:79:27","nodeType":"YulFunctionCall","src":"13126:79:27"},"nativeSrc":"13126:79:27","nodeType":"YulExpressionStatement","src":"13126:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"13099:7:27","nodeType":"YulIdentifier","src":"13099:7:27"},{"name":"headStart","nativeSrc":"13108:9:27","nodeType":"YulIdentifier","src":"13108:9:27"}],"functionName":{"name":"sub","nativeSrc":"13095:3:27","nodeType":"YulIdentifier","src":"13095:3:27"},"nativeSrc":"13095:23:27","nodeType":"YulFunctionCall","src":"13095:23:27"},{"kind":"number","nativeSrc":"13120:2:27","nodeType":"YulLiteral","src":"13120:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"13091:3:27","nodeType":"YulIdentifier","src":"13091:3:27"},"nativeSrc":"13091:32:27","nodeType":"YulFunctionCall","src":"13091:32:27"},"nativeSrc":"13088:119:27","nodeType":"YulIf","src":"13088:119:27"},{"nativeSrc":"13217:128:27","nodeType":"YulBlock","src":"13217:128:27","statements":[{"nativeSrc":"13232:15:27","nodeType":"YulVariableDeclaration","src":"13232:15:27","value":{"kind":"number","nativeSrc":"13246:1:27","nodeType":"YulLiteral","src":"13246:1:27","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"13236:6:27","nodeType":"YulTypedName","src":"13236:6:27","type":""}]},{"nativeSrc":"13261:74:27","nodeType":"YulAssignment","src":"13261:74:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13307:9:27","nodeType":"YulIdentifier","src":"13307:9:27"},{"name":"offset","nativeSrc":"13318:6:27","nodeType":"YulIdentifier","src":"13318:6:27"}],"functionName":{"name":"add","nativeSrc":"13303:3:27","nodeType":"YulIdentifier","src":"13303:3:27"},"nativeSrc":"13303:22:27","nodeType":"YulFunctionCall","src":"13303:22:27"},{"name":"dataEnd","nativeSrc":"13327:7:27","nodeType":"YulIdentifier","src":"13327:7:27"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"13271:31:27","nodeType":"YulIdentifier","src":"13271:31:27"},"nativeSrc":"13271:64:27","nodeType":"YulFunctionCall","src":"13271:64:27"},"variableNames":[{"name":"value0","nativeSrc":"13261:6:27","nodeType":"YulIdentifier","src":"13261:6:27"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"13001:351:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13048:9:27","nodeType":"YulTypedName","src":"13048:9:27","type":""},{"name":"dataEnd","nativeSrc":"13059:7:27","nodeType":"YulTypedName","src":"13059:7:27","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"13071:6:27","nodeType":"YulTypedName","src":"13071:6:27","type":""}],"src":"13001:351:27"},{"body":{"nativeSrc":"13403:149:27","nodeType":"YulBlock","src":"13403:149:27","statements":[{"nativeSrc":"13413:25:27","nodeType":"YulAssignment","src":"13413:25:27","value":{"arguments":[{"name":"x","nativeSrc":"13436:1:27","nodeType":"YulIdentifier","src":"13436:1:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"13418:17:27","nodeType":"YulIdentifier","src":"13418:17:27"},"nativeSrc":"13418:20:27","nodeType":"YulFunctionCall","src":"13418:20:27"},"variableNames":[{"name":"x","nativeSrc":"13413:1:27","nodeType":"YulIdentifier","src":"13413:1:27"}]},{"nativeSrc":"13447:25:27","nodeType":"YulAssignment","src":"13447:25:27","value":{"arguments":[{"name":"y","nativeSrc":"13470:1:27","nodeType":"YulIdentifier","src":"13470:1:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"13452:17:27","nodeType":"YulIdentifier","src":"13452:17:27"},"nativeSrc":"13452:20:27","nodeType":"YulFunctionCall","src":"13452:20:27"},"variableNames":[{"name":"y","nativeSrc":"13447:1:27","nodeType":"YulIdentifier","src":"13447:1:27"}]},{"nativeSrc":"13481:17:27","nodeType":"YulAssignment","src":"13481:17:27","value":{"arguments":[{"name":"x","nativeSrc":"13493:1:27","nodeType":"YulIdentifier","src":"13493:1:27"},{"name":"y","nativeSrc":"13496:1:27","nodeType":"YulIdentifier","src":"13496:1:27"}],"functionName":{"name":"sub","nativeSrc":"13489:3:27","nodeType":"YulIdentifier","src":"13489:3:27"},"nativeSrc":"13489:9:27","nodeType":"YulFunctionCall","src":"13489:9:27"},"variableNames":[{"name":"diff","nativeSrc":"13481:4:27","nodeType":"YulIdentifier","src":"13481:4:27"}]},{"body":{"nativeSrc":"13523:22:27","nodeType":"YulBlock","src":"13523:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"13525:16:27","nodeType":"YulIdentifier","src":"13525:16:27"},"nativeSrc":"13525:18:27","nodeType":"YulFunctionCall","src":"13525:18:27"},"nativeSrc":"13525:18:27","nodeType":"YulExpressionStatement","src":"13525:18:27"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"13514:4:27","nodeType":"YulIdentifier","src":"13514:4:27"},{"name":"x","nativeSrc":"13520:1:27","nodeType":"YulIdentifier","src":"13520:1:27"}],"functionName":{"name":"gt","nativeSrc":"13511:2:27","nodeType":"YulIdentifier","src":"13511:2:27"},"nativeSrc":"13511:11:27","nodeType":"YulFunctionCall","src":"13511:11:27"},"nativeSrc":"13508:37:27","nodeType":"YulIf","src":"13508:37:27"}]},"name":"checked_sub_t_uint256","nativeSrc":"13358:194:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"13389:1:27","nodeType":"YulTypedName","src":"13389:1:27","type":""},{"name":"y","nativeSrc":"13392:1:27","nodeType":"YulTypedName","src":"13392:1:27","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"13398:4:27","nodeType":"YulTypedName","src":"13398:4:27","type":""}],"src":"13358:194:27"},{"body":{"nativeSrc":"13602:147:27","nodeType":"YulBlock","src":"13602:147:27","statements":[{"nativeSrc":"13612:25:27","nodeType":"YulAssignment","src":"13612:25:27","value":{"arguments":[{"name":"x","nativeSrc":"13635:1:27","nodeType":"YulIdentifier","src":"13635:1:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"13617:17:27","nodeType":"YulIdentifier","src":"13617:17:27"},"nativeSrc":"13617:20:27","nodeType":"YulFunctionCall","src":"13617:20:27"},"variableNames":[{"name":"x","nativeSrc":"13612:1:27","nodeType":"YulIdentifier","src":"13612:1:27"}]},{"nativeSrc":"13646:25:27","nodeType":"YulAssignment","src":"13646:25:27","value":{"arguments":[{"name":"y","nativeSrc":"13669:1:27","nodeType":"YulIdentifier","src":"13669:1:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"13651:17:27","nodeType":"YulIdentifier","src":"13651:17:27"},"nativeSrc":"13651:20:27","nodeType":"YulFunctionCall","src":"13651:20:27"},"variableNames":[{"name":"y","nativeSrc":"13646:1:27","nodeType":"YulIdentifier","src":"13646:1:27"}]},{"nativeSrc":"13680:16:27","nodeType":"YulAssignment","src":"13680:16:27","value":{"arguments":[{"name":"x","nativeSrc":"13691:1:27","nodeType":"YulIdentifier","src":"13691:1:27"},{"name":"y","nativeSrc":"13694:1:27","nodeType":"YulIdentifier","src":"13694:1:27"}],"functionName":{"name":"add","nativeSrc":"13687:3:27","nodeType":"YulIdentifier","src":"13687:3:27"},"nativeSrc":"13687:9:27","nodeType":"YulFunctionCall","src":"13687:9:27"},"variableNames":[{"name":"sum","nativeSrc":"13680:3:27","nodeType":"YulIdentifier","src":"13680:3:27"}]},{"body":{"nativeSrc":"13720:22:27","nodeType":"YulBlock","src":"13720:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"13722:16:27","nodeType":"YulIdentifier","src":"13722:16:27"},"nativeSrc":"13722:18:27","nodeType":"YulFunctionCall","src":"13722:18:27"},"nativeSrc":"13722:18:27","nodeType":"YulExpressionStatement","src":"13722:18:27"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"13712:1:27","nodeType":"YulIdentifier","src":"13712:1:27"},{"name":"sum","nativeSrc":"13715:3:27","nodeType":"YulIdentifier","src":"13715:3:27"}],"functionName":{"name":"gt","nativeSrc":"13709:2:27","nodeType":"YulIdentifier","src":"13709:2:27"},"nativeSrc":"13709:10:27","nodeType":"YulFunctionCall","src":"13709:10:27"},"nativeSrc":"13706:36:27","nodeType":"YulIf","src":"13706:36:27"}]},"name":"checked_add_t_uint256","nativeSrc":"13558:191:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"13589:1:27","nodeType":"YulTypedName","src":"13589:1:27","type":""},{"name":"y","nativeSrc":"13592:1:27","nodeType":"YulTypedName","src":"13592:1:27","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"13598:3:27","nodeType":"YulTypedName","src":"13598:3:27","type":""}],"src":"13558:191:27"},{"body":{"nativeSrc":"13909:288:27","nodeType":"YulBlock","src":"13909:288:27","statements":[{"nativeSrc":"13919:26:27","nodeType":"YulAssignment","src":"13919:26:27","value":{"arguments":[{"name":"headStart","nativeSrc":"13931:9:27","nodeType":"YulIdentifier","src":"13931:9:27"},{"kind":"number","nativeSrc":"13942:2:27","nodeType":"YulLiteral","src":"13942:2:27","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"13927:3:27","nodeType":"YulIdentifier","src":"13927:3:27"},"nativeSrc":"13927:18:27","nodeType":"YulFunctionCall","src":"13927:18:27"},"variableNames":[{"name":"tail","nativeSrc":"13919:4:27","nodeType":"YulIdentifier","src":"13919:4:27"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13999:6:27","nodeType":"YulIdentifier","src":"13999:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"14012:9:27","nodeType":"YulIdentifier","src":"14012:9:27"},{"kind":"number","nativeSrc":"14023:1:27","nodeType":"YulLiteral","src":"14023:1:27","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14008:3:27","nodeType":"YulIdentifier","src":"14008:3:27"},"nativeSrc":"14008:17:27","nodeType":"YulFunctionCall","src":"14008:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"13955:43:27","nodeType":"YulIdentifier","src":"13955:43:27"},"nativeSrc":"13955:71:27","nodeType":"YulFunctionCall","src":"13955:71:27"},"nativeSrc":"13955:71:27","nodeType":"YulExpressionStatement","src":"13955:71:27"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"14080:6:27","nodeType":"YulIdentifier","src":"14080:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"14093:9:27","nodeType":"YulIdentifier","src":"14093:9:27"},{"kind":"number","nativeSrc":"14104:2:27","nodeType":"YulLiteral","src":"14104:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14089:3:27","nodeType":"YulIdentifier","src":"14089:3:27"},"nativeSrc":"14089:18:27","nodeType":"YulFunctionCall","src":"14089:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"14036:43:27","nodeType":"YulIdentifier","src":"14036:43:27"},"nativeSrc":"14036:72:27","nodeType":"YulFunctionCall","src":"14036:72:27"},"nativeSrc":"14036:72:27","nodeType":"YulExpressionStatement","src":"14036:72:27"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"14162:6:27","nodeType":"YulIdentifier","src":"14162:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"14175:9:27","nodeType":"YulIdentifier","src":"14175:9:27"},{"kind":"number","nativeSrc":"14186:2:27","nodeType":"YulLiteral","src":"14186:2:27","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14171:3:27","nodeType":"YulIdentifier","src":"14171:3:27"},"nativeSrc":"14171:18:27","nodeType":"YulFunctionCall","src":"14171:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"14118:43:27","nodeType":"YulIdentifier","src":"14118:43:27"},"nativeSrc":"14118:72:27","nodeType":"YulFunctionCall","src":"14118:72:27"},"nativeSrc":"14118:72:27","nodeType":"YulExpressionStatement","src":"14118:72:27"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"13755:442:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13865:9:27","nodeType":"YulTypedName","src":"13865:9:27","type":""},{"name":"value2","nativeSrc":"13877:6:27","nodeType":"YulTypedName","src":"13877:6:27","type":""},{"name":"value1","nativeSrc":"13885:6:27","nodeType":"YulTypedName","src":"13885:6:27","type":""},{"name":"value0","nativeSrc":"13893:6:27","nodeType":"YulTypedName","src":"13893:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13904:4:27","nodeType":"YulTypedName","src":"13904:4:27","type":""}],"src":"13755:442:27"},{"body":{"nativeSrc":"14301:124:27","nodeType":"YulBlock","src":"14301:124:27","statements":[{"nativeSrc":"14311:26:27","nodeType":"YulAssignment","src":"14311:26:27","value":{"arguments":[{"name":"headStart","nativeSrc":"14323:9:27","nodeType":"YulIdentifier","src":"14323:9:27"},{"kind":"number","nativeSrc":"14334:2:27","nodeType":"YulLiteral","src":"14334:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14319:3:27","nodeType":"YulIdentifier","src":"14319:3:27"},"nativeSrc":"14319:18:27","nodeType":"YulFunctionCall","src":"14319:18:27"},"variableNames":[{"name":"tail","nativeSrc":"14311:4:27","nodeType":"YulIdentifier","src":"14311:4:27"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"14391:6:27","nodeType":"YulIdentifier","src":"14391:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"14404:9:27","nodeType":"YulIdentifier","src":"14404:9:27"},{"kind":"number","nativeSrc":"14415:1:27","nodeType":"YulLiteral","src":"14415:1:27","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14400:3:27","nodeType":"YulIdentifier","src":"14400:3:27"},"nativeSrc":"14400:17:27","nodeType":"YulFunctionCall","src":"14400:17:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"14347:43:27","nodeType":"YulIdentifier","src":"14347:43:27"},"nativeSrc":"14347:71:27","nodeType":"YulFunctionCall","src":"14347:71:27"},"nativeSrc":"14347:71:27","nodeType":"YulExpressionStatement","src":"14347:71:27"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"14203:222:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14273:9:27","nodeType":"YulTypedName","src":"14273:9:27","type":""},{"name":"value0","nativeSrc":"14285:6:27","nodeType":"YulTypedName","src":"14285:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14296:4:27","nodeType":"YulTypedName","src":"14296:4:27","type":""}],"src":"14203:222:27"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n    function store_literal_in_memory_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7(memPtr) {\n\n        mstore(add(memPtr, 0), \"AraraCoin trade is disabled\")\n\n    }\n\n    function abi_encode_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":27,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE PUSH20 0x70997970C51812DC3A010C7D01B50E0D17DC79C8 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x3C44CDDDB6A900FA2B585DD299E03D12FA4293BC PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x90F79BF6EB2C4F870365E785982E1F101E93B906 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x15D34AAF54267DB7D7C367839AAF71A00A2C6A65 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x9965507D1A55BCC2695C58BA16FB37D819B0A4DC PUSH1 0xD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x976EA74026E726554DB657FA54763ABD0C3A0AA9 PUSH1 0xE PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x4876 CODESIZE SUB DUP1 PUSH3 0x4876 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x236 SWAP2 SWAP1 PUSH3 0xFCF JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4172617261436F696E0000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4172617261436F696E0000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4152410000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x321 SWAP2 SWAP1 PUSH3 0x12A5 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x333 SWAP2 SWAP1 PUSH3 0x12A5 JUMP JUMPDEST POP POP POP PUSH3 0x34C PUSH1 0x5 DUP4 PUSH3 0x718 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH3 0x36A PUSH1 0x6 DUP3 PUSH3 0x718 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH3 0x3A9 PUSH3 0x770 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x45C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x453 SWAP2 SWAP1 PUSH3 0x139D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x46D DUP2 PUSH3 0x7CD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH1 0xF PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x4C6 PUSH1 0x0 PUSH1 0x10 PUSH3 0x893 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x4DD DUP4 PUSH1 0x10 PUSH3 0x893 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x4FD CALLER PUSH13 0x1431E0FAE6D7217CAA0000000 PUSH3 0x8CB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x55B CALLER PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x64 PUSH1 0x5 PUSH13 0x1431E0FAE6D7217CAA0000000 PUSH3 0x543 SWAP2 SWAP1 PUSH3 0x13E9 JUMP JUMPDEST PUSH3 0x54F SWAP2 SWAP1 PUSH3 0x1463 JUMP JUMPDEST PUSH3 0x958 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x5B9 CALLER PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x64 PUSH1 0xA PUSH13 0x1431E0FAE6D7217CAA0000000 PUSH3 0x5A1 SWAP2 SWAP1 PUSH3 0x13E9 JUMP JUMPDEST PUSH3 0x5AD SWAP2 SWAP1 PUSH3 0x1463 JUMP JUMPDEST PUSH3 0x958 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x617 CALLER PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x64 PUSH1 0x14 PUSH13 0x1431E0FAE6D7217CAA0000000 PUSH3 0x5FF SWAP2 SWAP1 PUSH3 0x13E9 JUMP JUMPDEST PUSH3 0x60B SWAP2 SWAP1 PUSH3 0x1463 JUMP JUMPDEST PUSH3 0x958 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x675 CALLER PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x64 PUSH1 0x19 PUSH13 0x1431E0FAE6D7217CAA0000000 PUSH3 0x65D SWAP2 SWAP1 PUSH3 0x13E9 JUMP JUMPDEST PUSH3 0x669 SWAP2 SWAP1 PUSH3 0x1463 JUMP JUMPDEST PUSH3 0x958 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x6B1 CALLER DUP3 PUSH1 0x64 PUSH1 0x14 PUSH13 0x1431E0FAE6D7217CAA0000000 PUSH3 0x699 SWAP2 SWAP1 PUSH3 0x13E9 JUMP JUMPDEST PUSH3 0x6A5 SWAP2 SWAP1 PUSH3 0x1463 JUMP JUMPDEST PUSH3 0x958 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x70F CALLER PUSH1 0xE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x64 PUSH1 0x14 PUSH13 0x1431E0FAE6D7217CAA0000000 PUSH3 0x6F7 SWAP2 SWAP1 PUSH3 0x13E9 JUMP JUMPDEST PUSH3 0x703 SWAP2 SWAP1 PUSH3 0x1463 JUMP JUMPDEST PUSH3 0x958 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH3 0x185B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x73E JUMPI PUSH3 0x736 DUP4 PUSH3 0xA5A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH3 0x76A JUMP JUMPDEST DUP3 PUSH3 0x750 DUP4 PUSH3 0xAC7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 DUP2 PUSH3 0x761 SWAP2 SWAP1 PUSH3 0x12A5 JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x7B2 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x14C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x8C3 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH3 0xAD1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x940 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x937 SWAP2 SWAP1 PUSH3 0x139D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x954 PUSH1 0x0 DUP4 DUP4 PUSH3 0xB4B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x9CD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x9C4 SWAP2 SWAP1 PUSH3 0x139D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xA42 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA39 SWAP2 SWAP1 PUSH3 0x139D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xA55 DUP4 DUP4 DUP4 PUSH3 0xB4B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0xAAA JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xAA1 SWAP2 SWAP1 PUSH3 0x15B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH3 0xAB8 SWAP1 PUSH3 0x1609 JUMP JUMPDEST PUSH1 0x0 SHR OR PUSH1 0x0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xAE5 DUP4 DUP4 PUSH3 0xCB0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xB40 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH3 0xB45 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH3 0xBB9 JUMPI PUSH3 0xB76 DUP4 PUSH1 0x10 PUSH3 0xCD3 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xBB8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xBAF SWAP1 PUSH3 0x16C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD7AD21AC DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC1C SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x16EB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xC3A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xC60 SWAP2 SWAP1 PUSH3 0x1759 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 PUSH3 0xC72 SWAP2 SWAP1 PUSH3 0x178B JUMP JUMPDEST SWAP1 POP PUSH3 0xC96 DUP6 PUSH3 0xC89 PUSH3 0xD0B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP5 PUSH3 0xD35 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xCA9 DUP6 DUP6 DUP4 PUSH3 0xD35 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD03 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH3 0xCB0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xD8B JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0xD7E SWAP2 SWAP1 PUSH3 0x17C6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0xE61 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0xE1A JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xE11 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x1801 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xEAC JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0xEF9 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0xF58 SWAP2 SWAP1 PUSH3 0x183E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xF97 DUP3 PUSH3 0xF6A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xFA9 DUP2 PUSH3 0xF8A JUMP JUMPDEST DUP2 EQ PUSH3 0xFB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0xFC9 DUP2 PUSH3 0xF9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0xFEB JUMPI PUSH3 0xFEA PUSH3 0xF65 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0xFFB DUP7 DUP3 DUP8 ADD PUSH3 0xFB8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x100E DUP7 DUP3 DUP8 ADD PUSH3 0xFB8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x1021 DUP7 DUP3 DUP8 ADD PUSH3 0xFB8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x10AD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x10C3 JUMPI PUSH3 0x10C2 PUSH3 0x1065 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x112D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x10EE JUMP JUMPDEST PUSH3 0x1139 DUP7 DUP4 PUSH3 0x10EE JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1186 PUSH3 0x1180 PUSH3 0x117A DUP5 PUSH3 0x1151 JUMP JUMPDEST PUSH3 0x115B JUMP JUMPDEST PUSH3 0x1151 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x11A2 DUP4 PUSH3 0x1165 JUMP JUMPDEST PUSH3 0x11BA PUSH3 0x11B1 DUP3 PUSH3 0x118D JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x10FB JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x11D1 PUSH3 0x11C2 JUMP JUMPDEST PUSH3 0x11DE DUP2 DUP5 DUP5 PUSH3 0x1197 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x1206 JUMPI PUSH3 0x11FA PUSH1 0x0 DUP3 PUSH3 0x11C7 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x11E4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x1255 JUMPI PUSH3 0x121F DUP2 PUSH3 0x10C9 JUMP JUMPDEST PUSH3 0x122A DUP5 PUSH3 0x10DE JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x123A JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x1252 PUSH3 0x1249 DUP6 PUSH3 0x10DE JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x11E3 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x127A PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x125A JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1295 DUP4 DUP4 PUSH3 0x1267 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x12B0 DUP3 PUSH3 0x102B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x12CC JUMPI PUSH3 0x12CB PUSH3 0x1036 JUMP JUMPDEST JUMPDEST PUSH3 0x12D8 DUP3 SLOAD PUSH3 0x1094 JUMP JUMPDEST PUSH3 0x12E5 DUP3 DUP3 DUP6 PUSH3 0x120A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x131D JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x1308 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x1314 DUP6 DUP3 PUSH3 0x1287 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x1384 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x132D DUP7 PUSH3 0x10C9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x1357 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x1330 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x1377 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x1373 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x1267 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x1397 DUP2 PUSH3 0xF8A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x13B4 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x138C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x13F6 DUP3 PUSH3 0x1151 JUMP JUMPDEST SWAP2 POP PUSH3 0x1403 DUP4 PUSH3 0x1151 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0x1413 DUP2 PUSH3 0x1151 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0x142D JUMPI PUSH3 0x142C PUSH3 0x13BA JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x1470 DUP3 PUSH3 0x1151 JUMP JUMPDEST SWAP2 POP PUSH3 0x147D DUP4 PUSH3 0x1151 JUMP JUMPDEST SWAP3 POP DUP3 PUSH3 0x1490 JUMPI PUSH3 0x148F PUSH3 0x1434 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x14B0 DUP2 PUSH3 0x149B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x14C1 DUP2 PUSH3 0x1151 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x14DE PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0x14A5 JUMP JUMPDEST PUSH3 0x14ED PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0x14A5 JUMP JUMPDEST PUSH3 0x14FC PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0x14A5 JUMP JUMPDEST PUSH3 0x150B PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0x14B6 JUMP JUMPDEST PUSH3 0x151A PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0x138C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x1555 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x1538 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x157F DUP3 PUSH3 0x102B JUMP JUMPDEST PUSH3 0x158B DUP2 DUP6 PUSH3 0x1524 JUMP JUMPDEST SWAP4 POP PUSH3 0x159D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x1535 JUMP JUMPDEST PUSH3 0x15A8 DUP2 PUSH3 0x1561 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x15CF DUP2 DUP5 PUSH3 0x1572 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1600 DUP3 MLOAD PUSH3 0x149B JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1616 DUP3 PUSH3 0x15D7 JUMP JUMPDEST DUP3 PUSH3 0x1622 DUP5 PUSH3 0x15E2 JUMP JUMPDEST SWAP1 POP PUSH3 0x162F DUP2 PUSH3 0x15F2 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH3 0x1672 JUMPI PUSH3 0x166D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH3 0x10EE JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4172617261436F696E2074726164652069732064697361626C65640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x16B1 PUSH1 0x1B DUP4 PUSH3 0x1524 JUMP JUMPDEST SWAP2 POP PUSH3 0x16BE DUP3 PUSH3 0x1679 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x16E4 DUP2 PUSH3 0x16A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x1702 PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x138C JUMP JUMPDEST PUSH3 0x1711 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x138C JUMP JUMPDEST PUSH3 0x1720 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x14B6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH3 0x1733 DUP2 PUSH3 0x1151 JUMP JUMPDEST DUP2 EQ PUSH3 0x173F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1753 DUP2 PUSH3 0x1728 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1772 JUMPI PUSH3 0x1771 PUSH3 0xF65 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x1782 DUP5 DUP3 DUP6 ADD PUSH3 0x1742 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1798 DUP3 PUSH3 0x1151 JUMP JUMPDEST SWAP2 POP PUSH3 0x17A5 DUP4 PUSH3 0x1151 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH3 0x17C0 JUMPI PUSH3 0x17BF PUSH3 0x13BA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x17D3 DUP3 PUSH3 0x1151 JUMP JUMPDEST SWAP2 POP PUSH3 0x17E0 DUP4 PUSH3 0x1151 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x17FB JUMPI PUSH3 0x17FA PUSH3 0x13BA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x1818 PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x138C JUMP JUMPDEST PUSH3 0x1827 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x14B6 JUMP JUMPDEST PUSH3 0x1836 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x14B6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1855 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x14B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x2FC0 PUSH3 0x18B6 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x15C8 ADD MSTORE PUSH1 0x0 PUSH2 0x158D ADD MSTORE PUSH1 0x0 PUSH2 0x1A28 ADD MSTORE PUSH1 0x0 PUSH2 0x1A07 ADD MSTORE PUSH1 0x0 PUSH2 0x133B ADD MSTORE PUSH1 0x0 PUSH2 0x1391 ADD MSTORE PUSH1 0x0 PUSH2 0x13BA ADD MSTORE PUSH2 0x2FC0 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7EDD9E5E GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x51A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x566 JUMPI DUP1 PUSH4 0xFCA6172F EQ PUSH2 0x582 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x492 JUMPI DUP1 PUSH4 0xBBAA49DA EQ PUSH2 0x4C2 JUMPI DUP1 PUSH4 0xC519099D EQ PUSH2 0x4E0 JUMPI DUP1 PUSH4 0xCA40F1C4 EQ PUSH2 0x4FE JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x8AC27F5F GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8AC27F5F EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0x9B75679C EQ PUSH2 0x462 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x7EDD9E5E EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0x8A8C523C EQ PUSH2 0x3FE JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x488D4A51 GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x5E57966D GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x5E57966D EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x38C JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x488D4A51 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x4ADA218B EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x5A7ADF7F EQ PUSH2 0x304 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1AD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2AC JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x12280BA8 EQ PUSH2 0x222 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x21FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x22C7 JUMP JUMPDEST PUSH2 0x632 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x2322 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22A PUSH2 0x655 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x239C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x248 PUSH2 0x67B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x278 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x23E1 JUMP JUMPDEST PUSH2 0x685 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x2322 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x296 PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x2450 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B4 PUSH2 0x6BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x2484 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DF SWAP2 SWAP1 PUSH2 0x249F JUMP JUMPDEST PUSH2 0x6CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EE PUSH2 0x778 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x2322 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30C PUSH2 0x78B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x24DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x249F JUMP JUMPDEST PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x21FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x249F JUMP JUMPDEST PUSH2 0xAB6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38A PUSH2 0xAFE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0x249F JUMP JUMPDEST PUSH2 0xB12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C4 PUSH2 0xB24 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0x24DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E2 PUSH2 0xB4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F5 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x406 PUSH2 0xBF4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x410 PUSH2 0xC95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41D SWAP2 SWAP1 PUSH2 0x24DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42E PUSH2 0xCBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43B SWAP2 SWAP1 PUSH2 0x24DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44C PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x459 SWAP2 SWAP1 PUSH2 0x21FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x477 SWAP2 SWAP1 PUSH2 0x27A8 JUMP JUMPDEST PUSH2 0xD77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x489 SWAP2 SWAP1 PUSH2 0x21FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A7 SWAP2 SWAP1 PUSH2 0x22C7 JUMP JUMPDEST PUSH2 0xDB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B9 SWAP2 SWAP1 PUSH2 0x2322 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CA PUSH2 0xDD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D7 SWAP2 SWAP1 PUSH2 0x24DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E8 PUSH2 0xDFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F5 SWAP2 SWAP1 PUSH2 0x24DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x518 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x513 SWAP2 SWAP1 PUSH2 0x2864 JUMP JUMPDEST PUSH2 0xE20 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x534 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x52F SWAP2 SWAP1 PUSH2 0x2909 JUMP JUMPDEST PUSH2 0xF1A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x550 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54B SWAP2 SWAP1 PUSH2 0x29AB JUMP JUMPDEST PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55D SWAP2 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x580 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57B SWAP2 SWAP1 PUSH2 0x249F JUMP JUMPDEST PUSH2 0x10E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58A PUSH2 0x116F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x597 SWAP2 SWAP1 PUSH2 0x24DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x5AF SWAP1 PUSH2 0x2A1A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5DB SWAP1 PUSH2 0x2A1A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x628 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x628 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x60B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x63D PUSH2 0x1195 JUMP JUMPDEST SWAP1 POP PUSH2 0x64A DUP2 DUP6 DUP6 PUSH2 0x119D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x690 PUSH2 0x1195 JUMP JUMPDEST SWAP1 POP PUSH2 0x69D DUP6 DUP3 DUP6 PUSH2 0x11AF JUMP JUMPDEST PUSH2 0x6A8 DUP6 DUP6 DUP6 PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C7 PUSH2 0x1337 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6D4 PUSH2 0x13EE JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0xF PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH31 0xD910C9481701BA32AFE0C247572AAECE27072F230C8EC769BF245FC0B38DE6 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x76C SWAP3 SWAP2 SWAP1 PUSH2 0x2A4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH1 0x2A PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x828 JUMPI PUSH2 0x827 PUSH2 0x267D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x85A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x892 JUMPI PUSH2 0x891 PUSH2 0x2A74 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x8F6 JUMPI PUSH2 0x8F5 PUSH2 0x2A74 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 JUMPDEST PUSH1 0x14 DUP2 LT ISZERO PUSH2 0xAAA JUMPI DUP3 PUSH1 0x4 DUP6 PUSH1 0xC DUP5 PUSH2 0x942 SWAP2 SWAP1 PUSH2 0x2AD2 JUMP JUMPDEST PUSH1 0x20 DUP2 LT PUSH2 0x953 JUMPI PUSH2 0x952 PUSH2 0x2A74 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SHR PUSH1 0xF8 SHR PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x992 JUMPI PUSH2 0x991 PUSH2 0x2A74 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP3 PUSH1 0x2 DUP4 PUSH2 0x9AB SWAP2 SWAP1 PUSH2 0x2B06 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x9B7 SWAP2 SWAP1 PUSH2 0x2AD2 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x9C8 JUMPI PUSH2 0x9C7 PUSH2 0x2A74 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP3 PUSH1 0xF PUSH1 0xF8 SHL DUP6 PUSH1 0xC DUP5 PUSH2 0xA0B SWAP2 SWAP1 PUSH2 0x2AD2 JUMP JUMPDEST PUSH1 0x20 DUP2 LT PUSH2 0xA1C JUMPI PUSH2 0xA1B PUSH2 0x2A74 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL AND PUSH1 0xF8 SHR PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0xA38 JUMPI PUSH2 0xA37 PUSH2 0x2A74 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP3 PUSH1 0x2 DUP4 PUSH2 0xA51 SWAP2 SWAP1 PUSH2 0x2B06 JUMP JUMPDEST PUSH1 0x3 PUSH2 0xA5D SWAP2 SWAP1 PUSH2 0x2AD2 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xA6E JUMPI PUSH2 0xA6D PUSH2 0x2A74 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x928 JUMP JUMPDEST POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB06 PUSH2 0x13EE JUMP JUMPDEST PUSH2 0xB10 PUSH1 0x0 PUSH2 0x1475 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB1D DUP3 PUSH2 0x153B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0xB5E PUSH2 0x1584 JUMP JUMPDEST PUSH2 0xB66 PUSH2 0x15BF JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB87 JUMPI PUSH2 0xB86 PUSH2 0x267D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBB5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH2 0xBFC PUSH2 0x13EE JUMP JUMPDEST PUSH1 0xF PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC43 SWAP1 PUSH2 0x2BBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xF PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x799663458A5EF2936F7FA0C99B3336C69C25890F82974F04E811E5BB359186C7 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xCF4 SWAP1 PUSH2 0x2A1A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD20 SWAP1 PUSH2 0x2A1A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD6D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD42 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD6D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD50 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xD84 DUP5 PUSH2 0x7B1 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD99 SWAP3 SWAP2 SWAP1 PUSH2 0x2C16 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xDBC PUSH2 0x1195 JUMP JUMPDEST SWAP1 POP PUSH2 0xDC9 DUP2 DUP6 DUP6 PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xE28 PUSH2 0x13EE JUMP JUMPDEST PUSH1 0xF PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xE78 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE6F SWAP1 PUSH2 0x2C86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 SWAP1 POP SUB PUSH2 0xEBE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB5 SWAP1 PUSH2 0x2CF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP3 SWAP1 POP DUP2 LT ISZERO PUSH2 0xF15 JUMPI PUSH2 0xF07 DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0xEE2 JUMPI PUSH2 0xEE1 PUSH2 0x2A74 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xEF7 SWAP2 SWAP1 PUSH2 0x249F JUMP JUMPDEST PUSH1 0x10 PUSH2 0x15FA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xEC1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xF5F JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF56 SWAP2 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xF8E DUP13 PUSH2 0x162A JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFA4 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xFC7 DUP3 PUSH2 0x1681 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xFD7 DUP3 DUP8 DUP8 DUP8 PUSH2 0x169B JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x104B JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1042 SWAP3 SWAP2 SWAP1 PUSH2 0x2A4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1056 DUP11 DUP11 DUP11 PUSH2 0x119D JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10F1 PUSH2 0x13EE JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1163 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115A SWAP2 SWAP1 PUSH2 0x24DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x116C DUP2 PUSH2 0x1475 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x11AA DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x16CB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11BB DUP5 DUP5 PUSH2 0x1062 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x123D JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x122D JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1224 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x123C DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x16CB JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12B5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12AC SWAP2 SWAP1 PUSH2 0x24DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1327 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x131E SWAP2 SWAP1 PUSH2 0x24DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1332 DUP4 DUP4 DUP4 PUSH2 0x18A2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x13B3 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x13E0 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x13EB JUMP JUMPDEST PUSH2 0x13E8 PUSH2 0x19E2 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x13F6 PUSH2 0x1195 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1414 PUSH2 0xCBB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1473 JUMPI PUSH2 0x1437 PUSH2 0x1195 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x146A SWAP2 SWAP1 PUSH2 0x24DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x15BA PUSH1 0x5 PUSH32 0x0 PUSH2 0x1A78 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x15F5 PUSH1 0x6 PUSH32 0x0 PUSH2 0x1A78 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1622 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x1B28 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1694 PUSH2 0x168E PUSH2 0x1337 JUMP JUMPDEST DUP4 PUSH2 0x1B98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x16AD DUP9 DUP9 DUP9 DUP9 PUSH2 0x1BD9 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x16BD DUP3 DUP3 PUSH2 0x1CCD JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x173D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1734 SWAP2 SWAP1 PUSH2 0x24DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17AF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A6 SWAP2 SWAP1 PUSH2 0x24DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x189C JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1893 SWAP2 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x190A JUMPI PUSH2 0x18CA DUP4 PUSH1 0x10 PUSH2 0x1E31 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1909 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1900 SWAP1 PUSH2 0x2DF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD7AD21AC DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x196B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E16 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1988 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19AC SWAP2 SWAP1 PUSH2 0x2E62 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 PUSH2 0x19BC SWAP2 SWAP1 PUSH2 0x2E8F JUMP JUMPDEST SWAP1 POP PUSH2 0x19D0 DUP6 PUSH2 0x19CA PUSH2 0xCBB JUMP JUMPDEST DUP5 PUSH2 0x1E61 JUMP JUMPDEST PUSH2 0x19DB DUP6 DUP6 DUP4 PUSH2 0x1E61 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1A5D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2EC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x1A95 JUMPI PUSH2 0x1A8E DUP4 PUSH2 0x2086 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B22 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1AA1 SWAP1 PUSH2 0x2A1A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1ACD SWAP1 PUSH2 0x2A1A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B1A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1AEF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B1A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1AFD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B34 DUP4 DUP4 PUSH2 0x20FA JUMP JUMPDEST PUSH2 0x1B8D JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x1B92 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1C19 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1CC3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1C3E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F16 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C60 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CB4 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1CC3 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1CE1 JUMPI PUSH2 0x1CE0 PUSH2 0x2F5B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1CF4 JUMPI PUSH2 0x1CF3 PUSH2 0x2F5B JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x1E2D JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1D0E JUMPI PUSH2 0x1D0D PUSH2 0x2F5B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1D21 JUMPI PUSH2 0x1D20 PUSH2 0x2F5B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1D58 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1D6C JUMPI PUSH2 0x1D6B PUSH2 0x2F5B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1D7F JUMPI PUSH2 0x1D7E PUSH2 0x2F5B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1DC4 JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DBB SWAP2 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1DD7 JUMPI PUSH2 0x1DD6 PUSH2 0x2F5B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1DEA JUMPI PUSH2 0x1DE9 PUSH2 0x2F5B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1E2C JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E23 SWAP2 SWAP1 PUSH2 0x2484 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E59 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x20FA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1EB3 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1EA7 SWAP2 SWAP1 PUSH2 0x2AD2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1F86 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1F3F JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F36 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1FCF JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x201C JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x2079 SWAP2 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2093 DUP4 PUSH2 0x211D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20B2 JUMPI PUSH2 0x20B1 PUSH2 0x267D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x20E4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x2164 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21A7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x218C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21CF DUP3 PUSH2 0x216D JUMP JUMPDEST PUSH2 0x21D9 DUP2 DUP6 PUSH2 0x2178 JUMP JUMPDEST SWAP4 POP PUSH2 0x21E9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2189 JUMP JUMPDEST PUSH2 0x21F2 DUP2 PUSH2 0x21B3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2217 DUP2 DUP5 PUSH2 0x21C4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x225E DUP3 PUSH2 0x2233 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x226E DUP2 PUSH2 0x2253 JUMP JUMPDEST DUP2 EQ PUSH2 0x2279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x228B DUP2 PUSH2 0x2265 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22A4 DUP2 PUSH2 0x2291 JUMP JUMPDEST DUP2 EQ PUSH2 0x22AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22C1 DUP2 PUSH2 0x229B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22DE JUMPI PUSH2 0x22DD PUSH2 0x2229 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22EC DUP6 DUP3 DUP7 ADD PUSH2 0x227C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22FD DUP6 DUP3 DUP7 ADD PUSH2 0x22B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x231C DUP2 PUSH2 0x2307 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2337 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2313 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2362 PUSH2 0x235D PUSH2 0x2358 DUP5 PUSH2 0x2233 JUMP JUMPDEST PUSH2 0x233D JUMP JUMPDEST PUSH2 0x2233 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2374 DUP3 PUSH2 0x2347 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2386 DUP3 PUSH2 0x2369 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2396 DUP2 PUSH2 0x237B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23B1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x238D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x23C0 DUP2 PUSH2 0x2291 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23DB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x23B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x23FA JUMPI PUSH2 0x23F9 PUSH2 0x2229 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2408 DUP7 DUP3 DUP8 ADD PUSH2 0x227C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2419 DUP7 DUP3 DUP8 ADD PUSH2 0x227C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x242A DUP7 DUP3 DUP8 ADD PUSH2 0x22B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x244A DUP2 PUSH2 0x2434 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2465 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2441 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x247E DUP2 PUSH2 0x246B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2499 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2475 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24B5 JUMPI PUSH2 0x24B4 PUSH2 0x2229 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24C3 DUP5 DUP3 DUP6 ADD PUSH2 0x227C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x24D5 DUP2 PUSH2 0x2253 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24F0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x24CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x252B DUP2 PUSH2 0x24F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2566 DUP2 PUSH2 0x2291 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2578 DUP4 DUP4 PUSH2 0x255D JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x259C DUP3 PUSH2 0x2531 JUMP JUMPDEST PUSH2 0x25A6 DUP2 DUP6 PUSH2 0x253C JUMP JUMPDEST SWAP4 POP PUSH2 0x25B1 DUP4 PUSH2 0x254D JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x25E2 JUMPI DUP2 MLOAD PUSH2 0x25C9 DUP9 DUP3 PUSH2 0x256C JUMP JUMPDEST SWAP8 POP PUSH2 0x25D4 DUP4 PUSH2 0x2584 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x25B5 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x2604 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x2522 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2616 DUP2 DUP10 PUSH2 0x21C4 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x262A DUP2 DUP9 PUSH2 0x21C4 JUMP JUMPDEST SWAP1 POP PUSH2 0x2639 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x23B7 JUMP JUMPDEST PUSH2 0x2646 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x24CC JUMP JUMPDEST PUSH2 0x2653 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x2475 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x2665 DUP2 DUP5 PUSH2 0x2591 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x26B5 DUP3 PUSH2 0x21B3 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x26D4 JUMPI PUSH2 0x26D3 PUSH2 0x267D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26E7 PUSH2 0x221F JUMP JUMPDEST SWAP1 POP PUSH2 0x26F3 DUP3 DUP3 PUSH2 0x26AC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2713 JUMPI PUSH2 0x2712 PUSH2 0x267D JUMP JUMPDEST JUMPDEST PUSH2 0x271C DUP3 PUSH2 0x21B3 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x274B PUSH2 0x2746 DUP5 PUSH2 0x26F8 JUMP JUMPDEST PUSH2 0x26DD JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2767 JUMPI PUSH2 0x2766 PUSH2 0x2678 JUMP JUMPDEST JUMPDEST PUSH2 0x2772 DUP5 DUP3 DUP6 PUSH2 0x2729 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x278F JUMPI PUSH2 0x278E PUSH2 0x2673 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x279F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2738 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27BF JUMPI PUSH2 0x27BE PUSH2 0x2229 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27CD DUP6 DUP3 DUP7 ADD PUSH2 0x227C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27EE JUMPI PUSH2 0x27ED PUSH2 0x222E JUMP JUMPDEST JUMPDEST PUSH2 0x27FA DUP6 DUP3 DUP7 ADD PUSH2 0x277A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2824 JUMPI PUSH2 0x2823 PUSH2 0x2673 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2841 JUMPI PUSH2 0x2840 PUSH2 0x2804 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x285D JUMPI PUSH2 0x285C PUSH2 0x2809 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x287B JUMPI PUSH2 0x287A PUSH2 0x2229 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2899 JUMPI PUSH2 0x2898 PUSH2 0x222E JUMP JUMPDEST JUMPDEST PUSH2 0x28A5 DUP6 DUP3 DUP7 ADD PUSH2 0x280E JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x28BA DUP2 PUSH2 0x2434 JUMP JUMPDEST DUP2 EQ PUSH2 0x28C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28D7 DUP2 PUSH2 0x28B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x28E6 DUP2 PUSH2 0x246B JUMP JUMPDEST DUP2 EQ PUSH2 0x28F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2903 DUP2 PUSH2 0x28DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2928 JUMPI PUSH2 0x2927 PUSH2 0x2229 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2936 DUP11 DUP3 DUP12 ADD PUSH2 0x227C JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x2947 DUP11 DUP3 DUP12 ADD PUSH2 0x227C JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x2958 DUP11 DUP3 DUP12 ADD PUSH2 0x22B2 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x2969 DUP11 DUP3 DUP12 ADD PUSH2 0x22B2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x297A DUP11 DUP3 DUP12 ADD PUSH2 0x28C8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x298B DUP11 DUP3 DUP12 ADD PUSH2 0x28F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x299C DUP11 DUP3 DUP12 ADD PUSH2 0x28F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29C2 JUMPI PUSH2 0x29C1 PUSH2 0x2229 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x29D0 DUP6 DUP3 DUP7 ADD PUSH2 0x227C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x29E1 DUP6 DUP3 DUP7 ADD PUSH2 0x227C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2A32 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2A45 JUMPI PUSH2 0x2A44 PUSH2 0x29EB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2A60 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x24CC JUMP JUMPDEST PUSH2 0x2A6D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x24CC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2ADD DUP3 PUSH2 0x2291 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AE8 DUP4 PUSH2 0x2291 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2B00 JUMPI PUSH2 0x2AFF PUSH2 0x2AA3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B11 DUP3 PUSH2 0x2291 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B1C DUP4 PUSH2 0x2291 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2B2A DUP2 PUSH2 0x2291 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2B41 JUMPI PUSH2 0x2B40 PUSH2 0x2AA3 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4172617261436F696E2074726164696E6720616C726561647920656E61626C65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BA4 PUSH1 0x21 DUP4 PUSH2 0x2178 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BAF DUP3 PUSH2 0x2B48 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BD3 DUP2 PUSH2 0x2B97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BF0 DUP3 PUSH2 0x216D JUMP JUMPDEST PUSH2 0x2BFA DUP2 DUP6 PUSH2 0x2BDA JUMP JUMPDEST SWAP4 POP PUSH2 0x2C0A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2189 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C22 DUP3 DUP6 PUSH2 0x2BE5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C2E DUP3 DUP5 PUSH2 0x2BE5 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5447433A2074726164696E6720616C726561647920656E61626C656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C70 PUSH1 0x1C DUP4 PUSH2 0x2178 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C7B DUP3 PUSH2 0x2C3A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C9F DUP2 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5447433A20696E76616C696420706172616D6574657273000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CDC PUSH1 0x17 DUP4 PUSH2 0x2178 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CE7 DUP3 PUSH2 0x2CA6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D0B DUP2 PUSH2 0x2CCF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x2D27 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x2475 JUMP JUMPDEST PUSH2 0x2D34 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x24CC JUMP JUMPDEST PUSH2 0x2D41 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x24CC JUMP JUMPDEST PUSH2 0x2D4E PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x23B7 JUMP JUMPDEST PUSH2 0x2D5B PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x23B7 JUMP JUMPDEST PUSH2 0x2D68 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x23B7 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2D88 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x24CC JUMP JUMPDEST PUSH2 0x2D95 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x23B7 JUMP JUMPDEST PUSH2 0x2DA2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x23B7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4172617261436F696E2074726164652069732064697361626C65640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE0 PUSH1 0x1B DUP4 PUSH2 0x2178 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DEB DUP3 PUSH2 0x2DAA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E0F DUP2 PUSH2 0x2DD3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2E2B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x24CC JUMP JUMPDEST PUSH2 0x2E38 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x24CC JUMP JUMPDEST PUSH2 0x2E45 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x23B7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2E5C DUP2 PUSH2 0x229B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E78 JUMPI PUSH2 0x2E77 PUSH2 0x2229 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E86 DUP5 DUP3 DUP6 ADD PUSH2 0x2E4D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E9A DUP3 PUSH2 0x2291 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EA5 DUP4 PUSH2 0x2291 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2EBD JUMPI PUSH2 0x2EBC PUSH2 0x2AA3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2ED8 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2475 JUMP JUMPDEST PUSH2 0x2EE5 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2475 JUMP JUMPDEST PUSH2 0x2EF2 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x2475 JUMP JUMPDEST PUSH2 0x2EFF PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x23B7 JUMP JUMPDEST PUSH2 0x2F0C PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x24CC JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2F2B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2475 JUMP JUMPDEST PUSH2 0x2F38 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2441 JUMP JUMPDEST PUSH2 0x2F45 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2475 JUMP JUMPDEST PUSH2 0x2F52 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2475 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE PREVRANDAO PUSH32 0x802829722DBEF9135FD1E94802611CD237B1DE48A4CAB8072E4B402DC264736F PUSH13 0x63430008180033000000000000 ","sourceMap":"390:3957:23:-:0;;;482:42;446:78;;;;;;;;;;;;;;;;;;;;555:42;530:67;;;;;;;;;;;;;;;;;;;;634:42;603:73;;;;;;;;;;;;;;;;;;;;709:42;682:69;;;;;;;;;;;;;;;;;;;;790:42;757:75;;;;;;;;;;;;;;;;;;;;876:42;838:80;;;;;;;;;;;;;;;;;;;;1395:962;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1571:12;1574:52:6;;;;;;;;;;;;;;;;;1613:4;3328:431:17;;;;;;;;;;;;;;;;;1896:113:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;3401:45:17;3432:13;3401:4;:30;;;;:45;;;;:::i;:::-;3393:53;;;;;;3467:51;3501:16;3467:7;:33;;;;:51;;;;:::i;:::-;3456:62;;;;;;3558:4;3542:22;;;;;;3528:36;;;;;;3607:7;3591:25;;;;;;3574:42;;;;;;3644:13;3627:30;;;;;;3692:23;:21;;;:23;;:::i;:::-;3667:48;;;;;;3747:4;3725:27;;;;;;;;;;3328:431;;1574:52:6;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1624:17:23::3;1599:10;;:43;;;;;;;;;;;;;;;;;;1652:25;1674:1;1652:9;:13;;;;:25;;;;:::i;:::-;;1687:27;1701:12;1687:9;:13;;;;:27;;;;:::i;:::-;;1732:31;1738:10;964:26;1732:5;;;:31;;:::i;:::-;1781:65;1791:10;1803:18;;;;;;;;;;;1842:3;1838:1;964:26;1823:16;;;;:::i;:::-;:22;;;;:::i;:::-;1781:9;;;:65;;:::i;:::-;1865:56;1875:10;1887:7;;;;;;;;;;;1917:3;1912:2;964:26;1897:17;;;;:::i;:::-;:23;;;;:::i;:::-;1865:9;;;:56;;:::i;:::-;1940:62;1950:10;1962:13;;;;;;;;;;;1998:3;1993:2;964:26;1978:17;;;;:::i;:::-;:23;;;;:::i;:::-;1940:9;;;:62;;:::i;:::-;2021:58;2031:10;2043:9;;;;;;;;;;;2075:3;2070:2;964:26;2055:17;;;;:::i;:::-;:23;;;;:::i;:::-;2021:9;;;:58;;:::i;:::-;2183:71;2193:10;2205:22;2250:3;2245:2;964:26;2230:17;;;;:::i;:::-;:23;;;;:::i;:::-;2183:9;;;:71;;:::i;:::-;2273:68;2283:10;2295:20;;;;;;;;;;;2337:3;2332:2;964:26;2317:17;;;;:::i;:::-;:23;;;;:::i;:::-;2273:9;;;:68;;:::i;:::-;1395:962:::0;;;390:3957;;2914:340:13;3010:11;3059:2;3043:5;3037:19;:24;3033:215;;;3084:20;3098:5;3084:13;;;:20;;:::i;:::-;3077:27;;;;3033:215;3176:5;3135:32;3161:5;3135:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;1390:66;3219:17;;3195:42;;2914:340;;;;;:::o;4113:179:17:-;4168:7;2079:95;4226:11;;4239:14;;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;8316:150:22:-;8386:4;8409:50;8414:3;:10;;8450:5;8434:23;;8426:32;;8409:4;;;:50;;:::i;:::-;8402:57;;8316:150;;;;:::o;7721:208:4:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;;;:24;;:::i;:::-;5656:300;;;:::o;1708:286:13:-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;;;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:4;:11;1965:4;1957:13;;;:::i;:::-;1949:22;;:36;1941:45;;1917:70;;;1708:286;;;:::o;3135:202:14:-;3203:20;3311:10;3301:20;;3135:202;;;:::o;2241:406:22:-;2304:4;2325:21;2335:3;2340:5;2325:9;;;:21;;:::i;:::-;2320:321;;2362:3;:11;;2379:5;2362:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2544:3;:11;;:18;;;;2520:3;:14;;:21;2535:5;2520:21;;;;;;;;;;;:42;;;;2583:4;2576:11;;;;2320:321;2625:5;2618:12;;2241:406;;;;;:::o;3188:422:23:-;3307:14;;;;;;;;;;;3302:110;;3345:24;3364:4;3345:9;:18;;;;:24;;;;:::i;:::-;3337:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;3302:110;3422:11;3436:10;;;;;;;;;;;:17;;;3454:4;3460:2;3464:5;3436:34;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3422:48;;3480:19;3510:3;3502:5;:11;;;;:::i;:::-;3480:33;;3524;3538:4;3544:7;:5;;;:7;;:::i;:::-;3553:3;3524:13;;;:33;;:::i;:::-;3567:36;3581:4;3587:2;3591:11;3567:13;;;:36;;:::i;:::-;3292:318;;3188:422;;;:::o;4264:129:22:-;4337:4;4385:1;4360:3;:14;;:21;4375:5;4360:21;;;;;;;;;;;;:26;;4353:33;;4264:129;;;;:::o;8871:165::-;8951:4;8974:55;8984:3;:10;;9020:5;9004:23;;8996:32;;8974:9;;;:55;;:::i;:::-;8967:62;;8871:165;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;6271:1107:4:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;88:117:27:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:663::-;933:6;941;949;998:2;986:9;977:7;973:23;969:32;966:119;;;1004:79;;:::i;:::-;966:119;1124:1;1149:64;1205:7;1196:6;1185:9;1181:22;1149:64;:::i;:::-;1139:74;;1095:128;1262:2;1288:64;1344:7;1335:6;1324:9;1320:22;1288:64;:::i;:::-;1278:74;;1233:129;1401:2;1427:64;1483:7;1474:6;1463:9;1459:22;1427:64;:::i;:::-;1417:74;;1372:129;845:663;;;;;:::o;1514:99::-;1566:6;1600:5;1594:12;1584:22;;1514:99;;;:::o;1619:180::-;1667:77;1664:1;1657:88;1764:4;1761:1;1754:15;1788:4;1785:1;1778:15;1805:180;1853:77;1850:1;1843:88;1950:4;1947:1;1940:15;1974:4;1971:1;1964:15;1991:320;2035:6;2072:1;2066:4;2062:12;2052:22;;2119:1;2113:4;2109:12;2140:18;2130:81;;2196:4;2188:6;2184:17;2174:27;;2130:81;2258:2;2250:6;2247:14;2227:18;2224:38;2221:84;;2277:18;;:::i;:::-;2221:84;2042:269;1991:320;;;:::o;2317:141::-;2366:4;2389:3;2381:11;;2412:3;2409:1;2402:14;2446:4;2443:1;2433:18;2425:26;;2317:141;;;:::o;2464:93::-;2501:6;2548:2;2543;2536:5;2532:14;2528:23;2518:33;;2464:93;;;:::o;2563:107::-;2607:8;2657:5;2651:4;2647:16;2626:37;;2563:107;;;;:::o;2676:393::-;2745:6;2795:1;2783:10;2779:18;2818:97;2848:66;2837:9;2818:97;:::i;:::-;2936:39;2966:8;2955:9;2936:39;:::i;:::-;2924:51;;3008:4;3004:9;2997:5;2993:21;2984:30;;3057:4;3047:8;3043:19;3036:5;3033:30;3023:40;;2752:317;;2676:393;;;;;:::o;3075:77::-;3112:7;3141:5;3130:16;;3075:77;;;:::o;3158:60::-;3186:3;3207:5;3200:12;;3158:60;;;:::o;3224:142::-;3274:9;3307:53;3325:34;3334:24;3352:5;3334:24;:::i;:::-;3325:34;:::i;:::-;3307:53;:::i;:::-;3294:66;;3224:142;;;:::o;3372:75::-;3415:3;3436:5;3429:12;;3372:75;;;:::o;3453:269::-;3563:39;3594:7;3563:39;:::i;:::-;3624:91;3673:41;3697:16;3673:41;:::i;:::-;3665:6;3658:4;3652:11;3624:91;:::i;:::-;3618:4;3611:105;3529:193;3453:269;;;:::o;3728:73::-;3773:3;3728:73;:::o;3807:189::-;3884:32;;:::i;:::-;3925:65;3983:6;3975;3969:4;3925:65;:::i;:::-;3860:136;3807:189;;:::o;4002:186::-;4062:120;4079:3;4072:5;4069:14;4062:120;;;4133:39;4170:1;4163:5;4133:39;:::i;:::-;4106:1;4099:5;4095:13;4086:22;;4062:120;;;4002:186;;:::o;4194:543::-;4295:2;4290:3;4287:11;4284:446;;;4329:38;4361:5;4329:38;:::i;:::-;4413:29;4431:10;4413:29;:::i;:::-;4403:8;4399:44;4596:2;4584:10;4581:18;4578:49;;;4617:8;4602:23;;4578:49;4640:80;4696:22;4714:3;4696:22;:::i;:::-;4686:8;4682:37;4669:11;4640:80;:::i;:::-;4299:431;;4284:446;4194:543;;;:::o;4743:117::-;4797:8;4847:5;4841:4;4837:16;4816:37;;4743:117;;;;:::o;4866:169::-;4910:6;4943:51;4991:1;4987:6;4979:5;4976:1;4972:13;4943:51;:::i;:::-;4939:56;5024:4;5018;5014:15;5004:25;;4917:118;4866:169;;;;:::o;5040:295::-;5116:4;5262:29;5287:3;5281:4;5262:29;:::i;:::-;5254:37;;5324:3;5321:1;5317:11;5311:4;5308:21;5300:29;;5040:295;;;;:::o;5340:1395::-;5457:37;5490:3;5457:37;:::i;:::-;5559:18;5551:6;5548:30;5545:56;;;5581:18;;:::i;:::-;5545:56;5625:38;5657:4;5651:11;5625:38;:::i;:::-;5710:67;5770:6;5762;5756:4;5710:67;:::i;:::-;5804:1;5828:4;5815:17;;5860:2;5852:6;5849:14;5877:1;5872:618;;;;6534:1;6551:6;6548:77;;;6600:9;6595:3;6591:19;6585:26;6576:35;;6548:77;6651:67;6711:6;6704:5;6651:67;:::i;:::-;6645:4;6638:81;6507:222;5842:887;;5872:618;5924:4;5920:9;5912:6;5908:22;5958:37;5990:4;5958:37;:::i;:::-;6017:1;6031:208;6045:7;6042:1;6039:14;6031:208;;;6124:9;6119:3;6115:19;6109:26;6101:6;6094:42;6175:1;6167:6;6163:14;6153:24;;6222:2;6211:9;6207:18;6194:31;;6068:4;6065:1;6061:12;6056:17;;6031:208;;;6267:6;6258:7;6255:19;6252:179;;;6325:9;6320:3;6316:19;6310:26;6368:48;6410:4;6402:6;6398:17;6387:9;6368:48;:::i;:::-;6360:6;6353:64;6275:156;6252:179;6477:1;6473;6465:6;6461:14;6457:22;6451:4;6444:36;5879:611;;;5842:887;;5432:1303;;;5340:1395;;:::o;6741:118::-;6828:24;6846:5;6828:24;:::i;:::-;6823:3;6816:37;6741:118;;:::o;6865:222::-;6958:4;6996:2;6985:9;6981:18;6973:26;;7009:71;7077:1;7066:9;7062:17;7053:6;7009:71;:::i;:::-;6865:222;;;;:::o;7093:180::-;7141:77;7138:1;7131:88;7238:4;7235:1;7228:15;7262:4;7259:1;7252:15;7279:410;7319:7;7342:20;7360:1;7342:20;:::i;:::-;7337:25;;7376:20;7394:1;7376:20;:::i;:::-;7371:25;;7431:1;7428;7424:9;7453:30;7471:11;7453:30;:::i;:::-;7442:41;;7632:1;7623:7;7619:15;7616:1;7613:22;7593:1;7586:9;7566:83;7543:139;;7662:18;;:::i;:::-;7543:139;7327:362;7279:410;;;;:::o;7695:180::-;7743:77;7740:1;7733:88;7840:4;7837:1;7830:15;7864:4;7861:1;7854:15;7881:185;7921:1;7938:20;7956:1;7938:20;:::i;:::-;7933:25;;7972:20;7990:1;7972:20;:::i;:::-;7967:25;;8011:1;8001:35;;8016:18;;:::i;:::-;8001:35;8058:1;8055;8051:9;8046:14;;7881:185;;;;:::o;8072:77::-;8109:7;8138:5;8127:16;;8072:77;;;:::o;8155:118::-;8242:24;8260:5;8242:24;:::i;:::-;8237:3;8230:37;8155:118;;:::o;8279:::-;8366:24;8384:5;8366:24;:::i;:::-;8361:3;8354:37;8279:118;;:::o;8403:664::-;8608:4;8646:3;8635:9;8631:19;8623:27;;8660:71;8728:1;8717:9;8713:17;8704:6;8660:71;:::i;:::-;8741:72;8809:2;8798:9;8794:18;8785:6;8741:72;:::i;:::-;8823;8891:2;8880:9;8876:18;8867:6;8823:72;:::i;:::-;8905;8973:2;8962:9;8958:18;8949:6;8905:72;:::i;:::-;8987:73;9055:3;9044:9;9040:19;9031:6;8987:73;:::i;:::-;8403:664;;;;;;;;:::o;9073:169::-;9157:11;9191:6;9186:3;9179:19;9231:4;9226:3;9222:14;9207:29;;9073:169;;;;:::o;9248:246::-;9329:1;9339:113;9353:6;9350:1;9347:13;9339:113;;;9438:1;9433:3;9429:11;9423:18;9419:1;9414:3;9410:11;9403:39;9375:2;9372:1;9368:10;9363:15;;9339:113;;;9486:1;9477:6;9472:3;9468:16;9461:27;9310:184;9248:246;;;:::o;9500:102::-;9541:6;9592:2;9588:7;9583:2;9576:5;9572:14;9568:28;9558:38;;9500:102;;;:::o;9608:377::-;9696:3;9724:39;9757:5;9724:39;:::i;:::-;9779:71;9843:6;9838:3;9779:71;:::i;:::-;9772:78;;9859:65;9917:6;9912:3;9905:4;9898:5;9894:16;9859:65;:::i;:::-;9949:29;9971:6;9949:29;:::i;:::-;9944:3;9940:39;9933:46;;9700:285;9608:377;;;;:::o;9991:313::-;10104:4;10142:2;10131:9;10127:18;10119:26;;10191:9;10185:4;10181:20;10177:1;10166:9;10162:17;10155:47;10219:78;10292:4;10283:6;10219:78;:::i;:::-;10211:86;;9991:313;;;;:::o;10310:98::-;10361:6;10395:5;10389:12;10379:22;;10310:98;;;:::o;10414:116::-;10465:4;10488:3;10480:11;;10518:4;10513:3;10509:14;10501:22;;10414:116;;;:::o;10536:154::-;10579:11;10615:29;10639:3;10633:10;10615:29;:::i;:::-;10678:5;10654:29;;10591:99;10536:154;;;:::o;10696:594::-;10780:5;10811:38;10843:5;10811:38;:::i;:::-;10874:5;10901:40;10935:5;10901:40;:::i;:::-;10889:52;;10960:35;10986:8;10960:35;:::i;:::-;10951:44;;11019:2;11011:6;11008:14;11005:278;;;11090:169;11175:66;11145:6;11141:2;11137:15;11134:1;11130:23;11090:169;:::i;:::-;11067:5;11046:227;11037:236;;11005:278;10786:504;;10696:594;;;:::o;11296:177::-;11436:29;11432:1;11424:6;11420:14;11413:53;11296:177;:::o;11479:366::-;11621:3;11642:67;11706:2;11701:3;11642:67;:::i;:::-;11635:74;;11718:93;11807:3;11718:93;:::i;:::-;11836:2;11831:3;11827:12;11820:19;;11479:366;;;:::o;11851:419::-;12017:4;12055:2;12044:9;12040:18;12032:26;;12104:9;12098:4;12094:20;12090:1;12079:9;12075:17;12068:47;12132:131;12258:4;12132:131;:::i;:::-;12124:139;;11851:419;;;:::o;12276:442::-;12425:4;12463:2;12452:9;12448:18;12440:26;;12476:71;12544:1;12533:9;12529:17;12520:6;12476:71;:::i;:::-;12557:72;12625:2;12614:9;12610:18;12601:6;12557:72;:::i;:::-;12639;12707:2;12696:9;12692:18;12683:6;12639:72;:::i;:::-;12276:442;;;;;;:::o;12724:122::-;12797:24;12815:5;12797:24;:::i;:::-;12790:5;12787:35;12777:63;;12836:1;12833;12826:12;12777:63;12724:122;:::o;12852:143::-;12909:5;12940:6;12934:13;12925:22;;12956:33;12983:5;12956:33;:::i;:::-;12852:143;;;;:::o;13001:351::-;13071:6;13120:2;13108:9;13099:7;13095:23;13091:32;13088:119;;;13126:79;;:::i;:::-;13088:119;13246:1;13271:64;13327:7;13318:6;13307:9;13303:22;13271:64;:::i;:::-;13261:74;;13217:128;13001:351;;;;:::o;13358:194::-;13398:4;13418:20;13436:1;13418:20;:::i;:::-;13413:25;;13452:20;13470:1;13452:20;:::i;:::-;13447:25;;13496:1;13493;13489:9;13481:17;;13520:1;13514:4;13511:11;13508:37;;;13525:18;;:::i;:::-;13508:37;13358:194;;;;:::o;13558:191::-;13598:3;13617:20;13635:1;13617:20;:::i;:::-;13612:25;;13651:20;13669:1;13651:20;:::i;:::-;13646:25;;13694:1;13691;13687:9;13680:16;;13715:3;13712:1;13709:10;13706:36;;;13722:18;;:::i;:::-;13706:36;13558:191;;;;:::o;13755:442::-;13904:4;13942:2;13931:9;13927:18;13919:26;;13955:71;14023:1;14012:9;14008:17;13999:6;13955:71;:::i;:::-;14036:72;14104:2;14093:9;14089:18;14080:6;14036:72;:::i;:::-;14118;14186:2;14175:9;14171:18;14162:6;14118:72;:::i;:::-;13755:442;;;;;;:::o;14203:222::-;14296:4;14334:2;14323:9;14319:18;14311:26;;14347:71;14415:1;14404:9;14400:17;14391:6;14347:71;:::i;:::-;14203:222;;;;:::o;390:3957:23:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DOMAIN_SEPARATOR_1366":{"entryPoint":1725,"id":1366,"parameterSlots":0,"returnSlots":1},"@_EIP712Name_3214":{"entryPoint":5508,"id":3214,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_3226":{"entryPoint":5567,"id":3226,"parameterSlots":0,"returnSlots":1},"@_add_6268":{"entryPoint":6952,"id":6268,"parameterSlots":2,"returnSlots":1},"@_approve_1026":{"entryPoint":4509,"id":1026,"parameterSlots":3,"returnSlots":0},"@_approve_1086":{"entryPoint":5835,"id":1086,"parameterSlots":4,"returnSlots":0},"@_buildDomainSeparator_3144":{"entryPoint":6626,"id":3144,"parameterSlots":0,"returnSlots":1},"@_checkOwner_84":{"entryPoint":5102,"id":84,"parameterSlots":0,"returnSlots":0},"@_contains_6371":{"entryPoint":8442,"id":6371,"parameterSlots":2,"returnSlots":1},"@_domainSeparatorV4_3123":{"entryPoint":4919,"id":3123,"parameterSlots":0,"returnSlots":1},"@_hashTypedDataV4_3160":{"entryPoint":5761,"id":3160,"parameterSlots":1,"returnSlots":1},"@_msgSender_1984":{"entryPoint":4501,"id":1984,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_1134":{"entryPoint":4527,"id":1134,"parameterSlots":3,"returnSlots":0},"@_throwError_2999":{"entryPoint":7373,"id":2999,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":5237,"id":146,"parameterSlots":1,"returnSlots":0},"@_transfer_865":{"entryPoint":4675,"id":865,"parameterSlots":3,"returnSlots":0},"@_update_7146":{"entryPoint":6306,"id":7146,"parameterSlots":3,"returnSlots":0},"@_update_942":{"entryPoint":7777,"id":942,"parameterSlots":3,"returnSlots":0},"@_useNonce_2044":{"entryPoint":5674,"id":2044,"parameterSlots":1,"returnSlots":1},"@addCanTrade_7090":{"entryPoint":3616,"id":7090,"parameterSlots":2,"returnSlots":0},"@add_6568":{"entryPoint":5626,"id":6568,"parameterSlots":2,"returnSlots":1},"@addressToString_7249":{"entryPoint":1969,"id":7249,"parameterSlots":1,"returnSlots":1},"@allowance_762":{"entryPoint":4194,"id":762,"parameterSlots":2,"returnSlots":1},"@approve_786":{"entryPoint":1586,"id":786,"parameterSlots":2,"returnSlots":1},"@balanceOf_721":{"entryPoint":2742,"id":721,"parameterSlots":1,"returnSlots":1},"@byteLength_2188":{"entryPoint":8477,"id":2188,"parameterSlots":1,"returnSlots":1},"@concatenateAddressWithString_7274":{"entryPoint":3447,"id":7274,"parameterSlots":2,"returnSlots":1},"@contains_6622":{"entryPoint":7729,"id":6622,"parameterSlots":2,"returnSlots":1},"@decimals_699":{"entryPoint":1716,"id":699,"parameterSlots":0,"returnSlots":1},"@eip712Domain_3202":{"entryPoint":2890,"id":3202,"parameterSlots":0,"returnSlots":7},"@enableTrading_7020":{"entryPoint":3060,"id":7020,"parameterSlots":0,"returnSlots":0},"@initialLaunch_6850":{"entryPoint":3540,"id":6850,"parameterSlots":0,"returnSlots":0},"@investors_6853":{"entryPoint":3221,"id":6853,"parameterSlots":0,"returnSlots":0},"@name_681":{"entryPoint":1440,"id":681,"parameterSlots":0,"returnSlots":1},"@nonces_1356":{"entryPoint":2834,"id":1356,"parameterSlots":1,"returnSlots":1},"@nonces_2029":{"entryPoint":5435,"id":2029,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":3259,"id":67,"parameterSlots":0,"returnSlots":1},"@permit_1339":{"entryPoint":3866,"id":1339,"parameterSlots":7,"returnSlots":0},"@preSale_6847":{"entryPoint":1931,"id":6847,"parameterSlots":0,"returnSlots":0},"@preservationProjects_6859":{"entryPoint":2852,"id":6859,"parameterSlots":0,"returnSlots":0},"@recover_2950":{"entryPoint":5787,"id":2950,"parameterSlots":4,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":2814,"id":98,"parameterSlots":0,"returnSlots":0},"@setTaxHandler_7046":{"entryPoint":1740,"id":7046,"parameterSlots":1,"returnSlots":0},"@symbol_690":{"entryPoint":3301,"id":690,"parameterSlots":0,"returnSlots":1},"@taxHandler_6869":{"entryPoint":1621,"id":6869,"parameterSlots":0,"returnSlots":0},"@teamAndFounders_6856":{"entryPoint":3578,"id":6856,"parameterSlots":0,"returnSlots":0},"@thirdPartyServices_6844":{"entryPoint":4463,"id":6844,"parameterSlots":0,"returnSlots":0},"@toStringWithFallback_2255":{"entryPoint":6776,"id":2255,"parameterSlots":2,"returnSlots":1},"@toString_2156":{"entryPoint":8326,"id":2156,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_3300":{"entryPoint":7064,"id":3300,"parameterSlots":2,"returnSlots":1},"@totalSupply_708":{"entryPoint":1659,"id":708,"parameterSlots":0,"returnSlots":1},"@tradingEnabled_6871":{"entryPoint":1912,"id":6871,"parameterSlots":0,"returnSlots":0},"@transferFrom_818":{"entryPoint":1669,"id":818,"parameterSlots":3,"returnSlots":1},"@transferOwnership_126":{"entryPoint":4329,"id":126,"parameterSlots":1,"returnSlots":0},"@transfer_745":{"entryPoint":3505,"id":745,"parameterSlots":2,"returnSlots":1},"@tryRecover_2914":{"entryPoint":7129,"id":2914,"parameterSlots":4,"returnSlots":3},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":10040,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":8828,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_calldata_ptr":{"entryPoint":10254,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bytes32":{"entryPoint":10484,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":10106,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":8882,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":11853,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":10440,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":9375,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":10667,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":9185,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":10505,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_string_memory_ptr":{"entryPoint":10152,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":8903,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr":{"entryPoint":10340,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":11874,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":9580,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":9420,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":9617,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":8979,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes1_to_t_bytes1_fromStack":{"entryPoint":9506,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":9333,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_ITaxHandler_$7403_to_t_address_fromStack":{"entryPoint":9101,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":8644,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":11237,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_24cf83481f2a8ba90e1c3f2ad6b040e1487e7c57c8c9c5939238bafe3879f015_to_t_string_memory_ptr_fromStack":{"entryPoint":11363,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7_to_t_string_memory_ptr_fromStack":{"entryPoint":11731,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4_to_t_string_memory_ptr_fromStack":{"entryPoint":11159,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ba7cd66ed381e90a6a6f5c81315eeba2f99d0bb92ba7388f35e237d2bf061d88_to_t_string_memory_ptr_fromStack":{"entryPoint":11471,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":9565,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":9143,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":9281,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":11286,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":9435,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":10827,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":11798,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":11635,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":8994,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":9711,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":9348,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":11538,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":11971,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":12054,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_contract$_ITaxHandler_$7403__to_t_address__fromStack_reversed":{"entryPoint":9116,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8701,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24cf83481f2a8ba90e1c3f2ad6b040e1487e7c57c8c9c5939238bafe3879f015__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11398,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11766,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11194,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ba7cd66ed381e90a6a6f5c81315eeba2f99d0bb92ba7388f35e237d2bf061d88__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11506,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":9158,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":9296,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":9949,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":8735,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":9976,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":9549,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":9521,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":8557,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":9604,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":9532,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":8568,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":11226,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":10962,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":11014,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":11919,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":8787,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":8967,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes1":{"entryPoint":9462,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":9323,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":8755,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":8849,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":9268,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_ITaxHandler_$7403_to_t_address":{"entryPoint":9083,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":9065,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":9031,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":10025,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":8585,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":10778,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":9900,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":9021,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":10915,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":12123,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":10731,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":10868,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":9853,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":10244,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":9843,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":10249,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":9848,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":8750,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":8745,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":8627,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_24cf83481f2a8ba90e1c3f2ad6b040e1487e7c57c8c9c5939238bafe3879f015":{"entryPoint":11322,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7":{"entryPoint":11690,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4":{"entryPoint":11080,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ba7cd66ed381e90a6a6f5c81315eeba2f99d0bb92ba7388f35e237d2bf061d88":{"entryPoint":11430,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":8805,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":10461,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":8859,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":10417,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:27018:27","nodeType":"YulBlock","src":"0:27018:27","statements":[{"body":{"nativeSrc":"66:40:27","nodeType":"YulBlock","src":"66:40:27","statements":[{"nativeSrc":"77:22:27","nodeType":"YulAssignment","src":"77:22:27","value":{"arguments":[{"name":"value","nativeSrc":"93:5:27","nodeType":"YulIdentifier","src":"93:5:27"}],"functionName":{"name":"mload","nativeSrc":"87:5:27","nodeType":"YulIdentifier","src":"87:5:27"},"nativeSrc":"87:12:27","nodeType":"YulFunctionCall","src":"87:12:27"},"variableNames":[{"name":"length","nativeSrc":"77:6:27","nodeType":"YulIdentifier","src":"77:6:27"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"7:99:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"49:5:27","nodeType":"YulTypedName","src":"49:5:27","type":""}],"returnVariables":[{"name":"length","nativeSrc":"59:6:27","nodeType":"YulTypedName","src":"59:6:27","type":""}],"src":"7:99:27"},{"body":{"nativeSrc":"208:73:27","nodeType":"YulBlock","src":"208:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"225:3:27","nodeType":"YulIdentifier","src":"225:3:27"},{"name":"length","nativeSrc":"230:6:27","nodeType":"YulIdentifier","src":"230:6:27"}],"functionName":{"name":"mstore","nativeSrc":"218:6:27","nodeType":"YulIdentifier","src":"218:6:27"},"nativeSrc":"218:19:27","nodeType":"YulFunctionCall","src":"218:19:27"},"nativeSrc":"218:19:27","nodeType":"YulExpressionStatement","src":"218:19:27"},{"nativeSrc":"246:29:27","nodeType":"YulAssignment","src":"246:29:27","value":{"arguments":[{"name":"pos","nativeSrc":"265:3:27","nodeType":"YulIdentifier","src":"265:3:27"},{"kind":"number","nativeSrc":"270:4:27","nodeType":"YulLiteral","src":"270:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"261:3:27","nodeType":"YulIdentifier","src":"261:3:27"},"nativeSrc":"261:14:27","nodeType":"YulFunctionCall","src":"261:14:27"},"variableNames":[{"name":"updated_pos","nativeSrc":"246:11:27","nodeType":"YulIdentifier","src":"246:11:27"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"112:169:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"180:3:27","nodeType":"YulTypedName","src":"180:3:27","type":""},{"name":"length","nativeSrc":"185:6:27","nodeType":"YulTypedName","src":"185:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"196:11:27","nodeType":"YulTypedName","src":"196:11:27","type":""}],"src":"112:169:27"},{"body":{"nativeSrc":"349:184:27","nodeType":"YulBlock","src":"349:184:27","statements":[{"nativeSrc":"359:10:27","nodeType":"YulVariableDeclaration","src":"359:10:27","value":{"kind":"number","nativeSrc":"368:1:27","nodeType":"YulLiteral","src":"368:1:27","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"363:1:27","nodeType":"YulTypedName","src":"363:1:27","type":""}]},{"body":{"nativeSrc":"428:63:27","nodeType":"YulBlock","src":"428:63:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"453:3:27","nodeType":"YulIdentifier","src":"453:3:27"},{"name":"i","nativeSrc":"458:1:27","nodeType":"YulIdentifier","src":"458:1:27"}],"functionName":{"name":"add","nativeSrc":"449:3:27","nodeType":"YulIdentifier","src":"449:3:27"},"nativeSrc":"449:11:27","nodeType":"YulFunctionCall","src":"449:11:27"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"472:3:27","nodeType":"YulIdentifier","src":"472:3:27"},{"name":"i","nativeSrc":"477:1:27","nodeType":"YulIdentifier","src":"477:1:27"}],"functionName":{"name":"add","nativeSrc":"468:3:27","nodeType":"YulIdentifier","src":"468:3:27"},"nativeSrc":"468:11:27","nodeType":"YulFunctionCall","src":"468:11:27"}],"functionName":{"name":"mload","nativeSrc":"462:5:27","nodeType":"YulIdentifier","src":"462:5:27"},"nativeSrc":"462:18:27","nodeType":"YulFunctionCall","src":"462:18:27"}],"functionName":{"name":"mstore","nativeSrc":"442:6:27","nodeType":"YulIdentifier","src":"442:6:27"},"nativeSrc":"442:39:27","nodeType":"YulFunctionCall","src":"442:39:27"},"nativeSrc":"442:39:27","nodeType":"YulExpressionStatement","src":"442:39:27"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"389:1:27","nodeType":"YulIdentifier","src":"389:1:27"},{"name":"length","nativeSrc":"392:6:27","nodeType":"YulIdentifier","src":"392:6:27"}],"functionName":{"name":"lt","nativeSrc":"386:2:27","nodeType":"YulIdentifier","src":"386:2:27"},"nativeSrc":"386:13:27","nodeType":"YulFunctionCall","src":"386:13:27"},"nativeSrc":"378:113:27","nodeType":"YulForLoop","post":{"nativeSrc":"400:19:27","nodeType":"YulBlock","src":"400:19:27","statements":[{"nativeSrc":"402:15:27","nodeType":"YulAssignment","src":"402:15:27","value":{"arguments":[{"name":"i","nativeSrc":"411:1:27","nodeType":"YulIdentifier","src":"411:1:27"},{"kind":"number","nativeSrc":"414:2:27","nodeType":"YulLiteral","src":"414:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"407:3:27","nodeType":"YulIdentifier","src":"407:3:27"},"nativeSrc":"407:10:27","nodeType":"YulFunctionCall","src":"407:10:27"},"variableNames":[{"name":"i","nativeSrc":"402:1:27","nodeType":"YulIdentifier","src":"402:1:27"}]}]},"pre":{"nativeSrc":"382:3:27","nodeType":"YulBlock","src":"382:3:27","statements":[]},"src":"378:113:27"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"511:3:27","nodeType":"YulIdentifier","src":"511:3:27"},{"name":"length","nativeSrc":"516:6:27","nodeType":"YulIdentifier","src":"516:6:27"}],"functionName":{"name":"add","nativeSrc":"507:3:27","nodeType":"YulIdentifier","src":"507:3:27"},"nativeSrc":"507:16:27","nodeType":"YulFunctionCall","src":"507:16:27"},{"kind":"number","nativeSrc":"525:1:27","nodeType":"YulLiteral","src":"525:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"500:6:27","nodeType":"YulIdentifier","src":"500:6:27"},"nativeSrc":"500:27:27","nodeType":"YulFunctionCall","src":"500:27:27"},"nativeSrc":"500:27:27","nodeType":"YulExpressionStatement","src":"500:27:27"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"287:246:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"331:3:27","nodeType":"YulTypedName","src":"331:3:27","type":""},{"name":"dst","nativeSrc":"336:3:27","nodeType":"YulTypedName","src":"336:3:27","type":""},{"name":"length","nativeSrc":"341:6:27","nodeType":"YulTypedName","src":"341:6:27","type":""}],"src":"287:246:27"},{"body":{"nativeSrc":"587:54:27","nodeType":"YulBlock","src":"587:54:27","statements":[{"nativeSrc":"597:38:27","nodeType":"YulAssignment","src":"597:38:27","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"615:5:27","nodeType":"YulIdentifier","src":"615:5:27"},{"kind":"number","nativeSrc":"622:2:27","nodeType":"YulLiteral","src":"622:2:27","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"611:3:27","nodeType":"YulIdentifier","src":"611:3:27"},"nativeSrc":"611:14:27","nodeType":"YulFunctionCall","src":"611:14:27"},{"arguments":[{"kind":"number","nativeSrc":"631:2:27","nodeType":"YulLiteral","src":"631:2:27","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"627:3:27","nodeType":"YulIdentifier","src":"627:3:27"},"nativeSrc":"627:7:27","nodeType":"YulFunctionCall","src":"627:7:27"}],"functionName":{"name":"and","nativeSrc":"607:3:27","nodeType":"YulIdentifier","src":"607:3:27"},"nativeSrc":"607:28:27","nodeType":"YulFunctionCall","src":"607:28:27"},"variableNames":[{"name":"result","nativeSrc":"597:6:27","nodeType":"YulIdentifier","src":"597:6:27"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"539:102:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"570:5:27","nodeType":"YulTypedName","src":"570:5:27","type":""}],"returnVariables":[{"name":"result","nativeSrc":"580:6:27","nodeType":"YulTypedName","src":"580:6:27","type":""}],"src":"539:102:27"},{"body":{"nativeSrc":"739:285:27","nodeType":"YulBlock","src":"739:285:27","statements":[{"nativeSrc":"749:53:27","nodeType":"YulVariableDeclaration","src":"749:53:27","value":{"arguments":[{"name":"value","nativeSrc":"796:5:27","nodeType":"YulIdentifier","src":"796:5:27"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"763:32:27","nodeType":"YulIdentifier","src":"763:32:27"},"nativeSrc":"763:39:27","nodeType":"YulFunctionCall","src":"763:39:27"},"variables":[{"name":"length","nativeSrc":"753:6:27","nodeType":"YulTypedName","src":"753:6:27","type":""}]},{"nativeSrc":"811:78:27","nodeType":"YulAssignment","src":"811:78:27","value":{"arguments":[{"name":"pos","nativeSrc":"877:3:27","nodeType":"YulIdentifier","src":"877:3:27"},{"name":"length","nativeSrc":"882:6:27","nodeType":"YulIdentifier","src":"882:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"818:58:27","nodeType":"YulIdentifier","src":"818:58:27"},"nativeSrc":"818:71:27","nodeType":"YulFunctionCall","src":"818:71:27"},"variableNames":[{"name":"pos","nativeSrc":"811:3:27","nodeType":"YulIdentifier","src":"811:3:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"937:5:27","nodeType":"YulIdentifier","src":"937:5:27"},{"kind":"number","nativeSrc":"944:4:27","nodeType":"YulLiteral","src":"944:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"933:3:27","nodeType":"YulIdentifier","src":"933:3:27"},"nativeSrc":"933:16:27","nodeType":"YulFunctionCall","src":"933:16:27"},{"name":"pos","nativeSrc":"951:3:27","nodeType":"YulIdentifier","src":"951:3:27"},{"name":"length","nativeSrc":"956:6:27","nodeType":"YulIdentifier","src":"956:6:27"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"898:34:27","nodeType":"YulIdentifier","src":"898:34:27"},"nativeSrc":"898:65:27","nodeType":"YulFunctionCall","src":"898:65:27"},"nativeSrc":"898:65:27","nodeType":"YulExpressionStatement","src":"898:65:27"},{"nativeSrc":"972:46:27","nodeType":"YulAssignment","src":"972:46:27","value":{"arguments":[{"name":"pos","nativeSrc":"983:3:27","nodeType":"YulIdentifier","src":"983:3:27"},{"arguments":[{"name":"length","nativeSrc":"1010:6:27","nodeType":"YulIdentifier","src":"1010:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"988:21:27","nodeType":"YulIdentifier","src":"988:21:27"},"nativeSrc":"988:29:27","nodeType":"YulFunctionCall","src":"988:29:27"}],"functionName":{"name":"add","nativeSrc":"979:3:27","nodeType":"YulIdentifier","src":"979:3:27"},"nativeSrc":"979:39:27","nodeType":"YulFunctionCall","src":"979:39:27"},"variableNames":[{"name":"end","nativeSrc":"972:3:27","nodeType":"YulIdentifier","src":"972:3:27"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"647:377:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"720:5:27","nodeType":"YulTypedName","src":"720:5:27","type":""},{"name":"pos","nativeSrc":"727:3:27","nodeType":"YulTypedName","src":"727:3:27","type":""}],"returnVariables":[{"name":"end","nativeSrc":"735:3:27","nodeType":"YulTypedName","src":"735:3:27","type":""}],"src":"647:377:27"},{"body":{"nativeSrc":"1148:195:27","nodeType":"YulBlock","src":"1148:195:27","statements":[{"nativeSrc":"1158:26:27","nodeType":"YulAssignment","src":"1158:26:27","value":{"arguments":[{"name":"headStart","nativeSrc":"1170:9:27","nodeType":"YulIdentifier","src":"1170:9:27"},{"kind":"number","nativeSrc":"1181:2:27","nodeType":"YulLiteral","src":"1181:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1166:3:27","nodeType":"YulIdentifier","src":"1166:3:27"},"nativeSrc":"1166:18:27","nodeType":"YulFunctionCall","src":"1166:18:27"},"variableNames":[{"name":"tail","nativeSrc":"1158:4:27","nodeType":"YulIdentifier","src":"1158:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1205:9:27","nodeType":"YulIdentifier","src":"1205:9:27"},{"kind":"number","nativeSrc":"1216:1:27","nodeType":"YulLiteral","src":"1216:1:27","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1201:3:27","nodeType":"YulIdentifier","src":"1201:3:27"},"nativeSrc":"1201:17:27","nodeType":"YulFunctionCall","src":"1201:17:27"},{"arguments":[{"name":"tail","nativeSrc":"1224:4:27","nodeType":"YulIdentifier","src":"1224:4:27"},{"name":"headStart","nativeSrc":"1230:9:27","nodeType":"YulIdentifier","src":"1230:9:27"}],"functionName":{"name":"sub","nativeSrc":"1220:3:27","nodeType":"YulIdentifier","src":"1220:3:27"},"nativeSrc":"1220:20:27","nodeType":"YulFunctionCall","src":"1220:20:27"}],"functionName":{"name":"mstore","nativeSrc":"1194:6:27","nodeType":"YulIdentifier","src":"1194:6:27"},"nativeSrc":"1194:47:27","nodeType":"YulFunctionCall","src":"1194:47:27"},"nativeSrc":"1194:47:27","nodeType":"YulExpressionStatement","src":"1194:47:27"},{"nativeSrc":"1250:86:27","nodeType":"YulAssignment","src":"1250:86:27","value":{"arguments":[{"name":"value0","nativeSrc":"1322:6:27","nodeType":"YulIdentifier","src":"1322:6:27"},{"name":"tail","nativeSrc":"1331:4:27","nodeType":"YulIdentifier","src":"1331:4:27"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"1258:63:27","nodeType":"YulIdentifier","src":"1258:63:27"},"nativeSrc":"1258:78:27","nodeType":"YulFunctionCall","src":"1258:78:27"},"variableNames":[{"name":"tail","nativeSrc":"1250:4:27","nodeType":"YulIdentifier","src":"1250:4:27"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1030:313:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1120:9:27","nodeType":"YulTypedName","src":"1120:9:27","type":""},{"name":"value0","nativeSrc":"1132:6:27","nodeType":"YulTypedName","src":"1132:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1143:4:27","nodeType":"YulTypedName","src":"1143:4:27","type":""}],"src":"1030:313:27"},{"body":{"nativeSrc":"1389:35:27","nodeType":"YulBlock","src":"1389:35:27","statements":[{"nativeSrc":"1399:19:27","nodeType":"YulAssignment","src":"1399:19:27","value":{"arguments":[{"kind":"number","nativeSrc":"1415:2:27","nodeType":"YulLiteral","src":"1415:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1409:5:27","nodeType":"YulIdentifier","src":"1409:5:27"},"nativeSrc":"1409:9:27","nodeType":"YulFunctionCall","src":"1409:9:27"},"variableNames":[{"name":"memPtr","nativeSrc":"1399:6:27","nodeType":"YulIdentifier","src":"1399:6:27"}]}]},"name":"allocate_unbounded","nativeSrc":"1349:75:27","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"1382:6:27","nodeType":"YulTypedName","src":"1382:6:27","type":""}],"src":"1349:75:27"},{"body":{"nativeSrc":"1519:28:27","nodeType":"YulBlock","src":"1519:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1536:1:27","nodeType":"YulLiteral","src":"1536:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"1539:1:27","nodeType":"YulLiteral","src":"1539:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1529:6:27","nodeType":"YulIdentifier","src":"1529:6:27"},"nativeSrc":"1529:12:27","nodeType":"YulFunctionCall","src":"1529:12:27"},"nativeSrc":"1529:12:27","nodeType":"YulExpressionStatement","src":"1529:12:27"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1430:117:27","nodeType":"YulFunctionDefinition","src":"1430:117:27"},{"body":{"nativeSrc":"1642:28:27","nodeType":"YulBlock","src":"1642:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1659:1:27","nodeType":"YulLiteral","src":"1659:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"1662:1:27","nodeType":"YulLiteral","src":"1662:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1652:6:27","nodeType":"YulIdentifier","src":"1652:6:27"},"nativeSrc":"1652:12:27","nodeType":"YulFunctionCall","src":"1652:12:27"},"nativeSrc":"1652:12:27","nodeType":"YulExpressionStatement","src":"1652:12:27"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"1553:117:27","nodeType":"YulFunctionDefinition","src":"1553:117:27"},{"body":{"nativeSrc":"1721:81:27","nodeType":"YulBlock","src":"1721:81:27","statements":[{"nativeSrc":"1731:65:27","nodeType":"YulAssignment","src":"1731:65:27","value":{"arguments":[{"name":"value","nativeSrc":"1746:5:27","nodeType":"YulIdentifier","src":"1746:5:27"},{"kind":"number","nativeSrc":"1753:42:27","nodeType":"YulLiteral","src":"1753:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1742:3:27","nodeType":"YulIdentifier","src":"1742:3:27"},"nativeSrc":"1742:54:27","nodeType":"YulFunctionCall","src":"1742:54:27"},"variableNames":[{"name":"cleaned","nativeSrc":"1731:7:27","nodeType":"YulIdentifier","src":"1731:7:27"}]}]},"name":"cleanup_t_uint160","nativeSrc":"1676:126:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1703:5:27","nodeType":"YulTypedName","src":"1703:5:27","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1713:7:27","nodeType":"YulTypedName","src":"1713:7:27","type":""}],"src":"1676:126:27"},{"body":{"nativeSrc":"1853:51:27","nodeType":"YulBlock","src":"1853:51:27","statements":[{"nativeSrc":"1863:35:27","nodeType":"YulAssignment","src":"1863:35:27","value":{"arguments":[{"name":"value","nativeSrc":"1892:5:27","nodeType":"YulIdentifier","src":"1892:5:27"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1874:17:27","nodeType":"YulIdentifier","src":"1874:17:27"},"nativeSrc":"1874:24:27","nodeType":"YulFunctionCall","src":"1874:24:27"},"variableNames":[{"name":"cleaned","nativeSrc":"1863:7:27","nodeType":"YulIdentifier","src":"1863:7:27"}]}]},"name":"cleanup_t_address","nativeSrc":"1808:96:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1835:5:27","nodeType":"YulTypedName","src":"1835:5:27","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1845:7:27","nodeType":"YulTypedName","src":"1845:7:27","type":""}],"src":"1808:96:27"},{"body":{"nativeSrc":"1953:79:27","nodeType":"YulBlock","src":"1953:79:27","statements":[{"body":{"nativeSrc":"2010:16:27","nodeType":"YulBlock","src":"2010:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2019:1:27","nodeType":"YulLiteral","src":"2019:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"2022:1:27","nodeType":"YulLiteral","src":"2022:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2012:6:27","nodeType":"YulIdentifier","src":"2012:6:27"},"nativeSrc":"2012:12:27","nodeType":"YulFunctionCall","src":"2012:12:27"},"nativeSrc":"2012:12:27","nodeType":"YulExpressionStatement","src":"2012:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1976:5:27","nodeType":"YulIdentifier","src":"1976:5:27"},{"arguments":[{"name":"value","nativeSrc":"2001:5:27","nodeType":"YulIdentifier","src":"2001:5:27"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1983:17:27","nodeType":"YulIdentifier","src":"1983:17:27"},"nativeSrc":"1983:24:27","nodeType":"YulFunctionCall","src":"1983:24:27"}],"functionName":{"name":"eq","nativeSrc":"1973:2:27","nodeType":"YulIdentifier","src":"1973:2:27"},"nativeSrc":"1973:35:27","nodeType":"YulFunctionCall","src":"1973:35:27"}],"functionName":{"name":"iszero","nativeSrc":"1966:6:27","nodeType":"YulIdentifier","src":"1966:6:27"},"nativeSrc":"1966:43:27","nodeType":"YulFunctionCall","src":"1966:43:27"},"nativeSrc":"1963:63:27","nodeType":"YulIf","src":"1963:63:27"}]},"name":"validator_revert_t_address","nativeSrc":"1910:122:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1946:5:27","nodeType":"YulTypedName","src":"1946:5:27","type":""}],"src":"1910:122:27"},{"body":{"nativeSrc":"2090:87:27","nodeType":"YulBlock","src":"2090:87:27","statements":[{"nativeSrc":"2100:29:27","nodeType":"YulAssignment","src":"2100:29:27","value":{"arguments":[{"name":"offset","nativeSrc":"2122:6:27","nodeType":"YulIdentifier","src":"2122:6:27"}],"functionName":{"name":"calldataload","nativeSrc":"2109:12:27","nodeType":"YulIdentifier","src":"2109:12:27"},"nativeSrc":"2109:20:27","nodeType":"YulFunctionCall","src":"2109:20:27"},"variableNames":[{"name":"value","nativeSrc":"2100:5:27","nodeType":"YulIdentifier","src":"2100:5:27"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2165:5:27","nodeType":"YulIdentifier","src":"2165:5:27"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"2138:26:27","nodeType":"YulIdentifier","src":"2138:26:27"},"nativeSrc":"2138:33:27","nodeType":"YulFunctionCall","src":"2138:33:27"},"nativeSrc":"2138:33:27","nodeType":"YulExpressionStatement","src":"2138:33:27"}]},"name":"abi_decode_t_address","nativeSrc":"2038:139:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2068:6:27","nodeType":"YulTypedName","src":"2068:6:27","type":""},{"name":"end","nativeSrc":"2076:3:27","nodeType":"YulTypedName","src":"2076:3:27","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2084:5:27","nodeType":"YulTypedName","src":"2084:5:27","type":""}],"src":"2038:139:27"},{"body":{"nativeSrc":"2228:32:27","nodeType":"YulBlock","src":"2228:32:27","statements":[{"nativeSrc":"2238:16:27","nodeType":"YulAssignment","src":"2238:16:27","value":{"name":"value","nativeSrc":"2249:5:27","nodeType":"YulIdentifier","src":"2249:5:27"},"variableNames":[{"name":"cleaned","nativeSrc":"2238:7:27","nodeType":"YulIdentifier","src":"2238:7:27"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2183:77:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2210:5:27","nodeType":"YulTypedName","src":"2210:5:27","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2220:7:27","nodeType":"YulTypedName","src":"2220:7:27","type":""}],"src":"2183:77:27"},{"body":{"nativeSrc":"2309:79:27","nodeType":"YulBlock","src":"2309:79:27","statements":[{"body":{"nativeSrc":"2366:16:27","nodeType":"YulBlock","src":"2366:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2375:1:27","nodeType":"YulLiteral","src":"2375:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"2378:1:27","nodeType":"YulLiteral","src":"2378:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2368:6:27","nodeType":"YulIdentifier","src":"2368:6:27"},"nativeSrc":"2368:12:27","nodeType":"YulFunctionCall","src":"2368:12:27"},"nativeSrc":"2368:12:27","nodeType":"YulExpressionStatement","src":"2368:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2332:5:27","nodeType":"YulIdentifier","src":"2332:5:27"},{"arguments":[{"name":"value","nativeSrc":"2357:5:27","nodeType":"YulIdentifier","src":"2357:5:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2339:17:27","nodeType":"YulIdentifier","src":"2339:17:27"},"nativeSrc":"2339:24:27","nodeType":"YulFunctionCall","src":"2339:24:27"}],"functionName":{"name":"eq","nativeSrc":"2329:2:27","nodeType":"YulIdentifier","src":"2329:2:27"},"nativeSrc":"2329:35:27","nodeType":"YulFunctionCall","src":"2329:35:27"}],"functionName":{"name":"iszero","nativeSrc":"2322:6:27","nodeType":"YulIdentifier","src":"2322:6:27"},"nativeSrc":"2322:43:27","nodeType":"YulFunctionCall","src":"2322:43:27"},"nativeSrc":"2319:63:27","nodeType":"YulIf","src":"2319:63:27"}]},"name":"validator_revert_t_uint256","nativeSrc":"2266:122:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2302:5:27","nodeType":"YulTypedName","src":"2302:5:27","type":""}],"src":"2266:122:27"},{"body":{"nativeSrc":"2446:87:27","nodeType":"YulBlock","src":"2446:87:27","statements":[{"nativeSrc":"2456:29:27","nodeType":"YulAssignment","src":"2456:29:27","value":{"arguments":[{"name":"offset","nativeSrc":"2478:6:27","nodeType":"YulIdentifier","src":"2478:6:27"}],"functionName":{"name":"calldataload","nativeSrc":"2465:12:27","nodeType":"YulIdentifier","src":"2465:12:27"},"nativeSrc":"2465:20:27","nodeType":"YulFunctionCall","src":"2465:20:27"},"variableNames":[{"name":"value","nativeSrc":"2456:5:27","nodeType":"YulIdentifier","src":"2456:5:27"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2521:5:27","nodeType":"YulIdentifier","src":"2521:5:27"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"2494:26:27","nodeType":"YulIdentifier","src":"2494:26:27"},"nativeSrc":"2494:33:27","nodeType":"YulFunctionCall","src":"2494:33:27"},"nativeSrc":"2494:33:27","nodeType":"YulExpressionStatement","src":"2494:33:27"}]},"name":"abi_decode_t_uint256","nativeSrc":"2394:139:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2424:6:27","nodeType":"YulTypedName","src":"2424:6:27","type":""},{"name":"end","nativeSrc":"2432:3:27","nodeType":"YulTypedName","src":"2432:3:27","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2440:5:27","nodeType":"YulTypedName","src":"2440:5:27","type":""}],"src":"2394:139:27"},{"body":{"nativeSrc":"2622:391:27","nodeType":"YulBlock","src":"2622:391:27","statements":[{"body":{"nativeSrc":"2668:83:27","nodeType":"YulBlock","src":"2668:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2670:77:27","nodeType":"YulIdentifier","src":"2670:77:27"},"nativeSrc":"2670:79:27","nodeType":"YulFunctionCall","src":"2670:79:27"},"nativeSrc":"2670:79:27","nodeType":"YulExpressionStatement","src":"2670:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2643:7:27","nodeType":"YulIdentifier","src":"2643:7:27"},{"name":"headStart","nativeSrc":"2652:9:27","nodeType":"YulIdentifier","src":"2652:9:27"}],"functionName":{"name":"sub","nativeSrc":"2639:3:27","nodeType":"YulIdentifier","src":"2639:3:27"},"nativeSrc":"2639:23:27","nodeType":"YulFunctionCall","src":"2639:23:27"},{"kind":"number","nativeSrc":"2664:2:27","nodeType":"YulLiteral","src":"2664:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2635:3:27","nodeType":"YulIdentifier","src":"2635:3:27"},"nativeSrc":"2635:32:27","nodeType":"YulFunctionCall","src":"2635:32:27"},"nativeSrc":"2632:119:27","nodeType":"YulIf","src":"2632:119:27"},{"nativeSrc":"2761:117:27","nodeType":"YulBlock","src":"2761:117:27","statements":[{"nativeSrc":"2776:15:27","nodeType":"YulVariableDeclaration","src":"2776:15:27","value":{"kind":"number","nativeSrc":"2790:1:27","nodeType":"YulLiteral","src":"2790:1:27","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2780:6:27","nodeType":"YulTypedName","src":"2780:6:27","type":""}]},{"nativeSrc":"2805:63:27","nodeType":"YulAssignment","src":"2805:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2840:9:27","nodeType":"YulIdentifier","src":"2840:9:27"},{"name":"offset","nativeSrc":"2851:6:27","nodeType":"YulIdentifier","src":"2851:6:27"}],"functionName":{"name":"add","nativeSrc":"2836:3:27","nodeType":"YulIdentifier","src":"2836:3:27"},"nativeSrc":"2836:22:27","nodeType":"YulFunctionCall","src":"2836:22:27"},{"name":"dataEnd","nativeSrc":"2860:7:27","nodeType":"YulIdentifier","src":"2860:7:27"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2815:20:27","nodeType":"YulIdentifier","src":"2815:20:27"},"nativeSrc":"2815:53:27","nodeType":"YulFunctionCall","src":"2815:53:27"},"variableNames":[{"name":"value0","nativeSrc":"2805:6:27","nodeType":"YulIdentifier","src":"2805:6:27"}]}]},{"nativeSrc":"2888:118:27","nodeType":"YulBlock","src":"2888:118:27","statements":[{"nativeSrc":"2903:16:27","nodeType":"YulVariableDeclaration","src":"2903:16:27","value":{"kind":"number","nativeSrc":"2917:2:27","nodeType":"YulLiteral","src":"2917:2:27","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2907:6:27","nodeType":"YulTypedName","src":"2907:6:27","type":""}]},{"nativeSrc":"2933:63:27","nodeType":"YulAssignment","src":"2933:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2968:9:27","nodeType":"YulIdentifier","src":"2968:9:27"},{"name":"offset","nativeSrc":"2979:6:27","nodeType":"YulIdentifier","src":"2979:6:27"}],"functionName":{"name":"add","nativeSrc":"2964:3:27","nodeType":"YulIdentifier","src":"2964:3:27"},"nativeSrc":"2964:22:27","nodeType":"YulFunctionCall","src":"2964:22:27"},{"name":"dataEnd","nativeSrc":"2988:7:27","nodeType":"YulIdentifier","src":"2988:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2943:20:27","nodeType":"YulIdentifier","src":"2943:20:27"},"nativeSrc":"2943:53:27","nodeType":"YulFunctionCall","src":"2943:53:27"},"variableNames":[{"name":"value1","nativeSrc":"2933:6:27","nodeType":"YulIdentifier","src":"2933:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"2539:474:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2584:9:27","nodeType":"YulTypedName","src":"2584:9:27","type":""},{"name":"dataEnd","nativeSrc":"2595:7:27","nodeType":"YulTypedName","src":"2595:7:27","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2607:6:27","nodeType":"YulTypedName","src":"2607:6:27","type":""},{"name":"value1","nativeSrc":"2615:6:27","nodeType":"YulTypedName","src":"2615:6:27","type":""}],"src":"2539:474:27"},{"body":{"nativeSrc":"3061:48:27","nodeType":"YulBlock","src":"3061:48:27","statements":[{"nativeSrc":"3071:32:27","nodeType":"YulAssignment","src":"3071:32:27","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3096:5:27","nodeType":"YulIdentifier","src":"3096:5:27"}],"functionName":{"name":"iszero","nativeSrc":"3089:6:27","nodeType":"YulIdentifier","src":"3089:6:27"},"nativeSrc":"3089:13:27","nodeType":"YulFunctionCall","src":"3089:13:27"}],"functionName":{"name":"iszero","nativeSrc":"3082:6:27","nodeType":"YulIdentifier","src":"3082:6:27"},"nativeSrc":"3082:21:27","nodeType":"YulFunctionCall","src":"3082:21:27"},"variableNames":[{"name":"cleaned","nativeSrc":"3071:7:27","nodeType":"YulIdentifier","src":"3071:7:27"}]}]},"name":"cleanup_t_bool","nativeSrc":"3019:90:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3043:5:27","nodeType":"YulTypedName","src":"3043:5:27","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3053:7:27","nodeType":"YulTypedName","src":"3053:7:27","type":""}],"src":"3019:90:27"},{"body":{"nativeSrc":"3174:50:27","nodeType":"YulBlock","src":"3174:50:27","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3191:3:27","nodeType":"YulIdentifier","src":"3191:3:27"},{"arguments":[{"name":"value","nativeSrc":"3211:5:27","nodeType":"YulIdentifier","src":"3211:5:27"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"3196:14:27","nodeType":"YulIdentifier","src":"3196:14:27"},"nativeSrc":"3196:21:27","nodeType":"YulFunctionCall","src":"3196:21:27"}],"functionName":{"name":"mstore","nativeSrc":"3184:6:27","nodeType":"YulIdentifier","src":"3184:6:27"},"nativeSrc":"3184:34:27","nodeType":"YulFunctionCall","src":"3184:34:27"},"nativeSrc":"3184:34:27","nodeType":"YulExpressionStatement","src":"3184:34:27"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3115:109:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3162:5:27","nodeType":"YulTypedName","src":"3162:5:27","type":""},{"name":"pos","nativeSrc":"3169:3:27","nodeType":"YulTypedName","src":"3169:3:27","type":""}],"src":"3115:109:27"},{"body":{"nativeSrc":"3322:118:27","nodeType":"YulBlock","src":"3322:118:27","statements":[{"nativeSrc":"3332:26:27","nodeType":"YulAssignment","src":"3332:26:27","value":{"arguments":[{"name":"headStart","nativeSrc":"3344:9:27","nodeType":"YulIdentifier","src":"3344:9:27"},{"kind":"number","nativeSrc":"3355:2:27","nodeType":"YulLiteral","src":"3355:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3340:3:27","nodeType":"YulIdentifier","src":"3340:3:27"},"nativeSrc":"3340:18:27","nodeType":"YulFunctionCall","src":"3340:18:27"},"variableNames":[{"name":"tail","nativeSrc":"3332:4:27","nodeType":"YulIdentifier","src":"3332:4:27"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3406:6:27","nodeType":"YulIdentifier","src":"3406:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"3419:9:27","nodeType":"YulIdentifier","src":"3419:9:27"},{"kind":"number","nativeSrc":"3430:1:27","nodeType":"YulLiteral","src":"3430:1:27","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3415:3:27","nodeType":"YulIdentifier","src":"3415:3:27"},"nativeSrc":"3415:17:27","nodeType":"YulFunctionCall","src":"3415:17:27"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3368:37:27","nodeType":"YulIdentifier","src":"3368:37:27"},"nativeSrc":"3368:65:27","nodeType":"YulFunctionCall","src":"3368:65:27"},"nativeSrc":"3368:65:27","nodeType":"YulExpressionStatement","src":"3368:65:27"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"3230:210:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3294:9:27","nodeType":"YulTypedName","src":"3294:9:27","type":""},{"name":"value0","nativeSrc":"3306:6:27","nodeType":"YulTypedName","src":"3306:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3317:4:27","nodeType":"YulTypedName","src":"3317:4:27","type":""}],"src":"3230:210:27"},{"body":{"nativeSrc":"3478:28:27","nodeType":"YulBlock","src":"3478:28:27","statements":[{"nativeSrc":"3488:12:27","nodeType":"YulAssignment","src":"3488:12:27","value":{"name":"value","nativeSrc":"3495:5:27","nodeType":"YulIdentifier","src":"3495:5:27"},"variableNames":[{"name":"ret","nativeSrc":"3488:3:27","nodeType":"YulIdentifier","src":"3488:3:27"}]}]},"name":"identity","nativeSrc":"3446:60:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3464:5:27","nodeType":"YulTypedName","src":"3464:5:27","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"3474:3:27","nodeType":"YulTypedName","src":"3474:3:27","type":""}],"src":"3446:60:27"},{"body":{"nativeSrc":"3572:82:27","nodeType":"YulBlock","src":"3572:82:27","statements":[{"nativeSrc":"3582:66:27","nodeType":"YulAssignment","src":"3582:66:27","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3640:5:27","nodeType":"YulIdentifier","src":"3640:5:27"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"3622:17:27","nodeType":"YulIdentifier","src":"3622:17:27"},"nativeSrc":"3622:24:27","nodeType":"YulFunctionCall","src":"3622:24:27"}],"functionName":{"name":"identity","nativeSrc":"3613:8:27","nodeType":"YulIdentifier","src":"3613:8:27"},"nativeSrc":"3613:34:27","nodeType":"YulFunctionCall","src":"3613:34:27"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"3595:17:27","nodeType":"YulIdentifier","src":"3595:17:27"},"nativeSrc":"3595:53:27","nodeType":"YulFunctionCall","src":"3595:53:27"},"variableNames":[{"name":"converted","nativeSrc":"3582:9:27","nodeType":"YulIdentifier","src":"3582:9:27"}]}]},"name":"convert_t_uint160_to_t_uint160","nativeSrc":"3512:142:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3552:5:27","nodeType":"YulTypedName","src":"3552:5:27","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"3562:9:27","nodeType":"YulTypedName","src":"3562:9:27","type":""}],"src":"3512:142:27"},{"body":{"nativeSrc":"3720:66:27","nodeType":"YulBlock","src":"3720:66:27","statements":[{"nativeSrc":"3730:50:27","nodeType":"YulAssignment","src":"3730:50:27","value":{"arguments":[{"name":"value","nativeSrc":"3774:5:27","nodeType":"YulIdentifier","src":"3774:5:27"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nativeSrc":"3743:30:27","nodeType":"YulIdentifier","src":"3743:30:27"},"nativeSrc":"3743:37:27","nodeType":"YulFunctionCall","src":"3743:37:27"},"variableNames":[{"name":"converted","nativeSrc":"3730:9:27","nodeType":"YulIdentifier","src":"3730:9:27"}]}]},"name":"convert_t_uint160_to_t_address","nativeSrc":"3660:126:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3700:5:27","nodeType":"YulTypedName","src":"3700:5:27","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"3710:9:27","nodeType":"YulTypedName","src":"3710:9:27","type":""}],"src":"3660:126:27"},{"body":{"nativeSrc":"3872:66:27","nodeType":"YulBlock","src":"3872:66:27","statements":[{"nativeSrc":"3882:50:27","nodeType":"YulAssignment","src":"3882:50:27","value":{"arguments":[{"name":"value","nativeSrc":"3926:5:27","nodeType":"YulIdentifier","src":"3926:5:27"}],"functionName":{"name":"convert_t_uint160_to_t_address","nativeSrc":"3895:30:27","nodeType":"YulIdentifier","src":"3895:30:27"},"nativeSrc":"3895:37:27","nodeType":"YulFunctionCall","src":"3895:37:27"},"variableNames":[{"name":"converted","nativeSrc":"3882:9:27","nodeType":"YulIdentifier","src":"3882:9:27"}]}]},"name":"convert_t_contract$_ITaxHandler_$7403_to_t_address","nativeSrc":"3792:146:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3852:5:27","nodeType":"YulTypedName","src":"3852:5:27","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"3862:9:27","nodeType":"YulTypedName","src":"3862:9:27","type":""}],"src":"3792:146:27"},{"body":{"nativeSrc":"4029:86:27","nodeType":"YulBlock","src":"4029:86:27","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4046:3:27","nodeType":"YulIdentifier","src":"4046:3:27"},{"arguments":[{"name":"value","nativeSrc":"4102:5:27","nodeType":"YulIdentifier","src":"4102:5:27"}],"functionName":{"name":"convert_t_contract$_ITaxHandler_$7403_to_t_address","nativeSrc":"4051:50:27","nodeType":"YulIdentifier","src":"4051:50:27"},"nativeSrc":"4051:57:27","nodeType":"YulFunctionCall","src":"4051:57:27"}],"functionName":{"name":"mstore","nativeSrc":"4039:6:27","nodeType":"YulIdentifier","src":"4039:6:27"},"nativeSrc":"4039:70:27","nodeType":"YulFunctionCall","src":"4039:70:27"},"nativeSrc":"4039:70:27","nodeType":"YulExpressionStatement","src":"4039:70:27"}]},"name":"abi_encode_t_contract$_ITaxHandler_$7403_to_t_address_fromStack","nativeSrc":"3944:171:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4017:5:27","nodeType":"YulTypedName","src":"4017:5:27","type":""},{"name":"pos","nativeSrc":"4024:3:27","nodeType":"YulTypedName","src":"4024:3:27","type":""}],"src":"3944:171:27"},{"body":{"nativeSrc":"4239:144:27","nodeType":"YulBlock","src":"4239:144:27","statements":[{"nativeSrc":"4249:26:27","nodeType":"YulAssignment","src":"4249:26:27","value":{"arguments":[{"name":"headStart","nativeSrc":"4261:9:27","nodeType":"YulIdentifier","src":"4261:9:27"},{"kind":"number","nativeSrc":"4272:2:27","nodeType":"YulLiteral","src":"4272:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4257:3:27","nodeType":"YulIdentifier","src":"4257:3:27"},"nativeSrc":"4257:18:27","nodeType":"YulFunctionCall","src":"4257:18:27"},"variableNames":[{"name":"tail","nativeSrc":"4249:4:27","nodeType":"YulIdentifier","src":"4249:4:27"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4349:6:27","nodeType":"YulIdentifier","src":"4349:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"4362:9:27","nodeType":"YulIdentifier","src":"4362:9:27"},{"kind":"number","nativeSrc":"4373:1:27","nodeType":"YulLiteral","src":"4373:1:27","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4358:3:27","nodeType":"YulIdentifier","src":"4358:3:27"},"nativeSrc":"4358:17:27","nodeType":"YulFunctionCall","src":"4358:17:27"}],"functionName":{"name":"abi_encode_t_contract$_ITaxHandler_$7403_to_t_address_fromStack","nativeSrc":"4285:63:27","nodeType":"YulIdentifier","src":"4285:63:27"},"nativeSrc":"4285:91:27","nodeType":"YulFunctionCall","src":"4285:91:27"},"nativeSrc":"4285:91:27","nodeType":"YulExpressionStatement","src":"4285:91:27"}]},"name":"abi_encode_tuple_t_contract$_ITaxHandler_$7403__to_t_address__fromStack_reversed","nativeSrc":"4121:262:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4211:9:27","nodeType":"YulTypedName","src":"4211:9:27","type":""},{"name":"value0","nativeSrc":"4223:6:27","nodeType":"YulTypedName","src":"4223:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4234:4:27","nodeType":"YulTypedName","src":"4234:4:27","type":""}],"src":"4121:262:27"},{"body":{"nativeSrc":"4454:53:27","nodeType":"YulBlock","src":"4454:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4471:3:27","nodeType":"YulIdentifier","src":"4471:3:27"},{"arguments":[{"name":"value","nativeSrc":"4494:5:27","nodeType":"YulIdentifier","src":"4494:5:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"4476:17:27","nodeType":"YulIdentifier","src":"4476:17:27"},"nativeSrc":"4476:24:27","nodeType":"YulFunctionCall","src":"4476:24:27"}],"functionName":{"name":"mstore","nativeSrc":"4464:6:27","nodeType":"YulIdentifier","src":"4464:6:27"},"nativeSrc":"4464:37:27","nodeType":"YulFunctionCall","src":"4464:37:27"},"nativeSrc":"4464:37:27","nodeType":"YulExpressionStatement","src":"4464:37:27"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"4389:118:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4442:5:27","nodeType":"YulTypedName","src":"4442:5:27","type":""},{"name":"pos","nativeSrc":"4449:3:27","nodeType":"YulTypedName","src":"4449:3:27","type":""}],"src":"4389:118:27"},{"body":{"nativeSrc":"4611:124:27","nodeType":"YulBlock","src":"4611:124:27","statements":[{"nativeSrc":"4621:26:27","nodeType":"YulAssignment","src":"4621:26:27","value":{"arguments":[{"name":"headStart","nativeSrc":"4633:9:27","nodeType":"YulIdentifier","src":"4633:9:27"},{"kind":"number","nativeSrc":"4644:2:27","nodeType":"YulLiteral","src":"4644:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4629:3:27","nodeType":"YulIdentifier","src":"4629:3:27"},"nativeSrc":"4629:18:27","nodeType":"YulFunctionCall","src":"4629:18:27"},"variableNames":[{"name":"tail","nativeSrc":"4621:4:27","nodeType":"YulIdentifier","src":"4621:4:27"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4701:6:27","nodeType":"YulIdentifier","src":"4701:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"4714:9:27","nodeType":"YulIdentifier","src":"4714:9:27"},{"kind":"number","nativeSrc":"4725:1:27","nodeType":"YulLiteral","src":"4725:1:27","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4710:3:27","nodeType":"YulIdentifier","src":"4710:3:27"},"nativeSrc":"4710:17:27","nodeType":"YulFunctionCall","src":"4710:17:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"4657:43:27","nodeType":"YulIdentifier","src":"4657:43:27"},"nativeSrc":"4657:71:27","nodeType":"YulFunctionCall","src":"4657:71:27"},"nativeSrc":"4657:71:27","nodeType":"YulExpressionStatement","src":"4657:71:27"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"4513:222:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4583:9:27","nodeType":"YulTypedName","src":"4583:9:27","type":""},{"name":"value0","nativeSrc":"4595:6:27","nodeType":"YulTypedName","src":"4595:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4606:4:27","nodeType":"YulTypedName","src":"4606:4:27","type":""}],"src":"4513:222:27"},{"body":{"nativeSrc":"4841:519:27","nodeType":"YulBlock","src":"4841:519:27","statements":[{"body":{"nativeSrc":"4887:83:27","nodeType":"YulBlock","src":"4887:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4889:77:27","nodeType":"YulIdentifier","src":"4889:77:27"},"nativeSrc":"4889:79:27","nodeType":"YulFunctionCall","src":"4889:79:27"},"nativeSrc":"4889:79:27","nodeType":"YulExpressionStatement","src":"4889:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4862:7:27","nodeType":"YulIdentifier","src":"4862:7:27"},{"name":"headStart","nativeSrc":"4871:9:27","nodeType":"YulIdentifier","src":"4871:9:27"}],"functionName":{"name":"sub","nativeSrc":"4858:3:27","nodeType":"YulIdentifier","src":"4858:3:27"},"nativeSrc":"4858:23:27","nodeType":"YulFunctionCall","src":"4858:23:27"},{"kind":"number","nativeSrc":"4883:2:27","nodeType":"YulLiteral","src":"4883:2:27","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"4854:3:27","nodeType":"YulIdentifier","src":"4854:3:27"},"nativeSrc":"4854:32:27","nodeType":"YulFunctionCall","src":"4854:32:27"},"nativeSrc":"4851:119:27","nodeType":"YulIf","src":"4851:119:27"},{"nativeSrc":"4980:117:27","nodeType":"YulBlock","src":"4980:117:27","statements":[{"nativeSrc":"4995:15:27","nodeType":"YulVariableDeclaration","src":"4995:15:27","value":{"kind":"number","nativeSrc":"5009:1:27","nodeType":"YulLiteral","src":"5009:1:27","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4999:6:27","nodeType":"YulTypedName","src":"4999:6:27","type":""}]},{"nativeSrc":"5024:63:27","nodeType":"YulAssignment","src":"5024:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5059:9:27","nodeType":"YulIdentifier","src":"5059:9:27"},{"name":"offset","nativeSrc":"5070:6:27","nodeType":"YulIdentifier","src":"5070:6:27"}],"functionName":{"name":"add","nativeSrc":"5055:3:27","nodeType":"YulIdentifier","src":"5055:3:27"},"nativeSrc":"5055:22:27","nodeType":"YulFunctionCall","src":"5055:22:27"},{"name":"dataEnd","nativeSrc":"5079:7:27","nodeType":"YulIdentifier","src":"5079:7:27"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5034:20:27","nodeType":"YulIdentifier","src":"5034:20:27"},"nativeSrc":"5034:53:27","nodeType":"YulFunctionCall","src":"5034:53:27"},"variableNames":[{"name":"value0","nativeSrc":"5024:6:27","nodeType":"YulIdentifier","src":"5024:6:27"}]}]},{"nativeSrc":"5107:118:27","nodeType":"YulBlock","src":"5107:118:27","statements":[{"nativeSrc":"5122:16:27","nodeType":"YulVariableDeclaration","src":"5122:16:27","value":{"kind":"number","nativeSrc":"5136:2:27","nodeType":"YulLiteral","src":"5136:2:27","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"5126:6:27","nodeType":"YulTypedName","src":"5126:6:27","type":""}]},{"nativeSrc":"5152:63:27","nodeType":"YulAssignment","src":"5152:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5187:9:27","nodeType":"YulIdentifier","src":"5187:9:27"},{"name":"offset","nativeSrc":"5198:6:27","nodeType":"YulIdentifier","src":"5198:6:27"}],"functionName":{"name":"add","nativeSrc":"5183:3:27","nodeType":"YulIdentifier","src":"5183:3:27"},"nativeSrc":"5183:22:27","nodeType":"YulFunctionCall","src":"5183:22:27"},{"name":"dataEnd","nativeSrc":"5207:7:27","nodeType":"YulIdentifier","src":"5207:7:27"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5162:20:27","nodeType":"YulIdentifier","src":"5162:20:27"},"nativeSrc":"5162:53:27","nodeType":"YulFunctionCall","src":"5162:53:27"},"variableNames":[{"name":"value1","nativeSrc":"5152:6:27","nodeType":"YulIdentifier","src":"5152:6:27"}]}]},{"nativeSrc":"5235:118:27","nodeType":"YulBlock","src":"5235:118:27","statements":[{"nativeSrc":"5250:16:27","nodeType":"YulVariableDeclaration","src":"5250:16:27","value":{"kind":"number","nativeSrc":"5264:2:27","nodeType":"YulLiteral","src":"5264:2:27","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"5254:6:27","nodeType":"YulTypedName","src":"5254:6:27","type":""}]},{"nativeSrc":"5280:63:27","nodeType":"YulAssignment","src":"5280:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5315:9:27","nodeType":"YulIdentifier","src":"5315:9:27"},{"name":"offset","nativeSrc":"5326:6:27","nodeType":"YulIdentifier","src":"5326:6:27"}],"functionName":{"name":"add","nativeSrc":"5311:3:27","nodeType":"YulIdentifier","src":"5311:3:27"},"nativeSrc":"5311:22:27","nodeType":"YulFunctionCall","src":"5311:22:27"},{"name":"dataEnd","nativeSrc":"5335:7:27","nodeType":"YulIdentifier","src":"5335:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"5290:20:27","nodeType":"YulIdentifier","src":"5290:20:27"},"nativeSrc":"5290:53:27","nodeType":"YulFunctionCall","src":"5290:53:27"},"variableNames":[{"name":"value2","nativeSrc":"5280:6:27","nodeType":"YulIdentifier","src":"5280:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"4741:619:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4795:9:27","nodeType":"YulTypedName","src":"4795:9:27","type":""},{"name":"dataEnd","nativeSrc":"4806:7:27","nodeType":"YulTypedName","src":"4806:7:27","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4818:6:27","nodeType":"YulTypedName","src":"4818:6:27","type":""},{"name":"value1","nativeSrc":"4826:6:27","nodeType":"YulTypedName","src":"4826:6:27","type":""},{"name":"value2","nativeSrc":"4834:6:27","nodeType":"YulTypedName","src":"4834:6:27","type":""}],"src":"4741:619:27"},{"body":{"nativeSrc":"5409:43:27","nodeType":"YulBlock","src":"5409:43:27","statements":[{"nativeSrc":"5419:27:27","nodeType":"YulAssignment","src":"5419:27:27","value":{"arguments":[{"name":"value","nativeSrc":"5434:5:27","nodeType":"YulIdentifier","src":"5434:5:27"},{"kind":"number","nativeSrc":"5441:4:27","nodeType":"YulLiteral","src":"5441:4:27","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"5430:3:27","nodeType":"YulIdentifier","src":"5430:3:27"},"nativeSrc":"5430:16:27","nodeType":"YulFunctionCall","src":"5430:16:27"},"variableNames":[{"name":"cleaned","nativeSrc":"5419:7:27","nodeType":"YulIdentifier","src":"5419:7:27"}]}]},"name":"cleanup_t_uint8","nativeSrc":"5366:86:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5391:5:27","nodeType":"YulTypedName","src":"5391:5:27","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5401:7:27","nodeType":"YulTypedName","src":"5401:7:27","type":""}],"src":"5366:86:27"},{"body":{"nativeSrc":"5519:51:27","nodeType":"YulBlock","src":"5519:51:27","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5536:3:27","nodeType":"YulIdentifier","src":"5536:3:27"},{"arguments":[{"name":"value","nativeSrc":"5557:5:27","nodeType":"YulIdentifier","src":"5557:5:27"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"5541:15:27","nodeType":"YulIdentifier","src":"5541:15:27"},"nativeSrc":"5541:22:27","nodeType":"YulFunctionCall","src":"5541:22:27"}],"functionName":{"name":"mstore","nativeSrc":"5529:6:27","nodeType":"YulIdentifier","src":"5529:6:27"},"nativeSrc":"5529:35:27","nodeType":"YulFunctionCall","src":"5529:35:27"},"nativeSrc":"5529:35:27","nodeType":"YulExpressionStatement","src":"5529:35:27"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"5458:112:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5507:5:27","nodeType":"YulTypedName","src":"5507:5:27","type":""},{"name":"pos","nativeSrc":"5514:3:27","nodeType":"YulTypedName","src":"5514:3:27","type":""}],"src":"5458:112:27"},{"body":{"nativeSrc":"5670:120:27","nodeType":"YulBlock","src":"5670:120:27","statements":[{"nativeSrc":"5680:26:27","nodeType":"YulAssignment","src":"5680:26:27","value":{"arguments":[{"name":"headStart","nativeSrc":"5692:9:27","nodeType":"YulIdentifier","src":"5692:9:27"},{"kind":"number","nativeSrc":"5703:2:27","nodeType":"YulLiteral","src":"5703:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5688:3:27","nodeType":"YulIdentifier","src":"5688:3:27"},"nativeSrc":"5688:18:27","nodeType":"YulFunctionCall","src":"5688:18:27"},"variableNames":[{"name":"tail","nativeSrc":"5680:4:27","nodeType":"YulIdentifier","src":"5680:4:27"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5756:6:27","nodeType":"YulIdentifier","src":"5756:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"5769:9:27","nodeType":"YulIdentifier","src":"5769:9:27"},{"kind":"number","nativeSrc":"5780:1:27","nodeType":"YulLiteral","src":"5780:1:27","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5765:3:27","nodeType":"YulIdentifier","src":"5765:3:27"},"nativeSrc":"5765:17:27","nodeType":"YulFunctionCall","src":"5765:17:27"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"5716:39:27","nodeType":"YulIdentifier","src":"5716:39:27"},"nativeSrc":"5716:67:27","nodeType":"YulFunctionCall","src":"5716:67:27"},"nativeSrc":"5716:67:27","nodeType":"YulExpressionStatement","src":"5716:67:27"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"5576:214:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5642:9:27","nodeType":"YulTypedName","src":"5642:9:27","type":""},{"name":"value0","nativeSrc":"5654:6:27","nodeType":"YulTypedName","src":"5654:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5665:4:27","nodeType":"YulTypedName","src":"5665:4:27","type":""}],"src":"5576:214:27"},{"body":{"nativeSrc":"5841:32:27","nodeType":"YulBlock","src":"5841:32:27","statements":[{"nativeSrc":"5851:16:27","nodeType":"YulAssignment","src":"5851:16:27","value":{"name":"value","nativeSrc":"5862:5:27","nodeType":"YulIdentifier","src":"5862:5:27"},"variableNames":[{"name":"cleaned","nativeSrc":"5851:7:27","nodeType":"YulIdentifier","src":"5851:7:27"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"5796:77:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5823:5:27","nodeType":"YulTypedName","src":"5823:5:27","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5833:7:27","nodeType":"YulTypedName","src":"5833:7:27","type":""}],"src":"5796:77:27"},{"body":{"nativeSrc":"5944:53:27","nodeType":"YulBlock","src":"5944:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5961:3:27","nodeType":"YulIdentifier","src":"5961:3:27"},{"arguments":[{"name":"value","nativeSrc":"5984:5:27","nodeType":"YulIdentifier","src":"5984:5:27"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"5966:17:27","nodeType":"YulIdentifier","src":"5966:17:27"},"nativeSrc":"5966:24:27","nodeType":"YulFunctionCall","src":"5966:24:27"}],"functionName":{"name":"mstore","nativeSrc":"5954:6:27","nodeType":"YulIdentifier","src":"5954:6:27"},"nativeSrc":"5954:37:27","nodeType":"YulFunctionCall","src":"5954:37:27"},"nativeSrc":"5954:37:27","nodeType":"YulExpressionStatement","src":"5954:37:27"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"5879:118:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5932:5:27","nodeType":"YulTypedName","src":"5932:5:27","type":""},{"name":"pos","nativeSrc":"5939:3:27","nodeType":"YulTypedName","src":"5939:3:27","type":""}],"src":"5879:118:27"},{"body":{"nativeSrc":"6101:124:27","nodeType":"YulBlock","src":"6101:124:27","statements":[{"nativeSrc":"6111:26:27","nodeType":"YulAssignment","src":"6111:26:27","value":{"arguments":[{"name":"headStart","nativeSrc":"6123:9:27","nodeType":"YulIdentifier","src":"6123:9:27"},{"kind":"number","nativeSrc":"6134:2:27","nodeType":"YulLiteral","src":"6134:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6119:3:27","nodeType":"YulIdentifier","src":"6119:3:27"},"nativeSrc":"6119:18:27","nodeType":"YulFunctionCall","src":"6119:18:27"},"variableNames":[{"name":"tail","nativeSrc":"6111:4:27","nodeType":"YulIdentifier","src":"6111:4:27"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6191:6:27","nodeType":"YulIdentifier","src":"6191:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"6204:9:27","nodeType":"YulIdentifier","src":"6204:9:27"},{"kind":"number","nativeSrc":"6215:1:27","nodeType":"YulLiteral","src":"6215:1:27","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6200:3:27","nodeType":"YulIdentifier","src":"6200:3:27"},"nativeSrc":"6200:17:27","nodeType":"YulFunctionCall","src":"6200:17:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"6147:43:27","nodeType":"YulIdentifier","src":"6147:43:27"},"nativeSrc":"6147:71:27","nodeType":"YulFunctionCall","src":"6147:71:27"},"nativeSrc":"6147:71:27","nodeType":"YulExpressionStatement","src":"6147:71:27"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"6003:222:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6073:9:27","nodeType":"YulTypedName","src":"6073:9:27","type":""},{"name":"value0","nativeSrc":"6085:6:27","nodeType":"YulTypedName","src":"6085:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6096:4:27","nodeType":"YulTypedName","src":"6096:4:27","type":""}],"src":"6003:222:27"},{"body":{"nativeSrc":"6297:263:27","nodeType":"YulBlock","src":"6297:263:27","statements":[{"body":{"nativeSrc":"6343:83:27","nodeType":"YulBlock","src":"6343:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"6345:77:27","nodeType":"YulIdentifier","src":"6345:77:27"},"nativeSrc":"6345:79:27","nodeType":"YulFunctionCall","src":"6345:79:27"},"nativeSrc":"6345:79:27","nodeType":"YulExpressionStatement","src":"6345:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6318:7:27","nodeType":"YulIdentifier","src":"6318:7:27"},{"name":"headStart","nativeSrc":"6327:9:27","nodeType":"YulIdentifier","src":"6327:9:27"}],"functionName":{"name":"sub","nativeSrc":"6314:3:27","nodeType":"YulIdentifier","src":"6314:3:27"},"nativeSrc":"6314:23:27","nodeType":"YulFunctionCall","src":"6314:23:27"},{"kind":"number","nativeSrc":"6339:2:27","nodeType":"YulLiteral","src":"6339:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"6310:3:27","nodeType":"YulIdentifier","src":"6310:3:27"},"nativeSrc":"6310:32:27","nodeType":"YulFunctionCall","src":"6310:32:27"},"nativeSrc":"6307:119:27","nodeType":"YulIf","src":"6307:119:27"},{"nativeSrc":"6436:117:27","nodeType":"YulBlock","src":"6436:117:27","statements":[{"nativeSrc":"6451:15:27","nodeType":"YulVariableDeclaration","src":"6451:15:27","value":{"kind":"number","nativeSrc":"6465:1:27","nodeType":"YulLiteral","src":"6465:1:27","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"6455:6:27","nodeType":"YulTypedName","src":"6455:6:27","type":""}]},{"nativeSrc":"6480:63:27","nodeType":"YulAssignment","src":"6480:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6515:9:27","nodeType":"YulIdentifier","src":"6515:9:27"},{"name":"offset","nativeSrc":"6526:6:27","nodeType":"YulIdentifier","src":"6526:6:27"}],"functionName":{"name":"add","nativeSrc":"6511:3:27","nodeType":"YulIdentifier","src":"6511:3:27"},"nativeSrc":"6511:22:27","nodeType":"YulFunctionCall","src":"6511:22:27"},{"name":"dataEnd","nativeSrc":"6535:7:27","nodeType":"YulIdentifier","src":"6535:7:27"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"6490:20:27","nodeType":"YulIdentifier","src":"6490:20:27"},"nativeSrc":"6490:53:27","nodeType":"YulFunctionCall","src":"6490:53:27"},"variableNames":[{"name":"value0","nativeSrc":"6480:6:27","nodeType":"YulIdentifier","src":"6480:6:27"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"6231:329:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6267:9:27","nodeType":"YulTypedName","src":"6267:9:27","type":""},{"name":"dataEnd","nativeSrc":"6278:7:27","nodeType":"YulTypedName","src":"6278:7:27","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6290:6:27","nodeType":"YulTypedName","src":"6290:6:27","type":""}],"src":"6231:329:27"},{"body":{"nativeSrc":"6631:53:27","nodeType":"YulBlock","src":"6631:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6648:3:27","nodeType":"YulIdentifier","src":"6648:3:27"},{"arguments":[{"name":"value","nativeSrc":"6671:5:27","nodeType":"YulIdentifier","src":"6671:5:27"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"6653:17:27","nodeType":"YulIdentifier","src":"6653:17:27"},"nativeSrc":"6653:24:27","nodeType":"YulFunctionCall","src":"6653:24:27"}],"functionName":{"name":"mstore","nativeSrc":"6641:6:27","nodeType":"YulIdentifier","src":"6641:6:27"},"nativeSrc":"6641:37:27","nodeType":"YulFunctionCall","src":"6641:37:27"},"nativeSrc":"6641:37:27","nodeType":"YulExpressionStatement","src":"6641:37:27"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6566:118:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6619:5:27","nodeType":"YulTypedName","src":"6619:5:27","type":""},{"name":"pos","nativeSrc":"6626:3:27","nodeType":"YulTypedName","src":"6626:3:27","type":""}],"src":"6566:118:27"},{"body":{"nativeSrc":"6788:124:27","nodeType":"YulBlock","src":"6788:124:27","statements":[{"nativeSrc":"6798:26:27","nodeType":"YulAssignment","src":"6798:26:27","value":{"arguments":[{"name":"headStart","nativeSrc":"6810:9:27","nodeType":"YulIdentifier","src":"6810:9:27"},{"kind":"number","nativeSrc":"6821:2:27","nodeType":"YulLiteral","src":"6821:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6806:3:27","nodeType":"YulIdentifier","src":"6806:3:27"},"nativeSrc":"6806:18:27","nodeType":"YulFunctionCall","src":"6806:18:27"},"variableNames":[{"name":"tail","nativeSrc":"6798:4:27","nodeType":"YulIdentifier","src":"6798:4:27"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6878:6:27","nodeType":"YulIdentifier","src":"6878:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"6891:9:27","nodeType":"YulIdentifier","src":"6891:9:27"},{"kind":"number","nativeSrc":"6902:1:27","nodeType":"YulLiteral","src":"6902:1:27","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6887:3:27","nodeType":"YulIdentifier","src":"6887:3:27"},"nativeSrc":"6887:17:27","nodeType":"YulFunctionCall","src":"6887:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6834:43:27","nodeType":"YulIdentifier","src":"6834:43:27"},"nativeSrc":"6834:71:27","nodeType":"YulFunctionCall","src":"6834:71:27"},"nativeSrc":"6834:71:27","nodeType":"YulExpressionStatement","src":"6834:71:27"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"6690:222:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6760:9:27","nodeType":"YulTypedName","src":"6760:9:27","type":""},{"name":"value0","nativeSrc":"6772:6:27","nodeType":"YulTypedName","src":"6772:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6783:4:27","nodeType":"YulTypedName","src":"6783:4:27","type":""}],"src":"6690:222:27"},{"body":{"nativeSrc":"6962:105:27","nodeType":"YulBlock","src":"6962:105:27","statements":[{"nativeSrc":"6972:89:27","nodeType":"YulAssignment","src":"6972:89:27","value":{"arguments":[{"name":"value","nativeSrc":"6987:5:27","nodeType":"YulIdentifier","src":"6987:5:27"},{"kind":"number","nativeSrc":"6994:66:27","nodeType":"YulLiteral","src":"6994:66:27","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"6983:3:27","nodeType":"YulIdentifier","src":"6983:3:27"},"nativeSrc":"6983:78:27","nodeType":"YulFunctionCall","src":"6983:78:27"},"variableNames":[{"name":"cleaned","nativeSrc":"6972:7:27","nodeType":"YulIdentifier","src":"6972:7:27"}]}]},"name":"cleanup_t_bytes1","nativeSrc":"6918:149:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6944:5:27","nodeType":"YulTypedName","src":"6944:5:27","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"6954:7:27","nodeType":"YulTypedName","src":"6954:7:27","type":""}],"src":"6918:149:27"},{"body":{"nativeSrc":"7136:52:27","nodeType":"YulBlock","src":"7136:52:27","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"7153:3:27","nodeType":"YulIdentifier","src":"7153:3:27"},{"arguments":[{"name":"value","nativeSrc":"7175:5:27","nodeType":"YulIdentifier","src":"7175:5:27"}],"functionName":{"name":"cleanup_t_bytes1","nativeSrc":"7158:16:27","nodeType":"YulIdentifier","src":"7158:16:27"},"nativeSrc":"7158:23:27","nodeType":"YulFunctionCall","src":"7158:23:27"}],"functionName":{"name":"mstore","nativeSrc":"7146:6:27","nodeType":"YulIdentifier","src":"7146:6:27"},"nativeSrc":"7146:36:27","nodeType":"YulFunctionCall","src":"7146:36:27"},"nativeSrc":"7146:36:27","nodeType":"YulExpressionStatement","src":"7146:36:27"}]},"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nativeSrc":"7073:115:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7124:5:27","nodeType":"YulTypedName","src":"7124:5:27","type":""},{"name":"pos","nativeSrc":"7131:3:27","nodeType":"YulTypedName","src":"7131:3:27","type":""}],"src":"7073:115:27"},{"body":{"nativeSrc":"7268:40:27","nodeType":"YulBlock","src":"7268:40:27","statements":[{"nativeSrc":"7279:22:27","nodeType":"YulAssignment","src":"7279:22:27","value":{"arguments":[{"name":"value","nativeSrc":"7295:5:27","nodeType":"YulIdentifier","src":"7295:5:27"}],"functionName":{"name":"mload","nativeSrc":"7289:5:27","nodeType":"YulIdentifier","src":"7289:5:27"},"nativeSrc":"7289:12:27","nodeType":"YulFunctionCall","src":"7289:12:27"},"variableNames":[{"name":"length","nativeSrc":"7279:6:27","nodeType":"YulIdentifier","src":"7279:6:27"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7194:114:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7251:5:27","nodeType":"YulTypedName","src":"7251:5:27","type":""}],"returnVariables":[{"name":"length","nativeSrc":"7261:6:27","nodeType":"YulTypedName","src":"7261:6:27","type":""}],"src":"7194:114:27"},{"body":{"nativeSrc":"7425:73:27","nodeType":"YulBlock","src":"7425:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"7442:3:27","nodeType":"YulIdentifier","src":"7442:3:27"},{"name":"length","nativeSrc":"7447:6:27","nodeType":"YulIdentifier","src":"7447:6:27"}],"functionName":{"name":"mstore","nativeSrc":"7435:6:27","nodeType":"YulIdentifier","src":"7435:6:27"},"nativeSrc":"7435:19:27","nodeType":"YulFunctionCall","src":"7435:19:27"},"nativeSrc":"7435:19:27","nodeType":"YulExpressionStatement","src":"7435:19:27"},{"nativeSrc":"7463:29:27","nodeType":"YulAssignment","src":"7463:29:27","value":{"arguments":[{"name":"pos","nativeSrc":"7482:3:27","nodeType":"YulIdentifier","src":"7482:3:27"},{"kind":"number","nativeSrc":"7487:4:27","nodeType":"YulLiteral","src":"7487:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7478:3:27","nodeType":"YulIdentifier","src":"7478:3:27"},"nativeSrc":"7478:14:27","nodeType":"YulFunctionCall","src":"7478:14:27"},"variableNames":[{"name":"updated_pos","nativeSrc":"7463:11:27","nodeType":"YulIdentifier","src":"7463:11:27"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"7314:184:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"7397:3:27","nodeType":"YulTypedName","src":"7397:3:27","type":""},{"name":"length","nativeSrc":"7402:6:27","nodeType":"YulTypedName","src":"7402:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"7413:11:27","nodeType":"YulTypedName","src":"7413:11:27","type":""}],"src":"7314:184:27"},{"body":{"nativeSrc":"7576:60:27","nodeType":"YulBlock","src":"7576:60:27","statements":[{"nativeSrc":"7586:11:27","nodeType":"YulAssignment","src":"7586:11:27","value":{"name":"ptr","nativeSrc":"7594:3:27","nodeType":"YulIdentifier","src":"7594:3:27"},"variableNames":[{"name":"data","nativeSrc":"7586:4:27","nodeType":"YulIdentifier","src":"7586:4:27"}]},{"nativeSrc":"7607:22:27","nodeType":"YulAssignment","src":"7607:22:27","value":{"arguments":[{"name":"ptr","nativeSrc":"7619:3:27","nodeType":"YulIdentifier","src":"7619:3:27"},{"kind":"number","nativeSrc":"7624:4:27","nodeType":"YulLiteral","src":"7624:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7615:3:27","nodeType":"YulIdentifier","src":"7615:3:27"},"nativeSrc":"7615:14:27","nodeType":"YulFunctionCall","src":"7615:14:27"},"variableNames":[{"name":"data","nativeSrc":"7607:4:27","nodeType":"YulIdentifier","src":"7607:4:27"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7504:132:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"7563:3:27","nodeType":"YulTypedName","src":"7563:3:27","type":""}],"returnVariables":[{"name":"data","nativeSrc":"7571:4:27","nodeType":"YulTypedName","src":"7571:4:27","type":""}],"src":"7504:132:27"},{"body":{"nativeSrc":"7697:53:27","nodeType":"YulBlock","src":"7697:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"7714:3:27","nodeType":"YulIdentifier","src":"7714:3:27"},{"arguments":[{"name":"value","nativeSrc":"7737:5:27","nodeType":"YulIdentifier","src":"7737:5:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7719:17:27","nodeType":"YulIdentifier","src":"7719:17:27"},"nativeSrc":"7719:24:27","nodeType":"YulFunctionCall","src":"7719:24:27"}],"functionName":{"name":"mstore","nativeSrc":"7707:6:27","nodeType":"YulIdentifier","src":"7707:6:27"},"nativeSrc":"7707:37:27","nodeType":"YulFunctionCall","src":"7707:37:27"},"nativeSrc":"7707:37:27","nodeType":"YulExpressionStatement","src":"7707:37:27"}]},"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"7642:108:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7685:5:27","nodeType":"YulTypedName","src":"7685:5:27","type":""},{"name":"pos","nativeSrc":"7692:3:27","nodeType":"YulTypedName","src":"7692:3:27","type":""}],"src":"7642:108:27"},{"body":{"nativeSrc":"7836:99:27","nodeType":"YulBlock","src":"7836:99:27","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"7880:6:27","nodeType":"YulIdentifier","src":"7880:6:27"},{"name":"pos","nativeSrc":"7888:3:27","nodeType":"YulIdentifier","src":"7888:3:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"7846:33:27","nodeType":"YulIdentifier","src":"7846:33:27"},"nativeSrc":"7846:46:27","nodeType":"YulFunctionCall","src":"7846:46:27"},"nativeSrc":"7846:46:27","nodeType":"YulExpressionStatement","src":"7846:46:27"},{"nativeSrc":"7901:28:27","nodeType":"YulAssignment","src":"7901:28:27","value":{"arguments":[{"name":"pos","nativeSrc":"7919:3:27","nodeType":"YulIdentifier","src":"7919:3:27"},{"kind":"number","nativeSrc":"7924:4:27","nodeType":"YulLiteral","src":"7924:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7915:3:27","nodeType":"YulIdentifier","src":"7915:3:27"},"nativeSrc":"7915:14:27","nodeType":"YulFunctionCall","src":"7915:14:27"},"variableNames":[{"name":"updatedPos","nativeSrc":"7901:10:27","nodeType":"YulIdentifier","src":"7901:10:27"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"7756:179:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nativeSrc":"7809:6:27","nodeType":"YulTypedName","src":"7809:6:27","type":""},{"name":"pos","nativeSrc":"7817:3:27","nodeType":"YulTypedName","src":"7817:3:27","type":""}],"returnVariables":[{"name":"updatedPos","nativeSrc":"7825:10:27","nodeType":"YulTypedName","src":"7825:10:27","type":""}],"src":"7756:179:27"},{"body":{"nativeSrc":"8016:38:27","nodeType":"YulBlock","src":"8016:38:27","statements":[{"nativeSrc":"8026:22:27","nodeType":"YulAssignment","src":"8026:22:27","value":{"arguments":[{"name":"ptr","nativeSrc":"8038:3:27","nodeType":"YulIdentifier","src":"8038:3:27"},{"kind":"number","nativeSrc":"8043:4:27","nodeType":"YulLiteral","src":"8043:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8034:3:27","nodeType":"YulIdentifier","src":"8034:3:27"},"nativeSrc":"8034:14:27","nodeType":"YulFunctionCall","src":"8034:14:27"},"variableNames":[{"name":"next","nativeSrc":"8026:4:27","nodeType":"YulIdentifier","src":"8026:4:27"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7941:113:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"8003:3:27","nodeType":"YulTypedName","src":"8003:3:27","type":""}],"returnVariables":[{"name":"next","nativeSrc":"8011:4:27","nodeType":"YulTypedName","src":"8011:4:27","type":""}],"src":"7941:113:27"},{"body":{"nativeSrc":"8214:608:27","nodeType":"YulBlock","src":"8214:608:27","statements":[{"nativeSrc":"8224:68:27","nodeType":"YulVariableDeclaration","src":"8224:68:27","value":{"arguments":[{"name":"value","nativeSrc":"8286:5:27","nodeType":"YulIdentifier","src":"8286:5:27"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"8238:47:27","nodeType":"YulIdentifier","src":"8238:47:27"},"nativeSrc":"8238:54:27","nodeType":"YulFunctionCall","src":"8238:54:27"},"variables":[{"name":"length","nativeSrc":"8228:6:27","nodeType":"YulTypedName","src":"8228:6:27","type":""}]},{"nativeSrc":"8301:93:27","nodeType":"YulAssignment","src":"8301:93:27","value":{"arguments":[{"name":"pos","nativeSrc":"8382:3:27","nodeType":"YulIdentifier","src":"8382:3:27"},{"name":"length","nativeSrc":"8387:6:27","nodeType":"YulIdentifier","src":"8387:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"8308:73:27","nodeType":"YulIdentifier","src":"8308:73:27"},"nativeSrc":"8308:86:27","nodeType":"YulFunctionCall","src":"8308:86:27"},"variableNames":[{"name":"pos","nativeSrc":"8301:3:27","nodeType":"YulIdentifier","src":"8301:3:27"}]},{"nativeSrc":"8403:71:27","nodeType":"YulVariableDeclaration","src":"8403:71:27","value":{"arguments":[{"name":"value","nativeSrc":"8468:5:27","nodeType":"YulIdentifier","src":"8468:5:27"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"8418:49:27","nodeType":"YulIdentifier","src":"8418:49:27"},"nativeSrc":"8418:56:27","nodeType":"YulFunctionCall","src":"8418:56:27"},"variables":[{"name":"baseRef","nativeSrc":"8407:7:27","nodeType":"YulTypedName","src":"8407:7:27","type":""}]},{"nativeSrc":"8483:21:27","nodeType":"YulVariableDeclaration","src":"8483:21:27","value":{"name":"baseRef","nativeSrc":"8497:7:27","nodeType":"YulIdentifier","src":"8497:7:27"},"variables":[{"name":"srcPtr","nativeSrc":"8487:6:27","nodeType":"YulTypedName","src":"8487:6:27","type":""}]},{"body":{"nativeSrc":"8573:224:27","nodeType":"YulBlock","src":"8573:224:27","statements":[{"nativeSrc":"8587:34:27","nodeType":"YulVariableDeclaration","src":"8587:34:27","value":{"arguments":[{"name":"srcPtr","nativeSrc":"8614:6:27","nodeType":"YulIdentifier","src":"8614:6:27"}],"functionName":{"name":"mload","nativeSrc":"8608:5:27","nodeType":"YulIdentifier","src":"8608:5:27"},"nativeSrc":"8608:13:27","nodeType":"YulFunctionCall","src":"8608:13:27"},"variables":[{"name":"elementValue0","nativeSrc":"8591:13:27","nodeType":"YulTypedName","src":"8591:13:27","type":""}]},{"nativeSrc":"8634:70:27","nodeType":"YulAssignment","src":"8634:70:27","value":{"arguments":[{"name":"elementValue0","nativeSrc":"8685:13:27","nodeType":"YulIdentifier","src":"8685:13:27"},{"name":"pos","nativeSrc":"8700:3:27","nodeType":"YulIdentifier","src":"8700:3:27"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"8641:43:27","nodeType":"YulIdentifier","src":"8641:43:27"},"nativeSrc":"8641:63:27","nodeType":"YulFunctionCall","src":"8641:63:27"},"variableNames":[{"name":"pos","nativeSrc":"8634:3:27","nodeType":"YulIdentifier","src":"8634:3:27"}]},{"nativeSrc":"8717:70:27","nodeType":"YulAssignment","src":"8717:70:27","value":{"arguments":[{"name":"srcPtr","nativeSrc":"8780:6:27","nodeType":"YulIdentifier","src":"8780:6:27"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"8727:52:27","nodeType":"YulIdentifier","src":"8727:52:27"},"nativeSrc":"8727:60:27","nodeType":"YulFunctionCall","src":"8727:60:27"},"variableNames":[{"name":"srcPtr","nativeSrc":"8717:6:27","nodeType":"YulIdentifier","src":"8717:6:27"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"8535:1:27","nodeType":"YulIdentifier","src":"8535:1:27"},{"name":"length","nativeSrc":"8538:6:27","nodeType":"YulIdentifier","src":"8538:6:27"}],"functionName":{"name":"lt","nativeSrc":"8532:2:27","nodeType":"YulIdentifier","src":"8532:2:27"},"nativeSrc":"8532:13:27","nodeType":"YulFunctionCall","src":"8532:13:27"},"nativeSrc":"8513:284:27","nodeType":"YulForLoop","post":{"nativeSrc":"8546:18:27","nodeType":"YulBlock","src":"8546:18:27","statements":[{"nativeSrc":"8548:14:27","nodeType":"YulAssignment","src":"8548:14:27","value":{"arguments":[{"name":"i","nativeSrc":"8557:1:27","nodeType":"YulIdentifier","src":"8557:1:27"},{"kind":"number","nativeSrc":"8560:1:27","nodeType":"YulLiteral","src":"8560:1:27","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"8553:3:27","nodeType":"YulIdentifier","src":"8553:3:27"},"nativeSrc":"8553:9:27","nodeType":"YulFunctionCall","src":"8553:9:27"},"variableNames":[{"name":"i","nativeSrc":"8548:1:27","nodeType":"YulIdentifier","src":"8548:1:27"}]}]},"pre":{"nativeSrc":"8517:14:27","nodeType":"YulBlock","src":"8517:14:27","statements":[{"nativeSrc":"8519:10:27","nodeType":"YulVariableDeclaration","src":"8519:10:27","value":{"kind":"number","nativeSrc":"8528:1:27","nodeType":"YulLiteral","src":"8528:1:27","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"8523:1:27","nodeType":"YulTypedName","src":"8523:1:27","type":""}]}]},"src":"8513:284:27"},{"nativeSrc":"8806:10:27","nodeType":"YulAssignment","src":"8806:10:27","value":{"name":"pos","nativeSrc":"8813:3:27","nodeType":"YulIdentifier","src":"8813:3:27"},"variableNames":[{"name":"end","nativeSrc":"8806:3:27","nodeType":"YulIdentifier","src":"8806:3:27"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"8090:732:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8193:5:27","nodeType":"YulTypedName","src":"8193:5:27","type":""},{"name":"pos","nativeSrc":"8200:3:27","nodeType":"YulTypedName","src":"8200:3:27","type":""}],"returnVariables":[{"name":"end","nativeSrc":"8209:3:27","nodeType":"YulTypedName","src":"8209:3:27","type":""}],"src":"8090:732:27"},{"body":{"nativeSrc":"9182:861:27","nodeType":"YulBlock","src":"9182:861:27","statements":[{"nativeSrc":"9192:27:27","nodeType":"YulAssignment","src":"9192:27:27","value":{"arguments":[{"name":"headStart","nativeSrc":"9204:9:27","nodeType":"YulIdentifier","src":"9204:9:27"},{"kind":"number","nativeSrc":"9215:3:27","nodeType":"YulLiteral","src":"9215:3:27","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"9200:3:27","nodeType":"YulIdentifier","src":"9200:3:27"},"nativeSrc":"9200:19:27","nodeType":"YulFunctionCall","src":"9200:19:27"},"variableNames":[{"name":"tail","nativeSrc":"9192:4:27","nodeType":"YulIdentifier","src":"9192:4:27"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9271:6:27","nodeType":"YulIdentifier","src":"9271:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"9284:9:27","nodeType":"YulIdentifier","src":"9284:9:27"},{"kind":"number","nativeSrc":"9295:1:27","nodeType":"YulLiteral","src":"9295:1:27","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9280:3:27","nodeType":"YulIdentifier","src":"9280:3:27"},"nativeSrc":"9280:17:27","nodeType":"YulFunctionCall","src":"9280:17:27"}],"functionName":{"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nativeSrc":"9229:41:27","nodeType":"YulIdentifier","src":"9229:41:27"},"nativeSrc":"9229:69:27","nodeType":"YulFunctionCall","src":"9229:69:27"},"nativeSrc":"9229:69:27","nodeType":"YulExpressionStatement","src":"9229:69:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9319:9:27","nodeType":"YulIdentifier","src":"9319:9:27"},{"kind":"number","nativeSrc":"9330:2:27","nodeType":"YulLiteral","src":"9330:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9315:3:27","nodeType":"YulIdentifier","src":"9315:3:27"},"nativeSrc":"9315:18:27","nodeType":"YulFunctionCall","src":"9315:18:27"},{"arguments":[{"name":"tail","nativeSrc":"9339:4:27","nodeType":"YulIdentifier","src":"9339:4:27"},{"name":"headStart","nativeSrc":"9345:9:27","nodeType":"YulIdentifier","src":"9345:9:27"}],"functionName":{"name":"sub","nativeSrc":"9335:3:27","nodeType":"YulIdentifier","src":"9335:3:27"},"nativeSrc":"9335:20:27","nodeType":"YulFunctionCall","src":"9335:20:27"}],"functionName":{"name":"mstore","nativeSrc":"9308:6:27","nodeType":"YulIdentifier","src":"9308:6:27"},"nativeSrc":"9308:48:27","nodeType":"YulFunctionCall","src":"9308:48:27"},"nativeSrc":"9308:48:27","nodeType":"YulExpressionStatement","src":"9308:48:27"},{"nativeSrc":"9365:86:27","nodeType":"YulAssignment","src":"9365:86:27","value":{"arguments":[{"name":"value1","nativeSrc":"9437:6:27","nodeType":"YulIdentifier","src":"9437:6:27"},{"name":"tail","nativeSrc":"9446:4:27","nodeType":"YulIdentifier","src":"9446:4:27"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"9373:63:27","nodeType":"YulIdentifier","src":"9373:63:27"},"nativeSrc":"9373:78:27","nodeType":"YulFunctionCall","src":"9373:78:27"},"variableNames":[{"name":"tail","nativeSrc":"9365:4:27","nodeType":"YulIdentifier","src":"9365:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9472:9:27","nodeType":"YulIdentifier","src":"9472:9:27"},{"kind":"number","nativeSrc":"9483:2:27","nodeType":"YulLiteral","src":"9483:2:27","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9468:3:27","nodeType":"YulIdentifier","src":"9468:3:27"},"nativeSrc":"9468:18:27","nodeType":"YulFunctionCall","src":"9468:18:27"},{"arguments":[{"name":"tail","nativeSrc":"9492:4:27","nodeType":"YulIdentifier","src":"9492:4:27"},{"name":"headStart","nativeSrc":"9498:9:27","nodeType":"YulIdentifier","src":"9498:9:27"}],"functionName":{"name":"sub","nativeSrc":"9488:3:27","nodeType":"YulIdentifier","src":"9488:3:27"},"nativeSrc":"9488:20:27","nodeType":"YulFunctionCall","src":"9488:20:27"}],"functionName":{"name":"mstore","nativeSrc":"9461:6:27","nodeType":"YulIdentifier","src":"9461:6:27"},"nativeSrc":"9461:48:27","nodeType":"YulFunctionCall","src":"9461:48:27"},"nativeSrc":"9461:48:27","nodeType":"YulExpressionStatement","src":"9461:48:27"},{"nativeSrc":"9518:86:27","nodeType":"YulAssignment","src":"9518:86:27","value":{"arguments":[{"name":"value2","nativeSrc":"9590:6:27","nodeType":"YulIdentifier","src":"9590:6:27"},{"name":"tail","nativeSrc":"9599:4:27","nodeType":"YulIdentifier","src":"9599:4:27"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"9526:63:27","nodeType":"YulIdentifier","src":"9526:63:27"},"nativeSrc":"9526:78:27","nodeType":"YulFunctionCall","src":"9526:78:27"},"variableNames":[{"name":"tail","nativeSrc":"9518:4:27","nodeType":"YulIdentifier","src":"9518:4:27"}]},{"expression":{"arguments":[{"name":"value3","nativeSrc":"9658:6:27","nodeType":"YulIdentifier","src":"9658:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"9671:9:27","nodeType":"YulIdentifier","src":"9671:9:27"},{"kind":"number","nativeSrc":"9682:2:27","nodeType":"YulLiteral","src":"9682:2:27","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9667:3:27","nodeType":"YulIdentifier","src":"9667:3:27"},"nativeSrc":"9667:18:27","nodeType":"YulFunctionCall","src":"9667:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"9614:43:27","nodeType":"YulIdentifier","src":"9614:43:27"},"nativeSrc":"9614:72:27","nodeType":"YulFunctionCall","src":"9614:72:27"},"nativeSrc":"9614:72:27","nodeType":"YulExpressionStatement","src":"9614:72:27"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"9740:6:27","nodeType":"YulIdentifier","src":"9740:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"9753:9:27","nodeType":"YulIdentifier","src":"9753:9:27"},{"kind":"number","nativeSrc":"9764:3:27","nodeType":"YulLiteral","src":"9764:3:27","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"9749:3:27","nodeType":"YulIdentifier","src":"9749:3:27"},"nativeSrc":"9749:19:27","nodeType":"YulFunctionCall","src":"9749:19:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9696:43:27","nodeType":"YulIdentifier","src":"9696:43:27"},"nativeSrc":"9696:73:27","nodeType":"YulFunctionCall","src":"9696:73:27"},"nativeSrc":"9696:73:27","nodeType":"YulExpressionStatement","src":"9696:73:27"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"9823:6:27","nodeType":"YulIdentifier","src":"9823:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"9836:9:27","nodeType":"YulIdentifier","src":"9836:9:27"},{"kind":"number","nativeSrc":"9847:3:27","nodeType":"YulLiteral","src":"9847:3:27","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"9832:3:27","nodeType":"YulIdentifier","src":"9832:3:27"},"nativeSrc":"9832:19:27","nodeType":"YulFunctionCall","src":"9832:19:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"9779:43:27","nodeType":"YulIdentifier","src":"9779:43:27"},"nativeSrc":"9779:73:27","nodeType":"YulFunctionCall","src":"9779:73:27"},"nativeSrc":"9779:73:27","nodeType":"YulExpressionStatement","src":"9779:73:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9873:9:27","nodeType":"YulIdentifier","src":"9873:9:27"},{"kind":"number","nativeSrc":"9884:3:27","nodeType":"YulLiteral","src":"9884:3:27","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"9869:3:27","nodeType":"YulIdentifier","src":"9869:3:27"},"nativeSrc":"9869:19:27","nodeType":"YulFunctionCall","src":"9869:19:27"},{"arguments":[{"name":"tail","nativeSrc":"9894:4:27","nodeType":"YulIdentifier","src":"9894:4:27"},{"name":"headStart","nativeSrc":"9900:9:27","nodeType":"YulIdentifier","src":"9900:9:27"}],"functionName":{"name":"sub","nativeSrc":"9890:3:27","nodeType":"YulIdentifier","src":"9890:3:27"},"nativeSrc":"9890:20:27","nodeType":"YulFunctionCall","src":"9890:20:27"}],"functionName":{"name":"mstore","nativeSrc":"9862:6:27","nodeType":"YulIdentifier","src":"9862:6:27"},"nativeSrc":"9862:49:27","nodeType":"YulFunctionCall","src":"9862:49:27"},"nativeSrc":"9862:49:27","nodeType":"YulExpressionStatement","src":"9862:49:27"},{"nativeSrc":"9920:116:27","nodeType":"YulAssignment","src":"9920:116:27","value":{"arguments":[{"name":"value6","nativeSrc":"10022:6:27","nodeType":"YulIdentifier","src":"10022:6:27"},{"name":"tail","nativeSrc":"10031:4:27","nodeType":"YulIdentifier","src":"10031:4:27"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"9928:93:27","nodeType":"YulIdentifier","src":"9928:93:27"},"nativeSrc":"9928:108:27","nodeType":"YulFunctionCall","src":"9928:108:27"},"variableNames":[{"name":"tail","nativeSrc":"9920:4:27","nodeType":"YulIdentifier","src":"9920:4:27"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"8828:1215:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9106:9:27","nodeType":"YulTypedName","src":"9106:9:27","type":""},{"name":"value6","nativeSrc":"9118:6:27","nodeType":"YulTypedName","src":"9118:6:27","type":""},{"name":"value5","nativeSrc":"9126:6:27","nodeType":"YulTypedName","src":"9126:6:27","type":""},{"name":"value4","nativeSrc":"9134:6:27","nodeType":"YulTypedName","src":"9134:6:27","type":""},{"name":"value3","nativeSrc":"9142:6:27","nodeType":"YulTypedName","src":"9142:6:27","type":""},{"name":"value2","nativeSrc":"9150:6:27","nodeType":"YulTypedName","src":"9150:6:27","type":""},{"name":"value1","nativeSrc":"9158:6:27","nodeType":"YulTypedName","src":"9158:6:27","type":""},{"name":"value0","nativeSrc":"9166:6:27","nodeType":"YulTypedName","src":"9166:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9177:4:27","nodeType":"YulTypedName","src":"9177:4:27","type":""}],"src":"8828:1215:27"},{"body":{"nativeSrc":"10138:28:27","nodeType":"YulBlock","src":"10138:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10155:1:27","nodeType":"YulLiteral","src":"10155:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"10158:1:27","nodeType":"YulLiteral","src":"10158:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10148:6:27","nodeType":"YulIdentifier","src":"10148:6:27"},"nativeSrc":"10148:12:27","nodeType":"YulFunctionCall","src":"10148:12:27"},"nativeSrc":"10148:12:27","nodeType":"YulExpressionStatement","src":"10148:12:27"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"10049:117:27","nodeType":"YulFunctionDefinition","src":"10049:117:27"},{"body":{"nativeSrc":"10261:28:27","nodeType":"YulBlock","src":"10261:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10278:1:27","nodeType":"YulLiteral","src":"10278:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"10281:1:27","nodeType":"YulLiteral","src":"10281:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10271:6:27","nodeType":"YulIdentifier","src":"10271:6:27"},"nativeSrc":"10271:12:27","nodeType":"YulFunctionCall","src":"10271:12:27"},"nativeSrc":"10271:12:27","nodeType":"YulExpressionStatement","src":"10271:12:27"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"10172:117:27","nodeType":"YulFunctionDefinition","src":"10172:117:27"},{"body":{"nativeSrc":"10323:152:27","nodeType":"YulBlock","src":"10323:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10340:1:27","nodeType":"YulLiteral","src":"10340:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"10343:77:27","nodeType":"YulLiteral","src":"10343:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"10333:6:27","nodeType":"YulIdentifier","src":"10333:6:27"},"nativeSrc":"10333:88:27","nodeType":"YulFunctionCall","src":"10333:88:27"},"nativeSrc":"10333:88:27","nodeType":"YulExpressionStatement","src":"10333:88:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10437:1:27","nodeType":"YulLiteral","src":"10437:1:27","type":"","value":"4"},{"kind":"number","nativeSrc":"10440:4:27","nodeType":"YulLiteral","src":"10440:4:27","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"10430:6:27","nodeType":"YulIdentifier","src":"10430:6:27"},"nativeSrc":"10430:15:27","nodeType":"YulFunctionCall","src":"10430:15:27"},"nativeSrc":"10430:15:27","nodeType":"YulExpressionStatement","src":"10430:15:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10461:1:27","nodeType":"YulLiteral","src":"10461:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"10464:4:27","nodeType":"YulLiteral","src":"10464:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"10454:6:27","nodeType":"YulIdentifier","src":"10454:6:27"},"nativeSrc":"10454:15:27","nodeType":"YulFunctionCall","src":"10454:15:27"},"nativeSrc":"10454:15:27","nodeType":"YulExpressionStatement","src":"10454:15:27"}]},"name":"panic_error_0x41","nativeSrc":"10295:180:27","nodeType":"YulFunctionDefinition","src":"10295:180:27"},{"body":{"nativeSrc":"10524:238:27","nodeType":"YulBlock","src":"10524:238:27","statements":[{"nativeSrc":"10534:58:27","nodeType":"YulVariableDeclaration","src":"10534:58:27","value":{"arguments":[{"name":"memPtr","nativeSrc":"10556:6:27","nodeType":"YulIdentifier","src":"10556:6:27"},{"arguments":[{"name":"size","nativeSrc":"10586:4:27","nodeType":"YulIdentifier","src":"10586:4:27"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"10564:21:27","nodeType":"YulIdentifier","src":"10564:21:27"},"nativeSrc":"10564:27:27","nodeType":"YulFunctionCall","src":"10564:27:27"}],"functionName":{"name":"add","nativeSrc":"10552:3:27","nodeType":"YulIdentifier","src":"10552:3:27"},"nativeSrc":"10552:40:27","nodeType":"YulFunctionCall","src":"10552:40:27"},"variables":[{"name":"newFreePtr","nativeSrc":"10538:10:27","nodeType":"YulTypedName","src":"10538:10:27","type":""}]},{"body":{"nativeSrc":"10703:22:27","nodeType":"YulBlock","src":"10703:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"10705:16:27","nodeType":"YulIdentifier","src":"10705:16:27"},"nativeSrc":"10705:18:27","nodeType":"YulFunctionCall","src":"10705:18:27"},"nativeSrc":"10705:18:27","nodeType":"YulExpressionStatement","src":"10705:18:27"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"10646:10:27","nodeType":"YulIdentifier","src":"10646:10:27"},{"kind":"number","nativeSrc":"10658:18:27","nodeType":"YulLiteral","src":"10658:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"10643:2:27","nodeType":"YulIdentifier","src":"10643:2:27"},"nativeSrc":"10643:34:27","nodeType":"YulFunctionCall","src":"10643:34:27"},{"arguments":[{"name":"newFreePtr","nativeSrc":"10682:10:27","nodeType":"YulIdentifier","src":"10682:10:27"},{"name":"memPtr","nativeSrc":"10694:6:27","nodeType":"YulIdentifier","src":"10694:6:27"}],"functionName":{"name":"lt","nativeSrc":"10679:2:27","nodeType":"YulIdentifier","src":"10679:2:27"},"nativeSrc":"10679:22:27","nodeType":"YulFunctionCall","src":"10679:22:27"}],"functionName":{"name":"or","nativeSrc":"10640:2:27","nodeType":"YulIdentifier","src":"10640:2:27"},"nativeSrc":"10640:62:27","nodeType":"YulFunctionCall","src":"10640:62:27"},"nativeSrc":"10637:88:27","nodeType":"YulIf","src":"10637:88:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10741:2:27","nodeType":"YulLiteral","src":"10741:2:27","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"10745:10:27","nodeType":"YulIdentifier","src":"10745:10:27"}],"functionName":{"name":"mstore","nativeSrc":"10734:6:27","nodeType":"YulIdentifier","src":"10734:6:27"},"nativeSrc":"10734:22:27","nodeType":"YulFunctionCall","src":"10734:22:27"},"nativeSrc":"10734:22:27","nodeType":"YulExpressionStatement","src":"10734:22:27"}]},"name":"finalize_allocation","nativeSrc":"10481:281:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"10510:6:27","nodeType":"YulTypedName","src":"10510:6:27","type":""},{"name":"size","nativeSrc":"10518:4:27","nodeType":"YulTypedName","src":"10518:4:27","type":""}],"src":"10481:281:27"},{"body":{"nativeSrc":"10809:88:27","nodeType":"YulBlock","src":"10809:88:27","statements":[{"nativeSrc":"10819:30:27","nodeType":"YulAssignment","src":"10819:30:27","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"10829:18:27","nodeType":"YulIdentifier","src":"10829:18:27"},"nativeSrc":"10829:20:27","nodeType":"YulFunctionCall","src":"10829:20:27"},"variableNames":[{"name":"memPtr","nativeSrc":"10819:6:27","nodeType":"YulIdentifier","src":"10819:6:27"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"10878:6:27","nodeType":"YulIdentifier","src":"10878:6:27"},{"name":"size","nativeSrc":"10886:4:27","nodeType":"YulIdentifier","src":"10886:4:27"}],"functionName":{"name":"finalize_allocation","nativeSrc":"10858:19:27","nodeType":"YulIdentifier","src":"10858:19:27"},"nativeSrc":"10858:33:27","nodeType":"YulFunctionCall","src":"10858:33:27"},"nativeSrc":"10858:33:27","nodeType":"YulExpressionStatement","src":"10858:33:27"}]},"name":"allocate_memory","nativeSrc":"10768:129:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"10793:4:27","nodeType":"YulTypedName","src":"10793:4:27","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"10802:6:27","nodeType":"YulTypedName","src":"10802:6:27","type":""}],"src":"10768:129:27"},{"body":{"nativeSrc":"10970:241:27","nodeType":"YulBlock","src":"10970:241:27","statements":[{"body":{"nativeSrc":"11075:22:27","nodeType":"YulBlock","src":"11075:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"11077:16:27","nodeType":"YulIdentifier","src":"11077:16:27"},"nativeSrc":"11077:18:27","nodeType":"YulFunctionCall","src":"11077:18:27"},"nativeSrc":"11077:18:27","nodeType":"YulExpressionStatement","src":"11077:18:27"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"11047:6:27","nodeType":"YulIdentifier","src":"11047:6:27"},{"kind":"number","nativeSrc":"11055:18:27","nodeType":"YulLiteral","src":"11055:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"11044:2:27","nodeType":"YulIdentifier","src":"11044:2:27"},"nativeSrc":"11044:30:27","nodeType":"YulFunctionCall","src":"11044:30:27"},"nativeSrc":"11041:56:27","nodeType":"YulIf","src":"11041:56:27"},{"nativeSrc":"11107:37:27","nodeType":"YulAssignment","src":"11107:37:27","value":{"arguments":[{"name":"length","nativeSrc":"11137:6:27","nodeType":"YulIdentifier","src":"11137:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"11115:21:27","nodeType":"YulIdentifier","src":"11115:21:27"},"nativeSrc":"11115:29:27","nodeType":"YulFunctionCall","src":"11115:29:27"},"variableNames":[{"name":"size","nativeSrc":"11107:4:27","nodeType":"YulIdentifier","src":"11107:4:27"}]},{"nativeSrc":"11181:23:27","nodeType":"YulAssignment","src":"11181:23:27","value":{"arguments":[{"name":"size","nativeSrc":"11193:4:27","nodeType":"YulIdentifier","src":"11193:4:27"},{"kind":"number","nativeSrc":"11199:4:27","nodeType":"YulLiteral","src":"11199:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"11189:3:27","nodeType":"YulIdentifier","src":"11189:3:27"},"nativeSrc":"11189:15:27","nodeType":"YulFunctionCall","src":"11189:15:27"},"variableNames":[{"name":"size","nativeSrc":"11181:4:27","nodeType":"YulIdentifier","src":"11181:4:27"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"10903:308:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"10954:6:27","nodeType":"YulTypedName","src":"10954:6:27","type":""}],"returnVariables":[{"name":"size","nativeSrc":"10965:4:27","nodeType":"YulTypedName","src":"10965:4:27","type":""}],"src":"10903:308:27"},{"body":{"nativeSrc":"11281:82:27","nodeType":"YulBlock","src":"11281:82:27","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"11304:3:27","nodeType":"YulIdentifier","src":"11304:3:27"},{"name":"src","nativeSrc":"11309:3:27","nodeType":"YulIdentifier","src":"11309:3:27"},{"name":"length","nativeSrc":"11314:6:27","nodeType":"YulIdentifier","src":"11314:6:27"}],"functionName":{"name":"calldatacopy","nativeSrc":"11291:12:27","nodeType":"YulIdentifier","src":"11291:12:27"},"nativeSrc":"11291:30:27","nodeType":"YulFunctionCall","src":"11291:30:27"},"nativeSrc":"11291:30:27","nodeType":"YulExpressionStatement","src":"11291:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"11341:3:27","nodeType":"YulIdentifier","src":"11341:3:27"},{"name":"length","nativeSrc":"11346:6:27","nodeType":"YulIdentifier","src":"11346:6:27"}],"functionName":{"name":"add","nativeSrc":"11337:3:27","nodeType":"YulIdentifier","src":"11337:3:27"},"nativeSrc":"11337:16:27","nodeType":"YulFunctionCall","src":"11337:16:27"},{"kind":"number","nativeSrc":"11355:1:27","nodeType":"YulLiteral","src":"11355:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"11330:6:27","nodeType":"YulIdentifier","src":"11330:6:27"},"nativeSrc":"11330:27:27","nodeType":"YulFunctionCall","src":"11330:27:27"},"nativeSrc":"11330:27:27","nodeType":"YulExpressionStatement","src":"11330:27:27"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"11217:146:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"11263:3:27","nodeType":"YulTypedName","src":"11263:3:27","type":""},{"name":"dst","nativeSrc":"11268:3:27","nodeType":"YulTypedName","src":"11268:3:27","type":""},{"name":"length","nativeSrc":"11273:6:27","nodeType":"YulTypedName","src":"11273:6:27","type":""}],"src":"11217:146:27"},{"body":{"nativeSrc":"11453:341:27","nodeType":"YulBlock","src":"11453:341:27","statements":[{"nativeSrc":"11463:75:27","nodeType":"YulAssignment","src":"11463:75:27","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"11530:6:27","nodeType":"YulIdentifier","src":"11530:6:27"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"11488:41:27","nodeType":"YulIdentifier","src":"11488:41:27"},"nativeSrc":"11488:49:27","nodeType":"YulFunctionCall","src":"11488:49:27"}],"functionName":{"name":"allocate_memory","nativeSrc":"11472:15:27","nodeType":"YulIdentifier","src":"11472:15:27"},"nativeSrc":"11472:66:27","nodeType":"YulFunctionCall","src":"11472:66:27"},"variableNames":[{"name":"array","nativeSrc":"11463:5:27","nodeType":"YulIdentifier","src":"11463:5:27"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"11554:5:27","nodeType":"YulIdentifier","src":"11554:5:27"},{"name":"length","nativeSrc":"11561:6:27","nodeType":"YulIdentifier","src":"11561:6:27"}],"functionName":{"name":"mstore","nativeSrc":"11547:6:27","nodeType":"YulIdentifier","src":"11547:6:27"},"nativeSrc":"11547:21:27","nodeType":"YulFunctionCall","src":"11547:21:27"},"nativeSrc":"11547:21:27","nodeType":"YulExpressionStatement","src":"11547:21:27"},{"nativeSrc":"11577:27:27","nodeType":"YulVariableDeclaration","src":"11577:27:27","value":{"arguments":[{"name":"array","nativeSrc":"11592:5:27","nodeType":"YulIdentifier","src":"11592:5:27"},{"kind":"number","nativeSrc":"11599:4:27","nodeType":"YulLiteral","src":"11599:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"11588:3:27","nodeType":"YulIdentifier","src":"11588:3:27"},"nativeSrc":"11588:16:27","nodeType":"YulFunctionCall","src":"11588:16:27"},"variables":[{"name":"dst","nativeSrc":"11581:3:27","nodeType":"YulTypedName","src":"11581:3:27","type":""}]},{"body":{"nativeSrc":"11642:83:27","nodeType":"YulBlock","src":"11642:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"11644:77:27","nodeType":"YulIdentifier","src":"11644:77:27"},"nativeSrc":"11644:79:27","nodeType":"YulFunctionCall","src":"11644:79:27"},"nativeSrc":"11644:79:27","nodeType":"YulExpressionStatement","src":"11644:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"11623:3:27","nodeType":"YulIdentifier","src":"11623:3:27"},{"name":"length","nativeSrc":"11628:6:27","nodeType":"YulIdentifier","src":"11628:6:27"}],"functionName":{"name":"add","nativeSrc":"11619:3:27","nodeType":"YulIdentifier","src":"11619:3:27"},"nativeSrc":"11619:16:27","nodeType":"YulFunctionCall","src":"11619:16:27"},{"name":"end","nativeSrc":"11637:3:27","nodeType":"YulIdentifier","src":"11637:3:27"}],"functionName":{"name":"gt","nativeSrc":"11616:2:27","nodeType":"YulIdentifier","src":"11616:2:27"},"nativeSrc":"11616:25:27","nodeType":"YulFunctionCall","src":"11616:25:27"},"nativeSrc":"11613:112:27","nodeType":"YulIf","src":"11613:112:27"},{"expression":{"arguments":[{"name":"src","nativeSrc":"11771:3:27","nodeType":"YulIdentifier","src":"11771:3:27"},{"name":"dst","nativeSrc":"11776:3:27","nodeType":"YulIdentifier","src":"11776:3:27"},{"name":"length","nativeSrc":"11781:6:27","nodeType":"YulIdentifier","src":"11781:6:27"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"11734:36:27","nodeType":"YulIdentifier","src":"11734:36:27"},"nativeSrc":"11734:54:27","nodeType":"YulFunctionCall","src":"11734:54:27"},"nativeSrc":"11734:54:27","nodeType":"YulExpressionStatement","src":"11734:54:27"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nativeSrc":"11369:425:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"11426:3:27","nodeType":"YulTypedName","src":"11426:3:27","type":""},{"name":"length","nativeSrc":"11431:6:27","nodeType":"YulTypedName","src":"11431:6:27","type":""},{"name":"end","nativeSrc":"11439:3:27","nodeType":"YulTypedName","src":"11439:3:27","type":""}],"returnVariables":[{"name":"array","nativeSrc":"11447:5:27","nodeType":"YulTypedName","src":"11447:5:27","type":""}],"src":"11369:425:27"},{"body":{"nativeSrc":"11876:278:27","nodeType":"YulBlock","src":"11876:278:27","statements":[{"body":{"nativeSrc":"11925:83:27","nodeType":"YulBlock","src":"11925:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"11927:77:27","nodeType":"YulIdentifier","src":"11927:77:27"},"nativeSrc":"11927:79:27","nodeType":"YulFunctionCall","src":"11927:79:27"},"nativeSrc":"11927:79:27","nodeType":"YulExpressionStatement","src":"11927:79:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"11904:6:27","nodeType":"YulIdentifier","src":"11904:6:27"},{"kind":"number","nativeSrc":"11912:4:27","nodeType":"YulLiteral","src":"11912:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"11900:3:27","nodeType":"YulIdentifier","src":"11900:3:27"},"nativeSrc":"11900:17:27","nodeType":"YulFunctionCall","src":"11900:17:27"},{"name":"end","nativeSrc":"11919:3:27","nodeType":"YulIdentifier","src":"11919:3:27"}],"functionName":{"name":"slt","nativeSrc":"11896:3:27","nodeType":"YulIdentifier","src":"11896:3:27"},"nativeSrc":"11896:27:27","nodeType":"YulFunctionCall","src":"11896:27:27"}],"functionName":{"name":"iszero","nativeSrc":"11889:6:27","nodeType":"YulIdentifier","src":"11889:6:27"},"nativeSrc":"11889:35:27","nodeType":"YulFunctionCall","src":"11889:35:27"},"nativeSrc":"11886:122:27","nodeType":"YulIf","src":"11886:122:27"},{"nativeSrc":"12017:34:27","nodeType":"YulVariableDeclaration","src":"12017:34:27","value":{"arguments":[{"name":"offset","nativeSrc":"12044:6:27","nodeType":"YulIdentifier","src":"12044:6:27"}],"functionName":{"name":"calldataload","nativeSrc":"12031:12:27","nodeType":"YulIdentifier","src":"12031:12:27"},"nativeSrc":"12031:20:27","nodeType":"YulFunctionCall","src":"12031:20:27"},"variables":[{"name":"length","nativeSrc":"12021:6:27","nodeType":"YulTypedName","src":"12021:6:27","type":""}]},{"nativeSrc":"12060:88:27","nodeType":"YulAssignment","src":"12060:88:27","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"12121:6:27","nodeType":"YulIdentifier","src":"12121:6:27"},{"kind":"number","nativeSrc":"12129:4:27","nodeType":"YulLiteral","src":"12129:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"12117:3:27","nodeType":"YulIdentifier","src":"12117:3:27"},"nativeSrc":"12117:17:27","nodeType":"YulFunctionCall","src":"12117:17:27"},{"name":"length","nativeSrc":"12136:6:27","nodeType":"YulIdentifier","src":"12136:6:27"},{"name":"end","nativeSrc":"12144:3:27","nodeType":"YulIdentifier","src":"12144:3:27"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nativeSrc":"12069:47:27","nodeType":"YulIdentifier","src":"12069:47:27"},"nativeSrc":"12069:79:27","nodeType":"YulFunctionCall","src":"12069:79:27"},"variableNames":[{"name":"array","nativeSrc":"12060:5:27","nodeType":"YulIdentifier","src":"12060:5:27"}]}]},"name":"abi_decode_t_string_memory_ptr","nativeSrc":"11814:340:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"11854:6:27","nodeType":"YulTypedName","src":"11854:6:27","type":""},{"name":"end","nativeSrc":"11862:3:27","nodeType":"YulTypedName","src":"11862:3:27","type":""}],"returnVariables":[{"name":"array","nativeSrc":"11870:5:27","nodeType":"YulTypedName","src":"11870:5:27","type":""}],"src":"11814:340:27"},{"body":{"nativeSrc":"12253:561:27","nodeType":"YulBlock","src":"12253:561:27","statements":[{"body":{"nativeSrc":"12299:83:27","nodeType":"YulBlock","src":"12299:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"12301:77:27","nodeType":"YulIdentifier","src":"12301:77:27"},"nativeSrc":"12301:79:27","nodeType":"YulFunctionCall","src":"12301:79:27"},"nativeSrc":"12301:79:27","nodeType":"YulExpressionStatement","src":"12301:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"12274:7:27","nodeType":"YulIdentifier","src":"12274:7:27"},{"name":"headStart","nativeSrc":"12283:9:27","nodeType":"YulIdentifier","src":"12283:9:27"}],"functionName":{"name":"sub","nativeSrc":"12270:3:27","nodeType":"YulIdentifier","src":"12270:3:27"},"nativeSrc":"12270:23:27","nodeType":"YulFunctionCall","src":"12270:23:27"},{"kind":"number","nativeSrc":"12295:2:27","nodeType":"YulLiteral","src":"12295:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"12266:3:27","nodeType":"YulIdentifier","src":"12266:3:27"},"nativeSrc":"12266:32:27","nodeType":"YulFunctionCall","src":"12266:32:27"},"nativeSrc":"12263:119:27","nodeType":"YulIf","src":"12263:119:27"},{"nativeSrc":"12392:117:27","nodeType":"YulBlock","src":"12392:117:27","statements":[{"nativeSrc":"12407:15:27","nodeType":"YulVariableDeclaration","src":"12407:15:27","value":{"kind":"number","nativeSrc":"12421:1:27","nodeType":"YulLiteral","src":"12421:1:27","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"12411:6:27","nodeType":"YulTypedName","src":"12411:6:27","type":""}]},{"nativeSrc":"12436:63:27","nodeType":"YulAssignment","src":"12436:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12471:9:27","nodeType":"YulIdentifier","src":"12471:9:27"},{"name":"offset","nativeSrc":"12482:6:27","nodeType":"YulIdentifier","src":"12482:6:27"}],"functionName":{"name":"add","nativeSrc":"12467:3:27","nodeType":"YulIdentifier","src":"12467:3:27"},"nativeSrc":"12467:22:27","nodeType":"YulFunctionCall","src":"12467:22:27"},{"name":"dataEnd","nativeSrc":"12491:7:27","nodeType":"YulIdentifier","src":"12491:7:27"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"12446:20:27","nodeType":"YulIdentifier","src":"12446:20:27"},"nativeSrc":"12446:53:27","nodeType":"YulFunctionCall","src":"12446:53:27"},"variableNames":[{"name":"value0","nativeSrc":"12436:6:27","nodeType":"YulIdentifier","src":"12436:6:27"}]}]},{"nativeSrc":"12519:288:27","nodeType":"YulBlock","src":"12519:288:27","statements":[{"nativeSrc":"12534:46:27","nodeType":"YulVariableDeclaration","src":"12534:46:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12565:9:27","nodeType":"YulIdentifier","src":"12565:9:27"},{"kind":"number","nativeSrc":"12576:2:27","nodeType":"YulLiteral","src":"12576:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12561:3:27","nodeType":"YulIdentifier","src":"12561:3:27"},"nativeSrc":"12561:18:27","nodeType":"YulFunctionCall","src":"12561:18:27"}],"functionName":{"name":"calldataload","nativeSrc":"12548:12:27","nodeType":"YulIdentifier","src":"12548:12:27"},"nativeSrc":"12548:32:27","nodeType":"YulFunctionCall","src":"12548:32:27"},"variables":[{"name":"offset","nativeSrc":"12538:6:27","nodeType":"YulTypedName","src":"12538:6:27","type":""}]},{"body":{"nativeSrc":"12627:83:27","nodeType":"YulBlock","src":"12627:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"12629:77:27","nodeType":"YulIdentifier","src":"12629:77:27"},"nativeSrc":"12629:79:27","nodeType":"YulFunctionCall","src":"12629:79:27"},"nativeSrc":"12629:79:27","nodeType":"YulExpressionStatement","src":"12629:79:27"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"12599:6:27","nodeType":"YulIdentifier","src":"12599:6:27"},{"kind":"number","nativeSrc":"12607:18:27","nodeType":"YulLiteral","src":"12607:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"12596:2:27","nodeType":"YulIdentifier","src":"12596:2:27"},"nativeSrc":"12596:30:27","nodeType":"YulFunctionCall","src":"12596:30:27"},"nativeSrc":"12593:117:27","nodeType":"YulIf","src":"12593:117:27"},{"nativeSrc":"12724:73:27","nodeType":"YulAssignment","src":"12724:73:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12769:9:27","nodeType":"YulIdentifier","src":"12769:9:27"},{"name":"offset","nativeSrc":"12780:6:27","nodeType":"YulIdentifier","src":"12780:6:27"}],"functionName":{"name":"add","nativeSrc":"12765:3:27","nodeType":"YulIdentifier","src":"12765:3:27"},"nativeSrc":"12765:22:27","nodeType":"YulFunctionCall","src":"12765:22:27"},{"name":"dataEnd","nativeSrc":"12789:7:27","nodeType":"YulIdentifier","src":"12789:7:27"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"12734:30:27","nodeType":"YulIdentifier","src":"12734:30:27"},"nativeSrc":"12734:63:27","nodeType":"YulFunctionCall","src":"12734:63:27"},"variableNames":[{"name":"value1","nativeSrc":"12724:6:27","nodeType":"YulIdentifier","src":"12724:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_string_memory_ptr","nativeSrc":"12160:654:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12215:9:27","nodeType":"YulTypedName","src":"12215:9:27","type":""},{"name":"dataEnd","nativeSrc":"12226:7:27","nodeType":"YulTypedName","src":"12226:7:27","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"12238:6:27","nodeType":"YulTypedName","src":"12238:6:27","type":""},{"name":"value1","nativeSrc":"12246:6:27","nodeType":"YulTypedName","src":"12246:6:27","type":""}],"src":"12160:654:27"},{"body":{"nativeSrc":"12909:28:27","nodeType":"YulBlock","src":"12909:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12926:1:27","nodeType":"YulLiteral","src":"12926:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"12929:1:27","nodeType":"YulLiteral","src":"12929:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"12919:6:27","nodeType":"YulIdentifier","src":"12919:6:27"},"nativeSrc":"12919:12:27","nodeType":"YulFunctionCall","src":"12919:12:27"},"nativeSrc":"12919:12:27","nodeType":"YulExpressionStatement","src":"12919:12:27"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"12820:117:27","nodeType":"YulFunctionDefinition","src":"12820:117:27"},{"body":{"nativeSrc":"13032:28:27","nodeType":"YulBlock","src":"13032:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13049:1:27","nodeType":"YulLiteral","src":"13049:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"13052:1:27","nodeType":"YulLiteral","src":"13052:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"13042:6:27","nodeType":"YulIdentifier","src":"13042:6:27"},"nativeSrc":"13042:12:27","nodeType":"YulFunctionCall","src":"13042:12:27"},"nativeSrc":"13042:12:27","nodeType":"YulExpressionStatement","src":"13042:12:27"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"12943:117:27","nodeType":"YulFunctionDefinition","src":"12943:117:27"},{"body":{"nativeSrc":"13173:478:27","nodeType":"YulBlock","src":"13173:478:27","statements":[{"body":{"nativeSrc":"13222:83:27","nodeType":"YulBlock","src":"13222:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"13224:77:27","nodeType":"YulIdentifier","src":"13224:77:27"},"nativeSrc":"13224:79:27","nodeType":"YulFunctionCall","src":"13224:79:27"},"nativeSrc":"13224:79:27","nodeType":"YulExpressionStatement","src":"13224:79:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"13201:6:27","nodeType":"YulIdentifier","src":"13201:6:27"},{"kind":"number","nativeSrc":"13209:4:27","nodeType":"YulLiteral","src":"13209:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"13197:3:27","nodeType":"YulIdentifier","src":"13197:3:27"},"nativeSrc":"13197:17:27","nodeType":"YulFunctionCall","src":"13197:17:27"},{"name":"end","nativeSrc":"13216:3:27","nodeType":"YulIdentifier","src":"13216:3:27"}],"functionName":{"name":"slt","nativeSrc":"13193:3:27","nodeType":"YulIdentifier","src":"13193:3:27"},"nativeSrc":"13193:27:27","nodeType":"YulFunctionCall","src":"13193:27:27"}],"functionName":{"name":"iszero","nativeSrc":"13186:6:27","nodeType":"YulIdentifier","src":"13186:6:27"},"nativeSrc":"13186:35:27","nodeType":"YulFunctionCall","src":"13186:35:27"},"nativeSrc":"13183:122:27","nodeType":"YulIf","src":"13183:122:27"},{"nativeSrc":"13314:30:27","nodeType":"YulAssignment","src":"13314:30:27","value":{"arguments":[{"name":"offset","nativeSrc":"13337:6:27","nodeType":"YulIdentifier","src":"13337:6:27"}],"functionName":{"name":"calldataload","nativeSrc":"13324:12:27","nodeType":"YulIdentifier","src":"13324:12:27"},"nativeSrc":"13324:20:27","nodeType":"YulFunctionCall","src":"13324:20:27"},"variableNames":[{"name":"length","nativeSrc":"13314:6:27","nodeType":"YulIdentifier","src":"13314:6:27"}]},{"body":{"nativeSrc":"13387:83:27","nodeType":"YulBlock","src":"13387:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"13389:77:27","nodeType":"YulIdentifier","src":"13389:77:27"},"nativeSrc":"13389:79:27","nodeType":"YulFunctionCall","src":"13389:79:27"},"nativeSrc":"13389:79:27","nodeType":"YulExpressionStatement","src":"13389:79:27"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"13359:6:27","nodeType":"YulIdentifier","src":"13359:6:27"},{"kind":"number","nativeSrc":"13367:18:27","nodeType":"YulLiteral","src":"13367:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"13356:2:27","nodeType":"YulIdentifier","src":"13356:2:27"},"nativeSrc":"13356:30:27","nodeType":"YulFunctionCall","src":"13356:30:27"},"nativeSrc":"13353:117:27","nodeType":"YulIf","src":"13353:117:27"},{"nativeSrc":"13479:29:27","nodeType":"YulAssignment","src":"13479:29:27","value":{"arguments":[{"name":"offset","nativeSrc":"13495:6:27","nodeType":"YulIdentifier","src":"13495:6:27"},{"kind":"number","nativeSrc":"13503:4:27","nodeType":"YulLiteral","src":"13503:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"13491:3:27","nodeType":"YulIdentifier","src":"13491:3:27"},"nativeSrc":"13491:17:27","nodeType":"YulFunctionCall","src":"13491:17:27"},"variableNames":[{"name":"arrayPos","nativeSrc":"13479:8:27","nodeType":"YulIdentifier","src":"13479:8:27"}]},{"body":{"nativeSrc":"13562:83:27","nodeType":"YulBlock","src":"13562:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"13564:77:27","nodeType":"YulIdentifier","src":"13564:77:27"},"nativeSrc":"13564:79:27","nodeType":"YulFunctionCall","src":"13564:79:27"},"nativeSrc":"13564:79:27","nodeType":"YulExpressionStatement","src":"13564:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nativeSrc":"13527:8:27","nodeType":"YulIdentifier","src":"13527:8:27"},{"arguments":[{"name":"length","nativeSrc":"13541:6:27","nodeType":"YulIdentifier","src":"13541:6:27"},{"kind":"number","nativeSrc":"13549:4:27","nodeType":"YulLiteral","src":"13549:4:27","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"13537:3:27","nodeType":"YulIdentifier","src":"13537:3:27"},"nativeSrc":"13537:17:27","nodeType":"YulFunctionCall","src":"13537:17:27"}],"functionName":{"name":"add","nativeSrc":"13523:3:27","nodeType":"YulIdentifier","src":"13523:3:27"},"nativeSrc":"13523:32:27","nodeType":"YulFunctionCall","src":"13523:32:27"},{"name":"end","nativeSrc":"13557:3:27","nodeType":"YulIdentifier","src":"13557:3:27"}],"functionName":{"name":"gt","nativeSrc":"13520:2:27","nodeType":"YulIdentifier","src":"13520:2:27"},"nativeSrc":"13520:41:27","nodeType":"YulFunctionCall","src":"13520:41:27"},"nativeSrc":"13517:128:27","nodeType":"YulIf","src":"13517:128:27"}]},"name":"abi_decode_t_array$_t_address_$dyn_calldata_ptr","nativeSrc":"13083:568:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"13140:6:27","nodeType":"YulTypedName","src":"13140:6:27","type":""},{"name":"end","nativeSrc":"13148:3:27","nodeType":"YulTypedName","src":"13148:3:27","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"13156:8:27","nodeType":"YulTypedName","src":"13156:8:27","type":""},{"name":"length","nativeSrc":"13166:6:27","nodeType":"YulTypedName","src":"13166:6:27","type":""}],"src":"13083:568:27"},{"body":{"nativeSrc":"13758:458:27","nodeType":"YulBlock","src":"13758:458:27","statements":[{"body":{"nativeSrc":"13804:83:27","nodeType":"YulBlock","src":"13804:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"13806:77:27","nodeType":"YulIdentifier","src":"13806:77:27"},"nativeSrc":"13806:79:27","nodeType":"YulFunctionCall","src":"13806:79:27"},"nativeSrc":"13806:79:27","nodeType":"YulExpressionStatement","src":"13806:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"13779:7:27","nodeType":"YulIdentifier","src":"13779:7:27"},{"name":"headStart","nativeSrc":"13788:9:27","nodeType":"YulIdentifier","src":"13788:9:27"}],"functionName":{"name":"sub","nativeSrc":"13775:3:27","nodeType":"YulIdentifier","src":"13775:3:27"},"nativeSrc":"13775:23:27","nodeType":"YulFunctionCall","src":"13775:23:27"},{"kind":"number","nativeSrc":"13800:2:27","nodeType":"YulLiteral","src":"13800:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"13771:3:27","nodeType":"YulIdentifier","src":"13771:3:27"},"nativeSrc":"13771:32:27","nodeType":"YulFunctionCall","src":"13771:32:27"},"nativeSrc":"13768:119:27","nodeType":"YulIf","src":"13768:119:27"},{"nativeSrc":"13897:312:27","nodeType":"YulBlock","src":"13897:312:27","statements":[{"nativeSrc":"13912:45:27","nodeType":"YulVariableDeclaration","src":"13912:45:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13943:9:27","nodeType":"YulIdentifier","src":"13943:9:27"},{"kind":"number","nativeSrc":"13954:1:27","nodeType":"YulLiteral","src":"13954:1:27","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13939:3:27","nodeType":"YulIdentifier","src":"13939:3:27"},"nativeSrc":"13939:17:27","nodeType":"YulFunctionCall","src":"13939:17:27"}],"functionName":{"name":"calldataload","nativeSrc":"13926:12:27","nodeType":"YulIdentifier","src":"13926:12:27"},"nativeSrc":"13926:31:27","nodeType":"YulFunctionCall","src":"13926:31:27"},"variables":[{"name":"offset","nativeSrc":"13916:6:27","nodeType":"YulTypedName","src":"13916:6:27","type":""}]},{"body":{"nativeSrc":"14004:83:27","nodeType":"YulBlock","src":"14004:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"14006:77:27","nodeType":"YulIdentifier","src":"14006:77:27"},"nativeSrc":"14006:79:27","nodeType":"YulFunctionCall","src":"14006:79:27"},"nativeSrc":"14006:79:27","nodeType":"YulExpressionStatement","src":"14006:79:27"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"13976:6:27","nodeType":"YulIdentifier","src":"13976:6:27"},{"kind":"number","nativeSrc":"13984:18:27","nodeType":"YulLiteral","src":"13984:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"13973:2:27","nodeType":"YulIdentifier","src":"13973:2:27"},"nativeSrc":"13973:30:27","nodeType":"YulFunctionCall","src":"13973:30:27"},"nativeSrc":"13970:117:27","nodeType":"YulIf","src":"13970:117:27"},{"nativeSrc":"14101:98:27","nodeType":"YulAssignment","src":"14101:98:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14171:9:27","nodeType":"YulIdentifier","src":"14171:9:27"},{"name":"offset","nativeSrc":"14182:6:27","nodeType":"YulIdentifier","src":"14182:6:27"}],"functionName":{"name":"add","nativeSrc":"14167:3:27","nodeType":"YulIdentifier","src":"14167:3:27"},"nativeSrc":"14167:22:27","nodeType":"YulFunctionCall","src":"14167:22:27"},{"name":"dataEnd","nativeSrc":"14191:7:27","nodeType":"YulIdentifier","src":"14191:7:27"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_calldata_ptr","nativeSrc":"14119:47:27","nodeType":"YulIdentifier","src":"14119:47:27"},"nativeSrc":"14119:80:27","nodeType":"YulFunctionCall","src":"14119:80:27"},"variableNames":[{"name":"value0","nativeSrc":"14101:6:27","nodeType":"YulIdentifier","src":"14101:6:27"},{"name":"value1","nativeSrc":"14109:6:27","nodeType":"YulIdentifier","src":"14109:6:27"}]}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr","nativeSrc":"13657:559:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13720:9:27","nodeType":"YulTypedName","src":"13720:9:27","type":""},{"name":"dataEnd","nativeSrc":"13731:7:27","nodeType":"YulTypedName","src":"13731:7:27","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"13743:6:27","nodeType":"YulTypedName","src":"13743:6:27","type":""},{"name":"value1","nativeSrc":"13751:6:27","nodeType":"YulTypedName","src":"13751:6:27","type":""}],"src":"13657:559:27"},{"body":{"nativeSrc":"14263:77:27","nodeType":"YulBlock","src":"14263:77:27","statements":[{"body":{"nativeSrc":"14318:16:27","nodeType":"YulBlock","src":"14318:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"14327:1:27","nodeType":"YulLiteral","src":"14327:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"14330:1:27","nodeType":"YulLiteral","src":"14330:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"14320:6:27","nodeType":"YulIdentifier","src":"14320:6:27"},"nativeSrc":"14320:12:27","nodeType":"YulFunctionCall","src":"14320:12:27"},"nativeSrc":"14320:12:27","nodeType":"YulExpressionStatement","src":"14320:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"14286:5:27","nodeType":"YulIdentifier","src":"14286:5:27"},{"arguments":[{"name":"value","nativeSrc":"14309:5:27","nodeType":"YulIdentifier","src":"14309:5:27"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"14293:15:27","nodeType":"YulIdentifier","src":"14293:15:27"},"nativeSrc":"14293:22:27","nodeType":"YulFunctionCall","src":"14293:22:27"}],"functionName":{"name":"eq","nativeSrc":"14283:2:27","nodeType":"YulIdentifier","src":"14283:2:27"},"nativeSrc":"14283:33:27","nodeType":"YulFunctionCall","src":"14283:33:27"}],"functionName":{"name":"iszero","nativeSrc":"14276:6:27","nodeType":"YulIdentifier","src":"14276:6:27"},"nativeSrc":"14276:41:27","nodeType":"YulFunctionCall","src":"14276:41:27"},"nativeSrc":"14273:61:27","nodeType":"YulIf","src":"14273:61:27"}]},"name":"validator_revert_t_uint8","nativeSrc":"14222:118:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14256:5:27","nodeType":"YulTypedName","src":"14256:5:27","type":""}],"src":"14222:118:27"},{"body":{"nativeSrc":"14396:85:27","nodeType":"YulBlock","src":"14396:85:27","statements":[{"nativeSrc":"14406:29:27","nodeType":"YulAssignment","src":"14406:29:27","value":{"arguments":[{"name":"offset","nativeSrc":"14428:6:27","nodeType":"YulIdentifier","src":"14428:6:27"}],"functionName":{"name":"calldataload","nativeSrc":"14415:12:27","nodeType":"YulIdentifier","src":"14415:12:27"},"nativeSrc":"14415:20:27","nodeType":"YulFunctionCall","src":"14415:20:27"},"variableNames":[{"name":"value","nativeSrc":"14406:5:27","nodeType":"YulIdentifier","src":"14406:5:27"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"14469:5:27","nodeType":"YulIdentifier","src":"14469:5:27"}],"functionName":{"name":"validator_revert_t_uint8","nativeSrc":"14444:24:27","nodeType":"YulIdentifier","src":"14444:24:27"},"nativeSrc":"14444:31:27","nodeType":"YulFunctionCall","src":"14444:31:27"},"nativeSrc":"14444:31:27","nodeType":"YulExpressionStatement","src":"14444:31:27"}]},"name":"abi_decode_t_uint8","nativeSrc":"14346:135:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"14374:6:27","nodeType":"YulTypedName","src":"14374:6:27","type":""},{"name":"end","nativeSrc":"14382:3:27","nodeType":"YulTypedName","src":"14382:3:27","type":""}],"returnVariables":[{"name":"value","nativeSrc":"14390:5:27","nodeType":"YulTypedName","src":"14390:5:27","type":""}],"src":"14346:135:27"},{"body":{"nativeSrc":"14530:79:27","nodeType":"YulBlock","src":"14530:79:27","statements":[{"body":{"nativeSrc":"14587:16:27","nodeType":"YulBlock","src":"14587:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"14596:1:27","nodeType":"YulLiteral","src":"14596:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"14599:1:27","nodeType":"YulLiteral","src":"14599:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"14589:6:27","nodeType":"YulIdentifier","src":"14589:6:27"},"nativeSrc":"14589:12:27","nodeType":"YulFunctionCall","src":"14589:12:27"},"nativeSrc":"14589:12:27","nodeType":"YulExpressionStatement","src":"14589:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"14553:5:27","nodeType":"YulIdentifier","src":"14553:5:27"},{"arguments":[{"name":"value","nativeSrc":"14578:5:27","nodeType":"YulIdentifier","src":"14578:5:27"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"14560:17:27","nodeType":"YulIdentifier","src":"14560:17:27"},"nativeSrc":"14560:24:27","nodeType":"YulFunctionCall","src":"14560:24:27"}],"functionName":{"name":"eq","nativeSrc":"14550:2:27","nodeType":"YulIdentifier","src":"14550:2:27"},"nativeSrc":"14550:35:27","nodeType":"YulFunctionCall","src":"14550:35:27"}],"functionName":{"name":"iszero","nativeSrc":"14543:6:27","nodeType":"YulIdentifier","src":"14543:6:27"},"nativeSrc":"14543:43:27","nodeType":"YulFunctionCall","src":"14543:43:27"},"nativeSrc":"14540:63:27","nodeType":"YulIf","src":"14540:63:27"}]},"name":"validator_revert_t_bytes32","nativeSrc":"14487:122:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14523:5:27","nodeType":"YulTypedName","src":"14523:5:27","type":""}],"src":"14487:122:27"},{"body":{"nativeSrc":"14667:87:27","nodeType":"YulBlock","src":"14667:87:27","statements":[{"nativeSrc":"14677:29:27","nodeType":"YulAssignment","src":"14677:29:27","value":{"arguments":[{"name":"offset","nativeSrc":"14699:6:27","nodeType":"YulIdentifier","src":"14699:6:27"}],"functionName":{"name":"calldataload","nativeSrc":"14686:12:27","nodeType":"YulIdentifier","src":"14686:12:27"},"nativeSrc":"14686:20:27","nodeType":"YulFunctionCall","src":"14686:20:27"},"variableNames":[{"name":"value","nativeSrc":"14677:5:27","nodeType":"YulIdentifier","src":"14677:5:27"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"14742:5:27","nodeType":"YulIdentifier","src":"14742:5:27"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"14715:26:27","nodeType":"YulIdentifier","src":"14715:26:27"},"nativeSrc":"14715:33:27","nodeType":"YulFunctionCall","src":"14715:33:27"},"nativeSrc":"14715:33:27","nodeType":"YulExpressionStatement","src":"14715:33:27"}]},"name":"abi_decode_t_bytes32","nativeSrc":"14615:139:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"14645:6:27","nodeType":"YulTypedName","src":"14645:6:27","type":""},{"name":"end","nativeSrc":"14653:3:27","nodeType":"YulTypedName","src":"14653:3:27","type":""}],"returnVariables":[{"name":"value","nativeSrc":"14661:5:27","nodeType":"YulTypedName","src":"14661:5:27","type":""}],"src":"14615:139:27"},{"body":{"nativeSrc":"14926:1033:27","nodeType":"YulBlock","src":"14926:1033:27","statements":[{"body":{"nativeSrc":"14973:83:27","nodeType":"YulBlock","src":"14973:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"14975:77:27","nodeType":"YulIdentifier","src":"14975:77:27"},"nativeSrc":"14975:79:27","nodeType":"YulFunctionCall","src":"14975:79:27"},"nativeSrc":"14975:79:27","nodeType":"YulExpressionStatement","src":"14975:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"14947:7:27","nodeType":"YulIdentifier","src":"14947:7:27"},{"name":"headStart","nativeSrc":"14956:9:27","nodeType":"YulIdentifier","src":"14956:9:27"}],"functionName":{"name":"sub","nativeSrc":"14943:3:27","nodeType":"YulIdentifier","src":"14943:3:27"},"nativeSrc":"14943:23:27","nodeType":"YulFunctionCall","src":"14943:23:27"},{"kind":"number","nativeSrc":"14968:3:27","nodeType":"YulLiteral","src":"14968:3:27","type":"","value":"224"}],"functionName":{"name":"slt","nativeSrc":"14939:3:27","nodeType":"YulIdentifier","src":"14939:3:27"},"nativeSrc":"14939:33:27","nodeType":"YulFunctionCall","src":"14939:33:27"},"nativeSrc":"14936:120:27","nodeType":"YulIf","src":"14936:120:27"},{"nativeSrc":"15066:117:27","nodeType":"YulBlock","src":"15066:117:27","statements":[{"nativeSrc":"15081:15:27","nodeType":"YulVariableDeclaration","src":"15081:15:27","value":{"kind":"number","nativeSrc":"15095:1:27","nodeType":"YulLiteral","src":"15095:1:27","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"15085:6:27","nodeType":"YulTypedName","src":"15085:6:27","type":""}]},{"nativeSrc":"15110:63:27","nodeType":"YulAssignment","src":"15110:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15145:9:27","nodeType":"YulIdentifier","src":"15145:9:27"},{"name":"offset","nativeSrc":"15156:6:27","nodeType":"YulIdentifier","src":"15156:6:27"}],"functionName":{"name":"add","nativeSrc":"15141:3:27","nodeType":"YulIdentifier","src":"15141:3:27"},"nativeSrc":"15141:22:27","nodeType":"YulFunctionCall","src":"15141:22:27"},{"name":"dataEnd","nativeSrc":"15165:7:27","nodeType":"YulIdentifier","src":"15165:7:27"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"15120:20:27","nodeType":"YulIdentifier","src":"15120:20:27"},"nativeSrc":"15120:53:27","nodeType":"YulFunctionCall","src":"15120:53:27"},"variableNames":[{"name":"value0","nativeSrc":"15110:6:27","nodeType":"YulIdentifier","src":"15110:6:27"}]}]},{"nativeSrc":"15193:118:27","nodeType":"YulBlock","src":"15193:118:27","statements":[{"nativeSrc":"15208:16:27","nodeType":"YulVariableDeclaration","src":"15208:16:27","value":{"kind":"number","nativeSrc":"15222:2:27","nodeType":"YulLiteral","src":"15222:2:27","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"15212:6:27","nodeType":"YulTypedName","src":"15212:6:27","type":""}]},{"nativeSrc":"15238:63:27","nodeType":"YulAssignment","src":"15238:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15273:9:27","nodeType":"YulIdentifier","src":"15273:9:27"},{"name":"offset","nativeSrc":"15284:6:27","nodeType":"YulIdentifier","src":"15284:6:27"}],"functionName":{"name":"add","nativeSrc":"15269:3:27","nodeType":"YulIdentifier","src":"15269:3:27"},"nativeSrc":"15269:22:27","nodeType":"YulFunctionCall","src":"15269:22:27"},{"name":"dataEnd","nativeSrc":"15293:7:27","nodeType":"YulIdentifier","src":"15293:7:27"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"15248:20:27","nodeType":"YulIdentifier","src":"15248:20:27"},"nativeSrc":"15248:53:27","nodeType":"YulFunctionCall","src":"15248:53:27"},"variableNames":[{"name":"value1","nativeSrc":"15238:6:27","nodeType":"YulIdentifier","src":"15238:6:27"}]}]},{"nativeSrc":"15321:118:27","nodeType":"YulBlock","src":"15321:118:27","statements":[{"nativeSrc":"15336:16:27","nodeType":"YulVariableDeclaration","src":"15336:16:27","value":{"kind":"number","nativeSrc":"15350:2:27","nodeType":"YulLiteral","src":"15350:2:27","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"15340:6:27","nodeType":"YulTypedName","src":"15340:6:27","type":""}]},{"nativeSrc":"15366:63:27","nodeType":"YulAssignment","src":"15366:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15401:9:27","nodeType":"YulIdentifier","src":"15401:9:27"},{"name":"offset","nativeSrc":"15412:6:27","nodeType":"YulIdentifier","src":"15412:6:27"}],"functionName":{"name":"add","nativeSrc":"15397:3:27","nodeType":"YulIdentifier","src":"15397:3:27"},"nativeSrc":"15397:22:27","nodeType":"YulFunctionCall","src":"15397:22:27"},{"name":"dataEnd","nativeSrc":"15421:7:27","nodeType":"YulIdentifier","src":"15421:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"15376:20:27","nodeType":"YulIdentifier","src":"15376:20:27"},"nativeSrc":"15376:53:27","nodeType":"YulFunctionCall","src":"15376:53:27"},"variableNames":[{"name":"value2","nativeSrc":"15366:6:27","nodeType":"YulIdentifier","src":"15366:6:27"}]}]},{"nativeSrc":"15449:118:27","nodeType":"YulBlock","src":"15449:118:27","statements":[{"nativeSrc":"15464:16:27","nodeType":"YulVariableDeclaration","src":"15464:16:27","value":{"kind":"number","nativeSrc":"15478:2:27","nodeType":"YulLiteral","src":"15478:2:27","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"15468:6:27","nodeType":"YulTypedName","src":"15468:6:27","type":""}]},{"nativeSrc":"15494:63:27","nodeType":"YulAssignment","src":"15494:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15529:9:27","nodeType":"YulIdentifier","src":"15529:9:27"},{"name":"offset","nativeSrc":"15540:6:27","nodeType":"YulIdentifier","src":"15540:6:27"}],"functionName":{"name":"add","nativeSrc":"15525:3:27","nodeType":"YulIdentifier","src":"15525:3:27"},"nativeSrc":"15525:22:27","nodeType":"YulFunctionCall","src":"15525:22:27"},{"name":"dataEnd","nativeSrc":"15549:7:27","nodeType":"YulIdentifier","src":"15549:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"15504:20:27","nodeType":"YulIdentifier","src":"15504:20:27"},"nativeSrc":"15504:53:27","nodeType":"YulFunctionCall","src":"15504:53:27"},"variableNames":[{"name":"value3","nativeSrc":"15494:6:27","nodeType":"YulIdentifier","src":"15494:6:27"}]}]},{"nativeSrc":"15577:117:27","nodeType":"YulBlock","src":"15577:117:27","statements":[{"nativeSrc":"15592:17:27","nodeType":"YulVariableDeclaration","src":"15592:17:27","value":{"kind":"number","nativeSrc":"15606:3:27","nodeType":"YulLiteral","src":"15606:3:27","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"15596:6:27","nodeType":"YulTypedName","src":"15596:6:27","type":""}]},{"nativeSrc":"15623:61:27","nodeType":"YulAssignment","src":"15623:61:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15656:9:27","nodeType":"YulIdentifier","src":"15656:9:27"},{"name":"offset","nativeSrc":"15667:6:27","nodeType":"YulIdentifier","src":"15667:6:27"}],"functionName":{"name":"add","nativeSrc":"15652:3:27","nodeType":"YulIdentifier","src":"15652:3:27"},"nativeSrc":"15652:22:27","nodeType":"YulFunctionCall","src":"15652:22:27"},{"name":"dataEnd","nativeSrc":"15676:7:27","nodeType":"YulIdentifier","src":"15676:7:27"}],"functionName":{"name":"abi_decode_t_uint8","nativeSrc":"15633:18:27","nodeType":"YulIdentifier","src":"15633:18:27"},"nativeSrc":"15633:51:27","nodeType":"YulFunctionCall","src":"15633:51:27"},"variableNames":[{"name":"value4","nativeSrc":"15623:6:27","nodeType":"YulIdentifier","src":"15623:6:27"}]}]},{"nativeSrc":"15704:119:27","nodeType":"YulBlock","src":"15704:119:27","statements":[{"nativeSrc":"15719:17:27","nodeType":"YulVariableDeclaration","src":"15719:17:27","value":{"kind":"number","nativeSrc":"15733:3:27","nodeType":"YulLiteral","src":"15733:3:27","type":"","value":"160"},"variables":[{"name":"offset","nativeSrc":"15723:6:27","nodeType":"YulTypedName","src":"15723:6:27","type":""}]},{"nativeSrc":"15750:63:27","nodeType":"YulAssignment","src":"15750:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15785:9:27","nodeType":"YulIdentifier","src":"15785:9:27"},{"name":"offset","nativeSrc":"15796:6:27","nodeType":"YulIdentifier","src":"15796:6:27"}],"functionName":{"name":"add","nativeSrc":"15781:3:27","nodeType":"YulIdentifier","src":"15781:3:27"},"nativeSrc":"15781:22:27","nodeType":"YulFunctionCall","src":"15781:22:27"},{"name":"dataEnd","nativeSrc":"15805:7:27","nodeType":"YulIdentifier","src":"15805:7:27"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"15760:20:27","nodeType":"YulIdentifier","src":"15760:20:27"},"nativeSrc":"15760:53:27","nodeType":"YulFunctionCall","src":"15760:53:27"},"variableNames":[{"name":"value5","nativeSrc":"15750:6:27","nodeType":"YulIdentifier","src":"15750:6:27"}]}]},{"nativeSrc":"15833:119:27","nodeType":"YulBlock","src":"15833:119:27","statements":[{"nativeSrc":"15848:17:27","nodeType":"YulVariableDeclaration","src":"15848:17:27","value":{"kind":"number","nativeSrc":"15862:3:27","nodeType":"YulLiteral","src":"15862:3:27","type":"","value":"192"},"variables":[{"name":"offset","nativeSrc":"15852:6:27","nodeType":"YulTypedName","src":"15852:6:27","type":""}]},{"nativeSrc":"15879:63:27","nodeType":"YulAssignment","src":"15879:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15914:9:27","nodeType":"YulIdentifier","src":"15914:9:27"},{"name":"offset","nativeSrc":"15925:6:27","nodeType":"YulIdentifier","src":"15925:6:27"}],"functionName":{"name":"add","nativeSrc":"15910:3:27","nodeType":"YulIdentifier","src":"15910:3:27"},"nativeSrc":"15910:22:27","nodeType":"YulFunctionCall","src":"15910:22:27"},{"name":"dataEnd","nativeSrc":"15934:7:27","nodeType":"YulIdentifier","src":"15934:7:27"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"15889:20:27","nodeType":"YulIdentifier","src":"15889:20:27"},"nativeSrc":"15889:53:27","nodeType":"YulFunctionCall","src":"15889:53:27"},"variableNames":[{"name":"value6","nativeSrc":"15879:6:27","nodeType":"YulIdentifier","src":"15879:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nativeSrc":"14760:1199:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14848:9:27","nodeType":"YulTypedName","src":"14848:9:27","type":""},{"name":"dataEnd","nativeSrc":"14859:7:27","nodeType":"YulTypedName","src":"14859:7:27","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"14871:6:27","nodeType":"YulTypedName","src":"14871:6:27","type":""},{"name":"value1","nativeSrc":"14879:6:27","nodeType":"YulTypedName","src":"14879:6:27","type":""},{"name":"value2","nativeSrc":"14887:6:27","nodeType":"YulTypedName","src":"14887:6:27","type":""},{"name":"value3","nativeSrc":"14895:6:27","nodeType":"YulTypedName","src":"14895:6:27","type":""},{"name":"value4","nativeSrc":"14903:6:27","nodeType":"YulTypedName","src":"14903:6:27","type":""},{"name":"value5","nativeSrc":"14911:6:27","nodeType":"YulTypedName","src":"14911:6:27","type":""},{"name":"value6","nativeSrc":"14919:6:27","nodeType":"YulTypedName","src":"14919:6:27","type":""}],"src":"14760:1199:27"},{"body":{"nativeSrc":"16048:391:27","nodeType":"YulBlock","src":"16048:391:27","statements":[{"body":{"nativeSrc":"16094:83:27","nodeType":"YulBlock","src":"16094:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"16096:77:27","nodeType":"YulIdentifier","src":"16096:77:27"},"nativeSrc":"16096:79:27","nodeType":"YulFunctionCall","src":"16096:79:27"},"nativeSrc":"16096:79:27","nodeType":"YulExpressionStatement","src":"16096:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"16069:7:27","nodeType":"YulIdentifier","src":"16069:7:27"},{"name":"headStart","nativeSrc":"16078:9:27","nodeType":"YulIdentifier","src":"16078:9:27"}],"functionName":{"name":"sub","nativeSrc":"16065:3:27","nodeType":"YulIdentifier","src":"16065:3:27"},"nativeSrc":"16065:23:27","nodeType":"YulFunctionCall","src":"16065:23:27"},{"kind":"number","nativeSrc":"16090:2:27","nodeType":"YulLiteral","src":"16090:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"16061:3:27","nodeType":"YulIdentifier","src":"16061:3:27"},"nativeSrc":"16061:32:27","nodeType":"YulFunctionCall","src":"16061:32:27"},"nativeSrc":"16058:119:27","nodeType":"YulIf","src":"16058:119:27"},{"nativeSrc":"16187:117:27","nodeType":"YulBlock","src":"16187:117:27","statements":[{"nativeSrc":"16202:15:27","nodeType":"YulVariableDeclaration","src":"16202:15:27","value":{"kind":"number","nativeSrc":"16216:1:27","nodeType":"YulLiteral","src":"16216:1:27","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"16206:6:27","nodeType":"YulTypedName","src":"16206:6:27","type":""}]},{"nativeSrc":"16231:63:27","nodeType":"YulAssignment","src":"16231:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16266:9:27","nodeType":"YulIdentifier","src":"16266:9:27"},{"name":"offset","nativeSrc":"16277:6:27","nodeType":"YulIdentifier","src":"16277:6:27"}],"functionName":{"name":"add","nativeSrc":"16262:3:27","nodeType":"YulIdentifier","src":"16262:3:27"},"nativeSrc":"16262:22:27","nodeType":"YulFunctionCall","src":"16262:22:27"},{"name":"dataEnd","nativeSrc":"16286:7:27","nodeType":"YulIdentifier","src":"16286:7:27"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"16241:20:27","nodeType":"YulIdentifier","src":"16241:20:27"},"nativeSrc":"16241:53:27","nodeType":"YulFunctionCall","src":"16241:53:27"},"variableNames":[{"name":"value0","nativeSrc":"16231:6:27","nodeType":"YulIdentifier","src":"16231:6:27"}]}]},{"nativeSrc":"16314:118:27","nodeType":"YulBlock","src":"16314:118:27","statements":[{"nativeSrc":"16329:16:27","nodeType":"YulVariableDeclaration","src":"16329:16:27","value":{"kind":"number","nativeSrc":"16343:2:27","nodeType":"YulLiteral","src":"16343:2:27","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"16333:6:27","nodeType":"YulTypedName","src":"16333:6:27","type":""}]},{"nativeSrc":"16359:63:27","nodeType":"YulAssignment","src":"16359:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16394:9:27","nodeType":"YulIdentifier","src":"16394:9:27"},{"name":"offset","nativeSrc":"16405:6:27","nodeType":"YulIdentifier","src":"16405:6:27"}],"functionName":{"name":"add","nativeSrc":"16390:3:27","nodeType":"YulIdentifier","src":"16390:3:27"},"nativeSrc":"16390:22:27","nodeType":"YulFunctionCall","src":"16390:22:27"},{"name":"dataEnd","nativeSrc":"16414:7:27","nodeType":"YulIdentifier","src":"16414:7:27"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"16369:20:27","nodeType":"YulIdentifier","src":"16369:20:27"},"nativeSrc":"16369:53:27","nodeType":"YulFunctionCall","src":"16369:53:27"},"variableNames":[{"name":"value1","nativeSrc":"16359:6:27","nodeType":"YulIdentifier","src":"16359:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"15965:474:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16010:9:27","nodeType":"YulTypedName","src":"16010:9:27","type":""},{"name":"dataEnd","nativeSrc":"16021:7:27","nodeType":"YulTypedName","src":"16021:7:27","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"16033:6:27","nodeType":"YulTypedName","src":"16033:6:27","type":""},{"name":"value1","nativeSrc":"16041:6:27","nodeType":"YulTypedName","src":"16041:6:27","type":""}],"src":"15965:474:27"},{"body":{"nativeSrc":"16473:152:27","nodeType":"YulBlock","src":"16473:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"16490:1:27","nodeType":"YulLiteral","src":"16490:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"16493:77:27","nodeType":"YulLiteral","src":"16493:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"16483:6:27","nodeType":"YulIdentifier","src":"16483:6:27"},"nativeSrc":"16483:88:27","nodeType":"YulFunctionCall","src":"16483:88:27"},"nativeSrc":"16483:88:27","nodeType":"YulExpressionStatement","src":"16483:88:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"16587:1:27","nodeType":"YulLiteral","src":"16587:1:27","type":"","value":"4"},{"kind":"number","nativeSrc":"16590:4:27","nodeType":"YulLiteral","src":"16590:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"16580:6:27","nodeType":"YulIdentifier","src":"16580:6:27"},"nativeSrc":"16580:15:27","nodeType":"YulFunctionCall","src":"16580:15:27"},"nativeSrc":"16580:15:27","nodeType":"YulExpressionStatement","src":"16580:15:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"16611:1:27","nodeType":"YulLiteral","src":"16611:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"16614:4:27","nodeType":"YulLiteral","src":"16614:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"16604:6:27","nodeType":"YulIdentifier","src":"16604:6:27"},"nativeSrc":"16604:15:27","nodeType":"YulFunctionCall","src":"16604:15:27"},"nativeSrc":"16604:15:27","nodeType":"YulExpressionStatement","src":"16604:15:27"}]},"name":"panic_error_0x22","nativeSrc":"16445:180:27","nodeType":"YulFunctionDefinition","src":"16445:180:27"},{"body":{"nativeSrc":"16682:269:27","nodeType":"YulBlock","src":"16682:269:27","statements":[{"nativeSrc":"16692:22:27","nodeType":"YulAssignment","src":"16692:22:27","value":{"arguments":[{"name":"data","nativeSrc":"16706:4:27","nodeType":"YulIdentifier","src":"16706:4:27"},{"kind":"number","nativeSrc":"16712:1:27","nodeType":"YulLiteral","src":"16712:1:27","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"16702:3:27","nodeType":"YulIdentifier","src":"16702:3:27"},"nativeSrc":"16702:12:27","nodeType":"YulFunctionCall","src":"16702:12:27"},"variableNames":[{"name":"length","nativeSrc":"16692:6:27","nodeType":"YulIdentifier","src":"16692:6:27"}]},{"nativeSrc":"16723:38:27","nodeType":"YulVariableDeclaration","src":"16723:38:27","value":{"arguments":[{"name":"data","nativeSrc":"16753:4:27","nodeType":"YulIdentifier","src":"16753:4:27"},{"kind":"number","nativeSrc":"16759:1:27","nodeType":"YulLiteral","src":"16759:1:27","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"16749:3:27","nodeType":"YulIdentifier","src":"16749:3:27"},"nativeSrc":"16749:12:27","nodeType":"YulFunctionCall","src":"16749:12:27"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"16727:18:27","nodeType":"YulTypedName","src":"16727:18:27","type":""}]},{"body":{"nativeSrc":"16800:51:27","nodeType":"YulBlock","src":"16800:51:27","statements":[{"nativeSrc":"16814:27:27","nodeType":"YulAssignment","src":"16814:27:27","value":{"arguments":[{"name":"length","nativeSrc":"16828:6:27","nodeType":"YulIdentifier","src":"16828:6:27"},{"kind":"number","nativeSrc":"16836:4:27","nodeType":"YulLiteral","src":"16836:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"16824:3:27","nodeType":"YulIdentifier","src":"16824:3:27"},"nativeSrc":"16824:17:27","nodeType":"YulFunctionCall","src":"16824:17:27"},"variableNames":[{"name":"length","nativeSrc":"16814:6:27","nodeType":"YulIdentifier","src":"16814:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"16780:18:27","nodeType":"YulIdentifier","src":"16780:18:27"}],"functionName":{"name":"iszero","nativeSrc":"16773:6:27","nodeType":"YulIdentifier","src":"16773:6:27"},"nativeSrc":"16773:26:27","nodeType":"YulFunctionCall","src":"16773:26:27"},"nativeSrc":"16770:81:27","nodeType":"YulIf","src":"16770:81:27"},{"body":{"nativeSrc":"16903:42:27","nodeType":"YulBlock","src":"16903:42:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"16917:16:27","nodeType":"YulIdentifier","src":"16917:16:27"},"nativeSrc":"16917:18:27","nodeType":"YulFunctionCall","src":"16917:18:27"},"nativeSrc":"16917:18:27","nodeType":"YulExpressionStatement","src":"16917:18:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"16867:18:27","nodeType":"YulIdentifier","src":"16867:18:27"},{"arguments":[{"name":"length","nativeSrc":"16890:6:27","nodeType":"YulIdentifier","src":"16890:6:27"},{"kind":"number","nativeSrc":"16898:2:27","nodeType":"YulLiteral","src":"16898:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"16887:2:27","nodeType":"YulIdentifier","src":"16887:2:27"},"nativeSrc":"16887:14:27","nodeType":"YulFunctionCall","src":"16887:14:27"}],"functionName":{"name":"eq","nativeSrc":"16864:2:27","nodeType":"YulIdentifier","src":"16864:2:27"},"nativeSrc":"16864:38:27","nodeType":"YulFunctionCall","src":"16864:38:27"},"nativeSrc":"16861:84:27","nodeType":"YulIf","src":"16861:84:27"}]},"name":"extract_byte_array_length","nativeSrc":"16631:320:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"16666:4:27","nodeType":"YulTypedName","src":"16666:4:27","type":""}],"returnVariables":[{"name":"length","nativeSrc":"16675:6:27","nodeType":"YulTypedName","src":"16675:6:27","type":""}],"src":"16631:320:27"},{"body":{"nativeSrc":"17083:206:27","nodeType":"YulBlock","src":"17083:206:27","statements":[{"nativeSrc":"17093:26:27","nodeType":"YulAssignment","src":"17093:26:27","value":{"arguments":[{"name":"headStart","nativeSrc":"17105:9:27","nodeType":"YulIdentifier","src":"17105:9:27"},{"kind":"number","nativeSrc":"17116:2:27","nodeType":"YulLiteral","src":"17116:2:27","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17101:3:27","nodeType":"YulIdentifier","src":"17101:3:27"},"nativeSrc":"17101:18:27","nodeType":"YulFunctionCall","src":"17101:18:27"},"variableNames":[{"name":"tail","nativeSrc":"17093:4:27","nodeType":"YulIdentifier","src":"17093:4:27"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"17173:6:27","nodeType":"YulIdentifier","src":"17173:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"17186:9:27","nodeType":"YulIdentifier","src":"17186:9:27"},{"kind":"number","nativeSrc":"17197:1:27","nodeType":"YulLiteral","src":"17197:1:27","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"17182:3:27","nodeType":"YulIdentifier","src":"17182:3:27"},"nativeSrc":"17182:17:27","nodeType":"YulFunctionCall","src":"17182:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"17129:43:27","nodeType":"YulIdentifier","src":"17129:43:27"},"nativeSrc":"17129:71:27","nodeType":"YulFunctionCall","src":"17129:71:27"},"nativeSrc":"17129:71:27","nodeType":"YulExpressionStatement","src":"17129:71:27"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"17254:6:27","nodeType":"YulIdentifier","src":"17254:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"17267:9:27","nodeType":"YulIdentifier","src":"17267:9:27"},{"kind":"number","nativeSrc":"17278:2:27","nodeType":"YulLiteral","src":"17278:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17263:3:27","nodeType":"YulIdentifier","src":"17263:3:27"},"nativeSrc":"17263:18:27","nodeType":"YulFunctionCall","src":"17263:18:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"17210:43:27","nodeType":"YulIdentifier","src":"17210:43:27"},"nativeSrc":"17210:72:27","nodeType":"YulFunctionCall","src":"17210:72:27"},"nativeSrc":"17210:72:27","nodeType":"YulExpressionStatement","src":"17210:72:27"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"16957:332:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17047:9:27","nodeType":"YulTypedName","src":"17047:9:27","type":""},{"name":"value1","nativeSrc":"17059:6:27","nodeType":"YulTypedName","src":"17059:6:27","type":""},{"name":"value0","nativeSrc":"17067:6:27","nodeType":"YulTypedName","src":"17067:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17078:4:27","nodeType":"YulTypedName","src":"17078:4:27","type":""}],"src":"16957:332:27"},{"body":{"nativeSrc":"17323:152:27","nodeType":"YulBlock","src":"17323:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"17340:1:27","nodeType":"YulLiteral","src":"17340:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"17343:77:27","nodeType":"YulLiteral","src":"17343:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"17333:6:27","nodeType":"YulIdentifier","src":"17333:6:27"},"nativeSrc":"17333:88:27","nodeType":"YulFunctionCall","src":"17333:88:27"},"nativeSrc":"17333:88:27","nodeType":"YulExpressionStatement","src":"17333:88:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17437:1:27","nodeType":"YulLiteral","src":"17437:1:27","type":"","value":"4"},{"kind":"number","nativeSrc":"17440:4:27","nodeType":"YulLiteral","src":"17440:4:27","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"17430:6:27","nodeType":"YulIdentifier","src":"17430:6:27"},"nativeSrc":"17430:15:27","nodeType":"YulFunctionCall","src":"17430:15:27"},"nativeSrc":"17430:15:27","nodeType":"YulExpressionStatement","src":"17430:15:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17461:1:27","nodeType":"YulLiteral","src":"17461:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"17464:4:27","nodeType":"YulLiteral","src":"17464:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"17454:6:27","nodeType":"YulIdentifier","src":"17454:6:27"},"nativeSrc":"17454:15:27","nodeType":"YulFunctionCall","src":"17454:15:27"},"nativeSrc":"17454:15:27","nodeType":"YulExpressionStatement","src":"17454:15:27"}]},"name":"panic_error_0x32","nativeSrc":"17295:180:27","nodeType":"YulFunctionDefinition","src":"17295:180:27"},{"body":{"nativeSrc":"17509:152:27","nodeType":"YulBlock","src":"17509:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"17526:1:27","nodeType":"YulLiteral","src":"17526:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"17529:77:27","nodeType":"YulLiteral","src":"17529:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"17519:6:27","nodeType":"YulIdentifier","src":"17519:6:27"},"nativeSrc":"17519:88:27","nodeType":"YulFunctionCall","src":"17519:88:27"},"nativeSrc":"17519:88:27","nodeType":"YulExpressionStatement","src":"17519:88:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17623:1:27","nodeType":"YulLiteral","src":"17623:1:27","type":"","value":"4"},{"kind":"number","nativeSrc":"17626:4:27","nodeType":"YulLiteral","src":"17626:4:27","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"17616:6:27","nodeType":"YulIdentifier","src":"17616:6:27"},"nativeSrc":"17616:15:27","nodeType":"YulFunctionCall","src":"17616:15:27"},"nativeSrc":"17616:15:27","nodeType":"YulExpressionStatement","src":"17616:15:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17647:1:27","nodeType":"YulLiteral","src":"17647:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"17650:4:27","nodeType":"YulLiteral","src":"17650:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"17640:6:27","nodeType":"YulIdentifier","src":"17640:6:27"},"nativeSrc":"17640:15:27","nodeType":"YulFunctionCall","src":"17640:15:27"},"nativeSrc":"17640:15:27","nodeType":"YulExpressionStatement","src":"17640:15:27"}]},"name":"panic_error_0x11","nativeSrc":"17481:180:27","nodeType":"YulFunctionDefinition","src":"17481:180:27"},{"body":{"nativeSrc":"17711:147:27","nodeType":"YulBlock","src":"17711:147:27","statements":[{"nativeSrc":"17721:25:27","nodeType":"YulAssignment","src":"17721:25:27","value":{"arguments":[{"name":"x","nativeSrc":"17744:1:27","nodeType":"YulIdentifier","src":"17744:1:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"17726:17:27","nodeType":"YulIdentifier","src":"17726:17:27"},"nativeSrc":"17726:20:27","nodeType":"YulFunctionCall","src":"17726:20:27"},"variableNames":[{"name":"x","nativeSrc":"17721:1:27","nodeType":"YulIdentifier","src":"17721:1:27"}]},{"nativeSrc":"17755:25:27","nodeType":"YulAssignment","src":"17755:25:27","value":{"arguments":[{"name":"y","nativeSrc":"17778:1:27","nodeType":"YulIdentifier","src":"17778:1:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"17760:17:27","nodeType":"YulIdentifier","src":"17760:17:27"},"nativeSrc":"17760:20:27","nodeType":"YulFunctionCall","src":"17760:20:27"},"variableNames":[{"name":"y","nativeSrc":"17755:1:27","nodeType":"YulIdentifier","src":"17755:1:27"}]},{"nativeSrc":"17789:16:27","nodeType":"YulAssignment","src":"17789:16:27","value":{"arguments":[{"name":"x","nativeSrc":"17800:1:27","nodeType":"YulIdentifier","src":"17800:1:27"},{"name":"y","nativeSrc":"17803:1:27","nodeType":"YulIdentifier","src":"17803:1:27"}],"functionName":{"name":"add","nativeSrc":"17796:3:27","nodeType":"YulIdentifier","src":"17796:3:27"},"nativeSrc":"17796:9:27","nodeType":"YulFunctionCall","src":"17796:9:27"},"variableNames":[{"name":"sum","nativeSrc":"17789:3:27","nodeType":"YulIdentifier","src":"17789:3:27"}]},{"body":{"nativeSrc":"17829:22:27","nodeType":"YulBlock","src":"17829:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"17831:16:27","nodeType":"YulIdentifier","src":"17831:16:27"},"nativeSrc":"17831:18:27","nodeType":"YulFunctionCall","src":"17831:18:27"},"nativeSrc":"17831:18:27","nodeType":"YulExpressionStatement","src":"17831:18:27"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"17821:1:27","nodeType":"YulIdentifier","src":"17821:1:27"},{"name":"sum","nativeSrc":"17824:3:27","nodeType":"YulIdentifier","src":"17824:3:27"}],"functionName":{"name":"gt","nativeSrc":"17818:2:27","nodeType":"YulIdentifier","src":"17818:2:27"},"nativeSrc":"17818:10:27","nodeType":"YulFunctionCall","src":"17818:10:27"},"nativeSrc":"17815:36:27","nodeType":"YulIf","src":"17815:36:27"}]},"name":"checked_add_t_uint256","nativeSrc":"17667:191:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"17698:1:27","nodeType":"YulTypedName","src":"17698:1:27","type":""},{"name":"y","nativeSrc":"17701:1:27","nodeType":"YulTypedName","src":"17701:1:27","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"17707:3:27","nodeType":"YulTypedName","src":"17707:3:27","type":""}],"src":"17667:191:27"},{"body":{"nativeSrc":"17912:362:27","nodeType":"YulBlock","src":"17912:362:27","statements":[{"nativeSrc":"17922:25:27","nodeType":"YulAssignment","src":"17922:25:27","value":{"arguments":[{"name":"x","nativeSrc":"17945:1:27","nodeType":"YulIdentifier","src":"17945:1:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"17927:17:27","nodeType":"YulIdentifier","src":"17927:17:27"},"nativeSrc":"17927:20:27","nodeType":"YulFunctionCall","src":"17927:20:27"},"variableNames":[{"name":"x","nativeSrc":"17922:1:27","nodeType":"YulIdentifier","src":"17922:1:27"}]},{"nativeSrc":"17956:25:27","nodeType":"YulAssignment","src":"17956:25:27","value":{"arguments":[{"name":"y","nativeSrc":"17979:1:27","nodeType":"YulIdentifier","src":"17979:1:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"17961:17:27","nodeType":"YulIdentifier","src":"17961:17:27"},"nativeSrc":"17961:20:27","nodeType":"YulFunctionCall","src":"17961:20:27"},"variableNames":[{"name":"y","nativeSrc":"17956:1:27","nodeType":"YulIdentifier","src":"17956:1:27"}]},{"nativeSrc":"17990:28:27","nodeType":"YulVariableDeclaration","src":"17990:28:27","value":{"arguments":[{"name":"x","nativeSrc":"18013:1:27","nodeType":"YulIdentifier","src":"18013:1:27"},{"name":"y","nativeSrc":"18016:1:27","nodeType":"YulIdentifier","src":"18016:1:27"}],"functionName":{"name":"mul","nativeSrc":"18009:3:27","nodeType":"YulIdentifier","src":"18009:3:27"},"nativeSrc":"18009:9:27","nodeType":"YulFunctionCall","src":"18009:9:27"},"variables":[{"name":"product_raw","nativeSrc":"17994:11:27","nodeType":"YulTypedName","src":"17994:11:27","type":""}]},{"nativeSrc":"18027:41:27","nodeType":"YulAssignment","src":"18027:41:27","value":{"arguments":[{"name":"product_raw","nativeSrc":"18056:11:27","nodeType":"YulIdentifier","src":"18056:11:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"18038:17:27","nodeType":"YulIdentifier","src":"18038:17:27"},"nativeSrc":"18038:30:27","nodeType":"YulFunctionCall","src":"18038:30:27"},"variableNames":[{"name":"product","nativeSrc":"18027:7:27","nodeType":"YulIdentifier","src":"18027:7:27"}]},{"body":{"nativeSrc":"18245:22:27","nodeType":"YulBlock","src":"18245:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"18247:16:27","nodeType":"YulIdentifier","src":"18247:16:27"},"nativeSrc":"18247:18:27","nodeType":"YulFunctionCall","src":"18247:18:27"},"nativeSrc":"18247:18:27","nodeType":"YulExpressionStatement","src":"18247:18:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"18178:1:27","nodeType":"YulIdentifier","src":"18178:1:27"}],"functionName":{"name":"iszero","nativeSrc":"18171:6:27","nodeType":"YulIdentifier","src":"18171:6:27"},"nativeSrc":"18171:9:27","nodeType":"YulFunctionCall","src":"18171:9:27"},{"arguments":[{"name":"y","nativeSrc":"18201:1:27","nodeType":"YulIdentifier","src":"18201:1:27"},{"arguments":[{"name":"product","nativeSrc":"18208:7:27","nodeType":"YulIdentifier","src":"18208:7:27"},{"name":"x","nativeSrc":"18217:1:27","nodeType":"YulIdentifier","src":"18217:1:27"}],"functionName":{"name":"div","nativeSrc":"18204:3:27","nodeType":"YulIdentifier","src":"18204:3:27"},"nativeSrc":"18204:15:27","nodeType":"YulFunctionCall","src":"18204:15:27"}],"functionName":{"name":"eq","nativeSrc":"18198:2:27","nodeType":"YulIdentifier","src":"18198:2:27"},"nativeSrc":"18198:22:27","nodeType":"YulFunctionCall","src":"18198:22:27"}],"functionName":{"name":"or","nativeSrc":"18151:2:27","nodeType":"YulIdentifier","src":"18151:2:27"},"nativeSrc":"18151:83:27","nodeType":"YulFunctionCall","src":"18151:83:27"}],"functionName":{"name":"iszero","nativeSrc":"18131:6:27","nodeType":"YulIdentifier","src":"18131:6:27"},"nativeSrc":"18131:113:27","nodeType":"YulFunctionCall","src":"18131:113:27"},"nativeSrc":"18128:139:27","nodeType":"YulIf","src":"18128:139:27"}]},"name":"checked_mul_t_uint256","nativeSrc":"17864:410:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"17895:1:27","nodeType":"YulTypedName","src":"17895:1:27","type":""},{"name":"y","nativeSrc":"17898:1:27","nodeType":"YulTypedName","src":"17898:1:27","type":""}],"returnVariables":[{"name":"product","nativeSrc":"17904:7:27","nodeType":"YulTypedName","src":"17904:7:27","type":""}],"src":"17864:410:27"},{"body":{"nativeSrc":"18386:114:27","nodeType":"YulBlock","src":"18386:114:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"18408:6:27","nodeType":"YulIdentifier","src":"18408:6:27"},{"kind":"number","nativeSrc":"18416:1:27","nodeType":"YulLiteral","src":"18416:1:27","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"18404:3:27","nodeType":"YulIdentifier","src":"18404:3:27"},"nativeSrc":"18404:14:27","nodeType":"YulFunctionCall","src":"18404:14:27"},{"hexValue":"4172617261436f696e2074726164696e6720616c726561647920656e61626c65","kind":"string","nativeSrc":"18420:34:27","nodeType":"YulLiteral","src":"18420:34:27","type":"","value":"AraraCoin trading already enable"}],"functionName":{"name":"mstore","nativeSrc":"18397:6:27","nodeType":"YulIdentifier","src":"18397:6:27"},"nativeSrc":"18397:58:27","nodeType":"YulFunctionCall","src":"18397:58:27"},"nativeSrc":"18397:58:27","nodeType":"YulExpressionStatement","src":"18397:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"18476:6:27","nodeType":"YulIdentifier","src":"18476:6:27"},{"kind":"number","nativeSrc":"18484:2:27","nodeType":"YulLiteral","src":"18484:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18472:3:27","nodeType":"YulIdentifier","src":"18472:3:27"},"nativeSrc":"18472:15:27","nodeType":"YulFunctionCall","src":"18472:15:27"},{"hexValue":"64","kind":"string","nativeSrc":"18489:3:27","nodeType":"YulLiteral","src":"18489:3:27","type":"","value":"d"}],"functionName":{"name":"mstore","nativeSrc":"18465:6:27","nodeType":"YulIdentifier","src":"18465:6:27"},"nativeSrc":"18465:28:27","nodeType":"YulFunctionCall","src":"18465:28:27"},"nativeSrc":"18465:28:27","nodeType":"YulExpressionStatement","src":"18465:28:27"}]},"name":"store_literal_in_memory_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4","nativeSrc":"18280:220:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"18378:6:27","nodeType":"YulTypedName","src":"18378:6:27","type":""}],"src":"18280:220:27"},{"body":{"nativeSrc":"18652:220:27","nodeType":"YulBlock","src":"18652:220:27","statements":[{"nativeSrc":"18662:74:27","nodeType":"YulAssignment","src":"18662:74:27","value":{"arguments":[{"name":"pos","nativeSrc":"18728:3:27","nodeType":"YulIdentifier","src":"18728:3:27"},{"kind":"number","nativeSrc":"18733:2:27","nodeType":"YulLiteral","src":"18733:2:27","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"18669:58:27","nodeType":"YulIdentifier","src":"18669:58:27"},"nativeSrc":"18669:67:27","nodeType":"YulFunctionCall","src":"18669:67:27"},"variableNames":[{"name":"pos","nativeSrc":"18662:3:27","nodeType":"YulIdentifier","src":"18662:3:27"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"18834:3:27","nodeType":"YulIdentifier","src":"18834:3:27"}],"functionName":{"name":"store_literal_in_memory_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4","nativeSrc":"18745:88:27","nodeType":"YulIdentifier","src":"18745:88:27"},"nativeSrc":"18745:93:27","nodeType":"YulFunctionCall","src":"18745:93:27"},"nativeSrc":"18745:93:27","nodeType":"YulExpressionStatement","src":"18745:93:27"},{"nativeSrc":"18847:19:27","nodeType":"YulAssignment","src":"18847:19:27","value":{"arguments":[{"name":"pos","nativeSrc":"18858:3:27","nodeType":"YulIdentifier","src":"18858:3:27"},{"kind":"number","nativeSrc":"18863:2:27","nodeType":"YulLiteral","src":"18863:2:27","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"18854:3:27","nodeType":"YulIdentifier","src":"18854:3:27"},"nativeSrc":"18854:12:27","nodeType":"YulFunctionCall","src":"18854:12:27"},"variableNames":[{"name":"end","nativeSrc":"18847:3:27","nodeType":"YulIdentifier","src":"18847:3:27"}]}]},"name":"abi_encode_t_stringliteral_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4_to_t_string_memory_ptr_fromStack","nativeSrc":"18506:366:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"18640:3:27","nodeType":"YulTypedName","src":"18640:3:27","type":""}],"returnVariables":[{"name":"end","nativeSrc":"18648:3:27","nodeType":"YulTypedName","src":"18648:3:27","type":""}],"src":"18506:366:27"},{"body":{"nativeSrc":"19049:248:27","nodeType":"YulBlock","src":"19049:248:27","statements":[{"nativeSrc":"19059:26:27","nodeType":"YulAssignment","src":"19059:26:27","value":{"arguments":[{"name":"headStart","nativeSrc":"19071:9:27","nodeType":"YulIdentifier","src":"19071:9:27"},{"kind":"number","nativeSrc":"19082:2:27","nodeType":"YulLiteral","src":"19082:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19067:3:27","nodeType":"YulIdentifier","src":"19067:3:27"},"nativeSrc":"19067:18:27","nodeType":"YulFunctionCall","src":"19067:18:27"},"variableNames":[{"name":"tail","nativeSrc":"19059:4:27","nodeType":"YulIdentifier","src":"19059:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19106:9:27","nodeType":"YulIdentifier","src":"19106:9:27"},{"kind":"number","nativeSrc":"19117:1:27","nodeType":"YulLiteral","src":"19117:1:27","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"19102:3:27","nodeType":"YulIdentifier","src":"19102:3:27"},"nativeSrc":"19102:17:27","nodeType":"YulFunctionCall","src":"19102:17:27"},{"arguments":[{"name":"tail","nativeSrc":"19125:4:27","nodeType":"YulIdentifier","src":"19125:4:27"},{"name":"headStart","nativeSrc":"19131:9:27","nodeType":"YulIdentifier","src":"19131:9:27"}],"functionName":{"name":"sub","nativeSrc":"19121:3:27","nodeType":"YulIdentifier","src":"19121:3:27"},"nativeSrc":"19121:20:27","nodeType":"YulFunctionCall","src":"19121:20:27"}],"functionName":{"name":"mstore","nativeSrc":"19095:6:27","nodeType":"YulIdentifier","src":"19095:6:27"},"nativeSrc":"19095:47:27","nodeType":"YulFunctionCall","src":"19095:47:27"},"nativeSrc":"19095:47:27","nodeType":"YulExpressionStatement","src":"19095:47:27"},{"nativeSrc":"19151:139:27","nodeType":"YulAssignment","src":"19151:139:27","value":{"arguments":[{"name":"tail","nativeSrc":"19285:4:27","nodeType":"YulIdentifier","src":"19285:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4_to_t_string_memory_ptr_fromStack","nativeSrc":"19159:124:27","nodeType":"YulIdentifier","src":"19159:124:27"},"nativeSrc":"19159:131:27","nodeType":"YulFunctionCall","src":"19159:131:27"},"variableNames":[{"name":"tail","nativeSrc":"19151:4:27","nodeType":"YulIdentifier","src":"19151:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"18878:419:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19029:9:27","nodeType":"YulTypedName","src":"19029:9:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"19044:4:27","nodeType":"YulTypedName","src":"19044:4:27","type":""}],"src":"18878:419:27"},{"body":{"nativeSrc":"19417:34:27","nodeType":"YulBlock","src":"19417:34:27","statements":[{"nativeSrc":"19427:18:27","nodeType":"YulAssignment","src":"19427:18:27","value":{"name":"pos","nativeSrc":"19442:3:27","nodeType":"YulIdentifier","src":"19442:3:27"},"variableNames":[{"name":"updated_pos","nativeSrc":"19427:11:27","nodeType":"YulIdentifier","src":"19427:11:27"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"19303:148:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"19389:3:27","nodeType":"YulTypedName","src":"19389:3:27","type":""},{"name":"length","nativeSrc":"19394:6:27","nodeType":"YulTypedName","src":"19394:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"19405:11:27","nodeType":"YulTypedName","src":"19405:11:27","type":""}],"src":"19303:148:27"},{"body":{"nativeSrc":"19567:280:27","nodeType":"YulBlock","src":"19567:280:27","statements":[{"nativeSrc":"19577:53:27","nodeType":"YulVariableDeclaration","src":"19577:53:27","value":{"arguments":[{"name":"value","nativeSrc":"19624:5:27","nodeType":"YulIdentifier","src":"19624:5:27"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"19591:32:27","nodeType":"YulIdentifier","src":"19591:32:27"},"nativeSrc":"19591:39:27","nodeType":"YulFunctionCall","src":"19591:39:27"},"variables":[{"name":"length","nativeSrc":"19581:6:27","nodeType":"YulTypedName","src":"19581:6:27","type":""}]},{"nativeSrc":"19639:96:27","nodeType":"YulAssignment","src":"19639:96:27","value":{"arguments":[{"name":"pos","nativeSrc":"19723:3:27","nodeType":"YulIdentifier","src":"19723:3:27"},{"name":"length","nativeSrc":"19728:6:27","nodeType":"YulIdentifier","src":"19728:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"19646:76:27","nodeType":"YulIdentifier","src":"19646:76:27"},"nativeSrc":"19646:89:27","nodeType":"YulFunctionCall","src":"19646:89:27"},"variableNames":[{"name":"pos","nativeSrc":"19639:3:27","nodeType":"YulIdentifier","src":"19639:3:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"19783:5:27","nodeType":"YulIdentifier","src":"19783:5:27"},{"kind":"number","nativeSrc":"19790:4:27","nodeType":"YulLiteral","src":"19790:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19779:3:27","nodeType":"YulIdentifier","src":"19779:3:27"},"nativeSrc":"19779:16:27","nodeType":"YulFunctionCall","src":"19779:16:27"},{"name":"pos","nativeSrc":"19797:3:27","nodeType":"YulIdentifier","src":"19797:3:27"},{"name":"length","nativeSrc":"19802:6:27","nodeType":"YulIdentifier","src":"19802:6:27"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"19744:34:27","nodeType":"YulIdentifier","src":"19744:34:27"},"nativeSrc":"19744:65:27","nodeType":"YulFunctionCall","src":"19744:65:27"},"nativeSrc":"19744:65:27","nodeType":"YulExpressionStatement","src":"19744:65:27"},{"nativeSrc":"19818:23:27","nodeType":"YulAssignment","src":"19818:23:27","value":{"arguments":[{"name":"pos","nativeSrc":"19829:3:27","nodeType":"YulIdentifier","src":"19829:3:27"},{"name":"length","nativeSrc":"19834:6:27","nodeType":"YulIdentifier","src":"19834:6:27"}],"functionName":{"name":"add","nativeSrc":"19825:3:27","nodeType":"YulIdentifier","src":"19825:3:27"},"nativeSrc":"19825:16:27","nodeType":"YulFunctionCall","src":"19825:16:27"},"variableNames":[{"name":"end","nativeSrc":"19818:3:27","nodeType":"YulIdentifier","src":"19818:3:27"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"19457:390:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"19548:5:27","nodeType":"YulTypedName","src":"19548:5:27","type":""},{"name":"pos","nativeSrc":"19555:3:27","nodeType":"YulTypedName","src":"19555:3:27","type":""}],"returnVariables":[{"name":"end","nativeSrc":"19563:3:27","nodeType":"YulTypedName","src":"19563:3:27","type":""}],"src":"19457:390:27"},{"body":{"nativeSrc":"20037:251:27","nodeType":"YulBlock","src":"20037:251:27","statements":[{"nativeSrc":"20048:102:27","nodeType":"YulAssignment","src":"20048:102:27","value":{"arguments":[{"name":"value0","nativeSrc":"20137:6:27","nodeType":"YulIdentifier","src":"20137:6:27"},{"name":"pos","nativeSrc":"20146:3:27","nodeType":"YulIdentifier","src":"20146:3:27"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"20055:81:27","nodeType":"YulIdentifier","src":"20055:81:27"},"nativeSrc":"20055:95:27","nodeType":"YulFunctionCall","src":"20055:95:27"},"variableNames":[{"name":"pos","nativeSrc":"20048:3:27","nodeType":"YulIdentifier","src":"20048:3:27"}]},{"nativeSrc":"20160:102:27","nodeType":"YulAssignment","src":"20160:102:27","value":{"arguments":[{"name":"value1","nativeSrc":"20249:6:27","nodeType":"YulIdentifier","src":"20249:6:27"},{"name":"pos","nativeSrc":"20258:3:27","nodeType":"YulIdentifier","src":"20258:3:27"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"20167:81:27","nodeType":"YulIdentifier","src":"20167:81:27"},"nativeSrc":"20167:95:27","nodeType":"YulFunctionCall","src":"20167:95:27"},"variableNames":[{"name":"pos","nativeSrc":"20160:3:27","nodeType":"YulIdentifier","src":"20160:3:27"}]},{"nativeSrc":"20272:10:27","nodeType":"YulAssignment","src":"20272:10:27","value":{"name":"pos","nativeSrc":"20279:3:27","nodeType":"YulIdentifier","src":"20279:3:27"},"variableNames":[{"name":"end","nativeSrc":"20272:3:27","nodeType":"YulIdentifier","src":"20272:3:27"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"19853:435:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"20008:3:27","nodeType":"YulTypedName","src":"20008:3:27","type":""},{"name":"value1","nativeSrc":"20014:6:27","nodeType":"YulTypedName","src":"20014:6:27","type":""},{"name":"value0","nativeSrc":"20022:6:27","nodeType":"YulTypedName","src":"20022:6:27","type":""}],"returnVariables":[{"name":"end","nativeSrc":"20033:3:27","nodeType":"YulTypedName","src":"20033:3:27","type":""}],"src":"19853:435:27"},{"body":{"nativeSrc":"20400:72:27","nodeType":"YulBlock","src":"20400:72:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"20422:6:27","nodeType":"YulIdentifier","src":"20422:6:27"},{"kind":"number","nativeSrc":"20430:1:27","nodeType":"YulLiteral","src":"20430:1:27","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"20418:3:27","nodeType":"YulIdentifier","src":"20418:3:27"},"nativeSrc":"20418:14:27","nodeType":"YulFunctionCall","src":"20418:14:27"},{"hexValue":"5447433a2074726164696e6720616c726561647920656e61626c6564","kind":"string","nativeSrc":"20434:30:27","nodeType":"YulLiteral","src":"20434:30:27","type":"","value":"TGC: trading already enabled"}],"functionName":{"name":"mstore","nativeSrc":"20411:6:27","nodeType":"YulIdentifier","src":"20411:6:27"},"nativeSrc":"20411:54:27","nodeType":"YulFunctionCall","src":"20411:54:27"},"nativeSrc":"20411:54:27","nodeType":"YulExpressionStatement","src":"20411:54:27"}]},"name":"store_literal_in_memory_24cf83481f2a8ba90e1c3f2ad6b040e1487e7c57c8c9c5939238bafe3879f015","nativeSrc":"20294:178:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"20392:6:27","nodeType":"YulTypedName","src":"20392:6:27","type":""}],"src":"20294:178:27"},{"body":{"nativeSrc":"20624:220:27","nodeType":"YulBlock","src":"20624:220:27","statements":[{"nativeSrc":"20634:74:27","nodeType":"YulAssignment","src":"20634:74:27","value":{"arguments":[{"name":"pos","nativeSrc":"20700:3:27","nodeType":"YulIdentifier","src":"20700:3:27"},{"kind":"number","nativeSrc":"20705:2:27","nodeType":"YulLiteral","src":"20705:2:27","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"20641:58:27","nodeType":"YulIdentifier","src":"20641:58:27"},"nativeSrc":"20641:67:27","nodeType":"YulFunctionCall","src":"20641:67:27"},"variableNames":[{"name":"pos","nativeSrc":"20634:3:27","nodeType":"YulIdentifier","src":"20634:3:27"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"20806:3:27","nodeType":"YulIdentifier","src":"20806:3:27"}],"functionName":{"name":"store_literal_in_memory_24cf83481f2a8ba90e1c3f2ad6b040e1487e7c57c8c9c5939238bafe3879f015","nativeSrc":"20717:88:27","nodeType":"YulIdentifier","src":"20717:88:27"},"nativeSrc":"20717:93:27","nodeType":"YulFunctionCall","src":"20717:93:27"},"nativeSrc":"20717:93:27","nodeType":"YulExpressionStatement","src":"20717:93:27"},{"nativeSrc":"20819:19:27","nodeType":"YulAssignment","src":"20819:19:27","value":{"arguments":[{"name":"pos","nativeSrc":"20830:3:27","nodeType":"YulIdentifier","src":"20830:3:27"},{"kind":"number","nativeSrc":"20835:2:27","nodeType":"YulLiteral","src":"20835:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20826:3:27","nodeType":"YulIdentifier","src":"20826:3:27"},"nativeSrc":"20826:12:27","nodeType":"YulFunctionCall","src":"20826:12:27"},"variableNames":[{"name":"end","nativeSrc":"20819:3:27","nodeType":"YulIdentifier","src":"20819:3:27"}]}]},"name":"abi_encode_t_stringliteral_24cf83481f2a8ba90e1c3f2ad6b040e1487e7c57c8c9c5939238bafe3879f015_to_t_string_memory_ptr_fromStack","nativeSrc":"20478:366:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"20612:3:27","nodeType":"YulTypedName","src":"20612:3:27","type":""}],"returnVariables":[{"name":"end","nativeSrc":"20620:3:27","nodeType":"YulTypedName","src":"20620:3:27","type":""}],"src":"20478:366:27"},{"body":{"nativeSrc":"21021:248:27","nodeType":"YulBlock","src":"21021:248:27","statements":[{"nativeSrc":"21031:26:27","nodeType":"YulAssignment","src":"21031:26:27","value":{"arguments":[{"name":"headStart","nativeSrc":"21043:9:27","nodeType":"YulIdentifier","src":"21043:9:27"},{"kind":"number","nativeSrc":"21054:2:27","nodeType":"YulLiteral","src":"21054:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21039:3:27","nodeType":"YulIdentifier","src":"21039:3:27"},"nativeSrc":"21039:18:27","nodeType":"YulFunctionCall","src":"21039:18:27"},"variableNames":[{"name":"tail","nativeSrc":"21031:4:27","nodeType":"YulIdentifier","src":"21031:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21078:9:27","nodeType":"YulIdentifier","src":"21078:9:27"},{"kind":"number","nativeSrc":"21089:1:27","nodeType":"YulLiteral","src":"21089:1:27","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"21074:3:27","nodeType":"YulIdentifier","src":"21074:3:27"},"nativeSrc":"21074:17:27","nodeType":"YulFunctionCall","src":"21074:17:27"},{"arguments":[{"name":"tail","nativeSrc":"21097:4:27","nodeType":"YulIdentifier","src":"21097:4:27"},{"name":"headStart","nativeSrc":"21103:9:27","nodeType":"YulIdentifier","src":"21103:9:27"}],"functionName":{"name":"sub","nativeSrc":"21093:3:27","nodeType":"YulIdentifier","src":"21093:3:27"},"nativeSrc":"21093:20:27","nodeType":"YulFunctionCall","src":"21093:20:27"}],"functionName":{"name":"mstore","nativeSrc":"21067:6:27","nodeType":"YulIdentifier","src":"21067:6:27"},"nativeSrc":"21067:47:27","nodeType":"YulFunctionCall","src":"21067:47:27"},"nativeSrc":"21067:47:27","nodeType":"YulExpressionStatement","src":"21067:47:27"},{"nativeSrc":"21123:139:27","nodeType":"YulAssignment","src":"21123:139:27","value":{"arguments":[{"name":"tail","nativeSrc":"21257:4:27","nodeType":"YulIdentifier","src":"21257:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_24cf83481f2a8ba90e1c3f2ad6b040e1487e7c57c8c9c5939238bafe3879f015_to_t_string_memory_ptr_fromStack","nativeSrc":"21131:124:27","nodeType":"YulIdentifier","src":"21131:124:27"},"nativeSrc":"21131:131:27","nodeType":"YulFunctionCall","src":"21131:131:27"},"variableNames":[{"name":"tail","nativeSrc":"21123:4:27","nodeType":"YulIdentifier","src":"21123:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_24cf83481f2a8ba90e1c3f2ad6b040e1487e7c57c8c9c5939238bafe3879f015__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"20850:419:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21001:9:27","nodeType":"YulTypedName","src":"21001:9:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21016:4:27","nodeType":"YulTypedName","src":"21016:4:27","type":""}],"src":"20850:419:27"},{"body":{"nativeSrc":"21381:67:27","nodeType":"YulBlock","src":"21381:67:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"21403:6:27","nodeType":"YulIdentifier","src":"21403:6:27"},{"kind":"number","nativeSrc":"21411:1:27","nodeType":"YulLiteral","src":"21411:1:27","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"21399:3:27","nodeType":"YulIdentifier","src":"21399:3:27"},"nativeSrc":"21399:14:27","nodeType":"YulFunctionCall","src":"21399:14:27"},{"hexValue":"5447433a20696e76616c696420706172616d6574657273","kind":"string","nativeSrc":"21415:25:27","nodeType":"YulLiteral","src":"21415:25:27","type":"","value":"TGC: invalid parameters"}],"functionName":{"name":"mstore","nativeSrc":"21392:6:27","nodeType":"YulIdentifier","src":"21392:6:27"},"nativeSrc":"21392:49:27","nodeType":"YulFunctionCall","src":"21392:49:27"},"nativeSrc":"21392:49:27","nodeType":"YulExpressionStatement","src":"21392:49:27"}]},"name":"store_literal_in_memory_ba7cd66ed381e90a6a6f5c81315eeba2f99d0bb92ba7388f35e237d2bf061d88","nativeSrc":"21275:173:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"21373:6:27","nodeType":"YulTypedName","src":"21373:6:27","type":""}],"src":"21275:173:27"},{"body":{"nativeSrc":"21600:220:27","nodeType":"YulBlock","src":"21600:220:27","statements":[{"nativeSrc":"21610:74:27","nodeType":"YulAssignment","src":"21610:74:27","value":{"arguments":[{"name":"pos","nativeSrc":"21676:3:27","nodeType":"YulIdentifier","src":"21676:3:27"},{"kind":"number","nativeSrc":"21681:2:27","nodeType":"YulLiteral","src":"21681:2:27","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"21617:58:27","nodeType":"YulIdentifier","src":"21617:58:27"},"nativeSrc":"21617:67:27","nodeType":"YulFunctionCall","src":"21617:67:27"},"variableNames":[{"name":"pos","nativeSrc":"21610:3:27","nodeType":"YulIdentifier","src":"21610:3:27"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"21782:3:27","nodeType":"YulIdentifier","src":"21782:3:27"}],"functionName":{"name":"store_literal_in_memory_ba7cd66ed381e90a6a6f5c81315eeba2f99d0bb92ba7388f35e237d2bf061d88","nativeSrc":"21693:88:27","nodeType":"YulIdentifier","src":"21693:88:27"},"nativeSrc":"21693:93:27","nodeType":"YulFunctionCall","src":"21693:93:27"},"nativeSrc":"21693:93:27","nodeType":"YulExpressionStatement","src":"21693:93:27"},{"nativeSrc":"21795:19:27","nodeType":"YulAssignment","src":"21795:19:27","value":{"arguments":[{"name":"pos","nativeSrc":"21806:3:27","nodeType":"YulIdentifier","src":"21806:3:27"},{"kind":"number","nativeSrc":"21811:2:27","nodeType":"YulLiteral","src":"21811:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21802:3:27","nodeType":"YulIdentifier","src":"21802:3:27"},"nativeSrc":"21802:12:27","nodeType":"YulFunctionCall","src":"21802:12:27"},"variableNames":[{"name":"end","nativeSrc":"21795:3:27","nodeType":"YulIdentifier","src":"21795:3:27"}]}]},"name":"abi_encode_t_stringliteral_ba7cd66ed381e90a6a6f5c81315eeba2f99d0bb92ba7388f35e237d2bf061d88_to_t_string_memory_ptr_fromStack","nativeSrc":"21454:366:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"21588:3:27","nodeType":"YulTypedName","src":"21588:3:27","type":""}],"returnVariables":[{"name":"end","nativeSrc":"21596:3:27","nodeType":"YulTypedName","src":"21596:3:27","type":""}],"src":"21454:366:27"},{"body":{"nativeSrc":"21997:248:27","nodeType":"YulBlock","src":"21997:248:27","statements":[{"nativeSrc":"22007:26:27","nodeType":"YulAssignment","src":"22007:26:27","value":{"arguments":[{"name":"headStart","nativeSrc":"22019:9:27","nodeType":"YulIdentifier","src":"22019:9:27"},{"kind":"number","nativeSrc":"22030:2:27","nodeType":"YulLiteral","src":"22030:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22015:3:27","nodeType":"YulIdentifier","src":"22015:3:27"},"nativeSrc":"22015:18:27","nodeType":"YulFunctionCall","src":"22015:18:27"},"variableNames":[{"name":"tail","nativeSrc":"22007:4:27","nodeType":"YulIdentifier","src":"22007:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22054:9:27","nodeType":"YulIdentifier","src":"22054:9:27"},{"kind":"number","nativeSrc":"22065:1:27","nodeType":"YulLiteral","src":"22065:1:27","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"22050:3:27","nodeType":"YulIdentifier","src":"22050:3:27"},"nativeSrc":"22050:17:27","nodeType":"YulFunctionCall","src":"22050:17:27"},{"arguments":[{"name":"tail","nativeSrc":"22073:4:27","nodeType":"YulIdentifier","src":"22073:4:27"},{"name":"headStart","nativeSrc":"22079:9:27","nodeType":"YulIdentifier","src":"22079:9:27"}],"functionName":{"name":"sub","nativeSrc":"22069:3:27","nodeType":"YulIdentifier","src":"22069:3:27"},"nativeSrc":"22069:20:27","nodeType":"YulFunctionCall","src":"22069:20:27"}],"functionName":{"name":"mstore","nativeSrc":"22043:6:27","nodeType":"YulIdentifier","src":"22043:6:27"},"nativeSrc":"22043:47:27","nodeType":"YulFunctionCall","src":"22043:47:27"},"nativeSrc":"22043:47:27","nodeType":"YulExpressionStatement","src":"22043:47:27"},{"nativeSrc":"22099:139:27","nodeType":"YulAssignment","src":"22099:139:27","value":{"arguments":[{"name":"tail","nativeSrc":"22233:4:27","nodeType":"YulIdentifier","src":"22233:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_ba7cd66ed381e90a6a6f5c81315eeba2f99d0bb92ba7388f35e237d2bf061d88_to_t_string_memory_ptr_fromStack","nativeSrc":"22107:124:27","nodeType":"YulIdentifier","src":"22107:124:27"},"nativeSrc":"22107:131:27","nodeType":"YulFunctionCall","src":"22107:131:27"},"variableNames":[{"name":"tail","nativeSrc":"22099:4:27","nodeType":"YulIdentifier","src":"22099:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_ba7cd66ed381e90a6a6f5c81315eeba2f99d0bb92ba7388f35e237d2bf061d88__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"21826:419:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21977:9:27","nodeType":"YulTypedName","src":"21977:9:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21992:4:27","nodeType":"YulTypedName","src":"21992:4:27","type":""}],"src":"21826:419:27"},{"body":{"nativeSrc":"22489:537:27","nodeType":"YulBlock","src":"22489:537:27","statements":[{"nativeSrc":"22499:27:27","nodeType":"YulAssignment","src":"22499:27:27","value":{"arguments":[{"name":"headStart","nativeSrc":"22511:9:27","nodeType":"YulIdentifier","src":"22511:9:27"},{"kind":"number","nativeSrc":"22522:3:27","nodeType":"YulLiteral","src":"22522:3:27","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"22507:3:27","nodeType":"YulIdentifier","src":"22507:3:27"},"nativeSrc":"22507:19:27","nodeType":"YulFunctionCall","src":"22507:19:27"},"variableNames":[{"name":"tail","nativeSrc":"22499:4:27","nodeType":"YulIdentifier","src":"22499:4:27"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"22580:6:27","nodeType":"YulIdentifier","src":"22580:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"22593:9:27","nodeType":"YulIdentifier","src":"22593:9:27"},{"kind":"number","nativeSrc":"22604:1:27","nodeType":"YulLiteral","src":"22604:1:27","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"22589:3:27","nodeType":"YulIdentifier","src":"22589:3:27"},"nativeSrc":"22589:17:27","nodeType":"YulFunctionCall","src":"22589:17:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"22536:43:27","nodeType":"YulIdentifier","src":"22536:43:27"},"nativeSrc":"22536:71:27","nodeType":"YulFunctionCall","src":"22536:71:27"},"nativeSrc":"22536:71:27","nodeType":"YulExpressionStatement","src":"22536:71:27"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"22661:6:27","nodeType":"YulIdentifier","src":"22661:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"22674:9:27","nodeType":"YulIdentifier","src":"22674:9:27"},{"kind":"number","nativeSrc":"22685:2:27","nodeType":"YulLiteral","src":"22685:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22670:3:27","nodeType":"YulIdentifier","src":"22670:3:27"},"nativeSrc":"22670:18:27","nodeType":"YulFunctionCall","src":"22670:18:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"22617:43:27","nodeType":"YulIdentifier","src":"22617:43:27"},"nativeSrc":"22617:72:27","nodeType":"YulFunctionCall","src":"22617:72:27"},"nativeSrc":"22617:72:27","nodeType":"YulExpressionStatement","src":"22617:72:27"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"22743:6:27","nodeType":"YulIdentifier","src":"22743:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"22756:9:27","nodeType":"YulIdentifier","src":"22756:9:27"},{"kind":"number","nativeSrc":"22767:2:27","nodeType":"YulLiteral","src":"22767:2:27","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"22752:3:27","nodeType":"YulIdentifier","src":"22752:3:27"},"nativeSrc":"22752:18:27","nodeType":"YulFunctionCall","src":"22752:18:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"22699:43:27","nodeType":"YulIdentifier","src":"22699:43:27"},"nativeSrc":"22699:72:27","nodeType":"YulFunctionCall","src":"22699:72:27"},"nativeSrc":"22699:72:27","nodeType":"YulExpressionStatement","src":"22699:72:27"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"22825:6:27","nodeType":"YulIdentifier","src":"22825:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"22838:9:27","nodeType":"YulIdentifier","src":"22838:9:27"},{"kind":"number","nativeSrc":"22849:2:27","nodeType":"YulLiteral","src":"22849:2:27","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"22834:3:27","nodeType":"YulIdentifier","src":"22834:3:27"},"nativeSrc":"22834:18:27","nodeType":"YulFunctionCall","src":"22834:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"22781:43:27","nodeType":"YulIdentifier","src":"22781:43:27"},"nativeSrc":"22781:72:27","nodeType":"YulFunctionCall","src":"22781:72:27"},"nativeSrc":"22781:72:27","nodeType":"YulExpressionStatement","src":"22781:72:27"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"22907:6:27","nodeType":"YulIdentifier","src":"22907:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"22920:9:27","nodeType":"YulIdentifier","src":"22920:9:27"},{"kind":"number","nativeSrc":"22931:3:27","nodeType":"YulLiteral","src":"22931:3:27","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"22916:3:27","nodeType":"YulIdentifier","src":"22916:3:27"},"nativeSrc":"22916:19:27","nodeType":"YulFunctionCall","src":"22916:19:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"22863:43:27","nodeType":"YulIdentifier","src":"22863:43:27"},"nativeSrc":"22863:73:27","nodeType":"YulFunctionCall","src":"22863:73:27"},"nativeSrc":"22863:73:27","nodeType":"YulExpressionStatement","src":"22863:73:27"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"22990:6:27","nodeType":"YulIdentifier","src":"22990:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"23003:9:27","nodeType":"YulIdentifier","src":"23003:9:27"},{"kind":"number","nativeSrc":"23014:3:27","nodeType":"YulLiteral","src":"23014:3:27","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"22999:3:27","nodeType":"YulIdentifier","src":"22999:3:27"},"nativeSrc":"22999:19:27","nodeType":"YulFunctionCall","src":"22999:19:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"22946:43:27","nodeType":"YulIdentifier","src":"22946:43:27"},"nativeSrc":"22946:73:27","nodeType":"YulFunctionCall","src":"22946:73:27"},"nativeSrc":"22946:73:27","nodeType":"YulExpressionStatement","src":"22946:73:27"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"22251:775:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22421:9:27","nodeType":"YulTypedName","src":"22421:9:27","type":""},{"name":"value5","nativeSrc":"22433:6:27","nodeType":"YulTypedName","src":"22433:6:27","type":""},{"name":"value4","nativeSrc":"22441:6:27","nodeType":"YulTypedName","src":"22441:6:27","type":""},{"name":"value3","nativeSrc":"22449:6:27","nodeType":"YulTypedName","src":"22449:6:27","type":""},{"name":"value2","nativeSrc":"22457:6:27","nodeType":"YulTypedName","src":"22457:6:27","type":""},{"name":"value1","nativeSrc":"22465:6:27","nodeType":"YulTypedName","src":"22465:6:27","type":""},{"name":"value0","nativeSrc":"22473:6:27","nodeType":"YulTypedName","src":"22473:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"22484:4:27","nodeType":"YulTypedName","src":"22484:4:27","type":""}],"src":"22251:775:27"},{"body":{"nativeSrc":"23186:288:27","nodeType":"YulBlock","src":"23186:288:27","statements":[{"nativeSrc":"23196:26:27","nodeType":"YulAssignment","src":"23196:26:27","value":{"arguments":[{"name":"headStart","nativeSrc":"23208:9:27","nodeType":"YulIdentifier","src":"23208:9:27"},{"kind":"number","nativeSrc":"23219:2:27","nodeType":"YulLiteral","src":"23219:2:27","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"23204:3:27","nodeType":"YulIdentifier","src":"23204:3:27"},"nativeSrc":"23204:18:27","nodeType":"YulFunctionCall","src":"23204:18:27"},"variableNames":[{"name":"tail","nativeSrc":"23196:4:27","nodeType":"YulIdentifier","src":"23196:4:27"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"23276:6:27","nodeType":"YulIdentifier","src":"23276:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"23289:9:27","nodeType":"YulIdentifier","src":"23289:9:27"},{"kind":"number","nativeSrc":"23300:1:27","nodeType":"YulLiteral","src":"23300:1:27","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"23285:3:27","nodeType":"YulIdentifier","src":"23285:3:27"},"nativeSrc":"23285:17:27","nodeType":"YulFunctionCall","src":"23285:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"23232:43:27","nodeType":"YulIdentifier","src":"23232:43:27"},"nativeSrc":"23232:71:27","nodeType":"YulFunctionCall","src":"23232:71:27"},"nativeSrc":"23232:71:27","nodeType":"YulExpressionStatement","src":"23232:71:27"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"23357:6:27","nodeType":"YulIdentifier","src":"23357:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"23370:9:27","nodeType":"YulIdentifier","src":"23370:9:27"},{"kind":"number","nativeSrc":"23381:2:27","nodeType":"YulLiteral","src":"23381:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"23366:3:27","nodeType":"YulIdentifier","src":"23366:3:27"},"nativeSrc":"23366:18:27","nodeType":"YulFunctionCall","src":"23366:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"23313:43:27","nodeType":"YulIdentifier","src":"23313:43:27"},"nativeSrc":"23313:72:27","nodeType":"YulFunctionCall","src":"23313:72:27"},"nativeSrc":"23313:72:27","nodeType":"YulExpressionStatement","src":"23313:72:27"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"23439:6:27","nodeType":"YulIdentifier","src":"23439:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"23452:9:27","nodeType":"YulIdentifier","src":"23452:9:27"},{"kind":"number","nativeSrc":"23463:2:27","nodeType":"YulLiteral","src":"23463:2:27","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"23448:3:27","nodeType":"YulIdentifier","src":"23448:3:27"},"nativeSrc":"23448:18:27","nodeType":"YulFunctionCall","src":"23448:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"23395:43:27","nodeType":"YulIdentifier","src":"23395:43:27"},"nativeSrc":"23395:72:27","nodeType":"YulFunctionCall","src":"23395:72:27"},"nativeSrc":"23395:72:27","nodeType":"YulExpressionStatement","src":"23395:72:27"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"23032:442:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"23142:9:27","nodeType":"YulTypedName","src":"23142:9:27","type":""},{"name":"value2","nativeSrc":"23154:6:27","nodeType":"YulTypedName","src":"23154:6:27","type":""},{"name":"value1","nativeSrc":"23162:6:27","nodeType":"YulTypedName","src":"23162:6:27","type":""},{"name":"value0","nativeSrc":"23170:6:27","nodeType":"YulTypedName","src":"23170:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"23181:4:27","nodeType":"YulTypedName","src":"23181:4:27","type":""}],"src":"23032:442:27"},{"body":{"nativeSrc":"23586:71:27","nodeType":"YulBlock","src":"23586:71:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"23608:6:27","nodeType":"YulIdentifier","src":"23608:6:27"},{"kind":"number","nativeSrc":"23616:1:27","nodeType":"YulLiteral","src":"23616:1:27","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"23604:3:27","nodeType":"YulIdentifier","src":"23604:3:27"},"nativeSrc":"23604:14:27","nodeType":"YulFunctionCall","src":"23604:14:27"},{"hexValue":"4172617261436f696e2074726164652069732064697361626c6564","kind":"string","nativeSrc":"23620:29:27","nodeType":"YulLiteral","src":"23620:29:27","type":"","value":"AraraCoin trade is disabled"}],"functionName":{"name":"mstore","nativeSrc":"23597:6:27","nodeType":"YulIdentifier","src":"23597:6:27"},"nativeSrc":"23597:53:27","nodeType":"YulFunctionCall","src":"23597:53:27"},"nativeSrc":"23597:53:27","nodeType":"YulExpressionStatement","src":"23597:53:27"}]},"name":"store_literal_in_memory_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7","nativeSrc":"23480:177:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"23578:6:27","nodeType":"YulTypedName","src":"23578:6:27","type":""}],"src":"23480:177:27"},{"body":{"nativeSrc":"23809:220:27","nodeType":"YulBlock","src":"23809:220:27","statements":[{"nativeSrc":"23819:74:27","nodeType":"YulAssignment","src":"23819:74:27","value":{"arguments":[{"name":"pos","nativeSrc":"23885:3:27","nodeType":"YulIdentifier","src":"23885:3:27"},{"kind":"number","nativeSrc":"23890:2:27","nodeType":"YulLiteral","src":"23890:2:27","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"23826:58:27","nodeType":"YulIdentifier","src":"23826:58:27"},"nativeSrc":"23826:67:27","nodeType":"YulFunctionCall","src":"23826:67:27"},"variableNames":[{"name":"pos","nativeSrc":"23819:3:27","nodeType":"YulIdentifier","src":"23819:3:27"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"23991:3:27","nodeType":"YulIdentifier","src":"23991:3:27"}],"functionName":{"name":"store_literal_in_memory_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7","nativeSrc":"23902:88:27","nodeType":"YulIdentifier","src":"23902:88:27"},"nativeSrc":"23902:93:27","nodeType":"YulFunctionCall","src":"23902:93:27"},"nativeSrc":"23902:93:27","nodeType":"YulExpressionStatement","src":"23902:93:27"},{"nativeSrc":"24004:19:27","nodeType":"YulAssignment","src":"24004:19:27","value":{"arguments":[{"name":"pos","nativeSrc":"24015:3:27","nodeType":"YulIdentifier","src":"24015:3:27"},{"kind":"number","nativeSrc":"24020:2:27","nodeType":"YulLiteral","src":"24020:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"24011:3:27","nodeType":"YulIdentifier","src":"24011:3:27"},"nativeSrc":"24011:12:27","nodeType":"YulFunctionCall","src":"24011:12:27"},"variableNames":[{"name":"end","nativeSrc":"24004:3:27","nodeType":"YulIdentifier","src":"24004:3:27"}]}]},"name":"abi_encode_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7_to_t_string_memory_ptr_fromStack","nativeSrc":"23663:366:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"23797:3:27","nodeType":"YulTypedName","src":"23797:3:27","type":""}],"returnVariables":[{"name":"end","nativeSrc":"23805:3:27","nodeType":"YulTypedName","src":"23805:3:27","type":""}],"src":"23663:366:27"},{"body":{"nativeSrc":"24206:248:27","nodeType":"YulBlock","src":"24206:248:27","statements":[{"nativeSrc":"24216:26:27","nodeType":"YulAssignment","src":"24216:26:27","value":{"arguments":[{"name":"headStart","nativeSrc":"24228:9:27","nodeType":"YulIdentifier","src":"24228:9:27"},{"kind":"number","nativeSrc":"24239:2:27","nodeType":"YulLiteral","src":"24239:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"24224:3:27","nodeType":"YulIdentifier","src":"24224:3:27"},"nativeSrc":"24224:18:27","nodeType":"YulFunctionCall","src":"24224:18:27"},"variableNames":[{"name":"tail","nativeSrc":"24216:4:27","nodeType":"YulIdentifier","src":"24216:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"24263:9:27","nodeType":"YulIdentifier","src":"24263:9:27"},{"kind":"number","nativeSrc":"24274:1:27","nodeType":"YulLiteral","src":"24274:1:27","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"24259:3:27","nodeType":"YulIdentifier","src":"24259:3:27"},"nativeSrc":"24259:17:27","nodeType":"YulFunctionCall","src":"24259:17:27"},{"arguments":[{"name":"tail","nativeSrc":"24282:4:27","nodeType":"YulIdentifier","src":"24282:4:27"},{"name":"headStart","nativeSrc":"24288:9:27","nodeType":"YulIdentifier","src":"24288:9:27"}],"functionName":{"name":"sub","nativeSrc":"24278:3:27","nodeType":"YulIdentifier","src":"24278:3:27"},"nativeSrc":"24278:20:27","nodeType":"YulFunctionCall","src":"24278:20:27"}],"functionName":{"name":"mstore","nativeSrc":"24252:6:27","nodeType":"YulIdentifier","src":"24252:6:27"},"nativeSrc":"24252:47:27","nodeType":"YulFunctionCall","src":"24252:47:27"},"nativeSrc":"24252:47:27","nodeType":"YulExpressionStatement","src":"24252:47:27"},{"nativeSrc":"24308:139:27","nodeType":"YulAssignment","src":"24308:139:27","value":{"arguments":[{"name":"tail","nativeSrc":"24442:4:27","nodeType":"YulIdentifier","src":"24442:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7_to_t_string_memory_ptr_fromStack","nativeSrc":"24316:124:27","nodeType":"YulIdentifier","src":"24316:124:27"},"nativeSrc":"24316:131:27","nodeType":"YulFunctionCall","src":"24316:131:27"},"variableNames":[{"name":"tail","nativeSrc":"24308:4:27","nodeType":"YulIdentifier","src":"24308:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"24035:419:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"24186:9:27","nodeType":"YulTypedName","src":"24186:9:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"24201:4:27","nodeType":"YulTypedName","src":"24201:4:27","type":""}],"src":"24035:419:27"},{"body":{"nativeSrc":"24614:288:27","nodeType":"YulBlock","src":"24614:288:27","statements":[{"nativeSrc":"24624:26:27","nodeType":"YulAssignment","src":"24624:26:27","value":{"arguments":[{"name":"headStart","nativeSrc":"24636:9:27","nodeType":"YulIdentifier","src":"24636:9:27"},{"kind":"number","nativeSrc":"24647:2:27","nodeType":"YulLiteral","src":"24647:2:27","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"24632:3:27","nodeType":"YulIdentifier","src":"24632:3:27"},"nativeSrc":"24632:18:27","nodeType":"YulFunctionCall","src":"24632:18:27"},"variableNames":[{"name":"tail","nativeSrc":"24624:4:27","nodeType":"YulIdentifier","src":"24624:4:27"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"24704:6:27","nodeType":"YulIdentifier","src":"24704:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"24717:9:27","nodeType":"YulIdentifier","src":"24717:9:27"},{"kind":"number","nativeSrc":"24728:1:27","nodeType":"YulLiteral","src":"24728:1:27","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"24713:3:27","nodeType":"YulIdentifier","src":"24713:3:27"},"nativeSrc":"24713:17:27","nodeType":"YulFunctionCall","src":"24713:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"24660:43:27","nodeType":"YulIdentifier","src":"24660:43:27"},"nativeSrc":"24660:71:27","nodeType":"YulFunctionCall","src":"24660:71:27"},"nativeSrc":"24660:71:27","nodeType":"YulExpressionStatement","src":"24660:71:27"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"24785:6:27","nodeType":"YulIdentifier","src":"24785:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"24798:9:27","nodeType":"YulIdentifier","src":"24798:9:27"},{"kind":"number","nativeSrc":"24809:2:27","nodeType":"YulLiteral","src":"24809:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"24794:3:27","nodeType":"YulIdentifier","src":"24794:3:27"},"nativeSrc":"24794:18:27","nodeType":"YulFunctionCall","src":"24794:18:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"24741:43:27","nodeType":"YulIdentifier","src":"24741:43:27"},"nativeSrc":"24741:72:27","nodeType":"YulFunctionCall","src":"24741:72:27"},"nativeSrc":"24741:72:27","nodeType":"YulExpressionStatement","src":"24741:72:27"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"24867:6:27","nodeType":"YulIdentifier","src":"24867:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"24880:9:27","nodeType":"YulIdentifier","src":"24880:9:27"},{"kind":"number","nativeSrc":"24891:2:27","nodeType":"YulLiteral","src":"24891:2:27","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"24876:3:27","nodeType":"YulIdentifier","src":"24876:3:27"},"nativeSrc":"24876:18:27","nodeType":"YulFunctionCall","src":"24876:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"24823:43:27","nodeType":"YulIdentifier","src":"24823:43:27"},"nativeSrc":"24823:72:27","nodeType":"YulFunctionCall","src":"24823:72:27"},"nativeSrc":"24823:72:27","nodeType":"YulExpressionStatement","src":"24823:72:27"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"24460:442:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"24570:9:27","nodeType":"YulTypedName","src":"24570:9:27","type":""},{"name":"value2","nativeSrc":"24582:6:27","nodeType":"YulTypedName","src":"24582:6:27","type":""},{"name":"value1","nativeSrc":"24590:6:27","nodeType":"YulTypedName","src":"24590:6:27","type":""},{"name":"value0","nativeSrc":"24598:6:27","nodeType":"YulTypedName","src":"24598:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"24609:4:27","nodeType":"YulTypedName","src":"24609:4:27","type":""}],"src":"24460:442:27"},{"body":{"nativeSrc":"24971:80:27","nodeType":"YulBlock","src":"24971:80:27","statements":[{"nativeSrc":"24981:22:27","nodeType":"YulAssignment","src":"24981:22:27","value":{"arguments":[{"name":"offset","nativeSrc":"24996:6:27","nodeType":"YulIdentifier","src":"24996:6:27"}],"functionName":{"name":"mload","nativeSrc":"24990:5:27","nodeType":"YulIdentifier","src":"24990:5:27"},"nativeSrc":"24990:13:27","nodeType":"YulFunctionCall","src":"24990:13:27"},"variableNames":[{"name":"value","nativeSrc":"24981:5:27","nodeType":"YulIdentifier","src":"24981:5:27"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"25039:5:27","nodeType":"YulIdentifier","src":"25039:5:27"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"25012:26:27","nodeType":"YulIdentifier","src":"25012:26:27"},"nativeSrc":"25012:33:27","nodeType":"YulFunctionCall","src":"25012:33:27"},"nativeSrc":"25012:33:27","nodeType":"YulExpressionStatement","src":"25012:33:27"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"24908:143:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"24949:6:27","nodeType":"YulTypedName","src":"24949:6:27","type":""},{"name":"end","nativeSrc":"24957:3:27","nodeType":"YulTypedName","src":"24957:3:27","type":""}],"returnVariables":[{"name":"value","nativeSrc":"24965:5:27","nodeType":"YulTypedName","src":"24965:5:27","type":""}],"src":"24908:143:27"},{"body":{"nativeSrc":"25134:274:27","nodeType":"YulBlock","src":"25134:274:27","statements":[{"body":{"nativeSrc":"25180:83:27","nodeType":"YulBlock","src":"25180:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"25182:77:27","nodeType":"YulIdentifier","src":"25182:77:27"},"nativeSrc":"25182:79:27","nodeType":"YulFunctionCall","src":"25182:79:27"},"nativeSrc":"25182:79:27","nodeType":"YulExpressionStatement","src":"25182:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"25155:7:27","nodeType":"YulIdentifier","src":"25155:7:27"},{"name":"headStart","nativeSrc":"25164:9:27","nodeType":"YulIdentifier","src":"25164:9:27"}],"functionName":{"name":"sub","nativeSrc":"25151:3:27","nodeType":"YulIdentifier","src":"25151:3:27"},"nativeSrc":"25151:23:27","nodeType":"YulFunctionCall","src":"25151:23:27"},{"kind":"number","nativeSrc":"25176:2:27","nodeType":"YulLiteral","src":"25176:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"25147:3:27","nodeType":"YulIdentifier","src":"25147:3:27"},"nativeSrc":"25147:32:27","nodeType":"YulFunctionCall","src":"25147:32:27"},"nativeSrc":"25144:119:27","nodeType":"YulIf","src":"25144:119:27"},{"nativeSrc":"25273:128:27","nodeType":"YulBlock","src":"25273:128:27","statements":[{"nativeSrc":"25288:15:27","nodeType":"YulVariableDeclaration","src":"25288:15:27","value":{"kind":"number","nativeSrc":"25302:1:27","nodeType":"YulLiteral","src":"25302:1:27","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"25292:6:27","nodeType":"YulTypedName","src":"25292:6:27","type":""}]},{"nativeSrc":"25317:74:27","nodeType":"YulAssignment","src":"25317:74:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"25363:9:27","nodeType":"YulIdentifier","src":"25363:9:27"},{"name":"offset","nativeSrc":"25374:6:27","nodeType":"YulIdentifier","src":"25374:6:27"}],"functionName":{"name":"add","nativeSrc":"25359:3:27","nodeType":"YulIdentifier","src":"25359:3:27"},"nativeSrc":"25359:22:27","nodeType":"YulFunctionCall","src":"25359:22:27"},{"name":"dataEnd","nativeSrc":"25383:7:27","nodeType":"YulIdentifier","src":"25383:7:27"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"25327:31:27","nodeType":"YulIdentifier","src":"25327:31:27"},"nativeSrc":"25327:64:27","nodeType":"YulFunctionCall","src":"25327:64:27"},"variableNames":[{"name":"value0","nativeSrc":"25317:6:27","nodeType":"YulIdentifier","src":"25317:6:27"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"25057:351:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"25104:9:27","nodeType":"YulTypedName","src":"25104:9:27","type":""},{"name":"dataEnd","nativeSrc":"25115:7:27","nodeType":"YulTypedName","src":"25115:7:27","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"25127:6:27","nodeType":"YulTypedName","src":"25127:6:27","type":""}],"src":"25057:351:27"},{"body":{"nativeSrc":"25459:149:27","nodeType":"YulBlock","src":"25459:149:27","statements":[{"nativeSrc":"25469:25:27","nodeType":"YulAssignment","src":"25469:25:27","value":{"arguments":[{"name":"x","nativeSrc":"25492:1:27","nodeType":"YulIdentifier","src":"25492:1:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"25474:17:27","nodeType":"YulIdentifier","src":"25474:17:27"},"nativeSrc":"25474:20:27","nodeType":"YulFunctionCall","src":"25474:20:27"},"variableNames":[{"name":"x","nativeSrc":"25469:1:27","nodeType":"YulIdentifier","src":"25469:1:27"}]},{"nativeSrc":"25503:25:27","nodeType":"YulAssignment","src":"25503:25:27","value":{"arguments":[{"name":"y","nativeSrc":"25526:1:27","nodeType":"YulIdentifier","src":"25526:1:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"25508:17:27","nodeType":"YulIdentifier","src":"25508:17:27"},"nativeSrc":"25508:20:27","nodeType":"YulFunctionCall","src":"25508:20:27"},"variableNames":[{"name":"y","nativeSrc":"25503:1:27","nodeType":"YulIdentifier","src":"25503:1:27"}]},{"nativeSrc":"25537:17:27","nodeType":"YulAssignment","src":"25537:17:27","value":{"arguments":[{"name":"x","nativeSrc":"25549:1:27","nodeType":"YulIdentifier","src":"25549:1:27"},{"name":"y","nativeSrc":"25552:1:27","nodeType":"YulIdentifier","src":"25552:1:27"}],"functionName":{"name":"sub","nativeSrc":"25545:3:27","nodeType":"YulIdentifier","src":"25545:3:27"},"nativeSrc":"25545:9:27","nodeType":"YulFunctionCall","src":"25545:9:27"},"variableNames":[{"name":"diff","nativeSrc":"25537:4:27","nodeType":"YulIdentifier","src":"25537:4:27"}]},{"body":{"nativeSrc":"25579:22:27","nodeType":"YulBlock","src":"25579:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"25581:16:27","nodeType":"YulIdentifier","src":"25581:16:27"},"nativeSrc":"25581:18:27","nodeType":"YulFunctionCall","src":"25581:18:27"},"nativeSrc":"25581:18:27","nodeType":"YulExpressionStatement","src":"25581:18:27"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"25570:4:27","nodeType":"YulIdentifier","src":"25570:4:27"},{"name":"x","nativeSrc":"25576:1:27","nodeType":"YulIdentifier","src":"25576:1:27"}],"functionName":{"name":"gt","nativeSrc":"25567:2:27","nodeType":"YulIdentifier","src":"25567:2:27"},"nativeSrc":"25567:11:27","nodeType":"YulFunctionCall","src":"25567:11:27"},"nativeSrc":"25564:37:27","nodeType":"YulIf","src":"25564:37:27"}]},"name":"checked_sub_t_uint256","nativeSrc":"25414:194:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"25445:1:27","nodeType":"YulTypedName","src":"25445:1:27","type":""},{"name":"y","nativeSrc":"25448:1:27","nodeType":"YulTypedName","src":"25448:1:27","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"25454:4:27","nodeType":"YulTypedName","src":"25454:4:27","type":""}],"src":"25414:194:27"},{"body":{"nativeSrc":"25824:454:27","nodeType":"YulBlock","src":"25824:454:27","statements":[{"nativeSrc":"25834:27:27","nodeType":"YulAssignment","src":"25834:27:27","value":{"arguments":[{"name":"headStart","nativeSrc":"25846:9:27","nodeType":"YulIdentifier","src":"25846:9:27"},{"kind":"number","nativeSrc":"25857:3:27","nodeType":"YulLiteral","src":"25857:3:27","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"25842:3:27","nodeType":"YulIdentifier","src":"25842:3:27"},"nativeSrc":"25842:19:27","nodeType":"YulFunctionCall","src":"25842:19:27"},"variableNames":[{"name":"tail","nativeSrc":"25834:4:27","nodeType":"YulIdentifier","src":"25834:4:27"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"25915:6:27","nodeType":"YulIdentifier","src":"25915:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"25928:9:27","nodeType":"YulIdentifier","src":"25928:9:27"},{"kind":"number","nativeSrc":"25939:1:27","nodeType":"YulLiteral","src":"25939:1:27","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"25924:3:27","nodeType":"YulIdentifier","src":"25924:3:27"},"nativeSrc":"25924:17:27","nodeType":"YulFunctionCall","src":"25924:17:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"25871:43:27","nodeType":"YulIdentifier","src":"25871:43:27"},"nativeSrc":"25871:71:27","nodeType":"YulFunctionCall","src":"25871:71:27"},"nativeSrc":"25871:71:27","nodeType":"YulExpressionStatement","src":"25871:71:27"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"25996:6:27","nodeType":"YulIdentifier","src":"25996:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"26009:9:27","nodeType":"YulIdentifier","src":"26009:9:27"},{"kind":"number","nativeSrc":"26020:2:27","nodeType":"YulLiteral","src":"26020:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"26005:3:27","nodeType":"YulIdentifier","src":"26005:3:27"},"nativeSrc":"26005:18:27","nodeType":"YulFunctionCall","src":"26005:18:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"25952:43:27","nodeType":"YulIdentifier","src":"25952:43:27"},"nativeSrc":"25952:72:27","nodeType":"YulFunctionCall","src":"25952:72:27"},"nativeSrc":"25952:72:27","nodeType":"YulExpressionStatement","src":"25952:72:27"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"26078:6:27","nodeType":"YulIdentifier","src":"26078:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"26091:9:27","nodeType":"YulIdentifier","src":"26091:9:27"},{"kind":"number","nativeSrc":"26102:2:27","nodeType":"YulLiteral","src":"26102:2:27","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"26087:3:27","nodeType":"YulIdentifier","src":"26087:3:27"},"nativeSrc":"26087:18:27","nodeType":"YulFunctionCall","src":"26087:18:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"26034:43:27","nodeType":"YulIdentifier","src":"26034:43:27"},"nativeSrc":"26034:72:27","nodeType":"YulFunctionCall","src":"26034:72:27"},"nativeSrc":"26034:72:27","nodeType":"YulExpressionStatement","src":"26034:72:27"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"26160:6:27","nodeType":"YulIdentifier","src":"26160:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"26173:9:27","nodeType":"YulIdentifier","src":"26173:9:27"},{"kind":"number","nativeSrc":"26184:2:27","nodeType":"YulLiteral","src":"26184:2:27","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"26169:3:27","nodeType":"YulIdentifier","src":"26169:3:27"},"nativeSrc":"26169:18:27","nodeType":"YulFunctionCall","src":"26169:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"26116:43:27","nodeType":"YulIdentifier","src":"26116:43:27"},"nativeSrc":"26116:72:27","nodeType":"YulFunctionCall","src":"26116:72:27"},"nativeSrc":"26116:72:27","nodeType":"YulExpressionStatement","src":"26116:72:27"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"26242:6:27","nodeType":"YulIdentifier","src":"26242:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"26255:9:27","nodeType":"YulIdentifier","src":"26255:9:27"},{"kind":"number","nativeSrc":"26266:3:27","nodeType":"YulLiteral","src":"26266:3:27","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"26251:3:27","nodeType":"YulIdentifier","src":"26251:3:27"},"nativeSrc":"26251:19:27","nodeType":"YulFunctionCall","src":"26251:19:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"26198:43:27","nodeType":"YulIdentifier","src":"26198:43:27"},"nativeSrc":"26198:73:27","nodeType":"YulFunctionCall","src":"26198:73:27"},"nativeSrc":"26198:73:27","nodeType":"YulExpressionStatement","src":"26198:73:27"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"25614:664:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"25764:9:27","nodeType":"YulTypedName","src":"25764:9:27","type":""},{"name":"value4","nativeSrc":"25776:6:27","nodeType":"YulTypedName","src":"25776:6:27","type":""},{"name":"value3","nativeSrc":"25784:6:27","nodeType":"YulTypedName","src":"25784:6:27","type":""},{"name":"value2","nativeSrc":"25792:6:27","nodeType":"YulTypedName","src":"25792:6:27","type":""},{"name":"value1","nativeSrc":"25800:6:27","nodeType":"YulTypedName","src":"25800:6:27","type":""},{"name":"value0","nativeSrc":"25808:6:27","nodeType":"YulTypedName","src":"25808:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"25819:4:27","nodeType":"YulTypedName","src":"25819:4:27","type":""}],"src":"25614:664:27"},{"body":{"nativeSrc":"26462:367:27","nodeType":"YulBlock","src":"26462:367:27","statements":[{"nativeSrc":"26472:27:27","nodeType":"YulAssignment","src":"26472:27:27","value":{"arguments":[{"name":"headStart","nativeSrc":"26484:9:27","nodeType":"YulIdentifier","src":"26484:9:27"},{"kind":"number","nativeSrc":"26495:3:27","nodeType":"YulLiteral","src":"26495:3:27","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"26480:3:27","nodeType":"YulIdentifier","src":"26480:3:27"},"nativeSrc":"26480:19:27","nodeType":"YulFunctionCall","src":"26480:19:27"},"variableNames":[{"name":"tail","nativeSrc":"26472:4:27","nodeType":"YulIdentifier","src":"26472:4:27"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"26553:6:27","nodeType":"YulIdentifier","src":"26553:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"26566:9:27","nodeType":"YulIdentifier","src":"26566:9:27"},{"kind":"number","nativeSrc":"26577:1:27","nodeType":"YulLiteral","src":"26577:1:27","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"26562:3:27","nodeType":"YulIdentifier","src":"26562:3:27"},"nativeSrc":"26562:17:27","nodeType":"YulFunctionCall","src":"26562:17:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"26509:43:27","nodeType":"YulIdentifier","src":"26509:43:27"},"nativeSrc":"26509:71:27","nodeType":"YulFunctionCall","src":"26509:71:27"},"nativeSrc":"26509:71:27","nodeType":"YulExpressionStatement","src":"26509:71:27"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"26630:6:27","nodeType":"YulIdentifier","src":"26630:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"26643:9:27","nodeType":"YulIdentifier","src":"26643:9:27"},{"kind":"number","nativeSrc":"26654:2:27","nodeType":"YulLiteral","src":"26654:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"26639:3:27","nodeType":"YulIdentifier","src":"26639:3:27"},"nativeSrc":"26639:18:27","nodeType":"YulFunctionCall","src":"26639:18:27"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"26590:39:27","nodeType":"YulIdentifier","src":"26590:39:27"},"nativeSrc":"26590:68:27","nodeType":"YulFunctionCall","src":"26590:68:27"},"nativeSrc":"26590:68:27","nodeType":"YulExpressionStatement","src":"26590:68:27"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"26712:6:27","nodeType":"YulIdentifier","src":"26712:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"26725:9:27","nodeType":"YulIdentifier","src":"26725:9:27"},{"kind":"number","nativeSrc":"26736:2:27","nodeType":"YulLiteral","src":"26736:2:27","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"26721:3:27","nodeType":"YulIdentifier","src":"26721:3:27"},"nativeSrc":"26721:18:27","nodeType":"YulFunctionCall","src":"26721:18:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"26668:43:27","nodeType":"YulIdentifier","src":"26668:43:27"},"nativeSrc":"26668:72:27","nodeType":"YulFunctionCall","src":"26668:72:27"},"nativeSrc":"26668:72:27","nodeType":"YulExpressionStatement","src":"26668:72:27"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"26794:6:27","nodeType":"YulIdentifier","src":"26794:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"26807:9:27","nodeType":"YulIdentifier","src":"26807:9:27"},{"kind":"number","nativeSrc":"26818:2:27","nodeType":"YulLiteral","src":"26818:2:27","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"26803:3:27","nodeType":"YulIdentifier","src":"26803:3:27"},"nativeSrc":"26803:18:27","nodeType":"YulFunctionCall","src":"26803:18:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"26750:43:27","nodeType":"YulIdentifier","src":"26750:43:27"},"nativeSrc":"26750:72:27","nodeType":"YulFunctionCall","src":"26750:72:27"},"nativeSrc":"26750:72:27","nodeType":"YulExpressionStatement","src":"26750:72:27"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"26284:545:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"26410:9:27","nodeType":"YulTypedName","src":"26410:9:27","type":""},{"name":"value3","nativeSrc":"26422:6:27","nodeType":"YulTypedName","src":"26422:6:27","type":""},{"name":"value2","nativeSrc":"26430:6:27","nodeType":"YulTypedName","src":"26430:6:27","type":""},{"name":"value1","nativeSrc":"26438:6:27","nodeType":"YulTypedName","src":"26438:6:27","type":""},{"name":"value0","nativeSrc":"26446:6:27","nodeType":"YulTypedName","src":"26446:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"26457:4:27","nodeType":"YulTypedName","src":"26457:4:27","type":""}],"src":"26284:545:27"},{"body":{"nativeSrc":"26863:152:27","nodeType":"YulBlock","src":"26863:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"26880:1:27","nodeType":"YulLiteral","src":"26880:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"26883:77:27","nodeType":"YulLiteral","src":"26883:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"26873:6:27","nodeType":"YulIdentifier","src":"26873:6:27"},"nativeSrc":"26873:88:27","nodeType":"YulFunctionCall","src":"26873:88:27"},"nativeSrc":"26873:88:27","nodeType":"YulExpressionStatement","src":"26873:88:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"26977:1:27","nodeType":"YulLiteral","src":"26977:1:27","type":"","value":"4"},{"kind":"number","nativeSrc":"26980:4:27","nodeType":"YulLiteral","src":"26980:4:27","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"26970:6:27","nodeType":"YulIdentifier","src":"26970:6:27"},"nativeSrc":"26970:15:27","nodeType":"YulFunctionCall","src":"26970:15:27"},"nativeSrc":"26970:15:27","nodeType":"YulExpressionStatement","src":"26970:15:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"27001:1:27","nodeType":"YulLiteral","src":"27001:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"27004:4:27","nodeType":"YulLiteral","src":"27004:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"26994:6:27","nodeType":"YulIdentifier","src":"26994:6:27"},"nativeSrc":"26994:15:27","nodeType":"YulFunctionCall","src":"26994:15:27"},"nativeSrc":"26994:15:27","nodeType":"YulExpressionStatement","src":"26994:15:27"}]},"name":"panic_error_0x21","nativeSrc":"26835:180:27","nodeType":"YulFunctionDefinition","src":"26835:180:27"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ITaxHandler_$7403_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ITaxHandler_$7403_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ITaxHandler_$7403_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ITaxHandler_$7403__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ITaxHandler_$7403_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4(memPtr) {\n\n        mstore(add(memPtr, 0), \"AraraCoin trading already enable\")\n\n        mstore(add(memPtr, 32), \"d\")\n\n    }\n\n    function abi_encode_t_stringliteral_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_24cf83481f2a8ba90e1c3f2ad6b040e1487e7c57c8c9c5939238bafe3879f015(memPtr) {\n\n        mstore(add(memPtr, 0), \"TGC: trading already enabled\")\n\n    }\n\n    function abi_encode_t_stringliteral_24cf83481f2a8ba90e1c3f2ad6b040e1487e7c57c8c9c5939238bafe3879f015_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_24cf83481f2a8ba90e1c3f2ad6b040e1487e7c57c8c9c5939238bafe3879f015(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24cf83481f2a8ba90e1c3f2ad6b040e1487e7c57c8c9c5939238bafe3879f015__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24cf83481f2a8ba90e1c3f2ad6b040e1487e7c57c8c9c5939238bafe3879f015_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ba7cd66ed381e90a6a6f5c81315eeba2f99d0bb92ba7388f35e237d2bf061d88(memPtr) {\n\n        mstore(add(memPtr, 0), \"TGC: invalid parameters\")\n\n    }\n\n    function abi_encode_t_stringliteral_ba7cd66ed381e90a6a6f5c81315eeba2f99d0bb92ba7388f35e237d2bf061d88_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_ba7cd66ed381e90a6a6f5c81315eeba2f99d0bb92ba7388f35e237d2bf061d88(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ba7cd66ed381e90a6a6f5c81315eeba2f99d0bb92ba7388f35e237d2bf061d88__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ba7cd66ed381e90a6a6f5c81315eeba2f99d0bb92ba7388f35e237d2bf061d88_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7(memPtr) {\n\n        mstore(add(memPtr, 0), \"AraraCoin trade is disabled\")\n\n    }\n\n    function abi_encode_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n","id":27,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3021":[{"length":32,"start":5050}],"3023":[{"length":32,"start":5009}],"3025":[{"length":32,"start":4923}],"3027":[{"length":32,"start":6663}],"3029":[{"length":32,"start":6696}],"3032":[{"length":32,"start":5517}],"3035":[{"length":32,"start":5576}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101cf5760003560e01c80637edd9e5e11610104578063a9059cbb116100a2578063d505accf11610071578063d505accf1461051a578063dd62ed3e14610536578063f2fde38b14610566578063fca6172f14610582576101cf565b8063a9059cbb14610492578063bbaa49da146104c2578063c519099d146104e0578063ca40f1c4146104fe576101cf565b80638ac27f5f116100de5780638ac27f5f146104085780638da5cb5b1461042657806395d89b41146104445780639b75679c14610462576101cf565b80637edd9e5e146103bc57806384b0196e146103da5780638a8c523c146103fe576101cf565b8063488d4a51116101715780635e57966d1161014b5780635e57966d1461032257806370a0823114610352578063715018a6146103825780637ecebe001461038c576101cf565b8063488d4a51146102ca5780634ada218b146102e65780635a7adf7f14610304576101cf565b806318160ddd116101ad57806318160ddd1461024057806323b872dd1461025e578063313ce5671461028e5780633644e515146102ac576101cf565b806306fdde03146101d4578063095ea7b3146101f257806312280ba814610222575b600080fd5b6101dc6105a0565b6040516101e991906121fd565b60405180910390f35b61020c600480360381019061020791906122c7565b610632565b6040516102199190612322565b60405180910390f35b61022a610655565b604051610237919061239c565b60405180910390f35b61024861067b565b60405161025591906123c6565b60405180910390f35b610278600480360381019061027391906123e1565b610685565b6040516102859190612322565b60405180910390f35b6102966106b4565b6040516102a39190612450565b60405180910390f35b6102b46106bd565b6040516102c19190612484565b60405180910390f35b6102e460048036038101906102df919061249f565b6106cc565b005b6102ee610778565b6040516102fb9190612322565b60405180910390f35b61030c61078b565b60405161031991906124db565b60405180910390f35b61033c6004803603810190610337919061249f565b6107b1565b60405161034991906121fd565b60405180910390f35b61036c6004803603810190610367919061249f565b610ab6565b60405161037991906123c6565b60405180910390f35b61038a610afe565b005b6103a660048036038101906103a1919061249f565b610b12565b6040516103b391906123c6565b60405180910390f35b6103c4610b24565b6040516103d191906124db565b60405180910390f35b6103e2610b4a565b6040516103f597969594939291906125ef565b60405180910390f35b610406610bf4565b005b610410610c95565b60405161041d91906124db565b60405180910390f35b61042e610cbb565b60405161043b91906124db565b60405180910390f35b61044c610ce5565b60405161045991906121fd565b60405180910390f35b61047c600480360381019061047791906127a8565b610d77565b60405161048991906121fd565b60405180910390f35b6104ac60048036038101906104a791906122c7565b610db1565b6040516104b99190612322565b60405180910390f35b6104ca610dd4565b6040516104d791906124db565b60405180910390f35b6104e8610dfa565b6040516104f591906124db565b60405180910390f35b61051860048036038101906105139190612864565b610e20565b005b610534600480360381019061052f9190612909565b610f1a565b005b610550600480360381019061054b91906129ab565b611062565b60405161055d91906123c6565b60405180910390f35b610580600480360381019061057b919061249f565b6110e9565b005b61058a61116f565b60405161059791906124db565b60405180910390f35b6060600380546105af90612a1a565b80601f01602080910402602001604051908101604052809291908181526020018280546105db90612a1a565b80156106285780601f106105fd57610100808354040283529160200191610628565b820191906000526020600020905b81548152906001019060200180831161060b57829003601f168201915b5050505050905090565b60008061063d611195565b905061064a81858561119d565b600191505092915050565b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600254905090565b600080610690611195565b905061069d8582856111af565b6106a8858585611243565b60019150509392505050565b60006012905090565b60006106c7611337565b905090565b6106d46113ee565b6000600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600f60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ed910c9481701ba32afe0c247572aaece27072f230c8ec769bf245fc0b38de6818360405161076c929190612a4b565b60405180910390a15050565b600f60149054906101000a900460ff1681565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060008273ffffffffffffffffffffffffffffffffffffffff1660001b905060006040518060400160405280601081526020017f303132333435363738396162636465660000000000000000000000000000000081525090506000602a67ffffffffffffffff8111156108285761082761267d565b5b6040519080825280601f01601f19166020018201604052801561085a5781602001600182028036833780820191505090505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061089257610891612a74565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106108f6576108f5612a74565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060005b6014811015610aaa5782600485600c846109429190612ad2565b6020811061095357610952612a74565b5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c60f81c60ff168151811061099257610991612a74565b5b602001015160f81c60f81b826002836109ab9190612b06565b60026109b79190612ad2565b815181106109c8576109c7612a74565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535082600f60f81b85600c84610a0b9190612ad2565b60208110610a1c57610a1b612a74565b5b1a60f81b1660f81c60ff1681518110610a3857610a37612a74565b5b602001015160f81c60f81b82600283610a519190612b06565b6003610a5d9190612ad2565b81518110610a6e57610a6d612a74565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050610928565b50809350505050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610b066113ee565b610b106000611475565b565b6000610b1d8261153b565b9050919050565b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060608060008060006060610b5e611584565b610b666115bf565b46306000801b600067ffffffffffffffff811115610b8757610b8661267d565b5b604051908082528060200260200182016040528015610bb55781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b610bfc6113ee565b600f60149054906101000a900460ff1615610c4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4390612bba565b60405180910390fd5b6001600f60146101000a81548160ff0219169083151502179055507f799663458a5ef2936f7fa0c99b3336c69c25890f82974f04e811e5bb359186c760405160405180910390a1565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610cf490612a1a565b80601f0160208091040260200160405190810160405280929190818152602001828054610d2090612a1a565b8015610d6d5780601f10610d4257610100808354040283529160200191610d6d565b820191906000526020600020905b815481529060010190602001808311610d5057829003601f168201915b5050505050905090565b60606000610d84846107b1565b90508083604051602001610d99929190612c16565b60405160208183030381529060405291505092915050565b600080610dbc611195565b9050610dc9818585611243565b600191505092915050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610e286113ee565b600f60149054906101000a900460ff1615610e78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6f90612c86565b60405180910390fd5b60008282905003610ebe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb590612cf2565b60405180910390fd5b60005b82829050811015610f1557610f07838383818110610ee257610ee1612a74565b5b9050602002016020810190610ef7919061249f565b60106115fa90919063ffffffff16565b508080600101915050610ec1565b505050565b83421115610f5f57836040517f62791302000000000000000000000000000000000000000000000000000000008152600401610f5691906123c6565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610f8e8c61162a565b89604051602001610fa496959493929190612d12565b6040516020818303038152906040528051906020012090506000610fc782611681565b90506000610fd78287878761169b565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461104b57808a6040517f4b800e46000000000000000000000000000000000000000000000000000000008152600401611042929190612a4b565b60405180910390fd5b6110568a8a8a61119d565b50505050505050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6110f16113ee565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036111635760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161115a91906124db565b60405180910390fd5b61116c81611475565b50565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b6111aa83838360016116cb565b505050565b60006111bb8484611062565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461123d578181101561122d578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161122493929190612d73565b60405180910390fd5b61123c848484840360006116cb565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112b55760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016112ac91906124db565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113275760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161131e91906124db565b60405180910390fd5b6113328383836118a2565b505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161480156113b357507f000000000000000000000000000000000000000000000000000000000000000046145b156113e0577f000000000000000000000000000000000000000000000000000000000000000090506113eb565b6113e86119e2565b90505b90565b6113f6611195565b73ffffffffffffffffffffffffffffffffffffffff16611414610cbb565b73ffffffffffffffffffffffffffffffffffffffff161461147357611437611195565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161146a91906124db565b60405180910390fd5b565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606115ba60057f0000000000000000000000000000000000000000000000000000000000000000611a7890919063ffffffff16565b905090565b60606115f560067f0000000000000000000000000000000000000000000000000000000000000000611a7890919063ffffffff16565b905090565b6000611622836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611b28565b905092915050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050559050919050565b600061169461168e611337565b83611b98565b9050919050565b6000806000806116ad88888888611bd9565b9250925092506116bd8282611ccd565b829350505050949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361173d5760006040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161173491906124db565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036117af5760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016117a691906124db565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550801561189c578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161189391906123c6565b60405180910390a35b50505050565b600f60149054906101000a900460ff1661190a576118ca836010611e3190919063ffffffff16565b611909576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161190090612df6565b60405180910390fd5b5b6000600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d7ad21ac8585856040518463ffffffff1660e01b815260040161196b93929190612e16565b602060405180830381865afa158015611988573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119ac9190612e62565b9050600081836119bc9190612e8f565b90506119d0856119ca610cbb565b84611e61565b6119db858583611e61565b5050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000004630604051602001611a5d959493929190612ec3565b60405160208183030381529060405280519060200120905090565b606060ff60001b8314611a9557611a8e83612086565b9050611b22565b818054611aa190612a1a565b80601f0160208091040260200160405190810160405280929190818152602001828054611acd90612a1a565b8015611b1a5780601f10611aef57610100808354040283529160200191611b1a565b820191906000526020600020905b815481529060010190602001808311611afd57829003601f168201915b505050505090505b92915050565b6000611b3483836120fa565b611b8d578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050611b92565b600090505b92915050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c1115611c19576000600385925092509250611cc3565b600060018888888860405160008152602001604052604051611c3e9493929190612f16565b6020604051602081039080840390855afa158015611c60573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611cb457600060016000801b93509350935050611cc3565b8060008060001b935093509350505b9450945094915050565b60006003811115611ce157611ce0612f5b565b5b826003811115611cf457611cf3612f5b565b5b0315611e2d5760016003811115611d0e57611d0d612f5b565b5b826003811115611d2157611d20612f5b565b5b03611d58576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026003811115611d6c57611d6b612f5b565b5b826003811115611d7f57611d7e612f5b565b5b03611dc4578060001c6040517ffce698f7000000000000000000000000000000000000000000000000000000008152600401611dbb91906123c6565b60405180910390fd5b600380811115611dd757611dd6612f5b565b5b826003811115611dea57611de9612f5b565b5b03611e2c57806040517fd78bce0c000000000000000000000000000000000000000000000000000000008152600401611e239190612484565b60405180910390fd5b5b5050565b6000611e59836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6120fa565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611eb3578060026000828254611ea79190612ad2565b92505081905550611f86565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611f3f578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611f3693929190612d73565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611fcf578060026000828254039250508190555061201c565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161207991906123c6565b60405180910390a3505050565b606060006120938361211d565b90506000602067ffffffffffffffff8111156120b2576120b161267d565b5b6040519080825280601f01601f1916602001820160405280156120e45781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b600080836001016000848152602001908152602001600020541415905092915050565b60008060ff8360001c169050601f811115612164576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156121a757808201518184015260208101905061218c565b60008484015250505050565b6000601f19601f8301169050919050565b60006121cf8261216d565b6121d98185612178565b93506121e9818560208601612189565b6121f2816121b3565b840191505092915050565b6000602082019050818103600083015261221781846121c4565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061225e82612233565b9050919050565b61226e81612253565b811461227957600080fd5b50565b60008135905061228b81612265565b92915050565b6000819050919050565b6122a481612291565b81146122af57600080fd5b50565b6000813590506122c18161229b565b92915050565b600080604083850312156122de576122dd612229565b5b60006122ec8582860161227c565b92505060206122fd858286016122b2565b9150509250929050565b60008115159050919050565b61231c81612307565b82525050565b60006020820190506123376000830184612313565b92915050565b6000819050919050565b600061236261235d61235884612233565b61233d565b612233565b9050919050565b600061237482612347565b9050919050565b600061238682612369565b9050919050565b6123968161237b565b82525050565b60006020820190506123b1600083018461238d565b92915050565b6123c081612291565b82525050565b60006020820190506123db60008301846123b7565b92915050565b6000806000606084860312156123fa576123f9612229565b5b60006124088682870161227c565b93505060206124198682870161227c565b925050604061242a868287016122b2565b9150509250925092565b600060ff82169050919050565b61244a81612434565b82525050565b60006020820190506124656000830184612441565b92915050565b6000819050919050565b61247e8161246b565b82525050565b60006020820190506124996000830184612475565b92915050565b6000602082840312156124b5576124b4612229565b5b60006124c38482850161227c565b91505092915050565b6124d581612253565b82525050565b60006020820190506124f060008301846124cc565b92915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b61252b816124f6565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61256681612291565b82525050565b6000612578838361255d565b60208301905092915050565b6000602082019050919050565b600061259c82612531565b6125a6818561253c565b93506125b18361254d565b8060005b838110156125e25781516125c9888261256c565b97506125d483612584565b9250506001810190506125b5565b5085935050505092915050565b600060e082019050612604600083018a612522565b818103602083015261261681896121c4565b9050818103604083015261262a81886121c4565b905061263960608301876123b7565b61264660808301866124cc565b61265360a0830185612475565b81810360c08301526126658184612591565b905098975050505050505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6126b5826121b3565b810181811067ffffffffffffffff821117156126d4576126d361267d565b5b80604052505050565b60006126e761221f565b90506126f382826126ac565b919050565b600067ffffffffffffffff8211156127135761271261267d565b5b61271c826121b3565b9050602081019050919050565b82818337600083830152505050565b600061274b612746846126f8565b6126dd565b90508281526020810184848401111561276757612766612678565b5b612772848285612729565b509392505050565b600082601f83011261278f5761278e612673565b5b813561279f848260208601612738565b91505092915050565b600080604083850312156127bf576127be612229565b5b60006127cd8582860161227c565b925050602083013567ffffffffffffffff8111156127ee576127ed61222e565b5b6127fa8582860161277a565b9150509250929050565b600080fd5b600080fd5b60008083601f84011261282457612823612673565b5b8235905067ffffffffffffffff81111561284157612840612804565b5b60208301915083602082028301111561285d5761285c612809565b5b9250929050565b6000806020838503121561287b5761287a612229565b5b600083013567ffffffffffffffff8111156128995761289861222e565b5b6128a58582860161280e565b92509250509250929050565b6128ba81612434565b81146128c557600080fd5b50565b6000813590506128d7816128b1565b92915050565b6128e68161246b565b81146128f157600080fd5b50565b600081359050612903816128dd565b92915050565b600080600080600080600060e0888a03121561292857612927612229565b5b60006129368a828b0161227c565b97505060206129478a828b0161227c565b96505060406129588a828b016122b2565b95505060606129698a828b016122b2565b945050608061297a8a828b016128c8565b93505060a061298b8a828b016128f4565b92505060c061299c8a828b016128f4565b91505092959891949750929550565b600080604083850312156129c2576129c1612229565b5b60006129d08582860161227c565b92505060206129e18582860161227c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612a3257607f821691505b602082108103612a4557612a446129eb565b5b50919050565b6000604082019050612a6060008301856124cc565b612a6d60208301846124cc565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612add82612291565b9150612ae883612291565b9250828201905080821115612b0057612aff612aa3565b5b92915050565b6000612b1182612291565b9150612b1c83612291565b9250828202612b2a81612291565b91508282048414831517612b4157612b40612aa3565b5b5092915050565b7f4172617261436f696e2074726164696e6720616c726561647920656e61626c6560008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b6000612ba4602183612178565b9150612baf82612b48565b604082019050919050565b60006020820190508181036000830152612bd381612b97565b9050919050565b600081905092915050565b6000612bf08261216d565b612bfa8185612bda565b9350612c0a818560208601612189565b80840191505092915050565b6000612c228285612be5565b9150612c2e8284612be5565b91508190509392505050565b7f5447433a2074726164696e6720616c726561647920656e61626c656400000000600082015250565b6000612c70601c83612178565b9150612c7b82612c3a565b602082019050919050565b60006020820190508181036000830152612c9f81612c63565b9050919050565b7f5447433a20696e76616c696420706172616d6574657273000000000000000000600082015250565b6000612cdc601783612178565b9150612ce782612ca6565b602082019050919050565b60006020820190508181036000830152612d0b81612ccf565b9050919050565b600060c082019050612d276000830189612475565b612d3460208301886124cc565b612d4160408301876124cc565b612d4e60608301866123b7565b612d5b60808301856123b7565b612d6860a08301846123b7565b979650505050505050565b6000606082019050612d8860008301866124cc565b612d9560208301856123b7565b612da260408301846123b7565b949350505050565b7f4172617261436f696e2074726164652069732064697361626c65640000000000600082015250565b6000612de0601b83612178565b9150612deb82612daa565b602082019050919050565b60006020820190508181036000830152612e0f81612dd3565b9050919050565b6000606082019050612e2b60008301866124cc565b612e3860208301856124cc565b612e4560408301846123b7565b949350505050565b600081519050612e5c8161229b565b92915050565b600060208284031215612e7857612e77612229565b5b6000612e8684828501612e4d565b91505092915050565b6000612e9a82612291565b9150612ea583612291565b9250828203905081811115612ebd57612ebc612aa3565b5b92915050565b600060a082019050612ed86000830188612475565b612ee56020830187612475565b612ef26040830186612475565b612eff60608301856123b7565b612f0c60808301846124cc565b9695505050505050565b6000608082019050612f2b6000830187612475565b612f386020830186612441565b612f456040830185612475565b612f526060830184612475565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea2646970667358221220f0447f802829722dbef9135fd1e94802611cd237b1de48a4cab8072e4b402dc264736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7EDD9E5E GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x51A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x566 JUMPI DUP1 PUSH4 0xFCA6172F EQ PUSH2 0x582 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x492 JUMPI DUP1 PUSH4 0xBBAA49DA EQ PUSH2 0x4C2 JUMPI DUP1 PUSH4 0xC519099D EQ PUSH2 0x4E0 JUMPI DUP1 PUSH4 0xCA40F1C4 EQ PUSH2 0x4FE JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x8AC27F5F GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8AC27F5F EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0x9B75679C EQ PUSH2 0x462 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x7EDD9E5E EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0x8A8C523C EQ PUSH2 0x3FE JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x488D4A51 GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x5E57966D GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x5E57966D EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x38C JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x488D4A51 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x4ADA218B EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x5A7ADF7F EQ PUSH2 0x304 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1AD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2AC JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x12280BA8 EQ PUSH2 0x222 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x21FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x22C7 JUMP JUMPDEST PUSH2 0x632 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x2322 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22A PUSH2 0x655 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x239C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x248 PUSH2 0x67B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x278 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x23E1 JUMP JUMPDEST PUSH2 0x685 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x2322 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x296 PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x2450 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B4 PUSH2 0x6BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x2484 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DF SWAP2 SWAP1 PUSH2 0x249F JUMP JUMPDEST PUSH2 0x6CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EE PUSH2 0x778 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x2322 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30C PUSH2 0x78B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x24DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x249F JUMP JUMPDEST PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x21FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x249F JUMP JUMPDEST PUSH2 0xAB6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38A PUSH2 0xAFE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0x249F JUMP JUMPDEST PUSH2 0xB12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C4 PUSH2 0xB24 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0x24DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E2 PUSH2 0xB4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F5 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x406 PUSH2 0xBF4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x410 PUSH2 0xC95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41D SWAP2 SWAP1 PUSH2 0x24DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42E PUSH2 0xCBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43B SWAP2 SWAP1 PUSH2 0x24DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44C PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x459 SWAP2 SWAP1 PUSH2 0x21FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x477 SWAP2 SWAP1 PUSH2 0x27A8 JUMP JUMPDEST PUSH2 0xD77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x489 SWAP2 SWAP1 PUSH2 0x21FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A7 SWAP2 SWAP1 PUSH2 0x22C7 JUMP JUMPDEST PUSH2 0xDB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B9 SWAP2 SWAP1 PUSH2 0x2322 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CA PUSH2 0xDD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D7 SWAP2 SWAP1 PUSH2 0x24DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E8 PUSH2 0xDFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F5 SWAP2 SWAP1 PUSH2 0x24DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x518 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x513 SWAP2 SWAP1 PUSH2 0x2864 JUMP JUMPDEST PUSH2 0xE20 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x534 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x52F SWAP2 SWAP1 PUSH2 0x2909 JUMP JUMPDEST PUSH2 0xF1A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x550 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54B SWAP2 SWAP1 PUSH2 0x29AB JUMP JUMPDEST PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55D SWAP2 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x580 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57B SWAP2 SWAP1 PUSH2 0x249F JUMP JUMPDEST PUSH2 0x10E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58A PUSH2 0x116F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x597 SWAP2 SWAP1 PUSH2 0x24DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x5AF SWAP1 PUSH2 0x2A1A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5DB SWAP1 PUSH2 0x2A1A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x628 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x628 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x60B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x63D PUSH2 0x1195 JUMP JUMPDEST SWAP1 POP PUSH2 0x64A DUP2 DUP6 DUP6 PUSH2 0x119D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x690 PUSH2 0x1195 JUMP JUMPDEST SWAP1 POP PUSH2 0x69D DUP6 DUP3 DUP6 PUSH2 0x11AF JUMP JUMPDEST PUSH2 0x6A8 DUP6 DUP6 DUP6 PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C7 PUSH2 0x1337 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6D4 PUSH2 0x13EE JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0xF PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH31 0xD910C9481701BA32AFE0C247572AAECE27072F230C8EC769BF245FC0B38DE6 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x76C SWAP3 SWAP2 SWAP1 PUSH2 0x2A4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH1 0x2A PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x828 JUMPI PUSH2 0x827 PUSH2 0x267D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x85A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x892 JUMPI PUSH2 0x891 PUSH2 0x2A74 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x8F6 JUMPI PUSH2 0x8F5 PUSH2 0x2A74 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 JUMPDEST PUSH1 0x14 DUP2 LT ISZERO PUSH2 0xAAA JUMPI DUP3 PUSH1 0x4 DUP6 PUSH1 0xC DUP5 PUSH2 0x942 SWAP2 SWAP1 PUSH2 0x2AD2 JUMP JUMPDEST PUSH1 0x20 DUP2 LT PUSH2 0x953 JUMPI PUSH2 0x952 PUSH2 0x2A74 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SHR PUSH1 0xF8 SHR PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x992 JUMPI PUSH2 0x991 PUSH2 0x2A74 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP3 PUSH1 0x2 DUP4 PUSH2 0x9AB SWAP2 SWAP1 PUSH2 0x2B06 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x9B7 SWAP2 SWAP1 PUSH2 0x2AD2 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x9C8 JUMPI PUSH2 0x9C7 PUSH2 0x2A74 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP3 PUSH1 0xF PUSH1 0xF8 SHL DUP6 PUSH1 0xC DUP5 PUSH2 0xA0B SWAP2 SWAP1 PUSH2 0x2AD2 JUMP JUMPDEST PUSH1 0x20 DUP2 LT PUSH2 0xA1C JUMPI PUSH2 0xA1B PUSH2 0x2A74 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL AND PUSH1 0xF8 SHR PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0xA38 JUMPI PUSH2 0xA37 PUSH2 0x2A74 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP3 PUSH1 0x2 DUP4 PUSH2 0xA51 SWAP2 SWAP1 PUSH2 0x2B06 JUMP JUMPDEST PUSH1 0x3 PUSH2 0xA5D SWAP2 SWAP1 PUSH2 0x2AD2 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xA6E JUMPI PUSH2 0xA6D PUSH2 0x2A74 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x928 JUMP JUMPDEST POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB06 PUSH2 0x13EE JUMP JUMPDEST PUSH2 0xB10 PUSH1 0x0 PUSH2 0x1475 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB1D DUP3 PUSH2 0x153B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0xB5E PUSH2 0x1584 JUMP JUMPDEST PUSH2 0xB66 PUSH2 0x15BF JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB87 JUMPI PUSH2 0xB86 PUSH2 0x267D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBB5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH2 0xBFC PUSH2 0x13EE JUMP JUMPDEST PUSH1 0xF PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC43 SWAP1 PUSH2 0x2BBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xF PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x799663458A5EF2936F7FA0C99B3336C69C25890F82974F04E811E5BB359186C7 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xCF4 SWAP1 PUSH2 0x2A1A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD20 SWAP1 PUSH2 0x2A1A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD6D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD42 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD6D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD50 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xD84 DUP5 PUSH2 0x7B1 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD99 SWAP3 SWAP2 SWAP1 PUSH2 0x2C16 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xDBC PUSH2 0x1195 JUMP JUMPDEST SWAP1 POP PUSH2 0xDC9 DUP2 DUP6 DUP6 PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xE28 PUSH2 0x13EE JUMP JUMPDEST PUSH1 0xF PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xE78 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE6F SWAP1 PUSH2 0x2C86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 SWAP1 POP SUB PUSH2 0xEBE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB5 SWAP1 PUSH2 0x2CF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP3 SWAP1 POP DUP2 LT ISZERO PUSH2 0xF15 JUMPI PUSH2 0xF07 DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0xEE2 JUMPI PUSH2 0xEE1 PUSH2 0x2A74 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xEF7 SWAP2 SWAP1 PUSH2 0x249F JUMP JUMPDEST PUSH1 0x10 PUSH2 0x15FA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xEC1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xF5F JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF56 SWAP2 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xF8E DUP13 PUSH2 0x162A JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFA4 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xFC7 DUP3 PUSH2 0x1681 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xFD7 DUP3 DUP8 DUP8 DUP8 PUSH2 0x169B JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x104B JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1042 SWAP3 SWAP2 SWAP1 PUSH2 0x2A4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1056 DUP11 DUP11 DUP11 PUSH2 0x119D JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10F1 PUSH2 0x13EE JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1163 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115A SWAP2 SWAP1 PUSH2 0x24DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x116C DUP2 PUSH2 0x1475 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x11AA DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x16CB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11BB DUP5 DUP5 PUSH2 0x1062 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x123D JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x122D JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1224 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x123C DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x16CB JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12B5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12AC SWAP2 SWAP1 PUSH2 0x24DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1327 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x131E SWAP2 SWAP1 PUSH2 0x24DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1332 DUP4 DUP4 DUP4 PUSH2 0x18A2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x13B3 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x13E0 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x13EB JUMP JUMPDEST PUSH2 0x13E8 PUSH2 0x19E2 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x13F6 PUSH2 0x1195 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1414 PUSH2 0xCBB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1473 JUMPI PUSH2 0x1437 PUSH2 0x1195 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x146A SWAP2 SWAP1 PUSH2 0x24DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x15BA PUSH1 0x5 PUSH32 0x0 PUSH2 0x1A78 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x15F5 PUSH1 0x6 PUSH32 0x0 PUSH2 0x1A78 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1622 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x1B28 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1694 PUSH2 0x168E PUSH2 0x1337 JUMP JUMPDEST DUP4 PUSH2 0x1B98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x16AD DUP9 DUP9 DUP9 DUP9 PUSH2 0x1BD9 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x16BD DUP3 DUP3 PUSH2 0x1CCD JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x173D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1734 SWAP2 SWAP1 PUSH2 0x24DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17AF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A6 SWAP2 SWAP1 PUSH2 0x24DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x189C JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1893 SWAP2 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x190A JUMPI PUSH2 0x18CA DUP4 PUSH1 0x10 PUSH2 0x1E31 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1909 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1900 SWAP1 PUSH2 0x2DF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD7AD21AC DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x196B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E16 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1988 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19AC SWAP2 SWAP1 PUSH2 0x2E62 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 PUSH2 0x19BC SWAP2 SWAP1 PUSH2 0x2E8F JUMP JUMPDEST SWAP1 POP PUSH2 0x19D0 DUP6 PUSH2 0x19CA PUSH2 0xCBB JUMP JUMPDEST DUP5 PUSH2 0x1E61 JUMP JUMPDEST PUSH2 0x19DB DUP6 DUP6 DUP4 PUSH2 0x1E61 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1A5D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2EC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x1A95 JUMPI PUSH2 0x1A8E DUP4 PUSH2 0x2086 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B22 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1AA1 SWAP1 PUSH2 0x2A1A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1ACD SWAP1 PUSH2 0x2A1A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B1A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1AEF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B1A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1AFD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B34 DUP4 DUP4 PUSH2 0x20FA JUMP JUMPDEST PUSH2 0x1B8D JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x1B92 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1C19 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1CC3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1C3E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F16 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C60 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CB4 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1CC3 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1CE1 JUMPI PUSH2 0x1CE0 PUSH2 0x2F5B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1CF4 JUMPI PUSH2 0x1CF3 PUSH2 0x2F5B JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x1E2D JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1D0E JUMPI PUSH2 0x1D0D PUSH2 0x2F5B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1D21 JUMPI PUSH2 0x1D20 PUSH2 0x2F5B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1D58 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1D6C JUMPI PUSH2 0x1D6B PUSH2 0x2F5B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1D7F JUMPI PUSH2 0x1D7E PUSH2 0x2F5B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1DC4 JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DBB SWAP2 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1DD7 JUMPI PUSH2 0x1DD6 PUSH2 0x2F5B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1DEA JUMPI PUSH2 0x1DE9 PUSH2 0x2F5B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1E2C JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E23 SWAP2 SWAP1 PUSH2 0x2484 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E59 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x20FA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1EB3 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1EA7 SWAP2 SWAP1 PUSH2 0x2AD2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1F86 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1F3F JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F36 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1FCF JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x201C JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x2079 SWAP2 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2093 DUP4 PUSH2 0x211D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20B2 JUMPI PUSH2 0x20B1 PUSH2 0x267D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x20E4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x2164 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21A7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x218C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21CF DUP3 PUSH2 0x216D JUMP JUMPDEST PUSH2 0x21D9 DUP2 DUP6 PUSH2 0x2178 JUMP JUMPDEST SWAP4 POP PUSH2 0x21E9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2189 JUMP JUMPDEST PUSH2 0x21F2 DUP2 PUSH2 0x21B3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2217 DUP2 DUP5 PUSH2 0x21C4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x225E DUP3 PUSH2 0x2233 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x226E DUP2 PUSH2 0x2253 JUMP JUMPDEST DUP2 EQ PUSH2 0x2279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x228B DUP2 PUSH2 0x2265 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22A4 DUP2 PUSH2 0x2291 JUMP JUMPDEST DUP2 EQ PUSH2 0x22AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22C1 DUP2 PUSH2 0x229B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22DE JUMPI PUSH2 0x22DD PUSH2 0x2229 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22EC DUP6 DUP3 DUP7 ADD PUSH2 0x227C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22FD DUP6 DUP3 DUP7 ADD PUSH2 0x22B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x231C DUP2 PUSH2 0x2307 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2337 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2313 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2362 PUSH2 0x235D PUSH2 0x2358 DUP5 PUSH2 0x2233 JUMP JUMPDEST PUSH2 0x233D JUMP JUMPDEST PUSH2 0x2233 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2374 DUP3 PUSH2 0x2347 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2386 DUP3 PUSH2 0x2369 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2396 DUP2 PUSH2 0x237B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23B1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x238D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x23C0 DUP2 PUSH2 0x2291 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23DB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x23B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x23FA JUMPI PUSH2 0x23F9 PUSH2 0x2229 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2408 DUP7 DUP3 DUP8 ADD PUSH2 0x227C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2419 DUP7 DUP3 DUP8 ADD PUSH2 0x227C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x242A DUP7 DUP3 DUP8 ADD PUSH2 0x22B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x244A DUP2 PUSH2 0x2434 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2465 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2441 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x247E DUP2 PUSH2 0x246B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2499 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2475 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24B5 JUMPI PUSH2 0x24B4 PUSH2 0x2229 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24C3 DUP5 DUP3 DUP6 ADD PUSH2 0x227C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x24D5 DUP2 PUSH2 0x2253 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24F0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x24CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x252B DUP2 PUSH2 0x24F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2566 DUP2 PUSH2 0x2291 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2578 DUP4 DUP4 PUSH2 0x255D JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x259C DUP3 PUSH2 0x2531 JUMP JUMPDEST PUSH2 0x25A6 DUP2 DUP6 PUSH2 0x253C JUMP JUMPDEST SWAP4 POP PUSH2 0x25B1 DUP4 PUSH2 0x254D JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x25E2 JUMPI DUP2 MLOAD PUSH2 0x25C9 DUP9 DUP3 PUSH2 0x256C JUMP JUMPDEST SWAP8 POP PUSH2 0x25D4 DUP4 PUSH2 0x2584 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x25B5 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x2604 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x2522 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2616 DUP2 DUP10 PUSH2 0x21C4 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x262A DUP2 DUP9 PUSH2 0x21C4 JUMP JUMPDEST SWAP1 POP PUSH2 0x2639 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x23B7 JUMP JUMPDEST PUSH2 0x2646 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x24CC JUMP JUMPDEST PUSH2 0x2653 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x2475 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x2665 DUP2 DUP5 PUSH2 0x2591 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x26B5 DUP3 PUSH2 0x21B3 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x26D4 JUMPI PUSH2 0x26D3 PUSH2 0x267D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26E7 PUSH2 0x221F JUMP JUMPDEST SWAP1 POP PUSH2 0x26F3 DUP3 DUP3 PUSH2 0x26AC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2713 JUMPI PUSH2 0x2712 PUSH2 0x267D JUMP JUMPDEST JUMPDEST PUSH2 0x271C DUP3 PUSH2 0x21B3 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x274B PUSH2 0x2746 DUP5 PUSH2 0x26F8 JUMP JUMPDEST PUSH2 0x26DD JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2767 JUMPI PUSH2 0x2766 PUSH2 0x2678 JUMP JUMPDEST JUMPDEST PUSH2 0x2772 DUP5 DUP3 DUP6 PUSH2 0x2729 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x278F JUMPI PUSH2 0x278E PUSH2 0x2673 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x279F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2738 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27BF JUMPI PUSH2 0x27BE PUSH2 0x2229 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27CD DUP6 DUP3 DUP7 ADD PUSH2 0x227C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27EE JUMPI PUSH2 0x27ED PUSH2 0x222E JUMP JUMPDEST JUMPDEST PUSH2 0x27FA DUP6 DUP3 DUP7 ADD PUSH2 0x277A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2824 JUMPI PUSH2 0x2823 PUSH2 0x2673 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2841 JUMPI PUSH2 0x2840 PUSH2 0x2804 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x285D JUMPI PUSH2 0x285C PUSH2 0x2809 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x287B JUMPI PUSH2 0x287A PUSH2 0x2229 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2899 JUMPI PUSH2 0x2898 PUSH2 0x222E JUMP JUMPDEST JUMPDEST PUSH2 0x28A5 DUP6 DUP3 DUP7 ADD PUSH2 0x280E JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x28BA DUP2 PUSH2 0x2434 JUMP JUMPDEST DUP2 EQ PUSH2 0x28C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28D7 DUP2 PUSH2 0x28B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x28E6 DUP2 PUSH2 0x246B JUMP JUMPDEST DUP2 EQ PUSH2 0x28F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2903 DUP2 PUSH2 0x28DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2928 JUMPI PUSH2 0x2927 PUSH2 0x2229 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2936 DUP11 DUP3 DUP12 ADD PUSH2 0x227C JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x2947 DUP11 DUP3 DUP12 ADD PUSH2 0x227C JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x2958 DUP11 DUP3 DUP12 ADD PUSH2 0x22B2 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x2969 DUP11 DUP3 DUP12 ADD PUSH2 0x22B2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x297A DUP11 DUP3 DUP12 ADD PUSH2 0x28C8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x298B DUP11 DUP3 DUP12 ADD PUSH2 0x28F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x299C DUP11 DUP3 DUP12 ADD PUSH2 0x28F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29C2 JUMPI PUSH2 0x29C1 PUSH2 0x2229 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x29D0 DUP6 DUP3 DUP7 ADD PUSH2 0x227C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x29E1 DUP6 DUP3 DUP7 ADD PUSH2 0x227C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2A32 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2A45 JUMPI PUSH2 0x2A44 PUSH2 0x29EB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2A60 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x24CC JUMP JUMPDEST PUSH2 0x2A6D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x24CC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2ADD DUP3 PUSH2 0x2291 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AE8 DUP4 PUSH2 0x2291 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2B00 JUMPI PUSH2 0x2AFF PUSH2 0x2AA3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B11 DUP3 PUSH2 0x2291 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B1C DUP4 PUSH2 0x2291 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2B2A DUP2 PUSH2 0x2291 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2B41 JUMPI PUSH2 0x2B40 PUSH2 0x2AA3 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4172617261436F696E2074726164696E6720616C726561647920656E61626C65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BA4 PUSH1 0x21 DUP4 PUSH2 0x2178 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BAF DUP3 PUSH2 0x2B48 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BD3 DUP2 PUSH2 0x2B97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BF0 DUP3 PUSH2 0x216D JUMP JUMPDEST PUSH2 0x2BFA DUP2 DUP6 PUSH2 0x2BDA JUMP JUMPDEST SWAP4 POP PUSH2 0x2C0A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2189 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C22 DUP3 DUP6 PUSH2 0x2BE5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C2E DUP3 DUP5 PUSH2 0x2BE5 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5447433A2074726164696E6720616C726561647920656E61626C656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C70 PUSH1 0x1C DUP4 PUSH2 0x2178 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C7B DUP3 PUSH2 0x2C3A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C9F DUP2 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5447433A20696E76616C696420706172616D6574657273000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CDC PUSH1 0x17 DUP4 PUSH2 0x2178 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CE7 DUP3 PUSH2 0x2CA6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D0B DUP2 PUSH2 0x2CCF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x2D27 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x2475 JUMP JUMPDEST PUSH2 0x2D34 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x24CC JUMP JUMPDEST PUSH2 0x2D41 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x24CC JUMP JUMPDEST PUSH2 0x2D4E PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x23B7 JUMP JUMPDEST PUSH2 0x2D5B PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x23B7 JUMP JUMPDEST PUSH2 0x2D68 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x23B7 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2D88 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x24CC JUMP JUMPDEST PUSH2 0x2D95 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x23B7 JUMP JUMPDEST PUSH2 0x2DA2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x23B7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4172617261436F696E2074726164652069732064697361626C65640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE0 PUSH1 0x1B DUP4 PUSH2 0x2178 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DEB DUP3 PUSH2 0x2DAA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E0F DUP2 PUSH2 0x2DD3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2E2B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x24CC JUMP JUMPDEST PUSH2 0x2E38 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x24CC JUMP JUMPDEST PUSH2 0x2E45 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x23B7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2E5C DUP2 PUSH2 0x229B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E78 JUMPI PUSH2 0x2E77 PUSH2 0x2229 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E86 DUP5 DUP3 DUP6 ADD PUSH2 0x2E4D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E9A DUP3 PUSH2 0x2291 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EA5 DUP4 PUSH2 0x2291 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2EBD JUMPI PUSH2 0x2EBC PUSH2 0x2AA3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2ED8 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2475 JUMP JUMPDEST PUSH2 0x2EE5 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2475 JUMP JUMPDEST PUSH2 0x2EF2 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x2475 JUMP JUMPDEST PUSH2 0x2EFF PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x23B7 JUMP JUMPDEST PUSH2 0x2F0C PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x24CC JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2F2B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2475 JUMP JUMPDEST PUSH2 0x2F38 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2441 JUMP JUMPDEST PUSH2 0x2F45 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2475 JUMP JUMPDEST PUSH2 0x2F52 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2475 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE PREVRANDAO PUSH32 0x802829722DBEF9135FD1E94802611CD237B1DE48A4CAB8072E4B402DC264736F PUSH13 0x63430008180033000000000000 ","sourceMap":"390:3957:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1001:29:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2656:112:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2553:263:23;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1036:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;530:67;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3616:495;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;2406:143:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;838:80:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5144:557:17;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;2363:184:23;;;:::i;:::-;;682:69;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4117:228:23;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;603:73:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;757:75;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2822:360;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1680:672:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3846:140:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;446:78:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89:4;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;1001:29:23:-;;;;;;;;;;;;;:::o;3144:97:4:-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3002:82::-;3051:5;3075:2;3068:9;;3002:82;:::o;2656:112:6:-;2715:7;2741:20;:18;:20::i;:::-;2734:27;;2656:112;:::o;2553:263:23:-;1531:13:0;:11;:13::i;:::-;2632:28:23::1;2671:10;;;;;;;;;;;2632:50;;2717:17;2692:10;;:43;;;;;;;;;;;;;;;;;;2751:58;2769:20;2791:17;2751:58;;;;;;;:::i;:::-;;;;;;;;2622:194;2553:263:::0;:::o;1036:26::-;;;;;;;;;;;;;:::o;530:67::-;;;;;;;;;;;;;:::o;3616:495::-;3677:13;3702;3742:5;3726:23;;3718:32;;3702:48;;3760:21;:42;;;;;;;;;;;;;;;;;;;3813:16;3842:2;3832:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3813:32;;3855:12;:3;3859:1;3855:6;;;;;;;;:::i;:::-;;;;;:12;;;;;;;;;;;3877;:3;3881:1;3877:6;;;;;;;;:::i;:::-;;;;;:12;;;;;;;;;;;3904:9;3899:178;3923:2;3919:1;:6;3899:178;;;3963:8;3995:1;3978:5;3988:2;3984:1;:6;;;;:::i;:::-;3978:13;;;;;;;:::i;:::-;;;;;:18;;;;;3972:25;;3963:35;;;;;;;;;;:::i;:::-;;;;;;;;;;3946:3;3958:1;3954;:5;;;;:::i;:::-;3950:1;:9;;;;:::i;:::-;3946:14;;;;;;;;:::i;:::-;;;;;:52;;;;;;;;;;;4029:8;4060:4;4044:20;;:5;4054:2;4050:1;:6;;;;:::i;:::-;4044:13;;;;;;;:::i;:::-;;;;;:20;4038:27;;4029:37;;;;;;;;;;:::i;:::-;;;;;;;;;;4012:3;4024:1;4020;:5;;;;:::i;:::-;4016:1;:9;;;;:::i;:::-;4012:14;;;;;;;;:::i;:::-;;;;;:54;;;;;;;;;;;3927:3;;;;;;;3899:178;;;;4100:3;4086:18;;;;;3616:495;;;:::o;3299:116:4:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2406:143:6:-;2497:7;2523:19;2536:5;2523:12;:19::i;:::-;2516:26;;2406:143;;;:::o;838:80:23:-;;;;;;;;;;;;;:::o;5144:557:17:-;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5590:13;5625:4;5652:1;5644:10;;5682:1;5668:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5482:212;;;;;;;;;;;;;;;;;;;;;5144:557;;;;;;;:::o;2363:184:23:-;1531:13:0;:11;:13::i;:::-;2426:14:23::1;;;;;;;;;;;2425:15;2417:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;2505:4;2488:14;;:21;;;;;;;;;;;;;;;;;;2524:16;;;;;;;;;;2363:184::o:0;682:69::-;;;;;;;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2276:93:4:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;4117:228:23:-;4211:13;4236:21;4260:22;4276:5;4260:15;:22::i;:::-;4236:46;;4323:7;4332:4;4306:31;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4292:46;;;4117:228;;;;:::o;3610:178:4:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;603:73:23:-;;;;;;;;;;;;;:::o;757:75::-;;;;;;;;;;;;;:::o;2822:360::-;1531:13:0;:11;:13::i;:::-;2932:14:23::1;;;;;;;;;;;2931:15;2923:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;3024:1;2997:16;;:23;;:28:::0;2989:64:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3068:9;3063:113;3087:16;;:23;;3083:1;:27;3063:113;;;3131:34;3145:16;;3162:1;3145:19;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;3131:9;:13;;:34;;;;:::i;:::-;;3112:3;;;;;;;3063:113;;;;2822:360:::0;;:::o;1680:672:6:-;1901:8;1883:15;:26;1879:97;;;1956:8;1932:33;;;;;;;;;;;:::i;:::-;;;;;;;;1879:97;1986:18;1022:95;2045:5;2052:7;2061:5;2068:16;2078:5;2068:9;:16::i;:::-;2086:8;2017:78;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2007:89;;;;;;1986:110;;2107:12;2122:28;2139:10;2122:16;:28::i;:::-;2107:43;;2161:14;2178:28;2192:4;2198:1;2201;2204;2178:13;:28::i;:::-;2161:45;;2230:5;2220:15;;:6;:15;;;2216:88;;2279:6;2287:5;2258:35;;;;;;;;;;;;:::i;:::-;;;;;;;;2216:88;2314:31;2323:5;2330:7;2339:5;2314:8;:31::i;:::-;1869:483;;;1680:672;;;;;;;:::o;3846:140:4:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;446:78:23:-;;;;;;;;;;;;;:::o;656:96:11:-;709:7;735:10;728:17;;656:96;:::o;8989:128:4:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;3845:262:17:-;3898:7;3938:11;3921:28;;3929:4;3921:28;;;:63;;;;;3970:14;3953:13;:31;3921:63;3917:184;;;4007:22;4000:29;;;;3917:184;4067:23;:21;:23::i;:::-;4060:30;;3845:262;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;538:107:12:-;598:7;624;:14;632:5;624:14;;;;;;;;;;;;;;;;617:21;;538:107;;;:::o;6021:126:17:-;6067:13;6099:41;6126:13;6099:5;:26;;:41;;;;:::i;:::-;6092:48;;6021:126;:::o;6473:135::-;6522:13;6554:47;6584:16;6554:8;:29;;:47;;;;:::i;:::-;6547:54;;6473:135;:::o;8316:150:22:-;8386:4;8409:50;8414:3;:10;;8450:5;8434:23;;8426:32;;8409:4;:50::i;:::-;8402:57;;8316:150;;;;:::o;759:395:12:-;819:7;1121;:14;1129:5;1121:14;;;;;;;;;;;;;;;;:16;;;;;;;;;;;;1114:23;;759:395;;;:::o;4917:176:17:-;4994:7;5020:66;5053:20;:18;:20::i;:::-;5075:10;5020:32;:66::i;:::-;5013:73;;4917:176;;;:::o;6803:260:16:-;6888:7;6908:17;6927:18;6947:16;6967:25;6978:4;6984:1;6987;6990;6967:10;:25::i;:::-;6907:85;;;;;;7002:28;7014:5;7021:8;7002:11;:28::i;:::-;7047:9;7040:16;;;;;6803:260;;;;;;:::o;9949:432:4:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;3188:422:23:-;3307:14;;;;;;;;;;;3302:110;;3345:24;3364:4;3345:9;:18;;:24;;;;:::i;:::-;3337:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;3302:110;3422:11;3436:10;;;;;;;;;;;:17;;;3454:4;3460:2;3464:5;3436:34;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3422:48;;3480:19;3510:3;3502:5;:11;;;;:::i;:::-;3480:33;;3524;3538:4;3544:7;:5;:7::i;:::-;3553:3;3524:13;:33::i;:::-;3567:36;3581:4;3587:2;3591:11;3567:13;:36::i;:::-;3292:318;;3188:422;;;:::o;4113:179:17:-;4168:7;2079:95;4226:11;4239:14;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;3385:267:13:-;3479:13;1390:66;3537:17;;3527:5;3508:46;3504:142;;3577:15;3586:5;3577:8;:15::i;:::-;3570:22;;;;3504:142;3630:5;3623:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3385:267;;;;;:::o;2241:406:22:-;2304:4;2325:21;2335:3;2340:5;2325:9;:21::i;:::-;2320:321;;2362:3;:11;;2379:5;2362:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2544:3;:11;;:18;;;;2520:3;:14;;:21;2535:5;2520:21;;;;;;;;;;;:42;;;;2583:4;2576:11;;;;2320:321;2625:5;2618:12;;2241:406;;;;;:::o;3353:401:18:-;3446:14;3555:4;3549:11;3585:10;3580:3;3573:23;3632:15;3625:4;3620:3;3616:14;3609:39;3684:10;3677:4;3672:3;3668:14;3661:34;3733:4;3728:3;3718:20;3708:30;;3524:224;3353:401;;;;:::o;5140:1530:16:-;5266:7;5275:12;5289:7;6199:66;6194:1;6186:10;;:79;6182:164;;;6297:1;6301:30;6333:1;6281:54;;;;;;;;6182:164;6440:14;6457:24;6467:4;6473:1;6476;6479;6457:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6440:41;;6513:1;6495:20;;:6;:20;;;6491:113;;6547:1;6551:29;6590:1;6582:10;;6531:62;;;;;;;;;6491:113;6622:6;6630:20;6660:1;6652:10;;6614:49;;;;;;;5140:1530;;;;;;;;;:::o;7196:532::-;7291:20;7282:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7278:444;7327:7;7278:444;7387:29;7378:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7374:348;;7439:23;;;;;;;;;;;;;;7374:348;7492:35;7483:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7479:243;;7586:8;7578:17;;7550:46;;;;;;;;;;;:::i;:::-;;;;;;;;7479:243;7626:30;7617:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7613:109;;7702:8;7679:32;;;;;;;;;;;:::i;:::-;;;;;;;;7613:109;7196:532;;;:::o;8871:165:22:-;8951:4;8974:55;8984:3;:10;;9020:5;9004:23;;8996:32;;8974:9;:55::i;:::-;8967:62;;8871:165;;;;:::o;6271:1107:4:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;2078:405:13:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2162:30;;2280:17;2311:2;2300:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2280:34;;2402:3;2397;2390:16;2442:4;2435;2430:3;2426:14;2419:28;2473:3;2466:10;;;;2078:405;;;:::o;4264:129:22:-;4337:4;4385:1;4360:3;:14;;:21;4375:5;4360:21;;;;;;;;;;;;:26;;4353:33;;4264:129;;;;:::o;2555:245:13:-;2616:7;2635:14;2688:4;2679;2652:33;;:40;2635:57;;2715:2;2706:6;:11;2702:69;;;2740:20;;;;;;;;;;;;;;2702:69;2787:6;2780:13;;;2555:245;;;:::o;7:99:27:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1349:75::-;1382:6;1415:2;1409:9;1399:19;;1349:75;:::o;1430:117::-;1539:1;1536;1529:12;1553:117;1662:1;1659;1652:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:60::-;3474:3;3495:5;3488:12;;3446:60;;;:::o;3512:142::-;3562:9;3595:53;3613:34;3622:24;3640:5;3622:24;:::i;:::-;3613:34;:::i;:::-;3595:53;:::i;:::-;3582:66;;3512:142;;;:::o;3660:126::-;3710:9;3743:37;3774:5;3743:37;:::i;:::-;3730:50;;3660:126;;;:::o;3792:146::-;3862:9;3895:37;3926:5;3895:37;:::i;:::-;3882:50;;3792:146;;;:::o;3944:171::-;4051:57;4102:5;4051:57;:::i;:::-;4046:3;4039:70;3944:171;;:::o;4121:262::-;4234:4;4272:2;4261:9;4257:18;4249:26;;4285:91;4373:1;4362:9;4358:17;4349:6;4285:91;:::i;:::-;4121:262;;;;:::o;4389:118::-;4476:24;4494:5;4476:24;:::i;:::-;4471:3;4464:37;4389:118;;:::o;4513:222::-;4606:4;4644:2;4633:9;4629:18;4621:26;;4657:71;4725:1;4714:9;4710:17;4701:6;4657:71;:::i;:::-;4513:222;;;;:::o;4741:619::-;4818:6;4826;4834;4883:2;4871:9;4862:7;4858:23;4854:32;4851:119;;;4889:79;;:::i;:::-;4851:119;5009:1;5034:53;5079:7;5070:6;5059:9;5055:22;5034:53;:::i;:::-;5024:63;;4980:117;5136:2;5162:53;5207:7;5198:6;5187:9;5183:22;5162:53;:::i;:::-;5152:63;;5107:118;5264:2;5290:53;5335:7;5326:6;5315:9;5311:22;5290:53;:::i;:::-;5280:63;;5235:118;4741:619;;;;;:::o;5366:86::-;5401:7;5441:4;5434:5;5430:16;5419:27;;5366:86;;;:::o;5458:112::-;5541:22;5557:5;5541:22;:::i;:::-;5536:3;5529:35;5458:112;;:::o;5576:214::-;5665:4;5703:2;5692:9;5688:18;5680:26;;5716:67;5780:1;5769:9;5765:17;5756:6;5716:67;:::i;:::-;5576:214;;;;:::o;5796:77::-;5833:7;5862:5;5851:16;;5796:77;;;:::o;5879:118::-;5966:24;5984:5;5966:24;:::i;:::-;5961:3;5954:37;5879:118;;:::o;6003:222::-;6096:4;6134:2;6123:9;6119:18;6111:26;;6147:71;6215:1;6204:9;6200:17;6191:6;6147:71;:::i;:::-;6003:222;;;;:::o;6231:329::-;6290:6;6339:2;6327:9;6318:7;6314:23;6310:32;6307:119;;;6345:79;;:::i;:::-;6307:119;6465:1;6490:53;6535:7;6526:6;6515:9;6511:22;6490:53;:::i;:::-;6480:63;;6436:117;6231:329;;;;:::o;6566:118::-;6653:24;6671:5;6653:24;:::i;:::-;6648:3;6641:37;6566:118;;:::o;6690:222::-;6783:4;6821:2;6810:9;6806:18;6798:26;;6834:71;6902:1;6891:9;6887:17;6878:6;6834:71;:::i;:::-;6690:222;;;;:::o;6918:149::-;6954:7;6994:66;6987:5;6983:78;6972:89;;6918:149;;;:::o;7073:115::-;7158:23;7175:5;7158:23;:::i;:::-;7153:3;7146:36;7073:115;;:::o;7194:114::-;7261:6;7295:5;7289:12;7279:22;;7194:114;;;:::o;7314:184::-;7413:11;7447:6;7442:3;7435:19;7487:4;7482:3;7478:14;7463:29;;7314:184;;;;:::o;7504:132::-;7571:4;7594:3;7586:11;;7624:4;7619:3;7615:14;7607:22;;7504:132;;;:::o;7642:108::-;7719:24;7737:5;7719:24;:::i;:::-;7714:3;7707:37;7642:108;;:::o;7756:179::-;7825:10;7846:46;7888:3;7880:6;7846:46;:::i;:::-;7924:4;7919:3;7915:14;7901:28;;7756:179;;;;:::o;7941:113::-;8011:4;8043;8038:3;8034:14;8026:22;;7941:113;;;:::o;8090:732::-;8209:3;8238:54;8286:5;8238:54;:::i;:::-;8308:86;8387:6;8382:3;8308:86;:::i;:::-;8301:93;;8418:56;8468:5;8418:56;:::i;:::-;8497:7;8528:1;8513:284;8538:6;8535:1;8532:13;8513:284;;;8614:6;8608:13;8641:63;8700:3;8685:13;8641:63;:::i;:::-;8634:70;;8727:60;8780:6;8727:60;:::i;:::-;8717:70;;8573:224;8560:1;8557;8553:9;8548:14;;8513:284;;;8517:14;8813:3;8806:10;;8214:608;;;8090:732;;;;:::o;8828:1215::-;9177:4;9215:3;9204:9;9200:19;9192:27;;9229:69;9295:1;9284:9;9280:17;9271:6;9229:69;:::i;:::-;9345:9;9339:4;9335:20;9330:2;9319:9;9315:18;9308:48;9373:78;9446:4;9437:6;9373:78;:::i;:::-;9365:86;;9498:9;9492:4;9488:20;9483:2;9472:9;9468:18;9461:48;9526:78;9599:4;9590:6;9526:78;:::i;:::-;9518:86;;9614:72;9682:2;9671:9;9667:18;9658:6;9614:72;:::i;:::-;9696:73;9764:3;9753:9;9749:19;9740:6;9696:73;:::i;:::-;9779;9847:3;9836:9;9832:19;9823:6;9779:73;:::i;:::-;9900:9;9894:4;9890:20;9884:3;9873:9;9869:19;9862:49;9928:108;10031:4;10022:6;9928:108;:::i;:::-;9920:116;;8828:1215;;;;;;;;;;:::o;10049:117::-;10158:1;10155;10148:12;10172:117;10281:1;10278;10271:12;10295:180;10343:77;10340:1;10333:88;10440:4;10437:1;10430:15;10464:4;10461:1;10454:15;10481:281;10564:27;10586:4;10564:27;:::i;:::-;10556:6;10552:40;10694:6;10682:10;10679:22;10658:18;10646:10;10643:34;10640:62;10637:88;;;10705:18;;:::i;:::-;10637:88;10745:10;10741:2;10734:22;10524:238;10481:281;;:::o;10768:129::-;10802:6;10829:20;;:::i;:::-;10819:30;;10858:33;10886:4;10878:6;10858:33;:::i;:::-;10768:129;;;:::o;10903:308::-;10965:4;11055:18;11047:6;11044:30;11041:56;;;11077:18;;:::i;:::-;11041:56;11115:29;11137:6;11115:29;:::i;:::-;11107:37;;11199:4;11193;11189:15;11181:23;;10903:308;;;:::o;11217:146::-;11314:6;11309:3;11304;11291:30;11355:1;11346:6;11341:3;11337:16;11330:27;11217:146;;;:::o;11369:425::-;11447:5;11472:66;11488:49;11530:6;11488:49;:::i;:::-;11472:66;:::i;:::-;11463:75;;11561:6;11554:5;11547:21;11599:4;11592:5;11588:16;11637:3;11628:6;11623:3;11619:16;11616:25;11613:112;;;11644:79;;:::i;:::-;11613:112;11734:54;11781:6;11776:3;11771;11734:54;:::i;:::-;11453:341;11369:425;;;;;:::o;11814:340::-;11870:5;11919:3;11912:4;11904:6;11900:17;11896:27;11886:122;;11927:79;;:::i;:::-;11886:122;12044:6;12031:20;12069:79;12144:3;12136:6;12129:4;12121:6;12117:17;12069:79;:::i;:::-;12060:88;;11876:278;11814:340;;;;:::o;12160:654::-;12238:6;12246;12295:2;12283:9;12274:7;12270:23;12266:32;12263:119;;;12301:79;;:::i;:::-;12263:119;12421:1;12446:53;12491:7;12482:6;12471:9;12467:22;12446:53;:::i;:::-;12436:63;;12392:117;12576:2;12565:9;12561:18;12548:32;12607:18;12599:6;12596:30;12593:117;;;12629:79;;:::i;:::-;12593:117;12734:63;12789:7;12780:6;12769:9;12765:22;12734:63;:::i;:::-;12724:73;;12519:288;12160:654;;;;;:::o;12820:117::-;12929:1;12926;12919:12;12943:117;13052:1;13049;13042:12;13083:568;13156:8;13166:6;13216:3;13209:4;13201:6;13197:17;13193:27;13183:122;;13224:79;;:::i;:::-;13183:122;13337:6;13324:20;13314:30;;13367:18;13359:6;13356:30;13353:117;;;13389:79;;:::i;:::-;13353:117;13503:4;13495:6;13491:17;13479:29;;13557:3;13549:4;13541:6;13537:17;13527:8;13523:32;13520:41;13517:128;;;13564:79;;:::i;:::-;13517:128;13083:568;;;;;:::o;13657:559::-;13743:6;13751;13800:2;13788:9;13779:7;13775:23;13771:32;13768:119;;;13806:79;;:::i;:::-;13768:119;13954:1;13943:9;13939:17;13926:31;13984:18;13976:6;13973:30;13970:117;;;14006:79;;:::i;:::-;13970:117;14119:80;14191:7;14182:6;14171:9;14167:22;14119:80;:::i;:::-;14101:98;;;;13897:312;13657:559;;;;;:::o;14222:118::-;14293:22;14309:5;14293:22;:::i;:::-;14286:5;14283:33;14273:61;;14330:1;14327;14320:12;14273:61;14222:118;:::o;14346:135::-;14390:5;14428:6;14415:20;14406:29;;14444:31;14469:5;14444:31;:::i;:::-;14346:135;;;;:::o;14487:122::-;14560:24;14578:5;14560:24;:::i;:::-;14553:5;14550:35;14540:63;;14599:1;14596;14589:12;14540:63;14487:122;:::o;14615:139::-;14661:5;14699:6;14686:20;14677:29;;14715:33;14742:5;14715:33;:::i;:::-;14615:139;;;;:::o;14760:1199::-;14871:6;14879;14887;14895;14903;14911;14919;14968:3;14956:9;14947:7;14943:23;14939:33;14936:120;;;14975:79;;:::i;:::-;14936:120;15095:1;15120:53;15165:7;15156:6;15145:9;15141:22;15120:53;:::i;:::-;15110:63;;15066:117;15222:2;15248:53;15293:7;15284:6;15273:9;15269:22;15248:53;:::i;:::-;15238:63;;15193:118;15350:2;15376:53;15421:7;15412:6;15401:9;15397:22;15376:53;:::i;:::-;15366:63;;15321:118;15478:2;15504:53;15549:7;15540:6;15529:9;15525:22;15504:53;:::i;:::-;15494:63;;15449:118;15606:3;15633:51;15676:7;15667:6;15656:9;15652:22;15633:51;:::i;:::-;15623:61;;15577:117;15733:3;15760:53;15805:7;15796:6;15785:9;15781:22;15760:53;:::i;:::-;15750:63;;15704:119;15862:3;15889:53;15934:7;15925:6;15914:9;15910:22;15889:53;:::i;:::-;15879:63;;15833:119;14760:1199;;;;;;;;;;:::o;15965:474::-;16033:6;16041;16090:2;16078:9;16069:7;16065:23;16061:32;16058:119;;;16096:79;;:::i;:::-;16058:119;16216:1;16241:53;16286:7;16277:6;16266:9;16262:22;16241:53;:::i;:::-;16231:63;;16187:117;16343:2;16369:53;16414:7;16405:6;16394:9;16390:22;16369:53;:::i;:::-;16359:63;;16314:118;15965:474;;;;;:::o;16445:180::-;16493:77;16490:1;16483:88;16590:4;16587:1;16580:15;16614:4;16611:1;16604:15;16631:320;16675:6;16712:1;16706:4;16702:12;16692:22;;16759:1;16753:4;16749:12;16780:18;16770:81;;16836:4;16828:6;16824:17;16814:27;;16770:81;16898:2;16890:6;16887:14;16867:18;16864:38;16861:84;;16917:18;;:::i;:::-;16861:84;16682:269;16631:320;;;:::o;16957:332::-;17078:4;17116:2;17105:9;17101:18;17093:26;;17129:71;17197:1;17186:9;17182:17;17173:6;17129:71;:::i;:::-;17210:72;17278:2;17267:9;17263:18;17254:6;17210:72;:::i;:::-;16957:332;;;;;:::o;17295:180::-;17343:77;17340:1;17333:88;17440:4;17437:1;17430:15;17464:4;17461:1;17454:15;17481:180;17529:77;17526:1;17519:88;17626:4;17623:1;17616:15;17650:4;17647:1;17640:15;17667:191;17707:3;17726:20;17744:1;17726:20;:::i;:::-;17721:25;;17760:20;17778:1;17760:20;:::i;:::-;17755:25;;17803:1;17800;17796:9;17789:16;;17824:3;17821:1;17818:10;17815:36;;;17831:18;;:::i;:::-;17815:36;17667:191;;;;:::o;17864:410::-;17904:7;17927:20;17945:1;17927:20;:::i;:::-;17922:25;;17961:20;17979:1;17961:20;:::i;:::-;17956:25;;18016:1;18013;18009:9;18038:30;18056:11;18038:30;:::i;:::-;18027:41;;18217:1;18208:7;18204:15;18201:1;18198:22;18178:1;18171:9;18151:83;18128:139;;18247:18;;:::i;:::-;18128:139;17912:362;17864:410;;;;:::o;18280:220::-;18420:34;18416:1;18408:6;18404:14;18397:58;18489:3;18484:2;18476:6;18472:15;18465:28;18280:220;:::o;18506:366::-;18648:3;18669:67;18733:2;18728:3;18669:67;:::i;:::-;18662:74;;18745:93;18834:3;18745:93;:::i;:::-;18863:2;18858:3;18854:12;18847:19;;18506:366;;;:::o;18878:419::-;19044:4;19082:2;19071:9;19067:18;19059:26;;19131:9;19125:4;19121:20;19117:1;19106:9;19102:17;19095:47;19159:131;19285:4;19159:131;:::i;:::-;19151:139;;18878:419;;;:::o;19303:148::-;19405:11;19442:3;19427:18;;19303:148;;;;:::o;19457:390::-;19563:3;19591:39;19624:5;19591:39;:::i;:::-;19646:89;19728:6;19723:3;19646:89;:::i;:::-;19639:96;;19744:65;19802:6;19797:3;19790:4;19783:5;19779:16;19744:65;:::i;:::-;19834:6;19829:3;19825:16;19818:23;;19567:280;19457:390;;;;:::o;19853:435::-;20033:3;20055:95;20146:3;20137:6;20055:95;:::i;:::-;20048:102;;20167:95;20258:3;20249:6;20167:95;:::i;:::-;20160:102;;20279:3;20272:10;;19853:435;;;;;:::o;20294:178::-;20434:30;20430:1;20422:6;20418:14;20411:54;20294:178;:::o;20478:366::-;20620:3;20641:67;20705:2;20700:3;20641:67;:::i;:::-;20634:74;;20717:93;20806:3;20717:93;:::i;:::-;20835:2;20830:3;20826:12;20819:19;;20478:366;;;:::o;20850:419::-;21016:4;21054:2;21043:9;21039:18;21031:26;;21103:9;21097:4;21093:20;21089:1;21078:9;21074:17;21067:47;21131:131;21257:4;21131:131;:::i;:::-;21123:139;;20850:419;;;:::o;21275:173::-;21415:25;21411:1;21403:6;21399:14;21392:49;21275:173;:::o;21454:366::-;21596:3;21617:67;21681:2;21676:3;21617:67;:::i;:::-;21610:74;;21693:93;21782:3;21693:93;:::i;:::-;21811:2;21806:3;21802:12;21795:19;;21454:366;;;:::o;21826:419::-;21992:4;22030:2;22019:9;22015:18;22007:26;;22079:9;22073:4;22069:20;22065:1;22054:9;22050:17;22043:47;22107:131;22233:4;22107:131;:::i;:::-;22099:139;;21826:419;;;:::o;22251:775::-;22484:4;22522:3;22511:9;22507:19;22499:27;;22536:71;22604:1;22593:9;22589:17;22580:6;22536:71;:::i;:::-;22617:72;22685:2;22674:9;22670:18;22661:6;22617:72;:::i;:::-;22699;22767:2;22756:9;22752:18;22743:6;22699:72;:::i;:::-;22781;22849:2;22838:9;22834:18;22825:6;22781:72;:::i;:::-;22863:73;22931:3;22920:9;22916:19;22907:6;22863:73;:::i;:::-;22946;23014:3;23003:9;22999:19;22990:6;22946:73;:::i;:::-;22251:775;;;;;;;;;:::o;23032:442::-;23181:4;23219:2;23208:9;23204:18;23196:26;;23232:71;23300:1;23289:9;23285:17;23276:6;23232:71;:::i;:::-;23313:72;23381:2;23370:9;23366:18;23357:6;23313:72;:::i;:::-;23395;23463:2;23452:9;23448:18;23439:6;23395:72;:::i;:::-;23032:442;;;;;;:::o;23480:177::-;23620:29;23616:1;23608:6;23604:14;23597:53;23480:177;:::o;23663:366::-;23805:3;23826:67;23890:2;23885:3;23826:67;:::i;:::-;23819:74;;23902:93;23991:3;23902:93;:::i;:::-;24020:2;24015:3;24011:12;24004:19;;23663:366;;;:::o;24035:419::-;24201:4;24239:2;24228:9;24224:18;24216:26;;24288:9;24282:4;24278:20;24274:1;24263:9;24259:17;24252:47;24316:131;24442:4;24316:131;:::i;:::-;24308:139;;24035:419;;;:::o;24460:442::-;24609:4;24647:2;24636:9;24632:18;24624:26;;24660:71;24728:1;24717:9;24713:17;24704:6;24660:71;:::i;:::-;24741:72;24809:2;24798:9;24794:18;24785:6;24741:72;:::i;:::-;24823;24891:2;24880:9;24876:18;24867:6;24823:72;:::i;:::-;24460:442;;;;;;:::o;24908:143::-;24965:5;24996:6;24990:13;24981:22;;25012:33;25039:5;25012:33;:::i;:::-;24908:143;;;;:::o;25057:351::-;25127:6;25176:2;25164:9;25155:7;25151:23;25147:32;25144:119;;;25182:79;;:::i;:::-;25144:119;25302:1;25327:64;25383:7;25374:6;25363:9;25359:22;25327:64;:::i;:::-;25317:74;;25273:128;25057:351;;;;:::o;25414:194::-;25454:4;25474:20;25492:1;25474:20;:::i;:::-;25469:25;;25508:20;25526:1;25508:20;:::i;:::-;25503:25;;25552:1;25549;25545:9;25537:17;;25576:1;25570:4;25567:11;25564:37;;;25581:18;;:::i;:::-;25564:37;25414:194;;;;:::o;25614:664::-;25819:4;25857:3;25846:9;25842:19;25834:27;;25871:71;25939:1;25928:9;25924:17;25915:6;25871:71;:::i;:::-;25952:72;26020:2;26009:9;26005:18;25996:6;25952:72;:::i;:::-;26034;26102:2;26091:9;26087:18;26078:6;26034:72;:::i;:::-;26116;26184:2;26173:9;26169:18;26160:6;26116:72;:::i;:::-;26198:73;26266:3;26255:9;26251:19;26242:6;26198:73;:::i;:::-;25614:664;;;;;;;;:::o;26284:545::-;26457:4;26495:3;26484:9;26480:19;26472:27;;26509:71;26577:1;26566:9;26562:17;26553:6;26509:71;:::i;:::-;26590:68;26654:2;26643:9;26639:18;26630:6;26590:68;:::i;:::-;26668:72;26736:2;26725:9;26721:18;26712:6;26668:72;:::i;:::-;26750;26818:2;26807:9;26803:18;26794:6;26750:72;:::i;:::-;26284:545;;;;;;;:::o;26835:180::-;26883:77;26880:1;26873:88;26980:4;26977:1;26970:15;27004:4;27001:1;26994:15"},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","addCanTrade(address[])":"ca40f1c4","addressToString(address)":"5e57966d","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","concatenateAddressWithString(address,string)":"9b75679c","decimals()":"313ce567","eip712Domain()":"84b0196e","enableTrading()":"8a8c523c","initialLaunch()":"bbaa49da","investors()":"8ac27f5f","name()":"06fdde03","nonces(address)":"7ecebe00","owner()":"8da5cb5b","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","preSale()":"5a7adf7f","preservationProjects()":"7edd9e5e","renounceOwnership()":"715018a6","setTaxHandler(address)":"488d4a51","symbol()":"95d89b41","taxHandler()":"12280ba8","teamAndFounders()":"c519099d","thirdPartyServices()":"fca6172f","totalSupply()":"18160ddd","tradingEnabled()":"4ada218b","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"taxHandlerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"teamAndFoundersVesting\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"TaxHandlerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"TradingEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"allowedAddresses\",\"type\":\"address[]\"}],\"name\":\"addCanTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"addressToString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_str\",\"type\":\"string\"}],\"name\":\"concatenateAddressWithString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialLaunch\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"investors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"preSale\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"preservationProjects\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"taxHandlerAddress\",\"type\":\"address\"}],\"name\":\"setTaxHandler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxHandler\",\"outputs\":[{\"internalType\":\"contract ITaxHandler\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamAndFounders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"thirdPartyServices\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"_canTrade\":{\"details\":\"The set of addresses exempt from tax.\"}},\"version\":1},\"userdoc\":{\"events\":{\"TaxHandlerChanged(address,address)\":{\"notice\":\"Emitted when the tax handler contract is changed.\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AraraCoin.sol\":\"AraraCoin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]},\"contracts/AraraCoin.sol\":{\"keccak256\":\"0x48b4fc06e108dc05189acf15219fc1e878008b0a676aa00b35186b059ad43124\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3603c5d75d2945297c57fd4337cbc7fcf7cf0fcfccc5c65ee7f8422d83101515\",\"dweb:/ipfs/QmNPVgLuPimE5PsoPRizd67X7eid2fK6WBAiS76EMNmu3K\"]},\"contracts/tax/ITaxHandler.sol\":{\"keccak256\":\"0xfbe50a73a526b7425030b98d2659fd5e5eb4222102f59c5b620d1c77a0178518\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b720ef524c3d25af70f56f19eff096a2142d6d3d606166b326a96f5c0afd49db\",\"dweb:/ipfs/QmWukwdeBzzMRzemBxFc8nK2yZkhjDP8r4b8abGuWuBdF4\"]}},\"version\":1}"}},"contracts/MyVestingWallet.sol":{"MyVestingWallet":{"abi":[{"inputs":[{"internalType":"address","name":"beneficiary","type":"address"},{"internalType":"uint64","name":"startTimestamp","type":"uint64"},{"internalType":"uint64","name":"durationSeconds","type":"uint64"},{"internalType":"uint64","name":"cliffSeconds","type":"uint64"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[{"internalType":"uint64","name":"cliffSeconds","type":"uint64"},{"internalType":"uint64","name":"durationSeconds","type":"uint64"}],"name":"InvalidCliffDuration","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ERC20Released","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"EtherReleased","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"cliff","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"duration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"end","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"releasable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"releasable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"release","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"release","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"released","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"released","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"start","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"timestamp","type":"uint64"}],"name":"vestedAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint64","name":"timestamp","type":"uint64"}],"name":"vestedAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_206":{"entryPoint":null,"id":206,"parameterSlots":3,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_7302":{"entryPoint":null,"id":7302,"parameterSlots":4,"returnSlots":0},"@_7353":{"entryPoint":null,"id":7353,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":467,"id":146,"parameterSlots":1,"returnSlots":0},"@duration_229":{"entryPoint":663,"id":229,"parameterSlots":0,"returnSlots":1},"@start_220":{"entryPoint":778,"id":220,"parameterSlots":0,"returnSlots":1},"@toUint64_5054":{"entryPoint":683,"id":5054,"parameterSlots":1,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":881,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64_fromMemory":{"entryPoint":950,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint64t_uint64t_uint64_fromMemory":{"entryPoint":973,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1087,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_64_by_1_to_t_uint8_fromStack":{"entryPoint":1382,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":1409,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":1133,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1104,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_64_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed":{"entryPoint":1426,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint64_t_uint64__to_t_uint64_t_uint64__fromStack_reversed":{"entryPoint":1150,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"checked_add_t_uint64":{"entryPoint":1242,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":835,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_64_by_1":{"entryPoint":1309,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":803,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1399,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":904,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":1319,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_64_by_1_to_t_uint8":{"entryPoint":1342,"id":null,"parameterSlots":1,"returnSlots":1},"identity":{"entryPoint":1332,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":1195,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":798,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":855,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":924,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:4364:27","nodeType":"YulBlock","src":"0:4364:27","statements":[{"body":{"nativeSrc":"47:35:27","nodeType":"YulBlock","src":"47:35:27","statements":[{"nativeSrc":"57:19:27","nodeType":"YulAssignment","src":"57:19:27","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:27","nodeType":"YulLiteral","src":"73:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:27","nodeType":"YulIdentifier","src":"67:5:27"},"nativeSrc":"67:9:27","nodeType":"YulFunctionCall","src":"67:9:27"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:27","nodeType":"YulIdentifier","src":"57:6:27"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:27","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:27","nodeType":"YulTypedName","src":"40:6:27","type":""}],"src":"7:75:27"},{"body":{"nativeSrc":"177:28:27","nodeType":"YulBlock","src":"177:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:27","nodeType":"YulLiteral","src":"194:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:27","nodeType":"YulLiteral","src":"197:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:27","nodeType":"YulIdentifier","src":"187:6:27"},"nativeSrc":"187:12:27","nodeType":"YulFunctionCall","src":"187:12:27"},"nativeSrc":"187:12:27","nodeType":"YulExpressionStatement","src":"187:12:27"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:27","nodeType":"YulFunctionDefinition","src":"88:117:27"},{"body":{"nativeSrc":"300:28:27","nodeType":"YulBlock","src":"300:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:27","nodeType":"YulLiteral","src":"317:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:27","nodeType":"YulLiteral","src":"320:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:27","nodeType":"YulIdentifier","src":"310:6:27"},"nativeSrc":"310:12:27","nodeType":"YulFunctionCall","src":"310:12:27"},"nativeSrc":"310:12:27","nodeType":"YulExpressionStatement","src":"310:12:27"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:27","nodeType":"YulFunctionDefinition","src":"211:117:27"},{"body":{"nativeSrc":"379:81:27","nodeType":"YulBlock","src":"379:81:27","statements":[{"nativeSrc":"389:65:27","nodeType":"YulAssignment","src":"389:65:27","value":{"arguments":[{"name":"value","nativeSrc":"404:5:27","nodeType":"YulIdentifier","src":"404:5:27"},{"kind":"number","nativeSrc":"411:42:27","nodeType":"YulLiteral","src":"411:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:27","nodeType":"YulIdentifier","src":"400:3:27"},"nativeSrc":"400:54:27","nodeType":"YulFunctionCall","src":"400:54:27"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:27","nodeType":"YulIdentifier","src":"389:7:27"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:27","nodeType":"YulTypedName","src":"361:5:27","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:27","nodeType":"YulTypedName","src":"371:7:27","type":""}],"src":"334:126:27"},{"body":{"nativeSrc":"511:51:27","nodeType":"YulBlock","src":"511:51:27","statements":[{"nativeSrc":"521:35:27","nodeType":"YulAssignment","src":"521:35:27","value":{"arguments":[{"name":"value","nativeSrc":"550:5:27","nodeType":"YulIdentifier","src":"550:5:27"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:27","nodeType":"YulIdentifier","src":"532:17:27"},"nativeSrc":"532:24:27","nodeType":"YulFunctionCall","src":"532:24:27"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:27","nodeType":"YulIdentifier","src":"521:7:27"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:27","nodeType":"YulTypedName","src":"493:5:27","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:27","nodeType":"YulTypedName","src":"503:7:27","type":""}],"src":"466:96:27"},{"body":{"nativeSrc":"611:79:27","nodeType":"YulBlock","src":"611:79:27","statements":[{"body":{"nativeSrc":"668:16:27","nodeType":"YulBlock","src":"668:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:27","nodeType":"YulLiteral","src":"677:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:27","nodeType":"YulLiteral","src":"680:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:27","nodeType":"YulIdentifier","src":"670:6:27"},"nativeSrc":"670:12:27","nodeType":"YulFunctionCall","src":"670:12:27"},"nativeSrc":"670:12:27","nodeType":"YulExpressionStatement","src":"670:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:27","nodeType":"YulIdentifier","src":"634:5:27"},{"arguments":[{"name":"value","nativeSrc":"659:5:27","nodeType":"YulIdentifier","src":"659:5:27"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:27","nodeType":"YulIdentifier","src":"641:17:27"},"nativeSrc":"641:24:27","nodeType":"YulFunctionCall","src":"641:24:27"}],"functionName":{"name":"eq","nativeSrc":"631:2:27","nodeType":"YulIdentifier","src":"631:2:27"},"nativeSrc":"631:35:27","nodeType":"YulFunctionCall","src":"631:35:27"}],"functionName":{"name":"iszero","nativeSrc":"624:6:27","nodeType":"YulIdentifier","src":"624:6:27"},"nativeSrc":"624:43:27","nodeType":"YulFunctionCall","src":"624:43:27"},"nativeSrc":"621:63:27","nodeType":"YulIf","src":"621:63:27"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:27","nodeType":"YulTypedName","src":"604:5:27","type":""}],"src":"568:122:27"},{"body":{"nativeSrc":"759:80:27","nodeType":"YulBlock","src":"759:80:27","statements":[{"nativeSrc":"769:22:27","nodeType":"YulAssignment","src":"769:22:27","value":{"arguments":[{"name":"offset","nativeSrc":"784:6:27","nodeType":"YulIdentifier","src":"784:6:27"}],"functionName":{"name":"mload","nativeSrc":"778:5:27","nodeType":"YulIdentifier","src":"778:5:27"},"nativeSrc":"778:13:27","nodeType":"YulFunctionCall","src":"778:13:27"},"variableNames":[{"name":"value","nativeSrc":"769:5:27","nodeType":"YulIdentifier","src":"769:5:27"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"827:5:27","nodeType":"YulIdentifier","src":"827:5:27"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"800:26:27","nodeType":"YulIdentifier","src":"800:26:27"},"nativeSrc":"800:33:27","nodeType":"YulFunctionCall","src":"800:33:27"},"nativeSrc":"800:33:27","nodeType":"YulExpressionStatement","src":"800:33:27"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"696:143:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"737:6:27","nodeType":"YulTypedName","src":"737:6:27","type":""},{"name":"end","nativeSrc":"745:3:27","nodeType":"YulTypedName","src":"745:3:27","type":""}],"returnVariables":[{"name":"value","nativeSrc":"753:5:27","nodeType":"YulTypedName","src":"753:5:27","type":""}],"src":"696:143:27"},{"body":{"nativeSrc":"889:57:27","nodeType":"YulBlock","src":"889:57:27","statements":[{"nativeSrc":"899:41:27","nodeType":"YulAssignment","src":"899:41:27","value":{"arguments":[{"name":"value","nativeSrc":"914:5:27","nodeType":"YulIdentifier","src":"914:5:27"},{"kind":"number","nativeSrc":"921:18:27","nodeType":"YulLiteral","src":"921:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"910:3:27","nodeType":"YulIdentifier","src":"910:3:27"},"nativeSrc":"910:30:27","nodeType":"YulFunctionCall","src":"910:30:27"},"variableNames":[{"name":"cleaned","nativeSrc":"899:7:27","nodeType":"YulIdentifier","src":"899:7:27"}]}]},"name":"cleanup_t_uint64","nativeSrc":"845:101:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"871:5:27","nodeType":"YulTypedName","src":"871:5:27","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"881:7:27","nodeType":"YulTypedName","src":"881:7:27","type":""}],"src":"845:101:27"},{"body":{"nativeSrc":"994:78:27","nodeType":"YulBlock","src":"994:78:27","statements":[{"body":{"nativeSrc":"1050:16:27","nodeType":"YulBlock","src":"1050:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1059:1:27","nodeType":"YulLiteral","src":"1059:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"1062:1:27","nodeType":"YulLiteral","src":"1062:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1052:6:27","nodeType":"YulIdentifier","src":"1052:6:27"},"nativeSrc":"1052:12:27","nodeType":"YulFunctionCall","src":"1052:12:27"},"nativeSrc":"1052:12:27","nodeType":"YulExpressionStatement","src":"1052:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1017:5:27","nodeType":"YulIdentifier","src":"1017:5:27"},{"arguments":[{"name":"value","nativeSrc":"1041:5:27","nodeType":"YulIdentifier","src":"1041:5:27"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"1024:16:27","nodeType":"YulIdentifier","src":"1024:16:27"},"nativeSrc":"1024:23:27","nodeType":"YulFunctionCall","src":"1024:23:27"}],"functionName":{"name":"eq","nativeSrc":"1014:2:27","nodeType":"YulIdentifier","src":"1014:2:27"},"nativeSrc":"1014:34:27","nodeType":"YulFunctionCall","src":"1014:34:27"}],"functionName":{"name":"iszero","nativeSrc":"1007:6:27","nodeType":"YulIdentifier","src":"1007:6:27"},"nativeSrc":"1007:42:27","nodeType":"YulFunctionCall","src":"1007:42:27"},"nativeSrc":"1004:62:27","nodeType":"YulIf","src":"1004:62:27"}]},"name":"validator_revert_t_uint64","nativeSrc":"952:120:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"987:5:27","nodeType":"YulTypedName","src":"987:5:27","type":""}],"src":"952:120:27"},{"body":{"nativeSrc":"1140:79:27","nodeType":"YulBlock","src":"1140:79:27","statements":[{"nativeSrc":"1150:22:27","nodeType":"YulAssignment","src":"1150:22:27","value":{"arguments":[{"name":"offset","nativeSrc":"1165:6:27","nodeType":"YulIdentifier","src":"1165:6:27"}],"functionName":{"name":"mload","nativeSrc":"1159:5:27","nodeType":"YulIdentifier","src":"1159:5:27"},"nativeSrc":"1159:13:27","nodeType":"YulFunctionCall","src":"1159:13:27"},"variableNames":[{"name":"value","nativeSrc":"1150:5:27","nodeType":"YulIdentifier","src":"1150:5:27"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1207:5:27","nodeType":"YulIdentifier","src":"1207:5:27"}],"functionName":{"name":"validator_revert_t_uint64","nativeSrc":"1181:25:27","nodeType":"YulIdentifier","src":"1181:25:27"},"nativeSrc":"1181:32:27","nodeType":"YulFunctionCall","src":"1181:32:27"},"nativeSrc":"1181:32:27","nodeType":"YulExpressionStatement","src":"1181:32:27"}]},"name":"abi_decode_t_uint64_fromMemory","nativeSrc":"1078:141:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1118:6:27","nodeType":"YulTypedName","src":"1118:6:27","type":""},{"name":"end","nativeSrc":"1126:3:27","nodeType":"YulTypedName","src":"1126:3:27","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1134:5:27","nodeType":"YulTypedName","src":"1134:5:27","type":""}],"src":"1078:141:27"},{"body":{"nativeSrc":"1350:689:27","nodeType":"YulBlock","src":"1350:689:27","statements":[{"body":{"nativeSrc":"1397:83:27","nodeType":"YulBlock","src":"1397:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1399:77:27","nodeType":"YulIdentifier","src":"1399:77:27"},"nativeSrc":"1399:79:27","nodeType":"YulFunctionCall","src":"1399:79:27"},"nativeSrc":"1399:79:27","nodeType":"YulExpressionStatement","src":"1399:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1371:7:27","nodeType":"YulIdentifier","src":"1371:7:27"},{"name":"headStart","nativeSrc":"1380:9:27","nodeType":"YulIdentifier","src":"1380:9:27"}],"functionName":{"name":"sub","nativeSrc":"1367:3:27","nodeType":"YulIdentifier","src":"1367:3:27"},"nativeSrc":"1367:23:27","nodeType":"YulFunctionCall","src":"1367:23:27"},{"kind":"number","nativeSrc":"1392:3:27","nodeType":"YulLiteral","src":"1392:3:27","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"1363:3:27","nodeType":"YulIdentifier","src":"1363:3:27"},"nativeSrc":"1363:33:27","nodeType":"YulFunctionCall","src":"1363:33:27"},"nativeSrc":"1360:120:27","nodeType":"YulIf","src":"1360:120:27"},{"nativeSrc":"1490:128:27","nodeType":"YulBlock","src":"1490:128:27","statements":[{"nativeSrc":"1505:15:27","nodeType":"YulVariableDeclaration","src":"1505:15:27","value":{"kind":"number","nativeSrc":"1519:1:27","nodeType":"YulLiteral","src":"1519:1:27","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1509:6:27","nodeType":"YulTypedName","src":"1509:6:27","type":""}]},{"nativeSrc":"1534:74:27","nodeType":"YulAssignment","src":"1534:74:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1580:9:27","nodeType":"YulIdentifier","src":"1580:9:27"},{"name":"offset","nativeSrc":"1591:6:27","nodeType":"YulIdentifier","src":"1591:6:27"}],"functionName":{"name":"add","nativeSrc":"1576:3:27","nodeType":"YulIdentifier","src":"1576:3:27"},"nativeSrc":"1576:22:27","nodeType":"YulFunctionCall","src":"1576:22:27"},{"name":"dataEnd","nativeSrc":"1600:7:27","nodeType":"YulIdentifier","src":"1600:7:27"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1544:31:27","nodeType":"YulIdentifier","src":"1544:31:27"},"nativeSrc":"1544:64:27","nodeType":"YulFunctionCall","src":"1544:64:27"},"variableNames":[{"name":"value0","nativeSrc":"1534:6:27","nodeType":"YulIdentifier","src":"1534:6:27"}]}]},{"nativeSrc":"1628:128:27","nodeType":"YulBlock","src":"1628:128:27","statements":[{"nativeSrc":"1643:16:27","nodeType":"YulVariableDeclaration","src":"1643:16:27","value":{"kind":"number","nativeSrc":"1657:2:27","nodeType":"YulLiteral","src":"1657:2:27","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1647:6:27","nodeType":"YulTypedName","src":"1647:6:27","type":""}]},{"nativeSrc":"1673:73:27","nodeType":"YulAssignment","src":"1673:73:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1718:9:27","nodeType":"YulIdentifier","src":"1718:9:27"},{"name":"offset","nativeSrc":"1729:6:27","nodeType":"YulIdentifier","src":"1729:6:27"}],"functionName":{"name":"add","nativeSrc":"1714:3:27","nodeType":"YulIdentifier","src":"1714:3:27"},"nativeSrc":"1714:22:27","nodeType":"YulFunctionCall","src":"1714:22:27"},{"name":"dataEnd","nativeSrc":"1738:7:27","nodeType":"YulIdentifier","src":"1738:7:27"}],"functionName":{"name":"abi_decode_t_uint64_fromMemory","nativeSrc":"1683:30:27","nodeType":"YulIdentifier","src":"1683:30:27"},"nativeSrc":"1683:63:27","nodeType":"YulFunctionCall","src":"1683:63:27"},"variableNames":[{"name":"value1","nativeSrc":"1673:6:27","nodeType":"YulIdentifier","src":"1673:6:27"}]}]},{"nativeSrc":"1766:128:27","nodeType":"YulBlock","src":"1766:128:27","statements":[{"nativeSrc":"1781:16:27","nodeType":"YulVariableDeclaration","src":"1781:16:27","value":{"kind":"number","nativeSrc":"1795:2:27","nodeType":"YulLiteral","src":"1795:2:27","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"1785:6:27","nodeType":"YulTypedName","src":"1785:6:27","type":""}]},{"nativeSrc":"1811:73:27","nodeType":"YulAssignment","src":"1811:73:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1856:9:27","nodeType":"YulIdentifier","src":"1856:9:27"},{"name":"offset","nativeSrc":"1867:6:27","nodeType":"YulIdentifier","src":"1867:6:27"}],"functionName":{"name":"add","nativeSrc":"1852:3:27","nodeType":"YulIdentifier","src":"1852:3:27"},"nativeSrc":"1852:22:27","nodeType":"YulFunctionCall","src":"1852:22:27"},{"name":"dataEnd","nativeSrc":"1876:7:27","nodeType":"YulIdentifier","src":"1876:7:27"}],"functionName":{"name":"abi_decode_t_uint64_fromMemory","nativeSrc":"1821:30:27","nodeType":"YulIdentifier","src":"1821:30:27"},"nativeSrc":"1821:63:27","nodeType":"YulFunctionCall","src":"1821:63:27"},"variableNames":[{"name":"value2","nativeSrc":"1811:6:27","nodeType":"YulIdentifier","src":"1811:6:27"}]}]},{"nativeSrc":"1904:128:27","nodeType":"YulBlock","src":"1904:128:27","statements":[{"nativeSrc":"1919:16:27","nodeType":"YulVariableDeclaration","src":"1919:16:27","value":{"kind":"number","nativeSrc":"1933:2:27","nodeType":"YulLiteral","src":"1933:2:27","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"1923:6:27","nodeType":"YulTypedName","src":"1923:6:27","type":""}]},{"nativeSrc":"1949:73:27","nodeType":"YulAssignment","src":"1949:73:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1994:9:27","nodeType":"YulIdentifier","src":"1994:9:27"},{"name":"offset","nativeSrc":"2005:6:27","nodeType":"YulIdentifier","src":"2005:6:27"}],"functionName":{"name":"add","nativeSrc":"1990:3:27","nodeType":"YulIdentifier","src":"1990:3:27"},"nativeSrc":"1990:22:27","nodeType":"YulFunctionCall","src":"1990:22:27"},{"name":"dataEnd","nativeSrc":"2014:7:27","nodeType":"YulIdentifier","src":"2014:7:27"}],"functionName":{"name":"abi_decode_t_uint64_fromMemory","nativeSrc":"1959:30:27","nodeType":"YulIdentifier","src":"1959:30:27"},"nativeSrc":"1959:63:27","nodeType":"YulFunctionCall","src":"1959:63:27"},"variableNames":[{"name":"value3","nativeSrc":"1949:6:27","nodeType":"YulIdentifier","src":"1949:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint64t_uint64t_uint64_fromMemory","nativeSrc":"1225:814:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1296:9:27","nodeType":"YulTypedName","src":"1296:9:27","type":""},{"name":"dataEnd","nativeSrc":"1307:7:27","nodeType":"YulTypedName","src":"1307:7:27","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1319:6:27","nodeType":"YulTypedName","src":"1319:6:27","type":""},{"name":"value1","nativeSrc":"1327:6:27","nodeType":"YulTypedName","src":"1327:6:27","type":""},{"name":"value2","nativeSrc":"1335:6:27","nodeType":"YulTypedName","src":"1335:6:27","type":""},{"name":"value3","nativeSrc":"1343:6:27","nodeType":"YulTypedName","src":"1343:6:27","type":""}],"src":"1225:814:27"},{"body":{"nativeSrc":"2110:53:27","nodeType":"YulBlock","src":"2110:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2127:3:27","nodeType":"YulIdentifier","src":"2127:3:27"},{"arguments":[{"name":"value","nativeSrc":"2150:5:27","nodeType":"YulIdentifier","src":"2150:5:27"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"2132:17:27","nodeType":"YulIdentifier","src":"2132:17:27"},"nativeSrc":"2132:24:27","nodeType":"YulFunctionCall","src":"2132:24:27"}],"functionName":{"name":"mstore","nativeSrc":"2120:6:27","nodeType":"YulIdentifier","src":"2120:6:27"},"nativeSrc":"2120:37:27","nodeType":"YulFunctionCall","src":"2120:37:27"},"nativeSrc":"2120:37:27","nodeType":"YulExpressionStatement","src":"2120:37:27"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"2045:118:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2098:5:27","nodeType":"YulTypedName","src":"2098:5:27","type":""},{"name":"pos","nativeSrc":"2105:3:27","nodeType":"YulTypedName","src":"2105:3:27","type":""}],"src":"2045:118:27"},{"body":{"nativeSrc":"2267:124:27","nodeType":"YulBlock","src":"2267:124:27","statements":[{"nativeSrc":"2277:26:27","nodeType":"YulAssignment","src":"2277:26:27","value":{"arguments":[{"name":"headStart","nativeSrc":"2289:9:27","nodeType":"YulIdentifier","src":"2289:9:27"},{"kind":"number","nativeSrc":"2300:2:27","nodeType":"YulLiteral","src":"2300:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2285:3:27","nodeType":"YulIdentifier","src":"2285:3:27"},"nativeSrc":"2285:18:27","nodeType":"YulFunctionCall","src":"2285:18:27"},"variableNames":[{"name":"tail","nativeSrc":"2277:4:27","nodeType":"YulIdentifier","src":"2277:4:27"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"2357:6:27","nodeType":"YulIdentifier","src":"2357:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"2370:9:27","nodeType":"YulIdentifier","src":"2370:9:27"},{"kind":"number","nativeSrc":"2381:1:27","nodeType":"YulLiteral","src":"2381:1:27","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2366:3:27","nodeType":"YulIdentifier","src":"2366:3:27"},"nativeSrc":"2366:17:27","nodeType":"YulFunctionCall","src":"2366:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"2313:43:27","nodeType":"YulIdentifier","src":"2313:43:27"},"nativeSrc":"2313:71:27","nodeType":"YulFunctionCall","src":"2313:71:27"},"nativeSrc":"2313:71:27","nodeType":"YulExpressionStatement","src":"2313:71:27"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"2169:222:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2239:9:27","nodeType":"YulTypedName","src":"2239:9:27","type":""},{"name":"value0","nativeSrc":"2251:6:27","nodeType":"YulTypedName","src":"2251:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2262:4:27","nodeType":"YulTypedName","src":"2262:4:27","type":""}],"src":"2169:222:27"},{"body":{"nativeSrc":"2460:52:27","nodeType":"YulBlock","src":"2460:52:27","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2477:3:27","nodeType":"YulIdentifier","src":"2477:3:27"},{"arguments":[{"name":"value","nativeSrc":"2499:5:27","nodeType":"YulIdentifier","src":"2499:5:27"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"2482:16:27","nodeType":"YulIdentifier","src":"2482:16:27"},"nativeSrc":"2482:23:27","nodeType":"YulFunctionCall","src":"2482:23:27"}],"functionName":{"name":"mstore","nativeSrc":"2470:6:27","nodeType":"YulIdentifier","src":"2470:6:27"},"nativeSrc":"2470:36:27","nodeType":"YulFunctionCall","src":"2470:36:27"},"nativeSrc":"2470:36:27","nodeType":"YulExpressionStatement","src":"2470:36:27"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nativeSrc":"2397:115:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2448:5:27","nodeType":"YulTypedName","src":"2448:5:27","type":""},{"name":"pos","nativeSrc":"2455:3:27","nodeType":"YulTypedName","src":"2455:3:27","type":""}],"src":"2397:115:27"},{"body":{"nativeSrc":"2640:202:27","nodeType":"YulBlock","src":"2640:202:27","statements":[{"nativeSrc":"2650:26:27","nodeType":"YulAssignment","src":"2650:26:27","value":{"arguments":[{"name":"headStart","nativeSrc":"2662:9:27","nodeType":"YulIdentifier","src":"2662:9:27"},{"kind":"number","nativeSrc":"2673:2:27","nodeType":"YulLiteral","src":"2673:2:27","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2658:3:27","nodeType":"YulIdentifier","src":"2658:3:27"},"nativeSrc":"2658:18:27","nodeType":"YulFunctionCall","src":"2658:18:27"},"variableNames":[{"name":"tail","nativeSrc":"2650:4:27","nodeType":"YulIdentifier","src":"2650:4:27"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"2728:6:27","nodeType":"YulIdentifier","src":"2728:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"2741:9:27","nodeType":"YulIdentifier","src":"2741:9:27"},{"kind":"number","nativeSrc":"2752:1:27","nodeType":"YulLiteral","src":"2752:1:27","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2737:3:27","nodeType":"YulIdentifier","src":"2737:3:27"},"nativeSrc":"2737:17:27","nodeType":"YulFunctionCall","src":"2737:17:27"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nativeSrc":"2686:41:27","nodeType":"YulIdentifier","src":"2686:41:27"},"nativeSrc":"2686:69:27","nodeType":"YulFunctionCall","src":"2686:69:27"},"nativeSrc":"2686:69:27","nodeType":"YulExpressionStatement","src":"2686:69:27"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"2807:6:27","nodeType":"YulIdentifier","src":"2807:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"2820:9:27","nodeType":"YulIdentifier","src":"2820:9:27"},{"kind":"number","nativeSrc":"2831:2:27","nodeType":"YulLiteral","src":"2831:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2816:3:27","nodeType":"YulIdentifier","src":"2816:3:27"},"nativeSrc":"2816:18:27","nodeType":"YulFunctionCall","src":"2816:18:27"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nativeSrc":"2765:41:27","nodeType":"YulIdentifier","src":"2765:41:27"},"nativeSrc":"2765:70:27","nodeType":"YulFunctionCall","src":"2765:70:27"},"nativeSrc":"2765:70:27","nodeType":"YulExpressionStatement","src":"2765:70:27"}]},"name":"abi_encode_tuple_t_uint64_t_uint64__to_t_uint64_t_uint64__fromStack_reversed","nativeSrc":"2518:324:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2604:9:27","nodeType":"YulTypedName","src":"2604:9:27","type":""},{"name":"value1","nativeSrc":"2616:6:27","nodeType":"YulTypedName","src":"2616:6:27","type":""},{"name":"value0","nativeSrc":"2624:6:27","nodeType":"YulTypedName","src":"2624:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2635:4:27","nodeType":"YulTypedName","src":"2635:4:27","type":""}],"src":"2518:324:27"},{"body":{"nativeSrc":"2876:152:27","nodeType":"YulBlock","src":"2876:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2893:1:27","nodeType":"YulLiteral","src":"2893:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"2896:77:27","nodeType":"YulLiteral","src":"2896:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"2886:6:27","nodeType":"YulIdentifier","src":"2886:6:27"},"nativeSrc":"2886:88:27","nodeType":"YulFunctionCall","src":"2886:88:27"},"nativeSrc":"2886:88:27","nodeType":"YulExpressionStatement","src":"2886:88:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2990:1:27","nodeType":"YulLiteral","src":"2990:1:27","type":"","value":"4"},{"kind":"number","nativeSrc":"2993:4:27","nodeType":"YulLiteral","src":"2993:4:27","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"2983:6:27","nodeType":"YulIdentifier","src":"2983:6:27"},"nativeSrc":"2983:15:27","nodeType":"YulFunctionCall","src":"2983:15:27"},"nativeSrc":"2983:15:27","nodeType":"YulExpressionStatement","src":"2983:15:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3014:1:27","nodeType":"YulLiteral","src":"3014:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"3017:4:27","nodeType":"YulLiteral","src":"3017:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3007:6:27","nodeType":"YulIdentifier","src":"3007:6:27"},"nativeSrc":"3007:15:27","nodeType":"YulFunctionCall","src":"3007:15:27"},"nativeSrc":"3007:15:27","nodeType":"YulExpressionStatement","src":"3007:15:27"}]},"name":"panic_error_0x11","nativeSrc":"2848:180:27","nodeType":"YulFunctionDefinition","src":"2848:180:27"},{"body":{"nativeSrc":"3077:162:27","nodeType":"YulBlock","src":"3077:162:27","statements":[{"nativeSrc":"3087:24:27","nodeType":"YulAssignment","src":"3087:24:27","value":{"arguments":[{"name":"x","nativeSrc":"3109:1:27","nodeType":"YulIdentifier","src":"3109:1:27"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"3092:16:27","nodeType":"YulIdentifier","src":"3092:16:27"},"nativeSrc":"3092:19:27","nodeType":"YulFunctionCall","src":"3092:19:27"},"variableNames":[{"name":"x","nativeSrc":"3087:1:27","nodeType":"YulIdentifier","src":"3087:1:27"}]},{"nativeSrc":"3120:24:27","nodeType":"YulAssignment","src":"3120:24:27","value":{"arguments":[{"name":"y","nativeSrc":"3142:1:27","nodeType":"YulIdentifier","src":"3142:1:27"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"3125:16:27","nodeType":"YulIdentifier","src":"3125:16:27"},"nativeSrc":"3125:19:27","nodeType":"YulFunctionCall","src":"3125:19:27"},"variableNames":[{"name":"y","nativeSrc":"3120:1:27","nodeType":"YulIdentifier","src":"3120:1:27"}]},{"nativeSrc":"3153:16:27","nodeType":"YulAssignment","src":"3153:16:27","value":{"arguments":[{"name":"x","nativeSrc":"3164:1:27","nodeType":"YulIdentifier","src":"3164:1:27"},{"name":"y","nativeSrc":"3167:1:27","nodeType":"YulIdentifier","src":"3167:1:27"}],"functionName":{"name":"add","nativeSrc":"3160:3:27","nodeType":"YulIdentifier","src":"3160:3:27"},"nativeSrc":"3160:9:27","nodeType":"YulFunctionCall","src":"3160:9:27"},"variableNames":[{"name":"sum","nativeSrc":"3153:3:27","nodeType":"YulIdentifier","src":"3153:3:27"}]},{"body":{"nativeSrc":"3210:22:27","nodeType":"YulBlock","src":"3210:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"3212:16:27","nodeType":"YulIdentifier","src":"3212:16:27"},"nativeSrc":"3212:18:27","nodeType":"YulFunctionCall","src":"3212:18:27"},"nativeSrc":"3212:18:27","nodeType":"YulExpressionStatement","src":"3212:18:27"}]},"condition":{"arguments":[{"name":"sum","nativeSrc":"3185:3:27","nodeType":"YulIdentifier","src":"3185:3:27"},{"kind":"number","nativeSrc":"3190:18:27","nodeType":"YulLiteral","src":"3190:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3182:2:27","nodeType":"YulIdentifier","src":"3182:2:27"},"nativeSrc":"3182:27:27","nodeType":"YulFunctionCall","src":"3182:27:27"},"nativeSrc":"3179:53:27","nodeType":"YulIf","src":"3179:53:27"}]},"name":"checked_add_t_uint64","nativeSrc":"3034:205:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"3064:1:27","nodeType":"YulTypedName","src":"3064:1:27","type":""},{"name":"y","nativeSrc":"3067:1:27","nodeType":"YulTypedName","src":"3067:1:27","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"3073:3:27","nodeType":"YulTypedName","src":"3073:3:27","type":""}],"src":"3034:205:27"},{"body":{"nativeSrc":"3299:32:27","nodeType":"YulBlock","src":"3299:32:27","statements":[{"nativeSrc":"3309:16:27","nodeType":"YulAssignment","src":"3309:16:27","value":{"name":"value","nativeSrc":"3320:5:27","nodeType":"YulIdentifier","src":"3320:5:27"},"variableNames":[{"name":"cleaned","nativeSrc":"3309:7:27","nodeType":"YulIdentifier","src":"3309:7:27"}]}]},"name":"cleanup_t_rational_64_by_1","nativeSrc":"3245:86:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3281:5:27","nodeType":"YulTypedName","src":"3281:5:27","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3291:7:27","nodeType":"YulTypedName","src":"3291:7:27","type":""}],"src":"3245:86:27"},{"body":{"nativeSrc":"3380:43:27","nodeType":"YulBlock","src":"3380:43:27","statements":[{"nativeSrc":"3390:27:27","nodeType":"YulAssignment","src":"3390:27:27","value":{"arguments":[{"name":"value","nativeSrc":"3405:5:27","nodeType":"YulIdentifier","src":"3405:5:27"},{"kind":"number","nativeSrc":"3412:4:27","nodeType":"YulLiteral","src":"3412:4:27","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"3401:3:27","nodeType":"YulIdentifier","src":"3401:3:27"},"nativeSrc":"3401:16:27","nodeType":"YulFunctionCall","src":"3401:16:27"},"variableNames":[{"name":"cleaned","nativeSrc":"3390:7:27","nodeType":"YulIdentifier","src":"3390:7:27"}]}]},"name":"cleanup_t_uint8","nativeSrc":"3337:86:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3362:5:27","nodeType":"YulTypedName","src":"3362:5:27","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3372:7:27","nodeType":"YulTypedName","src":"3372:7:27","type":""}],"src":"3337:86:27"},{"body":{"nativeSrc":"3461:28:27","nodeType":"YulBlock","src":"3461:28:27","statements":[{"nativeSrc":"3471:12:27","nodeType":"YulAssignment","src":"3471:12:27","value":{"name":"value","nativeSrc":"3478:5:27","nodeType":"YulIdentifier","src":"3478:5:27"},"variableNames":[{"name":"ret","nativeSrc":"3471:3:27","nodeType":"YulIdentifier","src":"3471:3:27"}]}]},"name":"identity","nativeSrc":"3429:60:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3447:5:27","nodeType":"YulTypedName","src":"3447:5:27","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"3457:3:27","nodeType":"YulTypedName","src":"3457:3:27","type":""}],"src":"3429:60:27"},{"body":{"nativeSrc":"3562:89:27","nodeType":"YulBlock","src":"3562:89:27","statements":[{"nativeSrc":"3572:73:27","nodeType":"YulAssignment","src":"3572:73:27","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3637:5:27","nodeType":"YulIdentifier","src":"3637:5:27"}],"functionName":{"name":"cleanup_t_rational_64_by_1","nativeSrc":"3610:26:27","nodeType":"YulIdentifier","src":"3610:26:27"},"nativeSrc":"3610:33:27","nodeType":"YulFunctionCall","src":"3610:33:27"}],"functionName":{"name":"identity","nativeSrc":"3601:8:27","nodeType":"YulIdentifier","src":"3601:8:27"},"nativeSrc":"3601:43:27","nodeType":"YulFunctionCall","src":"3601:43:27"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"3585:15:27","nodeType":"YulIdentifier","src":"3585:15:27"},"nativeSrc":"3585:60:27","nodeType":"YulFunctionCall","src":"3585:60:27"},"variableNames":[{"name":"converted","nativeSrc":"3572:9:27","nodeType":"YulIdentifier","src":"3572:9:27"}]}]},"name":"convert_t_rational_64_by_1_to_t_uint8","nativeSrc":"3495:156:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3542:5:27","nodeType":"YulTypedName","src":"3542:5:27","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"3552:9:27","nodeType":"YulTypedName","src":"3552:9:27","type":""}],"src":"3495:156:27"},{"body":{"nativeSrc":"3729:73:27","nodeType":"YulBlock","src":"3729:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3746:3:27","nodeType":"YulIdentifier","src":"3746:3:27"},{"arguments":[{"name":"value","nativeSrc":"3789:5:27","nodeType":"YulIdentifier","src":"3789:5:27"}],"functionName":{"name":"convert_t_rational_64_by_1_to_t_uint8","nativeSrc":"3751:37:27","nodeType":"YulIdentifier","src":"3751:37:27"},"nativeSrc":"3751:44:27","nodeType":"YulFunctionCall","src":"3751:44:27"}],"functionName":{"name":"mstore","nativeSrc":"3739:6:27","nodeType":"YulIdentifier","src":"3739:6:27"},"nativeSrc":"3739:57:27","nodeType":"YulFunctionCall","src":"3739:57:27"},"nativeSrc":"3739:57:27","nodeType":"YulExpressionStatement","src":"3739:57:27"}]},"name":"abi_encode_t_rational_64_by_1_to_t_uint8_fromStack","nativeSrc":"3657:145:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3717:5:27","nodeType":"YulTypedName","src":"3717:5:27","type":""},{"name":"pos","nativeSrc":"3724:3:27","nodeType":"YulTypedName","src":"3724:3:27","type":""}],"src":"3657:145:27"},{"body":{"nativeSrc":"3853:32:27","nodeType":"YulBlock","src":"3853:32:27","statements":[{"nativeSrc":"3863:16:27","nodeType":"YulAssignment","src":"3863:16:27","value":{"name":"value","nativeSrc":"3874:5:27","nodeType":"YulIdentifier","src":"3874:5:27"},"variableNames":[{"name":"cleaned","nativeSrc":"3863:7:27","nodeType":"YulIdentifier","src":"3863:7:27"}]}]},"name":"cleanup_t_uint256","nativeSrc":"3808:77:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3835:5:27","nodeType":"YulTypedName","src":"3835:5:27","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3845:7:27","nodeType":"YulTypedName","src":"3845:7:27","type":""}],"src":"3808:77:27"},{"body":{"nativeSrc":"3956:53:27","nodeType":"YulBlock","src":"3956:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3973:3:27","nodeType":"YulIdentifier","src":"3973:3:27"},{"arguments":[{"name":"value","nativeSrc":"3996:5:27","nodeType":"YulIdentifier","src":"3996:5:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3978:17:27","nodeType":"YulIdentifier","src":"3978:17:27"},"nativeSrc":"3978:24:27","nodeType":"YulFunctionCall","src":"3978:24:27"}],"functionName":{"name":"mstore","nativeSrc":"3966:6:27","nodeType":"YulIdentifier","src":"3966:6:27"},"nativeSrc":"3966:37:27","nodeType":"YulFunctionCall","src":"3966:37:27"},"nativeSrc":"3966:37:27","nodeType":"YulExpressionStatement","src":"3966:37:27"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3891:118:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3944:5:27","nodeType":"YulTypedName","src":"3944:5:27","type":""},{"name":"pos","nativeSrc":"3951:3:27","nodeType":"YulTypedName","src":"3951:3:27","type":""}],"src":"3891:118:27"},{"body":{"nativeSrc":"4148:213:27","nodeType":"YulBlock","src":"4148:213:27","statements":[{"nativeSrc":"4158:26:27","nodeType":"YulAssignment","src":"4158:26:27","value":{"arguments":[{"name":"headStart","nativeSrc":"4170:9:27","nodeType":"YulIdentifier","src":"4170:9:27"},{"kind":"number","nativeSrc":"4181:2:27","nodeType":"YulLiteral","src":"4181:2:27","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4166:3:27","nodeType":"YulIdentifier","src":"4166:3:27"},"nativeSrc":"4166:18:27","nodeType":"YulFunctionCall","src":"4166:18:27"},"variableNames":[{"name":"tail","nativeSrc":"4158:4:27","nodeType":"YulIdentifier","src":"4158:4:27"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4245:6:27","nodeType":"YulIdentifier","src":"4245:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"4258:9:27","nodeType":"YulIdentifier","src":"4258:9:27"},{"kind":"number","nativeSrc":"4269:1:27","nodeType":"YulLiteral","src":"4269:1:27","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4254:3:27","nodeType":"YulIdentifier","src":"4254:3:27"},"nativeSrc":"4254:17:27","nodeType":"YulFunctionCall","src":"4254:17:27"}],"functionName":{"name":"abi_encode_t_rational_64_by_1_to_t_uint8_fromStack","nativeSrc":"4194:50:27","nodeType":"YulIdentifier","src":"4194:50:27"},"nativeSrc":"4194:78:27","nodeType":"YulFunctionCall","src":"4194:78:27"},"nativeSrc":"4194:78:27","nodeType":"YulExpressionStatement","src":"4194:78:27"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"4326:6:27","nodeType":"YulIdentifier","src":"4326:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"4339:9:27","nodeType":"YulIdentifier","src":"4339:9:27"},{"kind":"number","nativeSrc":"4350:2:27","nodeType":"YulLiteral","src":"4350:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4335:3:27","nodeType":"YulIdentifier","src":"4335:3:27"},"nativeSrc":"4335:18:27","nodeType":"YulFunctionCall","src":"4335:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"4282:43:27","nodeType":"YulIdentifier","src":"4282:43:27"},"nativeSrc":"4282:72:27","nodeType":"YulFunctionCall","src":"4282:72:27"},"nativeSrc":"4282:72:27","nodeType":"YulExpressionStatement","src":"4282:72:27"}]},"name":"abi_encode_tuple_t_rational_64_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed","nativeSrc":"4015:346:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4112:9:27","nodeType":"YulTypedName","src":"4112:9:27","type":""},{"name":"value1","nativeSrc":"4124:6:27","nodeType":"YulTypedName","src":"4124:6:27","type":""},{"name":"value0","nativeSrc":"4132:6:27","nodeType":"YulTypedName","src":"4132:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4143:4:27","nodeType":"YulTypedName","src":"4143:4:27","type":""}],"src":"4015:346:27"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint64t_uint64t_uint64_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64_t_uint64__to_t_uint64_t_uint64__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint64(x, y) -> sum {\n        x := cleanup_t_uint64(x)\n        y := cleanup_t_uint64(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_rational_64_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_64_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_64_by_1(value)))\n    }\n\n    function abi_encode_t_rational_64_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_64_by_1_to_t_uint8(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_rational_64_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_rational_64_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n","id":27,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1815 CODESIZE SUB DUP1 PUSH3 0x1815 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x3CD JUMP JUMPDEST DUP1 DUP5 DUP5 DUP5 DUP3 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xB1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA8 SWAP2 SWAP1 PUSH3 0x450 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xC2 DUP2 PUSH3 0x1D3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH3 0x10E PUSH3 0x297 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO PUSH3 0x180 JUMPI DUP1 PUSH3 0x141 PUSH3 0x135 PUSH3 0x297 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x2AB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x3BE3EF5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x177 SWAP3 SWAP2 SWAP1 PUSH3 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH3 0x1A1 PUSH3 0x195 PUSH3 0x30A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x2AB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1AD SWAP2 SWAP1 PUSH3 0x4DA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP POP POP PUSH3 0x5BF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH3 0x302 JUMPI PUSH1 0x40 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x2F9 SWAP3 SWAP2 SWAP1 PUSH3 0x592 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x350 DUP3 PUSH3 0x323 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x362 DUP2 PUSH3 0x343 JUMP JUMPDEST DUP2 EQ PUSH3 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x382 DUP2 PUSH3 0x357 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3A7 DUP2 PUSH3 0x388 JUMP JUMPDEST DUP2 EQ PUSH3 0x3B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x3C7 DUP2 PUSH3 0x39C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x3EA JUMPI PUSH3 0x3E9 PUSH3 0x31E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x3FA DUP8 DUP3 DUP9 ADD PUSH3 0x371 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0x40D DUP8 DUP3 DUP9 ADD PUSH3 0x3B6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x420 DUP8 DUP3 DUP9 ADD PUSH3 0x3B6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x433 DUP8 DUP3 DUP9 ADD PUSH3 0x3B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH3 0x44A DUP2 PUSH3 0x343 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x467 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x43F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x478 DUP2 PUSH3 0x388 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x495 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x46D JUMP JUMPDEST PUSH3 0x4A4 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x46D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x4E7 DUP3 PUSH3 0x388 JUMP JUMPDEST SWAP2 POP PUSH3 0x4F4 DUP4 PUSH3 0x388 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x517 JUMPI PUSH3 0x516 PUSH3 0x4AB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x55F PUSH3 0x559 PUSH3 0x553 DUP5 PUSH3 0x51D JUMP JUMPDEST PUSH3 0x534 JUMP JUMPDEST PUSH3 0x527 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x571 DUP2 PUSH3 0x53E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x58C DUP2 PUSH3 0x577 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x5A9 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x566 JUMP JUMPDEST PUSH3 0x5B8 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x581 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x1226 PUSH3 0x5EF PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x3F4 ADD MSTORE PUSH1 0x0 PUSH2 0x3C2 ADD MSTORE PUSH1 0x0 PUSH2 0x6B3 ADD MSTORE PUSH2 0x1226 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEC JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xBE9A6555 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0xEFBE1C1C EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0xFBCCEDAE EQ PUSH2 0x36E JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x96132521 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x9852595C EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0xA3F8EACE EQ PUSH2 0x2B2 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x19165587 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x19165587 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x810EC23B EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x86D1A69F EQ PUSH2 0x208 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0xA17B06B EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x13D033C0 EQ PUSH2 0x160 JUMPI PUSH2 0xF3 JUMP JUMPDEST CALLDATASIZE PUSH2 0xF3 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0xDB7 JUMP JUMPDEST PUSH2 0x399 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14A PUSH2 0x3BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x157 SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x175 PUSH2 0x3F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xE76 JUMP JUMPDEST PUSH2 0x422 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C9 PUSH2 0x4E9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0xEA3 JUMP JUMPDEST PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21D PUSH2 0x59D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH2 0x60D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x636 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26C SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0xE76 JUMP JUMPDEST PUSH2 0x640 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0xE76 JUMP JUMPDEST PUSH2 0x689 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x304 PUSH2 0x6AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x311 SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32F PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33C SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x367 SWAP2 SWAP1 PUSH2 0xE76 JUMP JUMPDEST PUSH2 0x702 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x788 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x390 SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x3B7 PUSH2 0x3A6 PUSH2 0x636 JUMP JUMPDEST SELFBALANCE PUSH2 0x3B1 SWAP2 SWAP1 PUSH2 0xF3C JUMP JUMPDEST DUP4 PUSH2 0x7AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42D DUP3 PUSH2 0x689 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x47E SWAP2 SWAP1 PUSH2 0xF3C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B DUP3 PUSH1 0x40 MLOAD PUSH2 0x4CB SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x4E5 DUP3 PUSH2 0x4DF PUSH2 0x60D JUMP JUMPDEST DUP4 PUSH2 0x7DE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x4F1 PUSH2 0x85D JUMP JUMPDEST PUSH2 0x4FB PUSH1 0x0 PUSH2 0x8E4 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x595 PUSH2 0x50B DUP5 PUSH2 0x640 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x544 SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x561 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x585 SWAP2 SWAP1 PUSH2 0xF9C JUMP JUMPDEST PUSH2 0x58F SWAP2 SWAP1 PUSH2 0xF3C JUMP JUMPDEST DUP4 PUSH2 0x7AA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A7 PUSH2 0x788 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5BB SWAP2 SWAP1 PUSH2 0xF3C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xDA9D4E5F101B8B9B1C5B76D0C5A9F7923571ACFC02376AA076B75A8C080C956B DUP2 PUSH1 0x40 MLOAD PUSH2 0x5F1 SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x60A PUSH2 0x604 PUSH2 0x60D JUMP JUMPDEST DUP3 PUSH2 0x9A8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x694 DUP3 PUSH2 0x640 JUMP JUMPDEST PUSH2 0x69E DUP4 TIMESTAMP PUSH2 0x4FD JUMP JUMPDEST PUSH2 0x6A8 SWAP2 SWAP1 PUSH2 0xFC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6EB PUSH2 0x3BE JUMP JUMPDEST PUSH2 0x6F3 PUSH2 0x6AF JUMP JUMPDEST PUSH2 0x6FD SWAP2 SWAP1 PUSH2 0xF3C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x70A PUSH2 0x85D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x77C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x773 SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x785 DUP2 PUSH2 0x8E4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x792 PUSH2 0x636 JUMP JUMPDEST PUSH2 0x79B TIMESTAMP PUSH2 0x399 JUMP JUMPDEST PUSH2 0x7A5 SWAP2 SWAP1 PUSH2 0xFC9 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B4 PUSH2 0x3F0 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT PUSH2 0x7D3 JUMPI PUSH2 0x7CE DUP4 DUP4 PUSH2 0xA95 JUMP JUMPDEST PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x858 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x811 SWAP3 SWAP2 SWAP1 PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xB1C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x865 PUSH2 0xBB3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x883 PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8E2 JUMPI PUSH2 0x8A6 PUSH2 0xBB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D9 SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x9ED JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E4 SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xA13 SWAP1 PUSH2 0x1057 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA50 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA55 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA90 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA9F PUSH2 0x6AF JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0xAB9 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xB16 JUMP JUMPDEST PUSH2 0xAC1 PUSH2 0x6E1 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT PUSH2 0xAD9 JUMPI DUP3 SWAP1 POP PUSH2 0xB16 JUMP JUMPDEST PUSH2 0xAE1 PUSH2 0x3BE JUMP JUMPDEST PUSH2 0xAE9 PUSH2 0x6AF JUMP JUMPDEST DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0xAFE SWAP2 SWAP1 PUSH2 0xFC9 JUMP JUMPDEST DUP5 PUSH2 0xB09 SWAP2 SWAP1 PUSH2 0x106C JUMP JUMPDEST PUSH2 0xB13 SWAP2 SWAP1 PUSH2 0x10DD JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB47 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBBB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0xB6C JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xB6A SWAP2 SWAP1 PUSH2 0x1146 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xBAE JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xBC9 DUP4 DUP4 PUSH1 0x0 PUSH2 0xBD1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0xC18 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0F SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0xC41 SWAP2 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC7E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC83 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xC93 DUP7 DUP4 DUP4 PUSH2 0xC9E JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0xCB3 JUMPI PUSH2 0xCAE DUP3 PUSH2 0xD2D JUMP JUMPDEST PUSH2 0xD25 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0xCDB JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xD1D JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD14 SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0xD26 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xD40 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD94 DUP2 PUSH2 0xD77 JUMP JUMPDEST DUP2 EQ PUSH2 0xD9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDB1 DUP2 PUSH2 0xD8B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDCD JUMPI PUSH2 0xDCC PUSH2 0xD72 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDDB DUP5 DUP3 DUP6 ADD PUSH2 0xDA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF7 DUP2 PUSH2 0xDE4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE12 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDEE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE43 DUP3 PUSH2 0xE18 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE53 DUP2 PUSH2 0xE38 JUMP JUMPDEST DUP2 EQ PUSH2 0xE5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE70 DUP2 PUSH2 0xE4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE8C JUMPI PUSH2 0xE8B PUSH2 0xD72 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE9A DUP5 DUP3 DUP6 ADD PUSH2 0xE61 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEBA JUMPI PUSH2 0xEB9 PUSH2 0xD72 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEC8 DUP6 DUP3 DUP7 ADD PUSH2 0xE61 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xED9 DUP6 DUP3 DUP7 ADD PUSH2 0xDA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xEEC DUP2 PUSH2 0xE38 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF07 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF47 DUP3 PUSH2 0xDE4 JUMP JUMPDEST SWAP2 POP PUSH2 0xF52 DUP4 PUSH2 0xDE4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xF6A JUMPI PUSH2 0xF69 PUSH2 0xF0D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF79 DUP2 PUSH2 0xDE4 JUMP JUMPDEST DUP2 EQ PUSH2 0xF84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xF96 DUP2 PUSH2 0xF70 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFB2 JUMPI PUSH2 0xFB1 PUSH2 0xD72 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFC0 DUP5 DUP3 DUP6 ADD PUSH2 0xF87 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD4 DUP3 PUSH2 0xDE4 JUMP JUMPDEST SWAP2 POP PUSH2 0xFDF DUP4 PUSH2 0xDE4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xFF7 JUMPI PUSH2 0xFF6 PUSH2 0xF0D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1012 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xEE3 JUMP JUMPDEST PUSH2 0x101F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDEE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1041 PUSH1 0x0 DUP4 PUSH2 0x1026 JUMP JUMPDEST SWAP2 POP PUSH2 0x104C DUP3 PUSH2 0x1031 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1062 DUP3 PUSH2 0x1034 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1077 DUP3 PUSH2 0xDE4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1082 DUP4 PUSH2 0xDE4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1090 DUP2 PUSH2 0xDE4 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x10A7 JUMPI PUSH2 0x10A6 PUSH2 0xF0D JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10E8 DUP3 PUSH2 0xDE4 JUMP JUMPDEST SWAP2 POP PUSH2 0x10F3 DUP4 PUSH2 0xDE4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1103 JUMPI PUSH2 0x1102 PUSH2 0x10AE JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1123 DUP2 PUSH2 0x110E JUMP JUMPDEST DUP2 EQ PUSH2 0x112E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1140 DUP2 PUSH2 0x111A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x115C JUMPI PUSH2 0x115B PUSH2 0xD72 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x116A DUP5 DUP3 DUP6 ADD PUSH2 0x1131 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x119C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11B3 DUP3 PUSH2 0x1173 JUMP JUMPDEST PUSH2 0x11BD DUP2 DUP6 PUSH2 0x1026 JUMP JUMPDEST SWAP4 POP PUSH2 0x11CD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x117E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11E5 DUP3 DUP5 PUSH2 0x11A8 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA 0x28 BALANCE 0xC LT 0xF7 PUSH21 0xF380D3F254EB1D7A6A675E9F6727CC4981D234A026 PUSH8 0x6206F564736F6C63 NUMBER STOP ADDMOD XOR STOP CALLER ","sourceMap":"189:309:24:-:0;;;242:254;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;476:12;403:11;416:14;432:15;2239:11:1;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;2271:14:1::1;2262:23;;;;;;;;::::0;::::1;2307:15;2295:27;;;;;;;;::::0;::::1;2143:186:::0;;;728:10:25;:8;;;:10;;:::i;:::-;713:12;:25;;;709:120;;;782:12;796:21;:10;:8;;;:10;;:::i;:::-;:19;;;:21;;:::i;:::-;761:57;;;;;;;;;;;;:::i;:::-;;;;;;;;709:120;868:12;847:18;:7;:5;;;:7;;:::i;:::-;:16;;;:18;;:::i;:::-;:33;;;;:::i;:::-;838:42;;;;;;;;;;666:221;242:254:24;;;;189:309;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2662:91:1:-;2711:7;2737:9;;2730:16;;;;2662:91;:::o;13291:213:20:-;13347:6;13377:16;13369:24;;:5;:24;13365:103;;;13447:2;13451:5;13416:41;;;;;;;;;;;;:::i;:::-;;;;;;;;13365:103;13491:5;13477:20;;13291:213;;;:::o;2510:85:1:-;2556:7;2582:6;;2575:13;;;;2510:85;:::o;88:117:27:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:101::-;881:7;921:18;914:5;910:30;899:41;;845:101;;;:::o;952:120::-;1024:23;1041:5;1024:23;:::i;:::-;1017:5;1014:34;1004:62;;1062:1;1059;1052:12;1004:62;952:120;:::o;1078:141::-;1134:5;1165:6;1159:13;1150:22;;1181:32;1207:5;1181:32;:::i;:::-;1078:141;;;;:::o;1225:814::-;1319:6;1327;1335;1343;1392:3;1380:9;1371:7;1367:23;1363:33;1360:120;;;1399:79;;:::i;:::-;1360:120;1519:1;1544:64;1600:7;1591:6;1580:9;1576:22;1544:64;:::i;:::-;1534:74;;1490:128;1657:2;1683:63;1738:7;1729:6;1718:9;1714:22;1683:63;:::i;:::-;1673:73;;1628:128;1795:2;1821:63;1876:7;1867:6;1856:9;1852:22;1821:63;:::i;:::-;1811:73;;1766:128;1933:2;1959:63;2014:7;2005:6;1994:9;1990:22;1959:63;:::i;:::-;1949:73;;1904:128;1225:814;;;;;;;:::o;2045:118::-;2132:24;2150:5;2132:24;:::i;:::-;2127:3;2120:37;2045:118;;:::o;2169:222::-;2262:4;2300:2;2289:9;2285:18;2277:26;;2313:71;2381:1;2370:9;2366:17;2357:6;2313:71;:::i;:::-;2169:222;;;;:::o;2397:115::-;2482:23;2499:5;2482:23;:::i;:::-;2477:3;2470:36;2397:115;;:::o;2518:324::-;2635:4;2673:2;2662:9;2658:18;2650:26;;2686:69;2752:1;2741:9;2737:17;2728:6;2686:69;:::i;:::-;2765:70;2831:2;2820:9;2816:18;2807:6;2765:70;:::i;:::-;2518:324;;;;;:::o;2848:180::-;2896:77;2893:1;2886:88;2993:4;2990:1;2983:15;3017:4;3014:1;3007:15;3034:205;3073:3;3092:19;3109:1;3092:19;:::i;:::-;3087:24;;3125:19;3142:1;3125:19;:::i;:::-;3120:24;;3167:1;3164;3160:9;3153:16;;3190:18;3185:3;3182:27;3179:53;;;3212:18;;:::i;:::-;3179:53;3034:205;;;;:::o;3245:86::-;3291:7;3320:5;3309:16;;3245:86;;;:::o;3337:::-;3372:7;3412:4;3405:5;3401:16;3390:27;;3337:86;;;:::o;3429:60::-;3457:3;3478:5;3471:12;;3429:60;;;:::o;3495:156::-;3552:9;3585:60;3601:43;3610:33;3637:5;3610:33;:::i;:::-;3601:43;:::i;:::-;3585:60;:::i;:::-;3572:73;;3495:156;;;:::o;3657:145::-;3751:44;3789:5;3751:44;:::i;:::-;3746:3;3739:57;3657:145;;:::o;3808:77::-;3845:7;3874:5;3863:16;;3808:77;;;:::o;3891:118::-;3978:24;3996:5;3978:24;:::i;:::-;3973:3;3966:37;3891:118;;:::o;4015:346::-;4143:4;4181:2;4170:9;4166:18;4158:26;;4194:78;4269:1;4258:9;4254:17;4245:6;4194:78;:::i;:::-;4282:72;4350:2;4339:9;4335:18;4326:6;4282:72;:::i;:::-;4015:346;;;;;:::o;189:309:24:-;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_211":{"entryPoint":null,"id":211,"parameterSlots":0,"returnSlots":0},"@_callOptionalReturn_1669":{"entryPoint":2844,"id":1669,"parameterSlots":2,"returnSlots":0},"@_checkOwner_84":{"entryPoint":2141,"id":84,"parameterSlots":0,"returnSlots":0},"@_msgSender_1984":{"entryPoint":2995,"id":1984,"parameterSlots":0,"returnSlots":1},"@_revert_1971":{"entryPoint":3373,"id":1971,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":2276,"id":146,"parameterSlots":1,"returnSlots":0},"@_vestingSchedule_457":{"entryPoint":2709,"id":457,"parameterSlots":2,"returnSlots":1},"@_vestingSchedule_7386":{"entryPoint":1962,"id":7386,"parameterSlots":2,"returnSlots":1},"@cliff_7362":{"entryPoint":1008,"id":7362,"parameterSlots":0,"returnSlots":1},"@duration_229":{"entryPoint":958,"id":229,"parameterSlots":0,"returnSlots":1},"@end_242":{"entryPoint":1761,"id":242,"parameterSlots":0,"returnSlots":1},"@functionCallWithValue_1839":{"entryPoint":3025,"id":1839,"parameterSlots":3,"returnSlots":1},"@functionCall_1793":{"entryPoint":3003,"id":1793,"parameterSlots":2,"returnSlots":1},"@owner_67":{"entryPoint":1549,"id":67,"parameterSlots":0,"returnSlots":1},"@releasable_282":{"entryPoint":1928,"id":282,"parameterSlots":0,"returnSlots":1},"@releasable_304":{"entryPoint":1673,"id":304,"parameterSlots":1,"returnSlots":1},"@release_333":{"entryPoint":1437,"id":333,"parameterSlots":0,"returnSlots":0},"@release_368":{"entryPoint":1058,"id":368,"parameterSlots":1,"returnSlots":0},"@released_251":{"entryPoint":1590,"id":251,"parameterSlots":0,"returnSlots":1},"@released_264":{"entryPoint":1600,"id":264,"parameterSlots":1,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":1257,"id":98,"parameterSlots":0,"returnSlots":0},"@safeTransfer_1479":{"entryPoint":2014,"id":1479,"parameterSlots":3,"returnSlots":0},"@sendValue_1776":{"entryPoint":2472,"id":1776,"parameterSlots":2,"returnSlots":0},"@start_220":{"entryPoint":1711,"id":220,"parameterSlots":0,"returnSlots":1},"@transferOwnership_126":{"entryPoint":1794,"id":126,"parameterSlots":1,"returnSlots":0},"@verifyCallResultFromTarget_1931":{"entryPoint":3230,"id":1931,"parameterSlots":3,"returnSlots":1},"@vestedAmount_389":{"entryPoint":921,"id":389,"parameterSlots":1,"returnSlots":1},"@vestedAmount_417":{"entryPoint":1277,"id":417,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":3681,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":4401,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":3975,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64":{"entryPoint":3490,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3702,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint64":{"entryPoint":3747,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":4422,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":3996,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint64":{"entryPoint":3511,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3811,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4520,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4148,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3566,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":4569,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":4183,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3826,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":4093,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3581,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":4467,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4134,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3900,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":4317,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":4204,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":4041,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3640,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":4366,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3608,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3556,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":3447,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":4478,"id":null,"parameterSlots":3,"returnSlots":0},"panic_error_0x11":{"entryPoint":3853,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":4270,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3442,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":4145,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3658,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":4378,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3952,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":3467,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:8294:27","nodeType":"YulBlock","src":"0:8294:27","statements":[{"body":{"nativeSrc":"47:35:27","nodeType":"YulBlock","src":"47:35:27","statements":[{"nativeSrc":"57:19:27","nodeType":"YulAssignment","src":"57:19:27","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:27","nodeType":"YulLiteral","src":"73:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:27","nodeType":"YulIdentifier","src":"67:5:27"},"nativeSrc":"67:9:27","nodeType":"YulFunctionCall","src":"67:9:27"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:27","nodeType":"YulIdentifier","src":"57:6:27"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:27","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:27","nodeType":"YulTypedName","src":"40:6:27","type":""}],"src":"7:75:27"},{"body":{"nativeSrc":"177:28:27","nodeType":"YulBlock","src":"177:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:27","nodeType":"YulLiteral","src":"194:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:27","nodeType":"YulLiteral","src":"197:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:27","nodeType":"YulIdentifier","src":"187:6:27"},"nativeSrc":"187:12:27","nodeType":"YulFunctionCall","src":"187:12:27"},"nativeSrc":"187:12:27","nodeType":"YulExpressionStatement","src":"187:12:27"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:27","nodeType":"YulFunctionDefinition","src":"88:117:27"},{"body":{"nativeSrc":"300:28:27","nodeType":"YulBlock","src":"300:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:27","nodeType":"YulLiteral","src":"317:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:27","nodeType":"YulLiteral","src":"320:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:27","nodeType":"YulIdentifier","src":"310:6:27"},"nativeSrc":"310:12:27","nodeType":"YulFunctionCall","src":"310:12:27"},"nativeSrc":"310:12:27","nodeType":"YulExpressionStatement","src":"310:12:27"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:27","nodeType":"YulFunctionDefinition","src":"211:117:27"},{"body":{"nativeSrc":"378:57:27","nodeType":"YulBlock","src":"378:57:27","statements":[{"nativeSrc":"388:41:27","nodeType":"YulAssignment","src":"388:41:27","value":{"arguments":[{"name":"value","nativeSrc":"403:5:27","nodeType":"YulIdentifier","src":"403:5:27"},{"kind":"number","nativeSrc":"410:18:27","nodeType":"YulLiteral","src":"410:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"399:3:27","nodeType":"YulIdentifier","src":"399:3:27"},"nativeSrc":"399:30:27","nodeType":"YulFunctionCall","src":"399:30:27"},"variableNames":[{"name":"cleaned","nativeSrc":"388:7:27","nodeType":"YulIdentifier","src":"388:7:27"}]}]},"name":"cleanup_t_uint64","nativeSrc":"334:101:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"360:5:27","nodeType":"YulTypedName","src":"360:5:27","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"370:7:27","nodeType":"YulTypedName","src":"370:7:27","type":""}],"src":"334:101:27"},{"body":{"nativeSrc":"483:78:27","nodeType":"YulBlock","src":"483:78:27","statements":[{"body":{"nativeSrc":"539:16:27","nodeType":"YulBlock","src":"539:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"548:1:27","nodeType":"YulLiteral","src":"548:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"551:1:27","nodeType":"YulLiteral","src":"551:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"541:6:27","nodeType":"YulIdentifier","src":"541:6:27"},"nativeSrc":"541:12:27","nodeType":"YulFunctionCall","src":"541:12:27"},"nativeSrc":"541:12:27","nodeType":"YulExpressionStatement","src":"541:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"506:5:27","nodeType":"YulIdentifier","src":"506:5:27"},{"arguments":[{"name":"value","nativeSrc":"530:5:27","nodeType":"YulIdentifier","src":"530:5:27"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"513:16:27","nodeType":"YulIdentifier","src":"513:16:27"},"nativeSrc":"513:23:27","nodeType":"YulFunctionCall","src":"513:23:27"}],"functionName":{"name":"eq","nativeSrc":"503:2:27","nodeType":"YulIdentifier","src":"503:2:27"},"nativeSrc":"503:34:27","nodeType":"YulFunctionCall","src":"503:34:27"}],"functionName":{"name":"iszero","nativeSrc":"496:6:27","nodeType":"YulIdentifier","src":"496:6:27"},"nativeSrc":"496:42:27","nodeType":"YulFunctionCall","src":"496:42:27"},"nativeSrc":"493:62:27","nodeType":"YulIf","src":"493:62:27"}]},"name":"validator_revert_t_uint64","nativeSrc":"441:120:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"476:5:27","nodeType":"YulTypedName","src":"476:5:27","type":""}],"src":"441:120:27"},{"body":{"nativeSrc":"618:86:27","nodeType":"YulBlock","src":"618:86:27","statements":[{"nativeSrc":"628:29:27","nodeType":"YulAssignment","src":"628:29:27","value":{"arguments":[{"name":"offset","nativeSrc":"650:6:27","nodeType":"YulIdentifier","src":"650:6:27"}],"functionName":{"name":"calldataload","nativeSrc":"637:12:27","nodeType":"YulIdentifier","src":"637:12:27"},"nativeSrc":"637:20:27","nodeType":"YulFunctionCall","src":"637:20:27"},"variableNames":[{"name":"value","nativeSrc":"628:5:27","nodeType":"YulIdentifier","src":"628:5:27"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"692:5:27","nodeType":"YulIdentifier","src":"692:5:27"}],"functionName":{"name":"validator_revert_t_uint64","nativeSrc":"666:25:27","nodeType":"YulIdentifier","src":"666:25:27"},"nativeSrc":"666:32:27","nodeType":"YulFunctionCall","src":"666:32:27"},"nativeSrc":"666:32:27","nodeType":"YulExpressionStatement","src":"666:32:27"}]},"name":"abi_decode_t_uint64","nativeSrc":"567:137:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"596:6:27","nodeType":"YulTypedName","src":"596:6:27","type":""},{"name":"end","nativeSrc":"604:3:27","nodeType":"YulTypedName","src":"604:3:27","type":""}],"returnVariables":[{"name":"value","nativeSrc":"612:5:27","nodeType":"YulTypedName","src":"612:5:27","type":""}],"src":"567:137:27"},{"body":{"nativeSrc":"775:262:27","nodeType":"YulBlock","src":"775:262:27","statements":[{"body":{"nativeSrc":"821:83:27","nodeType":"YulBlock","src":"821:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"823:77:27","nodeType":"YulIdentifier","src":"823:77:27"},"nativeSrc":"823:79:27","nodeType":"YulFunctionCall","src":"823:79:27"},"nativeSrc":"823:79:27","nodeType":"YulExpressionStatement","src":"823:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"796:7:27","nodeType":"YulIdentifier","src":"796:7:27"},{"name":"headStart","nativeSrc":"805:9:27","nodeType":"YulIdentifier","src":"805:9:27"}],"functionName":{"name":"sub","nativeSrc":"792:3:27","nodeType":"YulIdentifier","src":"792:3:27"},"nativeSrc":"792:23:27","nodeType":"YulFunctionCall","src":"792:23:27"},{"kind":"number","nativeSrc":"817:2:27","nodeType":"YulLiteral","src":"817:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"788:3:27","nodeType":"YulIdentifier","src":"788:3:27"},"nativeSrc":"788:32:27","nodeType":"YulFunctionCall","src":"788:32:27"},"nativeSrc":"785:119:27","nodeType":"YulIf","src":"785:119:27"},{"nativeSrc":"914:116:27","nodeType":"YulBlock","src":"914:116:27","statements":[{"nativeSrc":"929:15:27","nodeType":"YulVariableDeclaration","src":"929:15:27","value":{"kind":"number","nativeSrc":"943:1:27","nodeType":"YulLiteral","src":"943:1:27","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"933:6:27","nodeType":"YulTypedName","src":"933:6:27","type":""}]},{"nativeSrc":"958:62:27","nodeType":"YulAssignment","src":"958:62:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"992:9:27","nodeType":"YulIdentifier","src":"992:9:27"},{"name":"offset","nativeSrc":"1003:6:27","nodeType":"YulIdentifier","src":"1003:6:27"}],"functionName":{"name":"add","nativeSrc":"988:3:27","nodeType":"YulIdentifier","src":"988:3:27"},"nativeSrc":"988:22:27","nodeType":"YulFunctionCall","src":"988:22:27"},{"name":"dataEnd","nativeSrc":"1012:7:27","nodeType":"YulIdentifier","src":"1012:7:27"}],"functionName":{"name":"abi_decode_t_uint64","nativeSrc":"968:19:27","nodeType":"YulIdentifier","src":"968:19:27"},"nativeSrc":"968:52:27","nodeType":"YulFunctionCall","src":"968:52:27"},"variableNames":[{"name":"value0","nativeSrc":"958:6:27","nodeType":"YulIdentifier","src":"958:6:27"}]}]}]},"name":"abi_decode_tuple_t_uint64","nativeSrc":"710:327:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"745:9:27","nodeType":"YulTypedName","src":"745:9:27","type":""},{"name":"dataEnd","nativeSrc":"756:7:27","nodeType":"YulTypedName","src":"756:7:27","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"768:6:27","nodeType":"YulTypedName","src":"768:6:27","type":""}],"src":"710:327:27"},{"body":{"nativeSrc":"1088:32:27","nodeType":"YulBlock","src":"1088:32:27","statements":[{"nativeSrc":"1098:16:27","nodeType":"YulAssignment","src":"1098:16:27","value":{"name":"value","nativeSrc":"1109:5:27","nodeType":"YulIdentifier","src":"1109:5:27"},"variableNames":[{"name":"cleaned","nativeSrc":"1098:7:27","nodeType":"YulIdentifier","src":"1098:7:27"}]}]},"name":"cleanup_t_uint256","nativeSrc":"1043:77:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1070:5:27","nodeType":"YulTypedName","src":"1070:5:27","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1080:7:27","nodeType":"YulTypedName","src":"1080:7:27","type":""}],"src":"1043:77:27"},{"body":{"nativeSrc":"1191:53:27","nodeType":"YulBlock","src":"1191:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1208:3:27","nodeType":"YulIdentifier","src":"1208:3:27"},{"arguments":[{"name":"value","nativeSrc":"1231:5:27","nodeType":"YulIdentifier","src":"1231:5:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1213:17:27","nodeType":"YulIdentifier","src":"1213:17:27"},"nativeSrc":"1213:24:27","nodeType":"YulFunctionCall","src":"1213:24:27"}],"functionName":{"name":"mstore","nativeSrc":"1201:6:27","nodeType":"YulIdentifier","src":"1201:6:27"},"nativeSrc":"1201:37:27","nodeType":"YulFunctionCall","src":"1201:37:27"},"nativeSrc":"1201:37:27","nodeType":"YulExpressionStatement","src":"1201:37:27"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"1126:118:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1179:5:27","nodeType":"YulTypedName","src":"1179:5:27","type":""},{"name":"pos","nativeSrc":"1186:3:27","nodeType":"YulTypedName","src":"1186:3:27","type":""}],"src":"1126:118:27"},{"body":{"nativeSrc":"1348:124:27","nodeType":"YulBlock","src":"1348:124:27","statements":[{"nativeSrc":"1358:26:27","nodeType":"YulAssignment","src":"1358:26:27","value":{"arguments":[{"name":"headStart","nativeSrc":"1370:9:27","nodeType":"YulIdentifier","src":"1370:9:27"},{"kind":"number","nativeSrc":"1381:2:27","nodeType":"YulLiteral","src":"1381:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1366:3:27","nodeType":"YulIdentifier","src":"1366:3:27"},"nativeSrc":"1366:18:27","nodeType":"YulFunctionCall","src":"1366:18:27"},"variableNames":[{"name":"tail","nativeSrc":"1358:4:27","nodeType":"YulIdentifier","src":"1358:4:27"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1438:6:27","nodeType":"YulIdentifier","src":"1438:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"1451:9:27","nodeType":"YulIdentifier","src":"1451:9:27"},{"kind":"number","nativeSrc":"1462:1:27","nodeType":"YulLiteral","src":"1462:1:27","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1447:3:27","nodeType":"YulIdentifier","src":"1447:3:27"},"nativeSrc":"1447:17:27","nodeType":"YulFunctionCall","src":"1447:17:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"1394:43:27","nodeType":"YulIdentifier","src":"1394:43:27"},"nativeSrc":"1394:71:27","nodeType":"YulFunctionCall","src":"1394:71:27"},"nativeSrc":"1394:71:27","nodeType":"YulExpressionStatement","src":"1394:71:27"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"1250:222:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1320:9:27","nodeType":"YulTypedName","src":"1320:9:27","type":""},{"name":"value0","nativeSrc":"1332:6:27","nodeType":"YulTypedName","src":"1332:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1343:4:27","nodeType":"YulTypedName","src":"1343:4:27","type":""}],"src":"1250:222:27"},{"body":{"nativeSrc":"1523:81:27","nodeType":"YulBlock","src":"1523:81:27","statements":[{"nativeSrc":"1533:65:27","nodeType":"YulAssignment","src":"1533:65:27","value":{"arguments":[{"name":"value","nativeSrc":"1548:5:27","nodeType":"YulIdentifier","src":"1548:5:27"},{"kind":"number","nativeSrc":"1555:42:27","nodeType":"YulLiteral","src":"1555:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1544:3:27","nodeType":"YulIdentifier","src":"1544:3:27"},"nativeSrc":"1544:54:27","nodeType":"YulFunctionCall","src":"1544:54:27"},"variableNames":[{"name":"cleaned","nativeSrc":"1533:7:27","nodeType":"YulIdentifier","src":"1533:7:27"}]}]},"name":"cleanup_t_uint160","nativeSrc":"1478:126:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1505:5:27","nodeType":"YulTypedName","src":"1505:5:27","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1515:7:27","nodeType":"YulTypedName","src":"1515:7:27","type":""}],"src":"1478:126:27"},{"body":{"nativeSrc":"1655:51:27","nodeType":"YulBlock","src":"1655:51:27","statements":[{"nativeSrc":"1665:35:27","nodeType":"YulAssignment","src":"1665:35:27","value":{"arguments":[{"name":"value","nativeSrc":"1694:5:27","nodeType":"YulIdentifier","src":"1694:5:27"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1676:17:27","nodeType":"YulIdentifier","src":"1676:17:27"},"nativeSrc":"1676:24:27","nodeType":"YulFunctionCall","src":"1676:24:27"},"variableNames":[{"name":"cleaned","nativeSrc":"1665:7:27","nodeType":"YulIdentifier","src":"1665:7:27"}]}]},"name":"cleanup_t_address","nativeSrc":"1610:96:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1637:5:27","nodeType":"YulTypedName","src":"1637:5:27","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1647:7:27","nodeType":"YulTypedName","src":"1647:7:27","type":""}],"src":"1610:96:27"},{"body":{"nativeSrc":"1755:79:27","nodeType":"YulBlock","src":"1755:79:27","statements":[{"body":{"nativeSrc":"1812:16:27","nodeType":"YulBlock","src":"1812:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1821:1:27","nodeType":"YulLiteral","src":"1821:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"1824:1:27","nodeType":"YulLiteral","src":"1824:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1814:6:27","nodeType":"YulIdentifier","src":"1814:6:27"},"nativeSrc":"1814:12:27","nodeType":"YulFunctionCall","src":"1814:12:27"},"nativeSrc":"1814:12:27","nodeType":"YulExpressionStatement","src":"1814:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1778:5:27","nodeType":"YulIdentifier","src":"1778:5:27"},{"arguments":[{"name":"value","nativeSrc":"1803:5:27","nodeType":"YulIdentifier","src":"1803:5:27"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1785:17:27","nodeType":"YulIdentifier","src":"1785:17:27"},"nativeSrc":"1785:24:27","nodeType":"YulFunctionCall","src":"1785:24:27"}],"functionName":{"name":"eq","nativeSrc":"1775:2:27","nodeType":"YulIdentifier","src":"1775:2:27"},"nativeSrc":"1775:35:27","nodeType":"YulFunctionCall","src":"1775:35:27"}],"functionName":{"name":"iszero","nativeSrc":"1768:6:27","nodeType":"YulIdentifier","src":"1768:6:27"},"nativeSrc":"1768:43:27","nodeType":"YulFunctionCall","src":"1768:43:27"},"nativeSrc":"1765:63:27","nodeType":"YulIf","src":"1765:63:27"}]},"name":"validator_revert_t_address","nativeSrc":"1712:122:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1748:5:27","nodeType":"YulTypedName","src":"1748:5:27","type":""}],"src":"1712:122:27"},{"body":{"nativeSrc":"1892:87:27","nodeType":"YulBlock","src":"1892:87:27","statements":[{"nativeSrc":"1902:29:27","nodeType":"YulAssignment","src":"1902:29:27","value":{"arguments":[{"name":"offset","nativeSrc":"1924:6:27","nodeType":"YulIdentifier","src":"1924:6:27"}],"functionName":{"name":"calldataload","nativeSrc":"1911:12:27","nodeType":"YulIdentifier","src":"1911:12:27"},"nativeSrc":"1911:20:27","nodeType":"YulFunctionCall","src":"1911:20:27"},"variableNames":[{"name":"value","nativeSrc":"1902:5:27","nodeType":"YulIdentifier","src":"1902:5:27"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1967:5:27","nodeType":"YulIdentifier","src":"1967:5:27"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"1940:26:27","nodeType":"YulIdentifier","src":"1940:26:27"},"nativeSrc":"1940:33:27","nodeType":"YulFunctionCall","src":"1940:33:27"},"nativeSrc":"1940:33:27","nodeType":"YulExpressionStatement","src":"1940:33:27"}]},"name":"abi_decode_t_address","nativeSrc":"1840:139:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1870:6:27","nodeType":"YulTypedName","src":"1870:6:27","type":""},{"name":"end","nativeSrc":"1878:3:27","nodeType":"YulTypedName","src":"1878:3:27","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1886:5:27","nodeType":"YulTypedName","src":"1886:5:27","type":""}],"src":"1840:139:27"},{"body":{"nativeSrc":"2051:263:27","nodeType":"YulBlock","src":"2051:263:27","statements":[{"body":{"nativeSrc":"2097:83:27","nodeType":"YulBlock","src":"2097:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2099:77:27","nodeType":"YulIdentifier","src":"2099:77:27"},"nativeSrc":"2099:79:27","nodeType":"YulFunctionCall","src":"2099:79:27"},"nativeSrc":"2099:79:27","nodeType":"YulExpressionStatement","src":"2099:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2072:7:27","nodeType":"YulIdentifier","src":"2072:7:27"},{"name":"headStart","nativeSrc":"2081:9:27","nodeType":"YulIdentifier","src":"2081:9:27"}],"functionName":{"name":"sub","nativeSrc":"2068:3:27","nodeType":"YulIdentifier","src":"2068:3:27"},"nativeSrc":"2068:23:27","nodeType":"YulFunctionCall","src":"2068:23:27"},{"kind":"number","nativeSrc":"2093:2:27","nodeType":"YulLiteral","src":"2093:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2064:3:27","nodeType":"YulIdentifier","src":"2064:3:27"},"nativeSrc":"2064:32:27","nodeType":"YulFunctionCall","src":"2064:32:27"},"nativeSrc":"2061:119:27","nodeType":"YulIf","src":"2061:119:27"},{"nativeSrc":"2190:117:27","nodeType":"YulBlock","src":"2190:117:27","statements":[{"nativeSrc":"2205:15:27","nodeType":"YulVariableDeclaration","src":"2205:15:27","value":{"kind":"number","nativeSrc":"2219:1:27","nodeType":"YulLiteral","src":"2219:1:27","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2209:6:27","nodeType":"YulTypedName","src":"2209:6:27","type":""}]},{"nativeSrc":"2234:63:27","nodeType":"YulAssignment","src":"2234:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2269:9:27","nodeType":"YulIdentifier","src":"2269:9:27"},{"name":"offset","nativeSrc":"2280:6:27","nodeType":"YulIdentifier","src":"2280:6:27"}],"functionName":{"name":"add","nativeSrc":"2265:3:27","nodeType":"YulIdentifier","src":"2265:3:27"},"nativeSrc":"2265:22:27","nodeType":"YulFunctionCall","src":"2265:22:27"},{"name":"dataEnd","nativeSrc":"2289:7:27","nodeType":"YulIdentifier","src":"2289:7:27"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2244:20:27","nodeType":"YulIdentifier","src":"2244:20:27"},"nativeSrc":"2244:53:27","nodeType":"YulFunctionCall","src":"2244:53:27"},"variableNames":[{"name":"value0","nativeSrc":"2234:6:27","nodeType":"YulIdentifier","src":"2234:6:27"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"1985:329:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2021:9:27","nodeType":"YulTypedName","src":"2021:9:27","type":""},{"name":"dataEnd","nativeSrc":"2032:7:27","nodeType":"YulTypedName","src":"2032:7:27","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2044:6:27","nodeType":"YulTypedName","src":"2044:6:27","type":""}],"src":"1985:329:27"},{"body":{"nativeSrc":"2402:390:27","nodeType":"YulBlock","src":"2402:390:27","statements":[{"body":{"nativeSrc":"2448:83:27","nodeType":"YulBlock","src":"2448:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2450:77:27","nodeType":"YulIdentifier","src":"2450:77:27"},"nativeSrc":"2450:79:27","nodeType":"YulFunctionCall","src":"2450:79:27"},"nativeSrc":"2450:79:27","nodeType":"YulExpressionStatement","src":"2450:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2423:7:27","nodeType":"YulIdentifier","src":"2423:7:27"},{"name":"headStart","nativeSrc":"2432:9:27","nodeType":"YulIdentifier","src":"2432:9:27"}],"functionName":{"name":"sub","nativeSrc":"2419:3:27","nodeType":"YulIdentifier","src":"2419:3:27"},"nativeSrc":"2419:23:27","nodeType":"YulFunctionCall","src":"2419:23:27"},{"kind":"number","nativeSrc":"2444:2:27","nodeType":"YulLiteral","src":"2444:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2415:3:27","nodeType":"YulIdentifier","src":"2415:3:27"},"nativeSrc":"2415:32:27","nodeType":"YulFunctionCall","src":"2415:32:27"},"nativeSrc":"2412:119:27","nodeType":"YulIf","src":"2412:119:27"},{"nativeSrc":"2541:117:27","nodeType":"YulBlock","src":"2541:117:27","statements":[{"nativeSrc":"2556:15:27","nodeType":"YulVariableDeclaration","src":"2556:15:27","value":{"kind":"number","nativeSrc":"2570:1:27","nodeType":"YulLiteral","src":"2570:1:27","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2560:6:27","nodeType":"YulTypedName","src":"2560:6:27","type":""}]},{"nativeSrc":"2585:63:27","nodeType":"YulAssignment","src":"2585:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2620:9:27","nodeType":"YulIdentifier","src":"2620:9:27"},{"name":"offset","nativeSrc":"2631:6:27","nodeType":"YulIdentifier","src":"2631:6:27"}],"functionName":{"name":"add","nativeSrc":"2616:3:27","nodeType":"YulIdentifier","src":"2616:3:27"},"nativeSrc":"2616:22:27","nodeType":"YulFunctionCall","src":"2616:22:27"},{"name":"dataEnd","nativeSrc":"2640:7:27","nodeType":"YulIdentifier","src":"2640:7:27"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2595:20:27","nodeType":"YulIdentifier","src":"2595:20:27"},"nativeSrc":"2595:53:27","nodeType":"YulFunctionCall","src":"2595:53:27"},"variableNames":[{"name":"value0","nativeSrc":"2585:6:27","nodeType":"YulIdentifier","src":"2585:6:27"}]}]},{"nativeSrc":"2668:117:27","nodeType":"YulBlock","src":"2668:117:27","statements":[{"nativeSrc":"2683:16:27","nodeType":"YulVariableDeclaration","src":"2683:16:27","value":{"kind":"number","nativeSrc":"2697:2:27","nodeType":"YulLiteral","src":"2697:2:27","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2687:6:27","nodeType":"YulTypedName","src":"2687:6:27","type":""}]},{"nativeSrc":"2713:62:27","nodeType":"YulAssignment","src":"2713:62:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2747:9:27","nodeType":"YulIdentifier","src":"2747:9:27"},{"name":"offset","nativeSrc":"2758:6:27","nodeType":"YulIdentifier","src":"2758:6:27"}],"functionName":{"name":"add","nativeSrc":"2743:3:27","nodeType":"YulIdentifier","src":"2743:3:27"},"nativeSrc":"2743:22:27","nodeType":"YulFunctionCall","src":"2743:22:27"},{"name":"dataEnd","nativeSrc":"2767:7:27","nodeType":"YulIdentifier","src":"2767:7:27"}],"functionName":{"name":"abi_decode_t_uint64","nativeSrc":"2723:19:27","nodeType":"YulIdentifier","src":"2723:19:27"},"nativeSrc":"2723:52:27","nodeType":"YulFunctionCall","src":"2723:52:27"},"variableNames":[{"name":"value1","nativeSrc":"2713:6:27","nodeType":"YulIdentifier","src":"2713:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint64","nativeSrc":"2320:472:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2364:9:27","nodeType":"YulTypedName","src":"2364:9:27","type":""},{"name":"dataEnd","nativeSrc":"2375:7:27","nodeType":"YulTypedName","src":"2375:7:27","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2387:6:27","nodeType":"YulTypedName","src":"2387:6:27","type":""},{"name":"value1","nativeSrc":"2395:6:27","nodeType":"YulTypedName","src":"2395:6:27","type":""}],"src":"2320:472:27"},{"body":{"nativeSrc":"2863:53:27","nodeType":"YulBlock","src":"2863:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2880:3:27","nodeType":"YulIdentifier","src":"2880:3:27"},{"arguments":[{"name":"value","nativeSrc":"2903:5:27","nodeType":"YulIdentifier","src":"2903:5:27"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"2885:17:27","nodeType":"YulIdentifier","src":"2885:17:27"},"nativeSrc":"2885:24:27","nodeType":"YulFunctionCall","src":"2885:24:27"}],"functionName":{"name":"mstore","nativeSrc":"2873:6:27","nodeType":"YulIdentifier","src":"2873:6:27"},"nativeSrc":"2873:37:27","nodeType":"YulFunctionCall","src":"2873:37:27"},"nativeSrc":"2873:37:27","nodeType":"YulExpressionStatement","src":"2873:37:27"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"2798:118:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2851:5:27","nodeType":"YulTypedName","src":"2851:5:27","type":""},{"name":"pos","nativeSrc":"2858:3:27","nodeType":"YulTypedName","src":"2858:3:27","type":""}],"src":"2798:118:27"},{"body":{"nativeSrc":"3020:124:27","nodeType":"YulBlock","src":"3020:124:27","statements":[{"nativeSrc":"3030:26:27","nodeType":"YulAssignment","src":"3030:26:27","value":{"arguments":[{"name":"headStart","nativeSrc":"3042:9:27","nodeType":"YulIdentifier","src":"3042:9:27"},{"kind":"number","nativeSrc":"3053:2:27","nodeType":"YulLiteral","src":"3053:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3038:3:27","nodeType":"YulIdentifier","src":"3038:3:27"},"nativeSrc":"3038:18:27","nodeType":"YulFunctionCall","src":"3038:18:27"},"variableNames":[{"name":"tail","nativeSrc":"3030:4:27","nodeType":"YulIdentifier","src":"3030:4:27"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3110:6:27","nodeType":"YulIdentifier","src":"3110:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"3123:9:27","nodeType":"YulIdentifier","src":"3123:9:27"},{"kind":"number","nativeSrc":"3134:1:27","nodeType":"YulLiteral","src":"3134:1:27","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3119:3:27","nodeType":"YulIdentifier","src":"3119:3:27"},"nativeSrc":"3119:17:27","nodeType":"YulFunctionCall","src":"3119:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"3066:43:27","nodeType":"YulIdentifier","src":"3066:43:27"},"nativeSrc":"3066:71:27","nodeType":"YulFunctionCall","src":"3066:71:27"},"nativeSrc":"3066:71:27","nodeType":"YulExpressionStatement","src":"3066:71:27"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"2922:222:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2992:9:27","nodeType":"YulTypedName","src":"2992:9:27","type":""},{"name":"value0","nativeSrc":"3004:6:27","nodeType":"YulTypedName","src":"3004:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3015:4:27","nodeType":"YulTypedName","src":"3015:4:27","type":""}],"src":"2922:222:27"},{"body":{"nativeSrc":"3178:152:27","nodeType":"YulBlock","src":"3178:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3195:1:27","nodeType":"YulLiteral","src":"3195:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"3198:77:27","nodeType":"YulLiteral","src":"3198:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"3188:6:27","nodeType":"YulIdentifier","src":"3188:6:27"},"nativeSrc":"3188:88:27","nodeType":"YulFunctionCall","src":"3188:88:27"},"nativeSrc":"3188:88:27","nodeType":"YulExpressionStatement","src":"3188:88:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3292:1:27","nodeType":"YulLiteral","src":"3292:1:27","type":"","value":"4"},{"kind":"number","nativeSrc":"3295:4:27","nodeType":"YulLiteral","src":"3295:4:27","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"3285:6:27","nodeType":"YulIdentifier","src":"3285:6:27"},"nativeSrc":"3285:15:27","nodeType":"YulFunctionCall","src":"3285:15:27"},"nativeSrc":"3285:15:27","nodeType":"YulExpressionStatement","src":"3285:15:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3316:1:27","nodeType":"YulLiteral","src":"3316:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"3319:4:27","nodeType":"YulLiteral","src":"3319:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3309:6:27","nodeType":"YulIdentifier","src":"3309:6:27"},"nativeSrc":"3309:15:27","nodeType":"YulFunctionCall","src":"3309:15:27"},"nativeSrc":"3309:15:27","nodeType":"YulExpressionStatement","src":"3309:15:27"}]},"name":"panic_error_0x11","nativeSrc":"3150:180:27","nodeType":"YulFunctionDefinition","src":"3150:180:27"},{"body":{"nativeSrc":"3380:147:27","nodeType":"YulBlock","src":"3380:147:27","statements":[{"nativeSrc":"3390:25:27","nodeType":"YulAssignment","src":"3390:25:27","value":{"arguments":[{"name":"x","nativeSrc":"3413:1:27","nodeType":"YulIdentifier","src":"3413:1:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3395:17:27","nodeType":"YulIdentifier","src":"3395:17:27"},"nativeSrc":"3395:20:27","nodeType":"YulFunctionCall","src":"3395:20:27"},"variableNames":[{"name":"x","nativeSrc":"3390:1:27","nodeType":"YulIdentifier","src":"3390:1:27"}]},{"nativeSrc":"3424:25:27","nodeType":"YulAssignment","src":"3424:25:27","value":{"arguments":[{"name":"y","nativeSrc":"3447:1:27","nodeType":"YulIdentifier","src":"3447:1:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3429:17:27","nodeType":"YulIdentifier","src":"3429:17:27"},"nativeSrc":"3429:20:27","nodeType":"YulFunctionCall","src":"3429:20:27"},"variableNames":[{"name":"y","nativeSrc":"3424:1:27","nodeType":"YulIdentifier","src":"3424:1:27"}]},{"nativeSrc":"3458:16:27","nodeType":"YulAssignment","src":"3458:16:27","value":{"arguments":[{"name":"x","nativeSrc":"3469:1:27","nodeType":"YulIdentifier","src":"3469:1:27"},{"name":"y","nativeSrc":"3472:1:27","nodeType":"YulIdentifier","src":"3472:1:27"}],"functionName":{"name":"add","nativeSrc":"3465:3:27","nodeType":"YulIdentifier","src":"3465:3:27"},"nativeSrc":"3465:9:27","nodeType":"YulFunctionCall","src":"3465:9:27"},"variableNames":[{"name":"sum","nativeSrc":"3458:3:27","nodeType":"YulIdentifier","src":"3458:3:27"}]},{"body":{"nativeSrc":"3498:22:27","nodeType":"YulBlock","src":"3498:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"3500:16:27","nodeType":"YulIdentifier","src":"3500:16:27"},"nativeSrc":"3500:18:27","nodeType":"YulFunctionCall","src":"3500:18:27"},"nativeSrc":"3500:18:27","nodeType":"YulExpressionStatement","src":"3500:18:27"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"3490:1:27","nodeType":"YulIdentifier","src":"3490:1:27"},{"name":"sum","nativeSrc":"3493:3:27","nodeType":"YulIdentifier","src":"3493:3:27"}],"functionName":{"name":"gt","nativeSrc":"3487:2:27","nodeType":"YulIdentifier","src":"3487:2:27"},"nativeSrc":"3487:10:27","nodeType":"YulFunctionCall","src":"3487:10:27"},"nativeSrc":"3484:36:27","nodeType":"YulIf","src":"3484:36:27"}]},"name":"checked_add_t_uint256","nativeSrc":"3336:191:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"3367:1:27","nodeType":"YulTypedName","src":"3367:1:27","type":""},{"name":"y","nativeSrc":"3370:1:27","nodeType":"YulTypedName","src":"3370:1:27","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"3376:3:27","nodeType":"YulTypedName","src":"3376:3:27","type":""}],"src":"3336:191:27"},{"body":{"nativeSrc":"3576:79:27","nodeType":"YulBlock","src":"3576:79:27","statements":[{"body":{"nativeSrc":"3633:16:27","nodeType":"YulBlock","src":"3633:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3642:1:27","nodeType":"YulLiteral","src":"3642:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"3645:1:27","nodeType":"YulLiteral","src":"3645:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3635:6:27","nodeType":"YulIdentifier","src":"3635:6:27"},"nativeSrc":"3635:12:27","nodeType":"YulFunctionCall","src":"3635:12:27"},"nativeSrc":"3635:12:27","nodeType":"YulExpressionStatement","src":"3635:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3599:5:27","nodeType":"YulIdentifier","src":"3599:5:27"},{"arguments":[{"name":"value","nativeSrc":"3624:5:27","nodeType":"YulIdentifier","src":"3624:5:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3606:17:27","nodeType":"YulIdentifier","src":"3606:17:27"},"nativeSrc":"3606:24:27","nodeType":"YulFunctionCall","src":"3606:24:27"}],"functionName":{"name":"eq","nativeSrc":"3596:2:27","nodeType":"YulIdentifier","src":"3596:2:27"},"nativeSrc":"3596:35:27","nodeType":"YulFunctionCall","src":"3596:35:27"}],"functionName":{"name":"iszero","nativeSrc":"3589:6:27","nodeType":"YulIdentifier","src":"3589:6:27"},"nativeSrc":"3589:43:27","nodeType":"YulFunctionCall","src":"3589:43:27"},"nativeSrc":"3586:63:27","nodeType":"YulIf","src":"3586:63:27"}]},"name":"validator_revert_t_uint256","nativeSrc":"3533:122:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3569:5:27","nodeType":"YulTypedName","src":"3569:5:27","type":""}],"src":"3533:122:27"},{"body":{"nativeSrc":"3724:80:27","nodeType":"YulBlock","src":"3724:80:27","statements":[{"nativeSrc":"3734:22:27","nodeType":"YulAssignment","src":"3734:22:27","value":{"arguments":[{"name":"offset","nativeSrc":"3749:6:27","nodeType":"YulIdentifier","src":"3749:6:27"}],"functionName":{"name":"mload","nativeSrc":"3743:5:27","nodeType":"YulIdentifier","src":"3743:5:27"},"nativeSrc":"3743:13:27","nodeType":"YulFunctionCall","src":"3743:13:27"},"variableNames":[{"name":"value","nativeSrc":"3734:5:27","nodeType":"YulIdentifier","src":"3734:5:27"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3792:5:27","nodeType":"YulIdentifier","src":"3792:5:27"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"3765:26:27","nodeType":"YulIdentifier","src":"3765:26:27"},"nativeSrc":"3765:33:27","nodeType":"YulFunctionCall","src":"3765:33:27"},"nativeSrc":"3765:33:27","nodeType":"YulExpressionStatement","src":"3765:33:27"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"3661:143:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3702:6:27","nodeType":"YulTypedName","src":"3702:6:27","type":""},{"name":"end","nativeSrc":"3710:3:27","nodeType":"YulTypedName","src":"3710:3:27","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3718:5:27","nodeType":"YulTypedName","src":"3718:5:27","type":""}],"src":"3661:143:27"},{"body":{"nativeSrc":"3887:274:27","nodeType":"YulBlock","src":"3887:274:27","statements":[{"body":{"nativeSrc":"3933:83:27","nodeType":"YulBlock","src":"3933:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3935:77:27","nodeType":"YulIdentifier","src":"3935:77:27"},"nativeSrc":"3935:79:27","nodeType":"YulFunctionCall","src":"3935:79:27"},"nativeSrc":"3935:79:27","nodeType":"YulExpressionStatement","src":"3935:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3908:7:27","nodeType":"YulIdentifier","src":"3908:7:27"},{"name":"headStart","nativeSrc":"3917:9:27","nodeType":"YulIdentifier","src":"3917:9:27"}],"functionName":{"name":"sub","nativeSrc":"3904:3:27","nodeType":"YulIdentifier","src":"3904:3:27"},"nativeSrc":"3904:23:27","nodeType":"YulFunctionCall","src":"3904:23:27"},{"kind":"number","nativeSrc":"3929:2:27","nodeType":"YulLiteral","src":"3929:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3900:3:27","nodeType":"YulIdentifier","src":"3900:3:27"},"nativeSrc":"3900:32:27","nodeType":"YulFunctionCall","src":"3900:32:27"},"nativeSrc":"3897:119:27","nodeType":"YulIf","src":"3897:119:27"},{"nativeSrc":"4026:128:27","nodeType":"YulBlock","src":"4026:128:27","statements":[{"nativeSrc":"4041:15:27","nodeType":"YulVariableDeclaration","src":"4041:15:27","value":{"kind":"number","nativeSrc":"4055:1:27","nodeType":"YulLiteral","src":"4055:1:27","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4045:6:27","nodeType":"YulTypedName","src":"4045:6:27","type":""}]},{"nativeSrc":"4070:74:27","nodeType":"YulAssignment","src":"4070:74:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4116:9:27","nodeType":"YulIdentifier","src":"4116:9:27"},{"name":"offset","nativeSrc":"4127:6:27","nodeType":"YulIdentifier","src":"4127:6:27"}],"functionName":{"name":"add","nativeSrc":"4112:3:27","nodeType":"YulIdentifier","src":"4112:3:27"},"nativeSrc":"4112:22:27","nodeType":"YulFunctionCall","src":"4112:22:27"},{"name":"dataEnd","nativeSrc":"4136:7:27","nodeType":"YulIdentifier","src":"4136:7:27"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"4080:31:27","nodeType":"YulIdentifier","src":"4080:31:27"},"nativeSrc":"4080:64:27","nodeType":"YulFunctionCall","src":"4080:64:27"},"variableNames":[{"name":"value0","nativeSrc":"4070:6:27","nodeType":"YulIdentifier","src":"4070:6:27"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"3810:351:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3857:9:27","nodeType":"YulTypedName","src":"3857:9:27","type":""},{"name":"dataEnd","nativeSrc":"3868:7:27","nodeType":"YulTypedName","src":"3868:7:27","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3880:6:27","nodeType":"YulTypedName","src":"3880:6:27","type":""}],"src":"3810:351:27"},{"body":{"nativeSrc":"4212:149:27","nodeType":"YulBlock","src":"4212:149:27","statements":[{"nativeSrc":"4222:25:27","nodeType":"YulAssignment","src":"4222:25:27","value":{"arguments":[{"name":"x","nativeSrc":"4245:1:27","nodeType":"YulIdentifier","src":"4245:1:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"4227:17:27","nodeType":"YulIdentifier","src":"4227:17:27"},"nativeSrc":"4227:20:27","nodeType":"YulFunctionCall","src":"4227:20:27"},"variableNames":[{"name":"x","nativeSrc":"4222:1:27","nodeType":"YulIdentifier","src":"4222:1:27"}]},{"nativeSrc":"4256:25:27","nodeType":"YulAssignment","src":"4256:25:27","value":{"arguments":[{"name":"y","nativeSrc":"4279:1:27","nodeType":"YulIdentifier","src":"4279:1:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"4261:17:27","nodeType":"YulIdentifier","src":"4261:17:27"},"nativeSrc":"4261:20:27","nodeType":"YulFunctionCall","src":"4261:20:27"},"variableNames":[{"name":"y","nativeSrc":"4256:1:27","nodeType":"YulIdentifier","src":"4256:1:27"}]},{"nativeSrc":"4290:17:27","nodeType":"YulAssignment","src":"4290:17:27","value":{"arguments":[{"name":"x","nativeSrc":"4302:1:27","nodeType":"YulIdentifier","src":"4302:1:27"},{"name":"y","nativeSrc":"4305:1:27","nodeType":"YulIdentifier","src":"4305:1:27"}],"functionName":{"name":"sub","nativeSrc":"4298:3:27","nodeType":"YulIdentifier","src":"4298:3:27"},"nativeSrc":"4298:9:27","nodeType":"YulFunctionCall","src":"4298:9:27"},"variableNames":[{"name":"diff","nativeSrc":"4290:4:27","nodeType":"YulIdentifier","src":"4290:4:27"}]},{"body":{"nativeSrc":"4332:22:27","nodeType":"YulBlock","src":"4332:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"4334:16:27","nodeType":"YulIdentifier","src":"4334:16:27"},"nativeSrc":"4334:18:27","nodeType":"YulFunctionCall","src":"4334:18:27"},"nativeSrc":"4334:18:27","nodeType":"YulExpressionStatement","src":"4334:18:27"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"4323:4:27","nodeType":"YulIdentifier","src":"4323:4:27"},{"name":"x","nativeSrc":"4329:1:27","nodeType":"YulIdentifier","src":"4329:1:27"}],"functionName":{"name":"gt","nativeSrc":"4320:2:27","nodeType":"YulIdentifier","src":"4320:2:27"},"nativeSrc":"4320:11:27","nodeType":"YulFunctionCall","src":"4320:11:27"},"nativeSrc":"4317:37:27","nodeType":"YulIf","src":"4317:37:27"}]},"name":"checked_sub_t_uint256","nativeSrc":"4167:194:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"4198:1:27","nodeType":"YulTypedName","src":"4198:1:27","type":""},{"name":"y","nativeSrc":"4201:1:27","nodeType":"YulTypedName","src":"4201:1:27","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"4207:4:27","nodeType":"YulTypedName","src":"4207:4:27","type":""}],"src":"4167:194:27"},{"body":{"nativeSrc":"4493:206:27","nodeType":"YulBlock","src":"4493:206:27","statements":[{"nativeSrc":"4503:26:27","nodeType":"YulAssignment","src":"4503:26:27","value":{"arguments":[{"name":"headStart","nativeSrc":"4515:9:27","nodeType":"YulIdentifier","src":"4515:9:27"},{"kind":"number","nativeSrc":"4526:2:27","nodeType":"YulLiteral","src":"4526:2:27","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4511:3:27","nodeType":"YulIdentifier","src":"4511:3:27"},"nativeSrc":"4511:18:27","nodeType":"YulFunctionCall","src":"4511:18:27"},"variableNames":[{"name":"tail","nativeSrc":"4503:4:27","nodeType":"YulIdentifier","src":"4503:4:27"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4583:6:27","nodeType":"YulIdentifier","src":"4583:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"4596:9:27","nodeType":"YulIdentifier","src":"4596:9:27"},{"kind":"number","nativeSrc":"4607:1:27","nodeType":"YulLiteral","src":"4607:1:27","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4592:3:27","nodeType":"YulIdentifier","src":"4592:3:27"},"nativeSrc":"4592:17:27","nodeType":"YulFunctionCall","src":"4592:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"4539:43:27","nodeType":"YulIdentifier","src":"4539:43:27"},"nativeSrc":"4539:71:27","nodeType":"YulFunctionCall","src":"4539:71:27"},"nativeSrc":"4539:71:27","nodeType":"YulExpressionStatement","src":"4539:71:27"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"4664:6:27","nodeType":"YulIdentifier","src":"4664:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"4677:9:27","nodeType":"YulIdentifier","src":"4677:9:27"},{"kind":"number","nativeSrc":"4688:2:27","nodeType":"YulLiteral","src":"4688:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4673:3:27","nodeType":"YulIdentifier","src":"4673:3:27"},"nativeSrc":"4673:18:27","nodeType":"YulFunctionCall","src":"4673:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"4620:43:27","nodeType":"YulIdentifier","src":"4620:43:27"},"nativeSrc":"4620:72:27","nodeType":"YulFunctionCall","src":"4620:72:27"},"nativeSrc":"4620:72:27","nodeType":"YulExpressionStatement","src":"4620:72:27"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"4367:332:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4457:9:27","nodeType":"YulTypedName","src":"4457:9:27","type":""},{"name":"value1","nativeSrc":"4469:6:27","nodeType":"YulTypedName","src":"4469:6:27","type":""},{"name":"value0","nativeSrc":"4477:6:27","nodeType":"YulTypedName","src":"4477:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4488:4:27","nodeType":"YulTypedName","src":"4488:4:27","type":""}],"src":"4367:332:27"},{"body":{"nativeSrc":"4818:34:27","nodeType":"YulBlock","src":"4818:34:27","statements":[{"nativeSrc":"4828:18:27","nodeType":"YulAssignment","src":"4828:18:27","value":{"name":"pos","nativeSrc":"4843:3:27","nodeType":"YulIdentifier","src":"4843:3:27"},"variableNames":[{"name":"updated_pos","nativeSrc":"4828:11:27","nodeType":"YulIdentifier","src":"4828:11:27"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"4705:147:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"4790:3:27","nodeType":"YulTypedName","src":"4790:3:27","type":""},{"name":"length","nativeSrc":"4795:6:27","nodeType":"YulTypedName","src":"4795:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"4806:11:27","nodeType":"YulTypedName","src":"4806:11:27","type":""}],"src":"4705:147:27"},{"body":{"nativeSrc":"4964:8:27","nodeType":"YulBlock","src":"4964:8:27","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"4858:114:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"4956:6:27","nodeType":"YulTypedName","src":"4956:6:27","type":""}],"src":"4858:114:27"},{"body":{"nativeSrc":"5141:235:27","nodeType":"YulBlock","src":"5141:235:27","statements":[{"nativeSrc":"5151:90:27","nodeType":"YulAssignment","src":"5151:90:27","value":{"arguments":[{"name":"pos","nativeSrc":"5234:3:27","nodeType":"YulIdentifier","src":"5234:3:27"},{"kind":"number","nativeSrc":"5239:1:27","nodeType":"YulLiteral","src":"5239:1:27","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"5158:75:27","nodeType":"YulIdentifier","src":"5158:75:27"},"nativeSrc":"5158:83:27","nodeType":"YulFunctionCall","src":"5158:83:27"},"variableNames":[{"name":"pos","nativeSrc":"5151:3:27","nodeType":"YulIdentifier","src":"5151:3:27"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"5339:3:27","nodeType":"YulIdentifier","src":"5339:3:27"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"5250:88:27","nodeType":"YulIdentifier","src":"5250:88:27"},"nativeSrc":"5250:93:27","nodeType":"YulFunctionCall","src":"5250:93:27"},"nativeSrc":"5250:93:27","nodeType":"YulExpressionStatement","src":"5250:93:27"},{"nativeSrc":"5352:18:27","nodeType":"YulAssignment","src":"5352:18:27","value":{"arguments":[{"name":"pos","nativeSrc":"5363:3:27","nodeType":"YulIdentifier","src":"5363:3:27"},{"kind":"number","nativeSrc":"5368:1:27","nodeType":"YulLiteral","src":"5368:1:27","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5359:3:27","nodeType":"YulIdentifier","src":"5359:3:27"},"nativeSrc":"5359:11:27","nodeType":"YulFunctionCall","src":"5359:11:27"},"variableNames":[{"name":"end","nativeSrc":"5352:3:27","nodeType":"YulIdentifier","src":"5352:3:27"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"4978:398:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"5129:3:27","nodeType":"YulTypedName","src":"5129:3:27","type":""}],"returnVariables":[{"name":"end","nativeSrc":"5137:3:27","nodeType":"YulTypedName","src":"5137:3:27","type":""}],"src":"4978:398:27"},{"body":{"nativeSrc":"5570:191:27","nodeType":"YulBlock","src":"5570:191:27","statements":[{"nativeSrc":"5581:154:27","nodeType":"YulAssignment","src":"5581:154:27","value":{"arguments":[{"name":"pos","nativeSrc":"5731:3:27","nodeType":"YulIdentifier","src":"5731:3:27"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"5588:141:27","nodeType":"YulIdentifier","src":"5588:141:27"},"nativeSrc":"5588:147:27","nodeType":"YulFunctionCall","src":"5588:147:27"},"variableNames":[{"name":"pos","nativeSrc":"5581:3:27","nodeType":"YulIdentifier","src":"5581:3:27"}]},{"nativeSrc":"5745:10:27","nodeType":"YulAssignment","src":"5745:10:27","value":{"name":"pos","nativeSrc":"5752:3:27","nodeType":"YulIdentifier","src":"5752:3:27"},"variableNames":[{"name":"end","nativeSrc":"5745:3:27","nodeType":"YulIdentifier","src":"5745:3:27"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"5382:379:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"5557:3:27","nodeType":"YulTypedName","src":"5557:3:27","type":""}],"returnVariables":[{"name":"end","nativeSrc":"5566:3:27","nodeType":"YulTypedName","src":"5566:3:27","type":""}],"src":"5382:379:27"},{"body":{"nativeSrc":"5815:362:27","nodeType":"YulBlock","src":"5815:362:27","statements":[{"nativeSrc":"5825:25:27","nodeType":"YulAssignment","src":"5825:25:27","value":{"arguments":[{"name":"x","nativeSrc":"5848:1:27","nodeType":"YulIdentifier","src":"5848:1:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5830:17:27","nodeType":"YulIdentifier","src":"5830:17:27"},"nativeSrc":"5830:20:27","nodeType":"YulFunctionCall","src":"5830:20:27"},"variableNames":[{"name":"x","nativeSrc":"5825:1:27","nodeType":"YulIdentifier","src":"5825:1:27"}]},{"nativeSrc":"5859:25:27","nodeType":"YulAssignment","src":"5859:25:27","value":{"arguments":[{"name":"y","nativeSrc":"5882:1:27","nodeType":"YulIdentifier","src":"5882:1:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5864:17:27","nodeType":"YulIdentifier","src":"5864:17:27"},"nativeSrc":"5864:20:27","nodeType":"YulFunctionCall","src":"5864:20:27"},"variableNames":[{"name":"y","nativeSrc":"5859:1:27","nodeType":"YulIdentifier","src":"5859:1:27"}]},{"nativeSrc":"5893:28:27","nodeType":"YulVariableDeclaration","src":"5893:28:27","value":{"arguments":[{"name":"x","nativeSrc":"5916:1:27","nodeType":"YulIdentifier","src":"5916:1:27"},{"name":"y","nativeSrc":"5919:1:27","nodeType":"YulIdentifier","src":"5919:1:27"}],"functionName":{"name":"mul","nativeSrc":"5912:3:27","nodeType":"YulIdentifier","src":"5912:3:27"},"nativeSrc":"5912:9:27","nodeType":"YulFunctionCall","src":"5912:9:27"},"variables":[{"name":"product_raw","nativeSrc":"5897:11:27","nodeType":"YulTypedName","src":"5897:11:27","type":""}]},{"nativeSrc":"5930:41:27","nodeType":"YulAssignment","src":"5930:41:27","value":{"arguments":[{"name":"product_raw","nativeSrc":"5959:11:27","nodeType":"YulIdentifier","src":"5959:11:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5941:17:27","nodeType":"YulIdentifier","src":"5941:17:27"},"nativeSrc":"5941:30:27","nodeType":"YulFunctionCall","src":"5941:30:27"},"variableNames":[{"name":"product","nativeSrc":"5930:7:27","nodeType":"YulIdentifier","src":"5930:7:27"}]},{"body":{"nativeSrc":"6148:22:27","nodeType":"YulBlock","src":"6148:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"6150:16:27","nodeType":"YulIdentifier","src":"6150:16:27"},"nativeSrc":"6150:18:27","nodeType":"YulFunctionCall","src":"6150:18:27"},"nativeSrc":"6150:18:27","nodeType":"YulExpressionStatement","src":"6150:18:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"6081:1:27","nodeType":"YulIdentifier","src":"6081:1:27"}],"functionName":{"name":"iszero","nativeSrc":"6074:6:27","nodeType":"YulIdentifier","src":"6074:6:27"},"nativeSrc":"6074:9:27","nodeType":"YulFunctionCall","src":"6074:9:27"},{"arguments":[{"name":"y","nativeSrc":"6104:1:27","nodeType":"YulIdentifier","src":"6104:1:27"},{"arguments":[{"name":"product","nativeSrc":"6111:7:27","nodeType":"YulIdentifier","src":"6111:7:27"},{"name":"x","nativeSrc":"6120:1:27","nodeType":"YulIdentifier","src":"6120:1:27"}],"functionName":{"name":"div","nativeSrc":"6107:3:27","nodeType":"YulIdentifier","src":"6107:3:27"},"nativeSrc":"6107:15:27","nodeType":"YulFunctionCall","src":"6107:15:27"}],"functionName":{"name":"eq","nativeSrc":"6101:2:27","nodeType":"YulIdentifier","src":"6101:2:27"},"nativeSrc":"6101:22:27","nodeType":"YulFunctionCall","src":"6101:22:27"}],"functionName":{"name":"or","nativeSrc":"6054:2:27","nodeType":"YulIdentifier","src":"6054:2:27"},"nativeSrc":"6054:83:27","nodeType":"YulFunctionCall","src":"6054:83:27"}],"functionName":{"name":"iszero","nativeSrc":"6034:6:27","nodeType":"YulIdentifier","src":"6034:6:27"},"nativeSrc":"6034:113:27","nodeType":"YulFunctionCall","src":"6034:113:27"},"nativeSrc":"6031:139:27","nodeType":"YulIf","src":"6031:139:27"}]},"name":"checked_mul_t_uint256","nativeSrc":"5767:410:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"5798:1:27","nodeType":"YulTypedName","src":"5798:1:27","type":""},{"name":"y","nativeSrc":"5801:1:27","nodeType":"YulTypedName","src":"5801:1:27","type":""}],"returnVariables":[{"name":"product","nativeSrc":"5807:7:27","nodeType":"YulTypedName","src":"5807:7:27","type":""}],"src":"5767:410:27"},{"body":{"nativeSrc":"6211:152:27","nodeType":"YulBlock","src":"6211:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6228:1:27","nodeType":"YulLiteral","src":"6228:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"6231:77:27","nodeType":"YulLiteral","src":"6231:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"6221:6:27","nodeType":"YulIdentifier","src":"6221:6:27"},"nativeSrc":"6221:88:27","nodeType":"YulFunctionCall","src":"6221:88:27"},"nativeSrc":"6221:88:27","nodeType":"YulExpressionStatement","src":"6221:88:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6325:1:27","nodeType":"YulLiteral","src":"6325:1:27","type":"","value":"4"},{"kind":"number","nativeSrc":"6328:4:27","nodeType":"YulLiteral","src":"6328:4:27","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"6318:6:27","nodeType":"YulIdentifier","src":"6318:6:27"},"nativeSrc":"6318:15:27","nodeType":"YulFunctionCall","src":"6318:15:27"},"nativeSrc":"6318:15:27","nodeType":"YulExpressionStatement","src":"6318:15:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6349:1:27","nodeType":"YulLiteral","src":"6349:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"6352:4:27","nodeType":"YulLiteral","src":"6352:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6342:6:27","nodeType":"YulIdentifier","src":"6342:6:27"},"nativeSrc":"6342:15:27","nodeType":"YulFunctionCall","src":"6342:15:27"},"nativeSrc":"6342:15:27","nodeType":"YulExpressionStatement","src":"6342:15:27"}]},"name":"panic_error_0x12","nativeSrc":"6183:180:27","nodeType":"YulFunctionDefinition","src":"6183:180:27"},{"body":{"nativeSrc":"6411:143:27","nodeType":"YulBlock","src":"6411:143:27","statements":[{"nativeSrc":"6421:25:27","nodeType":"YulAssignment","src":"6421:25:27","value":{"arguments":[{"name":"x","nativeSrc":"6444:1:27","nodeType":"YulIdentifier","src":"6444:1:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6426:17:27","nodeType":"YulIdentifier","src":"6426:17:27"},"nativeSrc":"6426:20:27","nodeType":"YulFunctionCall","src":"6426:20:27"},"variableNames":[{"name":"x","nativeSrc":"6421:1:27","nodeType":"YulIdentifier","src":"6421:1:27"}]},{"nativeSrc":"6455:25:27","nodeType":"YulAssignment","src":"6455:25:27","value":{"arguments":[{"name":"y","nativeSrc":"6478:1:27","nodeType":"YulIdentifier","src":"6478:1:27"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6460:17:27","nodeType":"YulIdentifier","src":"6460:17:27"},"nativeSrc":"6460:20:27","nodeType":"YulFunctionCall","src":"6460:20:27"},"variableNames":[{"name":"y","nativeSrc":"6455:1:27","nodeType":"YulIdentifier","src":"6455:1:27"}]},{"body":{"nativeSrc":"6502:22:27","nodeType":"YulBlock","src":"6502:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"6504:16:27","nodeType":"YulIdentifier","src":"6504:16:27"},"nativeSrc":"6504:18:27","nodeType":"YulFunctionCall","src":"6504:18:27"},"nativeSrc":"6504:18:27","nodeType":"YulExpressionStatement","src":"6504:18:27"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"6499:1:27","nodeType":"YulIdentifier","src":"6499:1:27"}],"functionName":{"name":"iszero","nativeSrc":"6492:6:27","nodeType":"YulIdentifier","src":"6492:6:27"},"nativeSrc":"6492:9:27","nodeType":"YulFunctionCall","src":"6492:9:27"},"nativeSrc":"6489:35:27","nodeType":"YulIf","src":"6489:35:27"},{"nativeSrc":"6534:14:27","nodeType":"YulAssignment","src":"6534:14:27","value":{"arguments":[{"name":"x","nativeSrc":"6543:1:27","nodeType":"YulIdentifier","src":"6543:1:27"},{"name":"y","nativeSrc":"6546:1:27","nodeType":"YulIdentifier","src":"6546:1:27"}],"functionName":{"name":"div","nativeSrc":"6539:3:27","nodeType":"YulIdentifier","src":"6539:3:27"},"nativeSrc":"6539:9:27","nodeType":"YulFunctionCall","src":"6539:9:27"},"variableNames":[{"name":"r","nativeSrc":"6534:1:27","nodeType":"YulIdentifier","src":"6534:1:27"}]}]},"name":"checked_div_t_uint256","nativeSrc":"6369:185:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"6400:1:27","nodeType":"YulTypedName","src":"6400:1:27","type":""},{"name":"y","nativeSrc":"6403:1:27","nodeType":"YulTypedName","src":"6403:1:27","type":""}],"returnVariables":[{"name":"r","nativeSrc":"6409:1:27","nodeType":"YulTypedName","src":"6409:1:27","type":""}],"src":"6369:185:27"},{"body":{"nativeSrc":"6602:48:27","nodeType":"YulBlock","src":"6602:48:27","statements":[{"nativeSrc":"6612:32:27","nodeType":"YulAssignment","src":"6612:32:27","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6637:5:27","nodeType":"YulIdentifier","src":"6637:5:27"}],"functionName":{"name":"iszero","nativeSrc":"6630:6:27","nodeType":"YulIdentifier","src":"6630:6:27"},"nativeSrc":"6630:13:27","nodeType":"YulFunctionCall","src":"6630:13:27"}],"functionName":{"name":"iszero","nativeSrc":"6623:6:27","nodeType":"YulIdentifier","src":"6623:6:27"},"nativeSrc":"6623:21:27","nodeType":"YulFunctionCall","src":"6623:21:27"},"variableNames":[{"name":"cleaned","nativeSrc":"6612:7:27","nodeType":"YulIdentifier","src":"6612:7:27"}]}]},"name":"cleanup_t_bool","nativeSrc":"6560:90:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6584:5:27","nodeType":"YulTypedName","src":"6584:5:27","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"6594:7:27","nodeType":"YulTypedName","src":"6594:7:27","type":""}],"src":"6560:90:27"},{"body":{"nativeSrc":"6696:76:27","nodeType":"YulBlock","src":"6696:76:27","statements":[{"body":{"nativeSrc":"6750:16:27","nodeType":"YulBlock","src":"6750:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6759:1:27","nodeType":"YulLiteral","src":"6759:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"6762:1:27","nodeType":"YulLiteral","src":"6762:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6752:6:27","nodeType":"YulIdentifier","src":"6752:6:27"},"nativeSrc":"6752:12:27","nodeType":"YulFunctionCall","src":"6752:12:27"},"nativeSrc":"6752:12:27","nodeType":"YulExpressionStatement","src":"6752:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6719:5:27","nodeType":"YulIdentifier","src":"6719:5:27"},{"arguments":[{"name":"value","nativeSrc":"6741:5:27","nodeType":"YulIdentifier","src":"6741:5:27"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"6726:14:27","nodeType":"YulIdentifier","src":"6726:14:27"},"nativeSrc":"6726:21:27","nodeType":"YulFunctionCall","src":"6726:21:27"}],"functionName":{"name":"eq","nativeSrc":"6716:2:27","nodeType":"YulIdentifier","src":"6716:2:27"},"nativeSrc":"6716:32:27","nodeType":"YulFunctionCall","src":"6716:32:27"}],"functionName":{"name":"iszero","nativeSrc":"6709:6:27","nodeType":"YulIdentifier","src":"6709:6:27"},"nativeSrc":"6709:40:27","nodeType":"YulFunctionCall","src":"6709:40:27"},"nativeSrc":"6706:60:27","nodeType":"YulIf","src":"6706:60:27"}]},"name":"validator_revert_t_bool","nativeSrc":"6656:116:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6689:5:27","nodeType":"YulTypedName","src":"6689:5:27","type":""}],"src":"6656:116:27"},{"body":{"nativeSrc":"6838:77:27","nodeType":"YulBlock","src":"6838:77:27","statements":[{"nativeSrc":"6848:22:27","nodeType":"YulAssignment","src":"6848:22:27","value":{"arguments":[{"name":"offset","nativeSrc":"6863:6:27","nodeType":"YulIdentifier","src":"6863:6:27"}],"functionName":{"name":"mload","nativeSrc":"6857:5:27","nodeType":"YulIdentifier","src":"6857:5:27"},"nativeSrc":"6857:13:27","nodeType":"YulFunctionCall","src":"6857:13:27"},"variableNames":[{"name":"value","nativeSrc":"6848:5:27","nodeType":"YulIdentifier","src":"6848:5:27"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"6903:5:27","nodeType":"YulIdentifier","src":"6903:5:27"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"6879:23:27","nodeType":"YulIdentifier","src":"6879:23:27"},"nativeSrc":"6879:30:27","nodeType":"YulFunctionCall","src":"6879:30:27"},"nativeSrc":"6879:30:27","nodeType":"YulExpressionStatement","src":"6879:30:27"}]},"name":"abi_decode_t_bool_fromMemory","nativeSrc":"6778:137:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"6816:6:27","nodeType":"YulTypedName","src":"6816:6:27","type":""},{"name":"end","nativeSrc":"6824:3:27","nodeType":"YulTypedName","src":"6824:3:27","type":""}],"returnVariables":[{"name":"value","nativeSrc":"6832:5:27","nodeType":"YulTypedName","src":"6832:5:27","type":""}],"src":"6778:137:27"},{"body":{"nativeSrc":"6995:271:27","nodeType":"YulBlock","src":"6995:271:27","statements":[{"body":{"nativeSrc":"7041:83:27","nodeType":"YulBlock","src":"7041:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"7043:77:27","nodeType":"YulIdentifier","src":"7043:77:27"},"nativeSrc":"7043:79:27","nodeType":"YulFunctionCall","src":"7043:79:27"},"nativeSrc":"7043:79:27","nodeType":"YulExpressionStatement","src":"7043:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7016:7:27","nodeType":"YulIdentifier","src":"7016:7:27"},{"name":"headStart","nativeSrc":"7025:9:27","nodeType":"YulIdentifier","src":"7025:9:27"}],"functionName":{"name":"sub","nativeSrc":"7012:3:27","nodeType":"YulIdentifier","src":"7012:3:27"},"nativeSrc":"7012:23:27","nodeType":"YulFunctionCall","src":"7012:23:27"},{"kind":"number","nativeSrc":"7037:2:27","nodeType":"YulLiteral","src":"7037:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"7008:3:27","nodeType":"YulIdentifier","src":"7008:3:27"},"nativeSrc":"7008:32:27","nodeType":"YulFunctionCall","src":"7008:32:27"},"nativeSrc":"7005:119:27","nodeType":"YulIf","src":"7005:119:27"},{"nativeSrc":"7134:125:27","nodeType":"YulBlock","src":"7134:125:27","statements":[{"nativeSrc":"7149:15:27","nodeType":"YulVariableDeclaration","src":"7149:15:27","value":{"kind":"number","nativeSrc":"7163:1:27","nodeType":"YulLiteral","src":"7163:1:27","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"7153:6:27","nodeType":"YulTypedName","src":"7153:6:27","type":""}]},{"nativeSrc":"7178:71:27","nodeType":"YulAssignment","src":"7178:71:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7221:9:27","nodeType":"YulIdentifier","src":"7221:9:27"},{"name":"offset","nativeSrc":"7232:6:27","nodeType":"YulIdentifier","src":"7232:6:27"}],"functionName":{"name":"add","nativeSrc":"7217:3:27","nodeType":"YulIdentifier","src":"7217:3:27"},"nativeSrc":"7217:22:27","nodeType":"YulFunctionCall","src":"7217:22:27"},{"name":"dataEnd","nativeSrc":"7241:7:27","nodeType":"YulIdentifier","src":"7241:7:27"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nativeSrc":"7188:28:27","nodeType":"YulIdentifier","src":"7188:28:27"},"nativeSrc":"7188:61:27","nodeType":"YulFunctionCall","src":"7188:61:27"},"variableNames":[{"name":"value0","nativeSrc":"7178:6:27","nodeType":"YulIdentifier","src":"7178:6:27"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"6921:345:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6965:9:27","nodeType":"YulTypedName","src":"6965:9:27","type":""},{"name":"dataEnd","nativeSrc":"6976:7:27","nodeType":"YulTypedName","src":"6976:7:27","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6988:6:27","nodeType":"YulTypedName","src":"6988:6:27","type":""}],"src":"6921:345:27"},{"body":{"nativeSrc":"7330:40:27","nodeType":"YulBlock","src":"7330:40:27","statements":[{"nativeSrc":"7341:22:27","nodeType":"YulAssignment","src":"7341:22:27","value":{"arguments":[{"name":"value","nativeSrc":"7357:5:27","nodeType":"YulIdentifier","src":"7357:5:27"}],"functionName":{"name":"mload","nativeSrc":"7351:5:27","nodeType":"YulIdentifier","src":"7351:5:27"},"nativeSrc":"7351:12:27","nodeType":"YulFunctionCall","src":"7351:12:27"},"variableNames":[{"name":"length","nativeSrc":"7341:6:27","nodeType":"YulIdentifier","src":"7341:6:27"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"7272:98:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7313:5:27","nodeType":"YulTypedName","src":"7313:5:27","type":""}],"returnVariables":[{"name":"length","nativeSrc":"7323:6:27","nodeType":"YulTypedName","src":"7323:6:27","type":""}],"src":"7272:98:27"},{"body":{"nativeSrc":"7438:184:27","nodeType":"YulBlock","src":"7438:184:27","statements":[{"nativeSrc":"7448:10:27","nodeType":"YulVariableDeclaration","src":"7448:10:27","value":{"kind":"number","nativeSrc":"7457:1:27","nodeType":"YulLiteral","src":"7457:1:27","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"7452:1:27","nodeType":"YulTypedName","src":"7452:1:27","type":""}]},{"body":{"nativeSrc":"7517:63:27","nodeType":"YulBlock","src":"7517:63:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"7542:3:27","nodeType":"YulIdentifier","src":"7542:3:27"},{"name":"i","nativeSrc":"7547:1:27","nodeType":"YulIdentifier","src":"7547:1:27"}],"functionName":{"name":"add","nativeSrc":"7538:3:27","nodeType":"YulIdentifier","src":"7538:3:27"},"nativeSrc":"7538:11:27","nodeType":"YulFunctionCall","src":"7538:11:27"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"7561:3:27","nodeType":"YulIdentifier","src":"7561:3:27"},{"name":"i","nativeSrc":"7566:1:27","nodeType":"YulIdentifier","src":"7566:1:27"}],"functionName":{"name":"add","nativeSrc":"7557:3:27","nodeType":"YulIdentifier","src":"7557:3:27"},"nativeSrc":"7557:11:27","nodeType":"YulFunctionCall","src":"7557:11:27"}],"functionName":{"name":"mload","nativeSrc":"7551:5:27","nodeType":"YulIdentifier","src":"7551:5:27"},"nativeSrc":"7551:18:27","nodeType":"YulFunctionCall","src":"7551:18:27"}],"functionName":{"name":"mstore","nativeSrc":"7531:6:27","nodeType":"YulIdentifier","src":"7531:6:27"},"nativeSrc":"7531:39:27","nodeType":"YulFunctionCall","src":"7531:39:27"},"nativeSrc":"7531:39:27","nodeType":"YulExpressionStatement","src":"7531:39:27"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"7478:1:27","nodeType":"YulIdentifier","src":"7478:1:27"},{"name":"length","nativeSrc":"7481:6:27","nodeType":"YulIdentifier","src":"7481:6:27"}],"functionName":{"name":"lt","nativeSrc":"7475:2:27","nodeType":"YulIdentifier","src":"7475:2:27"},"nativeSrc":"7475:13:27","nodeType":"YulFunctionCall","src":"7475:13:27"},"nativeSrc":"7467:113:27","nodeType":"YulForLoop","post":{"nativeSrc":"7489:19:27","nodeType":"YulBlock","src":"7489:19:27","statements":[{"nativeSrc":"7491:15:27","nodeType":"YulAssignment","src":"7491:15:27","value":{"arguments":[{"name":"i","nativeSrc":"7500:1:27","nodeType":"YulIdentifier","src":"7500:1:27"},{"kind":"number","nativeSrc":"7503:2:27","nodeType":"YulLiteral","src":"7503:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7496:3:27","nodeType":"YulIdentifier","src":"7496:3:27"},"nativeSrc":"7496:10:27","nodeType":"YulFunctionCall","src":"7496:10:27"},"variableNames":[{"name":"i","nativeSrc":"7491:1:27","nodeType":"YulIdentifier","src":"7491:1:27"}]}]},"pre":{"nativeSrc":"7471:3:27","nodeType":"YulBlock","src":"7471:3:27","statements":[]},"src":"7467:113:27"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"7600:3:27","nodeType":"YulIdentifier","src":"7600:3:27"},{"name":"length","nativeSrc":"7605:6:27","nodeType":"YulIdentifier","src":"7605:6:27"}],"functionName":{"name":"add","nativeSrc":"7596:3:27","nodeType":"YulIdentifier","src":"7596:3:27"},"nativeSrc":"7596:16:27","nodeType":"YulFunctionCall","src":"7596:16:27"},{"kind":"number","nativeSrc":"7614:1:27","nodeType":"YulLiteral","src":"7614:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"7589:6:27","nodeType":"YulIdentifier","src":"7589:6:27"},"nativeSrc":"7589:27:27","nodeType":"YulFunctionCall","src":"7589:27:27"},"nativeSrc":"7589:27:27","nodeType":"YulExpressionStatement","src":"7589:27:27"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"7376:246:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"7420:3:27","nodeType":"YulTypedName","src":"7420:3:27","type":""},{"name":"dst","nativeSrc":"7425:3:27","nodeType":"YulTypedName","src":"7425:3:27","type":""},{"name":"length","nativeSrc":"7430:6:27","nodeType":"YulTypedName","src":"7430:6:27","type":""}],"src":"7376:246:27"},{"body":{"nativeSrc":"7736:278:27","nodeType":"YulBlock","src":"7736:278:27","statements":[{"nativeSrc":"7746:52:27","nodeType":"YulVariableDeclaration","src":"7746:52:27","value":{"arguments":[{"name":"value","nativeSrc":"7792:5:27","nodeType":"YulIdentifier","src":"7792:5:27"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"7760:31:27","nodeType":"YulIdentifier","src":"7760:31:27"},"nativeSrc":"7760:38:27","nodeType":"YulFunctionCall","src":"7760:38:27"},"variables":[{"name":"length","nativeSrc":"7750:6:27","nodeType":"YulTypedName","src":"7750:6:27","type":""}]},{"nativeSrc":"7807:95:27","nodeType":"YulAssignment","src":"7807:95:27","value":{"arguments":[{"name":"pos","nativeSrc":"7890:3:27","nodeType":"YulIdentifier","src":"7890:3:27"},{"name":"length","nativeSrc":"7895:6:27","nodeType":"YulIdentifier","src":"7895:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"7814:75:27","nodeType":"YulIdentifier","src":"7814:75:27"},"nativeSrc":"7814:88:27","nodeType":"YulFunctionCall","src":"7814:88:27"},"variableNames":[{"name":"pos","nativeSrc":"7807:3:27","nodeType":"YulIdentifier","src":"7807:3:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7950:5:27","nodeType":"YulIdentifier","src":"7950:5:27"},{"kind":"number","nativeSrc":"7957:4:27","nodeType":"YulLiteral","src":"7957:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7946:3:27","nodeType":"YulIdentifier","src":"7946:3:27"},"nativeSrc":"7946:16:27","nodeType":"YulFunctionCall","src":"7946:16:27"},{"name":"pos","nativeSrc":"7964:3:27","nodeType":"YulIdentifier","src":"7964:3:27"},{"name":"length","nativeSrc":"7969:6:27","nodeType":"YulIdentifier","src":"7969:6:27"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"7911:34:27","nodeType":"YulIdentifier","src":"7911:34:27"},"nativeSrc":"7911:65:27","nodeType":"YulFunctionCall","src":"7911:65:27"},"nativeSrc":"7911:65:27","nodeType":"YulExpressionStatement","src":"7911:65:27"},{"nativeSrc":"7985:23:27","nodeType":"YulAssignment","src":"7985:23:27","value":{"arguments":[{"name":"pos","nativeSrc":"7996:3:27","nodeType":"YulIdentifier","src":"7996:3:27"},{"name":"length","nativeSrc":"8001:6:27","nodeType":"YulIdentifier","src":"8001:6:27"}],"functionName":{"name":"add","nativeSrc":"7992:3:27","nodeType":"YulIdentifier","src":"7992:3:27"},"nativeSrc":"7992:16:27","nodeType":"YulFunctionCall","src":"7992:16:27"},"variableNames":[{"name":"end","nativeSrc":"7985:3:27","nodeType":"YulIdentifier","src":"7985:3:27"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"7628:386:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7717:5:27","nodeType":"YulTypedName","src":"7717:5:27","type":""},{"name":"pos","nativeSrc":"7724:3:27","nodeType":"YulTypedName","src":"7724:3:27","type":""}],"returnVariables":[{"name":"end","nativeSrc":"7732:3:27","nodeType":"YulTypedName","src":"7732:3:27","type":""}],"src":"7628:386:27"},{"body":{"nativeSrc":"8154:137:27","nodeType":"YulBlock","src":"8154:137:27","statements":[{"nativeSrc":"8165:100:27","nodeType":"YulAssignment","src":"8165:100:27","value":{"arguments":[{"name":"value0","nativeSrc":"8252:6:27","nodeType":"YulIdentifier","src":"8252:6:27"},{"name":"pos","nativeSrc":"8261:3:27","nodeType":"YulIdentifier","src":"8261:3:27"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"8172:79:27","nodeType":"YulIdentifier","src":"8172:79:27"},"nativeSrc":"8172:93:27","nodeType":"YulFunctionCall","src":"8172:93:27"},"variableNames":[{"name":"pos","nativeSrc":"8165:3:27","nodeType":"YulIdentifier","src":"8165:3:27"}]},{"nativeSrc":"8275:10:27","nodeType":"YulAssignment","src":"8275:10:27","value":{"name":"pos","nativeSrc":"8282:3:27","nodeType":"YulIdentifier","src":"8282:3:27"},"variableNames":[{"name":"end","nativeSrc":"8275:3:27","nodeType":"YulIdentifier","src":"8275:3:27"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"8020:271:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"8133:3:27","nodeType":"YulTypedName","src":"8133:3:27","type":""},{"name":"value0","nativeSrc":"8139:6:27","nodeType":"YulTypedName","src":"8139:6:27","type":""}],"returnVariables":[{"name":"end","nativeSrc":"8150:3:27","nodeType":"YulTypedName","src":"8150:3:27","type":""}],"src":"8020:271:27"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_uint64(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint64(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n","id":27,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"182":[{"length":32,"start":1715}],"184":[{"length":32,"start":962}],"7316":[{"length":32,"start":1012}]},"linkReferences":{},"object":"6080604052600436106100ec5760003560e01c80638da5cb5b1161008a578063be9a655511610059578063be9a6555146102ef578063efbe1c1c1461031a578063f2fde38b14610345578063fbccedae1461036e576100f3565b80638da5cb5b1461021f578063961325211461024a5780639852595c14610275578063a3f8eace146102b2576100f3565b806319165587116100c6578063191655871461018b578063715018a6146101b4578063810ec23b146101cb57806386d1a69f14610208576100f3565b80630a17b06b146100f85780630fb5a6b41461013557806313d033c014610160576100f3565b366100f357005b600080fd5b34801561010457600080fd5b5061011f600480360381019061011a9190610db7565b610399565b60405161012c9190610dfd565b60405180910390f35b34801561014157600080fd5b5061014a6103be565b6040516101579190610dfd565b60405180910390f35b34801561016c57600080fd5b506101756103f0565b6040516101829190610dfd565b60405180910390f35b34801561019757600080fd5b506101b260048036038101906101ad9190610e76565b610422565b005b3480156101c057600080fd5b506101c96104e9565b005b3480156101d757600080fd5b506101f260048036038101906101ed9190610ea3565b6104fd565b6040516101ff9190610dfd565b60405180910390f35b34801561021457600080fd5b5061021d61059d565b005b34801561022b57600080fd5b5061023461060d565b6040516102419190610ef2565b60405180910390f35b34801561025657600080fd5b5061025f610636565b60405161026c9190610dfd565b60405180910390f35b34801561028157600080fd5b5061029c60048036038101906102979190610e76565b610640565b6040516102a99190610dfd565b60405180910390f35b3480156102be57600080fd5b506102d960048036038101906102d49190610e76565b610689565b6040516102e69190610dfd565b60405180910390f35b3480156102fb57600080fd5b506103046106af565b6040516103119190610dfd565b60405180910390f35b34801561032657600080fd5b5061032f6106e1565b60405161033c9190610dfd565b60405180910390f35b34801561035157600080fd5b5061036c60048036038101906103679190610e76565b610702565b005b34801561037a57600080fd5b50610383610788565b6040516103909190610dfd565b60405180910390f35b60006103b76103a6610636565b476103b19190610f3c565b836107aa565b9050919050565b60007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16905090565b60007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16905090565b600061042d82610689565b905080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461047e9190610f3c565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b826040516104cb9190610dfd565b60405180910390a26104e5826104df61060d565b836107de565b5050565b6104f161085d565b6104fb60006108e4565b565b600061059561050b84610640565b8473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105449190610ef2565b602060405180830381865afa158015610561573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105859190610f9c565b61058f9190610f3c565b836107aa565b905092915050565b60006105a7610788565b905080600160008282546105bb9190610f3c565b925050819055507fda9d4e5f101b8b9b1c5b76d0c5a9f7923571acfc02376aa076b75a8c080c956b816040516105f19190610dfd565b60405180910390a161060a61060461060d565b826109a8565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600154905090565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600061069482610640565b61069e83426104fd565b6106a89190610fc9565b9050919050565b60007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16905090565b60006106eb6103be565b6106f36106af565b6106fd9190610f3c565b905090565b61070a61085d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361077c5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107739190610ef2565b60405180910390fd5b610785816108e4565b50565b6000610792610636565b61079b42610399565b6107a59190610fc9565b905090565b60006107b46103f0565b8267ffffffffffffffff16106107d3576107ce8383610a95565b6107d6565b60005b905092915050565b610858838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610811929190610ffd565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610b1c565b505050565b610865610bb3565b73ffffffffffffffffffffffffffffffffffffffff1661088361060d565b73ffffffffffffffffffffffffffffffffffffffff16146108e2576108a6610bb3565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108d99190610ef2565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b804710156109ed57306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016109e49190610ef2565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff1682604051610a1390611057565b60006040518083038185875af1925050503d8060008114610a50576040519150601f19603f3d011682016040523d82523d6000602084013e610a55565b606091505b5050905080610a90576040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b6000610a9f6106af565b8267ffffffffffffffff161015610ab95760009050610b16565b610ac16106e1565b8267ffffffffffffffff1610610ad957829050610b16565b610ae16103be565b610ae96106af565b8367ffffffffffffffff16610afe9190610fc9565b84610b09919061106c565b610b1391906110dd565b90505b92915050565b6000610b47828473ffffffffffffffffffffffffffffffffffffffff16610bbb90919063ffffffff16565b90506000815114158015610b6c575080806020019051810190610b6a9190611146565b155b15610bae57826040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610ba59190610ef2565b60405180910390fd5b505050565b600033905090565b6060610bc983836000610bd1565b905092915050565b606081471015610c1857306040517fcd786059000000000000000000000000000000000000000000000000000000008152600401610c0f9190610ef2565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff168486604051610c4191906111d9565b60006040518083038185875af1925050503d8060008114610c7e576040519150601f19603f3d011682016040523d82523d6000602084013e610c83565b606091505b5091509150610c93868383610c9e565b925050509392505050565b606082610cb357610cae82610d2d565b610d25565b60008251148015610cdb575060008473ffffffffffffffffffffffffffffffffffffffff163b145b15610d1d57836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401610d149190610ef2565b60405180910390fd5b819050610d26565b5b9392505050565b600081511115610d405780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080fd5b600067ffffffffffffffff82169050919050565b610d9481610d77565b8114610d9f57600080fd5b50565b600081359050610db181610d8b565b92915050565b600060208284031215610dcd57610dcc610d72565b5b6000610ddb84828501610da2565b91505092915050565b6000819050919050565b610df781610de4565b82525050565b6000602082019050610e126000830184610dee565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e4382610e18565b9050919050565b610e5381610e38565b8114610e5e57600080fd5b50565b600081359050610e7081610e4a565b92915050565b600060208284031215610e8c57610e8b610d72565b5b6000610e9a84828501610e61565b91505092915050565b60008060408385031215610eba57610eb9610d72565b5b6000610ec885828601610e61565b9250506020610ed985828601610da2565b9150509250929050565b610eec81610e38565b82525050565b6000602082019050610f076000830184610ee3565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f4782610de4565b9150610f5283610de4565b9250828201905080821115610f6a57610f69610f0d565b5b92915050565b610f7981610de4565b8114610f8457600080fd5b50565b600081519050610f9681610f70565b92915050565b600060208284031215610fb257610fb1610d72565b5b6000610fc084828501610f87565b91505092915050565b6000610fd482610de4565b9150610fdf83610de4565b9250828203905081811115610ff757610ff6610f0d565b5b92915050565b60006040820190506110126000830185610ee3565b61101f6020830184610dee565b9392505050565b600081905092915050565b50565b6000611041600083611026565b915061104c82611031565b600082019050919050565b600061106282611034565b9150819050919050565b600061107782610de4565b915061108283610de4565b925082820261109081610de4565b915082820484148315176110a7576110a6610f0d565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006110e882610de4565b91506110f383610de4565b925082611103576111026110ae565b5b828204905092915050565b60008115159050919050565b6111238161110e565b811461112e57600080fd5b50565b6000815190506111408161111a565b92915050565b60006020828403121561115c5761115b610d72565b5b600061116a84828501611131565b91505092915050565b600081519050919050565b60005b8381101561119c578082015181840152602081019050611181565b60008484015250505050565b60006111b382611173565b6111bd8185611026565b93506111cd81856020860161117e565b80840191505092915050565b60006111e582846111a8565b91508190509291505056fea2646970667358221220aa28310c10f774f380d3f254eb1d7a6a675e9f6727cc4981d234a026676206f564736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEC JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xBE9A6555 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0xEFBE1C1C EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0xFBCCEDAE EQ PUSH2 0x36E JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x96132521 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x9852595C EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0xA3F8EACE EQ PUSH2 0x2B2 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x19165587 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x19165587 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x810EC23B EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x86D1A69F EQ PUSH2 0x208 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0xA17B06B EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x13D033C0 EQ PUSH2 0x160 JUMPI PUSH2 0xF3 JUMP JUMPDEST CALLDATASIZE PUSH2 0xF3 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0xDB7 JUMP JUMPDEST PUSH2 0x399 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14A PUSH2 0x3BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x157 SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x175 PUSH2 0x3F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xE76 JUMP JUMPDEST PUSH2 0x422 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C9 PUSH2 0x4E9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0xEA3 JUMP JUMPDEST PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21D PUSH2 0x59D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH2 0x60D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x636 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26C SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0xE76 JUMP JUMPDEST PUSH2 0x640 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0xE76 JUMP JUMPDEST PUSH2 0x689 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x304 PUSH2 0x6AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x311 SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32F PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33C SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x367 SWAP2 SWAP1 PUSH2 0xE76 JUMP JUMPDEST PUSH2 0x702 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x788 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x390 SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x3B7 PUSH2 0x3A6 PUSH2 0x636 JUMP JUMPDEST SELFBALANCE PUSH2 0x3B1 SWAP2 SWAP1 PUSH2 0xF3C JUMP JUMPDEST DUP4 PUSH2 0x7AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42D DUP3 PUSH2 0x689 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x47E SWAP2 SWAP1 PUSH2 0xF3C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B DUP3 PUSH1 0x40 MLOAD PUSH2 0x4CB SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x4E5 DUP3 PUSH2 0x4DF PUSH2 0x60D JUMP JUMPDEST DUP4 PUSH2 0x7DE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x4F1 PUSH2 0x85D JUMP JUMPDEST PUSH2 0x4FB PUSH1 0x0 PUSH2 0x8E4 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x595 PUSH2 0x50B DUP5 PUSH2 0x640 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x544 SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x561 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x585 SWAP2 SWAP1 PUSH2 0xF9C JUMP JUMPDEST PUSH2 0x58F SWAP2 SWAP1 PUSH2 0xF3C JUMP JUMPDEST DUP4 PUSH2 0x7AA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A7 PUSH2 0x788 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5BB SWAP2 SWAP1 PUSH2 0xF3C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xDA9D4E5F101B8B9B1C5B76D0C5A9F7923571ACFC02376AA076B75A8C080C956B DUP2 PUSH1 0x40 MLOAD PUSH2 0x5F1 SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x60A PUSH2 0x604 PUSH2 0x60D JUMP JUMPDEST DUP3 PUSH2 0x9A8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x694 DUP3 PUSH2 0x640 JUMP JUMPDEST PUSH2 0x69E DUP4 TIMESTAMP PUSH2 0x4FD JUMP JUMPDEST PUSH2 0x6A8 SWAP2 SWAP1 PUSH2 0xFC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6EB PUSH2 0x3BE JUMP JUMPDEST PUSH2 0x6F3 PUSH2 0x6AF JUMP JUMPDEST PUSH2 0x6FD SWAP2 SWAP1 PUSH2 0xF3C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x70A PUSH2 0x85D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x77C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x773 SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x785 DUP2 PUSH2 0x8E4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x792 PUSH2 0x636 JUMP JUMPDEST PUSH2 0x79B TIMESTAMP PUSH2 0x399 JUMP JUMPDEST PUSH2 0x7A5 SWAP2 SWAP1 PUSH2 0xFC9 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B4 PUSH2 0x3F0 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT PUSH2 0x7D3 JUMPI PUSH2 0x7CE DUP4 DUP4 PUSH2 0xA95 JUMP JUMPDEST PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x858 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x811 SWAP3 SWAP2 SWAP1 PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xB1C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x865 PUSH2 0xBB3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x883 PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8E2 JUMPI PUSH2 0x8A6 PUSH2 0xBB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D9 SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x9ED JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E4 SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xA13 SWAP1 PUSH2 0x1057 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA50 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA55 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA90 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA9F PUSH2 0x6AF JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0xAB9 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xB16 JUMP JUMPDEST PUSH2 0xAC1 PUSH2 0x6E1 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT PUSH2 0xAD9 JUMPI DUP3 SWAP1 POP PUSH2 0xB16 JUMP JUMPDEST PUSH2 0xAE1 PUSH2 0x3BE JUMP JUMPDEST PUSH2 0xAE9 PUSH2 0x6AF JUMP JUMPDEST DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0xAFE SWAP2 SWAP1 PUSH2 0xFC9 JUMP JUMPDEST DUP5 PUSH2 0xB09 SWAP2 SWAP1 PUSH2 0x106C JUMP JUMPDEST PUSH2 0xB13 SWAP2 SWAP1 PUSH2 0x10DD JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB47 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBBB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0xB6C JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xB6A SWAP2 SWAP1 PUSH2 0x1146 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xBAE JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xBC9 DUP4 DUP4 PUSH1 0x0 PUSH2 0xBD1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0xC18 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0F SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0xC41 SWAP2 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC7E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC83 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xC93 DUP7 DUP4 DUP4 PUSH2 0xC9E JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0xCB3 JUMPI PUSH2 0xCAE DUP3 PUSH2 0xD2D JUMP JUMPDEST PUSH2 0xD25 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0xCDB JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xD1D JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD14 SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0xD26 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xD40 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD94 DUP2 PUSH2 0xD77 JUMP JUMPDEST DUP2 EQ PUSH2 0xD9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDB1 DUP2 PUSH2 0xD8B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDCD JUMPI PUSH2 0xDCC PUSH2 0xD72 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDDB DUP5 DUP3 DUP6 ADD PUSH2 0xDA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF7 DUP2 PUSH2 0xDE4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE12 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDEE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE43 DUP3 PUSH2 0xE18 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE53 DUP2 PUSH2 0xE38 JUMP JUMPDEST DUP2 EQ PUSH2 0xE5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE70 DUP2 PUSH2 0xE4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE8C JUMPI PUSH2 0xE8B PUSH2 0xD72 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE9A DUP5 DUP3 DUP6 ADD PUSH2 0xE61 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEBA JUMPI PUSH2 0xEB9 PUSH2 0xD72 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEC8 DUP6 DUP3 DUP7 ADD PUSH2 0xE61 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xED9 DUP6 DUP3 DUP7 ADD PUSH2 0xDA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xEEC DUP2 PUSH2 0xE38 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF07 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF47 DUP3 PUSH2 0xDE4 JUMP JUMPDEST SWAP2 POP PUSH2 0xF52 DUP4 PUSH2 0xDE4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xF6A JUMPI PUSH2 0xF69 PUSH2 0xF0D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF79 DUP2 PUSH2 0xDE4 JUMP JUMPDEST DUP2 EQ PUSH2 0xF84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xF96 DUP2 PUSH2 0xF70 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFB2 JUMPI PUSH2 0xFB1 PUSH2 0xD72 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFC0 DUP5 DUP3 DUP6 ADD PUSH2 0xF87 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD4 DUP3 PUSH2 0xDE4 JUMP JUMPDEST SWAP2 POP PUSH2 0xFDF DUP4 PUSH2 0xDE4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xFF7 JUMPI PUSH2 0xFF6 PUSH2 0xF0D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1012 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xEE3 JUMP JUMPDEST PUSH2 0x101F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDEE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1041 PUSH1 0x0 DUP4 PUSH2 0x1026 JUMP JUMPDEST SWAP2 POP PUSH2 0x104C DUP3 PUSH2 0x1031 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1062 DUP3 PUSH2 0x1034 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1077 DUP3 PUSH2 0xDE4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1082 DUP4 PUSH2 0xDE4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1090 DUP2 PUSH2 0xDE4 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x10A7 JUMPI PUSH2 0x10A6 PUSH2 0xF0D JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10E8 DUP3 PUSH2 0xDE4 JUMP JUMPDEST SWAP2 POP PUSH2 0x10F3 DUP4 PUSH2 0xDE4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1103 JUMPI PUSH2 0x1102 PUSH2 0x10AE JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1123 DUP2 PUSH2 0x110E JUMP JUMPDEST DUP2 EQ PUSH2 0x112E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1140 DUP2 PUSH2 0x111A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x115C JUMPI PUSH2 0x115B PUSH2 0xD72 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x116A DUP5 DUP3 DUP6 ADD PUSH2 0x1131 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x119C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11B3 DUP3 PUSH2 0x1173 JUMP JUMPDEST PUSH2 0x11BD DUP2 DUP6 PUSH2 0x1026 JUMP JUMPDEST SWAP4 POP PUSH2 0x11CD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x117E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11E5 DUP3 DUP5 PUSH2 0x11A8 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA 0x28 BALANCE 0xC LT 0xF7 PUSH21 0xF380D3F254EB1D7A6A675E9F6727CC4981D234A026 PUSH8 0x6206F564736F6C63 NUMBER STOP ADDMOD XOR STOP CALLER ","sourceMap":"189:309:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4613:165:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2662:91;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;953:85:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4227:246:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;4919:202:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3905:198;;;;;;;;;;;;;:::i;:::-;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2979:91:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3137:116;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3608:159;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2510:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2817:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3328:134:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4613:165;4682:7;4708:63;4749:10;:8;:10::i;:::-;4725:21;:34;;;;:::i;:::-;4761:9;4708:16;:63::i;:::-;4701:70;;4613:165;;;:::o;2662:91::-;2711:7;2737:9;2730:16;;;;2662:91;:::o;953:85:25:-;999:7;1025:6;1018:13;;;;953:85;:::o;4227:246:1:-;4284:14;4301:17;4312:5;4301:10;:17::i;:::-;4284:34;;4353:6;4328:14;:21;4343:5;4328:21;;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;4388:5;4374:28;;;4395:6;4374:28;;;;;;:::i;:::-;;;;;;;;4412:54;4442:5;4450:7;:5;:7::i;:::-;4459:6;4412:22;:54::i;:::-;4274:199;4227:246;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;4919:202:1:-;5003:7;5029:85;5087:15;5096:5;5087:8;:15::i;:::-;5053:5;5046:23;;;5078:4;5046:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:56;;;;:::i;:::-;5104:9;5029:16;:85::i;:::-;5022:92;;4919:202;;;;:::o;3905:198::-;3949:14;3966:12;:10;:12::i;:::-;3949:29;;4001:6;3988:9;;:19;;;;;;;:::i;:::-;;;;;;;;4022:21;4036:6;4022:21;;;;;;:::i;:::-;;;;;;;;4053:43;4079:7;:5;:7::i;:::-;4089:6;4053:17;:43::i;:::-;3939:164;3905:198::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2979:91:1:-;3028:7;3054:9;;3047:16;;2979:91;:::o;3137:116::-;3199:7;3225:14;:21;3240:5;3225:21;;;;;;;;;;;;;;;;3218:28;;3137:116;;;:::o;3608:159::-;3672:7;3745:15;3754:5;3745:8;:15::i;:::-;3698:44;3711:5;3725:15;3698:12;:44::i;:::-;:62;;;;:::i;:::-;3691:69;;3608:159;;;:::o;2510:85::-;2556:7;2582:6;2575:13;;;;2510:85;:::o;2817:97::-;2861:7;2897:10;:8;:10::i;:::-;2887:7;:5;:7::i;:::-;:20;;;;:::i;:::-;2880:27;;2817:97;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;3328:134:1:-;3379:7;3445:10;:8;:10::i;:::-;3405:37;3425:15;3405:12;:37::i;:::-;:50;;;;:::i;:::-;3398:57;;3328:134;:::o;1617:240:25:-;1748:7;1786;:5;:7::i;:::-;1774:9;:19;;;:76;;1800:50;1823:15;1840:9;1800:22;:50::i;:::-;1774:76;;;1796:1;1774:76;1767:83;;1617:240;;;;:::o;1303:160:9:-;1385:71;1405:5;1427;:14;;;1444:2;1448:5;1412:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1385:19;:71::i;:::-;1303:160;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1531:331:10:-;1640:6;1616:21;:30;1612:109;;;1704:4;1669:41;;;;;;;;;;;:::i;:::-;;;;;;;;1612:109;1732:12;1750:9;:14;;1772:6;1750:33;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1731:52;;;1798:7;1793:63;;1828:17;;;;;;;;;;;;;;1793:63;1602:260;1531:331;;:::o;5316:352:1:-;5416:7;5451;:5;:7::i;:::-;5439:9;:19;;;5435:227;;;5481:1;5474:8;;;;5435:227;5516:5;:3;:5::i;:::-;5503:9;:18;;;5499:163;;5544:15;5537:22;;;;5499:163;5641:10;:8;:10::i;:::-;5629:7;:5;:7::i;:::-;5617:9;:19;;;;;;:::i;:::-;5598:15;:39;;;;:::i;:::-;5597:54;;;;:::i;:::-;5590:61;;5316:352;;;;;:::o;4059:629:9:-;4478:23;4504:33;4532:4;4512:5;4504:27;;;;:33;;;;:::i;:::-;4478:59;;4572:1;4551:10;:17;:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4664:5;4631:40;;;;;;;;;;;:::i;:::-;;;;;;;;4547:135;4129:559;4059:629;;:::o;656:96:11:-;709:7;735:10;728:17;;656:96;:::o;2705:151:10:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3394:4;3359:41;;;;;;;;;;;:::i;:::-;;;;;;;;3303:108;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;88:117:27;197:1;194;187:12;334:101;370:7;410:18;403:5;399:30;388:41;;334:101;;;:::o;441:120::-;513:23;530:5;513:23;:::i;:::-;506:5;503:34;493:62;;551:1;548;541:12;493:62;441:120;:::o;567:137::-;612:5;650:6;637:20;628:29;;666:32;692:5;666:32;:::i;:::-;567:137;;;;:::o;710:327::-;768:6;817:2;805:9;796:7;792:23;788:32;785:119;;;823:79;;:::i;:::-;785:119;943:1;968:52;1012:7;1003:6;992:9;988:22;968:52;:::i;:::-;958:62;;914:116;710:327;;;;:::o;1043:77::-;1080:7;1109:5;1098:16;;1043:77;;;:::o;1126:118::-;1213:24;1231:5;1213:24;:::i;:::-;1208:3;1201:37;1126:118;;:::o;1250:222::-;1343:4;1381:2;1370:9;1366:18;1358:26;;1394:71;1462:1;1451:9;1447:17;1438:6;1394:71;:::i;:::-;1250:222;;;;:::o;1478:126::-;1515:7;1555:42;1548:5;1544:54;1533:65;;1478:126;;;:::o;1610:96::-;1647:7;1676:24;1694:5;1676:24;:::i;:::-;1665:35;;1610:96;;;:::o;1712:122::-;1785:24;1803:5;1785:24;:::i;:::-;1778:5;1775:35;1765:63;;1824:1;1821;1814:12;1765:63;1712:122;:::o;1840:139::-;1886:5;1924:6;1911:20;1902:29;;1940:33;1967:5;1940:33;:::i;:::-;1840:139;;;;:::o;1985:329::-;2044:6;2093:2;2081:9;2072:7;2068:23;2064:32;2061:119;;;2099:79;;:::i;:::-;2061:119;2219:1;2244:53;2289:7;2280:6;2269:9;2265:22;2244:53;:::i;:::-;2234:63;;2190:117;1985:329;;;;:::o;2320:472::-;2387:6;2395;2444:2;2432:9;2423:7;2419:23;2415:32;2412:119;;;2450:79;;:::i;:::-;2412:119;2570:1;2595:53;2640:7;2631:6;2620:9;2616:22;2595:53;:::i;:::-;2585:63;;2541:117;2697:2;2723:52;2767:7;2758:6;2747:9;2743:22;2723:52;:::i;:::-;2713:62;;2668:117;2320:472;;;;;:::o;2798:118::-;2885:24;2903:5;2885:24;:::i;:::-;2880:3;2873:37;2798:118;;:::o;2922:222::-;3015:4;3053:2;3042:9;3038:18;3030:26;;3066:71;3134:1;3123:9;3119:17;3110:6;3066:71;:::i;:::-;2922:222;;;;:::o;3150:180::-;3198:77;3195:1;3188:88;3295:4;3292:1;3285:15;3319:4;3316:1;3309:15;3336:191;3376:3;3395:20;3413:1;3395:20;:::i;:::-;3390:25;;3429:20;3447:1;3429:20;:::i;:::-;3424:25;;3472:1;3469;3465:9;3458:16;;3493:3;3490:1;3487:10;3484:36;;;3500:18;;:::i;:::-;3484:36;3336:191;;;;:::o;3533:122::-;3606:24;3624:5;3606:24;:::i;:::-;3599:5;3596:35;3586:63;;3645:1;3642;3635:12;3586:63;3533:122;:::o;3661:143::-;3718:5;3749:6;3743:13;3734:22;;3765:33;3792:5;3765:33;:::i;:::-;3661:143;;;;:::o;3810:351::-;3880:6;3929:2;3917:9;3908:7;3904:23;3900:32;3897:119;;;3935:79;;:::i;:::-;3897:119;4055:1;4080:64;4136:7;4127:6;4116:9;4112:22;4080:64;:::i;:::-;4070:74;;4026:128;3810:351;;;;:::o;4167:194::-;4207:4;4227:20;4245:1;4227:20;:::i;:::-;4222:25;;4261:20;4279:1;4261:20;:::i;:::-;4256:25;;4305:1;4302;4298:9;4290:17;;4329:1;4323:4;4320:11;4317:37;;;4334:18;;:::i;:::-;4317:37;4167:194;;;;:::o;4367:332::-;4488:4;4526:2;4515:9;4511:18;4503:26;;4539:71;4607:1;4596:9;4592:17;4583:6;4539:71;:::i;:::-;4620:72;4688:2;4677:9;4673:18;4664:6;4620:72;:::i;:::-;4367:332;;;;;:::o;4705:147::-;4806:11;4843:3;4828:18;;4705:147;;;;:::o;4858:114::-;;:::o;4978:398::-;5137:3;5158:83;5239:1;5234:3;5158:83;:::i;:::-;5151:90;;5250:93;5339:3;5250:93;:::i;:::-;5368:1;5363:3;5359:11;5352:18;;4978:398;;;:::o;5382:379::-;5566:3;5588:147;5731:3;5588:147;:::i;:::-;5581:154;;5752:3;5745:10;;5382:379;;;:::o;5767:410::-;5807:7;5830:20;5848:1;5830:20;:::i;:::-;5825:25;;5864:20;5882:1;5864:20;:::i;:::-;5859:25;;5919:1;5916;5912:9;5941:30;5959:11;5941:30;:::i;:::-;5930:41;;6120:1;6111:7;6107:15;6104:1;6101:22;6081:1;6074:9;6054:83;6031:139;;6150:18;;:::i;:::-;6031:139;5815:362;5767:410;;;;:::o;6183:180::-;6231:77;6228:1;6221:88;6328:4;6325:1;6318:15;6352:4;6349:1;6342:15;6369:185;6409:1;6426:20;6444:1;6426:20;:::i;:::-;6421:25;;6460:20;6478:1;6460:20;:::i;:::-;6455:25;;6499:1;6489:35;;6504:18;;:::i;:::-;6489:35;6546:1;6543;6539:9;6534:14;;6369:185;;;;:::o;6560:90::-;6594:7;6637:5;6630:13;6623:21;6612:32;;6560:90;;;:::o;6656:116::-;6726:21;6741:5;6726:21;:::i;:::-;6719:5;6716:32;6706:60;;6762:1;6759;6752:12;6706:60;6656:116;:::o;6778:137::-;6832:5;6863:6;6857:13;6848:22;;6879:30;6903:5;6879:30;:::i;:::-;6778:137;;;;:::o;6921:345::-;6988:6;7037:2;7025:9;7016:7;7012:23;7008:32;7005:119;;;7043:79;;:::i;:::-;7005:119;7163:1;7188:61;7241:7;7232:6;7221:9;7217:22;7188:61;:::i;:::-;7178:71;;7134:125;6921:345;;;;:::o;7272:98::-;7323:6;7357:5;7351:12;7341:22;;7272:98;;;:::o;7376:246::-;7457:1;7467:113;7481:6;7478:1;7475:13;7467:113;;;7566:1;7561:3;7557:11;7551:18;7547:1;7542:3;7538:11;7531:39;7503:2;7500:1;7496:10;7491:15;;7467:113;;;7614:1;7605:6;7600:3;7596:16;7589:27;7438:184;7376:246;;;:::o;7628:386::-;7732:3;7760:38;7792:5;7760:38;:::i;:::-;7814:88;7895:6;7890:3;7814:88;:::i;:::-;7807:95;;7911:65;7969:6;7964:3;7957:4;7950:5;7946:16;7911:65;:::i;:::-;8001:6;7996:3;7992:16;7985:23;;7736:278;7628:386;;;;:::o;8020:271::-;8150:3;8172:93;8261:3;8252:6;8172:93;:::i;:::-;8165:100;;8282:3;8275:10;;8020:271;;;;:::o"},"methodIdentifiers":{"cliff()":"13d033c0","duration()":"0fb5a6b4","end()":"efbe1c1c","owner()":"8da5cb5b","releasable()":"fbccedae","releasable(address)":"a3f8eace","release()":"86d1a69f","release(address)":"19165587","released()":"96132521","released(address)":"9852595c","renounceOwnership()":"715018a6","start()":"be9a6555","transferOwnership(address)":"f2fde38b","vestedAmount(address,uint64)":"810ec23b","vestedAmount(uint64)":"0a17b06b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"durationSeconds\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"cliffSeconds\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"cliffSeconds\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"durationSeconds\",\"type\":\"uint64\"}],\"name\":\"InvalidCliffDuration\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Released\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EtherReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"cliff\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"end\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"releasable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releasable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"vestedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"vestedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidCliffDuration(uint64,uint64)\":[{\"details\":\"The specified cliff duration is larger than the vesting duration.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"cliff()\":{\"details\":\"Getter for the cliff timestamp.\"},\"duration()\":{\"details\":\"Getter for the vesting duration.\"},\"end()\":{\"details\":\"Getter for the end timestamp.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"releasable()\":{\"details\":\"Getter for the amount of releasable eth.\"},\"releasable(address)\":{\"details\":\"Getter for the amount of releasable `token` tokens. `token` should be the address of an IERC20 contract.\"},\"release()\":{\"details\":\"Release the native token (ether) that have already vested. Emits a {EtherReleased} event.\"},\"release(address)\":{\"details\":\"Release the tokens that have already vested. Emits a {ERC20Released} event.\"},\"released()\":{\"details\":\"Amount of eth already released\"},\"released(address)\":{\"details\":\"Amount of token already released\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"start()\":{\"details\":\"Getter for the start timestamp.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"vestedAmount(address,uint64)\":{\"details\":\"Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve.\"},\"vestedAmount(uint64)\":{\"details\":\"Calculates the amount of ether that has already vested. Default implementation is a linear vesting curve.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyVestingWallet.sol\":\"MyVestingWallet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/finance/VestingWallet.sol\":{\"keccak256\":\"0xe46e33a420df1cf184e1c64f8bbaf0943b548bc264cca7591e447268acc04e8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6b7d43c2e04b6340585b575e8faf3b64ab44a81339124edaa8f1d0ffbe1f340\",\"dweb:/ipfs/QmRspj2wscchcRGFEUVRLXU8K6irbiTzvdf8cz7nKeQZz5\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"contracts/MyVestingWallet.sol\":{\"keccak256\":\"0x96ab5d00e4c8f5cebbcfa6f804c297ed0a488d52dc84a8b2306fc1826ca4279f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50b40fafa3541710471b3cd70bbf73a5350f9ed1b2a0dd3ba20d43082f606398\",\"dweb:/ipfs/QmWuRz7LBM3yBMy5ch1fN9UKdcAYJjQ7rx5xkSAnqQoXxU\"]},\"contracts/abstract/VestingWalletCliff.sol\":{\"keccak256\":\"0x731eb8a72b7ba86cb93f3b740d8cf973a90e764b11f09228b3bfd845bbab334a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05f0162e4026c26e407283c01fe99e3b22612f196cf9007a9e6513baa5a731d2\",\"dweb:/ipfs/QmWr9NExvA8Y1eCgvWmMHHQiBkoWSRFLd4aHeN4unv253q\"]}},\"version\":1}"}},"contracts/abstract/VestingWalletCliff.sol":{"VestingWalletCliff":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[{"internalType":"uint64","name":"cliffSeconds","type":"uint64"},{"internalType":"uint64","name":"durationSeconds","type":"uint64"}],"name":"InvalidCliffDuration","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ERC20Released","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"EtherReleased","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"cliff","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"duration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"end","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"releasable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"releasable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"release","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"release","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"released","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"released","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"start","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"timestamp","type":"uint64"}],"name":"vestedAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint64","name":"timestamp","type":"uint64"}],"name":"vestedAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"cliff()":"13d033c0","duration()":"0fb5a6b4","end()":"efbe1c1c","owner()":"8da5cb5b","releasable()":"fbccedae","releasable(address)":"a3f8eace","release()":"86d1a69f","release(address)":"19165587","released()":"96132521","released(address)":"9852595c","renounceOwnership()":"715018a6","start()":"be9a6555","transferOwnership(address)":"f2fde38b","vestedAmount(address,uint64)":"810ec23b","vestedAmount(uint64)":"0a17b06b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"cliffSeconds\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"durationSeconds\",\"type\":\"uint64\"}],\"name\":\"InvalidCliffDuration\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Released\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EtherReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"cliff\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"end\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"releasable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releasable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"vestedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"vestedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Extension of {VestingWallet} that adds a cliff to the vesting schedule.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidCliffDuration(uint64,uint64)\":[{\"details\":\"The specified cliff duration is larger than the vesting duration.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"cliff()\":{\"details\":\"Getter for the cliff timestamp.\"},\"constructor\":{\"details\":\"Set the start timestamp of the vesting wallet cliff.\"},\"duration()\":{\"details\":\"Getter for the vesting duration.\"},\"end()\":{\"details\":\"Getter for the end timestamp.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"releasable()\":{\"details\":\"Getter for the amount of releasable eth.\"},\"releasable(address)\":{\"details\":\"Getter for the amount of releasable `token` tokens. `token` should be the address of an IERC20 contract.\"},\"release()\":{\"details\":\"Release the native token (ether) that have already vested. Emits a {EtherReleased} event.\"},\"release(address)\":{\"details\":\"Release the tokens that have already vested. Emits a {ERC20Released} event.\"},\"released()\":{\"details\":\"Amount of eth already released\"},\"released(address)\":{\"details\":\"Amount of token already released\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"start()\":{\"details\":\"Getter for the start timestamp.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"vestedAmount(address,uint64)\":{\"details\":\"Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve.\"},\"vestedAmount(uint64)\":{\"details\":\"Calculates the amount of ether that has already vested. Default implementation is a linear vesting curve.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/abstract/VestingWalletCliff.sol\":\"VestingWalletCliff\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/finance/VestingWallet.sol\":{\"keccak256\":\"0xe46e33a420df1cf184e1c64f8bbaf0943b548bc264cca7591e447268acc04e8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6b7d43c2e04b6340585b575e8faf3b64ab44a81339124edaa8f1d0ffbe1f340\",\"dweb:/ipfs/QmRspj2wscchcRGFEUVRLXU8K6irbiTzvdf8cz7nKeQZz5\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"contracts/abstract/VestingWalletCliff.sol\":{\"keccak256\":\"0x731eb8a72b7ba86cb93f3b740d8cf973a90e764b11f09228b3bfd845bbab334a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05f0162e4026c26e407283c01fe99e3b22612f196cf9007a9e6513baa5a731d2\",\"dweb:/ipfs/QmWr9NExvA8Y1eCgvWmMHHQiBkoWSRFLd4aHeN4unv253q\"]}},\"version\":1}"}},"contracts/tax/ITaxHandler.sol":{"ITaxHandler":{"abi":[{"inputs":[{"internalType":"address","name":"benefactor","type":"address"},{"internalType":"address","name":"beneficiary","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getTax","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getTax(address,address,uint256)":"d7ad21ac"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"benefactor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Any class that implements this interface can be used for protocol-specific tax calculations.\",\"kind\":\"dev\",\"methods\":{\"getTax(address,address,uint256)\":{\"params\":{\"amount\":\"Number of tokens in the transfer.\",\"benefactor\":\"Address of the benefactor.\",\"beneficiary\":\"Address of the beneficiary.\"},\"returns\":{\"_0\":\"Number of tokens to pay as tax.\"}}},\"title\":\"Tax handler interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getTax(address,address,uint256)\":{\"notice\":\"Get number of tokens to pay as tax.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tax/ITaxHandler.sol\":\"ITaxHandler\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/tax/ITaxHandler.sol\":{\"keccak256\":\"0xfbe50a73a526b7425030b98d2659fd5e5eb4222102f59c5b620d1c77a0178518\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b720ef524c3d25af70f56f19eff096a2142d6d3d606166b326a96f5c0afd49db\",\"dweb:/ipfs/QmWukwdeBzzMRzemBxFc8nK2yZkhjDP8r4b8abGuWuBdF4\"]}},\"version\":1}"}}}}}