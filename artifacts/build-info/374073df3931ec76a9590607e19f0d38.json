{"id":"374073df3931ec76a9590607e19f0d38","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position is the index of the value in the `values` array plus 1.\n        // Position 0 is used to mean a value is not in the set.\n        mapping(bytes32 value => uint256) _positions;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._positions[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We cache the value's position to prevent multiple reads from the same storage slot\n        uint256 position = set._positions[value];\n\n        if (position != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 valueIndex = position - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (valueIndex != lastIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the lastValue to the index where the value to delete is\n                set._values[valueIndex] = lastValue;\n                // Update the tracked position of the lastValue (that was just moved)\n                set._positions[lastValue] = position;\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the tracked position for the deleted slot\n            delete set._positions[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._positions[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"contracts/tax/ITaxHandler.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\n/**\n * @title Tax handler interface\n * @dev Any class that implements this interface can be used for protocol-specific tax calculations.\n */\ninterface ITaxHandler {\n    /**\n     * @notice Get number of tokens to pay as tax.\n     * @param benefactor Address of the benefactor.\n     * @param beneficiary Address of the beneficiary.\n     * @param amount Number of tokens in the transfer.\n     * @return Number of tokens to pay as tax.\n     */\n    function getTax(\n        address benefactor,\n        address beneficiary,\n        uint256 amount\n    ) external view returns (uint256);\n}"},"contracts/tax/StaticTaxHandler.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\nimport \"./ITaxHandler.sol\";\n\n/**\n * @title Static tax handler contract\n * @dev This contract allows protocols to collect tax on transactions that count as either sells or liquidity additions\n * to exchange pools. Addresses can be exempted from tax collection, and addresses designated as exchange pools can be\n * added and removed by the owner of this contract. The owner of the contract should be set to a DAO-controlled timelock\n * or at the very least a multisig wallet.\n */\ncontract StaticTaxHandler is ITaxHandler, Ownable {\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    /// @dev The set of addresses exempt from tax.\n    EnumerableSet.AddressSet private _exempted;\n\n    uint256 public taxPercentage;\n\n    /// @notice Emitted when the tax is updated.\n    event TaxPercentageUpdated(uint256 oldTaxPercentage, uint256 newTaxPercentage);\n\n    /// @notice Emitted when an address is added to or removed from the exempted addresses set.\n    event TaxExemptionUpdated(address indexed wallet, bool exempted);\n\n    /**\n     * @param initialTaxPercentage The number of tax percentage to start out with for tax calculations.\n     */\n    constructor(address initialOwner, uint256 initialTaxPercentage)\n      Ownable(initialOwner)\n    {\n        taxPercentage = initialTaxPercentage;\n    }\n\n    function getTax(\n        address benefactor,\n        address beneficiary,\n        uint256 amount\n    ) external view override returns (uint256) {\n        if (_exempted.contains(benefactor) || _exempted.contains(beneficiary)) {\n            return 0;\n        }\n\n        return amount * taxPercentage / 100_000_000;\n    }\n\n    /**\n     * @notice Set new number for tax basis points. This number can only ever be lowered.\n     * @param newTaxPercentage New tax basis points number to set for calculations.\n     */\n    function setTaxPercentage(uint256 newTaxPercentage) external onlyOwner {\n        require(\n            newTaxPercentage >= 0,\n            \"Invalid Value.\"\n        );\n\n        uint256 oldTaxPercentage = taxPercentage;\n        taxPercentage = newTaxPercentage;\n\n        emit TaxPercentageUpdated(oldTaxPercentage, newTaxPercentage);\n    }\n\n    /**\n     * @notice Add address to set of tax-exempted addresses.\n     * @param exemption Address to add to set of tax-exempted addresses.\n     */\n    function addExemption(address exemption) external onlyOwner {\n        if (_exempted.add(exemption)) {\n            emit TaxExemptionUpdated(exemption, true);\n        }\n    }\n\n    /**\n     * @notice Remove address from set of tax-exempted addresses.\n     * @param exemption Address to remove from set of tax-exempted addresses.\n     */\n    function removeExemption(address exemption) external onlyOwner {\n        if (_exempted.remove(exemption)) {\n            emit TaxExemptionUpdated(exemption, false);\n        }\n    }\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[177],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":178,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":177,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,177],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[177]},"id":178,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"127:496:1","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":177,"linearizedBaseContracts":[177],"name":"Context","nameLocation":"642:7:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":158,"nodeType":"Block","src":"718:34:1","statements":[{"expression":{"expression":{"id":155,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:1","memberName":"sender","nodeType":"MemberAccess","src":"735:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":154,"id":157,"nodeType":"Return","src":"728:17:1"}]},"id":159,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:1","nodeType":"FunctionDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[],"src":"675:2:1"},"returnParameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":159,"src":"709:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:1"},"scope":177,"src":"656:96:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":167,"nodeType":"Block","src":"825:32:1","statements":[{"expression":{"expression":{"id":164,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:1","memberName":"data","nodeType":"MemberAccess","src":"842:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":163,"id":166,"nodeType":"Return","src":"835:15:1"}]},"id":168,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:1","nodeType":"FunctionDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[],"src":"775:2:1"},"returnParameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":168,"src":"809:14:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":161,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:1"},"scope":177,"src":"758:99:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":175,"nodeType":"Block","src":"935:25:1","statements":[{"expression":{"hexValue":"30","id":173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":172,"id":174,"nodeType":"Return","src":"945:8:1"}]},"id":176,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:1","nodeType":"FunctionDefinition","parameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"892:2:1"},"returnParameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":176,"src":"926:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":170,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:1"},"scope":177,"src":"863:97:1","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":178,"src":"624:338:1","usedErrors":[],"usedEvents":[]}],"src":"101:862:1"},"id":1},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[790]},"id":791,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":179,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"205:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSet","contractDependencies":[],"contractKind":"library","documentation":{"id":180,"nodeType":"StructuredDocumentation","src":"231:1098:2","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":790,"linearizedBaseContracts":[790],"name":"EnumerableSet","nameLocation":"1338:13:2","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":188,"members":[{"constant":false,"id":183,"mutability":"mutable","name":"_values","nameLocation":"1862:7:2","nodeType":"VariableDeclaration","scope":188,"src":"1852:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":181,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1852:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":182,"nodeType":"ArrayTypeName","src":"1852:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"_positions","nameLocation":"2054:10:2","nodeType":"VariableDeclaration","scope":188,"src":"2020:44:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":186,"keyName":"value","keyNameLocation":"2036:5:2","keyType":{"id":184,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2028:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2020:33:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":185,"name":"uint256","nodeType":"ElementaryTypeName","src":"2045:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1805:3:2","nodeType":"StructDefinition","scope":790,"src":"1798:273:2","visibility":"public"},{"body":{"id":229,"nodeType":"Block","src":"2310:337:2","statements":[{"condition":{"id":203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2324:22:2","subExpression":{"arguments":[{"id":200,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"2335:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"2340:5:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$188_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":199,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"2325:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$188_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2325:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":227,"nodeType":"Block","src":"2604:37:2","statements":[{"expression":{"hexValue":"66616c7365","id":225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2625:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":198,"id":226,"nodeType":"Return","src":"2618:12:2"}]},"id":228,"nodeType":"IfStatement","src":"2320:321:2","trueBody":{"id":224,"nodeType":"Block","src":"2348:250:2","statements":[{"expression":{"arguments":[{"id":209,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"2379:5:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":204,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"2362:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":207,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2366:7:2","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":183,"src":"2362:11:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:4:2","memberName":"push","nodeType":"MemberAccess","src":"2362:16:2","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2362:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":211,"nodeType":"ExpressionStatement","src":"2362:23:2"},{"expression":{"id":220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":212,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"2520:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":215,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2524:10:2","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":187,"src":"2520:14:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":216,"indexExpression":{"id":214,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"2535:5:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2520:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":217,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"2544:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":218,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2548:7:2","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":183,"src":"2544:11:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2556:6:2","memberName":"length","nodeType":"MemberAccess","src":"2544:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2520:42:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":221,"nodeType":"ExpressionStatement","src":"2520:42:2"},{"expression":{"hexValue":"74727565","id":222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2583:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":198,"id":223,"nodeType":"Return","src":"2576:11:2"}]}}]},"documentation":{"id":189,"nodeType":"StructuredDocumentation","src":"2077:159:2","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":230,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2250:4:2","nodeType":"FunctionDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"set","nameLocation":"2267:3:2","nodeType":"VariableDeclaration","scope":230,"src":"2255:15:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":191,"nodeType":"UserDefinedTypeName","pathNode":{"id":190,"name":"Set","nameLocations":["2255:3:2"],"nodeType":"IdentifierPath","referencedDeclaration":188,"src":"2255:3:2"},"referencedDeclaration":188,"src":"2255:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":194,"mutability":"mutable","name":"value","nameLocation":"2280:5:2","nodeType":"VariableDeclaration","scope":230,"src":"2272:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2272:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2254:32:2"},"returnParameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":230,"src":"2304:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":196,"name":"bool","nodeType":"ElementaryTypeName","src":"2304:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2303:6:2"},"scope":790,"src":"2241:406:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":313,"nodeType":"Block","src":"2887:1296:2","statements":[{"assignments":[242],"declarations":[{"constant":false,"id":242,"mutability":"mutable","name":"position","nameLocation":"2999:8:2","nodeType":"VariableDeclaration","scope":313,"src":"2991:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":241,"name":"uint256","nodeType":"ElementaryTypeName","src":"2991:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":247,"initialValue":{"baseExpression":{"expression":{"id":243,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"3010:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":244,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3014:10:2","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":187,"src":"3010:14:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":246,"indexExpression":{"id":245,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"3025:5:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3010:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2991:40:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":248,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"3046:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3058:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3046:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":311,"nodeType":"Block","src":"4140:37:2","statements":[{"expression":{"hexValue":"66616c7365","id":309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4161:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":240,"id":310,"nodeType":"Return","src":"4154:12:2"}]},"id":312,"nodeType":"IfStatement","src":"3042:1135:2","trueBody":{"id":308,"nodeType":"Block","src":"3061:1073:2","statements":[{"assignments":[252],"declarations":[{"constant":false,"id":252,"mutability":"mutable","name":"valueIndex","nameLocation":"3421:10:2","nodeType":"VariableDeclaration","scope":308,"src":"3413:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":251,"name":"uint256","nodeType":"ElementaryTypeName","src":"3413:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":256,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":253,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"3434:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3445:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3434:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3413:33:2"},{"assignments":[258],"declarations":[{"constant":false,"id":258,"mutability":"mutable","name":"lastIndex","nameLocation":"3468:9:2","nodeType":"VariableDeclaration","scope":308,"src":"3460:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":257,"name":"uint256","nodeType":"ElementaryTypeName","src":"3460:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":264,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":259,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"3480:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":260,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3484:7:2","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":183,"src":"3480:11:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3492:6:2","memberName":"length","nodeType":"MemberAccess","src":"3480:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3501:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3480:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3460:42:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":265,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"3521:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":266,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"3535:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3521:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":292,"nodeType":"IfStatement","src":"3517:378:2","trueBody":{"id":291,"nodeType":"Block","src":"3546:349:2","statements":[{"assignments":[269],"declarations":[{"constant":false,"id":269,"mutability":"mutable","name":"lastValue","nameLocation":"3572:9:2","nodeType":"VariableDeclaration","scope":291,"src":"3564:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":268,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3564:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":274,"initialValue":{"baseExpression":{"expression":{"id":270,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"3584:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":271,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3588:7:2","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":183,"src":"3584:11:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":273,"indexExpression":{"id":272,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"3596:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3584:22:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3564:42:2"},{"expression":{"id":281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":275,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"3705:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":278,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3709:7:2","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":183,"src":"3705:11:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":279,"indexExpression":{"id":277,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"3717:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3705:23:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":280,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"3731:9:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3705:35:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":282,"nodeType":"ExpressionStatement","src":"3705:35:2"},{"expression":{"id":289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":283,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"3844:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":286,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3848:10:2","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":187,"src":"3844:14:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":287,"indexExpression":{"id":285,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"3859:9:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3844:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":288,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"3872:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3844:36:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":290,"nodeType":"ExpressionStatement","src":"3844:36:2"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":293,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"3973:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":296,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3977:7:2","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":183,"src":"3973:11:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3985:3:2","memberName":"pop","nodeType":"MemberAccess","src":"3973:15:2","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3973:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":299,"nodeType":"ExpressionStatement","src":"3973:17:2"},{"expression":{"id":304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4069:28:2","subExpression":{"baseExpression":{"expression":{"id":300,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"4076:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":301,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4080:10:2","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":187,"src":"4076:14:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":303,"indexExpression":{"id":302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"4091:5:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4076:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":305,"nodeType":"ExpressionStatement","src":"4069:28:2"},{"expression":{"hexValue":"74727565","id":306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4119:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":240,"id":307,"nodeType":"Return","src":"4112:11:2"}]}}]},"documentation":{"id":231,"nodeType":"StructuredDocumentation","src":"2653:157:2","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":314,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2824:7:2","nodeType":"FunctionDefinition","parameters":{"id":237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"set","nameLocation":"2844:3:2","nodeType":"VariableDeclaration","scope":314,"src":"2832:15:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":233,"nodeType":"UserDefinedTypeName","pathNode":{"id":232,"name":"Set","nameLocations":["2832:3:2"],"nodeType":"IdentifierPath","referencedDeclaration":188,"src":"2832:3:2"},"referencedDeclaration":188,"src":"2832:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":236,"mutability":"mutable","name":"value","nameLocation":"2857:5:2","nodeType":"VariableDeclaration","scope":314,"src":"2849:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":235,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2849:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2831:32:2"},"returnParameters":{"id":240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":314,"src":"2881:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":238,"name":"bool","nodeType":"ElementaryTypeName","src":"2881:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2880:6:2"},"scope":790,"src":"2815:1368:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":332,"nodeType":"Block","src":"4343:50:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":325,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"4360:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":326,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4364:10:2","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":187,"src":"4360:14:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":328,"indexExpression":{"id":327,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"4375:5:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4360:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4385:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4360:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":324,"id":331,"nodeType":"Return","src":"4353:33:2"}]},"documentation":{"id":315,"nodeType":"StructuredDocumentation","src":"4189:70:2","text":" @dev Returns true if the value is in the set. O(1)."},"id":333,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4273:9:2","nodeType":"FunctionDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"mutability":"mutable","name":"set","nameLocation":"4295:3:2","nodeType":"VariableDeclaration","scope":333,"src":"4283:15:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":317,"nodeType":"UserDefinedTypeName","pathNode":{"id":316,"name":"Set","nameLocations":["4283:3:2"],"nodeType":"IdentifierPath","referencedDeclaration":188,"src":"4283:3:2"},"referencedDeclaration":188,"src":"4283:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":320,"mutability":"mutable","name":"value","nameLocation":"4308:5:2","nodeType":"VariableDeclaration","scope":333,"src":"4300:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":319,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4300:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4282:32:2"},"returnParameters":{"id":324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":333,"src":"4337:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":322,"name":"bool","nodeType":"ElementaryTypeName","src":"4337:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4336:6:2"},"scope":790,"src":"4264:129:2","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":346,"nodeType":"Block","src":"4539:42:2","statements":[{"expression":{"expression":{"expression":{"id":342,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"4556:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":343,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4560:7:2","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":183,"src":"4556:11:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4568:6:2","memberName":"length","nodeType":"MemberAccess","src":"4556:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":341,"id":345,"nodeType":"Return","src":"4549:25:2"}]},"documentation":{"id":334,"nodeType":"StructuredDocumentation","src":"4399:70:2","text":" @dev Returns the number of values on the set. O(1)."},"id":347,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4483:7:2","nodeType":"FunctionDefinition","parameters":{"id":338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"set","nameLocation":"4503:3:2","nodeType":"VariableDeclaration","scope":347,"src":"4491:15:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":336,"nodeType":"UserDefinedTypeName","pathNode":{"id":335,"name":"Set","nameLocations":["4491:3:2"],"nodeType":"IdentifierPath","referencedDeclaration":188,"src":"4491:3:2"},"referencedDeclaration":188,"src":"4491:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4490:17:2"},"returnParameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":347,"src":"4530:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":339,"name":"uint256","nodeType":"ElementaryTypeName","src":"4530:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4529:9:2"},"scope":790,"src":"4474:107:2","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":363,"nodeType":"Block","src":"4999:42:2","statements":[{"expression":{"baseExpression":{"expression":{"id":358,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"5016:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":359,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5020:7:2","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":183,"src":"5016:11:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":361,"indexExpression":{"id":360,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":353,"src":"5028:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5016:18:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":357,"id":362,"nodeType":"Return","src":"5009:25:2"}]},"documentation":{"id":348,"nodeType":"StructuredDocumentation","src":"4587:331:2","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":364,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4932:3:2","nodeType":"FunctionDefinition","parameters":{"id":354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":351,"mutability":"mutable","name":"set","nameLocation":"4948:3:2","nodeType":"VariableDeclaration","scope":364,"src":"4936:15:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":350,"nodeType":"UserDefinedTypeName","pathNode":{"id":349,"name":"Set","nameLocations":["4936:3:2"],"nodeType":"IdentifierPath","referencedDeclaration":188,"src":"4936:3:2"},"referencedDeclaration":188,"src":"4936:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":353,"mutability":"mutable","name":"index","nameLocation":"4961:5:2","nodeType":"VariableDeclaration","scope":364,"src":"4953:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":352,"name":"uint256","nodeType":"ElementaryTypeName","src":"4953:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4935:32:2"},"returnParameters":{"id":357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":364,"src":"4990:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4990:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4989:9:2"},"scope":790,"src":"4923:118:2","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":377,"nodeType":"Block","src":"5655:35:2","statements":[{"expression":{"expression":{"id":374,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"5672:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":375,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5676:7:2","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":183,"src":"5672:11:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":373,"id":376,"nodeType":"Return","src":"5665:18:2"}]},"documentation":{"id":365,"nodeType":"StructuredDocumentation","src":"5047:529:2","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":378,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5590:7:2","nodeType":"FunctionDefinition","parameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":368,"mutability":"mutable","name":"set","nameLocation":"5610:3:2","nodeType":"VariableDeclaration","scope":378,"src":"5598:15:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":367,"nodeType":"UserDefinedTypeName","pathNode":{"id":366,"name":"Set","nameLocations":["5598:3:2"],"nodeType":"IdentifierPath","referencedDeclaration":188,"src":"5598:3:2"},"referencedDeclaration":188,"src":"5598:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5597:17:2"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":378,"src":"5637:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":370,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5637:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":371,"nodeType":"ArrayTypeName","src":"5637:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5636:18:2"},"scope":790,"src":"5581:109:2","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":382,"members":[{"constant":false,"id":381,"mutability":"mutable","name":"_inner","nameLocation":"5747:6:2","nodeType":"VariableDeclaration","scope":382,"src":"5743:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":380,"nodeType":"UserDefinedTypeName","pathNode":{"id":379,"name":"Set","nameLocations":["5743:3:2"],"nodeType":"IdentifierPath","referencedDeclaration":188,"src":"5743:3:2"},"referencedDeclaration":188,"src":"5743:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5722:10:2","nodeType":"StructDefinition","scope":790,"src":"5715:45:2","visibility":"public"},{"body":{"id":399,"nodeType":"Block","src":"6006:47:2","statements":[{"expression":{"arguments":[{"expression":{"id":394,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"6028:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$382_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":395,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6032:6:2","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":381,"src":"6028:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6040:5:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$188_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":393,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"6023:4:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$188_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6023:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":392,"id":398,"nodeType":"Return","src":"6016:30:2"}]},"documentation":{"id":383,"nodeType":"StructuredDocumentation","src":"5766:159:2","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":400,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5939:3:2","nodeType":"FunctionDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":386,"mutability":"mutable","name":"set","nameLocation":"5962:3:2","nodeType":"VariableDeclaration","scope":400,"src":"5943:22:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$382_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":385,"nodeType":"UserDefinedTypeName","pathNode":{"id":384,"name":"Bytes32Set","nameLocations":["5943:10:2"],"nodeType":"IdentifierPath","referencedDeclaration":382,"src":"5943:10:2"},"referencedDeclaration":382,"src":"5943:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$382_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":388,"mutability":"mutable","name":"value","nameLocation":"5975:5:2","nodeType":"VariableDeclaration","scope":400,"src":"5967:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":387,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5967:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5942:39:2"},"returnParameters":{"id":392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":400,"src":"6000:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":390,"name":"bool","nodeType":"ElementaryTypeName","src":"6000:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5999:6:2"},"scope":790,"src":"5930:123:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":417,"nodeType":"Block","src":"6300:50:2","statements":[{"expression":{"arguments":[{"expression":{"id":412,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"6325:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$382_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":413,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6329:6:2","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":381,"src":"6325:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"6337:5:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$188_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":411,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"6317:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$188_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6317:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":410,"id":416,"nodeType":"Return","src":"6310:33:2"}]},"documentation":{"id":401,"nodeType":"StructuredDocumentation","src":"6059:157:2","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":418,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6230:6:2","nodeType":"FunctionDefinition","parameters":{"id":407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":404,"mutability":"mutable","name":"set","nameLocation":"6256:3:2","nodeType":"VariableDeclaration","scope":418,"src":"6237:22:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$382_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":403,"nodeType":"UserDefinedTypeName","pathNode":{"id":402,"name":"Bytes32Set","nameLocations":["6237:10:2"],"nodeType":"IdentifierPath","referencedDeclaration":382,"src":"6237:10:2"},"referencedDeclaration":382,"src":"6237:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$382_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":406,"mutability":"mutable","name":"value","nameLocation":"6269:5:2","nodeType":"VariableDeclaration","scope":418,"src":"6261:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":405,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6261:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6236:39:2"},"returnParameters":{"id":410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":409,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":418,"src":"6294:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":408,"name":"bool","nodeType":"ElementaryTypeName","src":"6294:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6293:6:2"},"scope":790,"src":"6221:129:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":435,"nodeType":"Block","src":"6517:52:2","statements":[{"expression":{"arguments":[{"expression":{"id":430,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"6544:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$382_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":431,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6548:6:2","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":381,"src":"6544:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"6556:5:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$188_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":429,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"6534:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$188_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6534:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":428,"id":434,"nodeType":"Return","src":"6527:35:2"}]},"documentation":{"id":419,"nodeType":"StructuredDocumentation","src":"6356:70:2","text":" @dev Returns true if the value is in the set. O(1)."},"id":436,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6440:8:2","nodeType":"FunctionDefinition","parameters":{"id":425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":422,"mutability":"mutable","name":"set","nameLocation":"6468:3:2","nodeType":"VariableDeclaration","scope":436,"src":"6449:22:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$382_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":421,"nodeType":"UserDefinedTypeName","pathNode":{"id":420,"name":"Bytes32Set","nameLocations":["6449:10:2"],"nodeType":"IdentifierPath","referencedDeclaration":382,"src":"6449:10:2"},"referencedDeclaration":382,"src":"6449:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$382_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":424,"mutability":"mutable","name":"value","nameLocation":"6481:5:2","nodeType":"VariableDeclaration","scope":436,"src":"6473:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":423,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6473:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6448:39:2"},"returnParameters":{"id":428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":427,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":436,"src":"6511:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":426,"name":"bool","nodeType":"ElementaryTypeName","src":"6511:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6510:6:2"},"scope":790,"src":"6431:138:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":450,"nodeType":"Block","src":"6722:43:2","statements":[{"expression":{"arguments":[{"expression":{"id":446,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"6747:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$382_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":447,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6751:6:2","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":381,"src":"6747:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$188_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":445,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"6739:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$188_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6739:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":444,"id":449,"nodeType":"Return","src":"6732:26:2"}]},"documentation":{"id":437,"nodeType":"StructuredDocumentation","src":"6575:70:2","text":" @dev Returns the number of values in the set. O(1)."},"id":451,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6659:6:2","nodeType":"FunctionDefinition","parameters":{"id":441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":440,"mutability":"mutable","name":"set","nameLocation":"6685:3:2","nodeType":"VariableDeclaration","scope":451,"src":"6666:22:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$382_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":439,"nodeType":"UserDefinedTypeName","pathNode":{"id":438,"name":"Bytes32Set","nameLocations":["6666:10:2"],"nodeType":"IdentifierPath","referencedDeclaration":382,"src":"6666:10:2"},"referencedDeclaration":382,"src":"6666:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$382_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"6665:24:2"},"returnParameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":451,"src":"6713:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":442,"name":"uint256","nodeType":"ElementaryTypeName","src":"6713:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6712:9:2"},"scope":790,"src":"6650:115:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":468,"nodeType":"Block","src":"7190:46:2","statements":[{"expression":{"arguments":[{"expression":{"id":463,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"7211:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$382_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":464,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7215:6:2","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":381,"src":"7211:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":465,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"7223:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$188_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":462,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"7207:3:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$188_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7207:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":461,"id":467,"nodeType":"Return","src":"7200:29:2"}]},"documentation":{"id":452,"nodeType":"StructuredDocumentation","src":"6771:331:2","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":469,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7116:2:2","nodeType":"FunctionDefinition","parameters":{"id":458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":455,"mutability":"mutable","name":"set","nameLocation":"7138:3:2","nodeType":"VariableDeclaration","scope":469,"src":"7119:22:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$382_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":454,"nodeType":"UserDefinedTypeName","pathNode":{"id":453,"name":"Bytes32Set","nameLocations":["7119:10:2"],"nodeType":"IdentifierPath","referencedDeclaration":382,"src":"7119:10:2"},"referencedDeclaration":382,"src":"7119:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$382_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":457,"mutability":"mutable","name":"index","nameLocation":"7151:5:2","nodeType":"VariableDeclaration","scope":469,"src":"7143:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":456,"name":"uint256","nodeType":"ElementaryTypeName","src":"7143:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7118:39:2"},"returnParameters":{"id":461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":469,"src":"7181:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":459,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7181:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7180:9:2"},"scope":790,"src":"7107:129:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":498,"nodeType":"Block","src":"7857:219:2","statements":[{"assignments":[483],"declarations":[{"constant":false,"id":483,"mutability":"mutable","name":"store","nameLocation":"7884:5:2","nodeType":"VariableDeclaration","scope":498,"src":"7867:22:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":481,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7867:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":482,"nodeType":"ArrayTypeName","src":"7867:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":488,"initialValue":{"arguments":[{"expression":{"id":485,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"7900:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$382_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":486,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7904:6:2","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":381,"src":"7900:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$188_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":484,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"7892:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$188_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7892:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7867:44:2"},{"assignments":[493],"declarations":[{"constant":false,"id":493,"mutability":"mutable","name":"result","nameLocation":"7938:6:2","nodeType":"VariableDeclaration","scope":498,"src":"7921:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":491,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7921:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":492,"nodeType":"ArrayTypeName","src":"7921:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":494,"nodeType":"VariableDeclarationStatement","src":"7921:23:2"},{"AST":{"nativeSrc":"8007:39:2","nodeType":"YulBlock","src":"8007:39:2","statements":[{"nativeSrc":"8021:15:2","nodeType":"YulAssignment","src":"8021:15:2","value":{"name":"store","nativeSrc":"8031:5:2","nodeType":"YulIdentifier","src":"8031:5:2"},"variableNames":[{"name":"result","nativeSrc":"8021:6:2","nodeType":"YulIdentifier","src":"8021:6:2"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":493,"isOffset":false,"isSlot":false,"src":"8021:6:2","valueSize":1},{"declaration":483,"isOffset":false,"isSlot":false,"src":"8031:5:2","valueSize":1}],"id":495,"nodeType":"InlineAssembly","src":"7998:48:2"},{"expression":{"id":496,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"8063:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":478,"id":497,"nodeType":"Return","src":"8056:13:2"}]},"documentation":{"id":470,"nodeType":"StructuredDocumentation","src":"7242:529:2","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":499,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7785:6:2","nodeType":"FunctionDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":473,"mutability":"mutable","name":"set","nameLocation":"7811:3:2","nodeType":"VariableDeclaration","scope":499,"src":"7792:22:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$382_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":472,"nodeType":"UserDefinedTypeName","pathNode":{"id":471,"name":"Bytes32Set","nameLocations":["7792:10:2"],"nodeType":"IdentifierPath","referencedDeclaration":382,"src":"7792:10:2"},"referencedDeclaration":382,"src":"7792:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$382_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7791:24:2"},"returnParameters":{"id":478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":499,"src":"7839:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":475,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7839:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":476,"nodeType":"ArrayTypeName","src":"7839:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7838:18:2"},"scope":790,"src":"7776:300:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":503,"members":[{"constant":false,"id":502,"mutability":"mutable","name":"_inner","nameLocation":"8133:6:2","nodeType":"VariableDeclaration","scope":503,"src":"8129:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":501,"nodeType":"UserDefinedTypeName","pathNode":{"id":500,"name":"Set","nameLocations":["8129:3:2"],"nodeType":"IdentifierPath","referencedDeclaration":188,"src":"8129:3:2"},"referencedDeclaration":188,"src":"8129:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8108:10:2","nodeType":"StructDefinition","scope":790,"src":"8101:45:2","visibility":"public"},{"body":{"id":529,"nodeType":"Block","src":"8392:74:2","statements":[{"expression":{"arguments":[{"expression":{"id":515,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"8414:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$503_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":516,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8418:6:2","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":502,"src":"8414:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":523,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"8450:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8442:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":521,"name":"uint160","nodeType":"ElementaryTypeName","src":"8442:7:2","typeDescriptions":{}}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8442:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8434:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":519,"name":"uint256","nodeType":"ElementaryTypeName","src":"8434:7:2","typeDescriptions":{}}},"id":525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8434:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8426:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":517,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8426:7:2","typeDescriptions":{}}},"id":526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8426:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$188_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":514,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"8409:4:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$188_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8409:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":513,"id":528,"nodeType":"Return","src":"8402:57:2"}]},"documentation":{"id":504,"nodeType":"StructuredDocumentation","src":"8152:159:2","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":530,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8325:3:2","nodeType":"FunctionDefinition","parameters":{"id":510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":507,"mutability":"mutable","name":"set","nameLocation":"8348:3:2","nodeType":"VariableDeclaration","scope":530,"src":"8329:22:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$503_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":506,"nodeType":"UserDefinedTypeName","pathNode":{"id":505,"name":"AddressSet","nameLocations":["8329:10:2"],"nodeType":"IdentifierPath","referencedDeclaration":503,"src":"8329:10:2"},"referencedDeclaration":503,"src":"8329:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$503_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":509,"mutability":"mutable","name":"value","nameLocation":"8361:5:2","nodeType":"VariableDeclaration","scope":530,"src":"8353:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"8353:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8328:39:2"},"returnParameters":{"id":513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":512,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":530,"src":"8386:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":511,"name":"bool","nodeType":"ElementaryTypeName","src":"8386:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8385:6:2"},"scope":790,"src":"8316:150:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":556,"nodeType":"Block","src":"8713:77:2","statements":[{"expression":{"arguments":[{"expression":{"id":542,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"8738:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$503_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":543,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8742:6:2","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":502,"src":"8738:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"8774:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8766:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":548,"name":"uint160","nodeType":"ElementaryTypeName","src":"8766:7:2","typeDescriptions":{}}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8766:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8758:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":546,"name":"uint256","nodeType":"ElementaryTypeName","src":"8758:7:2","typeDescriptions":{}}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8758:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8750:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":544,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8750:7:2","typeDescriptions":{}}},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8750:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$188_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":541,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"8730:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$188_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8730:53:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":540,"id":555,"nodeType":"Return","src":"8723:60:2"}]},"documentation":{"id":531,"nodeType":"StructuredDocumentation","src":"8472:157:2","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":557,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8643:6:2","nodeType":"FunctionDefinition","parameters":{"id":537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":534,"mutability":"mutable","name":"set","nameLocation":"8669:3:2","nodeType":"VariableDeclaration","scope":557,"src":"8650:22:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$503_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":533,"nodeType":"UserDefinedTypeName","pathNode":{"id":532,"name":"AddressSet","nameLocations":["8650:10:2"],"nodeType":"IdentifierPath","referencedDeclaration":503,"src":"8650:10:2"},"referencedDeclaration":503,"src":"8650:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$503_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":536,"mutability":"mutable","name":"value","nameLocation":"8682:5:2","nodeType":"VariableDeclaration","scope":557,"src":"8674:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":535,"name":"address","nodeType":"ElementaryTypeName","src":"8674:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8649:39:2"},"returnParameters":{"id":540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":557,"src":"8707:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":538,"name":"bool","nodeType":"ElementaryTypeName","src":"8707:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8706:6:2"},"scope":790,"src":"8634:156:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":583,"nodeType":"Block","src":"8957:79:2","statements":[{"expression":{"arguments":[{"expression":{"id":569,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"8984:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$503_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":570,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8988:6:2","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":502,"src":"8984:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"9020:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9012:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":575,"name":"uint160","nodeType":"ElementaryTypeName","src":"9012:7:2","typeDescriptions":{}}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9012:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9004:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":573,"name":"uint256","nodeType":"ElementaryTypeName","src":"9004:7:2","typeDescriptions":{}}},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9004:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8996:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":571,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8996:7:2","typeDescriptions":{}}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8996:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$188_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":568,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"8974:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$188_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8974:55:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":567,"id":582,"nodeType":"Return","src":"8967:62:2"}]},"documentation":{"id":558,"nodeType":"StructuredDocumentation","src":"8796:70:2","text":" @dev Returns true if the value is in the set. O(1)."},"id":584,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8880:8:2","nodeType":"FunctionDefinition","parameters":{"id":564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":561,"mutability":"mutable","name":"set","nameLocation":"8908:3:2","nodeType":"VariableDeclaration","scope":584,"src":"8889:22:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$503_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":560,"nodeType":"UserDefinedTypeName","pathNode":{"id":559,"name":"AddressSet","nameLocations":["8889:10:2"],"nodeType":"IdentifierPath","referencedDeclaration":503,"src":"8889:10:2"},"referencedDeclaration":503,"src":"8889:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$503_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":563,"mutability":"mutable","name":"value","nameLocation":"8921:5:2","nodeType":"VariableDeclaration","scope":584,"src":"8913:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":562,"name":"address","nodeType":"ElementaryTypeName","src":"8913:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8888:39:2"},"returnParameters":{"id":567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":566,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":584,"src":"8951:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":565,"name":"bool","nodeType":"ElementaryTypeName","src":"8951:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8950:6:2"},"scope":790,"src":"8871:165:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":598,"nodeType":"Block","src":"9189:43:2","statements":[{"expression":{"arguments":[{"expression":{"id":594,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"9214:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$503_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":595,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9218:6:2","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":502,"src":"9214:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$188_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":593,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"9206:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$188_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9206:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":592,"id":597,"nodeType":"Return","src":"9199:26:2"}]},"documentation":{"id":585,"nodeType":"StructuredDocumentation","src":"9042:70:2","text":" @dev Returns the number of values in the set. O(1)."},"id":599,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9126:6:2","nodeType":"FunctionDefinition","parameters":{"id":589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":588,"mutability":"mutable","name":"set","nameLocation":"9152:3:2","nodeType":"VariableDeclaration","scope":599,"src":"9133:22:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$503_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":587,"nodeType":"UserDefinedTypeName","pathNode":{"id":586,"name":"AddressSet","nameLocations":["9133:10:2"],"nodeType":"IdentifierPath","referencedDeclaration":503,"src":"9133:10:2"},"referencedDeclaration":503,"src":"9133:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$503_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"9132:24:2"},"returnParameters":{"id":592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":591,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":599,"src":"9180:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":590,"name":"uint256","nodeType":"ElementaryTypeName","src":"9180:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9179:9:2"},"scope":790,"src":"9117:115:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":625,"nodeType":"Block","src":"9657:73:2","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":617,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"9702:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$503_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":618,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9706:6:2","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":502,"src":"9702:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":619,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"9714:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$188_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":616,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"9698:3:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$188_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9698:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9690:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":614,"name":"uint256","nodeType":"ElementaryTypeName","src":"9690:7:2","typeDescriptions":{}}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9690:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9682:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":612,"name":"uint160","nodeType":"ElementaryTypeName","src":"9682:7:2","typeDescriptions":{}}},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9682:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9674:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":610,"name":"address","nodeType":"ElementaryTypeName","src":"9674:7:2","typeDescriptions":{}}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9674:49:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":609,"id":624,"nodeType":"Return","src":"9667:56:2"}]},"documentation":{"id":600,"nodeType":"StructuredDocumentation","src":"9238:331:2","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":626,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9583:2:2","nodeType":"FunctionDefinition","parameters":{"id":606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":603,"mutability":"mutable","name":"set","nameLocation":"9605:3:2","nodeType":"VariableDeclaration","scope":626,"src":"9586:22:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$503_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":602,"nodeType":"UserDefinedTypeName","pathNode":{"id":601,"name":"AddressSet","nameLocations":["9586:10:2"],"nodeType":"IdentifierPath","referencedDeclaration":503,"src":"9586:10:2"},"referencedDeclaration":503,"src":"9586:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$503_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":605,"mutability":"mutable","name":"index","nameLocation":"9618:5:2","nodeType":"VariableDeclaration","scope":626,"src":"9610:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":604,"name":"uint256","nodeType":"ElementaryTypeName","src":"9610:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9585:39:2"},"returnParameters":{"id":609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":608,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":626,"src":"9648:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":607,"name":"address","nodeType":"ElementaryTypeName","src":"9648:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9647:9:2"},"scope":790,"src":"9574:156:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":655,"nodeType":"Block","src":"10351:219:2","statements":[{"assignments":[640],"declarations":[{"constant":false,"id":640,"mutability":"mutable","name":"store","nameLocation":"10378:5:2","nodeType":"VariableDeclaration","scope":655,"src":"10361:22:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":638,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10361:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":639,"nodeType":"ArrayTypeName","src":"10361:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":645,"initialValue":{"arguments":[{"expression":{"id":642,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"10394:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$503_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":643,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10398:6:2","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":502,"src":"10394:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$188_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":641,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"10386:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$188_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10386:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10361:44:2"},{"assignments":[650],"declarations":[{"constant":false,"id":650,"mutability":"mutable","name":"result","nameLocation":"10432:6:2","nodeType":"VariableDeclaration","scope":655,"src":"10415:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":648,"name":"address","nodeType":"ElementaryTypeName","src":"10415:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":649,"nodeType":"ArrayTypeName","src":"10415:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":651,"nodeType":"VariableDeclarationStatement","src":"10415:23:2"},{"AST":{"nativeSrc":"10501:39:2","nodeType":"YulBlock","src":"10501:39:2","statements":[{"nativeSrc":"10515:15:2","nodeType":"YulAssignment","src":"10515:15:2","value":{"name":"store","nativeSrc":"10525:5:2","nodeType":"YulIdentifier","src":"10525:5:2"},"variableNames":[{"name":"result","nativeSrc":"10515:6:2","nodeType":"YulIdentifier","src":"10515:6:2"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":650,"isOffset":false,"isSlot":false,"src":"10515:6:2","valueSize":1},{"declaration":640,"isOffset":false,"isSlot":false,"src":"10525:5:2","valueSize":1}],"id":652,"nodeType":"InlineAssembly","src":"10492:48:2"},{"expression":{"id":653,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"10557:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":635,"id":654,"nodeType":"Return","src":"10550:13:2"}]},"documentation":{"id":627,"nodeType":"StructuredDocumentation","src":"9736:529:2","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":656,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10279:6:2","nodeType":"FunctionDefinition","parameters":{"id":631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":630,"mutability":"mutable","name":"set","nameLocation":"10305:3:2","nodeType":"VariableDeclaration","scope":656,"src":"10286:22:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$503_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":629,"nodeType":"UserDefinedTypeName","pathNode":{"id":628,"name":"AddressSet","nameLocations":["10286:10:2"],"nodeType":"IdentifierPath","referencedDeclaration":503,"src":"10286:10:2"},"referencedDeclaration":503,"src":"10286:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$503_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10285:24:2"},"returnParameters":{"id":635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":634,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":656,"src":"10333:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":632,"name":"address","nodeType":"ElementaryTypeName","src":"10333:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":633,"nodeType":"ArrayTypeName","src":"10333:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10332:18:2"},"scope":790,"src":"10270:300:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":660,"members":[{"constant":false,"id":659,"mutability":"mutable","name":"_inner","nameLocation":"10621:6:2","nodeType":"VariableDeclaration","scope":660,"src":"10617:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":658,"nodeType":"UserDefinedTypeName","pathNode":{"id":657,"name":"Set","nameLocations":["10617:3:2"],"nodeType":"IdentifierPath","referencedDeclaration":188,"src":"10617:3:2"},"referencedDeclaration":188,"src":"10617:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10599:7:2","nodeType":"StructDefinition","scope":790,"src":"10592:42:2","visibility":"public"},{"body":{"id":680,"nodeType":"Block","src":"10877:56:2","statements":[{"expression":{"arguments":[{"expression":{"id":672,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"10899:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$660_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":673,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10903:6:2","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":659,"src":"10899:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"10919:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10911:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":674,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10911:7:2","typeDescriptions":{}}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10911:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$188_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":671,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"10894:4:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$188_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10894:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":670,"id":679,"nodeType":"Return","src":"10887:39:2"}]},"documentation":{"id":661,"nodeType":"StructuredDocumentation","src":"10640:159:2","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":681,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10813:3:2","nodeType":"FunctionDefinition","parameters":{"id":667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":664,"mutability":"mutable","name":"set","nameLocation":"10833:3:2","nodeType":"VariableDeclaration","scope":681,"src":"10817:19:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$660_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":663,"nodeType":"UserDefinedTypeName","pathNode":{"id":662,"name":"UintSet","nameLocations":["10817:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":660,"src":"10817:7:2"},"referencedDeclaration":660,"src":"10817:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$660_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":666,"mutability":"mutable","name":"value","nameLocation":"10846:5:2","nodeType":"VariableDeclaration","scope":681,"src":"10838:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":665,"name":"uint256","nodeType":"ElementaryTypeName","src":"10838:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10816:36:2"},"returnParameters":{"id":670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":681,"src":"10871:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":668,"name":"bool","nodeType":"ElementaryTypeName","src":"10871:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10870:6:2"},"scope":790,"src":"10804:129:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":701,"nodeType":"Block","src":"11177:59:2","statements":[{"expression":{"arguments":[{"expression":{"id":693,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"11202:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$660_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":694,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11206:6:2","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":659,"src":"11202:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"11222:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11214:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":695,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11214:7:2","typeDescriptions":{}}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11214:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$188_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":692,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"11194:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$188_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11194:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":691,"id":700,"nodeType":"Return","src":"11187:42:2"}]},"documentation":{"id":682,"nodeType":"StructuredDocumentation","src":"10939:157:2","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":702,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11110:6:2","nodeType":"FunctionDefinition","parameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"mutability":"mutable","name":"set","nameLocation":"11133:3:2","nodeType":"VariableDeclaration","scope":702,"src":"11117:19:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$660_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":684,"nodeType":"UserDefinedTypeName","pathNode":{"id":683,"name":"UintSet","nameLocations":["11117:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":660,"src":"11117:7:2"},"referencedDeclaration":660,"src":"11117:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$660_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":687,"mutability":"mutable","name":"value","nameLocation":"11146:5:2","nodeType":"VariableDeclaration","scope":702,"src":"11138:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":686,"name":"uint256","nodeType":"ElementaryTypeName","src":"11138:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11116:36:2"},"returnParameters":{"id":691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":690,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":702,"src":"11171:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":689,"name":"bool","nodeType":"ElementaryTypeName","src":"11171:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11170:6:2"},"scope":790,"src":"11101:135:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":722,"nodeType":"Block","src":"11400:61:2","statements":[{"expression":{"arguments":[{"expression":{"id":714,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"11427:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$660_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":715,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11431:6:2","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":659,"src":"11427:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"11447:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11439:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":716,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11439:7:2","typeDescriptions":{}}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11439:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$188_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":713,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"11417:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$188_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11417:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":712,"id":721,"nodeType":"Return","src":"11410:44:2"}]},"documentation":{"id":703,"nodeType":"StructuredDocumentation","src":"11242:70:2","text":" @dev Returns true if the value is in the set. O(1)."},"id":723,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11326:8:2","nodeType":"FunctionDefinition","parameters":{"id":709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":706,"mutability":"mutable","name":"set","nameLocation":"11351:3:2","nodeType":"VariableDeclaration","scope":723,"src":"11335:19:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$660_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":705,"nodeType":"UserDefinedTypeName","pathNode":{"id":704,"name":"UintSet","nameLocations":["11335:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":660,"src":"11335:7:2"},"referencedDeclaration":660,"src":"11335:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$660_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":708,"mutability":"mutable","name":"value","nameLocation":"11364:5:2","nodeType":"VariableDeclaration","scope":723,"src":"11356:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":707,"name":"uint256","nodeType":"ElementaryTypeName","src":"11356:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11334:36:2"},"returnParameters":{"id":712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":723,"src":"11394:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":710,"name":"bool","nodeType":"ElementaryTypeName","src":"11394:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11393:6:2"},"scope":790,"src":"11317:144:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":737,"nodeType":"Block","src":"11611:43:2","statements":[{"expression":{"arguments":[{"expression":{"id":733,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"11636:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$660_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":734,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11640:6:2","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":659,"src":"11636:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$188_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":732,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"11628:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$188_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":731,"id":736,"nodeType":"Return","src":"11621:26:2"}]},"documentation":{"id":724,"nodeType":"StructuredDocumentation","src":"11467:70:2","text":" @dev Returns the number of values in the set. O(1)."},"id":738,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11551:6:2","nodeType":"FunctionDefinition","parameters":{"id":728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":727,"mutability":"mutable","name":"set","nameLocation":"11574:3:2","nodeType":"VariableDeclaration","scope":738,"src":"11558:19:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$660_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":726,"nodeType":"UserDefinedTypeName","pathNode":{"id":725,"name":"UintSet","nameLocations":["11558:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":660,"src":"11558:7:2"},"referencedDeclaration":660,"src":"11558:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$660_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"11557:21:2"},"returnParameters":{"id":731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":738,"src":"11602:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":729,"name":"uint256","nodeType":"ElementaryTypeName","src":"11602:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11601:9:2"},"scope":790,"src":"11542:112:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":758,"nodeType":"Block","src":"12076:55:2","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":752,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"12105:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$660_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":753,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12109:6:2","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":659,"src":"12105:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":754,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"12117:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$188_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":751,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"12101:3:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$188_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12101:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12093:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":749,"name":"uint256","nodeType":"ElementaryTypeName","src":"12093:7:2","typeDescriptions":{}}},"id":756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12093:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":748,"id":757,"nodeType":"Return","src":"12086:38:2"}]},"documentation":{"id":739,"nodeType":"StructuredDocumentation","src":"11660:331:2","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":759,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"12005:2:2","nodeType":"FunctionDefinition","parameters":{"id":745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":742,"mutability":"mutable","name":"set","nameLocation":"12024:3:2","nodeType":"VariableDeclaration","scope":759,"src":"12008:19:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$660_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":741,"nodeType":"UserDefinedTypeName","pathNode":{"id":740,"name":"UintSet","nameLocations":["12008:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":660,"src":"12008:7:2"},"referencedDeclaration":660,"src":"12008:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$660_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":744,"mutability":"mutable","name":"index","nameLocation":"12037:5:2","nodeType":"VariableDeclaration","scope":759,"src":"12029:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":743,"name":"uint256","nodeType":"ElementaryTypeName","src":"12029:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12007:36:2"},"returnParameters":{"id":748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":759,"src":"12067:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":746,"name":"uint256","nodeType":"ElementaryTypeName","src":"12067:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12066:9:2"},"scope":790,"src":"11996:135:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":788,"nodeType":"Block","src":"12749:219:2","statements":[{"assignments":[773],"declarations":[{"constant":false,"id":773,"mutability":"mutable","name":"store","nameLocation":"12776:5:2","nodeType":"VariableDeclaration","scope":788,"src":"12759:22:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":771,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12759:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":772,"nodeType":"ArrayTypeName","src":"12759:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":778,"initialValue":{"arguments":[{"expression":{"id":775,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"12792:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$660_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":776,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12796:6:2","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":659,"src":"12792:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$188_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$188_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":774,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"12784:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$188_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12784:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12759:44:2"},{"assignments":[783],"declarations":[{"constant":false,"id":783,"mutability":"mutable","name":"result","nameLocation":"12830:6:2","nodeType":"VariableDeclaration","scope":788,"src":"12813:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":781,"name":"uint256","nodeType":"ElementaryTypeName","src":"12813:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":782,"nodeType":"ArrayTypeName","src":"12813:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":784,"nodeType":"VariableDeclarationStatement","src":"12813:23:2"},{"AST":{"nativeSrc":"12899:39:2","nodeType":"YulBlock","src":"12899:39:2","statements":[{"nativeSrc":"12913:15:2","nodeType":"YulAssignment","src":"12913:15:2","value":{"name":"store","nativeSrc":"12923:5:2","nodeType":"YulIdentifier","src":"12923:5:2"},"variableNames":[{"name":"result","nativeSrc":"12913:6:2","nodeType":"YulIdentifier","src":"12913:6:2"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":783,"isOffset":false,"isSlot":false,"src":"12913:6:2","valueSize":1},{"declaration":773,"isOffset":false,"isSlot":false,"src":"12923:5:2","valueSize":1}],"id":785,"nodeType":"InlineAssembly","src":"12890:48:2"},{"expression":{"id":786,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"12955:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":768,"id":787,"nodeType":"Return","src":"12948:13:2"}]},"documentation":{"id":760,"nodeType":"StructuredDocumentation","src":"12137:529:2","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":789,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12680:6:2","nodeType":"FunctionDefinition","parameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":763,"mutability":"mutable","name":"set","nameLocation":"12703:3:2","nodeType":"VariableDeclaration","scope":789,"src":"12687:19:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$660_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":762,"nodeType":"UserDefinedTypeName","pathNode":{"id":761,"name":"UintSet","nameLocations":["12687:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":660,"src":"12687:7:2"},"referencedDeclaration":660,"src":"12687:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$660_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12686:21:2"},"returnParameters":{"id":768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":789,"src":"12731:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":765,"name":"uint256","nodeType":"ElementaryTypeName","src":"12731:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":766,"nodeType":"ArrayTypeName","src":"12731:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12730:18:2"},"scope":790,"src":"12671:297:2","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":791,"src":"1330:11640:2","usedErrors":[],"usedEvents":[]}],"src":"205:12766:2"},"id":2},"contracts/tax/ITaxHandler.sol":{"ast":{"absolutePath":"contracts/tax/ITaxHandler.sol","exportedSymbols":{"ITaxHandler":[806]},"id":807,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":792,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"ITaxHandler","contractDependencies":[],"contractKind":"interface","documentation":{"id":793,"nodeType":"StructuredDocumentation","src":"58:140:3","text":" @title Tax handler interface\n @dev Any class that implements this interface can be used for protocol-specific tax calculations."},"fullyImplemented":false,"id":806,"linearizedBaseContracts":[806],"name":"ITaxHandler","nameLocation":"209:11:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":794,"nodeType":"StructuredDocumentation","src":"227:270:3","text":" @notice Get number of tokens to pay as tax.\n @param benefactor Address of the benefactor.\n @param beneficiary Address of the beneficiary.\n @param amount Number of tokens in the transfer.\n @return Number of tokens to pay as tax."},"functionSelector":"d7ad21ac","id":805,"implemented":false,"kind":"function","modifiers":[],"name":"getTax","nameLocation":"511:6:3","nodeType":"FunctionDefinition","parameters":{"id":801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":796,"mutability":"mutable","name":"benefactor","nameLocation":"535:10:3","nodeType":"VariableDeclaration","scope":805,"src":"527:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":795,"name":"address","nodeType":"ElementaryTypeName","src":"527:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":798,"mutability":"mutable","name":"beneficiary","nameLocation":"563:11:3","nodeType":"VariableDeclaration","scope":805,"src":"555:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":797,"name":"address","nodeType":"ElementaryTypeName","src":"555:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":800,"mutability":"mutable","name":"amount","nameLocation":"592:6:3","nodeType":"VariableDeclaration","scope":805,"src":"584:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":799,"name":"uint256","nodeType":"ElementaryTypeName","src":"584:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"517:87:3"},"returnParameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":805,"src":"628:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":802,"name":"uint256","nodeType":"ElementaryTypeName","src":"628:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"627:9:3"},"scope":806,"src":"502:135:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":807,"src":"199:440:3","usedErrors":[],"usedEvents":[]}],"src":"32:607:3"},"id":3},"contracts/tax/StaticTaxHandler.sol":{"ast":{"absolutePath":"contracts/tax/StaticTaxHandler.sol","exportedSymbols":{"Context":[177],"EnumerableSet":[790],"ITaxHandler":[806],"Ownable":[147],"StaticTaxHandler":[958]},"id":959,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":808,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:4"},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","id":809,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":959,"sourceUnit":791,"src":"58:65:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":810,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":959,"sourceUnit":148,"src":"124:52:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/tax/ITaxHandler.sol","file":"./ITaxHandler.sol","id":811,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":959,"sourceUnit":807,"src":"178:27:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":813,"name":"ITaxHandler","nameLocations":["685:11:4"],"nodeType":"IdentifierPath","referencedDeclaration":806,"src":"685:11:4"},"id":814,"nodeType":"InheritanceSpecifier","src":"685:11:4"},{"baseName":{"id":815,"name":"Ownable","nameLocations":["698:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"698:7:4"},"id":816,"nodeType":"InheritanceSpecifier","src":"698:7:4"}],"canonicalName":"StaticTaxHandler","contractDependencies":[],"contractKind":"contract","documentation":{"id":812,"nodeType":"StructuredDocumentation","src":"207:448:4","text":" @title Static tax handler contract\n @dev This contract allows protocols to collect tax on transactions that count as either sells or liquidity additions\n to exchange pools. Addresses can be exempted from tax collection, and addresses designated as exchange pools can be\n added and removed by the owner of this contract. The owner of the contract should be set to a DAO-controlled timelock\n or at the very least a multisig wallet."},"fullyImplemented":true,"id":958,"linearizedBaseContracts":[958,147,177,806],"name":"StaticTaxHandler","nameLocation":"665:16:4","nodeType":"ContractDefinition","nodes":[{"global":false,"id":820,"libraryName":{"id":817,"name":"EnumerableSet","nameLocations":["718:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":790,"src":"718:13:4"},"nodeType":"UsingForDirective","src":"712:49:4","typeName":{"id":819,"nodeType":"UserDefinedTypeName","pathNode":{"id":818,"name":"EnumerableSet.AddressSet","nameLocations":["736:13:4","750:10:4"],"nodeType":"IdentifierPath","referencedDeclaration":503,"src":"736:24:4"},"referencedDeclaration":503,"src":"736:24:4","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$503_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"constant":false,"documentation":{"id":821,"nodeType":"StructuredDocumentation","src":"767:46:4","text":"@dev The set of addresses exempt from tax."},"id":824,"mutability":"mutable","name":"_exempted","nameLocation":"851:9:4","nodeType":"VariableDeclaration","scope":958,"src":"818:42:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$503_storage","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":823,"nodeType":"UserDefinedTypeName","pathNode":{"id":822,"name":"EnumerableSet.AddressSet","nameLocations":["818:13:4","832:10:4"],"nodeType":"IdentifierPath","referencedDeclaration":503,"src":"818:24:4"},"referencedDeclaration":503,"src":"818:24:4","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$503_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"private"},{"constant":false,"functionSelector":"ae7b6d16","id":826,"mutability":"mutable","name":"taxPercentage","nameLocation":"882:13:4","nodeType":"VariableDeclaration","scope":958,"src":"867:28:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":825,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"902:44:4","text":"@notice Emitted when the tax is updated."},"eventSelector":"4953fbf85b1bef649a55e328880dc688093c62b90bc90dec0ffcb6a1c5cce0a5","id":833,"name":"TaxPercentageUpdated","nameLocation":"957:20:4","nodeType":"EventDefinition","parameters":{"id":832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"indexed":false,"mutability":"mutable","name":"oldTaxPercentage","nameLocation":"986:16:4","nodeType":"VariableDeclaration","scope":833,"src":"978:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":828,"name":"uint256","nodeType":"ElementaryTypeName","src":"978:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":831,"indexed":false,"mutability":"mutable","name":"newTaxPercentage","nameLocation":"1012:16:4","nodeType":"VariableDeclaration","scope":833,"src":"1004:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":830,"name":"uint256","nodeType":"ElementaryTypeName","src":"1004:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"977:52:4"},"src":"951:79:4"},{"anonymous":false,"documentation":{"id":834,"nodeType":"StructuredDocumentation","src":"1036:91:4","text":"@notice Emitted when an address is added to or removed from the exempted addresses set."},"eventSelector":"36ee46fa09c2419f7bcf8135c2bdd56bc882be141cb075961717003bed74367d","id":840,"name":"TaxExemptionUpdated","nameLocation":"1138:19:4","nodeType":"EventDefinition","parameters":{"id":839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":836,"indexed":true,"mutability":"mutable","name":"wallet","nameLocation":"1174:6:4","nodeType":"VariableDeclaration","scope":840,"src":"1158:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":835,"name":"address","nodeType":"ElementaryTypeName","src":"1158:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":838,"indexed":false,"mutability":"mutable","name":"exempted","nameLocation":"1187:8:4","nodeType":"VariableDeclaration","scope":840,"src":"1182:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":837,"name":"bool","nodeType":"ElementaryTypeName","src":"1182:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1157:39:4"},"src":"1132:65:4"},{"body":{"id":855,"nodeType":"Block","src":"1419:53:4","statements":[{"expression":{"id":853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":851,"name":"taxPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"1429:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":852,"name":"initialTaxPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"1445:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1429:36:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":854,"nodeType":"ExpressionStatement","src":"1429:36:4"}]},"documentation":{"id":841,"nodeType":"StructuredDocumentation","src":"1203:115:4","text":" @param initialTaxPercentage The number of tax percentage to start out with for tax calculations."},"id":856,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":848,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"1401:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":849,"kind":"baseConstructorSpecifier","modifierName":{"id":847,"name":"Ownable","nameLocations":["1393:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1393:7:4"},"nodeType":"ModifierInvocation","src":"1393:21:4"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":843,"mutability":"mutable","name":"initialOwner","nameLocation":"1343:12:4","nodeType":"VariableDeclaration","scope":856,"src":"1335:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":842,"name":"address","nodeType":"ElementaryTypeName","src":"1335:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":845,"mutability":"mutable","name":"initialTaxPercentage","nameLocation":"1365:20:4","nodeType":"VariableDeclaration","scope":856,"src":"1357:28:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":844,"name":"uint256","nodeType":"ElementaryTypeName","src":"1357:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1334:52:4"},"returnParameters":{"id":850,"nodeType":"ParameterList","parameters":[],"src":"1419:0:4"},"scope":958,"src":"1323:149:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[805],"body":{"id":887,"nodeType":"Block","src":"1622:174:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":870,"name":"benefactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"1655:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":868,"name":"_exempted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"1636:9:4","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$503_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":869,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1646:8:4","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":584,"src":"1636:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$503_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$503_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"}},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":874,"name":"beneficiary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"1689:11:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":872,"name":"_exempted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"1670:9:4","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$503_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":873,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1680:8:4","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":584,"src":"1670:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$503_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$503_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"}},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1670:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1636:65:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":880,"nodeType":"IfStatement","src":"1632:104:4","trueBody":{"id":879,"nodeType":"Block","src":"1703:33:4","statements":[{"expression":{"hexValue":"30","id":877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":867,"id":878,"nodeType":"Return","src":"1717:8:4"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":881,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"1753:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":882,"name":"taxPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"1762:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1753:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130305f3030305f303030","id":884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1778:11:4","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"value":"100_000_000"},"src":"1753:36:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":867,"id":886,"nodeType":"Return","src":"1746:43:4"}]},"functionSelector":"d7ad21ac","id":888,"implemented":true,"kind":"function","modifiers":[],"name":"getTax","nameLocation":"1487:6:4","nodeType":"FunctionDefinition","overrides":{"id":864,"nodeType":"OverrideSpecifier","overrides":[],"src":"1595:8:4"},"parameters":{"id":863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":858,"mutability":"mutable","name":"benefactor","nameLocation":"1511:10:4","nodeType":"VariableDeclaration","scope":888,"src":"1503:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":857,"name":"address","nodeType":"ElementaryTypeName","src":"1503:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":860,"mutability":"mutable","name":"beneficiary","nameLocation":"1539:11:4","nodeType":"VariableDeclaration","scope":888,"src":"1531:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":859,"name":"address","nodeType":"ElementaryTypeName","src":"1531:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":862,"mutability":"mutable","name":"amount","nameLocation":"1568:6:4","nodeType":"VariableDeclaration","scope":888,"src":"1560:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":861,"name":"uint256","nodeType":"ElementaryTypeName","src":"1560:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1493:87:4"},"returnParameters":{"id":867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":866,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":888,"src":"1613:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":865,"name":"uint256","nodeType":"ElementaryTypeName","src":"1613:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1612:9:4"},"scope":958,"src":"1478:318:4","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":916,"nodeType":"Block","src":"2063:264:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":897,"name":"newTaxPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"2094:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2114:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2094:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642056616c75652e","id":900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2129:16:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_efe8f4c43e0a7ce9afba23fb6c993cae9893c4081f1a55c9c3488cdb730ee4a2","typeString":"literal_string \"Invalid Value.\""},"value":"Invalid Value."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_efe8f4c43e0a7ce9afba23fb6c993cae9893c4081f1a55c9c3488cdb730ee4a2","typeString":"literal_string \"Invalid Value.\""}],"id":896,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2073:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2073:82:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":902,"nodeType":"ExpressionStatement","src":"2073:82:4"},{"assignments":[904],"declarations":[{"constant":false,"id":904,"mutability":"mutable","name":"oldTaxPercentage","nameLocation":"2174:16:4","nodeType":"VariableDeclaration","scope":916,"src":"2166:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":903,"name":"uint256","nodeType":"ElementaryTypeName","src":"2166:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":906,"initialValue":{"id":905,"name":"taxPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"2193:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2166:40:4"},{"expression":{"id":909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":907,"name":"taxPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"2216:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":908,"name":"newTaxPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"2232:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2216:32:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":910,"nodeType":"ExpressionStatement","src":"2216:32:4"},{"eventCall":{"arguments":[{"id":912,"name":"oldTaxPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"2285:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":913,"name":"newTaxPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"2303:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":911,"name":"TaxPercentageUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"2264:20:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2264:56:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":915,"nodeType":"EmitStatement","src":"2259:61:4"}]},"documentation":{"id":889,"nodeType":"StructuredDocumentation","src":"1802:185:4","text":" @notice Set new number for tax basis points. This number can only ever be lowered.\n @param newTaxPercentage New tax basis points number to set for calculations."},"functionSelector":"699abb3c","id":917,"implemented":true,"kind":"function","modifiers":[{"id":894,"kind":"modifierInvocation","modifierName":{"id":893,"name":"onlyOwner","nameLocations":["2053:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2053:9:4"},"nodeType":"ModifierInvocation","src":"2053:9:4"}],"name":"setTaxPercentage","nameLocation":"2001:16:4","nodeType":"FunctionDefinition","parameters":{"id":892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":891,"mutability":"mutable","name":"newTaxPercentage","nameLocation":"2026:16:4","nodeType":"VariableDeclaration","scope":917,"src":"2018:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":890,"name":"uint256","nodeType":"ElementaryTypeName","src":"2018:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2017:26:4"},"returnParameters":{"id":895,"nodeType":"ParameterList","parameters":[],"src":"2063:0:4"},"scope":958,"src":"1992:335:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":936,"nodeType":"Block","src":"2543:112:4","statements":[{"condition":{"arguments":[{"id":927,"name":"exemption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"2571:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":925,"name":"_exempted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"2557:9:4","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$503_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":926,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2567:3:4","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":530,"src":"2557:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$503_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$503_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2557:24:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":935,"nodeType":"IfStatement","src":"2553:96:4","trueBody":{"id":934,"nodeType":"Block","src":"2583:66:4","statements":[{"eventCall":{"arguments":[{"id":930,"name":"exemption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"2622:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2633:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":929,"name":"TaxExemptionUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"2602:19:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2602:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":933,"nodeType":"EmitStatement","src":"2597:41:4"}]}}]},"documentation":{"id":918,"nodeType":"StructuredDocumentation","src":"2333:145:4","text":" @notice Add address to set of tax-exempted addresses.\n @param exemption Address to add to set of tax-exempted addresses."},"functionSelector":"705931fa","id":937,"implemented":true,"kind":"function","modifiers":[{"id":923,"kind":"modifierInvocation","modifierName":{"id":922,"name":"onlyOwner","nameLocations":["2533:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2533:9:4"},"nodeType":"ModifierInvocation","src":"2533:9:4"}],"name":"addExemption","nameLocation":"2492:12:4","nodeType":"FunctionDefinition","parameters":{"id":921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":920,"mutability":"mutable","name":"exemption","nameLocation":"2513:9:4","nodeType":"VariableDeclaration","scope":937,"src":"2505:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":919,"name":"address","nodeType":"ElementaryTypeName","src":"2505:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2504:19:4"},"returnParameters":{"id":924,"nodeType":"ParameterList","parameters":[],"src":"2543:0:4"},"scope":958,"src":"2483:172:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":956,"nodeType":"Block","src":"2884:116:4","statements":[{"condition":{"arguments":[{"id":947,"name":"exemption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"2915:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":945,"name":"_exempted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"2898:9:4","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$503_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":946,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2908:6:4","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":557,"src":"2898:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$503_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$503_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2898:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":955,"nodeType":"IfStatement","src":"2894:100:4","trueBody":{"id":954,"nodeType":"Block","src":"2927:67:4","statements":[{"eventCall":{"arguments":[{"id":950,"name":"exemption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"2966:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2977:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":949,"name":"TaxExemptionUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"2946:19:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2946:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":953,"nodeType":"EmitStatement","src":"2941:42:4"}]}}]},"documentation":{"id":938,"nodeType":"StructuredDocumentation","src":"2661:155:4","text":" @notice Remove address from set of tax-exempted addresses.\n @param exemption Address to remove from set of tax-exempted addresses."},"functionSelector":"0ed9cc4c","id":957,"implemented":true,"kind":"function","modifiers":[{"id":943,"kind":"modifierInvocation","modifierName":{"id":942,"name":"onlyOwner","nameLocations":["2874:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2874:9:4"},"nodeType":"ModifierInvocation","src":"2874:9:4"}],"name":"removeExemption","nameLocation":"2830:15:4","nodeType":"FunctionDefinition","parameters":{"id":941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":940,"mutability":"mutable","name":"exemption","nameLocation":"2854:9:4","nodeType":"VariableDeclaration","scope":957,"src":"2846:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":939,"name":"address","nodeType":"ElementaryTypeName","src":"2846:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2845:19:4"},"returnParameters":{"id":944,"nodeType":"ParameterList","parameters":[],"src":"2884:0:4"},"scope":958,"src":"2821:179:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":959,"src":"656:2346:4","usedErrors":[13,18],"usedEvents":[24,833,840]}],"src":"32:2970:4"},"id":4}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fc5d1723b91d94412ddf31a27681e58d7fea5f8cde80092c9e6170733b5de0ff64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC TSTORE OR 0x23 0xB9 SAR SWAP5 COINBASE 0x2D 0xDF BALANCE LOG2 PUSH23 0x81E58D7FEA5F8CDE80092C9E6170733B5DE0FF64736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"1330:11640:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fc5d1723b91d94412ddf31a27681e58d7fea5f8cde80092c9e6170733b5de0ff64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC TSTORE OR 0x23 0xB9 SAR SWAP5 COINBASE 0x2D 0xDF BALANCE LOG2 PUSH23 0x81E58D7FEA5F8CDE80092C9E6170733B5DE0FF64736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"1330:11640:2:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]}},\"version\":1}"}},"contracts/tax/ITaxHandler.sol":{"ITaxHandler":{"abi":[{"inputs":[{"internalType":"address","name":"benefactor","type":"address"},{"internalType":"address","name":"beneficiary","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getTax","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getTax(address,address,uint256)":"d7ad21ac"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"benefactor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Any class that implements this interface can be used for protocol-specific tax calculations.\",\"kind\":\"dev\",\"methods\":{\"getTax(address,address,uint256)\":{\"params\":{\"amount\":\"Number of tokens in the transfer.\",\"benefactor\":\"Address of the benefactor.\",\"beneficiary\":\"Address of the beneficiary.\"},\"returns\":{\"_0\":\"Number of tokens to pay as tax.\"}}},\"title\":\"Tax handler interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getTax(address,address,uint256)\":{\"notice\":\"Get number of tokens to pay as tax.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tax/ITaxHandler.sol\":\"ITaxHandler\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/tax/ITaxHandler.sol\":{\"keccak256\":\"0xfbe50a73a526b7425030b98d2659fd5e5eb4222102f59c5b620d1c77a0178518\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b720ef524c3d25af70f56f19eff096a2142d6d3d606166b326a96f5c0afd49db\",\"dweb:/ipfs/QmWukwdeBzzMRzemBxFc8nK2yZkhjDP8r4b8abGuWuBdF4\"]}},\"version\":1}"}},"contracts/tax/StaticTaxHandler.sol":{"StaticTaxHandler":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"},{"internalType":"uint256","name":"initialTaxPercentage","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"wallet","type":"address"},{"indexed":false,"internalType":"bool","name":"exempted","type":"bool"}],"name":"TaxExemptionUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldTaxPercentage","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newTaxPercentage","type":"uint256"}],"name":"TaxPercentageUpdated","type":"event"},{"inputs":[{"internalType":"address","name":"exemption","type":"address"}],"name":"addExemption","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"benefactor","type":"address"},{"internalType":"address","name":"beneficiary","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getTax","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"exemption","type":"address"}],"name":"removeExemption","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newTaxPercentage","type":"uint256"}],"name":"setTaxPercentage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"taxPercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_856":{"entryPoint":null,"id":856,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":206,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":485,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":544,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256_fromMemory":{"entryPoint":567,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":638,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":655,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":439,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":407,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":508,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":402,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":459,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":518,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:2067:5","nodeType":"YulBlock","src":"0:2067:5","statements":[{"body":{"nativeSrc":"47:35:5","nodeType":"YulBlock","src":"47:35:5","statements":[{"nativeSrc":"57:19:5","nodeType":"YulAssignment","src":"57:19:5","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:5","nodeType":"YulLiteral","src":"73:2:5","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:5","nodeType":"YulIdentifier","src":"67:5:5"},"nativeSrc":"67:9:5","nodeType":"YulFunctionCall","src":"67:9:5"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:5","nodeType":"YulIdentifier","src":"57:6:5"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:5","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:5","nodeType":"YulTypedName","src":"40:6:5","type":""}],"src":"7:75:5"},{"body":{"nativeSrc":"177:28:5","nodeType":"YulBlock","src":"177:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:5","nodeType":"YulLiteral","src":"194:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:5","nodeType":"YulLiteral","src":"197:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:5","nodeType":"YulIdentifier","src":"187:6:5"},"nativeSrc":"187:12:5","nodeType":"YulFunctionCall","src":"187:12:5"},"nativeSrc":"187:12:5","nodeType":"YulExpressionStatement","src":"187:12:5"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:5","nodeType":"YulFunctionDefinition","src":"88:117:5"},{"body":{"nativeSrc":"300:28:5","nodeType":"YulBlock","src":"300:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:5","nodeType":"YulLiteral","src":"317:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:5","nodeType":"YulLiteral","src":"320:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:5","nodeType":"YulIdentifier","src":"310:6:5"},"nativeSrc":"310:12:5","nodeType":"YulFunctionCall","src":"310:12:5"},"nativeSrc":"310:12:5","nodeType":"YulExpressionStatement","src":"310:12:5"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:5","nodeType":"YulFunctionDefinition","src":"211:117:5"},{"body":{"nativeSrc":"379:81:5","nodeType":"YulBlock","src":"379:81:5","statements":[{"nativeSrc":"389:65:5","nodeType":"YulAssignment","src":"389:65:5","value":{"arguments":[{"name":"value","nativeSrc":"404:5:5","nodeType":"YulIdentifier","src":"404:5:5"},{"kind":"number","nativeSrc":"411:42:5","nodeType":"YulLiteral","src":"411:42:5","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:5","nodeType":"YulIdentifier","src":"400:3:5"},"nativeSrc":"400:54:5","nodeType":"YulFunctionCall","src":"400:54:5"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:5","nodeType":"YulIdentifier","src":"389:7:5"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:5","nodeType":"YulTypedName","src":"361:5:5","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:5","nodeType":"YulTypedName","src":"371:7:5","type":""}],"src":"334:126:5"},{"body":{"nativeSrc":"511:51:5","nodeType":"YulBlock","src":"511:51:5","statements":[{"nativeSrc":"521:35:5","nodeType":"YulAssignment","src":"521:35:5","value":{"arguments":[{"name":"value","nativeSrc":"550:5:5","nodeType":"YulIdentifier","src":"550:5:5"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:5","nodeType":"YulIdentifier","src":"532:17:5"},"nativeSrc":"532:24:5","nodeType":"YulFunctionCall","src":"532:24:5"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:5","nodeType":"YulIdentifier","src":"521:7:5"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:5","nodeType":"YulTypedName","src":"493:5:5","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:5","nodeType":"YulTypedName","src":"503:7:5","type":""}],"src":"466:96:5"},{"body":{"nativeSrc":"611:79:5","nodeType":"YulBlock","src":"611:79:5","statements":[{"body":{"nativeSrc":"668:16:5","nodeType":"YulBlock","src":"668:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:5","nodeType":"YulLiteral","src":"677:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:5","nodeType":"YulLiteral","src":"680:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:5","nodeType":"YulIdentifier","src":"670:6:5"},"nativeSrc":"670:12:5","nodeType":"YulFunctionCall","src":"670:12:5"},"nativeSrc":"670:12:5","nodeType":"YulExpressionStatement","src":"670:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:5","nodeType":"YulIdentifier","src":"634:5:5"},{"arguments":[{"name":"value","nativeSrc":"659:5:5","nodeType":"YulIdentifier","src":"659:5:5"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:5","nodeType":"YulIdentifier","src":"641:17:5"},"nativeSrc":"641:24:5","nodeType":"YulFunctionCall","src":"641:24:5"}],"functionName":{"name":"eq","nativeSrc":"631:2:5","nodeType":"YulIdentifier","src":"631:2:5"},"nativeSrc":"631:35:5","nodeType":"YulFunctionCall","src":"631:35:5"}],"functionName":{"name":"iszero","nativeSrc":"624:6:5","nodeType":"YulIdentifier","src":"624:6:5"},"nativeSrc":"624:43:5","nodeType":"YulFunctionCall","src":"624:43:5"},"nativeSrc":"621:63:5","nodeType":"YulIf","src":"621:63:5"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:5","nodeType":"YulTypedName","src":"604:5:5","type":""}],"src":"568:122:5"},{"body":{"nativeSrc":"759:80:5","nodeType":"YulBlock","src":"759:80:5","statements":[{"nativeSrc":"769:22:5","nodeType":"YulAssignment","src":"769:22:5","value":{"arguments":[{"name":"offset","nativeSrc":"784:6:5","nodeType":"YulIdentifier","src":"784:6:5"}],"functionName":{"name":"mload","nativeSrc":"778:5:5","nodeType":"YulIdentifier","src":"778:5:5"},"nativeSrc":"778:13:5","nodeType":"YulFunctionCall","src":"778:13:5"},"variableNames":[{"name":"value","nativeSrc":"769:5:5","nodeType":"YulIdentifier","src":"769:5:5"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"827:5:5","nodeType":"YulIdentifier","src":"827:5:5"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"800:26:5","nodeType":"YulIdentifier","src":"800:26:5"},"nativeSrc":"800:33:5","nodeType":"YulFunctionCall","src":"800:33:5"},"nativeSrc":"800:33:5","nodeType":"YulExpressionStatement","src":"800:33:5"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"696:143:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"737:6:5","nodeType":"YulTypedName","src":"737:6:5","type":""},{"name":"end","nativeSrc":"745:3:5","nodeType":"YulTypedName","src":"745:3:5","type":""}],"returnVariables":[{"name":"value","nativeSrc":"753:5:5","nodeType":"YulTypedName","src":"753:5:5","type":""}],"src":"696:143:5"},{"body":{"nativeSrc":"890:32:5","nodeType":"YulBlock","src":"890:32:5","statements":[{"nativeSrc":"900:16:5","nodeType":"YulAssignment","src":"900:16:5","value":{"name":"value","nativeSrc":"911:5:5","nodeType":"YulIdentifier","src":"911:5:5"},"variableNames":[{"name":"cleaned","nativeSrc":"900:7:5","nodeType":"YulIdentifier","src":"900:7:5"}]}]},"name":"cleanup_t_uint256","nativeSrc":"845:77:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"872:5:5","nodeType":"YulTypedName","src":"872:5:5","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"882:7:5","nodeType":"YulTypedName","src":"882:7:5","type":""}],"src":"845:77:5"},{"body":{"nativeSrc":"971:79:5","nodeType":"YulBlock","src":"971:79:5","statements":[{"body":{"nativeSrc":"1028:16:5","nodeType":"YulBlock","src":"1028:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1037:1:5","nodeType":"YulLiteral","src":"1037:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"1040:1:5","nodeType":"YulLiteral","src":"1040:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1030:6:5","nodeType":"YulIdentifier","src":"1030:6:5"},"nativeSrc":"1030:12:5","nodeType":"YulFunctionCall","src":"1030:12:5"},"nativeSrc":"1030:12:5","nodeType":"YulExpressionStatement","src":"1030:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"994:5:5","nodeType":"YulIdentifier","src":"994:5:5"},{"arguments":[{"name":"value","nativeSrc":"1019:5:5","nodeType":"YulIdentifier","src":"1019:5:5"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1001:17:5","nodeType":"YulIdentifier","src":"1001:17:5"},"nativeSrc":"1001:24:5","nodeType":"YulFunctionCall","src":"1001:24:5"}],"functionName":{"name":"eq","nativeSrc":"991:2:5","nodeType":"YulIdentifier","src":"991:2:5"},"nativeSrc":"991:35:5","nodeType":"YulFunctionCall","src":"991:35:5"}],"functionName":{"name":"iszero","nativeSrc":"984:6:5","nodeType":"YulIdentifier","src":"984:6:5"},"nativeSrc":"984:43:5","nodeType":"YulFunctionCall","src":"984:43:5"},"nativeSrc":"981:63:5","nodeType":"YulIf","src":"981:63:5"}]},"name":"validator_revert_t_uint256","nativeSrc":"928:122:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"964:5:5","nodeType":"YulTypedName","src":"964:5:5","type":""}],"src":"928:122:5"},{"body":{"nativeSrc":"1119:80:5","nodeType":"YulBlock","src":"1119:80:5","statements":[{"nativeSrc":"1129:22:5","nodeType":"YulAssignment","src":"1129:22:5","value":{"arguments":[{"name":"offset","nativeSrc":"1144:6:5","nodeType":"YulIdentifier","src":"1144:6:5"}],"functionName":{"name":"mload","nativeSrc":"1138:5:5","nodeType":"YulIdentifier","src":"1138:5:5"},"nativeSrc":"1138:13:5","nodeType":"YulFunctionCall","src":"1138:13:5"},"variableNames":[{"name":"value","nativeSrc":"1129:5:5","nodeType":"YulIdentifier","src":"1129:5:5"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1187:5:5","nodeType":"YulIdentifier","src":"1187:5:5"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"1160:26:5","nodeType":"YulIdentifier","src":"1160:26:5"},"nativeSrc":"1160:33:5","nodeType":"YulFunctionCall","src":"1160:33:5"},"nativeSrc":"1160:33:5","nodeType":"YulExpressionStatement","src":"1160:33:5"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"1056:143:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1097:6:5","nodeType":"YulTypedName","src":"1097:6:5","type":""},{"name":"end","nativeSrc":"1105:3:5","nodeType":"YulTypedName","src":"1105:3:5","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1113:5:5","nodeType":"YulTypedName","src":"1113:5:5","type":""}],"src":"1056:143:5"},{"body":{"nativeSrc":"1299:413:5","nodeType":"YulBlock","src":"1299:413:5","statements":[{"body":{"nativeSrc":"1345:83:5","nodeType":"YulBlock","src":"1345:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1347:77:5","nodeType":"YulIdentifier","src":"1347:77:5"},"nativeSrc":"1347:79:5","nodeType":"YulFunctionCall","src":"1347:79:5"},"nativeSrc":"1347:79:5","nodeType":"YulExpressionStatement","src":"1347:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1320:7:5","nodeType":"YulIdentifier","src":"1320:7:5"},{"name":"headStart","nativeSrc":"1329:9:5","nodeType":"YulIdentifier","src":"1329:9:5"}],"functionName":{"name":"sub","nativeSrc":"1316:3:5","nodeType":"YulIdentifier","src":"1316:3:5"},"nativeSrc":"1316:23:5","nodeType":"YulFunctionCall","src":"1316:23:5"},{"kind":"number","nativeSrc":"1341:2:5","nodeType":"YulLiteral","src":"1341:2:5","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1312:3:5","nodeType":"YulIdentifier","src":"1312:3:5"},"nativeSrc":"1312:32:5","nodeType":"YulFunctionCall","src":"1312:32:5"},"nativeSrc":"1309:119:5","nodeType":"YulIf","src":"1309:119:5"},{"nativeSrc":"1438:128:5","nodeType":"YulBlock","src":"1438:128:5","statements":[{"nativeSrc":"1453:15:5","nodeType":"YulVariableDeclaration","src":"1453:15:5","value":{"kind":"number","nativeSrc":"1467:1:5","nodeType":"YulLiteral","src":"1467:1:5","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1457:6:5","nodeType":"YulTypedName","src":"1457:6:5","type":""}]},{"nativeSrc":"1482:74:5","nodeType":"YulAssignment","src":"1482:74:5","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1528:9:5","nodeType":"YulIdentifier","src":"1528:9:5"},{"name":"offset","nativeSrc":"1539:6:5","nodeType":"YulIdentifier","src":"1539:6:5"}],"functionName":{"name":"add","nativeSrc":"1524:3:5","nodeType":"YulIdentifier","src":"1524:3:5"},"nativeSrc":"1524:22:5","nodeType":"YulFunctionCall","src":"1524:22:5"},{"name":"dataEnd","nativeSrc":"1548:7:5","nodeType":"YulIdentifier","src":"1548:7:5"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1492:31:5","nodeType":"YulIdentifier","src":"1492:31:5"},"nativeSrc":"1492:64:5","nodeType":"YulFunctionCall","src":"1492:64:5"},"variableNames":[{"name":"value0","nativeSrc":"1482:6:5","nodeType":"YulIdentifier","src":"1482:6:5"}]}]},{"nativeSrc":"1576:129:5","nodeType":"YulBlock","src":"1576:129:5","statements":[{"nativeSrc":"1591:16:5","nodeType":"YulVariableDeclaration","src":"1591:16:5","value":{"kind":"number","nativeSrc":"1605:2:5","nodeType":"YulLiteral","src":"1605:2:5","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1595:6:5","nodeType":"YulTypedName","src":"1595:6:5","type":""}]},{"nativeSrc":"1621:74:5","nodeType":"YulAssignment","src":"1621:74:5","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1667:9:5","nodeType":"YulIdentifier","src":"1667:9:5"},{"name":"offset","nativeSrc":"1678:6:5","nodeType":"YulIdentifier","src":"1678:6:5"}],"functionName":{"name":"add","nativeSrc":"1663:3:5","nodeType":"YulIdentifier","src":"1663:3:5"},"nativeSrc":"1663:22:5","nodeType":"YulFunctionCall","src":"1663:22:5"},{"name":"dataEnd","nativeSrc":"1687:7:5","nodeType":"YulIdentifier","src":"1687:7:5"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"1631:31:5","nodeType":"YulIdentifier","src":"1631:31:5"},"nativeSrc":"1631:64:5","nodeType":"YulFunctionCall","src":"1631:64:5"},"variableNames":[{"name":"value1","nativeSrc":"1621:6:5","nodeType":"YulIdentifier","src":"1621:6:5"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256_fromMemory","nativeSrc":"1205:507:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1261:9:5","nodeType":"YulTypedName","src":"1261:9:5","type":""},{"name":"dataEnd","nativeSrc":"1272:7:5","nodeType":"YulTypedName","src":"1272:7:5","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1284:6:5","nodeType":"YulTypedName","src":"1284:6:5","type":""},{"name":"value1","nativeSrc":"1292:6:5","nodeType":"YulTypedName","src":"1292:6:5","type":""}],"src":"1205:507:5"},{"body":{"nativeSrc":"1783:53:5","nodeType":"YulBlock","src":"1783:53:5","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1800:3:5","nodeType":"YulIdentifier","src":"1800:3:5"},{"arguments":[{"name":"value","nativeSrc":"1823:5:5","nodeType":"YulIdentifier","src":"1823:5:5"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1805:17:5","nodeType":"YulIdentifier","src":"1805:17:5"},"nativeSrc":"1805:24:5","nodeType":"YulFunctionCall","src":"1805:24:5"}],"functionName":{"name":"mstore","nativeSrc":"1793:6:5","nodeType":"YulIdentifier","src":"1793:6:5"},"nativeSrc":"1793:37:5","nodeType":"YulFunctionCall","src":"1793:37:5"},"nativeSrc":"1793:37:5","nodeType":"YulExpressionStatement","src":"1793:37:5"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"1718:118:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1771:5:5","nodeType":"YulTypedName","src":"1771:5:5","type":""},{"name":"pos","nativeSrc":"1778:3:5","nodeType":"YulTypedName","src":"1778:3:5","type":""}],"src":"1718:118:5"},{"body":{"nativeSrc":"1940:124:5","nodeType":"YulBlock","src":"1940:124:5","statements":[{"nativeSrc":"1950:26:5","nodeType":"YulAssignment","src":"1950:26:5","value":{"arguments":[{"name":"headStart","nativeSrc":"1962:9:5","nodeType":"YulIdentifier","src":"1962:9:5"},{"kind":"number","nativeSrc":"1973:2:5","nodeType":"YulLiteral","src":"1973:2:5","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1958:3:5","nodeType":"YulIdentifier","src":"1958:3:5"},"nativeSrc":"1958:18:5","nodeType":"YulFunctionCall","src":"1958:18:5"},"variableNames":[{"name":"tail","nativeSrc":"1950:4:5","nodeType":"YulIdentifier","src":"1950:4:5"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"2030:6:5","nodeType":"YulIdentifier","src":"2030:6:5"},{"arguments":[{"name":"headStart","nativeSrc":"2043:9:5","nodeType":"YulIdentifier","src":"2043:9:5"},{"kind":"number","nativeSrc":"2054:1:5","nodeType":"YulLiteral","src":"2054:1:5","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2039:3:5","nodeType":"YulIdentifier","src":"2039:3:5"},"nativeSrc":"2039:17:5","nodeType":"YulFunctionCall","src":"2039:17:5"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"1986:43:5","nodeType":"YulIdentifier","src":"1986:43:5"},"nativeSrc":"1986:71:5","nodeType":"YulFunctionCall","src":"1986:71:5"},"nativeSrc":"1986:71:5","nodeType":"YulExpressionStatement","src":"1986:71:5"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"1842:222:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1912:9:5","nodeType":"YulTypedName","src":"1912:9:5","type":""},{"name":"value0","nativeSrc":"1924:6:5","nodeType":"YulTypedName","src":"1924:6:5","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1935:4:5","nodeType":"YulTypedName","src":"1935:4:5","type":""}],"src":"1842:222:5"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":5,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000e7638038062000e76833981810160405281019062000037919062000237565b81600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a491906200028f565b60405180910390fd5b620000be81620000ce60201b60201c565b50806003819055505050620002ac565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001c48262000197565b9050919050565b620001d681620001b7565b8114620001e257600080fd5b50565b600081519050620001f681620001cb565b92915050565b6000819050919050565b6200021181620001fc565b81146200021d57600080fd5b50565b600081519050620002318162000206565b92915050565b6000806040838503121562000251576200025062000192565b5b60006200026185828601620001e5565b9250506020620002748582860162000220565b9150509250929050565b6200028981620001b7565b82525050565b6000602082019050620002a660008301846200027e565b92915050565b610bba80620002bc6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100eb578063ae7b6d1614610109578063d7ad21ac14610127578063f2fde38b1461015757610088565b80630ed9cc4c1461008d578063699abb3c146100a9578063705931fa146100c5578063715018a6146100e1575b600080fd5b6100a760048036038101906100a2919061080e565b610173565b005b6100c360048036038101906100be9190610871565b6101e7565b005b6100df60048036038101906100da919061080e565b61027e565b005b6100e96102f2565b005b6100f3610306565b60405161010091906108ad565b60405180910390f35b61011161032f565b60405161011e91906108d7565b60405180910390f35b610141600480360381019061013c91906108f2565b610335565b60405161014e91906108d7565b60405180910390f35b610171600480360381019061016c919061080e565b61039b565b005b61017b610421565b61018f8160016104a890919063ffffffff16565b156101e4578073ffffffffffffffffffffffffffffffffffffffff167f36ee46fa09c2419f7bcf8135c2bdd56bc882be141cb075961717003bed74367d60006040516101db9190610960565b60405180910390a25b50565b6101ef610421565b6000811015610233576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022a906109d8565b60405180910390fd5b60006003549050816003819055507f4953fbf85b1bef649a55e328880dc688093c62b90bc90dec0ffcb6a1c5cce0a581836040516102729291906109f8565b60405180910390a15050565b610286610421565b61029a8160016104d890919063ffffffff16565b156102ef578073ffffffffffffffffffffffffffffffffffffffff167f36ee46fa09c2419f7bcf8135c2bdd56bc882be141cb075961717003bed74367d60016040516102e69190610960565b60405180910390a25b50565b6102fa610421565b6103046000610508565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60035481565b600061034b8460016105cc90919063ffffffff16565b8061036657506103658360016105cc90919063ffffffff16565b5b156103745760009050610394565b6305f5e100600354836103879190610a50565b6103919190610ac1565b90505b9392505050565b6103a3610421565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104155760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161040c91906108ad565b60405180910390fd5b61041e81610508565b50565b6104296105fc565b73ffffffffffffffffffffffffffffffffffffffff16610447610306565b73ffffffffffffffffffffffffffffffffffffffff16146104a65761046a6105fc565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161049d91906108ad565b60405180910390fd5b565b60006104d0836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610604565b905092915050565b6000610500836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610718565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006105f4836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610788565b905092915050565b600033905090565b6000808360010160008481526020019081526020016000205490506000811461070c5760006001826106369190610af2565b905060006001866000018054905061064e9190610af2565b90508082146106bd57600086600001828154811061066f5761066e610b26565b5b906000526020600020015490508087600001848154811061069357610692610b26565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b856000018054806106d1576106d0610b55565b5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610712565b60009150505b92915050565b60006107248383610788565b61077d578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050610782565b600090505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107db826107b0565b9050919050565b6107eb816107d0565b81146107f657600080fd5b50565b600081359050610808816107e2565b92915050565b600060208284031215610824576108236107ab565b5b6000610832848285016107f9565b91505092915050565b6000819050919050565b61084e8161083b565b811461085957600080fd5b50565b60008135905061086b81610845565b92915050565b600060208284031215610887576108866107ab565b5b60006108958482850161085c565b91505092915050565b6108a7816107d0565b82525050565b60006020820190506108c2600083018461089e565b92915050565b6108d18161083b565b82525050565b60006020820190506108ec60008301846108c8565b92915050565b60008060006060848603121561090b5761090a6107ab565b5b6000610919868287016107f9565b935050602061092a868287016107f9565b925050604061093b8682870161085c565b9150509250925092565b60008115159050919050565b61095a81610945565b82525050565b60006020820190506109756000830184610951565b92915050565b600082825260208201905092915050565b7f496e76616c69642056616c75652e000000000000000000000000000000000000600082015250565b60006109c2600e8361097b565b91506109cd8261098c565b602082019050919050565b600060208201905081810360008301526109f1816109b5565b9050919050565b6000604082019050610a0d60008301856108c8565b610a1a60208301846108c8565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a5b8261083b565b9150610a668361083b565b9250828202610a748161083b565b91508282048414831517610a8b57610a8a610a21565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610acc8261083b565b9150610ad78361083b565b925082610ae757610ae6610a92565b5b828204905092915050565b6000610afd8261083b565b9150610b088361083b565b9250828203905081811115610b2057610b1f610a21565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220b9f270ebed06f3162f42763d9cd64693c4c11af59dc4857acdd522f93087634164736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xE76 CODESIZE SUB DUP1 PUSH3 0xE76 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x237 JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA4 SWAP2 SWAP1 PUSH3 0x28F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBE DUP2 PUSH3 0xCE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x2AC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C4 DUP3 PUSH3 0x197 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1D6 DUP2 PUSH3 0x1B7 JUMP JUMPDEST DUP2 EQ PUSH3 0x1E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1F6 DUP2 PUSH3 0x1CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x211 DUP2 PUSH3 0x1FC JUMP JUMPDEST DUP2 EQ PUSH3 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x231 DUP2 PUSH3 0x206 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x251 JUMPI PUSH3 0x250 PUSH3 0x192 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x261 DUP6 DUP3 DUP7 ADD PUSH3 0x1E5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x274 DUP6 DUP3 DUP7 ADD PUSH3 0x220 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH3 0x289 DUP2 PUSH3 0x1B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x2A6 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x27E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBBA DUP1 PUSH3 0x2BC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0xAE7B6D16 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0xD7AD21AC EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x157 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0xED9CC4C EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x699ABB3C EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x705931FA EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x80E JUMP JUMPDEST PUSH2 0x173 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x871 JUMP JUMPDEST PUSH2 0x1E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDA SWAP2 SWAP1 PUSH2 0x80E JUMP JUMPDEST PUSH2 0x27E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE9 PUSH2 0x2F2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF3 PUSH2 0x306 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x100 SWAP2 SWAP1 PUSH2 0x8AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x111 PUSH2 0x32F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x8D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x8F2 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x8D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x80E JUMP JUMPDEST PUSH2 0x39B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17B PUSH2 0x421 JUMP JUMPDEST PUSH2 0x18F DUP2 PUSH1 0x1 PUSH2 0x4A8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x1E4 JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x36EE46FA09C2419F7BCF8135C2BDD56BC882BE141CB075961717003BED74367D PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x960 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMP JUMPDEST PUSH2 0x1EF PUSH2 0x421 JUMP JUMPDEST PUSH1 0x0 DUP2 LT ISZERO PUSH2 0x233 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22A SWAP1 PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0x4953FBF85B1BEF649A55E328880DC688093C62B90BC90DEC0FFCB6A1C5CCE0A5 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x272 SWAP3 SWAP2 SWAP1 PUSH2 0x9F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x286 PUSH2 0x421 JUMP JUMPDEST PUSH2 0x29A DUP2 PUSH1 0x1 PUSH2 0x4D8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x2EF JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x36EE46FA09C2419F7BCF8135C2BDD56BC882BE141CB075961717003BED74367D PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x960 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMP JUMPDEST PUSH2 0x2FA PUSH2 0x421 JUMP JUMPDEST PUSH2 0x304 PUSH1 0x0 PUSH2 0x508 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34B DUP5 PUSH1 0x1 PUSH2 0x5CC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH2 0x366 JUMPI POP PUSH2 0x365 DUP4 PUSH1 0x1 PUSH2 0x5CC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST ISZERO PUSH2 0x374 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x394 JUMP JUMPDEST PUSH4 0x5F5E100 PUSH1 0x3 SLOAD DUP4 PUSH2 0x387 SWAP2 SWAP1 PUSH2 0xA50 JUMP JUMPDEST PUSH2 0x391 SWAP2 SWAP1 PUSH2 0xAC1 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x3A3 PUSH2 0x421 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x415 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40C SWAP2 SWAP1 PUSH2 0x8AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x41E DUP2 PUSH2 0x508 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x429 PUSH2 0x5FC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x447 PUSH2 0x306 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4A6 JUMPI PUSH2 0x46A PUSH2 0x5FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49D SWAP2 SWAP1 PUSH2 0x8AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D0 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x604 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x500 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x718 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F4 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x788 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x70C JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x636 SWAP2 SWAP1 PUSH2 0xAF2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x64E SWAP2 SWAP1 PUSH2 0xAF2 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0x6BD JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x66F JUMPI PUSH2 0x66E PUSH2 0xB26 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x693 JUMPI PUSH2 0x692 PUSH2 0xB26 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x6D1 JUMPI PUSH2 0x6D0 PUSH2 0xB55 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x712 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x724 DUP4 DUP4 PUSH2 0x788 JUMP JUMPDEST PUSH2 0x77D JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x782 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7DB DUP3 PUSH2 0x7B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7EB DUP2 PUSH2 0x7D0 JUMP JUMPDEST DUP2 EQ PUSH2 0x7F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x808 DUP2 PUSH2 0x7E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x824 JUMPI PUSH2 0x823 PUSH2 0x7AB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x832 DUP5 DUP3 DUP6 ADD PUSH2 0x7F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x84E DUP2 PUSH2 0x83B JUMP JUMPDEST DUP2 EQ PUSH2 0x859 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x86B DUP2 PUSH2 0x845 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x887 JUMPI PUSH2 0x886 PUSH2 0x7AB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x895 DUP5 DUP3 DUP6 ADD PUSH2 0x85C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8A7 DUP2 PUSH2 0x7D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8C2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x89E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8D1 DUP2 PUSH2 0x83B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8EC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x90B JUMPI PUSH2 0x90A PUSH2 0x7AB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x919 DUP7 DUP3 DUP8 ADD PUSH2 0x7F9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x92A DUP7 DUP3 DUP8 ADD PUSH2 0x7F9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x93B DUP7 DUP3 DUP8 ADD PUSH2 0x85C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x95A DUP2 PUSH2 0x945 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x975 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x951 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C69642056616C75652E000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9C2 PUSH1 0xE DUP4 PUSH2 0x97B JUMP JUMPDEST SWAP2 POP PUSH2 0x9CD DUP3 PUSH2 0x98C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9F1 DUP2 PUSH2 0x9B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA0D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x8C8 JUMP JUMPDEST PUSH2 0xA1A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8C8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA5B DUP3 PUSH2 0x83B JUMP JUMPDEST SWAP2 POP PUSH2 0xA66 DUP4 PUSH2 0x83B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xA74 DUP2 PUSH2 0x83B JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xA8B JUMPI PUSH2 0xA8A PUSH2 0xA21 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xACC DUP3 PUSH2 0x83B JUMP JUMPDEST SWAP2 POP PUSH2 0xAD7 DUP4 PUSH2 0x83B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xAE7 JUMPI PUSH2 0xAE6 PUSH2 0xA92 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFD DUP3 PUSH2 0x83B JUMP JUMPDEST SWAP2 POP PUSH2 0xB08 DUP4 PUSH2 0x83B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xB20 JUMPI PUSH2 0xB1F PUSH2 0xA21 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 CALLCODE PUSH17 0xEBED06F3162F42763D9CD64693C4C11AF5 SWAP14 0xC4 DUP6 PUSH27 0xCDD522F93087634164736F6C634300081800330000000000000000 ","sourceMap":"656:2346:4:-:0;;;1323:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1401:12;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1445:20:4::1;1429:13;:36;;;;1323:149:::0;;656:2346;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:5:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:507::-;1284:6;1292;1341:2;1329:9;1320:7;1316:23;1312:32;1309:119;;;1347:79;;:::i;:::-;1309:119;1467:1;1492:64;1548:7;1539:6;1528:9;1524:22;1492:64;:::i;:::-;1482:74;;1438:128;1605:2;1631:64;1687:7;1678:6;1667:9;1663:22;1631:64;:::i;:::-;1621:74;;1576:129;1205:507;;;;;:::o;1718:118::-;1805:24;1823:5;1805:24;:::i;:::-;1800:3;1793:37;1718:118;;:::o;1842:222::-;1935:4;1973:2;1962:9;1958:18;1950:26;;1986:71;2054:1;2043:9;2039:17;2030:6;1986:71;:::i;:::-;1842:222;;;;:::o;656:2346:4:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_add_230":{"entryPoint":1816,"id":230,"parameterSlots":2,"returnSlots":1},"@_checkOwner_84":{"entryPoint":1057,"id":84,"parameterSlots":0,"returnSlots":0},"@_contains_333":{"entryPoint":1928,"id":333,"parameterSlots":2,"returnSlots":1},"@_msgSender_159":{"entryPoint":1532,"id":159,"parameterSlots":0,"returnSlots":1},"@_remove_314":{"entryPoint":1540,"id":314,"parameterSlots":2,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":1288,"id":146,"parameterSlots":1,"returnSlots":0},"@addExemption_937":{"entryPoint":638,"id":937,"parameterSlots":1,"returnSlots":0},"@add_530":{"entryPoint":1240,"id":530,"parameterSlots":2,"returnSlots":1},"@contains_584":{"entryPoint":1484,"id":584,"parameterSlots":2,"returnSlots":1},"@getTax_888":{"entryPoint":821,"id":888,"parameterSlots":3,"returnSlots":1},"@owner_67":{"entryPoint":774,"id":67,"parameterSlots":0,"returnSlots":1},"@removeExemption_957":{"entryPoint":371,"id":957,"parameterSlots":1,"returnSlots":0},"@remove_557":{"entryPoint":1192,"id":557,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":754,"id":98,"parameterSlots":0,"returnSlots":0},"@setTaxPercentage_917":{"entryPoint":487,"id":917,"parameterSlots":1,"returnSlots":0},"@taxPercentage_826":{"entryPoint":815,"id":826,"parameterSlots":0,"returnSlots":0},"@transferOwnership_126":{"entryPoint":923,"id":126,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":2041,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2140,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2062,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":2290,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256":{"entryPoint":2161,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2206,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":2385,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_efe8f4c43e0a7ce9afba23fb6c993cae9893c4081f1a55c9c3488cdb730ee4a2_to_t_string_memory_ptr_fromStack":{"entryPoint":2485,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2248,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2221,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":2400,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_efe8f4c43e0a7ce9afba23fb6c993cae9893c4081f1a55c9c3488cdb730ee4a2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2520,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":2263,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":2552,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2427,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":2753,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":2640,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":2802,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2000,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":2373,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1968,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2107,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":2593,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":2706,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":2901,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":2854,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1963,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_efe8f4c43e0a7ce9afba23fb6c993cae9893c4081f1a55c9c3488cdb730ee4a2":{"entryPoint":2444,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2018,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2117,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:6651:5","nodeType":"YulBlock","src":"0:6651:5","statements":[{"body":{"nativeSrc":"47:35:5","nodeType":"YulBlock","src":"47:35:5","statements":[{"nativeSrc":"57:19:5","nodeType":"YulAssignment","src":"57:19:5","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:5","nodeType":"YulLiteral","src":"73:2:5","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:5","nodeType":"YulIdentifier","src":"67:5:5"},"nativeSrc":"67:9:5","nodeType":"YulFunctionCall","src":"67:9:5"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:5","nodeType":"YulIdentifier","src":"57:6:5"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:5","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:5","nodeType":"YulTypedName","src":"40:6:5","type":""}],"src":"7:75:5"},{"body":{"nativeSrc":"177:28:5","nodeType":"YulBlock","src":"177:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:5","nodeType":"YulLiteral","src":"194:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:5","nodeType":"YulLiteral","src":"197:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:5","nodeType":"YulIdentifier","src":"187:6:5"},"nativeSrc":"187:12:5","nodeType":"YulFunctionCall","src":"187:12:5"},"nativeSrc":"187:12:5","nodeType":"YulExpressionStatement","src":"187:12:5"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:5","nodeType":"YulFunctionDefinition","src":"88:117:5"},{"body":{"nativeSrc":"300:28:5","nodeType":"YulBlock","src":"300:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:5","nodeType":"YulLiteral","src":"317:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:5","nodeType":"YulLiteral","src":"320:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:5","nodeType":"YulIdentifier","src":"310:6:5"},"nativeSrc":"310:12:5","nodeType":"YulFunctionCall","src":"310:12:5"},"nativeSrc":"310:12:5","nodeType":"YulExpressionStatement","src":"310:12:5"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:5","nodeType":"YulFunctionDefinition","src":"211:117:5"},{"body":{"nativeSrc":"379:81:5","nodeType":"YulBlock","src":"379:81:5","statements":[{"nativeSrc":"389:65:5","nodeType":"YulAssignment","src":"389:65:5","value":{"arguments":[{"name":"value","nativeSrc":"404:5:5","nodeType":"YulIdentifier","src":"404:5:5"},{"kind":"number","nativeSrc":"411:42:5","nodeType":"YulLiteral","src":"411:42:5","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:5","nodeType":"YulIdentifier","src":"400:3:5"},"nativeSrc":"400:54:5","nodeType":"YulFunctionCall","src":"400:54:5"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:5","nodeType":"YulIdentifier","src":"389:7:5"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:5","nodeType":"YulTypedName","src":"361:5:5","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:5","nodeType":"YulTypedName","src":"371:7:5","type":""}],"src":"334:126:5"},{"body":{"nativeSrc":"511:51:5","nodeType":"YulBlock","src":"511:51:5","statements":[{"nativeSrc":"521:35:5","nodeType":"YulAssignment","src":"521:35:5","value":{"arguments":[{"name":"value","nativeSrc":"550:5:5","nodeType":"YulIdentifier","src":"550:5:5"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:5","nodeType":"YulIdentifier","src":"532:17:5"},"nativeSrc":"532:24:5","nodeType":"YulFunctionCall","src":"532:24:5"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:5","nodeType":"YulIdentifier","src":"521:7:5"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:5","nodeType":"YulTypedName","src":"493:5:5","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:5","nodeType":"YulTypedName","src":"503:7:5","type":""}],"src":"466:96:5"},{"body":{"nativeSrc":"611:79:5","nodeType":"YulBlock","src":"611:79:5","statements":[{"body":{"nativeSrc":"668:16:5","nodeType":"YulBlock","src":"668:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:5","nodeType":"YulLiteral","src":"677:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:5","nodeType":"YulLiteral","src":"680:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:5","nodeType":"YulIdentifier","src":"670:6:5"},"nativeSrc":"670:12:5","nodeType":"YulFunctionCall","src":"670:12:5"},"nativeSrc":"670:12:5","nodeType":"YulExpressionStatement","src":"670:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:5","nodeType":"YulIdentifier","src":"634:5:5"},{"arguments":[{"name":"value","nativeSrc":"659:5:5","nodeType":"YulIdentifier","src":"659:5:5"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:5","nodeType":"YulIdentifier","src":"641:17:5"},"nativeSrc":"641:24:5","nodeType":"YulFunctionCall","src":"641:24:5"}],"functionName":{"name":"eq","nativeSrc":"631:2:5","nodeType":"YulIdentifier","src":"631:2:5"},"nativeSrc":"631:35:5","nodeType":"YulFunctionCall","src":"631:35:5"}],"functionName":{"name":"iszero","nativeSrc":"624:6:5","nodeType":"YulIdentifier","src":"624:6:5"},"nativeSrc":"624:43:5","nodeType":"YulFunctionCall","src":"624:43:5"},"nativeSrc":"621:63:5","nodeType":"YulIf","src":"621:63:5"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:5","nodeType":"YulTypedName","src":"604:5:5","type":""}],"src":"568:122:5"},{"body":{"nativeSrc":"748:87:5","nodeType":"YulBlock","src":"748:87:5","statements":[{"nativeSrc":"758:29:5","nodeType":"YulAssignment","src":"758:29:5","value":{"arguments":[{"name":"offset","nativeSrc":"780:6:5","nodeType":"YulIdentifier","src":"780:6:5"}],"functionName":{"name":"calldataload","nativeSrc":"767:12:5","nodeType":"YulIdentifier","src":"767:12:5"},"nativeSrc":"767:20:5","nodeType":"YulFunctionCall","src":"767:20:5"},"variableNames":[{"name":"value","nativeSrc":"758:5:5","nodeType":"YulIdentifier","src":"758:5:5"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"823:5:5","nodeType":"YulIdentifier","src":"823:5:5"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"796:26:5","nodeType":"YulIdentifier","src":"796:26:5"},"nativeSrc":"796:33:5","nodeType":"YulFunctionCall","src":"796:33:5"},"nativeSrc":"796:33:5","nodeType":"YulExpressionStatement","src":"796:33:5"}]},"name":"abi_decode_t_address","nativeSrc":"696:139:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"726:6:5","nodeType":"YulTypedName","src":"726:6:5","type":""},{"name":"end","nativeSrc":"734:3:5","nodeType":"YulTypedName","src":"734:3:5","type":""}],"returnVariables":[{"name":"value","nativeSrc":"742:5:5","nodeType":"YulTypedName","src":"742:5:5","type":""}],"src":"696:139:5"},{"body":{"nativeSrc":"907:263:5","nodeType":"YulBlock","src":"907:263:5","statements":[{"body":{"nativeSrc":"953:83:5","nodeType":"YulBlock","src":"953:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"955:77:5","nodeType":"YulIdentifier","src":"955:77:5"},"nativeSrc":"955:79:5","nodeType":"YulFunctionCall","src":"955:79:5"},"nativeSrc":"955:79:5","nodeType":"YulExpressionStatement","src":"955:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"928:7:5","nodeType":"YulIdentifier","src":"928:7:5"},{"name":"headStart","nativeSrc":"937:9:5","nodeType":"YulIdentifier","src":"937:9:5"}],"functionName":{"name":"sub","nativeSrc":"924:3:5","nodeType":"YulIdentifier","src":"924:3:5"},"nativeSrc":"924:23:5","nodeType":"YulFunctionCall","src":"924:23:5"},{"kind":"number","nativeSrc":"949:2:5","nodeType":"YulLiteral","src":"949:2:5","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"920:3:5","nodeType":"YulIdentifier","src":"920:3:5"},"nativeSrc":"920:32:5","nodeType":"YulFunctionCall","src":"920:32:5"},"nativeSrc":"917:119:5","nodeType":"YulIf","src":"917:119:5"},{"nativeSrc":"1046:117:5","nodeType":"YulBlock","src":"1046:117:5","statements":[{"nativeSrc":"1061:15:5","nodeType":"YulVariableDeclaration","src":"1061:15:5","value":{"kind":"number","nativeSrc":"1075:1:5","nodeType":"YulLiteral","src":"1075:1:5","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1065:6:5","nodeType":"YulTypedName","src":"1065:6:5","type":""}]},{"nativeSrc":"1090:63:5","nodeType":"YulAssignment","src":"1090:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1125:9:5","nodeType":"YulIdentifier","src":"1125:9:5"},{"name":"offset","nativeSrc":"1136:6:5","nodeType":"YulIdentifier","src":"1136:6:5"}],"functionName":{"name":"add","nativeSrc":"1121:3:5","nodeType":"YulIdentifier","src":"1121:3:5"},"nativeSrc":"1121:22:5","nodeType":"YulFunctionCall","src":"1121:22:5"},{"name":"dataEnd","nativeSrc":"1145:7:5","nodeType":"YulIdentifier","src":"1145:7:5"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"1100:20:5","nodeType":"YulIdentifier","src":"1100:20:5"},"nativeSrc":"1100:53:5","nodeType":"YulFunctionCall","src":"1100:53:5"},"variableNames":[{"name":"value0","nativeSrc":"1090:6:5","nodeType":"YulIdentifier","src":"1090:6:5"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"841:329:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"877:9:5","nodeType":"YulTypedName","src":"877:9:5","type":""},{"name":"dataEnd","nativeSrc":"888:7:5","nodeType":"YulTypedName","src":"888:7:5","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"900:6:5","nodeType":"YulTypedName","src":"900:6:5","type":""}],"src":"841:329:5"},{"body":{"nativeSrc":"1221:32:5","nodeType":"YulBlock","src":"1221:32:5","statements":[{"nativeSrc":"1231:16:5","nodeType":"YulAssignment","src":"1231:16:5","value":{"name":"value","nativeSrc":"1242:5:5","nodeType":"YulIdentifier","src":"1242:5:5"},"variableNames":[{"name":"cleaned","nativeSrc":"1231:7:5","nodeType":"YulIdentifier","src":"1231:7:5"}]}]},"name":"cleanup_t_uint256","nativeSrc":"1176:77:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1203:5:5","nodeType":"YulTypedName","src":"1203:5:5","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1213:7:5","nodeType":"YulTypedName","src":"1213:7:5","type":""}],"src":"1176:77:5"},{"body":{"nativeSrc":"1302:79:5","nodeType":"YulBlock","src":"1302:79:5","statements":[{"body":{"nativeSrc":"1359:16:5","nodeType":"YulBlock","src":"1359:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1368:1:5","nodeType":"YulLiteral","src":"1368:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"1371:1:5","nodeType":"YulLiteral","src":"1371:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1361:6:5","nodeType":"YulIdentifier","src":"1361:6:5"},"nativeSrc":"1361:12:5","nodeType":"YulFunctionCall","src":"1361:12:5"},"nativeSrc":"1361:12:5","nodeType":"YulExpressionStatement","src":"1361:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1325:5:5","nodeType":"YulIdentifier","src":"1325:5:5"},{"arguments":[{"name":"value","nativeSrc":"1350:5:5","nodeType":"YulIdentifier","src":"1350:5:5"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1332:17:5","nodeType":"YulIdentifier","src":"1332:17:5"},"nativeSrc":"1332:24:5","nodeType":"YulFunctionCall","src":"1332:24:5"}],"functionName":{"name":"eq","nativeSrc":"1322:2:5","nodeType":"YulIdentifier","src":"1322:2:5"},"nativeSrc":"1322:35:5","nodeType":"YulFunctionCall","src":"1322:35:5"}],"functionName":{"name":"iszero","nativeSrc":"1315:6:5","nodeType":"YulIdentifier","src":"1315:6:5"},"nativeSrc":"1315:43:5","nodeType":"YulFunctionCall","src":"1315:43:5"},"nativeSrc":"1312:63:5","nodeType":"YulIf","src":"1312:63:5"}]},"name":"validator_revert_t_uint256","nativeSrc":"1259:122:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1295:5:5","nodeType":"YulTypedName","src":"1295:5:5","type":""}],"src":"1259:122:5"},{"body":{"nativeSrc":"1439:87:5","nodeType":"YulBlock","src":"1439:87:5","statements":[{"nativeSrc":"1449:29:5","nodeType":"YulAssignment","src":"1449:29:5","value":{"arguments":[{"name":"offset","nativeSrc":"1471:6:5","nodeType":"YulIdentifier","src":"1471:6:5"}],"functionName":{"name":"calldataload","nativeSrc":"1458:12:5","nodeType":"YulIdentifier","src":"1458:12:5"},"nativeSrc":"1458:20:5","nodeType":"YulFunctionCall","src":"1458:20:5"},"variableNames":[{"name":"value","nativeSrc":"1449:5:5","nodeType":"YulIdentifier","src":"1449:5:5"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1514:5:5","nodeType":"YulIdentifier","src":"1514:5:5"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"1487:26:5","nodeType":"YulIdentifier","src":"1487:26:5"},"nativeSrc":"1487:33:5","nodeType":"YulFunctionCall","src":"1487:33:5"},"nativeSrc":"1487:33:5","nodeType":"YulExpressionStatement","src":"1487:33:5"}]},"name":"abi_decode_t_uint256","nativeSrc":"1387:139:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1417:6:5","nodeType":"YulTypedName","src":"1417:6:5","type":""},{"name":"end","nativeSrc":"1425:3:5","nodeType":"YulTypedName","src":"1425:3:5","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1433:5:5","nodeType":"YulTypedName","src":"1433:5:5","type":""}],"src":"1387:139:5"},{"body":{"nativeSrc":"1598:263:5","nodeType":"YulBlock","src":"1598:263:5","statements":[{"body":{"nativeSrc":"1644:83:5","nodeType":"YulBlock","src":"1644:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1646:77:5","nodeType":"YulIdentifier","src":"1646:77:5"},"nativeSrc":"1646:79:5","nodeType":"YulFunctionCall","src":"1646:79:5"},"nativeSrc":"1646:79:5","nodeType":"YulExpressionStatement","src":"1646:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1619:7:5","nodeType":"YulIdentifier","src":"1619:7:5"},{"name":"headStart","nativeSrc":"1628:9:5","nodeType":"YulIdentifier","src":"1628:9:5"}],"functionName":{"name":"sub","nativeSrc":"1615:3:5","nodeType":"YulIdentifier","src":"1615:3:5"},"nativeSrc":"1615:23:5","nodeType":"YulFunctionCall","src":"1615:23:5"},{"kind":"number","nativeSrc":"1640:2:5","nodeType":"YulLiteral","src":"1640:2:5","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1611:3:5","nodeType":"YulIdentifier","src":"1611:3:5"},"nativeSrc":"1611:32:5","nodeType":"YulFunctionCall","src":"1611:32:5"},"nativeSrc":"1608:119:5","nodeType":"YulIf","src":"1608:119:5"},{"nativeSrc":"1737:117:5","nodeType":"YulBlock","src":"1737:117:5","statements":[{"nativeSrc":"1752:15:5","nodeType":"YulVariableDeclaration","src":"1752:15:5","value":{"kind":"number","nativeSrc":"1766:1:5","nodeType":"YulLiteral","src":"1766:1:5","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1756:6:5","nodeType":"YulTypedName","src":"1756:6:5","type":""}]},{"nativeSrc":"1781:63:5","nodeType":"YulAssignment","src":"1781:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1816:9:5","nodeType":"YulIdentifier","src":"1816:9:5"},{"name":"offset","nativeSrc":"1827:6:5","nodeType":"YulIdentifier","src":"1827:6:5"}],"functionName":{"name":"add","nativeSrc":"1812:3:5","nodeType":"YulIdentifier","src":"1812:3:5"},"nativeSrc":"1812:22:5","nodeType":"YulFunctionCall","src":"1812:22:5"},{"name":"dataEnd","nativeSrc":"1836:7:5","nodeType":"YulIdentifier","src":"1836:7:5"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"1791:20:5","nodeType":"YulIdentifier","src":"1791:20:5"},"nativeSrc":"1791:53:5","nodeType":"YulFunctionCall","src":"1791:53:5"},"variableNames":[{"name":"value0","nativeSrc":"1781:6:5","nodeType":"YulIdentifier","src":"1781:6:5"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"1532:329:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1568:9:5","nodeType":"YulTypedName","src":"1568:9:5","type":""},{"name":"dataEnd","nativeSrc":"1579:7:5","nodeType":"YulTypedName","src":"1579:7:5","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1591:6:5","nodeType":"YulTypedName","src":"1591:6:5","type":""}],"src":"1532:329:5"},{"body":{"nativeSrc":"1932:53:5","nodeType":"YulBlock","src":"1932:53:5","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1949:3:5","nodeType":"YulIdentifier","src":"1949:3:5"},{"arguments":[{"name":"value","nativeSrc":"1972:5:5","nodeType":"YulIdentifier","src":"1972:5:5"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1954:17:5","nodeType":"YulIdentifier","src":"1954:17:5"},"nativeSrc":"1954:24:5","nodeType":"YulFunctionCall","src":"1954:24:5"}],"functionName":{"name":"mstore","nativeSrc":"1942:6:5","nodeType":"YulIdentifier","src":"1942:6:5"},"nativeSrc":"1942:37:5","nodeType":"YulFunctionCall","src":"1942:37:5"},"nativeSrc":"1942:37:5","nodeType":"YulExpressionStatement","src":"1942:37:5"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"1867:118:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1920:5:5","nodeType":"YulTypedName","src":"1920:5:5","type":""},{"name":"pos","nativeSrc":"1927:3:5","nodeType":"YulTypedName","src":"1927:3:5","type":""}],"src":"1867:118:5"},{"body":{"nativeSrc":"2089:124:5","nodeType":"YulBlock","src":"2089:124:5","statements":[{"nativeSrc":"2099:26:5","nodeType":"YulAssignment","src":"2099:26:5","value":{"arguments":[{"name":"headStart","nativeSrc":"2111:9:5","nodeType":"YulIdentifier","src":"2111:9:5"},{"kind":"number","nativeSrc":"2122:2:5","nodeType":"YulLiteral","src":"2122:2:5","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2107:3:5","nodeType":"YulIdentifier","src":"2107:3:5"},"nativeSrc":"2107:18:5","nodeType":"YulFunctionCall","src":"2107:18:5"},"variableNames":[{"name":"tail","nativeSrc":"2099:4:5","nodeType":"YulIdentifier","src":"2099:4:5"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"2179:6:5","nodeType":"YulIdentifier","src":"2179:6:5"},{"arguments":[{"name":"headStart","nativeSrc":"2192:9:5","nodeType":"YulIdentifier","src":"2192:9:5"},{"kind":"number","nativeSrc":"2203:1:5","nodeType":"YulLiteral","src":"2203:1:5","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2188:3:5","nodeType":"YulIdentifier","src":"2188:3:5"},"nativeSrc":"2188:17:5","nodeType":"YulFunctionCall","src":"2188:17:5"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"2135:43:5","nodeType":"YulIdentifier","src":"2135:43:5"},"nativeSrc":"2135:71:5","nodeType":"YulFunctionCall","src":"2135:71:5"},"nativeSrc":"2135:71:5","nodeType":"YulExpressionStatement","src":"2135:71:5"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"1991:222:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2061:9:5","nodeType":"YulTypedName","src":"2061:9:5","type":""},{"name":"value0","nativeSrc":"2073:6:5","nodeType":"YulTypedName","src":"2073:6:5","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2084:4:5","nodeType":"YulTypedName","src":"2084:4:5","type":""}],"src":"1991:222:5"},{"body":{"nativeSrc":"2284:53:5","nodeType":"YulBlock","src":"2284:53:5","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2301:3:5","nodeType":"YulIdentifier","src":"2301:3:5"},{"arguments":[{"name":"value","nativeSrc":"2324:5:5","nodeType":"YulIdentifier","src":"2324:5:5"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2306:17:5","nodeType":"YulIdentifier","src":"2306:17:5"},"nativeSrc":"2306:24:5","nodeType":"YulFunctionCall","src":"2306:24:5"}],"functionName":{"name":"mstore","nativeSrc":"2294:6:5","nodeType":"YulIdentifier","src":"2294:6:5"},"nativeSrc":"2294:37:5","nodeType":"YulFunctionCall","src":"2294:37:5"},"nativeSrc":"2294:37:5","nodeType":"YulExpressionStatement","src":"2294:37:5"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"2219:118:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2272:5:5","nodeType":"YulTypedName","src":"2272:5:5","type":""},{"name":"pos","nativeSrc":"2279:3:5","nodeType":"YulTypedName","src":"2279:3:5","type":""}],"src":"2219:118:5"},{"body":{"nativeSrc":"2441:124:5","nodeType":"YulBlock","src":"2441:124:5","statements":[{"nativeSrc":"2451:26:5","nodeType":"YulAssignment","src":"2451:26:5","value":{"arguments":[{"name":"headStart","nativeSrc":"2463:9:5","nodeType":"YulIdentifier","src":"2463:9:5"},{"kind":"number","nativeSrc":"2474:2:5","nodeType":"YulLiteral","src":"2474:2:5","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2459:3:5","nodeType":"YulIdentifier","src":"2459:3:5"},"nativeSrc":"2459:18:5","nodeType":"YulFunctionCall","src":"2459:18:5"},"variableNames":[{"name":"tail","nativeSrc":"2451:4:5","nodeType":"YulIdentifier","src":"2451:4:5"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"2531:6:5","nodeType":"YulIdentifier","src":"2531:6:5"},{"arguments":[{"name":"headStart","nativeSrc":"2544:9:5","nodeType":"YulIdentifier","src":"2544:9:5"},{"kind":"number","nativeSrc":"2555:1:5","nodeType":"YulLiteral","src":"2555:1:5","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2540:3:5","nodeType":"YulIdentifier","src":"2540:3:5"},"nativeSrc":"2540:17:5","nodeType":"YulFunctionCall","src":"2540:17:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"2487:43:5","nodeType":"YulIdentifier","src":"2487:43:5"},"nativeSrc":"2487:71:5","nodeType":"YulFunctionCall","src":"2487:71:5"},"nativeSrc":"2487:71:5","nodeType":"YulExpressionStatement","src":"2487:71:5"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"2343:222:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2413:9:5","nodeType":"YulTypedName","src":"2413:9:5","type":""},{"name":"value0","nativeSrc":"2425:6:5","nodeType":"YulTypedName","src":"2425:6:5","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2436:4:5","nodeType":"YulTypedName","src":"2436:4:5","type":""}],"src":"2343:222:5"},{"body":{"nativeSrc":"2671:519:5","nodeType":"YulBlock","src":"2671:519:5","statements":[{"body":{"nativeSrc":"2717:83:5","nodeType":"YulBlock","src":"2717:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2719:77:5","nodeType":"YulIdentifier","src":"2719:77:5"},"nativeSrc":"2719:79:5","nodeType":"YulFunctionCall","src":"2719:79:5"},"nativeSrc":"2719:79:5","nodeType":"YulExpressionStatement","src":"2719:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2692:7:5","nodeType":"YulIdentifier","src":"2692:7:5"},{"name":"headStart","nativeSrc":"2701:9:5","nodeType":"YulIdentifier","src":"2701:9:5"}],"functionName":{"name":"sub","nativeSrc":"2688:3:5","nodeType":"YulIdentifier","src":"2688:3:5"},"nativeSrc":"2688:23:5","nodeType":"YulFunctionCall","src":"2688:23:5"},{"kind":"number","nativeSrc":"2713:2:5","nodeType":"YulLiteral","src":"2713:2:5","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"2684:3:5","nodeType":"YulIdentifier","src":"2684:3:5"},"nativeSrc":"2684:32:5","nodeType":"YulFunctionCall","src":"2684:32:5"},"nativeSrc":"2681:119:5","nodeType":"YulIf","src":"2681:119:5"},{"nativeSrc":"2810:117:5","nodeType":"YulBlock","src":"2810:117:5","statements":[{"nativeSrc":"2825:15:5","nodeType":"YulVariableDeclaration","src":"2825:15:5","value":{"kind":"number","nativeSrc":"2839:1:5","nodeType":"YulLiteral","src":"2839:1:5","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2829:6:5","nodeType":"YulTypedName","src":"2829:6:5","type":""}]},{"nativeSrc":"2854:63:5","nodeType":"YulAssignment","src":"2854:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2889:9:5","nodeType":"YulIdentifier","src":"2889:9:5"},{"name":"offset","nativeSrc":"2900:6:5","nodeType":"YulIdentifier","src":"2900:6:5"}],"functionName":{"name":"add","nativeSrc":"2885:3:5","nodeType":"YulIdentifier","src":"2885:3:5"},"nativeSrc":"2885:22:5","nodeType":"YulFunctionCall","src":"2885:22:5"},{"name":"dataEnd","nativeSrc":"2909:7:5","nodeType":"YulIdentifier","src":"2909:7:5"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2864:20:5","nodeType":"YulIdentifier","src":"2864:20:5"},"nativeSrc":"2864:53:5","nodeType":"YulFunctionCall","src":"2864:53:5"},"variableNames":[{"name":"value0","nativeSrc":"2854:6:5","nodeType":"YulIdentifier","src":"2854:6:5"}]}]},{"nativeSrc":"2937:118:5","nodeType":"YulBlock","src":"2937:118:5","statements":[{"nativeSrc":"2952:16:5","nodeType":"YulVariableDeclaration","src":"2952:16:5","value":{"kind":"number","nativeSrc":"2966:2:5","nodeType":"YulLiteral","src":"2966:2:5","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2956:6:5","nodeType":"YulTypedName","src":"2956:6:5","type":""}]},{"nativeSrc":"2982:63:5","nodeType":"YulAssignment","src":"2982:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3017:9:5","nodeType":"YulIdentifier","src":"3017:9:5"},{"name":"offset","nativeSrc":"3028:6:5","nodeType":"YulIdentifier","src":"3028:6:5"}],"functionName":{"name":"add","nativeSrc":"3013:3:5","nodeType":"YulIdentifier","src":"3013:3:5"},"nativeSrc":"3013:22:5","nodeType":"YulFunctionCall","src":"3013:22:5"},{"name":"dataEnd","nativeSrc":"3037:7:5","nodeType":"YulIdentifier","src":"3037:7:5"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2992:20:5","nodeType":"YulIdentifier","src":"2992:20:5"},"nativeSrc":"2992:53:5","nodeType":"YulFunctionCall","src":"2992:53:5"},"variableNames":[{"name":"value1","nativeSrc":"2982:6:5","nodeType":"YulIdentifier","src":"2982:6:5"}]}]},{"nativeSrc":"3065:118:5","nodeType":"YulBlock","src":"3065:118:5","statements":[{"nativeSrc":"3080:16:5","nodeType":"YulVariableDeclaration","src":"3080:16:5","value":{"kind":"number","nativeSrc":"3094:2:5","nodeType":"YulLiteral","src":"3094:2:5","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"3084:6:5","nodeType":"YulTypedName","src":"3084:6:5","type":""}]},{"nativeSrc":"3110:63:5","nodeType":"YulAssignment","src":"3110:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3145:9:5","nodeType":"YulIdentifier","src":"3145:9:5"},{"name":"offset","nativeSrc":"3156:6:5","nodeType":"YulIdentifier","src":"3156:6:5"}],"functionName":{"name":"add","nativeSrc":"3141:3:5","nodeType":"YulIdentifier","src":"3141:3:5"},"nativeSrc":"3141:22:5","nodeType":"YulFunctionCall","src":"3141:22:5"},{"name":"dataEnd","nativeSrc":"3165:7:5","nodeType":"YulIdentifier","src":"3165:7:5"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"3120:20:5","nodeType":"YulIdentifier","src":"3120:20:5"},"nativeSrc":"3120:53:5","nodeType":"YulFunctionCall","src":"3120:53:5"},"variableNames":[{"name":"value2","nativeSrc":"3110:6:5","nodeType":"YulIdentifier","src":"3110:6:5"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"2571:619:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2625:9:5","nodeType":"YulTypedName","src":"2625:9:5","type":""},{"name":"dataEnd","nativeSrc":"2636:7:5","nodeType":"YulTypedName","src":"2636:7:5","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2648:6:5","nodeType":"YulTypedName","src":"2648:6:5","type":""},{"name":"value1","nativeSrc":"2656:6:5","nodeType":"YulTypedName","src":"2656:6:5","type":""},{"name":"value2","nativeSrc":"2664:6:5","nodeType":"YulTypedName","src":"2664:6:5","type":""}],"src":"2571:619:5"},{"body":{"nativeSrc":"3238:48:5","nodeType":"YulBlock","src":"3238:48:5","statements":[{"nativeSrc":"3248:32:5","nodeType":"YulAssignment","src":"3248:32:5","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3273:5:5","nodeType":"YulIdentifier","src":"3273:5:5"}],"functionName":{"name":"iszero","nativeSrc":"3266:6:5","nodeType":"YulIdentifier","src":"3266:6:5"},"nativeSrc":"3266:13:5","nodeType":"YulFunctionCall","src":"3266:13:5"}],"functionName":{"name":"iszero","nativeSrc":"3259:6:5","nodeType":"YulIdentifier","src":"3259:6:5"},"nativeSrc":"3259:21:5","nodeType":"YulFunctionCall","src":"3259:21:5"},"variableNames":[{"name":"cleaned","nativeSrc":"3248:7:5","nodeType":"YulIdentifier","src":"3248:7:5"}]}]},"name":"cleanup_t_bool","nativeSrc":"3196:90:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3220:5:5","nodeType":"YulTypedName","src":"3220:5:5","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3230:7:5","nodeType":"YulTypedName","src":"3230:7:5","type":""}],"src":"3196:90:5"},{"body":{"nativeSrc":"3351:50:5","nodeType":"YulBlock","src":"3351:50:5","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3368:3:5","nodeType":"YulIdentifier","src":"3368:3:5"},{"arguments":[{"name":"value","nativeSrc":"3388:5:5","nodeType":"YulIdentifier","src":"3388:5:5"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"3373:14:5","nodeType":"YulIdentifier","src":"3373:14:5"},"nativeSrc":"3373:21:5","nodeType":"YulFunctionCall","src":"3373:21:5"}],"functionName":{"name":"mstore","nativeSrc":"3361:6:5","nodeType":"YulIdentifier","src":"3361:6:5"},"nativeSrc":"3361:34:5","nodeType":"YulFunctionCall","src":"3361:34:5"},"nativeSrc":"3361:34:5","nodeType":"YulExpressionStatement","src":"3361:34:5"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3292:109:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3339:5:5","nodeType":"YulTypedName","src":"3339:5:5","type":""},{"name":"pos","nativeSrc":"3346:3:5","nodeType":"YulTypedName","src":"3346:3:5","type":""}],"src":"3292:109:5"},{"body":{"nativeSrc":"3499:118:5","nodeType":"YulBlock","src":"3499:118:5","statements":[{"nativeSrc":"3509:26:5","nodeType":"YulAssignment","src":"3509:26:5","value":{"arguments":[{"name":"headStart","nativeSrc":"3521:9:5","nodeType":"YulIdentifier","src":"3521:9:5"},{"kind":"number","nativeSrc":"3532:2:5","nodeType":"YulLiteral","src":"3532:2:5","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3517:3:5","nodeType":"YulIdentifier","src":"3517:3:5"},"nativeSrc":"3517:18:5","nodeType":"YulFunctionCall","src":"3517:18:5"},"variableNames":[{"name":"tail","nativeSrc":"3509:4:5","nodeType":"YulIdentifier","src":"3509:4:5"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3583:6:5","nodeType":"YulIdentifier","src":"3583:6:5"},{"arguments":[{"name":"headStart","nativeSrc":"3596:9:5","nodeType":"YulIdentifier","src":"3596:9:5"},{"kind":"number","nativeSrc":"3607:1:5","nodeType":"YulLiteral","src":"3607:1:5","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3592:3:5","nodeType":"YulIdentifier","src":"3592:3:5"},"nativeSrc":"3592:17:5","nodeType":"YulFunctionCall","src":"3592:17:5"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3545:37:5","nodeType":"YulIdentifier","src":"3545:37:5"},"nativeSrc":"3545:65:5","nodeType":"YulFunctionCall","src":"3545:65:5"},"nativeSrc":"3545:65:5","nodeType":"YulExpressionStatement","src":"3545:65:5"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"3407:210:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3471:9:5","nodeType":"YulTypedName","src":"3471:9:5","type":""},{"name":"value0","nativeSrc":"3483:6:5","nodeType":"YulTypedName","src":"3483:6:5","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3494:4:5","nodeType":"YulTypedName","src":"3494:4:5","type":""}],"src":"3407:210:5"},{"body":{"nativeSrc":"3719:73:5","nodeType":"YulBlock","src":"3719:73:5","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3736:3:5","nodeType":"YulIdentifier","src":"3736:3:5"},{"name":"length","nativeSrc":"3741:6:5","nodeType":"YulIdentifier","src":"3741:6:5"}],"functionName":{"name":"mstore","nativeSrc":"3729:6:5","nodeType":"YulIdentifier","src":"3729:6:5"},"nativeSrc":"3729:19:5","nodeType":"YulFunctionCall","src":"3729:19:5"},"nativeSrc":"3729:19:5","nodeType":"YulExpressionStatement","src":"3729:19:5"},{"nativeSrc":"3757:29:5","nodeType":"YulAssignment","src":"3757:29:5","value":{"arguments":[{"name":"pos","nativeSrc":"3776:3:5","nodeType":"YulIdentifier","src":"3776:3:5"},{"kind":"number","nativeSrc":"3781:4:5","nodeType":"YulLiteral","src":"3781:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3772:3:5","nodeType":"YulIdentifier","src":"3772:3:5"},"nativeSrc":"3772:14:5","nodeType":"YulFunctionCall","src":"3772:14:5"},"variableNames":[{"name":"updated_pos","nativeSrc":"3757:11:5","nodeType":"YulIdentifier","src":"3757:11:5"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"3623:169:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"3691:3:5","nodeType":"YulTypedName","src":"3691:3:5","type":""},{"name":"length","nativeSrc":"3696:6:5","nodeType":"YulTypedName","src":"3696:6:5","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"3707:11:5","nodeType":"YulTypedName","src":"3707:11:5","type":""}],"src":"3623:169:5"},{"body":{"nativeSrc":"3904:58:5","nodeType":"YulBlock","src":"3904:58:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"3926:6:5","nodeType":"YulIdentifier","src":"3926:6:5"},{"kind":"number","nativeSrc":"3934:1:5","nodeType":"YulLiteral","src":"3934:1:5","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3922:3:5","nodeType":"YulIdentifier","src":"3922:3:5"},"nativeSrc":"3922:14:5","nodeType":"YulFunctionCall","src":"3922:14:5"},{"hexValue":"496e76616c69642056616c75652e","kind":"string","nativeSrc":"3938:16:5","nodeType":"YulLiteral","src":"3938:16:5","type":"","value":"Invalid Value."}],"functionName":{"name":"mstore","nativeSrc":"3915:6:5","nodeType":"YulIdentifier","src":"3915:6:5"},"nativeSrc":"3915:40:5","nodeType":"YulFunctionCall","src":"3915:40:5"},"nativeSrc":"3915:40:5","nodeType":"YulExpressionStatement","src":"3915:40:5"}]},"name":"store_literal_in_memory_efe8f4c43e0a7ce9afba23fb6c993cae9893c4081f1a55c9c3488cdb730ee4a2","nativeSrc":"3798:164:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"3896:6:5","nodeType":"YulTypedName","src":"3896:6:5","type":""}],"src":"3798:164:5"},{"body":{"nativeSrc":"4114:220:5","nodeType":"YulBlock","src":"4114:220:5","statements":[{"nativeSrc":"4124:74:5","nodeType":"YulAssignment","src":"4124:74:5","value":{"arguments":[{"name":"pos","nativeSrc":"4190:3:5","nodeType":"YulIdentifier","src":"4190:3:5"},{"kind":"number","nativeSrc":"4195:2:5","nodeType":"YulLiteral","src":"4195:2:5","type":"","value":"14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"4131:58:5","nodeType":"YulIdentifier","src":"4131:58:5"},"nativeSrc":"4131:67:5","nodeType":"YulFunctionCall","src":"4131:67:5"},"variableNames":[{"name":"pos","nativeSrc":"4124:3:5","nodeType":"YulIdentifier","src":"4124:3:5"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"4296:3:5","nodeType":"YulIdentifier","src":"4296:3:5"}],"functionName":{"name":"store_literal_in_memory_efe8f4c43e0a7ce9afba23fb6c993cae9893c4081f1a55c9c3488cdb730ee4a2","nativeSrc":"4207:88:5","nodeType":"YulIdentifier","src":"4207:88:5"},"nativeSrc":"4207:93:5","nodeType":"YulFunctionCall","src":"4207:93:5"},"nativeSrc":"4207:93:5","nodeType":"YulExpressionStatement","src":"4207:93:5"},{"nativeSrc":"4309:19:5","nodeType":"YulAssignment","src":"4309:19:5","value":{"arguments":[{"name":"pos","nativeSrc":"4320:3:5","nodeType":"YulIdentifier","src":"4320:3:5"},{"kind":"number","nativeSrc":"4325:2:5","nodeType":"YulLiteral","src":"4325:2:5","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4316:3:5","nodeType":"YulIdentifier","src":"4316:3:5"},"nativeSrc":"4316:12:5","nodeType":"YulFunctionCall","src":"4316:12:5"},"variableNames":[{"name":"end","nativeSrc":"4309:3:5","nodeType":"YulIdentifier","src":"4309:3:5"}]}]},"name":"abi_encode_t_stringliteral_efe8f4c43e0a7ce9afba23fb6c993cae9893c4081f1a55c9c3488cdb730ee4a2_to_t_string_memory_ptr_fromStack","nativeSrc":"3968:366:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"4102:3:5","nodeType":"YulTypedName","src":"4102:3:5","type":""}],"returnVariables":[{"name":"end","nativeSrc":"4110:3:5","nodeType":"YulTypedName","src":"4110:3:5","type":""}],"src":"3968:366:5"},{"body":{"nativeSrc":"4511:248:5","nodeType":"YulBlock","src":"4511:248:5","statements":[{"nativeSrc":"4521:26:5","nodeType":"YulAssignment","src":"4521:26:5","value":{"arguments":[{"name":"headStart","nativeSrc":"4533:9:5","nodeType":"YulIdentifier","src":"4533:9:5"},{"kind":"number","nativeSrc":"4544:2:5","nodeType":"YulLiteral","src":"4544:2:5","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4529:3:5","nodeType":"YulIdentifier","src":"4529:3:5"},"nativeSrc":"4529:18:5","nodeType":"YulFunctionCall","src":"4529:18:5"},"variableNames":[{"name":"tail","nativeSrc":"4521:4:5","nodeType":"YulIdentifier","src":"4521:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4568:9:5","nodeType":"YulIdentifier","src":"4568:9:5"},{"kind":"number","nativeSrc":"4579:1:5","nodeType":"YulLiteral","src":"4579:1:5","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4564:3:5","nodeType":"YulIdentifier","src":"4564:3:5"},"nativeSrc":"4564:17:5","nodeType":"YulFunctionCall","src":"4564:17:5"},{"arguments":[{"name":"tail","nativeSrc":"4587:4:5","nodeType":"YulIdentifier","src":"4587:4:5"},{"name":"headStart","nativeSrc":"4593:9:5","nodeType":"YulIdentifier","src":"4593:9:5"}],"functionName":{"name":"sub","nativeSrc":"4583:3:5","nodeType":"YulIdentifier","src":"4583:3:5"},"nativeSrc":"4583:20:5","nodeType":"YulFunctionCall","src":"4583:20:5"}],"functionName":{"name":"mstore","nativeSrc":"4557:6:5","nodeType":"YulIdentifier","src":"4557:6:5"},"nativeSrc":"4557:47:5","nodeType":"YulFunctionCall","src":"4557:47:5"},"nativeSrc":"4557:47:5","nodeType":"YulExpressionStatement","src":"4557:47:5"},{"nativeSrc":"4613:139:5","nodeType":"YulAssignment","src":"4613:139:5","value":{"arguments":[{"name":"tail","nativeSrc":"4747:4:5","nodeType":"YulIdentifier","src":"4747:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_efe8f4c43e0a7ce9afba23fb6c993cae9893c4081f1a55c9c3488cdb730ee4a2_to_t_string_memory_ptr_fromStack","nativeSrc":"4621:124:5","nodeType":"YulIdentifier","src":"4621:124:5"},"nativeSrc":"4621:131:5","nodeType":"YulFunctionCall","src":"4621:131:5"},"variableNames":[{"name":"tail","nativeSrc":"4613:4:5","nodeType":"YulIdentifier","src":"4613:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_efe8f4c43e0a7ce9afba23fb6c993cae9893c4081f1a55c9c3488cdb730ee4a2__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4340:419:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4491:9:5","nodeType":"YulTypedName","src":"4491:9:5","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4506:4:5","nodeType":"YulTypedName","src":"4506:4:5","type":""}],"src":"4340:419:5"},{"body":{"nativeSrc":"4891:206:5","nodeType":"YulBlock","src":"4891:206:5","statements":[{"nativeSrc":"4901:26:5","nodeType":"YulAssignment","src":"4901:26:5","value":{"arguments":[{"name":"headStart","nativeSrc":"4913:9:5","nodeType":"YulIdentifier","src":"4913:9:5"},{"kind":"number","nativeSrc":"4924:2:5","nodeType":"YulLiteral","src":"4924:2:5","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4909:3:5","nodeType":"YulIdentifier","src":"4909:3:5"},"nativeSrc":"4909:18:5","nodeType":"YulFunctionCall","src":"4909:18:5"},"variableNames":[{"name":"tail","nativeSrc":"4901:4:5","nodeType":"YulIdentifier","src":"4901:4:5"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4981:6:5","nodeType":"YulIdentifier","src":"4981:6:5"},{"arguments":[{"name":"headStart","nativeSrc":"4994:9:5","nodeType":"YulIdentifier","src":"4994:9:5"},{"kind":"number","nativeSrc":"5005:1:5","nodeType":"YulLiteral","src":"5005:1:5","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4990:3:5","nodeType":"YulIdentifier","src":"4990:3:5"},"nativeSrc":"4990:17:5","nodeType":"YulFunctionCall","src":"4990:17:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"4937:43:5","nodeType":"YulIdentifier","src":"4937:43:5"},"nativeSrc":"4937:71:5","nodeType":"YulFunctionCall","src":"4937:71:5"},"nativeSrc":"4937:71:5","nodeType":"YulExpressionStatement","src":"4937:71:5"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"5062:6:5","nodeType":"YulIdentifier","src":"5062:6:5"},{"arguments":[{"name":"headStart","nativeSrc":"5075:9:5","nodeType":"YulIdentifier","src":"5075:9:5"},{"kind":"number","nativeSrc":"5086:2:5","nodeType":"YulLiteral","src":"5086:2:5","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5071:3:5","nodeType":"YulIdentifier","src":"5071:3:5"},"nativeSrc":"5071:18:5","nodeType":"YulFunctionCall","src":"5071:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"5018:43:5","nodeType":"YulIdentifier","src":"5018:43:5"},"nativeSrc":"5018:72:5","nodeType":"YulFunctionCall","src":"5018:72:5"},"nativeSrc":"5018:72:5","nodeType":"YulExpressionStatement","src":"5018:72:5"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"4765:332:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4855:9:5","nodeType":"YulTypedName","src":"4855:9:5","type":""},{"name":"value1","nativeSrc":"4867:6:5","nodeType":"YulTypedName","src":"4867:6:5","type":""},{"name":"value0","nativeSrc":"4875:6:5","nodeType":"YulTypedName","src":"4875:6:5","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4886:4:5","nodeType":"YulTypedName","src":"4886:4:5","type":""}],"src":"4765:332:5"},{"body":{"nativeSrc":"5131:152:5","nodeType":"YulBlock","src":"5131:152:5","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5148:1:5","nodeType":"YulLiteral","src":"5148:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"5151:77:5","nodeType":"YulLiteral","src":"5151:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"5141:6:5","nodeType":"YulIdentifier","src":"5141:6:5"},"nativeSrc":"5141:88:5","nodeType":"YulFunctionCall","src":"5141:88:5"},"nativeSrc":"5141:88:5","nodeType":"YulExpressionStatement","src":"5141:88:5"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5245:1:5","nodeType":"YulLiteral","src":"5245:1:5","type":"","value":"4"},{"kind":"number","nativeSrc":"5248:4:5","nodeType":"YulLiteral","src":"5248:4:5","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"5238:6:5","nodeType":"YulIdentifier","src":"5238:6:5"},"nativeSrc":"5238:15:5","nodeType":"YulFunctionCall","src":"5238:15:5"},"nativeSrc":"5238:15:5","nodeType":"YulExpressionStatement","src":"5238:15:5"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5269:1:5","nodeType":"YulLiteral","src":"5269:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"5272:4:5","nodeType":"YulLiteral","src":"5272:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5262:6:5","nodeType":"YulIdentifier","src":"5262:6:5"},"nativeSrc":"5262:15:5","nodeType":"YulFunctionCall","src":"5262:15:5"},"nativeSrc":"5262:15:5","nodeType":"YulExpressionStatement","src":"5262:15:5"}]},"name":"panic_error_0x11","nativeSrc":"5103:180:5","nodeType":"YulFunctionDefinition","src":"5103:180:5"},{"body":{"nativeSrc":"5337:362:5","nodeType":"YulBlock","src":"5337:362:5","statements":[{"nativeSrc":"5347:25:5","nodeType":"YulAssignment","src":"5347:25:5","value":{"arguments":[{"name":"x","nativeSrc":"5370:1:5","nodeType":"YulIdentifier","src":"5370:1:5"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5352:17:5","nodeType":"YulIdentifier","src":"5352:17:5"},"nativeSrc":"5352:20:5","nodeType":"YulFunctionCall","src":"5352:20:5"},"variableNames":[{"name":"x","nativeSrc":"5347:1:5","nodeType":"YulIdentifier","src":"5347:1:5"}]},{"nativeSrc":"5381:25:5","nodeType":"YulAssignment","src":"5381:25:5","value":{"arguments":[{"name":"y","nativeSrc":"5404:1:5","nodeType":"YulIdentifier","src":"5404:1:5"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5386:17:5","nodeType":"YulIdentifier","src":"5386:17:5"},"nativeSrc":"5386:20:5","nodeType":"YulFunctionCall","src":"5386:20:5"},"variableNames":[{"name":"y","nativeSrc":"5381:1:5","nodeType":"YulIdentifier","src":"5381:1:5"}]},{"nativeSrc":"5415:28:5","nodeType":"YulVariableDeclaration","src":"5415:28:5","value":{"arguments":[{"name":"x","nativeSrc":"5438:1:5","nodeType":"YulIdentifier","src":"5438:1:5"},{"name":"y","nativeSrc":"5441:1:5","nodeType":"YulIdentifier","src":"5441:1:5"}],"functionName":{"name":"mul","nativeSrc":"5434:3:5","nodeType":"YulIdentifier","src":"5434:3:5"},"nativeSrc":"5434:9:5","nodeType":"YulFunctionCall","src":"5434:9:5"},"variables":[{"name":"product_raw","nativeSrc":"5419:11:5","nodeType":"YulTypedName","src":"5419:11:5","type":""}]},{"nativeSrc":"5452:41:5","nodeType":"YulAssignment","src":"5452:41:5","value":{"arguments":[{"name":"product_raw","nativeSrc":"5481:11:5","nodeType":"YulIdentifier","src":"5481:11:5"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5463:17:5","nodeType":"YulIdentifier","src":"5463:17:5"},"nativeSrc":"5463:30:5","nodeType":"YulFunctionCall","src":"5463:30:5"},"variableNames":[{"name":"product","nativeSrc":"5452:7:5","nodeType":"YulIdentifier","src":"5452:7:5"}]},{"body":{"nativeSrc":"5670:22:5","nodeType":"YulBlock","src":"5670:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"5672:16:5","nodeType":"YulIdentifier","src":"5672:16:5"},"nativeSrc":"5672:18:5","nodeType":"YulFunctionCall","src":"5672:18:5"},"nativeSrc":"5672:18:5","nodeType":"YulExpressionStatement","src":"5672:18:5"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"5603:1:5","nodeType":"YulIdentifier","src":"5603:1:5"}],"functionName":{"name":"iszero","nativeSrc":"5596:6:5","nodeType":"YulIdentifier","src":"5596:6:5"},"nativeSrc":"5596:9:5","nodeType":"YulFunctionCall","src":"5596:9:5"},{"arguments":[{"name":"y","nativeSrc":"5626:1:5","nodeType":"YulIdentifier","src":"5626:1:5"},{"arguments":[{"name":"product","nativeSrc":"5633:7:5","nodeType":"YulIdentifier","src":"5633:7:5"},{"name":"x","nativeSrc":"5642:1:5","nodeType":"YulIdentifier","src":"5642:1:5"}],"functionName":{"name":"div","nativeSrc":"5629:3:5","nodeType":"YulIdentifier","src":"5629:3:5"},"nativeSrc":"5629:15:5","nodeType":"YulFunctionCall","src":"5629:15:5"}],"functionName":{"name":"eq","nativeSrc":"5623:2:5","nodeType":"YulIdentifier","src":"5623:2:5"},"nativeSrc":"5623:22:5","nodeType":"YulFunctionCall","src":"5623:22:5"}],"functionName":{"name":"or","nativeSrc":"5576:2:5","nodeType":"YulIdentifier","src":"5576:2:5"},"nativeSrc":"5576:83:5","nodeType":"YulFunctionCall","src":"5576:83:5"}],"functionName":{"name":"iszero","nativeSrc":"5556:6:5","nodeType":"YulIdentifier","src":"5556:6:5"},"nativeSrc":"5556:113:5","nodeType":"YulFunctionCall","src":"5556:113:5"},"nativeSrc":"5553:139:5","nodeType":"YulIf","src":"5553:139:5"}]},"name":"checked_mul_t_uint256","nativeSrc":"5289:410:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"5320:1:5","nodeType":"YulTypedName","src":"5320:1:5","type":""},{"name":"y","nativeSrc":"5323:1:5","nodeType":"YulTypedName","src":"5323:1:5","type":""}],"returnVariables":[{"name":"product","nativeSrc":"5329:7:5","nodeType":"YulTypedName","src":"5329:7:5","type":""}],"src":"5289:410:5"},{"body":{"nativeSrc":"5733:152:5","nodeType":"YulBlock","src":"5733:152:5","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5750:1:5","nodeType":"YulLiteral","src":"5750:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"5753:77:5","nodeType":"YulLiteral","src":"5753:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"5743:6:5","nodeType":"YulIdentifier","src":"5743:6:5"},"nativeSrc":"5743:88:5","nodeType":"YulFunctionCall","src":"5743:88:5"},"nativeSrc":"5743:88:5","nodeType":"YulExpressionStatement","src":"5743:88:5"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5847:1:5","nodeType":"YulLiteral","src":"5847:1:5","type":"","value":"4"},{"kind":"number","nativeSrc":"5850:4:5","nodeType":"YulLiteral","src":"5850:4:5","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"5840:6:5","nodeType":"YulIdentifier","src":"5840:6:5"},"nativeSrc":"5840:15:5","nodeType":"YulFunctionCall","src":"5840:15:5"},"nativeSrc":"5840:15:5","nodeType":"YulExpressionStatement","src":"5840:15:5"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5871:1:5","nodeType":"YulLiteral","src":"5871:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"5874:4:5","nodeType":"YulLiteral","src":"5874:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5864:6:5","nodeType":"YulIdentifier","src":"5864:6:5"},"nativeSrc":"5864:15:5","nodeType":"YulFunctionCall","src":"5864:15:5"},"nativeSrc":"5864:15:5","nodeType":"YulExpressionStatement","src":"5864:15:5"}]},"name":"panic_error_0x12","nativeSrc":"5705:180:5","nodeType":"YulFunctionDefinition","src":"5705:180:5"},{"body":{"nativeSrc":"5933:143:5","nodeType":"YulBlock","src":"5933:143:5","statements":[{"nativeSrc":"5943:25:5","nodeType":"YulAssignment","src":"5943:25:5","value":{"arguments":[{"name":"x","nativeSrc":"5966:1:5","nodeType":"YulIdentifier","src":"5966:1:5"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5948:17:5","nodeType":"YulIdentifier","src":"5948:17:5"},"nativeSrc":"5948:20:5","nodeType":"YulFunctionCall","src":"5948:20:5"},"variableNames":[{"name":"x","nativeSrc":"5943:1:5","nodeType":"YulIdentifier","src":"5943:1:5"}]},{"nativeSrc":"5977:25:5","nodeType":"YulAssignment","src":"5977:25:5","value":{"arguments":[{"name":"y","nativeSrc":"6000:1:5","nodeType":"YulIdentifier","src":"6000:1:5"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5982:17:5","nodeType":"YulIdentifier","src":"5982:17:5"},"nativeSrc":"5982:20:5","nodeType":"YulFunctionCall","src":"5982:20:5"},"variableNames":[{"name":"y","nativeSrc":"5977:1:5","nodeType":"YulIdentifier","src":"5977:1:5"}]},{"body":{"nativeSrc":"6024:22:5","nodeType":"YulBlock","src":"6024:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"6026:16:5","nodeType":"YulIdentifier","src":"6026:16:5"},"nativeSrc":"6026:18:5","nodeType":"YulFunctionCall","src":"6026:18:5"},"nativeSrc":"6026:18:5","nodeType":"YulExpressionStatement","src":"6026:18:5"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"6021:1:5","nodeType":"YulIdentifier","src":"6021:1:5"}],"functionName":{"name":"iszero","nativeSrc":"6014:6:5","nodeType":"YulIdentifier","src":"6014:6:5"},"nativeSrc":"6014:9:5","nodeType":"YulFunctionCall","src":"6014:9:5"},"nativeSrc":"6011:35:5","nodeType":"YulIf","src":"6011:35:5"},{"nativeSrc":"6056:14:5","nodeType":"YulAssignment","src":"6056:14:5","value":{"arguments":[{"name":"x","nativeSrc":"6065:1:5","nodeType":"YulIdentifier","src":"6065:1:5"},{"name":"y","nativeSrc":"6068:1:5","nodeType":"YulIdentifier","src":"6068:1:5"}],"functionName":{"name":"div","nativeSrc":"6061:3:5","nodeType":"YulIdentifier","src":"6061:3:5"},"nativeSrc":"6061:9:5","nodeType":"YulFunctionCall","src":"6061:9:5"},"variableNames":[{"name":"r","nativeSrc":"6056:1:5","nodeType":"YulIdentifier","src":"6056:1:5"}]}]},"name":"checked_div_t_uint256","nativeSrc":"5891:185:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"5922:1:5","nodeType":"YulTypedName","src":"5922:1:5","type":""},{"name":"y","nativeSrc":"5925:1:5","nodeType":"YulTypedName","src":"5925:1:5","type":""}],"returnVariables":[{"name":"r","nativeSrc":"5931:1:5","nodeType":"YulTypedName","src":"5931:1:5","type":""}],"src":"5891:185:5"},{"body":{"nativeSrc":"6127:149:5","nodeType":"YulBlock","src":"6127:149:5","statements":[{"nativeSrc":"6137:25:5","nodeType":"YulAssignment","src":"6137:25:5","value":{"arguments":[{"name":"x","nativeSrc":"6160:1:5","nodeType":"YulIdentifier","src":"6160:1:5"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6142:17:5","nodeType":"YulIdentifier","src":"6142:17:5"},"nativeSrc":"6142:20:5","nodeType":"YulFunctionCall","src":"6142:20:5"},"variableNames":[{"name":"x","nativeSrc":"6137:1:5","nodeType":"YulIdentifier","src":"6137:1:5"}]},{"nativeSrc":"6171:25:5","nodeType":"YulAssignment","src":"6171:25:5","value":{"arguments":[{"name":"y","nativeSrc":"6194:1:5","nodeType":"YulIdentifier","src":"6194:1:5"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6176:17:5","nodeType":"YulIdentifier","src":"6176:17:5"},"nativeSrc":"6176:20:5","nodeType":"YulFunctionCall","src":"6176:20:5"},"variableNames":[{"name":"y","nativeSrc":"6171:1:5","nodeType":"YulIdentifier","src":"6171:1:5"}]},{"nativeSrc":"6205:17:5","nodeType":"YulAssignment","src":"6205:17:5","value":{"arguments":[{"name":"x","nativeSrc":"6217:1:5","nodeType":"YulIdentifier","src":"6217:1:5"},{"name":"y","nativeSrc":"6220:1:5","nodeType":"YulIdentifier","src":"6220:1:5"}],"functionName":{"name":"sub","nativeSrc":"6213:3:5","nodeType":"YulIdentifier","src":"6213:3:5"},"nativeSrc":"6213:9:5","nodeType":"YulFunctionCall","src":"6213:9:5"},"variableNames":[{"name":"diff","nativeSrc":"6205:4:5","nodeType":"YulIdentifier","src":"6205:4:5"}]},{"body":{"nativeSrc":"6247:22:5","nodeType":"YulBlock","src":"6247:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"6249:16:5","nodeType":"YulIdentifier","src":"6249:16:5"},"nativeSrc":"6249:18:5","nodeType":"YulFunctionCall","src":"6249:18:5"},"nativeSrc":"6249:18:5","nodeType":"YulExpressionStatement","src":"6249:18:5"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"6238:4:5","nodeType":"YulIdentifier","src":"6238:4:5"},{"name":"x","nativeSrc":"6244:1:5","nodeType":"YulIdentifier","src":"6244:1:5"}],"functionName":{"name":"gt","nativeSrc":"6235:2:5","nodeType":"YulIdentifier","src":"6235:2:5"},"nativeSrc":"6235:11:5","nodeType":"YulFunctionCall","src":"6235:11:5"},"nativeSrc":"6232:37:5","nodeType":"YulIf","src":"6232:37:5"}]},"name":"checked_sub_t_uint256","nativeSrc":"6082:194:5","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"6113:1:5","nodeType":"YulTypedName","src":"6113:1:5","type":""},{"name":"y","nativeSrc":"6116:1:5","nodeType":"YulTypedName","src":"6116:1:5","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"6122:4:5","nodeType":"YulTypedName","src":"6122:4:5","type":""}],"src":"6082:194:5"},{"body":{"nativeSrc":"6310:152:5","nodeType":"YulBlock","src":"6310:152:5","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6327:1:5","nodeType":"YulLiteral","src":"6327:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"6330:77:5","nodeType":"YulLiteral","src":"6330:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"6320:6:5","nodeType":"YulIdentifier","src":"6320:6:5"},"nativeSrc":"6320:88:5","nodeType":"YulFunctionCall","src":"6320:88:5"},"nativeSrc":"6320:88:5","nodeType":"YulExpressionStatement","src":"6320:88:5"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6424:1:5","nodeType":"YulLiteral","src":"6424:1:5","type":"","value":"4"},{"kind":"number","nativeSrc":"6427:4:5","nodeType":"YulLiteral","src":"6427:4:5","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"6417:6:5","nodeType":"YulIdentifier","src":"6417:6:5"},"nativeSrc":"6417:15:5","nodeType":"YulFunctionCall","src":"6417:15:5"},"nativeSrc":"6417:15:5","nodeType":"YulExpressionStatement","src":"6417:15:5"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6448:1:5","nodeType":"YulLiteral","src":"6448:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"6451:4:5","nodeType":"YulLiteral","src":"6451:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6441:6:5","nodeType":"YulIdentifier","src":"6441:6:5"},"nativeSrc":"6441:15:5","nodeType":"YulFunctionCall","src":"6441:15:5"},"nativeSrc":"6441:15:5","nodeType":"YulExpressionStatement","src":"6441:15:5"}]},"name":"panic_error_0x32","nativeSrc":"6282:180:5","nodeType":"YulFunctionDefinition","src":"6282:180:5"},{"body":{"nativeSrc":"6496:152:5","nodeType":"YulBlock","src":"6496:152:5","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6513:1:5","nodeType":"YulLiteral","src":"6513:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"6516:77:5","nodeType":"YulLiteral","src":"6516:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"6506:6:5","nodeType":"YulIdentifier","src":"6506:6:5"},"nativeSrc":"6506:88:5","nodeType":"YulFunctionCall","src":"6506:88:5"},"nativeSrc":"6506:88:5","nodeType":"YulExpressionStatement","src":"6506:88:5"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6610:1:5","nodeType":"YulLiteral","src":"6610:1:5","type":"","value":"4"},{"kind":"number","nativeSrc":"6613:4:5","nodeType":"YulLiteral","src":"6613:4:5","type":"","value":"0x31"}],"functionName":{"name":"mstore","nativeSrc":"6603:6:5","nodeType":"YulIdentifier","src":"6603:6:5"},"nativeSrc":"6603:15:5","nodeType":"YulFunctionCall","src":"6603:15:5"},"nativeSrc":"6603:15:5","nodeType":"YulExpressionStatement","src":"6603:15:5"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6634:1:5","nodeType":"YulLiteral","src":"6634:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"6637:4:5","nodeType":"YulLiteral","src":"6637:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6627:6:5","nodeType":"YulIdentifier","src":"6627:6:5"},"nativeSrc":"6627:15:5","nodeType":"YulFunctionCall","src":"6627:15:5"},"nativeSrc":"6627:15:5","nodeType":"YulExpressionStatement","src":"6627:15:5"}]},"name":"panic_error_0x31","nativeSrc":"6468:180:5","nodeType":"YulFunctionDefinition","src":"6468:180:5"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_efe8f4c43e0a7ce9afba23fb6c993cae9893c4081f1a55c9c3488cdb730ee4a2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Value.\")\n\n    }\n\n    function abi_encode_t_stringliteral_efe8f4c43e0a7ce9afba23fb6c993cae9893c4081f1a55c9c3488cdb730ee4a2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_efe8f4c43e0a7ce9afba23fb6c993cae9893c4081f1a55c9c3488cdb730ee4a2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_efe8f4c43e0a7ce9afba23fb6c993cae9893c4081f1a55c9c3488cdb730ee4a2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_efe8f4c43e0a7ce9afba23fb6c993cae9893c4081f1a55c9c3488cdb730ee4a2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n}\n","id":5,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100eb578063ae7b6d1614610109578063d7ad21ac14610127578063f2fde38b1461015757610088565b80630ed9cc4c1461008d578063699abb3c146100a9578063705931fa146100c5578063715018a6146100e1575b600080fd5b6100a760048036038101906100a2919061080e565b610173565b005b6100c360048036038101906100be9190610871565b6101e7565b005b6100df60048036038101906100da919061080e565b61027e565b005b6100e96102f2565b005b6100f3610306565b60405161010091906108ad565b60405180910390f35b61011161032f565b60405161011e91906108d7565b60405180910390f35b610141600480360381019061013c91906108f2565b610335565b60405161014e91906108d7565b60405180910390f35b610171600480360381019061016c919061080e565b61039b565b005b61017b610421565b61018f8160016104a890919063ffffffff16565b156101e4578073ffffffffffffffffffffffffffffffffffffffff167f36ee46fa09c2419f7bcf8135c2bdd56bc882be141cb075961717003bed74367d60006040516101db9190610960565b60405180910390a25b50565b6101ef610421565b6000811015610233576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022a906109d8565b60405180910390fd5b60006003549050816003819055507f4953fbf85b1bef649a55e328880dc688093c62b90bc90dec0ffcb6a1c5cce0a581836040516102729291906109f8565b60405180910390a15050565b610286610421565b61029a8160016104d890919063ffffffff16565b156102ef578073ffffffffffffffffffffffffffffffffffffffff167f36ee46fa09c2419f7bcf8135c2bdd56bc882be141cb075961717003bed74367d60016040516102e69190610960565b60405180910390a25b50565b6102fa610421565b6103046000610508565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60035481565b600061034b8460016105cc90919063ffffffff16565b8061036657506103658360016105cc90919063ffffffff16565b5b156103745760009050610394565b6305f5e100600354836103879190610a50565b6103919190610ac1565b90505b9392505050565b6103a3610421565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104155760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161040c91906108ad565b60405180910390fd5b61041e81610508565b50565b6104296105fc565b73ffffffffffffffffffffffffffffffffffffffff16610447610306565b73ffffffffffffffffffffffffffffffffffffffff16146104a65761046a6105fc565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161049d91906108ad565b60405180910390fd5b565b60006104d0836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610604565b905092915050565b6000610500836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610718565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006105f4836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610788565b905092915050565b600033905090565b6000808360010160008481526020019081526020016000205490506000811461070c5760006001826106369190610af2565b905060006001866000018054905061064e9190610af2565b90508082146106bd57600086600001828154811061066f5761066e610b26565b5b906000526020600020015490508087600001848154811061069357610692610b26565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b856000018054806106d1576106d0610b55565b5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610712565b60009150505b92915050565b60006107248383610788565b61077d578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050610782565b600090505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107db826107b0565b9050919050565b6107eb816107d0565b81146107f657600080fd5b50565b600081359050610808816107e2565b92915050565b600060208284031215610824576108236107ab565b5b6000610832848285016107f9565b91505092915050565b6000819050919050565b61084e8161083b565b811461085957600080fd5b50565b60008135905061086b81610845565b92915050565b600060208284031215610887576108866107ab565b5b60006108958482850161085c565b91505092915050565b6108a7816107d0565b82525050565b60006020820190506108c2600083018461089e565b92915050565b6108d18161083b565b82525050565b60006020820190506108ec60008301846108c8565b92915050565b60008060006060848603121561090b5761090a6107ab565b5b6000610919868287016107f9565b935050602061092a868287016107f9565b925050604061093b8682870161085c565b9150509250925092565b60008115159050919050565b61095a81610945565b82525050565b60006020820190506109756000830184610951565b92915050565b600082825260208201905092915050565b7f496e76616c69642056616c75652e000000000000000000000000000000000000600082015250565b60006109c2600e8361097b565b91506109cd8261098c565b602082019050919050565b600060208201905081810360008301526109f1816109b5565b9050919050565b6000604082019050610a0d60008301856108c8565b610a1a60208301846108c8565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a5b8261083b565b9150610a668361083b565b9250828202610a748161083b565b91508282048414831517610a8b57610a8a610a21565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610acc8261083b565b9150610ad78361083b565b925082610ae757610ae6610a92565b5b828204905092915050565b6000610afd8261083b565b9150610b088361083b565b9250828203905081811115610b2057610b1f610a21565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220b9f270ebed06f3162f42763d9cd64693c4c11af59dc4857acdd522f93087634164736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0xAE7B6D16 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0xD7AD21AC EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x157 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0xED9CC4C EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x699ABB3C EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x705931FA EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x80E JUMP JUMPDEST PUSH2 0x173 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x871 JUMP JUMPDEST PUSH2 0x1E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDA SWAP2 SWAP1 PUSH2 0x80E JUMP JUMPDEST PUSH2 0x27E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE9 PUSH2 0x2F2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF3 PUSH2 0x306 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x100 SWAP2 SWAP1 PUSH2 0x8AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x111 PUSH2 0x32F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x8D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x8F2 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x8D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x80E JUMP JUMPDEST PUSH2 0x39B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17B PUSH2 0x421 JUMP JUMPDEST PUSH2 0x18F DUP2 PUSH1 0x1 PUSH2 0x4A8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x1E4 JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x36EE46FA09C2419F7BCF8135C2BDD56BC882BE141CB075961717003BED74367D PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x960 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMP JUMPDEST PUSH2 0x1EF PUSH2 0x421 JUMP JUMPDEST PUSH1 0x0 DUP2 LT ISZERO PUSH2 0x233 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22A SWAP1 PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0x4953FBF85B1BEF649A55E328880DC688093C62B90BC90DEC0FFCB6A1C5CCE0A5 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x272 SWAP3 SWAP2 SWAP1 PUSH2 0x9F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x286 PUSH2 0x421 JUMP JUMPDEST PUSH2 0x29A DUP2 PUSH1 0x1 PUSH2 0x4D8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x2EF JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x36EE46FA09C2419F7BCF8135C2BDD56BC882BE141CB075961717003BED74367D PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x960 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMP JUMPDEST PUSH2 0x2FA PUSH2 0x421 JUMP JUMPDEST PUSH2 0x304 PUSH1 0x0 PUSH2 0x508 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34B DUP5 PUSH1 0x1 PUSH2 0x5CC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH2 0x366 JUMPI POP PUSH2 0x365 DUP4 PUSH1 0x1 PUSH2 0x5CC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST ISZERO PUSH2 0x374 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x394 JUMP JUMPDEST PUSH4 0x5F5E100 PUSH1 0x3 SLOAD DUP4 PUSH2 0x387 SWAP2 SWAP1 PUSH2 0xA50 JUMP JUMPDEST PUSH2 0x391 SWAP2 SWAP1 PUSH2 0xAC1 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x3A3 PUSH2 0x421 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x415 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40C SWAP2 SWAP1 PUSH2 0x8AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x41E DUP2 PUSH2 0x508 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x429 PUSH2 0x5FC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x447 PUSH2 0x306 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4A6 JUMPI PUSH2 0x46A PUSH2 0x5FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49D SWAP2 SWAP1 PUSH2 0x8AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D0 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x604 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x500 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x718 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F4 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x788 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x70C JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x636 SWAP2 SWAP1 PUSH2 0xAF2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x64E SWAP2 SWAP1 PUSH2 0xAF2 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0x6BD JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x66F JUMPI PUSH2 0x66E PUSH2 0xB26 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x693 JUMPI PUSH2 0x692 PUSH2 0xB26 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x6D1 JUMPI PUSH2 0x6D0 PUSH2 0xB55 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x712 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x724 DUP4 DUP4 PUSH2 0x788 JUMP JUMPDEST PUSH2 0x77D JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x782 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7DB DUP3 PUSH2 0x7B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7EB DUP2 PUSH2 0x7D0 JUMP JUMPDEST DUP2 EQ PUSH2 0x7F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x808 DUP2 PUSH2 0x7E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x824 JUMPI PUSH2 0x823 PUSH2 0x7AB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x832 DUP5 DUP3 DUP6 ADD PUSH2 0x7F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x84E DUP2 PUSH2 0x83B JUMP JUMPDEST DUP2 EQ PUSH2 0x859 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x86B DUP2 PUSH2 0x845 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x887 JUMPI PUSH2 0x886 PUSH2 0x7AB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x895 DUP5 DUP3 DUP6 ADD PUSH2 0x85C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8A7 DUP2 PUSH2 0x7D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8C2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x89E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8D1 DUP2 PUSH2 0x83B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8EC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x90B JUMPI PUSH2 0x90A PUSH2 0x7AB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x919 DUP7 DUP3 DUP8 ADD PUSH2 0x7F9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x92A DUP7 DUP3 DUP8 ADD PUSH2 0x7F9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x93B DUP7 DUP3 DUP8 ADD PUSH2 0x85C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x95A DUP2 PUSH2 0x945 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x975 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x951 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C69642056616C75652E000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9C2 PUSH1 0xE DUP4 PUSH2 0x97B JUMP JUMPDEST SWAP2 POP PUSH2 0x9CD DUP3 PUSH2 0x98C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9F1 DUP2 PUSH2 0x9B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA0D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x8C8 JUMP JUMPDEST PUSH2 0xA1A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8C8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA5B DUP3 PUSH2 0x83B JUMP JUMPDEST SWAP2 POP PUSH2 0xA66 DUP4 PUSH2 0x83B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xA74 DUP2 PUSH2 0x83B JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xA8B JUMPI PUSH2 0xA8A PUSH2 0xA21 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xACC DUP3 PUSH2 0x83B JUMP JUMPDEST SWAP2 POP PUSH2 0xAD7 DUP4 PUSH2 0x83B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xAE7 JUMPI PUSH2 0xAE6 PUSH2 0xA92 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFD DUP3 PUSH2 0x83B JUMP JUMPDEST SWAP2 POP PUSH2 0xB08 DUP4 PUSH2 0x83B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xB20 JUMPI PUSH2 0xB1F PUSH2 0xA21 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 CALLCODE PUSH17 0xEBED06F3162F42763D9CD64693C4C11AF5 SWAP14 0xC4 DUP6 PUSH27 0xCDD522F93087634164736F6C634300081800330000000000000000 ","sourceMap":"656:2346:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2821:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1992:335;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2483:172;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;867:28:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1478:318;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2821:179:4;1531:13:0;:11;:13::i;:::-;2898:27:4::1;2915:9;2898;:16;;:27;;;;:::i;:::-;2894:100;;;2966:9;2946:37;;;2977:5;2946:37;;;;;;:::i;:::-;;;;;;;;2894:100;2821:179:::0;:::o;1992:335::-;1531:13:0;:11;:13::i;:::-;2114:1:4::1;2094:16;:21;;2073:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;2166:24;2193:13;;2166:40;;2232:16;2216:13;:32;;;;2264:56;2285:16;2303;2264:56;;;;;;;:::i;:::-;;;;;;;;2063:264;1992:335:::0;:::o;2483:172::-;1531:13:0;:11;:13::i;:::-;2557:24:4::1;2571:9;2557;:13;;:24;;;;:::i;:::-;2553:96;;;2622:9;2602:36;;;2633:4;2602:36;;;;;;:::i;:::-;;;;;;;;2553:96;2483:172:::0;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;867:28:4:-;;;;:::o;1478:318::-;1613:7;1636:30;1655:10;1636:9;:18;;:30;;;;:::i;:::-;:65;;;;1670:31;1689:11;1670:9;:18;;:31;;;;:::i;:::-;1636:65;1632:104;;;1724:1;1717:8;;;;1632:104;1778:11;1762:13;;1753:6;:22;;;;:::i;:::-;:36;;;;:::i;:::-;1746:43;;1478:318;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;8634:156:2:-;8707:4;8730:53;8738:3;:10;;8774:5;8758:23;;8750:32;;8730:7;:53::i;:::-;8723:60;;8634:156;;;;:::o;8316:150::-;8386:4;8409:50;8414:3;:10;;8450:5;8434:23;;8426:32;;8409:4;:50::i;:::-;8402:57;;8316:150;;;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;8871:165:2:-;8951:4;8974:55;8984:3;:10;;9020:5;9004:23;;8996:32;;8974:9;:55::i;:::-;8967:62;;8871:165;;;;:::o;656:96:1:-;709:7;735:10;728:17;;656:96;:::o;2815:1368:2:-;2881:4;2991:16;3010:3;:14;;:21;3025:5;3010:21;;;;;;;;;;;;2991:40;;3058:1;3046:8;:13;3042:1135;;3413:18;3445:1;3434:8;:12;;;;:::i;:::-;3413:33;;3460:17;3501:1;3480:3;:11;;:18;;;;:22;;;;:::i;:::-;3460:42;;3535:9;3521:10;:23;3517:378;;3564:17;3584:3;:11;;3596:9;3584:22;;;;;;;;:::i;:::-;;;;;;;;;;3564:42;;3731:9;3705:3;:11;;3717:10;3705:23;;;;;;;;:::i;:::-;;;;;;;;;:35;;;;3872:8;3844:3;:14;;:25;3859:9;3844:25;;;;;;;;;;;:36;;;;3546:349;3517:378;3973:3;:11;;:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4076:3;:14;;:21;4091:5;4076:21;;;;;;;;;;;4069:28;;;4119:4;4112:11;;;;;;;3042:1135;4161:5;4154:12;;;2815:1368;;;;;:::o;2241:406::-;2304:4;2325:21;2335:3;2340:5;2325:9;:21::i;:::-;2320:321;;2362:3;:11;;2379:5;2362:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2544:3;:11;;:18;;;;2520:3;:14;;:21;2535:5;2520:21;;;;;;;;;;;:42;;;;2583:4;2576:11;;;;2320:321;2625:5;2618:12;;2241:406;;;;;:::o;4264:129::-;4337:4;4385:1;4360:3;:14;;:21;4375:5;4360:21;;;;;;;;;;;;:26;;4353:33;;4264:129;;;;:::o;88:117:5:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:122::-;1332:24;1350:5;1332:24;:::i;:::-;1325:5;1322:35;1312:63;;1371:1;1368;1361:12;1312:63;1259:122;:::o;1387:139::-;1433:5;1471:6;1458:20;1449:29;;1487:33;1514:5;1487:33;:::i;:::-;1387:139;;;;:::o;1532:329::-;1591:6;1640:2;1628:9;1619:7;1615:23;1611:32;1608:119;;;1646:79;;:::i;:::-;1608:119;1766:1;1791:53;1836:7;1827:6;1816:9;1812:22;1791:53;:::i;:::-;1781:63;;1737:117;1532:329;;;;:::o;1867:118::-;1954:24;1972:5;1954:24;:::i;:::-;1949:3;1942:37;1867:118;;:::o;1991:222::-;2084:4;2122:2;2111:9;2107:18;2099:26;;2135:71;2203:1;2192:9;2188:17;2179:6;2135:71;:::i;:::-;1991:222;;;;:::o;2219:118::-;2306:24;2324:5;2306:24;:::i;:::-;2301:3;2294:37;2219:118;;:::o;2343:222::-;2436:4;2474:2;2463:9;2459:18;2451:26;;2487:71;2555:1;2544:9;2540:17;2531:6;2487:71;:::i;:::-;2343:222;;;;:::o;2571:619::-;2648:6;2656;2664;2713:2;2701:9;2692:7;2688:23;2684:32;2681:119;;;2719:79;;:::i;:::-;2681:119;2839:1;2864:53;2909:7;2900:6;2889:9;2885:22;2864:53;:::i;:::-;2854:63;;2810:117;2966:2;2992:53;3037:7;3028:6;3017:9;3013:22;2992:53;:::i;:::-;2982:63;;2937:118;3094:2;3120:53;3165:7;3156:6;3145:9;3141:22;3120:53;:::i;:::-;3110:63;;3065:118;2571:619;;;;;:::o;3196:90::-;3230:7;3273:5;3266:13;3259:21;3248:32;;3196:90;;;:::o;3292:109::-;3373:21;3388:5;3373:21;:::i;:::-;3368:3;3361:34;3292:109;;:::o;3407:210::-;3494:4;3532:2;3521:9;3517:18;3509:26;;3545:65;3607:1;3596:9;3592:17;3583:6;3545:65;:::i;:::-;3407:210;;;;:::o;3623:169::-;3707:11;3741:6;3736:3;3729:19;3781:4;3776:3;3772:14;3757:29;;3623:169;;;;:::o;3798:164::-;3938:16;3934:1;3926:6;3922:14;3915:40;3798:164;:::o;3968:366::-;4110:3;4131:67;4195:2;4190:3;4131:67;:::i;:::-;4124:74;;4207:93;4296:3;4207:93;:::i;:::-;4325:2;4320:3;4316:12;4309:19;;3968:366;;;:::o;4340:419::-;4506:4;4544:2;4533:9;4529:18;4521:26;;4593:9;4587:4;4583:20;4579:1;4568:9;4564:17;4557:47;4621:131;4747:4;4621:131;:::i;:::-;4613:139;;4340:419;;;:::o;4765:332::-;4886:4;4924:2;4913:9;4909:18;4901:26;;4937:71;5005:1;4994:9;4990:17;4981:6;4937:71;:::i;:::-;5018:72;5086:2;5075:9;5071:18;5062:6;5018:72;:::i;:::-;4765:332;;;;;:::o;5103:180::-;5151:77;5148:1;5141:88;5248:4;5245:1;5238:15;5272:4;5269:1;5262:15;5289:410;5329:7;5352:20;5370:1;5352:20;:::i;:::-;5347:25;;5386:20;5404:1;5386:20;:::i;:::-;5381:25;;5441:1;5438;5434:9;5463:30;5481:11;5463:30;:::i;:::-;5452:41;;5642:1;5633:7;5629:15;5626:1;5623:22;5603:1;5596:9;5576:83;5553:139;;5672:18;;:::i;:::-;5553:139;5337:362;5289:410;;;;:::o;5705:180::-;5753:77;5750:1;5743:88;5850:4;5847:1;5840:15;5874:4;5871:1;5864:15;5891:185;5931:1;5948:20;5966:1;5948:20;:::i;:::-;5943:25;;5982:20;6000:1;5982:20;:::i;:::-;5977:25;;6021:1;6011:35;;6026:18;;:::i;:::-;6011:35;6068:1;6065;6061:9;6056:14;;5891:185;;;;:::o;6082:194::-;6122:4;6142:20;6160:1;6142:20;:::i;:::-;6137:25;;6176:20;6194:1;6176:20;:::i;:::-;6171:25;;6220:1;6217;6213:9;6205:17;;6244:1;6238:4;6235:11;6232:37;;;6249:18;;:::i;:::-;6232:37;6082:194;;;;:::o;6282:180::-;6330:77;6327:1;6320:88;6427:4;6424:1;6417:15;6451:4;6448:1;6441:15;6468:180;6516:77;6513:1;6506:88;6613:4;6610:1;6603:15;6637:4;6634:1;6627:15"},"methodIdentifiers":{"addExemption(address)":"705931fa","getTax(address,address,uint256)":"d7ad21ac","owner()":"8da5cb5b","removeExemption(address)":"0ed9cc4c","renounceOwnership()":"715018a6","setTaxPercentage(uint256)":"699abb3c","taxPercentage()":"ae7b6d16","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialTaxPercentage\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"exempted\",\"type\":\"bool\"}],\"name\":\"TaxExemptionUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldTaxPercentage\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTaxPercentage\",\"type\":\"uint256\"}],\"name\":\"TaxPercentageUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemption\",\"type\":\"address\"}],\"name\":\"addExemption\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"benefactor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemption\",\"type\":\"address\"}],\"name\":\"removeExemption\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTaxPercentage\",\"type\":\"uint256\"}],\"name\":\"setTaxPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract allows protocols to collect tax on transactions that count as either sells or liquidity additions to exchange pools. Addresses can be exempted from tax collection, and addresses designated as exchange pools can be added and removed by the owner of this contract. The owner of the contract should be set to a DAO-controlled timelock or at the very least a multisig wallet.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"addExemption(address)\":{\"params\":{\"exemption\":\"Address to add to set of tax-exempted addresses.\"}},\"constructor\":{\"params\":{\"initialTaxPercentage\":\"The number of tax percentage to start out with for tax calculations.\"}},\"getTax(address,address,uint256)\":{\"params\":{\"amount\":\"Number of tokens in the transfer.\",\"benefactor\":\"Address of the benefactor.\",\"beneficiary\":\"Address of the beneficiary.\"},\"returns\":{\"_0\":\"Number of tokens to pay as tax.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeExemption(address)\":{\"params\":{\"exemption\":\"Address to remove from set of tax-exempted addresses.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setTaxPercentage(uint256)\":{\"params\":{\"newTaxPercentage\":\"New tax basis points number to set for calculations.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"_exempted\":{\"details\":\"The set of addresses exempt from tax.\"}},\"title\":\"Static tax handler contract\",\"version\":1},\"userdoc\":{\"events\":{\"TaxExemptionUpdated(address,bool)\":{\"notice\":\"Emitted when an address is added to or removed from the exempted addresses set.\"},\"TaxPercentageUpdated(uint256,uint256)\":{\"notice\":\"Emitted when the tax is updated.\"}},\"kind\":\"user\",\"methods\":{\"addExemption(address)\":{\"notice\":\"Add address to set of tax-exempted addresses.\"},\"getTax(address,address,uint256)\":{\"notice\":\"Get number of tokens to pay as tax.\"},\"removeExemption(address)\":{\"notice\":\"Remove address from set of tax-exempted addresses.\"},\"setTaxPercentage(uint256)\":{\"notice\":\"Set new number for tax basis points. This number can only ever be lowered.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tax/StaticTaxHandler.sol\":\"StaticTaxHandler\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]},\"contracts/tax/ITaxHandler.sol\":{\"keccak256\":\"0xfbe50a73a526b7425030b98d2659fd5e5eb4222102f59c5b620d1c77a0178518\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b720ef524c3d25af70f56f19eff096a2142d6d3d606166b326a96f5c0afd49db\",\"dweb:/ipfs/QmWukwdeBzzMRzemBxFc8nK2yZkhjDP8r4b8abGuWuBdF4\"]},\"contracts/tax/StaticTaxHandler.sol\":{\"keccak256\":\"0xb0c7df369382f788a50446a100e0cb04c2141ac3cae4bd0a77fcd889a48bfbd1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86caee80d705acd519affd6e0805d49bfdbfb23b36274feea5c4e754411ca175\",\"dweb:/ipfs/Qme7LDv13Fba3WMB5cRmrF4X2N9K4jVFhgcn9Vs6FsG2hB\"]}},\"version\":1}"}}}}}