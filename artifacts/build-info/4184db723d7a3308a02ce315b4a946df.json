{"id":"4184db723d7a3308a02ce315b4a946df","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\nimport {ERC20} from \"../ERC20.sol\";\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../../../utils/Nonces.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Nonces.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position is the index of the value in the `values` array plus 1.\n        // Position 0 is used to mean a value is not in the set.\n        mapping(bytes32 value => uint256) _positions;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._positions[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We cache the value's position to prevent multiple reads from the same storage slot\n        uint256 position = set._positions[value];\n\n        if (position != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 valueIndex = position - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (valueIndex != lastIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the lastValue to the index where the value to delete is\n                set._values[valueIndex] = lastValue;\n                // Update the tracked position of the lastValue (that was just moved)\n                set._positions[lastValue] = position;\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the tracked position for the deleted slot\n            delete set._positions[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._positions[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"contracts/AraraCoin.sol":{"content":"// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\nimport \"./tax/ITaxHandler.sol\";\n\ncontract AraraCoin is ERC20, ERC20Permit, Ownable {\n    address public thirdPartyServices = 0x70997970C51812dc3A010C7d01b50e0d17dc79C8;\n    address public preSale = 0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC;\n    address public initialLaunch = 0x90F79bf6EB2c4f870365E785982E1f101E93b906;\n    address public investors = 0x15d34AAf54267DB7D7c367839AAf71A00a2C6A65;\n    address public teamAndFounders = 0x9965507D1a55bcC2695C58ba16FB37d819B0A4dc;\n    address public preservationProjects = 0x976EA74026E726554dB657fA54763abd0C3a0aa9;\n    uint256 private constant TOTAL_SUPPLY = 100_000_000_000 * 10 ** 18;\n    \n    ITaxHandler public taxHandler;\n    bool public tradingEnabled;\n    mapping(address => bool) private _canTrade;\n    event TradingEnabled();\n    /// @notice Emitted when the tax handler contract is changed.\n    event TaxHandlerChanged(address oldAddress, address newAddress);\n\n    constructor(address initialOwner, address taxHandlerAddress)\n        ERC20(\"AraraCoin\", \"ARA\")\n        ERC20Permit(\"AraraCoin\")\n        Ownable(initialOwner)\n    {\n        taxHandler = ITaxHandler(taxHandlerAddress);\n        _canTrade[address(0)] = true;\n        _canTrade[initialOwner] = true;\n        _mint(msg.sender, TOTAL_SUPPLY);\n       \n        _transfer(msg.sender, thirdPartyServices, TOTAL_SUPPLY * 5 / 100); // 5.0% \n        _transfer(msg.sender, preSale,  TOTAL_SUPPLY * 10 / 100); // 10.0%\n        _transfer(msg.sender, initialLaunch,  TOTAL_SUPPLY * 20 / 100); // 20.0%\n        _transfer(msg.sender, investors,  TOTAL_SUPPLY * 25 / 100); // 25.0%\n        _transfer(msg.sender, teamAndFounders,  TOTAL_SUPPLY * 20 / 100); // 20.0%\n        _transfer(msg.sender, preservationProjects, TOTAL_SUPPLY * 20 / 100); // 20.0%\n    }\n\n    function enableTrading() external onlyOwner {\n        require(!tradingEnabled, \"AraraCoin trading already enabled\");\n        tradingEnabled = true;\n        emit TradingEnabled();\n    }\n\n    function setTaxHandler(address taxHandlerAddress) external onlyOwner {\n        address oldTaxHandlerAddress = address(taxHandler);\n        taxHandler = ITaxHandler(taxHandlerAddress);\n\n        emit TaxHandlerChanged(oldTaxHandlerAddress, taxHandlerAddress);\n    }\n\n    function setCanTrade(\n        address[] calldata pairs,\n        bool[] calldata status\n    ) external onlyOwner {\n        require(!tradingEnabled, \"TGC: trading already enabled\");\n        require(pairs.length == status.length, \"TGC: invalid parameters\");\n        for (uint256 i = 0; i < pairs.length; i++) {\n            _canTrade[pairs[i]] = status[i];\n        }\n    }\n\n    function _update(address from, address to, uint256 value) \n        internal virtual override(ERC20)\n    {\n        if (!tradingEnabled) {\n            require(_canTrade[from], \"AraraCoin trade is disabled\");\n        }\n        super._update(from, to, value);\n    }\n\n    function addressToString(address _addr) public pure returns (string memory) {\n        bytes32 value = bytes32(uint256(uint160(_addr)));\n        bytes memory alphabet = \"0123456789abcdef\";\n\n        bytes memory str = new bytes(42);\n        str[0] = '0';\n        str[1] = 'x';\n        for (uint256 i = 0; i < 20; i++) {\n            str[2 + i * 2] = alphabet[uint8(value[i + 12] >> 4)];\n            str[3 + i * 2] = alphabet[uint8(value[i + 12] & 0x0f)];\n        }\n        return string(str);\n    }\n\n    function concatenateAddressWithString(address _addr, string memory _str) public pure returns (string memory) {\n        string memory addrStr = addressToString(_addr);\n        return string(abi.encodePacked(addrStr, _str));\n    }\n}\n\n// uint256 thirdPartyServices = TOTAL_SUPPLY * 5 / 100;\n// uint256 preSale = TOTAL_SUPPLY * 10 / 100;\n// uint256 initialLaunch = TOTAL_SUPPLY * 20 / 100;\n// uint256 investors = TOTAL_SUPPLY * 25 / 100;\n// uint256 teamAndFounders = TOTAL_SUPPLY * 20 / 100;\n// uint256 preservationProjects = TOTAL_SUPPLY * 20 / 100;"},"contracts/tax/ITaxHandler.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\n/**\n * @title Tax handler interface\n * @dev Any class that implements this interface can be used for protocol-specific tax calculations.\n */\ninterface ITaxHandler {\n    /**\n     * @notice Get number of tokens to pay as tax.\n     * @param benefactor Address of the benefactor.\n     * @param beneficiary Address of the beneficiary.\n     * @param amount Number of tokens in the transfer.\n     * @return Number of tokens to pay as tax.\n     */\n    function getTax(\n        address benefactor,\n        address beneficiary,\n        uint256 amount\n    ) external view returns (uint256);\n}"},"contracts/tax/StaticTaxHandler.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\nimport \"./ITaxHandler.sol\";\n\n/**\n * @title Static tax handler contract\n * @dev This contract allows protocols to collect tax on transactions that count as either sells or liquidity additions\n * to exchange pools. Addresses can be exempted from tax collection, and addresses designated as exchange pools can be\n * added and removed by the owner of this contract. The owner of the contract should be set to a DAO-controlled timelock\n * or at the very least a multisig wallet.\n */\ncontract StaticTaxHandler is ITaxHandler, Ownable {\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    /// @dev The set of addresses exempt from tax.\n    EnumerableSet.AddressSet private _exempted;\n\n    /// @notice How much tax to collect in basis points. 10,000 basis points is 100%.\n    uint256 public taxPercentage;\n\n    /// @notice Emitted when the tax basis points number is updated.\n    event TaxPercentageUpdated(uint256 oldTaxPercentage, uint256 newTaxPercentage);\n\n    /// @notice Emitted when an address is added to or removed from the exempted addresses set.\n    event TaxExemptionUpdated(address indexed wallet, bool exempted);\n\n    /**\n     * @param initialTaxPercentage The number of tax percentage to start out with for tax calculations.\n     */\n    constructor(address initialOwner, uint256 initialTaxPercentage)\n      Ownable(initialOwner)\n    {\n        taxPercentage = initialTaxPercentage;\n    }\n\n    function getTax(\n        address benefactor,\n        address beneficiary,\n        uint256 amount\n    ) external view override returns (uint256) {\n        if (_exempted.contains(benefactor) || _exempted.contains(beneficiary)) {\n            return 0;\n        }\n\n        return amount * taxPercentage / 100;\n    }\n\n    /**\n     * @notice Set new number for tax basis points. This number can only ever be lowered.\n     * @param newTaxPercentage New tax basis points number to set for calculations.\n     */\n    function setTaxPercentage(uint256 newTaxPercentage) external onlyOwner {\n        require(\n            newTaxPercentage < 0,\n            \"Invalid Value.\"\n        );\n\n        uint256 oldTaxPercentage = taxPercentage;\n        taxPercentage = newTaxPercentage;\n\n        emit TaxPercentageUpdated(oldTaxPercentage, newTaxPercentage);\n    }\n\n    /**\n     * @notice Add address to set of tax-exempted addresses.\n     * @param exemption Address to add to set of tax-exempted addresses.\n     */\n    function addExemption(address exemption) external onlyOwner {\n        if (_exempted.add(exemption)) {\n            emit TaxExemptionUpdated(exemption, true);\n        }\n    }\n\n    /**\n     * @notice Remove address from set of tax-exempted addresses.\n     * @param exemption Address to remove from set of tax-exempted addresses.\n     */\n    function removeExemption(address exemption) external onlyOwner {\n        if (_exempted.remove(exemption)) {\n            emit TaxExemptionUpdated(exemption, false);\n        }\n    }\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1148],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":1149,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1148,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,1148],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[172]},"id":173,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":172,"linearizedBaseContracts":[172],"name":"IERC5267","nameLocation":"143:8:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"158:84:1","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":152,"name":"EIP712DomainChanged","nameLocation":"253:19:1","nodeType":"EventDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[],"src":"272:2:1"},"src":"247:28:1"},{"documentation":{"id":153,"nodeType":"StructuredDocumentation","src":"281:140:1","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":171,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:1","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[],"src":"447:2:1"},"returnParameters":{"id":170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"fields","nameLocation":"517:6:1","nodeType":"VariableDeclaration","scope":171,"src":"510:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":155,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:1","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":158,"mutability":"mutable","name":"name","nameLocation":"551:4:1","nodeType":"VariableDeclaration","scope":171,"src":"537:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":157,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":160,"mutability":"mutable","name":"version","nameLocation":"583:7:1","nodeType":"VariableDeclaration","scope":171,"src":"569:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":159,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":162,"mutability":"mutable","name":"chainId","nameLocation":"612:7:1","nodeType":"VariableDeclaration","scope":171,"src":"604:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":161,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":164,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:1","nodeType":"VariableDeclaration","scope":171,"src":"633:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":166,"mutability":"mutable","name":"salt","nameLocation":"680:4:1","nodeType":"VariableDeclaration","scope":171,"src":"672:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":169,"mutability":"mutable","name":"extensions","nameLocation":"715:10:1","nodeType":"VariableDeclaration","scope":171,"src":"698:27:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":167,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":168,"nodeType":"ArrayTypeName","src":"698:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:1"},"scope":172,"src":"426:310:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":173,"src":"133:605:1","usedErrors":[],"usedEvents":[152]}],"src":"107:632:1"},"id":1},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[309],"IERC20Errors":[214],"IERC721Errors":[262]},"id":310,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":174,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":175,"nodeType":"StructuredDocumentation","src":"138:139:2","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":214,"linearizedBaseContracts":[214],"name":"IERC20Errors","nameLocation":"288:12:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":176,"nodeType":"StructuredDocumentation","src":"307:309:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":184,"name":"ERC20InsufficientBalance","nameLocation":"627:24:2","nodeType":"ErrorDefinition","parameters":{"id":183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"sender","nameLocation":"660:6:2","nodeType":"VariableDeclaration","scope":184,"src":"652:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":177,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":180,"mutability":"mutable","name":"balance","nameLocation":"676:7:2","nodeType":"VariableDeclaration","scope":184,"src":"668:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":179,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":182,"mutability":"mutable","name":"needed","nameLocation":"693:6:2","nodeType":"VariableDeclaration","scope":184,"src":"685:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":181,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:2"},"src":"621:80:2"},{"documentation":{"id":185,"nodeType":"StructuredDocumentation","src":"707:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":189,"name":"ERC20InvalidSender","nameLocation":"870:18:2","nodeType":"ErrorDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"mutability":"mutable","name":"sender","nameLocation":"897:6:2","nodeType":"VariableDeclaration","scope":189,"src":"889:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":186,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:2"},"src":"864:41:2"},{"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"911:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":194,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:2","nodeType":"ErrorDefinition","parameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:2","nodeType":"VariableDeclaration","scope":194,"src":"1102:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":191,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:2"},"src":"1075:45:2"},{"documentation":{"id":195,"nodeType":"StructuredDocumentation","src":"1126:345:2","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":203,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:2","nodeType":"ErrorDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":197,"mutability":"mutable","name":"spender","nameLocation":"1517:7:2","nodeType":"VariableDeclaration","scope":203,"src":"1509:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:2","nodeType":"VariableDeclaration","scope":203,"src":"1526:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":198,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"needed","nameLocation":"1553:6:2","nodeType":"VariableDeclaration","scope":203,"src":"1545:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":200,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:2"},"src":"1476:85:2"},{"documentation":{"id":204,"nodeType":"StructuredDocumentation","src":"1567:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":208,"name":"ERC20InvalidApprover","nameLocation":"1752:20:2","nodeType":"ErrorDefinition","parameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":206,"mutability":"mutable","name":"approver","nameLocation":"1781:8:2","nodeType":"VariableDeclaration","scope":208,"src":"1773:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":205,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:2"},"src":"1746:45:2"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"1797:195:2","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":213,"name":"ERC20InvalidSpender","nameLocation":"2003:19:2","nodeType":"ErrorDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":211,"mutability":"mutable","name":"spender","nameLocation":"2031:7:2","nodeType":"VariableDeclaration","scope":213,"src":"2023:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":210,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:2"},"src":"1997:43:2"}],"scope":310,"src":"278:1764:2","usedErrors":[184,189,194,203,208,213],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"2044:141:2","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":262,"linearizedBaseContracts":[262],"name":"IERC721Errors","nameLocation":"2196:13:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":216,"nodeType":"StructuredDocumentation","src":"2216:219:2","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":220,"name":"ERC721InvalidOwner","nameLocation":"2446:18:2","nodeType":"ErrorDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":218,"mutability":"mutable","name":"owner","nameLocation":"2473:5:2","nodeType":"VariableDeclaration","scope":220,"src":"2465:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":217,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:2"},"src":"2440:40:2"},{"documentation":{"id":221,"nodeType":"StructuredDocumentation","src":"2486:132:2","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":225,"name":"ERC721NonexistentToken","nameLocation":"2629:22:2","nodeType":"ErrorDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:2","nodeType":"VariableDeclaration","scope":225,"src":"2652:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":222,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:2"},"src":"2623:46:2"},{"documentation":{"id":226,"nodeType":"StructuredDocumentation","src":"2675:289:2","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":234,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:2","nodeType":"ErrorDefinition","parameters":{"id":233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":228,"mutability":"mutable","name":"sender","nameLocation":"3004:6:2","nodeType":"VariableDeclaration","scope":234,"src":"2996:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":227,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":230,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:2","nodeType":"VariableDeclaration","scope":234,"src":"3012:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":232,"mutability":"mutable","name":"owner","nameLocation":"3037:5:2","nodeType":"VariableDeclaration","scope":234,"src":"3029:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":231,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:2"},"src":"2969:75:2"},{"documentation":{"id":235,"nodeType":"StructuredDocumentation","src":"3050:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":239,"name":"ERC721InvalidSender","nameLocation":"3213:19:2","nodeType":"ErrorDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"sender","nameLocation":"3241:6:2","nodeType":"VariableDeclaration","scope":239,"src":"3233:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":236,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:2"},"src":"3207:42:2"},{"documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"3255:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":244,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:2","nodeType":"ErrorDefinition","parameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":242,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:2","nodeType":"VariableDeclaration","scope":244,"src":"3447:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":241,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:2"},"src":"3419:46:2"},{"documentation":{"id":245,"nodeType":"StructuredDocumentation","src":"3471:247:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":251,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:2","nodeType":"ErrorDefinition","parameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":247,"mutability":"mutable","name":"operator","nameLocation":"3764:8:2","nodeType":"VariableDeclaration","scope":251,"src":"3756:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":246,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":249,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:2","nodeType":"VariableDeclaration","scope":251,"src":"3774:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":248,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:2"},"src":"3723:68:2"},{"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"3797:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":256,"name":"ERC721InvalidApprover","nameLocation":"3982:21:2","nodeType":"ErrorDefinition","parameters":{"id":255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"approver","nameLocation":"4012:8:2","nodeType":"VariableDeclaration","scope":256,"src":"4004:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:2"},"src":"3976:46:2"},{"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"4028:197:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":261,"name":"ERC721InvalidOperator","nameLocation":"4236:21:2","nodeType":"ErrorDefinition","parameters":{"id":260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"operator","nameLocation":"4266:8:2","nodeType":"VariableDeclaration","scope":261,"src":"4258:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":258,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:2"},"src":"4230:46:2"}],"scope":310,"src":"2186:2092:2","usedErrors":[220,225,234,239,244,251,256,261],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":263,"nodeType":"StructuredDocumentation","src":"4280:143:2","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":309,"linearizedBaseContracts":[309],"name":"IERC1155Errors","nameLocation":"4434:14:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":264,"nodeType":"StructuredDocumentation","src":"4455:361:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":274,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:2","nodeType":"ErrorDefinition","parameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":266,"mutability":"mutable","name":"sender","nameLocation":"4862:6:2","nodeType":"VariableDeclaration","scope":274,"src":"4854:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":268,"mutability":"mutable","name":"balance","nameLocation":"4878:7:2","nodeType":"VariableDeclaration","scope":274,"src":"4870:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":267,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":270,"mutability":"mutable","name":"needed","nameLocation":"4895:6:2","nodeType":"VariableDeclaration","scope":274,"src":"4887:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":269,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":272,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:2","nodeType":"VariableDeclaration","scope":274,"src":"4903:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":271,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:2"},"src":"4821:99:2"},{"documentation":{"id":275,"nodeType":"StructuredDocumentation","src":"4926:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":279,"name":"ERC1155InvalidSender","nameLocation":"5089:20:2","nodeType":"ErrorDefinition","parameters":{"id":278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":277,"mutability":"mutable","name":"sender","nameLocation":"5118:6:2","nodeType":"VariableDeclaration","scope":279,"src":"5110:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":276,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:2"},"src":"5083:43:2"},{"documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"5132:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":284,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:2","nodeType":"ErrorDefinition","parameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:2","nodeType":"VariableDeclaration","scope":284,"src":"5325:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:2"},"src":"5296:47:2"},{"documentation":{"id":285,"nodeType":"StructuredDocumentation","src":"5349:256:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":291,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:2","nodeType":"ErrorDefinition","parameters":{"id":290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":287,"mutability":"mutable","name":"operator","nameLocation":"5653:8:2","nodeType":"VariableDeclaration","scope":291,"src":"5645:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":286,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":289,"mutability":"mutable","name":"owner","nameLocation":"5671:5:2","nodeType":"VariableDeclaration","scope":291,"src":"5663:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:2"},"src":"5610:68:2"},{"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"5684:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":296,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:2","nodeType":"ErrorDefinition","parameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"approver","nameLocation":"5900:8:2","nodeType":"VariableDeclaration","scope":296,"src":"5892:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:2"},"src":"5863:47:2"},{"documentation":{"id":297,"nodeType":"StructuredDocumentation","src":"5916:197:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":301,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:2","nodeType":"ErrorDefinition","parameters":{"id":300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":299,"mutability":"mutable","name":"operator","nameLocation":"6155:8:2","nodeType":"VariableDeclaration","scope":301,"src":"6147:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":298,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:2"},"src":"6118:47:2"},{"documentation":{"id":302,"nodeType":"StructuredDocumentation","src":"6171:280:2","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":308,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:2","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":304,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:2","nodeType":"VariableDeclaration","scope":308,"src":"6488:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":303,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":306,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:2","nodeType":"VariableDeclaration","scope":308,"src":"6507:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":305,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:2"},"src":"6456:73:2"}],"scope":310,"src":"4424:2107:2","usedErrors":[274,279,284,291,296,301,308],"usedEvents":[]}],"src":"112:6420:2"},"id":2},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1148],"ERC20":[824],"IERC20":[902],"IERC20Errors":[214],"IERC20Metadata":[1082]},"id":825,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":311,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":313,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":825,"sourceUnit":903,"src":"131:36:3","symbolAliases":[{"foreign":{"id":312,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"139:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":315,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":825,"sourceUnit":1083,"src":"168:63:3","symbolAliases":[{"foreign":{"id":314,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"176:14:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":317,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":825,"sourceUnit":1149,"src":"232:48:3","symbolAliases":[{"foreign":{"id":316,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"240:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":319,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":825,"sourceUnit":310,"src":"281:65:3","symbolAliases":[{"foreign":{"id":318,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"289:12:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":321,"name":"Context","nameLocations":["1428:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":1148,"src":"1428:7:3"},"id":322,"nodeType":"InheritanceSpecifier","src":"1428:7:3"},{"baseName":{"id":323,"name":"IERC20","nameLocations":["1437:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":902,"src":"1437:6:3"},"id":324,"nodeType":"InheritanceSpecifier","src":"1437:6:3"},{"baseName":{"id":325,"name":"IERC20Metadata","nameLocations":["1445:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":1082,"src":"1445:14:3"},"id":326,"nodeType":"InheritanceSpecifier","src":"1445:14:3"},{"baseName":{"id":327,"name":"IERC20Errors","nameLocations":["1461:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":214,"src":"1461:12:3"},"id":328,"nodeType":"InheritanceSpecifier","src":"1461:12:3"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"348:1052:3","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":824,"linearizedBaseContracts":[824,214,1082,902,1148],"name":"ERC20","nameLocation":"1419:5:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":332,"mutability":"mutable","name":"_balances","nameLocation":"1524:9:3","nodeType":"VariableDeclaration","scope":824,"src":"1480:53:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":331,"keyName":"account","keyNameLocation":"1496:7:3","keyType":{"id":329,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1480:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":330,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":338,"mutability":"mutable","name":"_allowances","nameLocation":"1612:11:3","nodeType":"VariableDeclaration","scope":824,"src":"1540:83:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":337,"keyName":"account","keyNameLocation":"1556:7:3","keyType":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1540:63:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":336,"keyName":"spender","keyNameLocation":"1583:7:3","keyType":{"id":334,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1567:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":335,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":340,"mutability":"mutable","name":"_totalSupply","nameLocation":"1646:12:3","nodeType":"VariableDeclaration","scope":824,"src":"1630:28:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":339,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":342,"mutability":"mutable","name":"_name","nameLocation":"1680:5:3","nodeType":"VariableDeclaration","scope":824,"src":"1665:20:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":341,"name":"string","nodeType":"ElementaryTypeName","src":"1665:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":344,"mutability":"mutable","name":"_symbol","nameLocation":"1706:7:3","nodeType":"VariableDeclaration","scope":824,"src":"1691:22:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":343,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":360,"nodeType":"Block","src":"1952:57:3","statements":[{"expression":{"id":354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":352,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"1962:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":353,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"1970:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1962:13:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":355,"nodeType":"ExpressionStatement","src":"1962:13:3"},{"expression":{"id":358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":356,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"1985:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":357,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"1995:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1985:17:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":359,"nodeType":"ExpressionStatement","src":"1985:17:3"}]},"documentation":{"id":345,"nodeType":"StructuredDocumentation","src":"1720:171:3","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":361,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":347,"mutability":"mutable","name":"name_","nameLocation":"1922:5:3","nodeType":"VariableDeclaration","scope":361,"src":"1908:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":346,"name":"string","nodeType":"ElementaryTypeName","src":"1908:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":349,"mutability":"mutable","name":"symbol_","nameLocation":"1943:7:3","nodeType":"VariableDeclaration","scope":361,"src":"1929:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":348,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1907:44:3"},"returnParameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"1952:0:3"},"scope":824,"src":"1896:113:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1069],"body":{"id":369,"nodeType":"Block","src":"2134:29:3","statements":[{"expression":{"id":367,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"2151:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":366,"id":368,"nodeType":"Return","src":"2144:12:3"}]},"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"2015:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":370,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2083:4:3","nodeType":"FunctionDefinition","parameters":{"id":363,"nodeType":"ParameterList","parameters":[],"src":"2087:2:3"},"returnParameters":{"id":366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":370,"src":"2119:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":364,"name":"string","nodeType":"ElementaryTypeName","src":"2119:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2118:15:3"},"scope":824,"src":"2074:89:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1075],"body":{"id":378,"nodeType":"Block","src":"2338:31:3","statements":[{"expression":{"id":376,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"2355:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":375,"id":377,"nodeType":"Return","src":"2348:14:3"}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"2169:102:3","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":379,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2285:6:3","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"2291:2:3"},"returnParameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":379,"src":"2323:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":373,"name":"string","nodeType":"ElementaryTypeName","src":"2323:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2322:15:3"},"scope":824,"src":"2276:93:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1081],"body":{"id":387,"nodeType":"Block","src":"3058:26:3","statements":[{"expression":{"hexValue":"3138","id":385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3075:2:3","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":384,"id":386,"nodeType":"Return","src":"3068:9:3"}]},"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"2375:622:3","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":388,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3011:8:3","nodeType":"FunctionDefinition","parameters":{"id":381,"nodeType":"ParameterList","parameters":[],"src":"3019:2:3"},"returnParameters":{"id":384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":388,"src":"3051:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":382,"name":"uint8","nodeType":"ElementaryTypeName","src":"3051:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3050:7:3"},"scope":824,"src":"3002:82:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[851],"body":{"id":396,"nodeType":"Block","src":"3205:36:3","statements":[{"expression":{"id":394,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"3222:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":393,"id":395,"nodeType":"Return","src":"3215:19:3"}]},"documentation":{"id":389,"nodeType":"StructuredDocumentation","src":"3090:49:3","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":397,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3153:11:3","nodeType":"FunctionDefinition","parameters":{"id":390,"nodeType":"ParameterList","parameters":[],"src":"3164:2:3"},"returnParameters":{"id":393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":397,"src":"3196:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":391,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3195:9:3"},"scope":824,"src":"3144:97:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[859],"body":{"id":409,"nodeType":"Block","src":"3373:42:3","statements":[{"expression":{"baseExpression":{"id":405,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"3390:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":407,"indexExpression":{"id":406,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"3400:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3390:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":404,"id":408,"nodeType":"Return","src":"3383:25:3"}]},"documentation":{"id":398,"nodeType":"StructuredDocumentation","src":"3247:47:3","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":410,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3308:9:3","nodeType":"FunctionDefinition","parameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"mutability":"mutable","name":"account","nameLocation":"3326:7:3","nodeType":"VariableDeclaration","scope":410,"src":"3318:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"3318:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3317:17:3"},"returnParameters":{"id":404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":403,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":410,"src":"3364:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":402,"name":"uint256","nodeType":"ElementaryTypeName","src":"3364:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3363:9:3"},"scope":824,"src":"3299:116:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[869],"body":{"id":433,"nodeType":"Block","src":"3685:103:3","statements":[{"assignments":[421],"declarations":[{"constant":false,"id":421,"mutability":"mutable","name":"owner","nameLocation":"3703:5:3","nodeType":"VariableDeclaration","scope":433,"src":"3695:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":420,"name":"address","nodeType":"ElementaryTypeName","src":"3695:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":424,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":422,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"3711:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3695:28:3"},{"expression":{"arguments":[{"id":426,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"3743:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":427,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"3750:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"3754:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":425,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"3733:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":430,"nodeType":"ExpressionStatement","src":"3733:27:3"},{"expression":{"hexValue":"74727565","id":431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3777:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":419,"id":432,"nodeType":"Return","src":"3770:11:3"}]},"documentation":{"id":411,"nodeType":"StructuredDocumentation","src":"3421:184:3","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":434,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3619:8:3","nodeType":"FunctionDefinition","parameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":413,"mutability":"mutable","name":"to","nameLocation":"3636:2:3","nodeType":"VariableDeclaration","scope":434,"src":"3628:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":412,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":415,"mutability":"mutable","name":"value","nameLocation":"3648:5:3","nodeType":"VariableDeclaration","scope":434,"src":"3640:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":414,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3627:27:3"},"returnParameters":{"id":419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":434,"src":"3679:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":417,"name":"bool","nodeType":"ElementaryTypeName","src":"3679:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3678:6:3"},"scope":824,"src":"3610:178:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[879],"body":{"id":450,"nodeType":"Block","src":"3935:51:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":444,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"3952:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":446,"indexExpression":{"id":445,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"3964:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":448,"indexExpression":{"id":447,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"3971:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":443,"id":449,"nodeType":"Return","src":"3945:34:3"}]},"documentation":{"id":435,"nodeType":"StructuredDocumentation","src":"3794:47:3","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":451,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3855:9:3","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":437,"mutability":"mutable","name":"owner","nameLocation":"3873:5:3","nodeType":"VariableDeclaration","scope":451,"src":"3865:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"3865:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":439,"mutability":"mutable","name":"spender","nameLocation":"3888:7:3","nodeType":"VariableDeclaration","scope":451,"src":"3880:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":438,"name":"address","nodeType":"ElementaryTypeName","src":"3880:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3864:32:3"},"returnParameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":451,"src":"3926:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":441,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3925:9:3"},"scope":824,"src":"3846:140:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[889],"body":{"id":474,"nodeType":"Block","src":"4372:107:3","statements":[{"assignments":[462],"declarations":[{"constant":false,"id":462,"mutability":"mutable","name":"owner","nameLocation":"4390:5:3","nodeType":"VariableDeclaration","scope":474,"src":"4382:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":461,"name":"address","nodeType":"ElementaryTypeName","src":"4382:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":465,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":463,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"4398:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4398:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4382:28:3"},{"expression":{"arguments":[{"id":467,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"4429:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":468,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"4436:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"4445:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":466,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[715,775],"referencedDeclaration":715,"src":"4420:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":471,"nodeType":"ExpressionStatement","src":"4420:31:3"},{"expression":{"hexValue":"74727565","id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4468:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":460,"id":473,"nodeType":"Return","src":"4461:11:3"}]},"documentation":{"id":452,"nodeType":"StructuredDocumentation","src":"3992:296:3","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":475,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4302:7:3","nodeType":"FunctionDefinition","parameters":{"id":457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":454,"mutability":"mutable","name":"spender","nameLocation":"4318:7:3","nodeType":"VariableDeclaration","scope":475,"src":"4310:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":453,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":456,"mutability":"mutable","name":"value","nameLocation":"4335:5:3","nodeType":"VariableDeclaration","scope":475,"src":"4327:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":455,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4309:32:3"},"returnParameters":{"id":460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":475,"src":"4366:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":458,"name":"bool","nodeType":"ElementaryTypeName","src":"4366:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:6:3"},"scope":824,"src":"4293:186:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[901],"body":{"id":506,"nodeType":"Block","src":"5132:151:3","statements":[{"assignments":[488],"declarations":[{"constant":false,"id":488,"mutability":"mutable","name":"spender","nameLocation":"5150:7:3","nodeType":"VariableDeclaration","scope":506,"src":"5142:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"5142:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":491,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":489,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"5160:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5142:30:3"},{"expression":{"arguments":[{"id":493,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"5198:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":494,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"5204:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"5213:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":492,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"5182:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":497,"nodeType":"ExpressionStatement","src":"5182:37:3"},{"expression":{"arguments":[{"id":499,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"5239:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":500,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"5245:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"5249:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":498,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"5229:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"ExpressionStatement","src":"5229:26:3"},{"expression":{"hexValue":"74727565","id":504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5272:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":486,"id":505,"nodeType":"Return","src":"5265:11:3"}]},"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"4485:549:3","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":507,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5048:12:3","nodeType":"FunctionDefinition","parameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"from","nameLocation":"5069:4:3","nodeType":"VariableDeclaration","scope":507,"src":"5061:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":477,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":480,"mutability":"mutable","name":"to","nameLocation":"5083:2:3","nodeType":"VariableDeclaration","scope":507,"src":"5075:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"5075:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":482,"mutability":"mutable","name":"value","nameLocation":"5095:5:3","nodeType":"VariableDeclaration","scope":507,"src":"5087:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":481,"name":"uint256","nodeType":"ElementaryTypeName","src":"5087:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5060:41:3"},"returnParameters":{"id":486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":507,"src":"5126:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":484,"name":"bool","nodeType":"ElementaryTypeName","src":"5126:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5125:6:3"},"scope":824,"src":"5039:244:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":553,"nodeType":"Block","src":"5725:231:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":517,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"5739:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5755:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5747:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":518,"name":"address","nodeType":"ElementaryTypeName","src":"5747:7:3","typeDescriptions":{}}},"id":521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5739:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":531,"nodeType":"IfStatement","src":"5735:86:3","trueBody":{"id":530,"nodeType":"Block","src":"5759:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5807:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"5799:7:3","typeDescriptions":{}}},"id":527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":523,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"5780:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5780:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":529,"nodeType":"RevertStatement","src":"5773:37:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":532,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"5834:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5848:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5840:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":533,"name":"address","nodeType":"ElementaryTypeName","src":"5840:7:3","typeDescriptions":{}}},"id":536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5834:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":546,"nodeType":"IfStatement","src":"5830:86:3","trueBody":{"id":545,"nodeType":"Block","src":"5852:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5894:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":539,"name":"address","nodeType":"ElementaryTypeName","src":"5894:7:3","typeDescriptions":{}}},"id":542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5894:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":538,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5873:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":544,"nodeType":"RevertStatement","src":"5866:39:3"}]}},{"expression":{"arguments":[{"id":548,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"5933:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":549,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"5939:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"5943:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":547,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5925:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5925:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":552,"nodeType":"ExpressionStatement","src":"5925:24:3"}]},"documentation":{"id":508,"nodeType":"StructuredDocumentation","src":"5289:362:3","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":554,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5665:9:3","nodeType":"FunctionDefinition","parameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"from","nameLocation":"5683:4:3","nodeType":"VariableDeclaration","scope":554,"src":"5675:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":509,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":512,"mutability":"mutable","name":"to","nameLocation":"5697:2:3","nodeType":"VariableDeclaration","scope":554,"src":"5689:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":511,"name":"address","nodeType":"ElementaryTypeName","src":"5689:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":514,"mutability":"mutable","name":"value","nameLocation":"5709:5:3","nodeType":"VariableDeclaration","scope":554,"src":"5701:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":513,"name":"uint256","nodeType":"ElementaryTypeName","src":"5701:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:41:3"},"returnParameters":{"id":516,"nodeType":"ParameterList","parameters":[],"src":"5725:0:3"},"scope":824,"src":"5656:300:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":630,"nodeType":"Block","src":"6346:1032:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":564,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6360:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6376:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6368:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"6368:7:3","typeDescriptions":{}}},"id":568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6368:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6360:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":601,"nodeType":"Block","src":"6534:362:3","statements":[{"assignments":[576],"declarations":[{"constant":false,"id":576,"mutability":"mutable","name":"fromBalance","nameLocation":"6556:11:3","nodeType":"VariableDeclaration","scope":601,"src":"6548:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":575,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":580,"initialValue":{"baseExpression":{"id":577,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"6570:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":579,"indexExpression":{"id":578,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6580:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6570:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6548:37:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":581,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"6603:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6617:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6603:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":591,"nodeType":"IfStatement","src":"6599:115:3","trueBody":{"id":590,"nodeType":"Block","src":"6624:90:3","statements":[{"errorCall":{"arguments":[{"id":585,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6674:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":586,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"6680:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6693:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":584,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"6649:24:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":589,"nodeType":"RevertStatement","src":"6642:57:3"}]}},{"id":600,"nodeType":"UncheckedBlock","src":"6727:159:3","statements":[{"expression":{"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":592,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"6834:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":594,"indexExpression":{"id":593,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6844:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6834:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":595,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"6852:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6866:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6852:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6834:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":599,"nodeType":"ExpressionStatement","src":"6834:37:3"}]}]},"id":602,"nodeType":"IfStatement","src":"6356:540:3","trueBody":{"id":574,"nodeType":"Block","src":"6380:148:3","statements":[{"expression":{"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":570,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"6496:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6512:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6496:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":573,"nodeType":"ExpressionStatement","src":"6496:21:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":603,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"6910:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6924:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:3","typeDescriptions":{}}},"id":607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6910:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":622,"nodeType":"Block","src":"7125:206:3","statements":[{"id":621,"nodeType":"UncheckedBlock","src":"7139:182:3","statements":[{"expression":{"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":615,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"7284:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":617,"indexExpression":{"id":616,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"7294:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7284:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"7301:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":620,"nodeType":"ExpressionStatement","src":"7284:22:3"}]}]},"id":623,"nodeType":"IfStatement","src":"6906:425:3","trueBody":{"id":614,"nodeType":"Block","src":"6928:191:3","statements":[{"id":613,"nodeType":"UncheckedBlock","src":"6942:167:3","statements":[{"expression":{"id":611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":609,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"7073:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"7089:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7073:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":612,"nodeType":"ExpressionStatement","src":"7073:21:3"}]}]}},{"eventCall":{"arguments":[{"id":625,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"7355:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":626,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"7361:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"7365:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":624,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"7346:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7346:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":629,"nodeType":"EmitStatement","src":"7341:30:3"}]},"documentation":{"id":555,"nodeType":"StructuredDocumentation","src":"5962:304:3","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":631,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6280:7:3","nodeType":"FunctionDefinition","parameters":{"id":562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":557,"mutability":"mutable","name":"from","nameLocation":"6296:4:3","nodeType":"VariableDeclaration","scope":631,"src":"6288:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":556,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":559,"mutability":"mutable","name":"to","nameLocation":"6310:2:3","nodeType":"VariableDeclaration","scope":631,"src":"6302:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":558,"name":"address","nodeType":"ElementaryTypeName","src":"6302:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":561,"mutability":"mutable","name":"value","nameLocation":"6322:5:3","nodeType":"VariableDeclaration","scope":631,"src":"6314:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":560,"name":"uint256","nodeType":"ElementaryTypeName","src":"6314:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6287:41:3"},"returnParameters":{"id":563,"nodeType":"ParameterList","parameters":[],"src":"6346:0:3"},"scope":824,"src":"6271:1107:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":663,"nodeType":"Block","src":"7777:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":639,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"7791:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7810:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7802:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":640,"name":"address","nodeType":"ElementaryTypeName","src":"7802:7:3","typeDescriptions":{}}},"id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7802:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7791:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":653,"nodeType":"IfStatement","src":"7787:91:3","trueBody":{"id":652,"nodeType":"Block","src":"7814:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7864:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7856:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":646,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:3","typeDescriptions":{}}},"id":649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7856:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":645,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"7835:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7835:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":651,"nodeType":"RevertStatement","src":"7828:39:3"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7903:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7895:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"7895:7:3","typeDescriptions":{}}},"id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7895:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":659,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"7907:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"7916:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":654,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"7887:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7887:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":662,"nodeType":"ExpressionStatement","src":"7887:35:3"}]},"documentation":{"id":632,"nodeType":"StructuredDocumentation","src":"7384:332:3","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":664,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7730:5:3","nodeType":"FunctionDefinition","parameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":634,"mutability":"mutable","name":"account","nameLocation":"7744:7:3","nodeType":"VariableDeclaration","scope":664,"src":"7736:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":633,"name":"address","nodeType":"ElementaryTypeName","src":"7736:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":636,"mutability":"mutable","name":"value","nameLocation":"7761:5:3","nodeType":"VariableDeclaration","scope":664,"src":"7753:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":635,"name":"uint256","nodeType":"ElementaryTypeName","src":"7753:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7735:32:3"},"returnParameters":{"id":638,"nodeType":"ParameterList","parameters":[],"src":"7777:0:3"},"scope":824,"src":"7721:208:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":696,"nodeType":"Block","src":"8303:150:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":672,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"8317:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8336:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":673,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:3","typeDescriptions":{}}},"id":676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8317:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":686,"nodeType":"IfStatement","src":"8313:89:3","trueBody":{"id":685,"nodeType":"Block","src":"8340:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8388:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8380:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":679,"name":"address","nodeType":"ElementaryTypeName","src":"8380:7:3","typeDescriptions":{}}},"id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8380:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":678,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"8361:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":684,"nodeType":"RevertStatement","src":"8354:37:3"}]}},{"expression":{"arguments":[{"id":688,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"8419:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8436:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8428:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":689,"name":"address","nodeType":"ElementaryTypeName","src":"8428:7:3","typeDescriptions":{}}},"id":692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8428:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"8440:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":687,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"8411:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":695,"nodeType":"ExpressionStatement","src":"8411:35:3"}]},"documentation":{"id":665,"nodeType":"StructuredDocumentation","src":"7935:307:3","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":697,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8256:5:3","nodeType":"FunctionDefinition","parameters":{"id":670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":667,"mutability":"mutable","name":"account","nameLocation":"8270:7:3","nodeType":"VariableDeclaration","scope":697,"src":"8262:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":666,"name":"address","nodeType":"ElementaryTypeName","src":"8262:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":669,"mutability":"mutable","name":"value","nameLocation":"8287:5:3","nodeType":"VariableDeclaration","scope":697,"src":"8279:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":668,"name":"uint256","nodeType":"ElementaryTypeName","src":"8279:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8261:32:3"},"returnParameters":{"id":671,"nodeType":"ParameterList","parameters":[],"src":"8303:0:3"},"scope":824,"src":"8247:206:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":714,"nodeType":"Block","src":"9063:54:3","statements":[{"expression":{"arguments":[{"id":708,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"9082:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":709,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"9089:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"9098:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9105:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":707,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[715,775],"referencedDeclaration":775,"src":"9073:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9073:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":713,"nodeType":"ExpressionStatement","src":"9073:37:3"}]},"documentation":{"id":698,"nodeType":"StructuredDocumentation","src":"8459:525:3","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":715,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8998:8:3","nodeType":"FunctionDefinition","parameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"mutability":"mutable","name":"owner","nameLocation":"9015:5:3","nodeType":"VariableDeclaration","scope":715,"src":"9007:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":699,"name":"address","nodeType":"ElementaryTypeName","src":"9007:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":702,"mutability":"mutable","name":"spender","nameLocation":"9030:7:3","nodeType":"VariableDeclaration","scope":715,"src":"9022:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":701,"name":"address","nodeType":"ElementaryTypeName","src":"9022:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":704,"mutability":"mutable","name":"value","nameLocation":"9047:5:3","nodeType":"VariableDeclaration","scope":715,"src":"9039:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":703,"name":"uint256","nodeType":"ElementaryTypeName","src":"9039:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9006:47:3"},"returnParameters":{"id":706,"nodeType":"ParameterList","parameters":[],"src":"9063:0:3"},"scope":824,"src":"8989:128:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":774,"nodeType":"Block","src":"10047:334:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":727,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"10061:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:3","typeDescriptions":{}}},"id":731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10061:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":741,"nodeType":"IfStatement","src":"10057:89:3","trueBody":{"id":740,"nodeType":"Block","src":"10082:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10124:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":734,"name":"address","nodeType":"ElementaryTypeName","src":"10124:7:3","typeDescriptions":{}}},"id":737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10124:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":733,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"10103:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10103:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":739,"nodeType":"RevertStatement","src":"10096:39:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":742,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"10159:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10178:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10170:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":743,"name":"address","nodeType":"ElementaryTypeName","src":"10170:7:3","typeDescriptions":{}}},"id":746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10159:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":756,"nodeType":"IfStatement","src":"10155:90:3","trueBody":{"id":755,"nodeType":"Block","src":"10182:63:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10231:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10223:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":749,"name":"address","nodeType":"ElementaryTypeName","src":"10223:7:3","typeDescriptions":{}}},"id":752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":748,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"10203:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10203:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":754,"nodeType":"RevertStatement","src":"10196:38:3"}]}},{"expression":{"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":757,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"10254:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":760,"indexExpression":{"id":758,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"10266:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10254:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":761,"indexExpression":{"id":759,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"10273:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10254:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"10284:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10254:35:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":764,"nodeType":"ExpressionStatement","src":"10254:35:3"},{"condition":{"id":765,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"10303:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":773,"nodeType":"IfStatement","src":"10299:76:3","trueBody":{"id":772,"nodeType":"Block","src":"10314:61:3","statements":[{"eventCall":{"arguments":[{"id":767,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"10342:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":768,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"10349:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"10358:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":766,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"10333:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10333:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":771,"nodeType":"EmitStatement","src":"10328:36:3"}]}}]},"documentation":{"id":716,"nodeType":"StructuredDocumentation","src":"9123:821:3","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":775,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9958:8:3","nodeType":"FunctionDefinition","parameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":718,"mutability":"mutable","name":"owner","nameLocation":"9975:5:3","nodeType":"VariableDeclaration","scope":775,"src":"9967:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":717,"name":"address","nodeType":"ElementaryTypeName","src":"9967:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":720,"mutability":"mutable","name":"spender","nameLocation":"9990:7:3","nodeType":"VariableDeclaration","scope":775,"src":"9982:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":719,"name":"address","nodeType":"ElementaryTypeName","src":"9982:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":722,"mutability":"mutable","name":"value","nameLocation":"10007:5:3","nodeType":"VariableDeclaration","scope":775,"src":"9999:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":721,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":724,"mutability":"mutable","name":"emitEvent","nameLocation":"10019:9:3","nodeType":"VariableDeclaration","scope":775,"src":"10014:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":723,"name":"bool","nodeType":"ElementaryTypeName","src":"10014:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9966:63:3"},"returnParameters":{"id":726,"nodeType":"ParameterList","parameters":[],"src":"10047:0:3"},"scope":824,"src":"9949:432:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":822,"nodeType":"Block","src":"10752:388:3","statements":[{"assignments":[786],"declarations":[{"constant":false,"id":786,"mutability":"mutable","name":"currentAllowance","nameLocation":"10770:16:3","nodeType":"VariableDeclaration","scope":822,"src":"10762:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":785,"name":"uint256","nodeType":"ElementaryTypeName","src":"10762:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":791,"initialValue":{"arguments":[{"id":788,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"10799:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":789,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"10806:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":787,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"10789:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10789:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10762:52:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":792,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"10828:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10853:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":794,"name":"uint256","nodeType":"ElementaryTypeName","src":"10853:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":793,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10848:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10862:3:3","memberName":"max","nodeType":"MemberAccess","src":"10848:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":821,"nodeType":"IfStatement","src":"10824:310:3","trueBody":{"id":820,"nodeType":"Block","src":"10867:267:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":799,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"10885:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"10904:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10885:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":809,"nodeType":"IfStatement","src":"10881:130:3","trueBody":{"id":808,"nodeType":"Block","src":"10911:100:3","statements":[{"errorCall":{"arguments":[{"id":803,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"10963:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":804,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"10972:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"10990:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":802,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"10936:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10936:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":807,"nodeType":"RevertStatement","src":"10929:67:3"}]}},{"id":819,"nodeType":"UncheckedBlock","src":"11024:100:3","statements":[{"expression":{"arguments":[{"id":811,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"11061:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":812,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"11068:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":813,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"11077:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"11096:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11077:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11103:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":810,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[715,775],"referencedDeclaration":775,"src":"11052:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11052:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":818,"nodeType":"ExpressionStatement","src":"11052:57:3"}]}]}}]},"documentation":{"id":776,"nodeType":"StructuredDocumentation","src":"10387:271:3","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":823,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10672:15:3","nodeType":"FunctionDefinition","parameters":{"id":783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":778,"mutability":"mutable","name":"owner","nameLocation":"10696:5:3","nodeType":"VariableDeclaration","scope":823,"src":"10688:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":777,"name":"address","nodeType":"ElementaryTypeName","src":"10688:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":780,"mutability":"mutable","name":"spender","nameLocation":"10711:7:3","nodeType":"VariableDeclaration","scope":823,"src":"10703:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"10703:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":782,"mutability":"mutable","name":"value","nameLocation":"10728:5:3","nodeType":"VariableDeclaration","scope":823,"src":"10720:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":781,"name":"uint256","nodeType":"ElementaryTypeName","src":"10720:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10687:47:3"},"returnParameters":{"id":784,"nodeType":"ParameterList","parameters":[],"src":"10752:0:3"},"scope":824,"src":"10663:477:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":825,"src":"1401:9741:3","usedErrors":[184,189,194,203,208,213],"usedEvents":[836,845]}],"src":"105:11038:3"},"id":3},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[902]},"id":903,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":826,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"132:70:4","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":902,"linearizedBaseContracts":[902],"name":"IERC20","nameLocation":"213:6:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":828,"nodeType":"StructuredDocumentation","src":"226:158:4","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":836,"name":"Transfer","nameLocation":"395:8:4","nodeType":"EventDefinition","parameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":830,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:4","nodeType":"VariableDeclaration","scope":836,"src":"404:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":829,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":832,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:4","nodeType":"VariableDeclaration","scope":836,"src":"426:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":831,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":834,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:4","nodeType":"VariableDeclaration","scope":836,"src":"446:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":833,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:4"},"src":"389:72:4"},{"anonymous":false,"documentation":{"id":837,"nodeType":"StructuredDocumentation","src":"467:148:4","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":845,"name":"Approval","nameLocation":"626:8:4","nodeType":"EventDefinition","parameters":{"id":844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":839,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:4","nodeType":"VariableDeclaration","scope":845,"src":"635:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":838,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":841,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:4","nodeType":"VariableDeclaration","scope":845,"src":"658:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":840,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":843,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:4","nodeType":"VariableDeclaration","scope":845,"src":"683:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":842,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:4"},"src":"620:78:4"},{"documentation":{"id":846,"nodeType":"StructuredDocumentation","src":"704:65:4","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":851,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:4","nodeType":"FunctionDefinition","parameters":{"id":847,"nodeType":"ParameterList","parameters":[],"src":"794:2:4"},"returnParameters":{"id":850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":851,"src":"820:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":848,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:4"},"scope":902,"src":"774:55:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":852,"nodeType":"StructuredDocumentation","src":"835:71:4","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":859,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:4","nodeType":"FunctionDefinition","parameters":{"id":855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":854,"mutability":"mutable","name":"account","nameLocation":"938:7:4","nodeType":"VariableDeclaration","scope":859,"src":"930:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:4"},"returnParameters":{"id":858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":859,"src":"970:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":856,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:4"},"scope":902,"src":"911:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":860,"nodeType":"StructuredDocumentation","src":"985:213:4","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":869,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:4","nodeType":"FunctionDefinition","parameters":{"id":865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"to","nameLocation":"1229:2:4","nodeType":"VariableDeclaration","scope":869,"src":"1221:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":861,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":864,"mutability":"mutable","name":"value","nameLocation":"1241:5:4","nodeType":"VariableDeclaration","scope":869,"src":"1233:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":863,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:4"},"returnParameters":{"id":868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":869,"src":"1266:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":866,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:4"},"scope":902,"src":"1203:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":870,"nodeType":"StructuredDocumentation","src":"1278:264:4","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":879,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:4","nodeType":"FunctionDefinition","parameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":872,"mutability":"mutable","name":"owner","nameLocation":"1574:5:4","nodeType":"VariableDeclaration","scope":879,"src":"1566:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":871,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":874,"mutability":"mutable","name":"spender","nameLocation":"1589:7:4","nodeType":"VariableDeclaration","scope":879,"src":"1581:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":873,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:4"},"returnParameters":{"id":878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":879,"src":"1621:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":876,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:4"},"scope":902,"src":"1547:83:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":880,"nodeType":"StructuredDocumentation","src":"1636:667:4","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":889,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:4","nodeType":"FunctionDefinition","parameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":882,"mutability":"mutable","name":"spender","nameLocation":"2333:7:4","nodeType":"VariableDeclaration","scope":889,"src":"2325:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":881,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":884,"mutability":"mutable","name":"value","nameLocation":"2350:5:4","nodeType":"VariableDeclaration","scope":889,"src":"2342:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":883,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:4"},"returnParameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":889,"src":"2375:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":886,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:4"},"scope":902,"src":"2308:73:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":890,"nodeType":"StructuredDocumentation","src":"2387:297:4","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":901,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:4","nodeType":"FunctionDefinition","parameters":{"id":897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":892,"mutability":"mutable","name":"from","nameLocation":"2719:4:4","nodeType":"VariableDeclaration","scope":901,"src":"2711:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":891,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":894,"mutability":"mutable","name":"to","nameLocation":"2733:2:4","nodeType":"VariableDeclaration","scope":901,"src":"2725:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":893,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":896,"mutability":"mutable","name":"value","nameLocation":"2745:5:4","nodeType":"VariableDeclaration","scope":901,"src":"2737:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":895,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:4"},"returnParameters":{"id":900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":901,"src":"2770:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":898,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:4"},"scope":902,"src":"2689:87:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":903,"src":"203:2575:4","usedErrors":[],"usedEvents":[836,845]}],"src":"106:2673:4"},"id":4},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"ECDSA":[2146],"EIP712":[2373],"ERC20":[824],"ERC20Permit":[1056],"IERC20Permit":[1118],"Nonces":[1216]},"id":1057,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":904,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"122:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":906,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1057,"sourceUnit":1119,"src":"148:48:5","symbolAliases":[{"foreign":{"id":905,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"156:12:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":908,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1057,"sourceUnit":825,"src":"197:35:5","symbolAliases":[{"foreign":{"id":907,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"205:5:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":910,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1057,"sourceUnit":2147,"src":"233:60:5","symbolAliases":[{"foreign":{"id":909,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"241:5:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":912,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1057,"sourceUnit":2374,"src":"294:62:5","symbolAliases":[{"foreign":{"id":911,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"302:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../../utils/Nonces.sol","id":914,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1057,"sourceUnit":1217,"src":"357:49:5","symbolAliases":[{"foreign":{"id":913,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"365:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":916,"name":"ERC20","nameLocations":["929:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"929:5:5"},"id":917,"nodeType":"InheritanceSpecifier","src":"929:5:5"},{"baseName":{"id":918,"name":"IERC20Permit","nameLocations":["936:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":1118,"src":"936:12:5"},"id":919,"nodeType":"InheritanceSpecifier","src":"936:12:5"},{"baseName":{"id":920,"name":"EIP712","nameLocations":["950:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":2373,"src":"950:6:5"},"id":921,"nodeType":"InheritanceSpecifier","src":"950:6:5"},{"baseName":{"id":922,"name":"Nonces","nameLocations":["958:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":1216,"src":"958:6:5"},"id":923,"nodeType":"InheritanceSpecifier","src":"958:6:5"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":915,"nodeType":"StructuredDocumentation","src":"408:487:5","text":" @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":true,"id":1056,"linearizedBaseContracts":[1056,1216,2373,172,1118,824,214,1082,902,1148],"name":"ERC20Permit","nameLocation":"914:11:5","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":928,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"996:15:5","nodeType":"VariableDeclaration","scope":1056,"src":"971:146:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":924,"name":"bytes32","nodeType":"ElementaryTypeName","src":"971:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1032:84:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":925,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1022:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1022:95:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":929,"nodeType":"StructuredDocumentation","src":"1124:52:5","text":" @dev Permit deadline has expired."},"errorSelector":"62791302","id":933,"name":"ERC2612ExpiredSignature","nameLocation":"1187:23:5","nodeType":"ErrorDefinition","parameters":{"id":932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":931,"mutability":"mutable","name":"deadline","nameLocation":"1219:8:5","nodeType":"VariableDeclaration","scope":933,"src":"1211:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":930,"name":"uint256","nodeType":"ElementaryTypeName","src":"1211:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:18:5"},"src":"1181:48:5"},{"documentation":{"id":934,"nodeType":"StructuredDocumentation","src":"1235:45:5","text":" @dev Mismatched signature."},"errorSelector":"4b800e46","id":940,"name":"ERC2612InvalidSigner","nameLocation":"1291:20:5","nodeType":"ErrorDefinition","parameters":{"id":939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":936,"mutability":"mutable","name":"signer","nameLocation":"1320:6:5","nodeType":"VariableDeclaration","scope":940,"src":"1312:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":935,"name":"address","nodeType":"ElementaryTypeName","src":"1312:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":938,"mutability":"mutable","name":"owner","nameLocation":"1336:5:5","nodeType":"VariableDeclaration","scope":940,"src":"1328:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":937,"name":"address","nodeType":"ElementaryTypeName","src":"1328:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1311:31:5"},"src":"1285:58:5"},{"body":{"id":950,"nodeType":"Block","src":"1624:2:5","statements":[]},"documentation":{"id":941,"nodeType":"StructuredDocumentation","src":"1349:220:5","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."},"id":951,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":946,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"1613:4:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1619:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":948,"kind":"baseConstructorSpecifier","modifierName":{"id":945,"name":"EIP712","nameLocations":["1606:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":2373,"src":"1606:6:5"},"nodeType":"ModifierInvocation","src":"1606:17:5"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":943,"mutability":"mutable","name":"name","nameLocation":"1600:4:5","nodeType":"VariableDeclaration","scope":951,"src":"1586:18:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":942,"name":"string","nodeType":"ElementaryTypeName","src":"1586:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1585:20:5"},"returnParameters":{"id":949,"nodeType":"ParameterList","parameters":[],"src":"1624:0:5"},"scope":1056,"src":"1574:52:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1103],"body":{"id":1027,"nodeType":"Block","src":"1869:483:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":969,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1883:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1889:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"1883:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":971,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"1901:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1883:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":978,"nodeType":"IfStatement","src":"1879:97:5","trueBody":{"id":977,"nodeType":"Block","src":"1911:65:5","statements":[{"errorCall":{"arguments":[{"id":974,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"1956:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":973,"name":"ERC2612ExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"1932:23:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1932:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":976,"nodeType":"RevertStatement","src":"1925:40:5"}]}},{"assignments":[980],"declarations":[{"constant":false,"id":980,"mutability":"mutable","name":"structHash","nameLocation":"1994:10:5","nodeType":"VariableDeclaration","scope":1027,"src":"1986:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":979,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1986:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":994,"initialValue":{"arguments":[{"arguments":[{"id":984,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"2028:15:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":985,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"2045:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":986,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"2052:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"2061:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":989,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"2078:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":988,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"2068:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2068:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":991,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"2086:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":982,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2017:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2021:6:5","memberName":"encode","nodeType":"MemberAccess","src":"2017:10:5","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2017:78:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":981,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2007:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2007:89:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1986:110:5"},{"assignments":[996],"declarations":[{"constant":false,"id":996,"mutability":"mutable","name":"hash","nameLocation":"2115:4:5","nodeType":"VariableDeclaration","scope":1027,"src":"2107:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":995,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2107:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1000,"initialValue":{"arguments":[{"id":998,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"2139:10:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":997,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"2122:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2122:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2107:43:5"},{"assignments":[1002],"declarations":[{"constant":false,"id":1002,"mutability":"mutable","name":"signer","nameLocation":"2169:6:5","nodeType":"VariableDeclaration","scope":1027,"src":"2161:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1001,"name":"address","nodeType":"ElementaryTypeName","src":"2161:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1010,"initialValue":{"arguments":[{"id":1005,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"2192:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1006,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"2198:1:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1007,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"2201:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1008,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"2204:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1003,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"2178:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$2146_$","typeString":"type(library ECDSA)"}},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2184:7:5","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":2096,"src":"2178:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2161:45:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1011,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"2220:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1012,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"2230:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2220:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1020,"nodeType":"IfStatement","src":"2216:88:5","trueBody":{"id":1019,"nodeType":"Block","src":"2237:67:5","statements":[{"errorCall":{"arguments":[{"id":1015,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"2279:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1016,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"2287:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1014,"name":"ERC2612InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"2258:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2258:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1018,"nodeType":"RevertStatement","src":"2251:42:5"}]}},{"expression":{"arguments":[{"id":1022,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"2323:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1023,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"2330:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"2339:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1021,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[715,775],"referencedDeclaration":715,"src":"2314:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2314:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1026,"nodeType":"ExpressionStatement","src":"2314:31:5"}]},"documentation":{"id":952,"nodeType":"StructuredDocumentation","src":"1632:43:5","text":" @inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":1028,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1689:6:5","nodeType":"FunctionDefinition","parameters":{"id":967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":954,"mutability":"mutable","name":"owner","nameLocation":"1713:5:5","nodeType":"VariableDeclaration","scope":1028,"src":"1705:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":953,"name":"address","nodeType":"ElementaryTypeName","src":"1705:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":956,"mutability":"mutable","name":"spender","nameLocation":"1736:7:5","nodeType":"VariableDeclaration","scope":1028,"src":"1728:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":955,"name":"address","nodeType":"ElementaryTypeName","src":"1728:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":958,"mutability":"mutable","name":"value","nameLocation":"1761:5:5","nodeType":"VariableDeclaration","scope":1028,"src":"1753:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":957,"name":"uint256","nodeType":"ElementaryTypeName","src":"1753:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":960,"mutability":"mutable","name":"deadline","nameLocation":"1784:8:5","nodeType":"VariableDeclaration","scope":1028,"src":"1776:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":959,"name":"uint256","nodeType":"ElementaryTypeName","src":"1776:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":962,"mutability":"mutable","name":"v","nameLocation":"1808:1:5","nodeType":"VariableDeclaration","scope":1028,"src":"1802:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":961,"name":"uint8","nodeType":"ElementaryTypeName","src":"1802:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":964,"mutability":"mutable","name":"r","nameLocation":"1827:1:5","nodeType":"VariableDeclaration","scope":1028,"src":"1819:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":963,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1819:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":966,"mutability":"mutable","name":"s","nameLocation":"1846:1:5","nodeType":"VariableDeclaration","scope":1028,"src":"1838:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":965,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1838:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1695:158:5"},"returnParameters":{"id":968,"nodeType":"ParameterList","parameters":[],"src":"1869:0:5"},"scope":1056,"src":"1680:672:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1111,1175],"body":{"id":1044,"nodeType":"Block","src":"2506:43:5","statements":[{"expression":{"arguments":[{"id":1041,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"2536:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1039,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2523:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Permit_$1056_$","typeString":"type(contract super ERC20Permit)"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2529:6:5","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1175,"src":"2523:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2523:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1038,"id":1043,"nodeType":"Return","src":"2516:26:5"}]},"documentation":{"id":1029,"nodeType":"StructuredDocumentation","src":"2358:43:5","text":" @inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":1045,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2415:6:5","nodeType":"FunctionDefinition","overrides":{"id":1035,"nodeType":"OverrideSpecifier","overrides":[{"id":1033,"name":"IERC20Permit","nameLocations":["2466:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":1118,"src":"2466:12:5"},{"id":1034,"name":"Nonces","nameLocations":["2480:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":1216,"src":"2480:6:5"}],"src":"2457:30:5"},"parameters":{"id":1032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1031,"mutability":"mutable","name":"owner","nameLocation":"2430:5:5","nodeType":"VariableDeclaration","scope":1045,"src":"2422:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1030,"name":"address","nodeType":"ElementaryTypeName","src":"2422:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2421:15:5"},"returnParameters":{"id":1038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1045,"src":"2497:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1036,"name":"uint256","nodeType":"ElementaryTypeName","src":"2497:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2496:9:5"},"scope":1056,"src":"2406:143:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1117],"body":{"id":1054,"nodeType":"Block","src":"2724:44:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1051,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"2741:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2741:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1050,"id":1053,"nodeType":"Return","src":"2734:27:5"}]},"documentation":{"id":1046,"nodeType":"StructuredDocumentation","src":"2555:43:5","text":" @inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":1055,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2665:16:5","nodeType":"FunctionDefinition","parameters":{"id":1047,"nodeType":"ParameterList","parameters":[],"src":"2681:2:5"},"returnParameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1055,"src":"2715:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1048,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2715:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2714:9:5"},"scope":1056,"src":"2656:112:5","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":1057,"src":"896:1874:5","usedErrors":[184,189,194,203,208,213,933,940,1158,1230,1232,1809,1814,1819],"usedEvents":[152,836,845]}],"src":"122:2649:5"},"id":5},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[902],"IERC20Metadata":[1082]},"id":1083,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1058,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1060,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1083,"sourceUnit":903,"src":"151:37:6","symbolAliases":[{"foreign":{"id":1059,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"159:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1062,"name":"IERC20","nameLocations":["305:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":902,"src":"305:6:6"},"id":1063,"nodeType":"InheritanceSpecifier","src":"305:6:6"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1061,"nodeType":"StructuredDocumentation","src":"190:86:6","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":1082,"linearizedBaseContracts":[1082,902],"name":"IERC20Metadata","nameLocation":"287:14:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1064,"nodeType":"StructuredDocumentation","src":"318:54:6","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1069,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:6","nodeType":"FunctionDefinition","parameters":{"id":1065,"nodeType":"ParameterList","parameters":[],"src":"390:2:6"},"returnParameters":{"id":1068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1067,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1069,"src":"416:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1066,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:6"},"scope":1082,"src":"377:54:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1070,"nodeType":"StructuredDocumentation","src":"437:56:6","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1075,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:6","nodeType":"FunctionDefinition","parameters":{"id":1071,"nodeType":"ParameterList","parameters":[],"src":"513:2:6"},"returnParameters":{"id":1074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1075,"src":"539:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1072,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:6"},"scope":1082,"src":"498:56:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1076,"nodeType":"StructuredDocumentation","src":"560:65:6","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1081,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:6","nodeType":"FunctionDefinition","parameters":{"id":1077,"nodeType":"ParameterList","parameters":[],"src":"647:2:6"},"returnParameters":{"id":1080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1079,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1081,"src":"673:5:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1078,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:6"},"scope":1082,"src":"630:50:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1083,"src":"277:405:6","usedErrors":[],"usedEvents":[836,845]}],"src":"125:558:6"},"id":6},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1118]},"id":1119,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1084,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1085,"nodeType":"StructuredDocumentation","src":"149:1963:7","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":1118,"linearizedBaseContracts":[1118],"name":"IERC20Permit","nameLocation":"2123:12:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1086,"nodeType":"StructuredDocumentation","src":"2142:850:7","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":1103,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3006:6:7","nodeType":"FunctionDefinition","parameters":{"id":1101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1088,"mutability":"mutable","name":"owner","nameLocation":"3030:5:7","nodeType":"VariableDeclaration","scope":1103,"src":"3022:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1087,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1090,"mutability":"mutable","name":"spender","nameLocation":"3053:7:7","nodeType":"VariableDeclaration","scope":1103,"src":"3045:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1089,"name":"address","nodeType":"ElementaryTypeName","src":"3045:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1092,"mutability":"mutable","name":"value","nameLocation":"3078:5:7","nodeType":"VariableDeclaration","scope":1103,"src":"3070:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1091,"name":"uint256","nodeType":"ElementaryTypeName","src":"3070:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1094,"mutability":"mutable","name":"deadline","nameLocation":"3101:8:7","nodeType":"VariableDeclaration","scope":1103,"src":"3093:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1093,"name":"uint256","nodeType":"ElementaryTypeName","src":"3093:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1096,"mutability":"mutable","name":"v","nameLocation":"3125:1:7","nodeType":"VariableDeclaration","scope":1103,"src":"3119:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1095,"name":"uint8","nodeType":"ElementaryTypeName","src":"3119:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1098,"mutability":"mutable","name":"r","nameLocation":"3144:1:7","nodeType":"VariableDeclaration","scope":1103,"src":"3136:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1097,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3136:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1100,"mutability":"mutable","name":"s","nameLocation":"3163:1:7","nodeType":"VariableDeclaration","scope":1103,"src":"3155:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1099,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3155:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3012:158:7"},"returnParameters":{"id":1102,"nodeType":"ParameterList","parameters":[],"src":"3179:0:7"},"scope":1118,"src":"2997:183:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1104,"nodeType":"StructuredDocumentation","src":"3186:294:7","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1111,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3494:6:7","nodeType":"FunctionDefinition","parameters":{"id":1107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1106,"mutability":"mutable","name":"owner","nameLocation":"3509:5:7","nodeType":"VariableDeclaration","scope":1111,"src":"3501:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1105,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3500:15:7"},"returnParameters":{"id":1110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1109,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1111,"src":"3539:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1108,"name":"uint256","nodeType":"ElementaryTypeName","src":"3539:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3538:9:7"},"scope":1118,"src":"3485:63:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1112,"nodeType":"StructuredDocumentation","src":"3554:128:7","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1117,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3749:16:7","nodeType":"FunctionDefinition","parameters":{"id":1113,"nodeType":"ParameterList","parameters":[],"src":"3765:2:7"},"returnParameters":{"id":1116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1117,"src":"3791:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1114,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3791:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3790:9:7"},"scope":1118,"src":"3740:60:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1119,"src":"2113:1689:7","usedErrors":[],"usedEvents":[]}],"src":"123:3680:7"},"id":7},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1148]},"id":1149,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1120,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:8"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1121,"nodeType":"StructuredDocumentation","src":"127:496:8","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1148,"linearizedBaseContracts":[1148],"name":"Context","nameLocation":"642:7:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1129,"nodeType":"Block","src":"718:34:8","statements":[{"expression":{"expression":{"id":1126,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:8","memberName":"sender","nodeType":"MemberAccess","src":"735:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1125,"id":1128,"nodeType":"Return","src":"728:17:8"}]},"id":1130,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:8","nodeType":"FunctionDefinition","parameters":{"id":1122,"nodeType":"ParameterList","parameters":[],"src":"675:2:8"},"returnParameters":{"id":1125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1130,"src":"709:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1123,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:8"},"scope":1148,"src":"656:96:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1138,"nodeType":"Block","src":"825:32:8","statements":[{"expression":{"expression":{"id":1135,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:8","memberName":"data","nodeType":"MemberAccess","src":"842:8:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1134,"id":1137,"nodeType":"Return","src":"835:15:8"}]},"id":1139,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:8","nodeType":"FunctionDefinition","parameters":{"id":1131,"nodeType":"ParameterList","parameters":[],"src":"775:2:8"},"returnParameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1139,"src":"809:14:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1132,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:8"},"scope":1148,"src":"758:99:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1146,"nodeType":"Block","src":"935:25:8","statements":[{"expression":{"hexValue":"30","id":1144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1143,"id":1145,"nodeType":"Return","src":"945:8:8"}]},"id":1147,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:8","nodeType":"FunctionDefinition","parameters":{"id":1140,"nodeType":"ParameterList","parameters":[],"src":"892:2:8"},"returnParameters":{"id":1143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1147,"src":"926:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1141,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:8"},"scope":1148,"src":"863:97:8","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1149,"src":"624:338:8","usedErrors":[],"usedEvents":[]}],"src":"101:862:8"},"id":8},"@openzeppelin/contracts/utils/Nonces.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","exportedSymbols":{"Nonces":[1216]},"id":1217,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1150,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:9"},{"abstract":true,"baseContracts":[],"canonicalName":"Nonces","contractDependencies":[],"contractKind":"contract","documentation":{"id":1151,"nodeType":"StructuredDocumentation","src":"125:83:9","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":1216,"linearizedBaseContracts":[1216],"name":"Nonces","nameLocation":"227:6:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1152,"nodeType":"StructuredDocumentation","src":"240:90:9","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":1158,"name":"InvalidAccountNonce","nameLocation":"341:19:9","nodeType":"ErrorDefinition","parameters":{"id":1157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1154,"mutability":"mutable","name":"account","nameLocation":"369:7:9","nodeType":"VariableDeclaration","scope":1158,"src":"361:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1153,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1156,"mutability":"mutable","name":"currentNonce","nameLocation":"386:12:9","nodeType":"VariableDeclaration","scope":1158,"src":"378:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1155,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"360:39:9"},"src":"335:65:9"},{"constant":false,"id":1162,"mutability":"mutable","name":"_nonces","nameLocation":"450:7:9","nodeType":"VariableDeclaration","scope":1216,"src":"406:51:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1161,"keyName":"account","keyNameLocation":"422:7:9","keyType":{"id":1159,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"406:35:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1160,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":1174,"nodeType":"Block","src":"607:38:9","statements":[{"expression":{"baseExpression":{"id":1170,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"624:7:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1172,"indexExpression":{"id":1171,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"632:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"624:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1169,"id":1173,"nodeType":"Return","src":"617:21:9"}]},"documentation":{"id":1163,"nodeType":"StructuredDocumentation","src":"464:69:9","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":1175,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"547:6:9","nodeType":"FunctionDefinition","parameters":{"id":1166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1165,"mutability":"mutable","name":"owner","nameLocation":"562:5:9","nodeType":"VariableDeclaration","scope":1175,"src":"554:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1164,"name":"address","nodeType":"ElementaryTypeName","src":"554:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"553:15:9"},"returnParameters":{"id":1169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1175,"src":"598:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1167,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"597:9:9"},"scope":1216,"src":"538:107:9","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1189,"nodeType":"Block","src":"828:326:9","statements":[{"id":1188,"nodeType":"UncheckedBlock","src":"1031:117:9","statements":[{"expression":{"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1121:16:9","subExpression":{"baseExpression":{"id":1183,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"1121:7:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1185,"indexExpression":{"id":1184,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"1129:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1121:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1182,"id":1187,"nodeType":"Return","src":"1114:23:9"}]}]},"documentation":{"id":1176,"nodeType":"StructuredDocumentation","src":"651:103:9","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":1190,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"768:9:9","nodeType":"FunctionDefinition","parameters":{"id":1179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1178,"mutability":"mutable","name":"owner","nameLocation":"786:5:9","nodeType":"VariableDeclaration","scope":1190,"src":"778:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1177,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:15:9"},"returnParameters":{"id":1182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1181,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1190,"src":"819:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1180,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:9:9"},"scope":1216,"src":"759:395:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1214,"nodeType":"Block","src":"1338:149:9","statements":[{"assignments":[1199],"declarations":[{"constant":false,"id":1199,"mutability":"mutable","name":"current","nameLocation":"1356:7:9","nodeType":"VariableDeclaration","scope":1214,"src":"1348:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1198,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1203,"initialValue":{"arguments":[{"id":1201,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"1376:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1200,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"1366:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1348:34:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1204,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"1396:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1205,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"1405:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1396:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1213,"nodeType":"IfStatement","src":"1392:89:9","trueBody":{"id":1212,"nodeType":"Block","src":"1414:67:9","statements":[{"errorCall":{"arguments":[{"id":1208,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"1455:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1209,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"1462:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1207,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"1435:19:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1435:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1211,"nodeType":"RevertStatement","src":"1428:42:9"}]}}]},"documentation":{"id":1191,"nodeType":"StructuredDocumentation","src":"1160:100:9","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":1215,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"1274:16:9","nodeType":"FunctionDefinition","parameters":{"id":1196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1193,"mutability":"mutable","name":"owner","nameLocation":"1299:5:9","nodeType":"VariableDeclaration","scope":1215,"src":"1291:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1192,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1195,"mutability":"mutable","name":"nonce","nameLocation":"1314:5:9","nodeType":"VariableDeclaration","scope":1215,"src":"1306:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1194,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1290:30:9"},"returnParameters":{"id":1197,"nodeType":"ParameterList","parameters":[],"src":"1338:0:9"},"scope":1216,"src":"1265:222:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1217,"src":"209:1280:9","usedErrors":[1158],"usedEvents":[]}],"src":"99:1391:9"},"id":9},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[1222],"ShortStrings":[1433],"StorageSlot":[1543]},"id":1434,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1218,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:10"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":1220,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1434,"sourceUnit":1544,"src":"132:46:10","symbolAliases":[{"foreign":{"id":1219,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"140:11:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":1222,"name":"ShortString","nameLocation":"353:11:10","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:10","underlyingType":{"id":1221,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":1223,"nodeType":"StructuredDocumentation","src":"378:876:10","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":1433,"linearizedBaseContracts":[1433],"name":"ShortStrings","nameLocation":"1263:12:10","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1226,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:10","nodeType":"VariableDeclaration","scope":1433,"src":"1345:111:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1224,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":1225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:10","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":1230,"name":"StringTooLong","nameLocation":"1469:13:10","nodeType":"ErrorDefinition","parameters":{"id":1229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1228,"mutability":"mutable","name":"str","nameLocation":"1490:3:10","nodeType":"VariableDeclaration","scope":1230,"src":"1483:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1227,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:10"},"src":"1463:32:10"},{"errorSelector":"b3512b0c","id":1232,"name":"InvalidShortString","nameLocation":"1506:18:10","nodeType":"ErrorDefinition","parameters":{"id":1231,"nodeType":"ParameterList","parameters":[],"src":"1524:2:10"},"src":"1500:27:10"},{"body":{"id":1275,"nodeType":"Block","src":"1786:208:10","statements":[{"assignments":[1242],"declarations":[{"constant":false,"id":1242,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:10","nodeType":"VariableDeclaration","scope":1275,"src":"1796:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1241,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1247,"initialValue":{"arguments":[{"id":1245,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"1822:3:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1243,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:10","typeDescriptions":{}}},"id":1246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1248,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"1840:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:10","memberName":"length","nodeType":"MemberAccess","src":"1840:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:10","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1257,"nodeType":"IfStatement","src":"1836:72:10","trueBody":{"id":1256,"nodeType":"Block","src":"1858:50:10","statements":[{"errorCall":{"arguments":[{"id":1253,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"1893:3:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1252,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"1879:13:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1255,"nodeType":"RevertStatement","src":"1872:25:10"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1266,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"1965:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1264,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:10","typeDescriptions":{}}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1262,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:10","typeDescriptions":{}}},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":1269,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"1974:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:10","memberName":"length","nodeType":"MemberAccess","src":"1974:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1260,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:10","typeDescriptions":{}}},"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1258,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"1924:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1222_$","typeString":"type(ShortString)"}},"id":1259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:10","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:10","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1222_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}},"functionReturnParameters":1240,"id":1274,"nodeType":"Return","src":"1917:70:10"}]},"documentation":{"id":1233,"nodeType":"StructuredDocumentation","src":"1533:170:10","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":1276,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:10","nodeType":"FunctionDefinition","parameters":{"id":1236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1235,"mutability":"mutable","name":"str","nameLocation":"1745:3:10","nodeType":"VariableDeclaration","scope":1276,"src":"1731:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1234,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:10"},"returnParameters":{"id":1240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1276,"src":"1773:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"},"typeName":{"id":1238,"nodeType":"UserDefinedTypeName","pathNode":{"id":1237,"name":"ShortString","nameLocations":["1773:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"1773:11:10"},"referencedDeclaration":1222,"src":"1773:11:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:10"},"scope":1433,"src":"1708:286:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1301,"nodeType":"Block","src":"2152:331:10","statements":[{"assignments":[1286],"declarations":[{"constant":false,"id":1286,"mutability":"mutable","name":"len","nameLocation":"2170:3:10","nodeType":"VariableDeclaration","scope":1301,"src":"2162:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1285,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1290,"initialValue":{"arguments":[{"id":1288,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"2187:4:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}],"id":1287,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"2176:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1222_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:10"},{"assignments":[1292],"declarations":[{"constant":false,"id":1292,"mutability":"mutable","name":"str","nameLocation":"2294:3:10","nodeType":"VariableDeclaration","scope":1301,"src":"2280:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1291,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1297,"initialValue":{"arguments":[{"hexValue":"3332","id":1295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":1294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1293,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:10"},{"AST":{"nativeSrc":"2376:81:10","nodeType":"YulBlock","src":"2376:81:10","statements":[{"expression":{"arguments":[{"name":"str","nativeSrc":"2397:3:10","nodeType":"YulIdentifier","src":"2397:3:10"},{"name":"len","nativeSrc":"2402:3:10","nodeType":"YulIdentifier","src":"2402:3:10"}],"functionName":{"name":"mstore","nativeSrc":"2390:6:10","nodeType":"YulIdentifier","src":"2390:6:10"},"nativeSrc":"2390:16:10","nodeType":"YulFunctionCall","src":"2390:16:10"},"nativeSrc":"2390:16:10","nodeType":"YulExpressionStatement","src":"2390:16:10"},{"expression":{"arguments":[{"arguments":[{"name":"str","nativeSrc":"2430:3:10","nodeType":"YulIdentifier","src":"2430:3:10"},{"kind":"number","nativeSrc":"2435:4:10","nodeType":"YulLiteral","src":"2435:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2426:3:10","nodeType":"YulIdentifier","src":"2426:3:10"},"nativeSrc":"2426:14:10","nodeType":"YulFunctionCall","src":"2426:14:10"},{"name":"sstr","nativeSrc":"2442:4:10","nodeType":"YulIdentifier","src":"2442:4:10"}],"functionName":{"name":"mstore","nativeSrc":"2419:6:10","nodeType":"YulIdentifier","src":"2419:6:10"},"nativeSrc":"2419:28:10","nodeType":"YulFunctionCall","src":"2419:28:10"},"nativeSrc":"2419:28:10","nodeType":"YulExpressionStatement","src":"2419:28:10"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1286,"isOffset":false,"isSlot":false,"src":"2402:3:10","valueSize":1},{"declaration":1280,"isOffset":false,"isSlot":false,"src":"2442:4:10","valueSize":1},{"declaration":1292,"isOffset":false,"isSlot":false,"src":"2397:3:10","valueSize":1},{"declaration":1292,"isOffset":false,"isSlot":false,"src":"2430:3:10","valueSize":1}],"id":1298,"nodeType":"InlineAssembly","src":"2367:90:10"},{"expression":{"id":1299,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"2473:3:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1284,"id":1300,"nodeType":"Return","src":"2466:10:10"}]},"documentation":{"id":1277,"nodeType":"StructuredDocumentation","src":"2000:73:10","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":1302,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:10","nodeType":"FunctionDefinition","parameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1280,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:10","nodeType":"VariableDeclaration","scope":1302,"src":"2096:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"},"typeName":{"id":1279,"nodeType":"UserDefinedTypeName","pathNode":{"id":1278,"name":"ShortString","nameLocations":["2096:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"2096:11:10"},"referencedDeclaration":1222,"src":"2096:11:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:10"},"returnParameters":{"id":1284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1302,"src":"2137:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1282,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:10"},"scope":1433,"src":"2078:405:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1333,"nodeType":"Block","src":"2625:175:10","statements":[{"assignments":[1312],"declarations":[{"constant":false,"id":1312,"mutability":"mutable","name":"result","nameLocation":"2643:6:10","nodeType":"VariableDeclaration","scope":1333,"src":"2635:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1311,"name":"uint256","nodeType":"ElementaryTypeName","src":"2635:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1322,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1317,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"2679:4:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}],"expression":{"id":1315,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"2660:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1222_$","typeString":"type(ShortString)"}},"id":1316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2672:6:10","memberName":"unwrap","nodeType":"MemberAccess","src":"2660:18:10","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1222_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2660:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2652:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1313,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:10","typeDescriptions":{}}},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2652:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":1320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:4:10","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2652:40:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2635:57:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1323,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"2706:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2715:2:10","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2706:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1330,"nodeType":"IfStatement","src":"2702:69:10","trueBody":{"id":1329,"nodeType":"Block","src":"2719:52:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1326,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"2740:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2740:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1328,"nodeType":"RevertStatement","src":"2733:27:10"}]}},{"expression":{"id":1331,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"2787:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1310,"id":1332,"nodeType":"Return","src":"2780:13:10"}]},"documentation":{"id":1303,"nodeType":"StructuredDocumentation","src":"2489:61:10","text":" @dev Return the length of a `ShortString`."},"id":1334,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2564:10:10","nodeType":"FunctionDefinition","parameters":{"id":1307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1306,"mutability":"mutable","name":"sstr","nameLocation":"2587:4:10","nodeType":"VariableDeclaration","scope":1334,"src":"2575:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"},"typeName":{"id":1305,"nodeType":"UserDefinedTypeName","pathNode":{"id":1304,"name":"ShortString","nameLocations":["2575:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"2575:11:10"},"referencedDeclaration":1222,"src":"2575:11:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}},"visibility":"internal"}],"src":"2574:18:10"},"returnParameters":{"id":1310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1334,"src":"2616:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1308,"name":"uint256","nodeType":"ElementaryTypeName","src":"2616:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2615:9:10"},"scope":1433,"src":"2555:245:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1373,"nodeType":"Block","src":"3023:231:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"3043:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3037:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1345,"name":"bytes","nodeType":"ElementaryTypeName","src":"3037:5:10","typeDescriptions":{}}},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3037:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3050:6:10","memberName":"length","nodeType":"MemberAccess","src":"3037:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":1350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3059:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3037:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1371,"nodeType":"Block","src":"3121:127:10","statements":[{"expression":{"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1360,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"3161:5:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":1357,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"3135:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1543_$","typeString":"type(library StorageSlot)"}},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3147:13:10","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":1520,"src":"3135:25:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$1451_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3135:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1451_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":1362,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3168:5:10","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1450,"src":"3135:38:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"3176:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3135:46:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1365,"nodeType":"ExpressionStatement","src":"3135:46:10"},{"expression":{"arguments":[{"id":1368,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"3219:17:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1366,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"3202:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1222_$","typeString":"type(ShortString)"}},"id":1367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3214:4:10","memberName":"wrap","nodeType":"MemberAccess","src":"3202:16:10","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1222_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3202:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}},"functionReturnParameters":1344,"id":1370,"nodeType":"Return","src":"3195:42:10"}]},"id":1372,"nodeType":"IfStatement","src":"3033:215:10","trueBody":{"id":1356,"nodeType":"Block","src":"3063:52:10","statements":[{"expression":{"arguments":[{"id":1353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"3098:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1352,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"3084:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$1222_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3084:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}},"functionReturnParameters":1344,"id":1355,"nodeType":"Return","src":"3077:27:10"}]}}]},"documentation":{"id":1335,"nodeType":"StructuredDocumentation","src":"2806:103:10","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":1374,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2923:25:10","nodeType":"FunctionDefinition","parameters":{"id":1340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1337,"mutability":"mutable","name":"value","nameLocation":"2963:5:10","nodeType":"VariableDeclaration","scope":1374,"src":"2949:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1336,"name":"string","nodeType":"ElementaryTypeName","src":"2949:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1339,"mutability":"mutable","name":"store","nameLocation":"2985:5:10","nodeType":"VariableDeclaration","scope":1374,"src":"2970:20:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1338,"name":"string","nodeType":"ElementaryTypeName","src":"2970:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2948:43:10"},"returnParameters":{"id":1344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1374,"src":"3010:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"},"typeName":{"id":1342,"nodeType":"UserDefinedTypeName","pathNode":{"id":1341,"name":"ShortString","nameLocations":["3010:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"3010:11:10"},"referencedDeclaration":1222,"src":"3010:11:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}},"visibility":"internal"}],"src":"3009:13:10"},"scope":1433,"src":"2914:340:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1400,"nodeType":"Block","src":"3494:158:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1387,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"3527:5:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}],"expression":{"id":1385,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"3508:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1222_$","typeString":"type(ShortString)"}},"id":1386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3520:6:10","memberName":"unwrap","nodeType":"MemberAccess","src":"3508:18:10","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1222_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3508:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1389,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"3537:17:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3508:46:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1398,"nodeType":"Block","src":"3609:37:10","statements":[{"expression":{"id":1396,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"3630:5:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":1384,"id":1397,"nodeType":"Return","src":"3623:12:10"}]},"id":1399,"nodeType":"IfStatement","src":"3504:142:10","trueBody":{"id":1395,"nodeType":"Block","src":"3556:47:10","statements":[{"expression":{"arguments":[{"id":1392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"3586:5:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}],"id":1391,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"3577:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1222_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3577:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1384,"id":1394,"nodeType":"Return","src":"3570:22:10"}]}}]},"documentation":{"id":1375,"nodeType":"StructuredDocumentation","src":"3260:120:10","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":1401,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3394:20:10","nodeType":"FunctionDefinition","parameters":{"id":1381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1378,"mutability":"mutable","name":"value","nameLocation":"3427:5:10","nodeType":"VariableDeclaration","scope":1401,"src":"3415:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"},"typeName":{"id":1377,"nodeType":"UserDefinedTypeName","pathNode":{"id":1376,"name":"ShortString","nameLocations":["3415:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"3415:11:10"},"referencedDeclaration":1222,"src":"3415:11:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1380,"mutability":"mutable","name":"store","nameLocation":"3449:5:10","nodeType":"VariableDeclaration","scope":1401,"src":"3434:20:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1379,"name":"string","nodeType":"ElementaryTypeName","src":"3434:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3414:41:10"},"returnParameters":{"id":1384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1401,"src":"3479:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1382,"name":"string","nodeType":"ElementaryTypeName","src":"3479:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3478:15:10"},"scope":1433,"src":"3385:267:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1431,"nodeType":"Block","src":"4132:174:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"4165:5:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}],"expression":{"id":1412,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"4146:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1222_$","typeString":"type(ShortString)"}},"id":1413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4158:6:10","memberName":"unwrap","nodeType":"MemberAccess","src":"4146:18:10","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1222_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4146:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1416,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"4175:17:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4146:46:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1429,"nodeType":"Block","src":"4249:51:10","statements":[{"expression":{"expression":{"arguments":[{"id":1425,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"4276:5:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":1424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1423,"name":"bytes","nodeType":"ElementaryTypeName","src":"4270:5:10","typeDescriptions":{}}},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4283:6:10","memberName":"length","nodeType":"MemberAccess","src":"4270:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1411,"id":1428,"nodeType":"Return","src":"4263:26:10"}]},"id":1430,"nodeType":"IfStatement","src":"4142:158:10","trueBody":{"id":1422,"nodeType":"Block","src":"4194:49:10","statements":[{"expression":{"arguments":[{"id":1419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"4226:5:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}],"id":1418,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"4215:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1222_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4215:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1411,"id":1421,"nodeType":"Return","src":"4208:24:10"}]}}]},"documentation":{"id":1402,"nodeType":"StructuredDocumentation","src":"3658:364:10","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":1432,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4036:22:10","nodeType":"FunctionDefinition","parameters":{"id":1408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1405,"mutability":"mutable","name":"value","nameLocation":"4071:5:10","nodeType":"VariableDeclaration","scope":1432,"src":"4059:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"},"typeName":{"id":1404,"nodeType":"UserDefinedTypeName","pathNode":{"id":1403,"name":"ShortString","nameLocations":["4059:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"4059:11:10"},"referencedDeclaration":1222,"src":"4059:11:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1407,"mutability":"mutable","name":"store","nameLocation":"4093:5:10","nodeType":"VariableDeclaration","scope":1432,"src":"4078:20:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1406,"name":"string","nodeType":"ElementaryTypeName","src":"4078:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4058:41:10"},"returnParameters":{"id":1411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1410,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1432,"src":"4123:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1409,"name":"uint256","nodeType":"ElementaryTypeName","src":"4123:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4122:9:10"},"scope":1433,"src":"4027:279:10","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1434,"src":"1255:3053:10","usedErrors":[1230,1232],"usedEvents":[]}],"src":"106:4203:10"},"id":10},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[1543]},"id":1544,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1435,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1436,"nodeType":"StructuredDocumentation","src":"219:1025:11","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"},"fullyImplemented":true,"id":1543,"linearizedBaseContracts":[1543],"name":"StorageSlot","nameLocation":"1253:11:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1439,"members":[{"constant":false,"id":1438,"mutability":"mutable","name":"value","nameLocation":"1308:5:11","nodeType":"VariableDeclaration","scope":1439,"src":"1300:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1437,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1278:11:11","nodeType":"StructDefinition","scope":1543,"src":"1271:49:11","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1442,"members":[{"constant":false,"id":1441,"mutability":"mutable","name":"value","nameLocation":"1360:5:11","nodeType":"VariableDeclaration","scope":1442,"src":"1355:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1440,"name":"bool","nodeType":"ElementaryTypeName","src":"1355:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1333:11:11","nodeType":"StructDefinition","scope":1543,"src":"1326:46:11","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1445,"members":[{"constant":false,"id":1444,"mutability":"mutable","name":"value","nameLocation":"1415:5:11","nodeType":"VariableDeclaration","scope":1445,"src":"1407:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1443,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1407:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1385:11:11","nodeType":"StructDefinition","scope":1543,"src":"1378:49:11","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1448,"members":[{"constant":false,"id":1447,"mutability":"mutable","name":"value","nameLocation":"1470:5:11","nodeType":"VariableDeclaration","scope":1448,"src":"1462:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1446,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1440:11:11","nodeType":"StructDefinition","scope":1543,"src":"1433:49:11","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":1451,"members":[{"constant":false,"id":1450,"mutability":"mutable","name":"value","nameLocation":"1523:5:11","nodeType":"VariableDeclaration","scope":1451,"src":"1516:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1449,"name":"string","nodeType":"ElementaryTypeName","src":"1516:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1495:10:11","nodeType":"StructDefinition","scope":1543,"src":"1488:47:11","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":1454,"members":[{"constant":false,"id":1453,"mutability":"mutable","name":"value","nameLocation":"1574:5:11","nodeType":"VariableDeclaration","scope":1454,"src":"1568:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1452,"name":"bytes","nodeType":"ElementaryTypeName","src":"1568:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1548:9:11","nodeType":"StructDefinition","scope":1543,"src":"1541:45:11","visibility":"public"},{"body":{"id":1464,"nodeType":"Block","src":"1768:106:11","statements":[{"AST":{"nativeSrc":"1830:38:11","nodeType":"YulBlock","src":"1830:38:11","statements":[{"nativeSrc":"1844:14:11","nodeType":"YulAssignment","src":"1844:14:11","value":{"name":"slot","nativeSrc":"1854:4:11","nodeType":"YulIdentifier","src":"1854:4:11"},"variableNames":[{"name":"r.slot","nativeSrc":"1844:6:11","nodeType":"YulIdentifier","src":"1844:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1461,"isOffset":false,"isSlot":true,"src":"1844:6:11","suffix":"slot","valueSize":1},{"declaration":1457,"isOffset":false,"isSlot":false,"src":"1854:4:11","valueSize":1}],"id":1463,"nodeType":"InlineAssembly","src":"1821:47:11"}]},"documentation":{"id":1455,"nodeType":"StructuredDocumentation","src":"1592:87:11","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1465,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1693:14:11","nodeType":"FunctionDefinition","parameters":{"id":1458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1457,"mutability":"mutable","name":"slot","nameLocation":"1716:4:11","nodeType":"VariableDeclaration","scope":1465,"src":"1708:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1456,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1708:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1707:14:11"},"returnParameters":{"id":1462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1461,"mutability":"mutable","name":"r","nameLocation":"1765:1:11","nodeType":"VariableDeclaration","scope":1465,"src":"1745:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1439_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1460,"nodeType":"UserDefinedTypeName","pathNode":{"id":1459,"name":"AddressSlot","nameLocations":["1745:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1439,"src":"1745:11:11"},"referencedDeclaration":1439,"src":"1745:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1439_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1744:23:11"},"scope":1543,"src":"1684:190:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1475,"nodeType":"Block","src":"2056:106:11","statements":[{"AST":{"nativeSrc":"2118:38:11","nodeType":"YulBlock","src":"2118:38:11","statements":[{"nativeSrc":"2132:14:11","nodeType":"YulAssignment","src":"2132:14:11","value":{"name":"slot","nativeSrc":"2142:4:11","nodeType":"YulIdentifier","src":"2142:4:11"},"variableNames":[{"name":"r.slot","nativeSrc":"2132:6:11","nodeType":"YulIdentifier","src":"2132:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1472,"isOffset":false,"isSlot":true,"src":"2132:6:11","suffix":"slot","valueSize":1},{"declaration":1468,"isOffset":false,"isSlot":false,"src":"2142:4:11","valueSize":1}],"id":1474,"nodeType":"InlineAssembly","src":"2109:47:11"}]},"documentation":{"id":1466,"nodeType":"StructuredDocumentation","src":"1880:87:11","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":1476,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1981:14:11","nodeType":"FunctionDefinition","parameters":{"id":1469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1468,"mutability":"mutable","name":"slot","nameLocation":"2004:4:11","nodeType":"VariableDeclaration","scope":1476,"src":"1996:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1467,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1996:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1995:14:11"},"returnParameters":{"id":1473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1472,"mutability":"mutable","name":"r","nameLocation":"2053:1:11","nodeType":"VariableDeclaration","scope":1476,"src":"2033:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1442_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":1471,"nodeType":"UserDefinedTypeName","pathNode":{"id":1470,"name":"BooleanSlot","nameLocations":["2033:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1442,"src":"2033:11:11"},"referencedDeclaration":1442,"src":"2033:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1442_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2032:23:11"},"scope":1543,"src":"1972:190:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1486,"nodeType":"Block","src":"2344:106:11","statements":[{"AST":{"nativeSrc":"2406:38:11","nodeType":"YulBlock","src":"2406:38:11","statements":[{"nativeSrc":"2420:14:11","nodeType":"YulAssignment","src":"2420:14:11","value":{"name":"slot","nativeSrc":"2430:4:11","nodeType":"YulIdentifier","src":"2430:4:11"},"variableNames":[{"name":"r.slot","nativeSrc":"2420:6:11","nodeType":"YulIdentifier","src":"2420:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1483,"isOffset":false,"isSlot":true,"src":"2420:6:11","suffix":"slot","valueSize":1},{"declaration":1479,"isOffset":false,"isSlot":false,"src":"2430:4:11","valueSize":1}],"id":1485,"nodeType":"InlineAssembly","src":"2397:47:11"}]},"documentation":{"id":1477,"nodeType":"StructuredDocumentation","src":"2168:87:11","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":1487,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2269:14:11","nodeType":"FunctionDefinition","parameters":{"id":1480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1479,"mutability":"mutable","name":"slot","nameLocation":"2292:4:11","nodeType":"VariableDeclaration","scope":1487,"src":"2284:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1478,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2283:14:11"},"returnParameters":{"id":1484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1483,"mutability":"mutable","name":"r","nameLocation":"2341:1:11","nodeType":"VariableDeclaration","scope":1487,"src":"2321:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1445_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1482,"nodeType":"UserDefinedTypeName","pathNode":{"id":1481,"name":"Bytes32Slot","nameLocations":["2321:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1445,"src":"2321:11:11"},"referencedDeclaration":1445,"src":"2321:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1445_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2320:23:11"},"scope":1543,"src":"2260:190:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1497,"nodeType":"Block","src":"2632:106:11","statements":[{"AST":{"nativeSrc":"2694:38:11","nodeType":"YulBlock","src":"2694:38:11","statements":[{"nativeSrc":"2708:14:11","nodeType":"YulAssignment","src":"2708:14:11","value":{"name":"slot","nativeSrc":"2718:4:11","nodeType":"YulIdentifier","src":"2718:4:11"},"variableNames":[{"name":"r.slot","nativeSrc":"2708:6:11","nodeType":"YulIdentifier","src":"2708:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1494,"isOffset":false,"isSlot":true,"src":"2708:6:11","suffix":"slot","valueSize":1},{"declaration":1490,"isOffset":false,"isSlot":false,"src":"2718:4:11","valueSize":1}],"id":1496,"nodeType":"InlineAssembly","src":"2685:47:11"}]},"documentation":{"id":1488,"nodeType":"StructuredDocumentation","src":"2456:87:11","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":1498,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2557:14:11","nodeType":"FunctionDefinition","parameters":{"id":1491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1490,"mutability":"mutable","name":"slot","nameLocation":"2580:4:11","nodeType":"VariableDeclaration","scope":1498,"src":"2572:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1489,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2572:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2571:14:11"},"returnParameters":{"id":1495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1494,"mutability":"mutable","name":"r","nameLocation":"2629:1:11","nodeType":"VariableDeclaration","scope":1498,"src":"2609:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1448_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1493,"nodeType":"UserDefinedTypeName","pathNode":{"id":1492,"name":"Uint256Slot","nameLocations":["2609:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1448,"src":"2609:11:11"},"referencedDeclaration":1448,"src":"2609:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1448_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2608:23:11"},"scope":1543,"src":"2548:190:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1508,"nodeType":"Block","src":"2917:106:11","statements":[{"AST":{"nativeSrc":"2979:38:11","nodeType":"YulBlock","src":"2979:38:11","statements":[{"nativeSrc":"2993:14:11","nodeType":"YulAssignment","src":"2993:14:11","value":{"name":"slot","nativeSrc":"3003:4:11","nodeType":"YulIdentifier","src":"3003:4:11"},"variableNames":[{"name":"r.slot","nativeSrc":"2993:6:11","nodeType":"YulIdentifier","src":"2993:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1505,"isOffset":false,"isSlot":true,"src":"2993:6:11","suffix":"slot","valueSize":1},{"declaration":1501,"isOffset":false,"isSlot":false,"src":"3003:4:11","valueSize":1}],"id":1507,"nodeType":"InlineAssembly","src":"2970:47:11"}]},"documentation":{"id":1499,"nodeType":"StructuredDocumentation","src":"2744:86:11","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":1509,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"2844:13:11","nodeType":"FunctionDefinition","parameters":{"id":1502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1501,"mutability":"mutable","name":"slot","nameLocation":"2866:4:11","nodeType":"VariableDeclaration","scope":1509,"src":"2858:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1500,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2858:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2857:14:11"},"returnParameters":{"id":1506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1505,"mutability":"mutable","name":"r","nameLocation":"2914:1:11","nodeType":"VariableDeclaration","scope":1509,"src":"2895:20:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1451_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1504,"nodeType":"UserDefinedTypeName","pathNode":{"id":1503,"name":"StringSlot","nameLocations":["2895:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":1451,"src":"2895:10:11"},"referencedDeclaration":1451,"src":"2895:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1451_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"2894:22:11"},"scope":1543,"src":"2835:188:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1519,"nodeType":"Block","src":"3225:112:11","statements":[{"AST":{"nativeSrc":"3287:44:11","nodeType":"YulBlock","src":"3287:44:11","statements":[{"nativeSrc":"3301:20:11","nodeType":"YulAssignment","src":"3301:20:11","value":{"name":"store.slot","nativeSrc":"3311:10:11","nodeType":"YulIdentifier","src":"3311:10:11"},"variableNames":[{"name":"r.slot","nativeSrc":"3301:6:11","nodeType":"YulIdentifier","src":"3301:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1516,"isOffset":false,"isSlot":true,"src":"3301:6:11","suffix":"slot","valueSize":1},{"declaration":1512,"isOffset":false,"isSlot":true,"src":"3311:10:11","suffix":"slot","valueSize":1}],"id":1518,"nodeType":"InlineAssembly","src":"3278:53:11"}]},"documentation":{"id":1510,"nodeType":"StructuredDocumentation","src":"3029:101:11","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1520,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3144:13:11","nodeType":"FunctionDefinition","parameters":{"id":1513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1512,"mutability":"mutable","name":"store","nameLocation":"3173:5:11","nodeType":"VariableDeclaration","scope":1520,"src":"3158:20:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1511,"name":"string","nodeType":"ElementaryTypeName","src":"3158:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3157:22:11"},"returnParameters":{"id":1517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1516,"mutability":"mutable","name":"r","nameLocation":"3222:1:11","nodeType":"VariableDeclaration","scope":1520,"src":"3203:20:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1451_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1515,"nodeType":"UserDefinedTypeName","pathNode":{"id":1514,"name":"StringSlot","nameLocations":["3203:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":1451,"src":"3203:10:11"},"referencedDeclaration":1451,"src":"3203:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1451_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3202:22:11"},"scope":1543,"src":"3135:202:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1530,"nodeType":"Block","src":"3513:106:11","statements":[{"AST":{"nativeSrc":"3575:38:11","nodeType":"YulBlock","src":"3575:38:11","statements":[{"nativeSrc":"3589:14:11","nodeType":"YulAssignment","src":"3589:14:11","value":{"name":"slot","nativeSrc":"3599:4:11","nodeType":"YulIdentifier","src":"3599:4:11"},"variableNames":[{"name":"r.slot","nativeSrc":"3589:6:11","nodeType":"YulIdentifier","src":"3589:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1527,"isOffset":false,"isSlot":true,"src":"3589:6:11","suffix":"slot","valueSize":1},{"declaration":1523,"isOffset":false,"isSlot":false,"src":"3599:4:11","valueSize":1}],"id":1529,"nodeType":"InlineAssembly","src":"3566:47:11"}]},"documentation":{"id":1521,"nodeType":"StructuredDocumentation","src":"3343:85:11","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":1531,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3442:12:11","nodeType":"FunctionDefinition","parameters":{"id":1524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1523,"mutability":"mutable","name":"slot","nameLocation":"3463:4:11","nodeType":"VariableDeclaration","scope":1531,"src":"3455:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1522,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3455:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3454:14:11"},"returnParameters":{"id":1528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1527,"mutability":"mutable","name":"r","nameLocation":"3510:1:11","nodeType":"VariableDeclaration","scope":1531,"src":"3492:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1454_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1526,"nodeType":"UserDefinedTypeName","pathNode":{"id":1525,"name":"BytesSlot","nameLocations":["3492:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":1454,"src":"3492:9:11"},"referencedDeclaration":1454,"src":"3492:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1454_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3491:21:11"},"scope":1543,"src":"3433:186:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1541,"nodeType":"Block","src":"3816:112:11","statements":[{"AST":{"nativeSrc":"3878:44:11","nodeType":"YulBlock","src":"3878:44:11","statements":[{"nativeSrc":"3892:20:11","nodeType":"YulAssignment","src":"3892:20:11","value":{"name":"store.slot","nativeSrc":"3902:10:11","nodeType":"YulIdentifier","src":"3902:10:11"},"variableNames":[{"name":"r.slot","nativeSrc":"3892:6:11","nodeType":"YulIdentifier","src":"3892:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1538,"isOffset":false,"isSlot":true,"src":"3892:6:11","suffix":"slot","valueSize":1},{"declaration":1534,"isOffset":false,"isSlot":true,"src":"3902:10:11","suffix":"slot","valueSize":1}],"id":1540,"nodeType":"InlineAssembly","src":"3869:53:11"}]},"documentation":{"id":1532,"nodeType":"StructuredDocumentation","src":"3625:99:11","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1542,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3738:12:11","nodeType":"FunctionDefinition","parameters":{"id":1535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1534,"mutability":"mutable","name":"store","nameLocation":"3765:5:11","nodeType":"VariableDeclaration","scope":1542,"src":"3751:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1533,"name":"bytes","nodeType":"ElementaryTypeName","src":"3751:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3750:21:11"},"returnParameters":{"id":1539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1538,"mutability":"mutable","name":"r","nameLocation":"3813:1:11","nodeType":"VariableDeclaration","scope":1542,"src":"3795:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1454_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1537,"nodeType":"UserDefinedTypeName","pathNode":{"id":1536,"name":"BytesSlot","nameLocations":["3795:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":1454,"src":"3795:9:11"},"referencedDeclaration":1454,"src":"3795:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1454_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3794:21:11"},"scope":1543,"src":"3729:199:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1544,"src":"1245:2685:11","usedErrors":[],"usedEvents":[]}],"src":"193:3738:11"},"id":11},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[3501],"SignedMath":[3606],"Strings":[1798]},"id":1799,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1545,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:12"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1547,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1799,"sourceUnit":3502,"src":"127:37:12","symbolAliases":[{"foreign":{"id":1546,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"135:4:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1549,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1799,"sourceUnit":3607,"src":"165:49:12","symbolAliases":[{"foreign":{"id":1548,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3606,"src":"173:10:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1550,"nodeType":"StructuredDocumentation","src":"216:34:12","text":" @dev String operations."},"fullyImplemented":true,"id":1798,"linearizedBaseContracts":[1798],"name":"Strings","nameLocation":"259:7:12","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1553,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:12","nodeType":"VariableDeclaration","scope":1798,"src":"273:56:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1551,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:12","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1556,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:12","nodeType":"VariableDeclaration","scope":1798,"src":"335:42:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1554,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:12","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":1557,"nodeType":"StructuredDocumentation","src":"384:81:12","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":1563,"name":"StringsInsufficientHexLength","nameLocation":"476:28:12","nodeType":"ErrorDefinition","parameters":{"id":1562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1559,"mutability":"mutable","name":"value","nameLocation":"513:5:12","nodeType":"VariableDeclaration","scope":1563,"src":"505:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1558,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1561,"mutability":"mutable","name":"length","nameLocation":"528:6:12","nodeType":"VariableDeclaration","scope":1563,"src":"520:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1560,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:12"},"src":"470:66:12"},{"body":{"id":1610,"nodeType":"Block","src":"708:627:12","statements":[{"id":1609,"nodeType":"UncheckedBlock","src":"718:611:12","statements":[{"assignments":[1572],"declarations":[{"constant":false,"id":1572,"mutability":"mutable","name":"length","nameLocation":"750:6:12","nodeType":"VariableDeclaration","scope":1609,"src":"742:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1571,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1579,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"770:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1573,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"759:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3501_$","typeString":"type(library Math)"}},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:12","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3321,"src":"759:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:12"},{"assignments":[1581],"declarations":[{"constant":false,"id":1581,"mutability":"mutable","name":"buffer","nameLocation":"808:6:12","nodeType":"VariableDeclaration","scope":1609,"src":"794:20:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1580,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1586,"initialValue":{"arguments":[{"id":1584,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"828:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1582,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:12"},{"assignments":[1588],"declarations":[{"constant":false,"id":1588,"mutability":"mutable","name":"ptr","nameLocation":"857:3:12","nodeType":"VariableDeclaration","scope":1609,"src":"849:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1587,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1589,"nodeType":"VariableDeclarationStatement","src":"849:11:12"},{"AST":{"nativeSrc":"930:67:12","nodeType":"YulBlock","src":"930:67:12","statements":[{"nativeSrc":"948:35:12","nodeType":"YulAssignment","src":"948:35:12","value":{"arguments":[{"name":"buffer","nativeSrc":"959:6:12","nodeType":"YulIdentifier","src":"959:6:12"},{"arguments":[{"kind":"number","nativeSrc":"971:2:12","nodeType":"YulLiteral","src":"971:2:12","type":"","value":"32"},{"name":"length","nativeSrc":"975:6:12","nodeType":"YulIdentifier","src":"975:6:12"}],"functionName":{"name":"add","nativeSrc":"967:3:12","nodeType":"YulIdentifier","src":"967:3:12"},"nativeSrc":"967:15:12","nodeType":"YulFunctionCall","src":"967:15:12"}],"functionName":{"name":"add","nativeSrc":"955:3:12","nodeType":"YulIdentifier","src":"955:3:12"},"nativeSrc":"955:28:12","nodeType":"YulFunctionCall","src":"955:28:12"},"variableNames":[{"name":"ptr","nativeSrc":"948:3:12","nodeType":"YulIdentifier","src":"948:3:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1581,"isOffset":false,"isSlot":false,"src":"959:6:12","valueSize":1},{"declaration":1572,"isOffset":false,"isSlot":false,"src":"975:6:12","valueSize":1},{"declaration":1588,"isOffset":false,"isSlot":false,"src":"948:3:12","valueSize":1}],"id":1590,"nodeType":"InlineAssembly","src":"921:76:12"},{"body":{"id":1605,"nodeType":"Block","src":"1023:269:12","statements":[{"expression":{"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1041:5:12","subExpression":{"id":1592,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"1041:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1594,"nodeType":"ExpressionStatement","src":"1041:5:12"},{"AST":{"nativeSrc":"1124:86:12","nodeType":"YulBlock","src":"1124:86:12","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1154:3:12","nodeType":"YulIdentifier","src":"1154:3:12"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1168:5:12","nodeType":"YulIdentifier","src":"1168:5:12"},{"kind":"number","nativeSrc":"1175:2:12","nodeType":"YulLiteral","src":"1175:2:12","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1164:3:12","nodeType":"YulIdentifier","src":"1164:3:12"},"nativeSrc":"1164:14:12","nodeType":"YulFunctionCall","src":"1164:14:12"},{"name":"HEX_DIGITS","nativeSrc":"1180:10:12","nodeType":"YulIdentifier","src":"1180:10:12"}],"functionName":{"name":"byte","nativeSrc":"1159:4:12","nodeType":"YulIdentifier","src":"1159:4:12"},"nativeSrc":"1159:32:12","nodeType":"YulFunctionCall","src":"1159:32:12"}],"functionName":{"name":"mstore8","nativeSrc":"1146:7:12","nodeType":"YulIdentifier","src":"1146:7:12"},"nativeSrc":"1146:46:12","nodeType":"YulFunctionCall","src":"1146:46:12"},"nativeSrc":"1146:46:12","nodeType":"YulExpressionStatement","src":"1146:46:12"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1553,"isOffset":false,"isSlot":false,"src":"1180:10:12","valueSize":1},{"declaration":1588,"isOffset":false,"isSlot":false,"src":"1154:3:12","valueSize":1},{"declaration":1566,"isOffset":false,"isSlot":false,"src":"1168:5:12","valueSize":1}],"id":1595,"nodeType":"InlineAssembly","src":"1115:95:12"},{"expression":{"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"1227:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1236:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1227:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1599,"nodeType":"ExpressionStatement","src":"1227:11:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"1260:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1269:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1260:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1604,"nodeType":"IfStatement","src":"1256:21:12","trueBody":{"id":1603,"nodeType":"Break","src":"1272:5:12"}}]},"condition":{"hexValue":"74727565","id":1591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1017:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1606,"nodeType":"WhileStatement","src":"1010:282:12"},{"expression":{"id":1607,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"1312:6:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1570,"id":1608,"nodeType":"Return","src":"1305:13:12"}]}]},"documentation":{"id":1564,"nodeType":"StructuredDocumentation","src":"542:90:12","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1611,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:12","nodeType":"FunctionDefinition","parameters":{"id":1567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1566,"mutability":"mutable","name":"value","nameLocation":"663:5:12","nodeType":"VariableDeclaration","scope":1611,"src":"655:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1565,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:12"},"returnParameters":{"id":1570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1611,"src":"693:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1568,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:12"},"scope":1798,"src":"637:698:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1636,"nodeType":"Block","src":"1511:92:12","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"1542:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1550:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1542:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1560:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1542:20:12","trueExpression":{"hexValue":"2d","id":1625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1554:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"1588:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1629,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3606,"src":"1573:10:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$3606_$","typeString":"type(library SignedMath)"}},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1584:3:12","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":3605,"src":"1573:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1573:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1628,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"1564:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1564:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1528:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1619,"name":"string","nodeType":"ElementaryTypeName","src":"1528:6:12","typeDescriptions":{}}},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:6:12","memberName":"concat","nodeType":"MemberAccess","src":"1528:13:12","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1528:68:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1618,"id":1635,"nodeType":"Return","src":"1521:75:12"}]},"documentation":{"id":1612,"nodeType":"StructuredDocumentation","src":"1341:89:12","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1637,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1444:14:12","nodeType":"FunctionDefinition","parameters":{"id":1615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1614,"mutability":"mutable","name":"value","nameLocation":"1466:5:12","nodeType":"VariableDeclaration","scope":1637,"src":"1459:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1613,"name":"int256","nodeType":"ElementaryTypeName","src":"1459:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1458:14:12"},"returnParameters":{"id":1618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1617,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1637,"src":"1496:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1616,"name":"string","nodeType":"ElementaryTypeName","src":"1496:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1495:15:12"},"scope":1798,"src":"1435:168:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1656,"nodeType":"Block","src":"1782:100:12","statements":[{"id":1655,"nodeType":"UncheckedBlock","src":"1792:84:12","statements":[{"expression":{"arguments":[{"id":1646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"1835:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"1854:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1647,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"1842:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3501_$","typeString":"type(library Math)"}},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1847:6:12","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3443,"src":"1842:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1842:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1863:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1842:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1645,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1657,1740,1760],"referencedDeclaration":1740,"src":"1823:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1823:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1644,"id":1654,"nodeType":"Return","src":"1816:49:12"}]}]},"documentation":{"id":1638,"nodeType":"StructuredDocumentation","src":"1609:94:12","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1657,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1717:11:12","nodeType":"FunctionDefinition","parameters":{"id":1641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1640,"mutability":"mutable","name":"value","nameLocation":"1737:5:12","nodeType":"VariableDeclaration","scope":1657,"src":"1729:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1639,"name":"uint256","nodeType":"ElementaryTypeName","src":"1729:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1728:15:12"},"returnParameters":{"id":1644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1657,"src":"1767:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1642,"name":"string","nodeType":"ElementaryTypeName","src":"1767:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1766:15:12"},"scope":1798,"src":"1708:174:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1739,"nodeType":"Block","src":"2095:435:12","statements":[{"assignments":[1668],"declarations":[{"constant":false,"id":1668,"mutability":"mutable","name":"localValue","nameLocation":"2113:10:12","nodeType":"VariableDeclaration","scope":1739,"src":"2105:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1667,"name":"uint256","nodeType":"ElementaryTypeName","src":"2105:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1670,"initialValue":{"id":1669,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"2126:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2105:26:12"},{"assignments":[1672],"declarations":[{"constant":false,"id":1672,"mutability":"mutable","name":"buffer","nameLocation":"2154:6:12","nodeType":"VariableDeclaration","scope":1739,"src":"2141:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1671,"name":"bytes","nodeType":"ElementaryTypeName","src":"2141:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1681,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2173:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1676,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"2177:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2173:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2186:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2173:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2163:9:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1673,"name":"bytes","nodeType":"ElementaryTypeName","src":"2167:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2163:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2141:47:12"},{"expression":{"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1682,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"2198:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1684,"indexExpression":{"hexValue":"30","id":1683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2205:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2198:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2210:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2198:15:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1687,"nodeType":"ExpressionStatement","src":"2198:15:12"},{"expression":{"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1688,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"2223:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1690,"indexExpression":{"hexValue":"31","id":1689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2230:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2223:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2235:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2223:15:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1693,"nodeType":"ExpressionStatement","src":"2223:15:12"},{"body":{"id":1722,"nodeType":"Block","src":"2293:95:12","statements":[{"expression":{"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1708,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"2307:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1710,"indexExpression":{"id":1709,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"2314:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2307:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1711,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"2319:10:12","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1715,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1712,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"2330:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2343:3:12","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2330:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2319:28:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2307:40:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1717,"nodeType":"ExpressionStatement","src":"2307:40:12"},{"expression":{"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1718,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"2361:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2376:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2361:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1721,"nodeType":"ExpressionStatement","src":"2361:16:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1702,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"2281:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2285:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2281:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1723,"initializationExpression":{"assignments":[1695],"declarations":[{"constant":false,"id":1695,"mutability":"mutable","name":"i","nameLocation":"2261:1:12","nodeType":"VariableDeclaration","scope":1723,"src":"2253:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1694,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1701,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2265:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1697,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"2269:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2265:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2278:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2265:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2253:26:12"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2288:3:12","subExpression":{"id":1705,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"2290:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1707,"nodeType":"ExpressionStatement","src":"2288:3:12"},"nodeType":"ForStatement","src":"2248:140:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1724,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"2401:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2415:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2401:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1733,"nodeType":"IfStatement","src":"2397:96:12","trueBody":{"id":1732,"nodeType":"Block","src":"2418:75:12","statements":[{"errorCall":{"arguments":[{"id":1728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"2468:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1729,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"2475:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1727,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"2439:28:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2439:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1731,"nodeType":"RevertStatement","src":"2432:50:12"}]}},{"expression":{"arguments":[{"id":1736,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"2516:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1734,"name":"string","nodeType":"ElementaryTypeName","src":"2509:6:12","typeDescriptions":{}}},"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1666,"id":1738,"nodeType":"Return","src":"2502:21:12"}]},"documentation":{"id":1658,"nodeType":"StructuredDocumentation","src":"1888:112:12","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1740,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2014:11:12","nodeType":"FunctionDefinition","parameters":{"id":1663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1660,"mutability":"mutable","name":"value","nameLocation":"2034:5:12","nodeType":"VariableDeclaration","scope":1740,"src":"2026:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1659,"name":"uint256","nodeType":"ElementaryTypeName","src":"2026:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1662,"mutability":"mutable","name":"length","nameLocation":"2049:6:12","nodeType":"VariableDeclaration","scope":1740,"src":"2041:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1661,"name":"uint256","nodeType":"ElementaryTypeName","src":"2041:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2025:31:12"},"returnParameters":{"id":1666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1665,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1740,"src":"2080:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1664,"name":"string","nodeType":"ElementaryTypeName","src":"2080:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2079:15:12"},"scope":1798,"src":"2005:525:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1759,"nodeType":"Block","src":"2762:75:12","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1753,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"2807:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2799:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1751,"name":"uint160","nodeType":"ElementaryTypeName","src":"2799:7:12","typeDescriptions":{}}},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2791:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1749,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:12","typeDescriptions":{}}},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2791:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1756,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"2815:14:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1748,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1657,1740,1760],"referencedDeclaration":1740,"src":"2779:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2779:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1747,"id":1758,"nodeType":"Return","src":"2772:58:12"}]},"documentation":{"id":1741,"nodeType":"StructuredDocumentation","src":"2536:148:12","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":1760,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2698:11:12","nodeType":"FunctionDefinition","parameters":{"id":1744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1743,"mutability":"mutable","name":"addr","nameLocation":"2718:4:12","nodeType":"VariableDeclaration","scope":1760,"src":"2710:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1742,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2709:14:12"},"returnParameters":{"id":1747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1760,"src":"2747:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1745,"name":"string","nodeType":"ElementaryTypeName","src":"2747:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2746:15:12"},"scope":1798,"src":"2689:148:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1796,"nodeType":"Block","src":"2992:104:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1772,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"3015:1:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3009:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1770,"name":"bytes","nodeType":"ElementaryTypeName","src":"3009:5:12","typeDescriptions":{}}},"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3009:8:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3018:6:12","memberName":"length","nodeType":"MemberAccess","src":"3009:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1777,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"3034:1:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3028:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1775,"name":"bytes","nodeType":"ElementaryTypeName","src":"3028:5:12","typeDescriptions":{}}},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3028:8:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3037:6:12","memberName":"length","nodeType":"MemberAccess","src":"3028:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3009:34:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1784,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"3063:1:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3057:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1782,"name":"bytes","nodeType":"ElementaryTypeName","src":"3057:5:12","typeDescriptions":{}}},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:8:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1781,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3047:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3047:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1790,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"3086:1:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3080:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1788,"name":"bytes","nodeType":"ElementaryTypeName","src":"3080:5:12","typeDescriptions":{}}},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3080:8:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1787,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3070:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3047:42:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3009:80:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1769,"id":1795,"nodeType":"Return","src":"3002:87:12"}]},"documentation":{"id":1761,"nodeType":"StructuredDocumentation","src":"2843:66:12","text":" @dev Returns true if the two strings are equal."},"id":1797,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2923:5:12","nodeType":"FunctionDefinition","parameters":{"id":1766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1763,"mutability":"mutable","name":"a","nameLocation":"2943:1:12","nodeType":"VariableDeclaration","scope":1797,"src":"2929:15:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1762,"name":"string","nodeType":"ElementaryTypeName","src":"2929:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1765,"mutability":"mutable","name":"b","nameLocation":"2960:1:12","nodeType":"VariableDeclaration","scope":1797,"src":"2946:15:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1764,"name":"string","nodeType":"ElementaryTypeName","src":"2946:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2928:34:12"},"returnParameters":{"id":1769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1768,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1797,"src":"2986:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1767,"name":"bool","nodeType":"ElementaryTypeName","src":"2986:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2985:6:12"},"scope":1798,"src":"2914:182:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1799,"src":"251:2847:12","usedErrors":[1563],"usedEvents":[]}],"src":"101:2998:12"},"id":12},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[2146]},"id":2147,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1800,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":1801,"nodeType":"StructuredDocumentation","src":"138:205:13","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":2146,"linearizedBaseContracts":[2146],"name":"ECDSA","nameLocation":"352:5:13","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":1806,"members":[{"id":1802,"name":"NoError","nameLocation":"392:7:13","nodeType":"EnumValue","src":"392:7:13"},{"id":1803,"name":"InvalidSignature","nameLocation":"409:16:13","nodeType":"EnumValue","src":"409:16:13"},{"id":1804,"name":"InvalidSignatureLength","nameLocation":"435:22:13","nodeType":"EnumValue","src":"435:22:13"},{"id":1805,"name":"InvalidSignatureS","nameLocation":"467:17:13","nodeType":"EnumValue","src":"467:17:13"}],"name":"RecoverError","nameLocation":"369:12:13","nodeType":"EnumDefinition","src":"364:126:13"},{"documentation":{"id":1807,"nodeType":"StructuredDocumentation","src":"496:63:13","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":1809,"name":"ECDSAInvalidSignature","nameLocation":"570:21:13","nodeType":"ErrorDefinition","parameters":{"id":1808,"nodeType":"ParameterList","parameters":[],"src":"591:2:13"},"src":"564:30:13"},{"documentation":{"id":1810,"nodeType":"StructuredDocumentation","src":"600:60:13","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":1814,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:13","nodeType":"ErrorDefinition","parameters":{"id":1813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1812,"mutability":"mutable","name":"length","nameLocation":"707:6:13","nodeType":"VariableDeclaration","scope":1814,"src":"699:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1811,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:13"},"src":"665:50:13"},{"documentation":{"id":1815,"nodeType":"StructuredDocumentation","src":"721:85:13","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":1819,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:13","nodeType":"ErrorDefinition","parameters":{"id":1818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1817,"mutability":"mutable","name":"s","nameLocation":"848:1:13","nodeType":"VariableDeclaration","scope":1819,"src":"840:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1816,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:13"},"src":"811:40:13"},{"body":{"id":1871,"nodeType":"Block","src":"2242:653:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1834,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"2256:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2266:6:13","memberName":"length","nodeType":"MemberAccess","src":"2256:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":1836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2276:2:13","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2256:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1869,"nodeType":"Block","src":"2781:108:13","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2811:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2803:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1856,"name":"address","nodeType":"ElementaryTypeName","src":"2803:7:13","typeDescriptions":{}}},"id":1859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2803:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1860,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"2815:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1806_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2828:22:13","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1804,"src":"2815:35:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":1864,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"2860:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2870:6:13","memberName":"length","nodeType":"MemberAccess","src":"2860:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2852:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1862,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2852:7:13","typeDescriptions":{}}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2852:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1867,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2802:76:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1806_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1833,"id":1868,"nodeType":"Return","src":"2795:83:13"}]},"id":1870,"nodeType":"IfStatement","src":"2252:637:13","trueBody":{"id":1855,"nodeType":"Block","src":"2280:495:13","statements":[{"assignments":[1839],"declarations":[{"constant":false,"id":1839,"mutability":"mutable","name":"r","nameLocation":"2302:1:13","nodeType":"VariableDeclaration","scope":1855,"src":"2294:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1838,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2294:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1840,"nodeType":"VariableDeclarationStatement","src":"2294:9:13"},{"assignments":[1842],"declarations":[{"constant":false,"id":1842,"mutability":"mutable","name":"s","nameLocation":"2325:1:13","nodeType":"VariableDeclaration","scope":1855,"src":"2317:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1841,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2317:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1843,"nodeType":"VariableDeclarationStatement","src":"2317:9:13"},{"assignments":[1845],"declarations":[{"constant":false,"id":1845,"mutability":"mutable","name":"v","nameLocation":"2346:1:13","nodeType":"VariableDeclaration","scope":1855,"src":"2340:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1844,"name":"uint8","nodeType":"ElementaryTypeName","src":"2340:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1846,"nodeType":"VariableDeclarationStatement","src":"2340:7:13"},{"AST":{"nativeSrc":"2548:171:13","nodeType":"YulBlock","src":"2548:171:13","statements":[{"nativeSrc":"2566:32:13","nodeType":"YulAssignment","src":"2566:32:13","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2581:9:13","nodeType":"YulIdentifier","src":"2581:9:13"},{"kind":"number","nativeSrc":"2592:4:13","nodeType":"YulLiteral","src":"2592:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2577:3:13","nodeType":"YulIdentifier","src":"2577:3:13"},"nativeSrc":"2577:20:13","nodeType":"YulFunctionCall","src":"2577:20:13"}],"functionName":{"name":"mload","nativeSrc":"2571:5:13","nodeType":"YulIdentifier","src":"2571:5:13"},"nativeSrc":"2571:27:13","nodeType":"YulFunctionCall","src":"2571:27:13"},"variableNames":[{"name":"r","nativeSrc":"2566:1:13","nodeType":"YulIdentifier","src":"2566:1:13"}]},{"nativeSrc":"2615:32:13","nodeType":"YulAssignment","src":"2615:32:13","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2630:9:13","nodeType":"YulIdentifier","src":"2630:9:13"},{"kind":"number","nativeSrc":"2641:4:13","nodeType":"YulLiteral","src":"2641:4:13","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2626:3:13","nodeType":"YulIdentifier","src":"2626:3:13"},"nativeSrc":"2626:20:13","nodeType":"YulFunctionCall","src":"2626:20:13"}],"functionName":{"name":"mload","nativeSrc":"2620:5:13","nodeType":"YulIdentifier","src":"2620:5:13"},"nativeSrc":"2620:27:13","nodeType":"YulFunctionCall","src":"2620:27:13"},"variableNames":[{"name":"s","nativeSrc":"2615:1:13","nodeType":"YulIdentifier","src":"2615:1:13"}]},{"nativeSrc":"2664:41:13","nodeType":"YulAssignment","src":"2664:41:13","value":{"arguments":[{"kind":"number","nativeSrc":"2674:1:13","nodeType":"YulLiteral","src":"2674:1:13","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2687:9:13","nodeType":"YulIdentifier","src":"2687:9:13"},{"kind":"number","nativeSrc":"2698:4:13","nodeType":"YulLiteral","src":"2698:4:13","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2683:3:13","nodeType":"YulIdentifier","src":"2683:3:13"},"nativeSrc":"2683:20:13","nodeType":"YulFunctionCall","src":"2683:20:13"}],"functionName":{"name":"mload","nativeSrc":"2677:5:13","nodeType":"YulIdentifier","src":"2677:5:13"},"nativeSrc":"2677:27:13","nodeType":"YulFunctionCall","src":"2677:27:13"}],"functionName":{"name":"byte","nativeSrc":"2669:4:13","nodeType":"YulIdentifier","src":"2669:4:13"},"nativeSrc":"2669:36:13","nodeType":"YulFunctionCall","src":"2669:36:13"},"variableNames":[{"name":"v","nativeSrc":"2664:1:13","nodeType":"YulIdentifier","src":"2664:1:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1839,"isOffset":false,"isSlot":false,"src":"2566:1:13","valueSize":1},{"declaration":1842,"isOffset":false,"isSlot":false,"src":"2615:1:13","valueSize":1},{"declaration":1824,"isOffset":false,"isSlot":false,"src":"2581:9:13","valueSize":1},{"declaration":1824,"isOffset":false,"isSlot":false,"src":"2630:9:13","valueSize":1},{"declaration":1824,"isOffset":false,"isSlot":false,"src":"2687:9:13","valueSize":1},{"declaration":1845,"isOffset":false,"isSlot":false,"src":"2664:1:13","valueSize":1}],"id":1847,"nodeType":"InlineAssembly","src":"2539:180:13"},{"expression":{"arguments":[{"id":1849,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"2750:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1850,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"2756:1:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1851,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"2759:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1852,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"2762:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1848,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1872,1952,2060],"referencedDeclaration":2060,"src":"2739:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1806_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1806_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1833,"id":1854,"nodeType":"Return","src":"2732:32:13"}]}}]},"documentation":{"id":1820,"nodeType":"StructuredDocumentation","src":"857:1267:13","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":1872,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:13","nodeType":"FunctionDefinition","parameters":{"id":1825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1822,"mutability":"mutable","name":"hash","nameLocation":"2157:4:13","nodeType":"VariableDeclaration","scope":1872,"src":"2149:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1821,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2149:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1824,"mutability":"mutable","name":"signature","nameLocation":"2176:9:13","nodeType":"VariableDeclaration","scope":1872,"src":"2163:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1823,"name":"bytes","nodeType":"ElementaryTypeName","src":"2163:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:38:13"},"returnParameters":{"id":1833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1827,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1872,"src":"2210:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1826,"name":"address","nodeType":"ElementaryTypeName","src":"2210:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1872,"src":"2219:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1829,"nodeType":"UserDefinedTypeName","pathNode":{"id":1828,"name":"RecoverError","nameLocations":["2219:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":1806,"src":"2219:12:13"},"referencedDeclaration":1806,"src":"2219:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1872,"src":"2233:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1831,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2233:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2209:32:13"},"scope":2146,"src":"2129:766:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1901,"nodeType":"Block","src":"3789:168:13","statements":[{"assignments":[1883,1886,1888],"declarations":[{"constant":false,"id":1883,"mutability":"mutable","name":"recovered","nameLocation":"3808:9:13","nodeType":"VariableDeclaration","scope":1901,"src":"3800:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1882,"name":"address","nodeType":"ElementaryTypeName","src":"3800:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1886,"mutability":"mutable","name":"error","nameLocation":"3832:5:13","nodeType":"VariableDeclaration","scope":1901,"src":"3819:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1885,"nodeType":"UserDefinedTypeName","pathNode":{"id":1884,"name":"RecoverError","nameLocations":["3819:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":1806,"src":"3819:12:13"},"referencedDeclaration":1806,"src":"3819:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1888,"mutability":"mutable","name":"errorArg","nameLocation":"3847:8:13","nodeType":"VariableDeclaration","scope":1901,"src":"3839:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1887,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3839:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1893,"initialValue":{"arguments":[{"id":1890,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"3870:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1891,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"3876:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1889,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1872,1952,2060],"referencedDeclaration":1872,"src":"3859:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1806_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3859:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1806_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3799:87:13"},{"expression":{"arguments":[{"id":1895,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"3908:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},{"id":1896,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"3915:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1894,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"3896:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1806_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3896:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1898,"nodeType":"ExpressionStatement","src":"3896:28:13"},{"expression":{"id":1899,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"3941:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1881,"id":1900,"nodeType":"Return","src":"3934:16:13"}]},"documentation":{"id":1873,"nodeType":"StructuredDocumentation","src":"2901:796:13","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":1902,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3711:7:13","nodeType":"FunctionDefinition","parameters":{"id":1878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1875,"mutability":"mutable","name":"hash","nameLocation":"3727:4:13","nodeType":"VariableDeclaration","scope":1902,"src":"3719:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1874,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3719:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1877,"mutability":"mutable","name":"signature","nameLocation":"3746:9:13","nodeType":"VariableDeclaration","scope":1902,"src":"3733:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1876,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3718:38:13"},"returnParameters":{"id":1881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1902,"src":"3780:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1879,"name":"address","nodeType":"ElementaryTypeName","src":"3780:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3779:9:13"},"scope":2146,"src":"3702:255:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1951,"nodeType":"Block","src":"4285:342:13","statements":[{"id":1950,"nodeType":"UncheckedBlock","src":"4295:326:13","statements":[{"assignments":[1920],"declarations":[{"constant":false,"id":1920,"mutability":"mutable","name":"s","nameLocation":"4327:1:13","nodeType":"VariableDeclaration","scope":1950,"src":"4319:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1919,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4319:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1927,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1921,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"4331:2:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":1924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4344:66:13","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":1923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4336:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1922,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4336:7:13","typeDescriptions":{}}},"id":1925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4336:75:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4331:80:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4319:92:13"},{"assignments":[1929],"declarations":[{"constant":false,"id":1929,"mutability":"mutable","name":"v","nameLocation":"4528:1:13","nodeType":"VariableDeclaration","scope":1950,"src":"4522:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1928,"name":"uint8","nodeType":"ElementaryTypeName","src":"4522:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1942,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1934,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"4547:2:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4539:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1932,"name":"uint256","nodeType":"ElementaryTypeName","src":"4539:7:13","typeDescriptions":{}}},"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4539:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":1936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4554:3:13","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4539:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1938,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4538:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":1939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4561:2:13","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4538:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1930,"name":"uint8","nodeType":"ElementaryTypeName","src":"4532:5:13","typeDescriptions":{}}},"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4522:42:13"},{"expression":{"arguments":[{"id":1944,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1905,"src":"4596:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1945,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"4602:1:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1946,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"4605:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1947,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"4608:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1943,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1872,1952,2060],"referencedDeclaration":2060,"src":"4585:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1806_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4585:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1806_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1918,"id":1949,"nodeType":"Return","src":"4578:32:13"}]}]},"documentation":{"id":1903,"nodeType":"StructuredDocumentation","src":"3963:205:13","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"},"id":1952,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4182:10:13","nodeType":"FunctionDefinition","parameters":{"id":1910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1905,"mutability":"mutable","name":"hash","nameLocation":"4201:4:13","nodeType":"VariableDeclaration","scope":1952,"src":"4193:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1904,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4193:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1907,"mutability":"mutable","name":"r","nameLocation":"4215:1:13","nodeType":"VariableDeclaration","scope":1952,"src":"4207:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1906,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4207:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1909,"mutability":"mutable","name":"vs","nameLocation":"4226:2:13","nodeType":"VariableDeclaration","scope":1952,"src":"4218:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1908,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4218:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4192:37:13"},"returnParameters":{"id":1918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1912,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1952,"src":"4253:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1911,"name":"address","nodeType":"ElementaryTypeName","src":"4253:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1915,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1952,"src":"4262:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1914,"nodeType":"UserDefinedTypeName","pathNode":{"id":1913,"name":"RecoverError","nameLocations":["4262:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":1806,"src":"4262:12:13"},"referencedDeclaration":1806,"src":"4262:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1917,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1952,"src":"4276:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1916,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4276:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4252:32:13"},"scope":2146,"src":"4173:454:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1984,"nodeType":"Block","src":"4840:164:13","statements":[{"assignments":[1965,1968,1970],"declarations":[{"constant":false,"id":1965,"mutability":"mutable","name":"recovered","nameLocation":"4859:9:13","nodeType":"VariableDeclaration","scope":1984,"src":"4851:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1964,"name":"address","nodeType":"ElementaryTypeName","src":"4851:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1968,"mutability":"mutable","name":"error","nameLocation":"4883:5:13","nodeType":"VariableDeclaration","scope":1984,"src":"4870:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1967,"nodeType":"UserDefinedTypeName","pathNode":{"id":1966,"name":"RecoverError","nameLocations":["4870:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":1806,"src":"4870:12:13"},"referencedDeclaration":1806,"src":"4870:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1970,"mutability":"mutable","name":"errorArg","nameLocation":"4898:8:13","nodeType":"VariableDeclaration","scope":1984,"src":"4890:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1969,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4890:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1976,"initialValue":{"arguments":[{"id":1972,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"4921:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1973,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"4927:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1974,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"4930:2:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1971,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1872,1952,2060],"referencedDeclaration":1952,"src":"4910:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1806_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4910:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1806_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4850:83:13"},{"expression":{"arguments":[{"id":1978,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"4955:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},{"id":1979,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"4962:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1977,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"4943:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1806_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4943:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1981,"nodeType":"ExpressionStatement","src":"4943:28:13"},{"expression":{"id":1982,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"4988:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1963,"id":1983,"nodeType":"Return","src":"4981:16:13"}]},"documentation":{"id":1953,"nodeType":"StructuredDocumentation","src":"4633:116:13","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":1985,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4763:7:13","nodeType":"FunctionDefinition","parameters":{"id":1960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1955,"mutability":"mutable","name":"hash","nameLocation":"4779:4:13","nodeType":"VariableDeclaration","scope":1985,"src":"4771:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1954,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4771:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1957,"mutability":"mutable","name":"r","nameLocation":"4793:1:13","nodeType":"VariableDeclaration","scope":1985,"src":"4785:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1956,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4785:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1959,"mutability":"mutable","name":"vs","nameLocation":"4804:2:13","nodeType":"VariableDeclaration","scope":1985,"src":"4796:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1958,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4796:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4770:37:13"},"returnParameters":{"id":1963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1962,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1985,"src":"4831:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1961,"name":"address","nodeType":"ElementaryTypeName","src":"4831:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4830:9:13"},"scope":2146,"src":"4754:250:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2059,"nodeType":"Block","src":"5298:1372:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2006,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"6194:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6186:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2004,"name":"uint256","nodeType":"ElementaryTypeName","src":"6186:7:13","typeDescriptions":{}}},"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":2008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6199:66:13","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6186:79:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2020,"nodeType":"IfStatement","src":"6182:164:13","trueBody":{"id":2019,"nodeType":"Block","src":"6267:79:13","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6297:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6289:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2010,"name":"address","nodeType":"ElementaryTypeName","src":"6289:7:13","typeDescriptions":{}}},"id":2013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6289:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2014,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"6301:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1806_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6314:17:13","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1805,"src":"6301:30:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},{"id":2016,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"6333:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2017,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6288:47:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1806_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2003,"id":2018,"nodeType":"Return","src":"6281:54:13"}]}},{"assignments":[2022],"declarations":[{"constant":false,"id":2022,"mutability":"mutable","name":"signer","nameLocation":"6448:6:13","nodeType":"VariableDeclaration","scope":2059,"src":"6440:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2021,"name":"address","nodeType":"ElementaryTypeName","src":"6440:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2029,"initialValue":{"arguments":[{"id":2024,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"6467:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2025,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"6473:1:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2026,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"6476:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2027,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"6479:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2023,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6457:9:13","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6457:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6440:41:13"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2030,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"6495:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6513:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6505:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2031,"name":"address","nodeType":"ElementaryTypeName","src":"6505:7:13","typeDescriptions":{}}},"id":2034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6505:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6495:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2049,"nodeType":"IfStatement","src":"6491:113:13","trueBody":{"id":2048,"nodeType":"Block","src":"6517:87:13","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6547:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6539:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2036,"name":"address","nodeType":"ElementaryTypeName","src":"6539:7:13","typeDescriptions":{}}},"id":2039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6539:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2040,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"6551:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1806_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6564:16:13","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1803,"src":"6551:29:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":2044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6590:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6582:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2042,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6582:7:13","typeDescriptions":{}}},"id":2045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6582:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2046,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6538:55:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1806_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2003,"id":2047,"nodeType":"Return","src":"6531:62:13"}]}},{"expression":{"components":[{"id":2050,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"6622:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2051,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"6630:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1806_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6643:7:13","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1802,"src":"6630:20:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":2055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6652:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2053,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6652:7:13","typeDescriptions":{}}},"id":2056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6652:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2057,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6621:42:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1806_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2003,"id":2058,"nodeType":"Return","src":"6614:49:13"}]},"documentation":{"id":1986,"nodeType":"StructuredDocumentation","src":"5010:125:13","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2060,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5149:10:13","nodeType":"FunctionDefinition","parameters":{"id":1995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1988,"mutability":"mutable","name":"hash","nameLocation":"5177:4:13","nodeType":"VariableDeclaration","scope":2060,"src":"5169:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1987,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5169:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1990,"mutability":"mutable","name":"v","nameLocation":"5197:1:13","nodeType":"VariableDeclaration","scope":2060,"src":"5191:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1989,"name":"uint8","nodeType":"ElementaryTypeName","src":"5191:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1992,"mutability":"mutable","name":"r","nameLocation":"5216:1:13","nodeType":"VariableDeclaration","scope":2060,"src":"5208:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1991,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5208:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1994,"mutability":"mutable","name":"s","nameLocation":"5235:1:13","nodeType":"VariableDeclaration","scope":2060,"src":"5227:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1993,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5227:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5159:83:13"},"returnParameters":{"id":2003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1997,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2060,"src":"5266:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1996,"name":"address","nodeType":"ElementaryTypeName","src":"5266:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2000,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2060,"src":"5275:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1999,"nodeType":"UserDefinedTypeName","pathNode":{"id":1998,"name":"RecoverError","nameLocations":["5275:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":1806,"src":"5275:12:13"},"referencedDeclaration":1806,"src":"5275:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2002,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2060,"src":"5289:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2001,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5289:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5265:32:13"},"scope":2146,"src":"5140:1530:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2095,"nodeType":"Block","src":"6897:166:13","statements":[{"assignments":[2075,2078,2080],"declarations":[{"constant":false,"id":2075,"mutability":"mutable","name":"recovered","nameLocation":"6916:9:13","nodeType":"VariableDeclaration","scope":2095,"src":"6908:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2074,"name":"address","nodeType":"ElementaryTypeName","src":"6908:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2078,"mutability":"mutable","name":"error","nameLocation":"6940:5:13","nodeType":"VariableDeclaration","scope":2095,"src":"6927:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2077,"nodeType":"UserDefinedTypeName","pathNode":{"id":2076,"name":"RecoverError","nameLocations":["6927:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":1806,"src":"6927:12:13"},"referencedDeclaration":1806,"src":"6927:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2080,"mutability":"mutable","name":"errorArg","nameLocation":"6955:8:13","nodeType":"VariableDeclaration","scope":2095,"src":"6947:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2079,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6947:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2087,"initialValue":{"arguments":[{"id":2082,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"6978:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2083,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"6984:1:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2084,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"6987:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2085,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"6990:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2081,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1872,1952,2060],"referencedDeclaration":2060,"src":"6967:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1806_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1806_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6907:85:13"},{"expression":{"arguments":[{"id":2089,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"7014:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},{"id":2090,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"7021:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2088,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"7002:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1806_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7002:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2092,"nodeType":"ExpressionStatement","src":"7002:28:13"},{"expression":{"id":2093,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"7047:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2073,"id":2094,"nodeType":"Return","src":"7040:16:13"}]},"documentation":{"id":2061,"nodeType":"StructuredDocumentation","src":"6676:122:13","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2096,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6812:7:13","nodeType":"FunctionDefinition","parameters":{"id":2070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2063,"mutability":"mutable","name":"hash","nameLocation":"6828:4:13","nodeType":"VariableDeclaration","scope":2096,"src":"6820:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2062,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6820:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2065,"mutability":"mutable","name":"v","nameLocation":"6840:1:13","nodeType":"VariableDeclaration","scope":2096,"src":"6834:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2064,"name":"uint8","nodeType":"ElementaryTypeName","src":"6834:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2067,"mutability":"mutable","name":"r","nameLocation":"6851:1:13","nodeType":"VariableDeclaration","scope":2096,"src":"6843:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2066,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6843:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2069,"mutability":"mutable","name":"s","nameLocation":"6862:1:13","nodeType":"VariableDeclaration","scope":2096,"src":"6854:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2068,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6854:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6819:45:13"},"returnParameters":{"id":2073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2072,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2096,"src":"6888:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2071,"name":"address","nodeType":"ElementaryTypeName","src":"6888:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6887:9:13"},"scope":2146,"src":"6803:260:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2144,"nodeType":"Block","src":"7268:460:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2105,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"7282:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2106,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"7291:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1806_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7304:7:13","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1802,"src":"7291:20:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},"src":"7282:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"},"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2111,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"7378:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2112,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"7387:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1806_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7400:16:13","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1803,"src":"7387:29:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},"src":"7378:38:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"},"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2119,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"7483:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2120,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"7492:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1806_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7505:22:13","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1804,"src":"7492:35:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},"src":"7483:44:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2131,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"7617:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2132,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"7626:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1806_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7639:17:13","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1805,"src":"7626:30:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},"src":"7617:39:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2140,"nodeType":"IfStatement","src":"7613:109:13","trueBody":{"id":2139,"nodeType":"Block","src":"7658:64:13","statements":[{"errorCall":{"arguments":[{"id":2136,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"7702:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2135,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"7679:22:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7679:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2138,"nodeType":"RevertStatement","src":"7672:39:13"}]}},"id":2141,"nodeType":"IfStatement","src":"7479:243:13","trueBody":{"id":2130,"nodeType":"Block","src":"7529:78:13","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2126,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"7586:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7578:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2124,"name":"uint256","nodeType":"ElementaryTypeName","src":"7578:7:13","typeDescriptions":{}}},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7578:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2123,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"7550:27:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7550:46:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2129,"nodeType":"RevertStatement","src":"7543:53:13"}]}},"id":2142,"nodeType":"IfStatement","src":"7374:348:13","trueBody":{"id":2118,"nodeType":"Block","src":"7418:55:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2115,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"7439:21:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7439:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2117,"nodeType":"RevertStatement","src":"7432:30:13"}]}},"id":2143,"nodeType":"IfStatement","src":"7278:444:13","trueBody":{"id":2110,"nodeType":"Block","src":"7313:55:13","statements":[{"functionReturnParameters":2104,"id":2109,"nodeType":"Return","src":"7327:7:13"}]}}]},"documentation":{"id":2097,"nodeType":"StructuredDocumentation","src":"7069:122:13","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":2145,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7205:11:13","nodeType":"FunctionDefinition","parameters":{"id":2103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2100,"mutability":"mutable","name":"error","nameLocation":"7230:5:13","nodeType":"VariableDeclaration","scope":2145,"src":"7217:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2099,"nodeType":"UserDefinedTypeName","pathNode":{"id":2098,"name":"RecoverError","nameLocations":["7217:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":1806,"src":"7217:12:13"},"referencedDeclaration":1806,"src":"7217:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2102,"mutability":"mutable","name":"errorArg","nameLocation":"7245:8:13","nodeType":"VariableDeclaration","scope":2145,"src":"7237:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2101,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7237:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7216:38:13"},"returnParameters":{"id":2104,"nodeType":"ParameterList","parameters":[],"src":"7268:0:13"},"scope":2146,"src":"7196:532:13","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2147,"src":"344:7386:13","usedErrors":[1809,1814,1819],"usedEvents":[]}],"src":"112:7619:13"},"id":13},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[2373],"IERC5267":[172],"MessageHashUtils":[2447],"ShortString":[1222],"ShortStrings":[1433]},"id":2374,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2148,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":2150,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2374,"sourceUnit":2448,"src":"139:56:14","symbolAliases":[{"foreign":{"id":2149,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"147:16:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":2153,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2374,"sourceUnit":1434,"src":"196:62:14","symbolAliases":[{"foreign":{"id":2151,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"204:12:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2152,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"218:11:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":2155,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2374,"sourceUnit":173,"src":"259:55:14","symbolAliases":[{"foreign":{"id":2154,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"267:8:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2157,"name":"IERC5267","nameLocations":["1988:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":172,"src":"1988:8:14"},"id":2158,"nodeType":"InheritanceSpecifier","src":"1988:8:14"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":2156,"nodeType":"StructuredDocumentation","src":"316:1643:14","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":2373,"linearizedBaseContracts":[2373,172],"name":"EIP712","nameLocation":"1978:6:14","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2160,"libraryName":{"id":2159,"name":"ShortStrings","nameLocations":["2009:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":1433,"src":"2009:12:14"},"nodeType":"UsingForDirective","src":"2003:25:14"},{"constant":true,"id":2165,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:14","nodeType":"VariableDeclaration","scope":2373,"src":"2034:140:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2161,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":2163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":2162,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2167,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:14","nodeType":"VariableDeclaration","scope":2373,"src":"2373:48:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2166,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2169,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:14","nodeType":"VariableDeclaration","scope":2373,"src":"2427:40:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2168,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2171,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:14","nodeType":"VariableDeclaration","scope":2373,"src":"2473:37:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2170,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":2173,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:14","nodeType":"VariableDeclaration","scope":2373,"src":"2517:37:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2172,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2175,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:14","nodeType":"VariableDeclaration","scope":2373,"src":"2560:40:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2174,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2178,"mutability":"immutable","name":"_name","nameLocation":"2637:5:14","nodeType":"VariableDeclaration","scope":2373,"src":"2607:35:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"},"typeName":{"id":2177,"nodeType":"UserDefinedTypeName","pathNode":{"id":2176,"name":"ShortString","nameLocations":["2607:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"2607:11:14"},"referencedDeclaration":1222,"src":"2607:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":2181,"mutability":"immutable","name":"_version","nameLocation":"2678:8:14","nodeType":"VariableDeclaration","scope":2373,"src":"2648:38:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"},"typeName":{"id":2180,"nodeType":"UserDefinedTypeName","pathNode":{"id":2179,"name":"ShortString","nameLocations":["2648:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"2648:11:14"},"referencedDeclaration":1222,"src":"2648:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":2183,"mutability":"mutable","name":"_nameFallback","nameLocation":"2707:13:14","nodeType":"VariableDeclaration","scope":2373,"src":"2692:28:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2182,"name":"string","nodeType":"ElementaryTypeName","src":"2692:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2185,"mutability":"mutable","name":"_versionFallback","nameLocation":"2741:16:14","nodeType":"VariableDeclaration","scope":2373,"src":"2726:31:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2184,"name":"string","nodeType":"ElementaryTypeName","src":"2726:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":2242,"nodeType":"Block","src":"3383:376:14","statements":[{"expression":{"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2193,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"3393:5:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2196,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"3432:13:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2194,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"3401:4:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3406:25:14","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1374,"src":"3401:30:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1222_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3401:45:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}},"src":"3393:53:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}},"id":2199,"nodeType":"ExpressionStatement","src":"3393:53:14"},{"expression":{"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2200,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"3456:8:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2203,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"3501:16:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2201,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"3467:7:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3475:25:14","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1374,"src":"3467:33:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1222_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3467:51:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}},"src":"3456:62:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}},"id":2206,"nodeType":"ExpressionStatement","src":"3456:62:14"},{"expression":{"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2207,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"3528:11:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2211,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"3558:4:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3552:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2209,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:14","typeDescriptions":{}}},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3552:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2208,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3542:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3528:36:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2215,"nodeType":"ExpressionStatement","src":"3528:36:14"},{"expression":{"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2216,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"3574:14:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2220,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"3607:7:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3601:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2218,"name":"bytes","nodeType":"ElementaryTypeName","src":"3601:5:14","typeDescriptions":{}}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3601:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2217,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3591:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3574:42:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2224,"nodeType":"ExpressionStatement","src":"3574:42:14"},{"expression":{"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2225,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"3627:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2226,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3644:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3650:7:14","memberName":"chainid","nodeType":"MemberAccess","src":"3644:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3627:30:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2229,"nodeType":"ExpressionStatement","src":"3627:30:14"},{"expression":{"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2230,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"3667:22:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":2231,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"3692:21:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3692:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3667:48:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2234,"nodeType":"ExpressionStatement","src":"3667:48:14"},{"expression":{"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2235,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"3725:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2238,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3747:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2373","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2373","typeString":"contract EIP712"}],"id":2237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3739:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2236,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:14","typeDescriptions":{}}},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3725:27:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2241,"nodeType":"ExpressionStatement","src":"3725:27:14"}]},"documentation":{"id":2186,"nodeType":"StructuredDocumentation","src":"2764:559:14","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":2243,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2188,"mutability":"mutable","name":"name","nameLocation":"3354:4:14","nodeType":"VariableDeclaration","scope":2243,"src":"3340:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2187,"name":"string","nodeType":"ElementaryTypeName","src":"3340:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2190,"mutability":"mutable","name":"version","nameLocation":"3374:7:14","nodeType":"VariableDeclaration","scope":2243,"src":"3360:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2189,"name":"string","nodeType":"ElementaryTypeName","src":"3360:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3339:43:14"},"returnParameters":{"id":2192,"nodeType":"ParameterList","parameters":[],"src":"3383:0:14"},"scope":2373,"src":"3328:431:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2268,"nodeType":"Block","src":"3907:200:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2251,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3929:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2373","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2373","typeString":"contract EIP712"}],"id":2250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3921:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2249,"name":"address","nodeType":"ElementaryTypeName","src":"3921:7:14","typeDescriptions":{}}},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3921:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2253,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"3938:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3921:28:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2255,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3953:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3959:7:14","memberName":"chainid","nodeType":"MemberAccess","src":"3953:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2257,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"3970:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3953:31:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3921:63:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2266,"nodeType":"Block","src":"4046:55:14","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2263,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"4067:21:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4067:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2248,"id":2265,"nodeType":"Return","src":"4060:30:14"}]},"id":2267,"nodeType":"IfStatement","src":"3917:184:14","trueBody":{"id":2262,"nodeType":"Block","src":"3986:54:14","statements":[{"expression":{"id":2260,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"4007:22:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2248,"id":2261,"nodeType":"Return","src":"4000:29:14"}]}}]},"documentation":{"id":2244,"nodeType":"StructuredDocumentation","src":"3765:75:14","text":" @dev Returns the domain separator for the current chain."},"id":2269,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3854:18:14","nodeType":"FunctionDefinition","parameters":{"id":2245,"nodeType":"ParameterList","parameters":[],"src":"3872:2:14"},"returnParameters":{"id":2248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2269,"src":"3898:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3898:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3897:9:14"},"scope":2373,"src":"3845:262:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2289,"nodeType":"Block","src":"4177:115:14","statements":[{"expression":{"arguments":[{"arguments":[{"id":2277,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"4215:9:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2278,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"4226:11:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2279,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"4239:14:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2280,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4255:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4261:7:14","memberName":"chainid","nodeType":"MemberAccess","src":"4255:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2284,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4278:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2373","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2373","typeString":"contract EIP712"}],"id":2283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2282,"name":"address","nodeType":"ElementaryTypeName","src":"4270:7:14","typeDescriptions":{}}},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2275,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4204:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4208:6:14","memberName":"encode","nodeType":"MemberAccess","src":"4204:10:14","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4204:80:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2274,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4194:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4194:91:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2273,"id":2288,"nodeType":"Return","src":"4187:98:14"}]},"id":2290,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4122:21:14","nodeType":"FunctionDefinition","parameters":{"id":2270,"nodeType":"ParameterList","parameters":[],"src":"4143:2:14"},"returnParameters":{"id":2273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2290,"src":"4168:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2271,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:9:14"},"scope":2373,"src":"4113:179:14","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2305,"nodeType":"Block","src":"5003:90:14","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2300,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"5053:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5053:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2302,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"5075:10:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2298,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"5020:16:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$2447_$","typeString":"type(library MessageHashUtils)"}},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5037:15:14","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":2446,"src":"5020:32:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5020:66:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2297,"id":2304,"nodeType":"Return","src":"5013:73:14"}]},"documentation":{"id":2291,"nodeType":"StructuredDocumentation","src":"4298:614:14","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":2306,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4926:16:14","nodeType":"FunctionDefinition","parameters":{"id":2294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2293,"mutability":"mutable","name":"structHash","nameLocation":"4951:10:14","nodeType":"VariableDeclaration","scope":2306,"src":"4943:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2292,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4943:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4942:20:14"},"returnParameters":{"id":2297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2306,"src":"4994:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2295,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4994:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4993:9:14"},"scope":2373,"src":"4917:176:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[171],"body":{"id":2347,"nodeType":"Block","src":"5472:229:14","statements":[{"expression":{"components":[{"hexValue":"0f","id":2325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5503:7:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":2326,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"5533:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5533:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2328,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2372,"src":"5560:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5560:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":2330,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5590:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5596:7:14","memberName":"chainid","nodeType":"MemberAccess","src":"5590:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2334,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5625:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2373","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2373","typeString":"contract EIP712"}],"id":2333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5617:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2332,"name":"address","nodeType":"ElementaryTypeName","src":"5617:7:14","typeDescriptions":{}}},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5652:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5644:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2336,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5644:7:14","typeDescriptions":{}}},"id":2339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":2343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5682:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5668:13:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2340,"name":"uint256","nodeType":"ElementaryTypeName","src":"5672:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2341,"nodeType":"ArrayTypeName","src":"5672:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5668:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":2345,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5489:205:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":2324,"id":2346,"nodeType":"Return","src":"5482:212:14"}]},"documentation":{"id":2307,"nodeType":"StructuredDocumentation","src":"5099:40:14","text":" @dev See {IERC-5267}."},"functionSelector":"84b0196e","id":2348,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5153:12:14","nodeType":"FunctionDefinition","parameters":{"id":2308,"nodeType":"ParameterList","parameters":[],"src":"5165:2:14"},"returnParameters":{"id":2324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2310,"mutability":"mutable","name":"fields","nameLocation":"5249:6:14","nodeType":"VariableDeclaration","scope":2348,"src":"5242:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2309,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5242:6:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":2312,"mutability":"mutable","name":"name","nameLocation":"5283:4:14","nodeType":"VariableDeclaration","scope":2348,"src":"5269:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2311,"name":"string","nodeType":"ElementaryTypeName","src":"5269:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2314,"mutability":"mutable","name":"version","nameLocation":"5315:7:14","nodeType":"VariableDeclaration","scope":2348,"src":"5301:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2313,"name":"string","nodeType":"ElementaryTypeName","src":"5301:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2316,"mutability":"mutable","name":"chainId","nameLocation":"5344:7:14","nodeType":"VariableDeclaration","scope":2348,"src":"5336:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2315,"name":"uint256","nodeType":"ElementaryTypeName","src":"5336:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2318,"mutability":"mutable","name":"verifyingContract","nameLocation":"5373:17:14","nodeType":"VariableDeclaration","scope":2348,"src":"5365:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2317,"name":"address","nodeType":"ElementaryTypeName","src":"5365:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2320,"mutability":"mutable","name":"salt","nameLocation":"5412:4:14","nodeType":"VariableDeclaration","scope":2348,"src":"5404:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2319,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5404:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2323,"mutability":"mutable","name":"extensions","nameLocation":"5447:10:14","nodeType":"VariableDeclaration","scope":2348,"src":"5430:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2321,"name":"uint256","nodeType":"ElementaryTypeName","src":"5430:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2322,"nodeType":"ArrayTypeName","src":"5430:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5228:239:14"},"scope":2373,"src":"5144:557:14","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2359,"nodeType":"Block","src":"6082:65:14","statements":[{"expression":{"arguments":[{"id":2356,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"6126:13:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2354,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"6099:5:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6105:20:14","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1401,"src":"6099:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1222_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1222_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6099:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2353,"id":2358,"nodeType":"Return","src":"6092:48:14"}]},"documentation":{"id":2349,"nodeType":"StructuredDocumentation","src":"5707:256:14","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":2360,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6030:11:14","nodeType":"FunctionDefinition","parameters":{"id":2350,"nodeType":"ParameterList","parameters":[],"src":"6041:2:14"},"returnParameters":{"id":2353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2360,"src":"6067:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2351,"name":"string","nodeType":"ElementaryTypeName","src":"6067:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6066:15:14"},"scope":2373,"src":"6021:126:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2371,"nodeType":"Block","src":"6537:71:14","statements":[{"expression":{"arguments":[{"id":2368,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"6584:16:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2366,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"6554:8:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}},"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6563:20:14","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1401,"src":"6554:29:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1222_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1222_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6554:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2365,"id":2370,"nodeType":"Return","src":"6547:54:14"}]},"documentation":{"id":2361,"nodeType":"StructuredDocumentation","src":"6153:262:14","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":2372,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6482:14:14","nodeType":"FunctionDefinition","parameters":{"id":2362,"nodeType":"ParameterList","parameters":[],"src":"6496:2:14"},"returnParameters":{"id":2365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2364,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2372,"src":"6522:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2363,"name":"string","nodeType":"ElementaryTypeName","src":"6522:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6521:15:14"},"scope":2373,"src":"6473:135:14","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2374,"src":"1960:4650:14","usedErrors":[1230,1232],"usedEvents":[152]}],"src":"113:6498:14"},"id":14},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[2447],"Strings":[1798]},"id":2448,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2375,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:15"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":2377,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2448,"sourceUnit":1799,"src":"149:39:15","symbolAliases":[{"foreign":{"id":2376,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"157:7:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":2378,"nodeType":"StructuredDocumentation","src":"190:330:15","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":2447,"linearizedBaseContracts":[2447],"name":"MessageHashUtils","nameLocation":"529:16:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":2387,"nodeType":"Block","src":"1314:368:15","statements":[{"AST":{"nativeSrc":"1376:300:15","nodeType":"YulBlock","src":"1376:300:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1397:4:15","nodeType":"YulLiteral","src":"1397:4:15","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1403:34:15","nodeType":"YulLiteral","src":"1403:34:15","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1390:6:15","nodeType":"YulIdentifier","src":"1390:6:15"},"nativeSrc":"1390:48:15","nodeType":"YulFunctionCall","src":"1390:48:15"},"nativeSrc":"1390:48:15","nodeType":"YulExpressionStatement","src":"1390:48:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1499:4:15","nodeType":"YulLiteral","src":"1499:4:15","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1505:11:15","nodeType":"YulIdentifier","src":"1505:11:15"}],"functionName":{"name":"mstore","nativeSrc":"1492:6:15","nodeType":"YulIdentifier","src":"1492:6:15"},"nativeSrc":"1492:25:15","nodeType":"YulFunctionCall","src":"1492:25:15"},"nativeSrc":"1492:25:15","nodeType":"YulExpressionStatement","src":"1492:25:15"},{"nativeSrc":"1571:31:15","nodeType":"YulAssignment","src":"1571:31:15","value":{"arguments":[{"kind":"number","nativeSrc":"1591:4:15","nodeType":"YulLiteral","src":"1591:4:15","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1597:4:15","nodeType":"YulLiteral","src":"1597:4:15","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1581:9:15","nodeType":"YulIdentifier","src":"1581:9:15"},"nativeSrc":"1581:21:15","nodeType":"YulFunctionCall","src":"1581:21:15"},"variableNames":[{"name":"digest","nativeSrc":"1571:6:15","nodeType":"YulIdentifier","src":"1571:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2384,"isOffset":false,"isSlot":false,"src":"1571:6:15","valueSize":1},{"declaration":2381,"isOffset":false,"isSlot":false,"src":"1505:11:15","valueSize":1}],"id":2386,"nodeType":"InlineAssembly","src":"1367:309:15"}]},"documentation":{"id":2379,"nodeType":"StructuredDocumentation","src":"552:665:15","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":2388,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:15","nodeType":"FunctionDefinition","parameters":{"id":2382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2381,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:15","nodeType":"VariableDeclaration","scope":2388,"src":"1254:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2380,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:15"},"returnParameters":{"id":2385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2384,"mutability":"mutable","name":"digest","nameLocation":"1306:6:15","nodeType":"VariableDeclaration","scope":2388,"src":"1298:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2383,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:15"},"scope":2447,"src":"1222:460:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2413,"nodeType":"Block","src":"2234:143:15","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":2400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2286:32:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":2405,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"2343:7:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2351:6:15","memberName":"length","nodeType":"MemberAccess","src":"2343:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2403,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"2326:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$1798_$","typeString":"type(library Strings)"}},"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2334:8:15","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1611,"src":"2326:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2326:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2320:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2401,"name":"bytes","nodeType":"ElementaryTypeName","src":"2320:5:15","typeDescriptions":{}}},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2409,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"2361:7:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2273:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2397,"name":"bytes","nodeType":"ElementaryTypeName","src":"2273:5:15","typeDescriptions":{}}},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2279:6:15","memberName":"concat","nodeType":"MemberAccess","src":"2273:12:15","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:96:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2396,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2263:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2263:107:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2395,"id":2412,"nodeType":"Return","src":"2244:126:15"}]},"documentation":{"id":2389,"nodeType":"StructuredDocumentation","src":"1688:455:15","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":2414,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2157:22:15","nodeType":"FunctionDefinition","parameters":{"id":2392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2391,"mutability":"mutable","name":"message","nameLocation":"2193:7:15","nodeType":"VariableDeclaration","scope":2414,"src":"2180:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2390,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2179:22:15"},"returnParameters":{"id":2395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2414,"src":"2225:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2393,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2224:9:15"},"scope":2447,"src":"2148:229:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2433,"nodeType":"Block","src":"2831:80:15","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":2427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2875:10:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":2428,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"2887:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2429,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"2898:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2425,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2858:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2862:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"2858:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2858:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2424,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2848:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2848:56:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2423,"id":2432,"nodeType":"Return","src":"2841:63:15"}]},"documentation":{"id":2415,"nodeType":"StructuredDocumentation","src":"2383:332:15","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":2434,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2729:31:15","nodeType":"FunctionDefinition","parameters":{"id":2420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2417,"mutability":"mutable","name":"validator","nameLocation":"2769:9:15","nodeType":"VariableDeclaration","scope":2434,"src":"2761:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2416,"name":"address","nodeType":"ElementaryTypeName","src":"2761:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2419,"mutability":"mutable","name":"data","nameLocation":"2793:4:15","nodeType":"VariableDeclaration","scope":2434,"src":"2780:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2418,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2760:38:15"},"returnParameters":{"id":2423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2422,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2434,"src":"2822:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2421,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2822:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2821:9:15"},"scope":2447,"src":"2720:191:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2445,"nodeType":"Block","src":"3462:292:15","statements":[{"AST":{"nativeSrc":"3524:224:15","nodeType":"YulBlock","src":"3524:224:15","statements":[{"nativeSrc":"3538:22:15","nodeType":"YulVariableDeclaration","src":"3538:22:15","value":{"arguments":[{"kind":"number","nativeSrc":"3555:4:15","nodeType":"YulLiteral","src":"3555:4:15","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3549:5:15","nodeType":"YulIdentifier","src":"3549:5:15"},"nativeSrc":"3549:11:15","nodeType":"YulFunctionCall","src":"3549:11:15"},"variables":[{"name":"ptr","nativeSrc":"3542:3:15","nodeType":"YulTypedName","src":"3542:3:15","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"3580:3:15","nodeType":"YulIdentifier","src":"3580:3:15"},{"hexValue":"1901","kind":"string","nativeSrc":"3585:10:15","nodeType":"YulLiteral","src":"3585:10:15","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"3573:6:15","nodeType":"YulIdentifier","src":"3573:6:15"},"nativeSrc":"3573:23:15","nodeType":"YulFunctionCall","src":"3573:23:15"},"nativeSrc":"3573:23:15","nodeType":"YulExpressionStatement","src":"3573:23:15"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3620:3:15","nodeType":"YulIdentifier","src":"3620:3:15"},{"kind":"number","nativeSrc":"3625:4:15","nodeType":"YulLiteral","src":"3625:4:15","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"3616:3:15","nodeType":"YulIdentifier","src":"3616:3:15"},"nativeSrc":"3616:14:15","nodeType":"YulFunctionCall","src":"3616:14:15"},{"name":"domainSeparator","nativeSrc":"3632:15:15","nodeType":"YulIdentifier","src":"3632:15:15"}],"functionName":{"name":"mstore","nativeSrc":"3609:6:15","nodeType":"YulIdentifier","src":"3609:6:15"},"nativeSrc":"3609:39:15","nodeType":"YulFunctionCall","src":"3609:39:15"},"nativeSrc":"3609:39:15","nodeType":"YulExpressionStatement","src":"3609:39:15"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3672:3:15","nodeType":"YulIdentifier","src":"3672:3:15"},{"kind":"number","nativeSrc":"3677:4:15","nodeType":"YulLiteral","src":"3677:4:15","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3668:3:15","nodeType":"YulIdentifier","src":"3668:3:15"},"nativeSrc":"3668:14:15","nodeType":"YulFunctionCall","src":"3668:14:15"},{"name":"structHash","nativeSrc":"3684:10:15","nodeType":"YulIdentifier","src":"3684:10:15"}],"functionName":{"name":"mstore","nativeSrc":"3661:6:15","nodeType":"YulIdentifier","src":"3661:6:15"},"nativeSrc":"3661:34:15","nodeType":"YulFunctionCall","src":"3661:34:15"},"nativeSrc":"3661:34:15","nodeType":"YulExpressionStatement","src":"3661:34:15"},{"nativeSrc":"3708:30:15","nodeType":"YulAssignment","src":"3708:30:15","value":{"arguments":[{"name":"ptr","nativeSrc":"3728:3:15","nodeType":"YulIdentifier","src":"3728:3:15"},{"kind":"number","nativeSrc":"3733:4:15","nodeType":"YulLiteral","src":"3733:4:15","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"3718:9:15","nodeType":"YulIdentifier","src":"3718:9:15"},"nativeSrc":"3718:20:15","nodeType":"YulFunctionCall","src":"3718:20:15"},"variableNames":[{"name":"digest","nativeSrc":"3708:6:15","nodeType":"YulIdentifier","src":"3708:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2442,"isOffset":false,"isSlot":false,"src":"3708:6:15","valueSize":1},{"declaration":2437,"isOffset":false,"isSlot":false,"src":"3632:15:15","valueSize":1},{"declaration":2439,"isOffset":false,"isSlot":false,"src":"3684:10:15","valueSize":1}],"id":2444,"nodeType":"InlineAssembly","src":"3515:233:15"}]},"documentation":{"id":2435,"nodeType":"StructuredDocumentation","src":"2917:431:15","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":2446,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3362:15:15","nodeType":"FunctionDefinition","parameters":{"id":2440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2437,"mutability":"mutable","name":"domainSeparator","nameLocation":"3386:15:15","nodeType":"VariableDeclaration","scope":2446,"src":"3378:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2436,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3378:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2439,"mutability":"mutable","name":"structHash","nameLocation":"3411:10:15","nodeType":"VariableDeclaration","scope":2446,"src":"3403:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2438,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3403:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3377:45:15"},"returnParameters":{"id":2443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2442,"mutability":"mutable","name":"digest","nameLocation":"3454:6:15","nodeType":"VariableDeclaration","scope":2446,"src":"3446:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2441,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3446:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3445:16:15"},"scope":2447,"src":"3353:401:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2448,"src":"521:3235:15","usedErrors":[],"usedEvents":[]}],"src":"123:3634:15"},"id":15},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3501]},"id":3502,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2449,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2450,"nodeType":"StructuredDocumentation","src":"129:73:16","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3501,"linearizedBaseContracts":[3501],"name":"Math","nameLocation":"211:4:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2451,"nodeType":"StructuredDocumentation","src":"222:50:16","text":" @dev Muldiv operation overflow."},"errorSelector":"227bc153","id":2453,"name":"MathOverflowedMulDiv","nameLocation":"283:20:16","nodeType":"ErrorDefinition","parameters":{"id":2452,"nodeType":"ParameterList","parameters":[],"src":"303:2:16"},"src":"277:29:16"},{"canonicalName":"Math.Rounding","id":2458,"members":[{"id":2454,"name":"Floor","nameLocation":"336:5:16","nodeType":"EnumValue","src":"336:5:16"},{"id":2455,"name":"Ceil","nameLocation":"379:4:16","nodeType":"EnumValue","src":"379:4:16"},{"id":2456,"name":"Trunc","nameLocation":"421:5:16","nodeType":"EnumValue","src":"421:5:16"},{"id":2457,"name":"Expand","nameLocation":"451:6:16","nodeType":"EnumValue","src":"451:6:16"}],"name":"Rounding","nameLocation":"317:8:16","nodeType":"EnumDefinition","src":"312:169:16"},{"body":{"id":2489,"nodeType":"Block","src":"661:140:16","statements":[{"id":2488,"nodeType":"UncheckedBlock","src":"671:124:16","statements":[{"assignments":[2471],"declarations":[{"constant":false,"id":2471,"mutability":"mutable","name":"c","nameLocation":"703:1:16","nodeType":"VariableDeclaration","scope":2488,"src":"695:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2470,"name":"uint256","nodeType":"ElementaryTypeName","src":"695:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2475,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2472,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"707:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2473,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"711:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"707:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"695:17:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2476,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"730:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2477,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"734:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"730:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2483,"nodeType":"IfStatement","src":"726:28:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"745:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"752:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2481,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"744:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2469,"id":2482,"nodeType":"Return","src":"737:17:16"}},{"expression":{"components":[{"hexValue":"74727565","id":2484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"776:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2485,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"782:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2486,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"775:9:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2469,"id":2487,"nodeType":"Return","src":"768:16:16"}]}]},"documentation":{"id":2459,"nodeType":"StructuredDocumentation","src":"487:93:16","text":" @dev Returns the addition of two unsigned integers, with an overflow flag."},"id":2490,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"594:6:16","nodeType":"FunctionDefinition","parameters":{"id":2464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2461,"mutability":"mutable","name":"a","nameLocation":"609:1:16","nodeType":"VariableDeclaration","scope":2490,"src":"601:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2460,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2463,"mutability":"mutable","name":"b","nameLocation":"620:1:16","nodeType":"VariableDeclaration","scope":2490,"src":"612:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2462,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:16"},"returnParameters":{"id":2469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2490,"src":"646:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2465,"name":"bool","nodeType":"ElementaryTypeName","src":"646:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2490,"src":"652:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2467,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:15:16"},"scope":3501,"src":"585:216:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2517,"nodeType":"Block","src":"984:113:16","statements":[{"id":2516,"nodeType":"UncheckedBlock","src":"994:97:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2502,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"1022:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2503,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"1026:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1022:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2509,"nodeType":"IfStatement","src":"1018:28:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1037:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2507,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1036:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2501,"id":2508,"nodeType":"Return","src":"1029:17:16"}},{"expression":{"components":[{"hexValue":"74727565","id":2510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1068:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2511,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"1074:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2512,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"1078:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1074:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2514,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1067:13:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2501,"id":2515,"nodeType":"Return","src":"1060:20:16"}]}]},"documentation":{"id":2491,"nodeType":"StructuredDocumentation","src":"807:96:16","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag."},"id":2518,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"917:6:16","nodeType":"FunctionDefinition","parameters":{"id":2496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2493,"mutability":"mutable","name":"a","nameLocation":"932:1:16","nodeType":"VariableDeclaration","scope":2518,"src":"924:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2492,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2495,"mutability":"mutable","name":"b","nameLocation":"943:1:16","nodeType":"VariableDeclaration","scope":2518,"src":"935:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2494,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:22:16"},"returnParameters":{"id":2501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2518,"src":"969:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2497,"name":"bool","nodeType":"ElementaryTypeName","src":"969:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2518,"src":"975:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2499,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"968:15:16"},"scope":3501,"src":"908:189:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2559,"nodeType":"Block","src":"1283:417:16","statements":[{"id":2558,"nodeType":"UncheckedBlock","src":"1293:401:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2530,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"1551:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1556:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1551:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2537,"nodeType":"IfStatement","src":"1547:28:16","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":2533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1567:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":2534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1573:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2535,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1566:9:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2529,"id":2536,"nodeType":"Return","src":"1559:16:16"}},{"assignments":[2539],"declarations":[{"constant":false,"id":2539,"mutability":"mutable","name":"c","nameLocation":"1597:1:16","nodeType":"VariableDeclaration","scope":2558,"src":"1589:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2538,"name":"uint256","nodeType":"ElementaryTypeName","src":"1589:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2543,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2540,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"1601:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2541,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"1605:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1601:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1589:17:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2544,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"1624:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2545,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"1628:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2547,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"1633:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2553,"nodeType":"IfStatement","src":"1620:33:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1644:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1651:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2551,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1643:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2529,"id":2552,"nodeType":"Return","src":"1636:17:16"}},{"expression":{"components":[{"hexValue":"74727565","id":2554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1675:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2555,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"1681:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2556,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1674:9:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2529,"id":2557,"nodeType":"Return","src":"1667:16:16"}]}]},"documentation":{"id":2519,"nodeType":"StructuredDocumentation","src":"1103:99:16","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag."},"id":2560,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1216:6:16","nodeType":"FunctionDefinition","parameters":{"id":2524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2521,"mutability":"mutable","name":"a","nameLocation":"1231:1:16","nodeType":"VariableDeclaration","scope":2560,"src":"1223:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2520,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2523,"mutability":"mutable","name":"b","nameLocation":"1242:1:16","nodeType":"VariableDeclaration","scope":2560,"src":"1234:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2522,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:22:16"},"returnParameters":{"id":2529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2526,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2560,"src":"1268:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2525,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2528,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2560,"src":"1274:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2527,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:15:16"},"scope":3501,"src":"1207:493:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2587,"nodeType":"Block","src":"1887:114:16","statements":[{"id":2586,"nodeType":"UncheckedBlock","src":"1897:98:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2572,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"1925:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1930:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1925:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2579,"nodeType":"IfStatement","src":"1921:29:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1941:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1948:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2577,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1940:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2571,"id":2578,"nodeType":"Return","src":"1933:17:16"}},{"expression":{"components":[{"hexValue":"74727565","id":2580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1972:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2581,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"1978:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2582,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"1982:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1978:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2584,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1971:13:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2571,"id":2585,"nodeType":"Return","src":"1964:20:16"}]}]},"documentation":{"id":2561,"nodeType":"StructuredDocumentation","src":"1706:100:16","text":" @dev Returns the division of two unsigned integers, with a division by zero flag."},"id":2588,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1820:6:16","nodeType":"FunctionDefinition","parameters":{"id":2566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2563,"mutability":"mutable","name":"a","nameLocation":"1835:1:16","nodeType":"VariableDeclaration","scope":2588,"src":"1827:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2562,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2565,"mutability":"mutable","name":"b","nameLocation":"1846:1:16","nodeType":"VariableDeclaration","scope":2588,"src":"1838:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2564,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1826:22:16"},"returnParameters":{"id":2571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2568,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2588,"src":"1872:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2567,"name":"bool","nodeType":"ElementaryTypeName","src":"1872:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2570,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2588,"src":"1878:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2569,"name":"uint256","nodeType":"ElementaryTypeName","src":"1878:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1871:15:16"},"scope":3501,"src":"1811:190:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2615,"nodeType":"Block","src":"2198:114:16","statements":[{"id":2614,"nodeType":"UncheckedBlock","src":"2208:98:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2600,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"2236:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2607,"nodeType":"IfStatement","src":"2232:29:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2252:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2259:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2605,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2251:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2599,"id":2606,"nodeType":"Return","src":"2244:17:16"}},{"expression":{"components":[{"hexValue":"74727565","id":2608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2283:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2609,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"2289:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2610,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"2293:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2289:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2612,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2282:13:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2599,"id":2613,"nodeType":"Return","src":"2275:20:16"}]}]},"documentation":{"id":2589,"nodeType":"StructuredDocumentation","src":"2007:110:16","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."},"id":2616,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2131:6:16","nodeType":"FunctionDefinition","parameters":{"id":2594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2591,"mutability":"mutable","name":"a","nameLocation":"2146:1:16","nodeType":"VariableDeclaration","scope":2616,"src":"2138:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2590,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2593,"mutability":"mutable","name":"b","nameLocation":"2157:1:16","nodeType":"VariableDeclaration","scope":2616,"src":"2149:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2592,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2137:22:16"},"returnParameters":{"id":2599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2596,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2616,"src":"2183:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2595,"name":"bool","nodeType":"ElementaryTypeName","src":"2183:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2598,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2616,"src":"2189:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2597,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2182:15:16"},"scope":3501,"src":"2122:190:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2633,"nodeType":"Block","src":"2449:37:16","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2626,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"2466:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2627,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"2470:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2466:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2630,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"2478:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2466:13:16","trueExpression":{"id":2629,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"2474:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2625,"id":2632,"nodeType":"Return","src":"2459:20:16"}]},"documentation":{"id":2617,"nodeType":"StructuredDocumentation","src":"2318:59:16","text":" @dev Returns the largest of two numbers."},"id":2634,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"2391:3:16","nodeType":"FunctionDefinition","parameters":{"id":2622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2619,"mutability":"mutable","name":"a","nameLocation":"2403:1:16","nodeType":"VariableDeclaration","scope":2634,"src":"2395:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2618,"name":"uint256","nodeType":"ElementaryTypeName","src":"2395:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2621,"mutability":"mutable","name":"b","nameLocation":"2414:1:16","nodeType":"VariableDeclaration","scope":2634,"src":"2406:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2620,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:22:16"},"returnParameters":{"id":2625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2624,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2634,"src":"2440:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2623,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2439:9:16"},"scope":3501,"src":"2382:104:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2651,"nodeType":"Block","src":"2624:37:16","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2644,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"2641:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2645,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"2645:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2641:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2648,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"2653:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2641:13:16","trueExpression":{"id":2647,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"2649:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2643,"id":2650,"nodeType":"Return","src":"2634:20:16"}]},"documentation":{"id":2635,"nodeType":"StructuredDocumentation","src":"2492:60:16","text":" @dev Returns the smallest of two numbers."},"id":2652,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"2566:3:16","nodeType":"FunctionDefinition","parameters":{"id":2640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2637,"mutability":"mutable","name":"a","nameLocation":"2578:1:16","nodeType":"VariableDeclaration","scope":2652,"src":"2570:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2636,"name":"uint256","nodeType":"ElementaryTypeName","src":"2570:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2639,"mutability":"mutable","name":"b","nameLocation":"2589:1:16","nodeType":"VariableDeclaration","scope":2652,"src":"2581:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2638,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2569:22:16"},"returnParameters":{"id":2643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2642,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2652,"src":"2615:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2641,"name":"uint256","nodeType":"ElementaryTypeName","src":"2615:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2614:9:16"},"scope":3501,"src":"2557:104:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2674,"nodeType":"Block","src":"2845:82:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2662,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"2900:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2663,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"2904:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2900:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2665,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2899:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2666,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"2910:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2667,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"2914:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2910:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2669,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2909:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2919:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2909:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2899:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2661,"id":2673,"nodeType":"Return","src":"2892:28:16"}]},"documentation":{"id":2653,"nodeType":"StructuredDocumentation","src":"2667:102:16","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2675,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"2783:7:16","nodeType":"FunctionDefinition","parameters":{"id":2658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2655,"mutability":"mutable","name":"a","nameLocation":"2799:1:16","nodeType":"VariableDeclaration","scope":2675,"src":"2791:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2654,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2657,"mutability":"mutable","name":"b","nameLocation":"2810:1:16","nodeType":"VariableDeclaration","scope":2675,"src":"2802:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2656,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2790:22:16"},"returnParameters":{"id":2661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2660,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2675,"src":"2836:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2659,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2835:9:16"},"scope":3501,"src":"2774:153:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2708,"nodeType":"Block","src":"3219:260:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2685,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"3233:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3238:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3233:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2693,"nodeType":"IfStatement","src":"3229:127:16","trueBody":{"id":2692,"nodeType":"Block","src":"3241:115:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2688,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"3340:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2689,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"3344:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3340:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2684,"id":2691,"nodeType":"Return","src":"3333:12:16"}]}},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2694,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"3444:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3449:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3444:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2698,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"3458:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3462:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3458:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2701,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3457:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2702,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"3467:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3457:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3471:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3457:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3444:28:16","trueExpression":{"hexValue":"30","id":2697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3453:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2684,"id":2707,"nodeType":"Return","src":"3437:35:16"}]},"documentation":{"id":2676,"nodeType":"StructuredDocumentation","src":"2933:210:16","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":2709,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3157:7:16","nodeType":"FunctionDefinition","parameters":{"id":2681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2678,"mutability":"mutable","name":"a","nameLocation":"3173:1:16","nodeType":"VariableDeclaration","scope":2709,"src":"3165:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2677,"name":"uint256","nodeType":"ElementaryTypeName","src":"3165:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2680,"mutability":"mutable","name":"b","nameLocation":"3184:1:16","nodeType":"VariableDeclaration","scope":2709,"src":"3176:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2679,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3164:22:16"},"returnParameters":{"id":2684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2709,"src":"3210:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2682,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:9:16"},"scope":3501,"src":"3148:331:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2834,"nodeType":"Block","src":"3901:4018:16","statements":[{"id":2833,"nodeType":"UncheckedBlock","src":"3911:4002:16","statements":[{"assignments":[2722],"declarations":[{"constant":false,"id":2722,"mutability":"mutable","name":"prod0","nameLocation":"4240:5:16","nodeType":"VariableDeclaration","scope":2833,"src":"4232:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2721,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2726,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2723,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"4248:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2724,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"4252:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4248:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4232:21:16"},{"assignments":[2728],"declarations":[{"constant":false,"id":2728,"mutability":"mutable","name":"prod1","nameLocation":"4320:5:16","nodeType":"VariableDeclaration","scope":2833,"src":"4312:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2727,"name":"uint256","nodeType":"ElementaryTypeName","src":"4312:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2729,"nodeType":"VariableDeclarationStatement","src":"4312:13:16"},{"AST":{"nativeSrc":"4392:122:16","nodeType":"YulBlock","src":"4392:122:16","statements":[{"nativeSrc":"4410:30:16","nodeType":"YulVariableDeclaration","src":"4410:30:16","value":{"arguments":[{"name":"x","nativeSrc":"4427:1:16","nodeType":"YulIdentifier","src":"4427:1:16"},{"name":"y","nativeSrc":"4430:1:16","nodeType":"YulIdentifier","src":"4430:1:16"},{"arguments":[{"kind":"number","nativeSrc":"4437:1:16","nodeType":"YulLiteral","src":"4437:1:16","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4433:3:16","nodeType":"YulIdentifier","src":"4433:3:16"},"nativeSrc":"4433:6:16","nodeType":"YulFunctionCall","src":"4433:6:16"}],"functionName":{"name":"mulmod","nativeSrc":"4420:6:16","nodeType":"YulIdentifier","src":"4420:6:16"},"nativeSrc":"4420:20:16","nodeType":"YulFunctionCall","src":"4420:20:16"},"variables":[{"name":"mm","nativeSrc":"4414:2:16","nodeType":"YulTypedName","src":"4414:2:16","type":""}]},{"nativeSrc":"4457:43:16","nodeType":"YulAssignment","src":"4457:43:16","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"4474:2:16","nodeType":"YulIdentifier","src":"4474:2:16"},{"name":"prod0","nativeSrc":"4478:5:16","nodeType":"YulIdentifier","src":"4478:5:16"}],"functionName":{"name":"sub","nativeSrc":"4470:3:16","nodeType":"YulIdentifier","src":"4470:3:16"},"nativeSrc":"4470:14:16","nodeType":"YulFunctionCall","src":"4470:14:16"},{"arguments":[{"name":"mm","nativeSrc":"4489:2:16","nodeType":"YulIdentifier","src":"4489:2:16"},{"name":"prod0","nativeSrc":"4493:5:16","nodeType":"YulIdentifier","src":"4493:5:16"}],"functionName":{"name":"lt","nativeSrc":"4486:2:16","nodeType":"YulIdentifier","src":"4486:2:16"},"nativeSrc":"4486:13:16","nodeType":"YulFunctionCall","src":"4486:13:16"}],"functionName":{"name":"sub","nativeSrc":"4466:3:16","nodeType":"YulIdentifier","src":"4466:3:16"},"nativeSrc":"4466:34:16","nodeType":"YulFunctionCall","src":"4466:34:16"},"variableNames":[{"name":"prod1","nativeSrc":"4457:5:16","nodeType":"YulIdentifier","src":"4457:5:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2722,"isOffset":false,"isSlot":false,"src":"4478:5:16","valueSize":1},{"declaration":2722,"isOffset":false,"isSlot":false,"src":"4493:5:16","valueSize":1},{"declaration":2728,"isOffset":false,"isSlot":false,"src":"4457:5:16","valueSize":1},{"declaration":2712,"isOffset":false,"isSlot":false,"src":"4427:1:16","valueSize":1},{"declaration":2714,"isOffset":false,"isSlot":false,"src":"4430:1:16","valueSize":1}],"id":2730,"nodeType":"InlineAssembly","src":"4383:131:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2731,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"4595:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4604:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4595:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2739,"nodeType":"IfStatement","src":"4591:368:16","trueBody":{"id":2738,"nodeType":"Block","src":"4607:352:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2734,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"4925:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2735,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"4933:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2720,"id":2737,"nodeType":"Return","src":"4918:26:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2740,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"5065:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2741,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"5080:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2747,"nodeType":"IfStatement","src":"5061:88:16","trueBody":{"id":2746,"nodeType":"Block","src":"5087:62:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2743,"name":"MathOverflowedMulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"5112:20:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2745,"nodeType":"RevertStatement","src":"5105:29:16"}]}},{"assignments":[2749],"declarations":[{"constant":false,"id":2749,"mutability":"mutable","name":"remainder","nameLocation":"5412:9:16","nodeType":"VariableDeclaration","scope":2833,"src":"5404:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2748,"name":"uint256","nodeType":"ElementaryTypeName","src":"5404:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2750,"nodeType":"VariableDeclarationStatement","src":"5404:17:16"},{"AST":{"nativeSrc":"5444:291:16","nodeType":"YulBlock","src":"5444:291:16","statements":[{"nativeSrc":"5513:38:16","nodeType":"YulAssignment","src":"5513:38:16","value":{"arguments":[{"name":"x","nativeSrc":"5533:1:16","nodeType":"YulIdentifier","src":"5533:1:16"},{"name":"y","nativeSrc":"5536:1:16","nodeType":"YulIdentifier","src":"5536:1:16"},{"name":"denominator","nativeSrc":"5539:11:16","nodeType":"YulIdentifier","src":"5539:11:16"}],"functionName":{"name":"mulmod","nativeSrc":"5526:6:16","nodeType":"YulIdentifier","src":"5526:6:16"},"nativeSrc":"5526:25:16","nodeType":"YulFunctionCall","src":"5526:25:16"},"variableNames":[{"name":"remainder","nativeSrc":"5513:9:16","nodeType":"YulIdentifier","src":"5513:9:16"}]},{"nativeSrc":"5633:41:16","nodeType":"YulAssignment","src":"5633:41:16","value":{"arguments":[{"name":"prod1","nativeSrc":"5646:5:16","nodeType":"YulIdentifier","src":"5646:5:16"},{"arguments":[{"name":"remainder","nativeSrc":"5656:9:16","nodeType":"YulIdentifier","src":"5656:9:16"},{"name":"prod0","nativeSrc":"5667:5:16","nodeType":"YulIdentifier","src":"5667:5:16"}],"functionName":{"name":"gt","nativeSrc":"5653:2:16","nodeType":"YulIdentifier","src":"5653:2:16"},"nativeSrc":"5653:20:16","nodeType":"YulFunctionCall","src":"5653:20:16"}],"functionName":{"name":"sub","nativeSrc":"5642:3:16","nodeType":"YulIdentifier","src":"5642:3:16"},"nativeSrc":"5642:32:16","nodeType":"YulFunctionCall","src":"5642:32:16"},"variableNames":[{"name":"prod1","nativeSrc":"5633:5:16","nodeType":"YulIdentifier","src":"5633:5:16"}]},{"nativeSrc":"5691:30:16","nodeType":"YulAssignment","src":"5691:30:16","value":{"arguments":[{"name":"prod0","nativeSrc":"5704:5:16","nodeType":"YulIdentifier","src":"5704:5:16"},{"name":"remainder","nativeSrc":"5711:9:16","nodeType":"YulIdentifier","src":"5711:9:16"}],"functionName":{"name":"sub","nativeSrc":"5700:3:16","nodeType":"YulIdentifier","src":"5700:3:16"},"nativeSrc":"5700:21:16","nodeType":"YulFunctionCall","src":"5700:21:16"},"variableNames":[{"name":"prod0","nativeSrc":"5691:5:16","nodeType":"YulIdentifier","src":"5691:5:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2716,"isOffset":false,"isSlot":false,"src":"5539:11:16","valueSize":1},{"declaration":2722,"isOffset":false,"isSlot":false,"src":"5667:5:16","valueSize":1},{"declaration":2722,"isOffset":false,"isSlot":false,"src":"5691:5:16","valueSize":1},{"declaration":2722,"isOffset":false,"isSlot":false,"src":"5704:5:16","valueSize":1},{"declaration":2728,"isOffset":false,"isSlot":false,"src":"5633:5:16","valueSize":1},{"declaration":2728,"isOffset":false,"isSlot":false,"src":"5646:5:16","valueSize":1},{"declaration":2749,"isOffset":false,"isSlot":false,"src":"5513:9:16","valueSize":1},{"declaration":2749,"isOffset":false,"isSlot":false,"src":"5656:9:16","valueSize":1},{"declaration":2749,"isOffset":false,"isSlot":false,"src":"5711:9:16","valueSize":1},{"declaration":2712,"isOffset":false,"isSlot":false,"src":"5533:1:16","valueSize":1},{"declaration":2714,"isOffset":false,"isSlot":false,"src":"5536:1:16","valueSize":1}],"id":2751,"nodeType":"InlineAssembly","src":"5435:300:16"},{"assignments":[2753],"declarations":[{"constant":false,"id":2753,"mutability":"mutable","name":"twos","nameLocation":"5947:4:16","nodeType":"VariableDeclaration","scope":2833,"src":"5939:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2752,"name":"uint256","nodeType":"ElementaryTypeName","src":"5939:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2760,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2754,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"5954:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":2755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5969:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2756,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"5973:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5969:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2758,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5968:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5954:31:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5939:46:16"},{"AST":{"nativeSrc":"6008:362:16","nodeType":"YulBlock","src":"6008:362:16","statements":[{"nativeSrc":"6073:37:16","nodeType":"YulAssignment","src":"6073:37:16","value":{"arguments":[{"name":"denominator","nativeSrc":"6092:11:16","nodeType":"YulIdentifier","src":"6092:11:16"},{"name":"twos","nativeSrc":"6105:4:16","nodeType":"YulIdentifier","src":"6105:4:16"}],"functionName":{"name":"div","nativeSrc":"6088:3:16","nodeType":"YulIdentifier","src":"6088:3:16"},"nativeSrc":"6088:22:16","nodeType":"YulFunctionCall","src":"6088:22:16"},"variableNames":[{"name":"denominator","nativeSrc":"6073:11:16","nodeType":"YulIdentifier","src":"6073:11:16"}]},{"nativeSrc":"6177:25:16","nodeType":"YulAssignment","src":"6177:25:16","value":{"arguments":[{"name":"prod0","nativeSrc":"6190:5:16","nodeType":"YulIdentifier","src":"6190:5:16"},{"name":"twos","nativeSrc":"6197:4:16","nodeType":"YulIdentifier","src":"6197:4:16"}],"functionName":{"name":"div","nativeSrc":"6186:3:16","nodeType":"YulIdentifier","src":"6186:3:16"},"nativeSrc":"6186:16:16","nodeType":"YulFunctionCall","src":"6186:16:16"},"variableNames":[{"name":"prod0","nativeSrc":"6177:5:16","nodeType":"YulIdentifier","src":"6177:5:16"}]},{"nativeSrc":"6317:39:16","nodeType":"YulAssignment","src":"6317:39:16","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6337:1:16","nodeType":"YulLiteral","src":"6337:1:16","type":"","value":"0"},{"name":"twos","nativeSrc":"6340:4:16","nodeType":"YulIdentifier","src":"6340:4:16"}],"functionName":{"name":"sub","nativeSrc":"6333:3:16","nodeType":"YulIdentifier","src":"6333:3:16"},"nativeSrc":"6333:12:16","nodeType":"YulFunctionCall","src":"6333:12:16"},{"name":"twos","nativeSrc":"6347:4:16","nodeType":"YulIdentifier","src":"6347:4:16"}],"functionName":{"name":"div","nativeSrc":"6329:3:16","nodeType":"YulIdentifier","src":"6329:3:16"},"nativeSrc":"6329:23:16","nodeType":"YulFunctionCall","src":"6329:23:16"},{"kind":"number","nativeSrc":"6354:1:16","nodeType":"YulLiteral","src":"6354:1:16","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6325:3:16","nodeType":"YulIdentifier","src":"6325:3:16"},"nativeSrc":"6325:31:16","nodeType":"YulFunctionCall","src":"6325:31:16"},"variableNames":[{"name":"twos","nativeSrc":"6317:4:16","nodeType":"YulIdentifier","src":"6317:4:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2716,"isOffset":false,"isSlot":false,"src":"6073:11:16","valueSize":1},{"declaration":2716,"isOffset":false,"isSlot":false,"src":"6092:11:16","valueSize":1},{"declaration":2722,"isOffset":false,"isSlot":false,"src":"6177:5:16","valueSize":1},{"declaration":2722,"isOffset":false,"isSlot":false,"src":"6190:5:16","valueSize":1},{"declaration":2753,"isOffset":false,"isSlot":false,"src":"6105:4:16","valueSize":1},{"declaration":2753,"isOffset":false,"isSlot":false,"src":"6197:4:16","valueSize":1},{"declaration":2753,"isOffset":false,"isSlot":false,"src":"6317:4:16","valueSize":1},{"declaration":2753,"isOffset":false,"isSlot":false,"src":"6340:4:16","valueSize":1},{"declaration":2753,"isOffset":false,"isSlot":false,"src":"6347:4:16","valueSize":1}],"id":2761,"nodeType":"InlineAssembly","src":"5999:371:16"},{"expression":{"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2762,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"6436:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2763,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"6445:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2764,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"6453:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6445:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6436:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2767,"nodeType":"ExpressionStatement","src":"6436:21:16"},{"assignments":[2769],"declarations":[{"constant":false,"id":2769,"mutability":"mutable","name":"inverse","nameLocation":"6783:7:16","nodeType":"VariableDeclaration","scope":2833,"src":"6775:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2768,"name":"uint256","nodeType":"ElementaryTypeName","src":"6775:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2776,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6794:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2771,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"6798:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6794:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2773,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6793:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6813:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6793:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6775:39:16"},{"expression":{"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2777,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"7031:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7042:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2779,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"7046:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2780,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"7060:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7046:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7042:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7031:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2784,"nodeType":"ExpressionStatement","src":"7031:36:16"},{"expression":{"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2785,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"7100:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7111:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2787,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"7115:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2788,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"7129:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7115:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7111:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7100:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2792,"nodeType":"ExpressionStatement","src":"7100:36:16"},{"expression":{"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2793,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"7170:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7181:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2795,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"7185:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2796,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"7199:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7185:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7181:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7170:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2800,"nodeType":"ExpressionStatement","src":"7170:36:16"},{"expression":{"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2801,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"7240:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2803,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"7255:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2804,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"7269:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7255:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7251:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7240:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2808,"nodeType":"ExpressionStatement","src":"7240:36:16"},{"expression":{"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2809,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"7310:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7321:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2811,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"7325:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2812,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"7339:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7325:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7321:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7310:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2816,"nodeType":"ExpressionStatement","src":"7310:36:16"},{"expression":{"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2817,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"7381:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7392:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2819,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"7396:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2820,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"7410:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7396:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7392:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7381:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2824,"nodeType":"ExpressionStatement","src":"7381:36:16"},{"expression":{"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2825,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"7851:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2826,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"7860:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2827,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"7868:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7860:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7851:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2830,"nodeType":"ExpressionStatement","src":"7851:24:16"},{"expression":{"id":2831,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"7896:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2720,"id":2832,"nodeType":"Return","src":"7889:13:16"}]}]},"documentation":{"id":2710,"nodeType":"StructuredDocumentation","src":"3485:313:16","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":2835,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"3812:6:16","nodeType":"FunctionDefinition","parameters":{"id":2717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2712,"mutability":"mutable","name":"x","nameLocation":"3827:1:16","nodeType":"VariableDeclaration","scope":2835,"src":"3819:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2711,"name":"uint256","nodeType":"ElementaryTypeName","src":"3819:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2714,"mutability":"mutable","name":"y","nameLocation":"3838:1:16","nodeType":"VariableDeclaration","scope":2835,"src":"3830:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2713,"name":"uint256","nodeType":"ElementaryTypeName","src":"3830:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2716,"mutability":"mutable","name":"denominator","nameLocation":"3849:11:16","nodeType":"VariableDeclaration","scope":2835,"src":"3841:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2715,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3818:43:16"},"returnParameters":{"id":2720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2719,"mutability":"mutable","name":"result","nameLocation":"3893:6:16","nodeType":"VariableDeclaration","scope":2835,"src":"3885:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2718,"name":"uint256","nodeType":"ElementaryTypeName","src":"3885:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3884:16:16"},"scope":3501,"src":"3803:4116:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2877,"nodeType":"Block","src":"8161:192:16","statements":[{"assignments":[2851],"declarations":[{"constant":false,"id":2851,"mutability":"mutable","name":"result","nameLocation":"8179:6:16","nodeType":"VariableDeclaration","scope":2877,"src":"8171:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2850,"name":"uint256","nodeType":"ElementaryTypeName","src":"8171:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2857,"initialValue":{"arguments":[{"id":2853,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"8195:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2854,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"8198:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2855,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"8201:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2852,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2835,2878],"referencedDeclaration":2835,"src":"8188:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8188:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8171:42:16"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2859,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"8244:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"}],"id":2858,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"8227:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2458_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2862,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"8264:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2863,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"8267:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2864,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"8270:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2861,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"8257:6:16","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8257:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8285:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8257:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8227:59:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2874,"nodeType":"IfStatement","src":"8223:101:16","trueBody":{"id":2873,"nodeType":"Block","src":"8288:36:16","statements":[{"expression":{"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2869,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2851,"src":"8302:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8312:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8302:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2872,"nodeType":"ExpressionStatement","src":"8302:11:16"}]}},{"expression":{"id":2875,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2851,"src":"8340:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2849,"id":2876,"nodeType":"Return","src":"8333:13:16"}]},"documentation":{"id":2836,"nodeType":"StructuredDocumentation","src":"7925:121:16","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2878,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"8060:6:16","nodeType":"FunctionDefinition","parameters":{"id":2846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2838,"mutability":"mutable","name":"x","nameLocation":"8075:1:16","nodeType":"VariableDeclaration","scope":2878,"src":"8067:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2837,"name":"uint256","nodeType":"ElementaryTypeName","src":"8067:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2840,"mutability":"mutable","name":"y","nameLocation":"8086:1:16","nodeType":"VariableDeclaration","scope":2878,"src":"8078:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2839,"name":"uint256","nodeType":"ElementaryTypeName","src":"8078:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2842,"mutability":"mutable","name":"denominator","nameLocation":"8097:11:16","nodeType":"VariableDeclaration","scope":2878,"src":"8089:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2841,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2845,"mutability":"mutable","name":"rounding","nameLocation":"8119:8:16","nodeType":"VariableDeclaration","scope":2878,"src":"8110:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"},"typeName":{"id":2844,"nodeType":"UserDefinedTypeName","pathNode":{"id":2843,"name":"Rounding","nameLocations":["8110:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":2458,"src":"8110:8:16"},"referencedDeclaration":2458,"src":"8110:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8066:62:16"},"returnParameters":{"id":2849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2878,"src":"8152:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2847,"name":"uint256","nodeType":"ElementaryTypeName","src":"8152:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8151:9:16"},"scope":3501,"src":"8051:302:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2989,"nodeType":"Block","src":"8644:1585:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2886,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"8658:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8658:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2892,"nodeType":"IfStatement","src":"8654:45:16","trueBody":{"id":2891,"nodeType":"Block","src":"8666:33:16","statements":[{"expression":{"hexValue":"30","id":2889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8687:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2885,"id":2890,"nodeType":"Return","src":"8680:8:16"}]}},{"assignments":[2894],"declarations":[{"constant":false,"id":2894,"mutability":"mutable","name":"result","nameLocation":"9386:6:16","nodeType":"VariableDeclaration","scope":2989,"src":"9378:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2893,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2903,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9395:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2897,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"9406:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2896,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3157,3192],"referencedDeclaration":3157,"src":"9401:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9401:7:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9401:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2901,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9400:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9395:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9378:36:16"},{"id":2988,"nodeType":"UncheckedBlock","src":"9815:408:16","statements":[{"expression":{"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2904,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"9839:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2905,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"9849:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2906,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"9858:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2907,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"9862:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9858:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9849:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2910,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9848:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9873:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9848:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2914,"nodeType":"ExpressionStatement","src":"9839:35:16"},{"expression":{"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2915,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"9888:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2916,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"9898:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2917,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"9907:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2918,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"9911:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9907:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9898:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2921,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9897:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9922:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9897:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9888:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2925,"nodeType":"ExpressionStatement","src":"9888:35:16"},{"expression":{"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2926,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"9937:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2927,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"9947:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2928,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"9956:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2929,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"9960:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9956:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9947:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2932,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9946:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9971:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9937:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2936,"nodeType":"ExpressionStatement","src":"9937:35:16"},{"expression":{"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2937,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"9986:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2938,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"9996:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2939,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"10005:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2940,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"10009:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10005:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9996:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2943,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9995:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10020:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9995:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9986:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2947,"nodeType":"ExpressionStatement","src":"9986:35:16"},{"expression":{"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2948,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"10035:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2949,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"10045:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2950,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"10054:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2951,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"10058:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10054:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10045:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2954,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10044:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10069:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10044:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10035:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2958,"nodeType":"ExpressionStatement","src":"10035:35:16"},{"expression":{"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2959,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"10084:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2960,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"10094:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2961,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"10103:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2962,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"10107:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10094:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2965,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10093:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10118:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10093:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10084:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2969,"nodeType":"ExpressionStatement","src":"10084:35:16"},{"expression":{"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2970,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"10133:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2971,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"10143:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2972,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"10152:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2973,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"10156:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10152:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10143:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2976,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10142:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10142:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10133:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2980,"nodeType":"ExpressionStatement","src":"10133:35:16"},{"expression":{"arguments":[{"id":2982,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"10193:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2983,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"10201:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2984,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"10205:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10201:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2981,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"10189:3:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10189:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2885,"id":2987,"nodeType":"Return","src":"10182:30:16"}]}]},"documentation":{"id":2879,"nodeType":"StructuredDocumentation","src":"8359:223:16","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":2990,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8596:4:16","nodeType":"FunctionDefinition","parameters":{"id":2882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2881,"mutability":"mutable","name":"a","nameLocation":"8609:1:16","nodeType":"VariableDeclaration","scope":2990,"src":"8601:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2880,"name":"uint256","nodeType":"ElementaryTypeName","src":"8601:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8600:11:16"},"returnParameters":{"id":2885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2990,"src":"8635:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2883,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8634:9:16"},"scope":3501,"src":"8587:1642:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3024,"nodeType":"Block","src":"10405:164:16","statements":[{"id":3023,"nodeType":"UncheckedBlock","src":"10415:148:16","statements":[{"assignments":[3002],"declarations":[{"constant":false,"id":3002,"mutability":"mutable","name":"result","nameLocation":"10447:6:16","nodeType":"VariableDeclaration","scope":3023,"src":"10439:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3001,"name":"uint256","nodeType":"ElementaryTypeName","src":"10439:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3006,"initialValue":{"arguments":[{"id":3004,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"10461:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3003,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2990,3025],"referencedDeclaration":2990,"src":"10456:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10456:7:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10439:24:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3007,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"10484:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3009,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"10511:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"}],"id":3008,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"10494:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2458_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10494:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3011,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"10524:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3012,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"10533:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3014,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"10542:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10494:49:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10550:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10494:57:16","trueExpression":{"hexValue":"31","id":3017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10546:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3020,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10493:59:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10484:68:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3000,"id":3022,"nodeType":"Return","src":"10477:75:16"}]}]},"documentation":{"id":2991,"nodeType":"StructuredDocumentation","src":"10235:89:16","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":3025,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"10338:4:16","nodeType":"FunctionDefinition","parameters":{"id":2997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2993,"mutability":"mutable","name":"a","nameLocation":"10351:1:16","nodeType":"VariableDeclaration","scope":3025,"src":"10343:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2992,"name":"uint256","nodeType":"ElementaryTypeName","src":"10343:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2996,"mutability":"mutable","name":"rounding","nameLocation":"10363:8:16","nodeType":"VariableDeclaration","scope":3025,"src":"10354:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"},"typeName":{"id":2995,"nodeType":"UserDefinedTypeName","pathNode":{"id":2994,"name":"Rounding","nameLocations":["10354:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":2458,"src":"10354:8:16"},"referencedDeclaration":2458,"src":"10354:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10342:30:16"},"returnParameters":{"id":3000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3025,"src":"10396:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2998,"name":"uint256","nodeType":"ElementaryTypeName","src":"10396:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10395:9:16"},"scope":3501,"src":"10329:240:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3156,"nodeType":"Block","src":"10760:922:16","statements":[{"assignments":[3034],"declarations":[{"constant":false,"id":3034,"mutability":"mutable","name":"result","nameLocation":"10778:6:16","nodeType":"VariableDeclaration","scope":3156,"src":"10770:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3033,"name":"uint256","nodeType":"ElementaryTypeName","src":"10770:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3036,"initialValue":{"hexValue":"30","id":3035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10787:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10770:18:16"},{"id":3153,"nodeType":"UncheckedBlock","src":"10798:855:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3037,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"10826:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10835:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10826:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10826:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3051,"nodeType":"IfStatement","src":"10822:99:16","trueBody":{"id":3050,"nodeType":"Block","src":"10844:77:16","statements":[{"expression":{"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"10862:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10872:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10862:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3045,"nodeType":"ExpressionStatement","src":"10862:13:16"},{"expression":{"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3046,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"10893:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":3047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10893:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3049,"nodeType":"ExpressionStatement","src":"10893:13:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"10938:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10947:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10938:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10952:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10938:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3066,"nodeType":"IfStatement","src":"10934:96:16","trueBody":{"id":3065,"nodeType":"Block","src":"10955:75:16","statements":[{"expression":{"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"10973:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10983:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10973:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3060,"nodeType":"ExpressionStatement","src":"10973:12:16"},{"expression":{"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3061,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"11003:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11013:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11003:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3064,"nodeType":"ExpressionStatement","src":"11003:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"11047:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11056:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11047:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11061:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11047:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3081,"nodeType":"IfStatement","src":"11043:96:16","trueBody":{"id":3080,"nodeType":"Block","src":"11064:75:16","statements":[{"expression":{"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"11082:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11092:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11082:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3075,"nodeType":"ExpressionStatement","src":"11082:12:16"},{"expression":{"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3076,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"11112:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11122:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11112:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3079,"nodeType":"ExpressionStatement","src":"11112:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"11156:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11165:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11156:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11170:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11156:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3096,"nodeType":"IfStatement","src":"11152:96:16","trueBody":{"id":3095,"nodeType":"Block","src":"11173:75:16","statements":[{"expression":{"id":3089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"11191:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11201:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11191:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3090,"nodeType":"ExpressionStatement","src":"11191:12:16"},{"expression":{"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3091,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"11221:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11231:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11221:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3094,"nodeType":"ExpressionStatement","src":"11221:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3097,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"11265:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11274:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11265:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11278:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11265:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3111,"nodeType":"IfStatement","src":"11261:93:16","trueBody":{"id":3110,"nodeType":"Block","src":"11281:73:16","statements":[{"expression":{"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"11299:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11309:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11299:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3105,"nodeType":"ExpressionStatement","src":"11299:11:16"},{"expression":{"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3106,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"11328:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11338:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11328:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3109,"nodeType":"ExpressionStatement","src":"11328:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3112,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"11371:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":3113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11380:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11371:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11384:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11371:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3126,"nodeType":"IfStatement","src":"11367:93:16","trueBody":{"id":3125,"nodeType":"Block","src":"11387:73:16","statements":[{"expression":{"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"11405:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11415:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11405:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3120,"nodeType":"ExpressionStatement","src":"11405:11:16"},{"expression":{"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3121,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"11434:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11444:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11434:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3124,"nodeType":"ExpressionStatement","src":"11434:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"11477:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":3128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11486:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11477:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11490:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11477:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3141,"nodeType":"IfStatement","src":"11473:93:16","trueBody":{"id":3140,"nodeType":"Block","src":"11493:73:16","statements":[{"expression":{"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"11511:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":3133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11521:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11511:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3135,"nodeType":"ExpressionStatement","src":"11511:11:16"},{"expression":{"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3136,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"11540:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11550:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11540:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3139,"nodeType":"ExpressionStatement","src":"11540:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"11583:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11592:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11583:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11596:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11583:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3152,"nodeType":"IfStatement","src":"11579:64:16","trueBody":{"id":3151,"nodeType":"Block","src":"11599:44:16","statements":[{"expression":{"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3147,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"11617:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11627:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11617:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3150,"nodeType":"ExpressionStatement","src":"11617:11:16"}]}}]},{"expression":{"id":3154,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"11669:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3032,"id":3155,"nodeType":"Return","src":"11662:13:16"}]},"documentation":{"id":3026,"nodeType":"StructuredDocumentation","src":"10575:119:16","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3157,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"10708:4:16","nodeType":"FunctionDefinition","parameters":{"id":3029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3028,"mutability":"mutable","name":"value","nameLocation":"10721:5:16","nodeType":"VariableDeclaration","scope":3157,"src":"10713:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3027,"name":"uint256","nodeType":"ElementaryTypeName","src":"10713:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10712:15:16"},"returnParameters":{"id":3032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3031,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3157,"src":"10751:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3030,"name":"uint256","nodeType":"ElementaryTypeName","src":"10751:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10750:9:16"},"scope":3501,"src":"10699:983:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3191,"nodeType":"Block","src":"11915:168:16","statements":[{"id":3190,"nodeType":"UncheckedBlock","src":"11925:152:16","statements":[{"assignments":[3169],"declarations":[{"constant":false,"id":3169,"mutability":"mutable","name":"result","nameLocation":"11957:6:16","nodeType":"VariableDeclaration","scope":3190,"src":"11949:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3168,"name":"uint256","nodeType":"ElementaryTypeName","src":"11949:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3173,"initialValue":{"arguments":[{"id":3171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"11971:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3170,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3157,3192],"referencedDeclaration":3157,"src":"11966:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11966:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11949:28:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3174,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"11998:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3176,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"12025:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"}],"id":3175,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"12008:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2458_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12008:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3179,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"12043:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"12052:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12008:49:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12008:57:16","trueExpression":{"hexValue":"31","id":3184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12060:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3187,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12007:59:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11998:68:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3167,"id":3189,"nodeType":"Return","src":"11991:75:16"}]}]},"documentation":{"id":3158,"nodeType":"StructuredDocumentation","src":"11688:142:16","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3192,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"11844:4:16","nodeType":"FunctionDefinition","parameters":{"id":3164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3160,"mutability":"mutable","name":"value","nameLocation":"11857:5:16","nodeType":"VariableDeclaration","scope":3192,"src":"11849:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3159,"name":"uint256","nodeType":"ElementaryTypeName","src":"11849:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3163,"mutability":"mutable","name":"rounding","nameLocation":"11873:8:16","nodeType":"VariableDeclaration","scope":3192,"src":"11864:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"},"typeName":{"id":3162,"nodeType":"UserDefinedTypeName","pathNode":{"id":3161,"name":"Rounding","nameLocations":["11864:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":2458,"src":"11864:8:16"},"referencedDeclaration":2458,"src":"11864:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11848:34:16"},"returnParameters":{"id":3167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3192,"src":"11906:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3165,"name":"uint256","nodeType":"ElementaryTypeName","src":"11906:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11905:9:16"},"scope":3501,"src":"11835:248:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3320,"nodeType":"Block","src":"12276:854:16","statements":[{"assignments":[3201],"declarations":[{"constant":false,"id":3201,"mutability":"mutable","name":"result","nameLocation":"12294:6:16","nodeType":"VariableDeclaration","scope":3320,"src":"12286:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3200,"name":"uint256","nodeType":"ElementaryTypeName","src":"12286:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3203,"initialValue":{"hexValue":"30","id":3202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12303:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12286:18:16"},{"id":3317,"nodeType":"UncheckedBlock","src":"12314:787:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"12342:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12351:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12351:8:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12342:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3220,"nodeType":"IfStatement","src":"12338:103:16","trueBody":{"id":3219,"nodeType":"Block","src":"12361:80:16","statements":[{"expression":{"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3209,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"12379:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12388:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12394:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12388:8:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12379:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3214,"nodeType":"ExpressionStatement","src":"12379:17:16"},{"expression":{"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3215,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"12414:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12424:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12414:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3218,"nodeType":"ExpressionStatement","src":"12414:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"12458:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12467:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12473:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12467:8:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12458:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3237,"nodeType":"IfStatement","src":"12454:103:16","trueBody":{"id":3236,"nodeType":"Block","src":"12477:80:16","statements":[{"expression":{"id":3230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"12495:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12504:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12510:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12504:8:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12495:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3231,"nodeType":"ExpressionStatement","src":"12495:17:16"},{"expression":{"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3232,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"12530:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12540:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12530:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3235,"nodeType":"ExpressionStatement","src":"12530:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"12574:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12583:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12589:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12583:8:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12574:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3254,"nodeType":"IfStatement","src":"12570:103:16","trueBody":{"id":3253,"nodeType":"Block","src":"12593:80:16","statements":[{"expression":{"id":3247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"12611:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12620:8:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12611:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3248,"nodeType":"ExpressionStatement","src":"12611:17:16"},{"expression":{"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3249,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"12646:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12656:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12646:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3252,"nodeType":"ExpressionStatement","src":"12646:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"12690:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12699:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12705:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12699:7:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12690:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3271,"nodeType":"IfStatement","src":"12686:100:16","trueBody":{"id":3270,"nodeType":"Block","src":"12708:78:16","statements":[{"expression":{"id":3264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"12726:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12735:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12735:7:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12726:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3265,"nodeType":"ExpressionStatement","src":"12726:16:16"},{"expression":{"id":3268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3266,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"12760:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12760:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3269,"nodeType":"ExpressionStatement","src":"12760:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"12803:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12812:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12818:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12812:7:16","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12803:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3288,"nodeType":"IfStatement","src":"12799:100:16","trueBody":{"id":3287,"nodeType":"Block","src":"12821:78:16","statements":[{"expression":{"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3277,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"12839:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12848:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12854:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12848:7:16","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12839:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3282,"nodeType":"ExpressionStatement","src":"12839:16:16"},{"expression":{"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3283,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"12873:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12883:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12873:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3286,"nodeType":"ExpressionStatement","src":"12873:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3289,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"12916:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12925:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12931:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12925:7:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12916:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3305,"nodeType":"IfStatement","src":"12912:100:16","trueBody":{"id":3304,"nodeType":"Block","src":"12934:78:16","statements":[{"expression":{"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3294,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"12952:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12961:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12967:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12961:7:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12952:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3299,"nodeType":"ExpressionStatement","src":"12952:16:16"},{"expression":{"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3300,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"12986:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12996:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12986:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3303,"nodeType":"ExpressionStatement","src":"12986:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"13029:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13038:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13044:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13038:7:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"13029:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3316,"nodeType":"IfStatement","src":"13025:66:16","trueBody":{"id":3315,"nodeType":"Block","src":"13047:44:16","statements":[{"expression":{"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3311,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"13065:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13075:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13065:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3314,"nodeType":"ExpressionStatement","src":"13065:11:16"}]}}]},{"expression":{"id":3318,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"13117:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3199,"id":3319,"nodeType":"Return","src":"13110:13:16"}]},"documentation":{"id":3193,"nodeType":"StructuredDocumentation","src":"12089:120:16","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3321,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"12223:5:16","nodeType":"FunctionDefinition","parameters":{"id":3196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3195,"mutability":"mutable","name":"value","nameLocation":"12237:5:16","nodeType":"VariableDeclaration","scope":3321,"src":"12229:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3194,"name":"uint256","nodeType":"ElementaryTypeName","src":"12229:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12228:15:16"},"returnParameters":{"id":3199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3321,"src":"12267:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3197,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12266:9:16"},"scope":3501,"src":"12214:916:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3355,"nodeType":"Block","src":"13365:170:16","statements":[{"id":3354,"nodeType":"UncheckedBlock","src":"13375:154:16","statements":[{"assignments":[3333],"declarations":[{"constant":false,"id":3333,"mutability":"mutable","name":"result","nameLocation":"13407:6:16","nodeType":"VariableDeclaration","scope":3354,"src":"13399:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3332,"name":"uint256","nodeType":"ElementaryTypeName","src":"13399:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3337,"initialValue":{"arguments":[{"id":3335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"13422:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3334,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3321,3356],"referencedDeclaration":3321,"src":"13416:5:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13399:29:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3338,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"13449:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3340,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"13476:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"}],"id":3339,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"13459:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2458_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13459:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13489:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3343,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"13495:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"13504:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13459:50:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13516:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13459:58:16","trueExpression":{"hexValue":"31","id":3348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13512:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3351,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13458:60:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13449:69:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3331,"id":3353,"nodeType":"Return","src":"13442:76:16"}]}]},"documentation":{"id":3322,"nodeType":"StructuredDocumentation","src":"13136:143:16","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3356,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"13293:5:16","nodeType":"FunctionDefinition","parameters":{"id":3328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3324,"mutability":"mutable","name":"value","nameLocation":"13307:5:16","nodeType":"VariableDeclaration","scope":3356,"src":"13299:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3323,"name":"uint256","nodeType":"ElementaryTypeName","src":"13299:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3327,"mutability":"mutable","name":"rounding","nameLocation":"13323:8:16","nodeType":"VariableDeclaration","scope":3356,"src":"13314:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"},"typeName":{"id":3326,"nodeType":"UserDefinedTypeName","pathNode":{"id":3325,"name":"Rounding","nameLocations":["13314:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":2458,"src":"13314:8:16"},"referencedDeclaration":2458,"src":"13314:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"13298:34:16"},"returnParameters":{"id":3331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3356,"src":"13356:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3329,"name":"uint256","nodeType":"ElementaryTypeName","src":"13356:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13355:9:16"},"scope":3501,"src":"13284:251:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3442,"nodeType":"Block","src":"13855:600:16","statements":[{"assignments":[3365],"declarations":[{"constant":false,"id":3365,"mutability":"mutable","name":"result","nameLocation":"13873:6:16","nodeType":"VariableDeclaration","scope":3442,"src":"13865:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3364,"name":"uint256","nodeType":"ElementaryTypeName","src":"13865:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3367,"initialValue":{"hexValue":"30","id":3366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13882:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13865:18:16"},{"id":3439,"nodeType":"UncheckedBlock","src":"13893:533:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"13921:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13930:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13921:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13936:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13921:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3382,"nodeType":"IfStatement","src":"13917:98:16","trueBody":{"id":3381,"nodeType":"Block","src":"13939:76:16","statements":[{"expression":{"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"13957:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13967:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13957:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3376,"nodeType":"ExpressionStatement","src":"13957:13:16"},{"expression":{"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3377,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"13988:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13998:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13988:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3380,"nodeType":"ExpressionStatement","src":"13988:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"14032:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14041:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14032:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14046:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14032:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3397,"nodeType":"IfStatement","src":"14028:95:16","trueBody":{"id":3396,"nodeType":"Block","src":"14049:74:16","statements":[{"expression":{"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"14067:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14077:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14067:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3391,"nodeType":"ExpressionStatement","src":"14067:12:16"},{"expression":{"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3392,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"14097:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14107:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14097:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3395,"nodeType":"ExpressionStatement","src":"14097:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"14140:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14149:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14140:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14154:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14140:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3412,"nodeType":"IfStatement","src":"14136:95:16","trueBody":{"id":3411,"nodeType":"Block","src":"14157:74:16","statements":[{"expression":{"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"14175:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14185:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14175:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3406,"nodeType":"ExpressionStatement","src":"14175:12:16"},{"expression":{"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3407,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"14205:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14215:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14205:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3410,"nodeType":"ExpressionStatement","src":"14205:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"14248:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14257:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14248:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14262:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14248:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3427,"nodeType":"IfStatement","src":"14244:95:16","trueBody":{"id":3426,"nodeType":"Block","src":"14265:74:16","statements":[{"expression":{"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"14283:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14293:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14283:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3421,"nodeType":"ExpressionStatement","src":"14283:12:16"},{"expression":{"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3422,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"14313:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14323:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14313:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3425,"nodeType":"ExpressionStatement","src":"14313:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"14356:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14365:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14356:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14369:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14356:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3438,"nodeType":"IfStatement","src":"14352:64:16","trueBody":{"id":3437,"nodeType":"Block","src":"14372:44:16","statements":[{"expression":{"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3433,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"14390:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14400:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14390:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3436,"nodeType":"ExpressionStatement","src":"14390:11:16"}]}}]},{"expression":{"id":3440,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"14442:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3363,"id":3441,"nodeType":"Return","src":"14435:13:16"}]},"documentation":{"id":3357,"nodeType":"StructuredDocumentation","src":"13541:246:16","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3443,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"13801:6:16","nodeType":"FunctionDefinition","parameters":{"id":3360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3359,"mutability":"mutable","name":"value","nameLocation":"13816:5:16","nodeType":"VariableDeclaration","scope":3443,"src":"13808:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3358,"name":"uint256","nodeType":"ElementaryTypeName","src":"13808:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13807:15:16"},"returnParameters":{"id":3363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3362,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3443,"src":"13846:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3361,"name":"uint256","nodeType":"ElementaryTypeName","src":"13846:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13845:9:16"},"scope":3501,"src":"13792:663:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3480,"nodeType":"Block","src":"14692:177:16","statements":[{"id":3479,"nodeType":"UncheckedBlock","src":"14702:161:16","statements":[{"assignments":[3455],"declarations":[{"constant":false,"id":3455,"mutability":"mutable","name":"result","nameLocation":"14734:6:16","nodeType":"VariableDeclaration","scope":3479,"src":"14726:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3454,"name":"uint256","nodeType":"ElementaryTypeName","src":"14726:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3459,"initialValue":{"arguments":[{"id":3457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"14750:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3456,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3443,3481],"referencedDeclaration":3443,"src":"14743:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14743:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14726:30:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3460,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3455,"src":"14777:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3462,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"14804:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"}],"id":3461,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"14787:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2458_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14787:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14817:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3465,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3455,"src":"14823:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14833:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"14823:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3468,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14822:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"14838:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14787:56:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14850:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14787:64:16","trueExpression":{"hexValue":"31","id":3473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14846:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3476,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14786:66:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14777:75:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3453,"id":3478,"nodeType":"Return","src":"14770:82:16"}]}]},"documentation":{"id":3444,"nodeType":"StructuredDocumentation","src":"14461:144:16","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3481,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"14619:6:16","nodeType":"FunctionDefinition","parameters":{"id":3450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3446,"mutability":"mutable","name":"value","nameLocation":"14634:5:16","nodeType":"VariableDeclaration","scope":3481,"src":"14626:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3445,"name":"uint256","nodeType":"ElementaryTypeName","src":"14626:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3449,"mutability":"mutable","name":"rounding","nameLocation":"14650:8:16","nodeType":"VariableDeclaration","scope":3481,"src":"14641:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"},"typeName":{"id":3448,"nodeType":"UserDefinedTypeName","pathNode":{"id":3447,"name":"Rounding","nameLocations":["14641:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":2458,"src":"14641:8:16"},"referencedDeclaration":2458,"src":"14641:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"14625:34:16"},"returnParameters":{"id":3453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3452,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3481,"src":"14683:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3451,"name":"uint256","nodeType":"ElementaryTypeName","src":"14683:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14682:9:16"},"scope":3501,"src":"14610:259:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3499,"nodeType":"Block","src":"15067:48:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3492,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"15090:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"}],"id":3491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15084:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3490,"name":"uint8","nodeType":"ElementaryTypeName","src":"15084:5:16","typeDescriptions":{}}},"id":3493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15084:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":3494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15102:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15084:19:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":3496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15107:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15084:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3489,"id":3498,"nodeType":"Return","src":"15077:31:16"}]},"documentation":{"id":3482,"nodeType":"StructuredDocumentation","src":"14875:113:16","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":3500,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"15002:16:16","nodeType":"FunctionDefinition","parameters":{"id":3486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3485,"mutability":"mutable","name":"rounding","nameLocation":"15028:8:16","nodeType":"VariableDeclaration","scope":3500,"src":"15019:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"},"typeName":{"id":3484,"nodeType":"UserDefinedTypeName","pathNode":{"id":3483,"name":"Rounding","nameLocations":["15019:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":2458,"src":"15019:8:16"},"referencedDeclaration":2458,"src":"15019:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"15018:19:16"},"returnParameters":{"id":3489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3500,"src":"15061:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3487,"name":"bool","nodeType":"ElementaryTypeName","src":"15061:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15060:6:16"},"scope":3501,"src":"14993:122:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3502,"src":"203:14914:16","usedErrors":[2453],"usedEvents":[]}],"src":"103:15015:16"},"id":16},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[3606]},"id":3607,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3503,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":3504,"nodeType":"StructuredDocumentation","src":"135:80:17","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3606,"linearizedBaseContracts":[3606],"name":"SignedMath","nameLocation":"224:10:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":3521,"nodeType":"Block","src":"376:37:17","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3514,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"393:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3515,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"397:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"393:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3518,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"405:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"393:13:17","trueExpression":{"id":3517,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"401:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3513,"id":3520,"nodeType":"Return","src":"386:20:17"}]},"documentation":{"id":3505,"nodeType":"StructuredDocumentation","src":"241:66:17","text":" @dev Returns the largest of two signed numbers."},"id":3522,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"321:3:17","nodeType":"FunctionDefinition","parameters":{"id":3510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3507,"mutability":"mutable","name":"a","nameLocation":"332:1:17","nodeType":"VariableDeclaration","scope":3522,"src":"325:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3506,"name":"int256","nodeType":"ElementaryTypeName","src":"325:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3509,"mutability":"mutable","name":"b","nameLocation":"342:1:17","nodeType":"VariableDeclaration","scope":3522,"src":"335:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3508,"name":"int256","nodeType":"ElementaryTypeName","src":"335:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"324:20:17"},"returnParameters":{"id":3513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3512,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3522,"src":"368:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3511,"name":"int256","nodeType":"ElementaryTypeName","src":"368:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"367:8:17"},"scope":3606,"src":"312:101:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3539,"nodeType":"Block","src":"555:37:17","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3532,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"572:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3533,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"576:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"572:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3536,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"584:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"572:13:17","trueExpression":{"id":3535,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"580:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3531,"id":3538,"nodeType":"Return","src":"565:20:17"}]},"documentation":{"id":3523,"nodeType":"StructuredDocumentation","src":"419:67:17","text":" @dev Returns the smallest of two signed numbers."},"id":3540,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"500:3:17","nodeType":"FunctionDefinition","parameters":{"id":3528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3525,"mutability":"mutable","name":"a","nameLocation":"511:1:17","nodeType":"VariableDeclaration","scope":3540,"src":"504:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3524,"name":"int256","nodeType":"ElementaryTypeName","src":"504:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3527,"mutability":"mutable","name":"b","nameLocation":"521:1:17","nodeType":"VariableDeclaration","scope":3540,"src":"514:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3526,"name":"int256","nodeType":"ElementaryTypeName","src":"514:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"503:20:17"},"returnParameters":{"id":3531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3540,"src":"547:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3529,"name":"int256","nodeType":"ElementaryTypeName","src":"547:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"546:8:17"},"scope":3606,"src":"491:101:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3583,"nodeType":"Block","src":"797:162:17","statements":[{"assignments":[3551],"declarations":[{"constant":false,"id":3551,"mutability":"mutable","name":"x","nameLocation":"866:1:17","nodeType":"VariableDeclaration","scope":3583,"src":"859:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3550,"name":"int256","nodeType":"ElementaryTypeName","src":"859:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3564,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3552,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3543,"src":"871:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3553,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"875:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"871:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3555,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"870:7:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3556,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3543,"src":"882:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3557,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"886:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"882:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3559,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"881:7:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"892:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"881:12:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3562,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:14:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:24:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"859:35:17"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3565,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3551,"src":"911:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3570,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3551,"src":"931:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"923:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3568,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:17","typeDescriptions":{}}},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"923:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"937:3:17","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"923:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"916:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3566,"name":"int256","nodeType":"ElementaryTypeName","src":"916:6:17","typeDescriptions":{}}},"id":3574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3575,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3543,"src":"945:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3576,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"949:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"945:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3578,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"944:7:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"916:35:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3580,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"915:37:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"911:41:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3549,"id":3582,"nodeType":"Return","src":"904:48:17"}]},"documentation":{"id":3541,"nodeType":"StructuredDocumentation","src":"598:126:17","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":3584,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"738:7:17","nodeType":"FunctionDefinition","parameters":{"id":3546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3543,"mutability":"mutable","name":"a","nameLocation":"753:1:17","nodeType":"VariableDeclaration","scope":3584,"src":"746:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3542,"name":"int256","nodeType":"ElementaryTypeName","src":"746:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3545,"mutability":"mutable","name":"b","nameLocation":"763:1:17","nodeType":"VariableDeclaration","scope":3584,"src":"756:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3544,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"745:20:17"},"returnParameters":{"id":3549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3584,"src":"789:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3547,"name":"int256","nodeType":"ElementaryTypeName","src":"789:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"788:8:17"},"scope":3606,"src":"729:230:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3604,"nodeType":"Block","src":"1103:158:17","statements":[{"id":3603,"nodeType":"UncheckedBlock","src":"1113:142:17","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3594,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"1228:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":3595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1233:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1228:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1241:2:17","subExpression":{"id":3598,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"1242:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1228:15:17","trueExpression":{"id":3597,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"1237:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1220:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3592,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:17","typeDescriptions":{}}},"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1220:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3591,"id":3602,"nodeType":"Return","src":"1213:31:17"}]}]},"documentation":{"id":3585,"nodeType":"StructuredDocumentation","src":"965:78:17","text":" @dev Returns the absolute unsigned value of a signed value."},"id":3605,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1057:3:17","nodeType":"FunctionDefinition","parameters":{"id":3588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3587,"mutability":"mutable","name":"n","nameLocation":"1068:1:17","nodeType":"VariableDeclaration","scope":3605,"src":"1061:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3586,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1060:10:17"},"returnParameters":{"id":3591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3605,"src":"1094:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3589,"name":"uint256","nodeType":"ElementaryTypeName","src":"1094:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1093:9:17"},"scope":3606,"src":"1048:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3607,"src":"216:1047:17","usedErrors":[],"usedEvents":[]}],"src":"109:1155:17"},"id":17},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[4219]},"id":4220,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3608,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"205:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSet","contractDependencies":[],"contractKind":"library","documentation":{"id":3609,"nodeType":"StructuredDocumentation","src":"231:1098:18","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":4219,"linearizedBaseContracts":[4219],"name":"EnumerableSet","nameLocation":"1338:13:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":3617,"members":[{"constant":false,"id":3612,"mutability":"mutable","name":"_values","nameLocation":"1862:7:18","nodeType":"VariableDeclaration","scope":3617,"src":"1852:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3610,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1852:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3611,"nodeType":"ArrayTypeName","src":"1852:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3616,"mutability":"mutable","name":"_positions","nameLocation":"2054:10:18","nodeType":"VariableDeclaration","scope":3617,"src":"2020:44:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":3615,"keyName":"value","keyNameLocation":"2036:5:18","keyType":{"id":3613,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2028:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2020:33:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3614,"name":"uint256","nodeType":"ElementaryTypeName","src":"2045:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1805:3:18","nodeType":"StructDefinition","scope":4219,"src":"1798:273:18","visibility":"public"},{"body":{"id":3658,"nodeType":"Block","src":"2310:337:18","statements":[{"condition":{"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2324:22:18","subExpression":{"arguments":[{"id":3629,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"2335:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":3630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"2340:5:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3628,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"2325:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3617_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2325:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3656,"nodeType":"Block","src":"2604:37:18","statements":[{"expression":{"hexValue":"66616c7365","id":3654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2625:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3627,"id":3655,"nodeType":"Return","src":"2618:12:18"}]},"id":3657,"nodeType":"IfStatement","src":"2320:321:18","trueBody":{"id":3653,"nodeType":"Block","src":"2348:250:18","statements":[{"expression":{"arguments":[{"id":3638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"2379:5:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":3633,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"2362:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3636,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2366:7:18","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3612,"src":"2362:11:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:4:18","memberName":"push","nodeType":"MemberAccess","src":"2362:16:18","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2362:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3640,"nodeType":"ExpressionStatement","src":"2362:23:18"},{"expression":{"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3641,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"2520:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3644,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2524:10:18","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":3616,"src":"2520:14:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3645,"indexExpression":{"id":3643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"2535:5:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2520:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":3646,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"2544:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3647,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2548:7:18","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3612,"src":"2544:11:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2556:6:18","memberName":"length","nodeType":"MemberAccess","src":"2544:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2520:42:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3650,"nodeType":"ExpressionStatement","src":"2520:42:18"},{"expression":{"hexValue":"74727565","id":3651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2583:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3627,"id":3652,"nodeType":"Return","src":"2576:11:18"}]}}]},"documentation":{"id":3618,"nodeType":"StructuredDocumentation","src":"2077:159:18","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":3659,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2250:4:18","nodeType":"FunctionDefinition","parameters":{"id":3624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3621,"mutability":"mutable","name":"set","nameLocation":"2267:3:18","nodeType":"VariableDeclaration","scope":3659,"src":"2255:15:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3620,"nodeType":"UserDefinedTypeName","pathNode":{"id":3619,"name":"Set","nameLocations":["2255:3:18"],"nodeType":"IdentifierPath","referencedDeclaration":3617,"src":"2255:3:18"},"referencedDeclaration":3617,"src":"2255:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":3623,"mutability":"mutable","name":"value","nameLocation":"2280:5:18","nodeType":"VariableDeclaration","scope":3659,"src":"2272:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3622,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2272:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2254:32:18"},"returnParameters":{"id":3627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3626,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3659,"src":"2304:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3625,"name":"bool","nodeType":"ElementaryTypeName","src":"2304:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2303:6:18"},"scope":4219,"src":"2241:406:18","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3742,"nodeType":"Block","src":"2887:1296:18","statements":[{"assignments":[3671],"declarations":[{"constant":false,"id":3671,"mutability":"mutable","name":"position","nameLocation":"2999:8:18","nodeType":"VariableDeclaration","scope":3742,"src":"2991:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3670,"name":"uint256","nodeType":"ElementaryTypeName","src":"2991:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3676,"initialValue":{"baseExpression":{"expression":{"id":3672,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"3010:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3673,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3014:10:18","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":3616,"src":"3010:14:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3675,"indexExpression":{"id":3674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"3025:5:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3010:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2991:40:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3677,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"3046:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3058:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3046:13:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3740,"nodeType":"Block","src":"4140:37:18","statements":[{"expression":{"hexValue":"66616c7365","id":3738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4161:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3669,"id":3739,"nodeType":"Return","src":"4154:12:18"}]},"id":3741,"nodeType":"IfStatement","src":"3042:1135:18","trueBody":{"id":3737,"nodeType":"Block","src":"3061:1073:18","statements":[{"assignments":[3681],"declarations":[{"constant":false,"id":3681,"mutability":"mutable","name":"valueIndex","nameLocation":"3421:10:18","nodeType":"VariableDeclaration","scope":3737,"src":"3413:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3680,"name":"uint256","nodeType":"ElementaryTypeName","src":"3413:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3685,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3682,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"3434:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3445:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3434:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3413:33:18"},{"assignments":[3687],"declarations":[{"constant":false,"id":3687,"mutability":"mutable","name":"lastIndex","nameLocation":"3468:9:18","nodeType":"VariableDeclaration","scope":3737,"src":"3460:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3686,"name":"uint256","nodeType":"ElementaryTypeName","src":"3460:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3693,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3688,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"3480:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3689,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3484:7:18","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3612,"src":"3480:11:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3492:6:18","memberName":"length","nodeType":"MemberAccess","src":"3480:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3501:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3480:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3460:42:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3694,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"3521:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3695,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"3535:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3521:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3721,"nodeType":"IfStatement","src":"3517:378:18","trueBody":{"id":3720,"nodeType":"Block","src":"3546:349:18","statements":[{"assignments":[3698],"declarations":[{"constant":false,"id":3698,"mutability":"mutable","name":"lastValue","nameLocation":"3572:9:18","nodeType":"VariableDeclaration","scope":3720,"src":"3564:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3697,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3564:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3703,"initialValue":{"baseExpression":{"expression":{"id":3699,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"3584:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3700,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3588:7:18","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3612,"src":"3584:11:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3702,"indexExpression":{"id":3701,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"3596:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3584:22:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3564:42:18"},{"expression":{"id":3710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3704,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"3705:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3707,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3709:7:18","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3612,"src":"3705:11:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3708,"indexExpression":{"id":3706,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"3717:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3705:23:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3709,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"3731:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3705:35:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3711,"nodeType":"ExpressionStatement","src":"3705:35:18"},{"expression":{"id":3718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3712,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"3844:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3715,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3848:10:18","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":3616,"src":"3844:14:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3716,"indexExpression":{"id":3714,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"3859:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3844:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3717,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"3872:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3844:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3719,"nodeType":"ExpressionStatement","src":"3844:36:18"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":3722,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"3973:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3725,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3977:7:18","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3612,"src":"3973:11:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3985:3:18","memberName":"pop","nodeType":"MemberAccess","src":"3973:15:18","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":3727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3973:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3728,"nodeType":"ExpressionStatement","src":"3973:17:18"},{"expression":{"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4069:28:18","subExpression":{"baseExpression":{"expression":{"id":3729,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"4076:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3730,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4080:10:18","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":3616,"src":"4076:14:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3732,"indexExpression":{"id":3731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"4091:5:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4076:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3734,"nodeType":"ExpressionStatement","src":"4069:28:18"},{"expression":{"hexValue":"74727565","id":3735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4119:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3669,"id":3736,"nodeType":"Return","src":"4112:11:18"}]}}]},"documentation":{"id":3660,"nodeType":"StructuredDocumentation","src":"2653:157:18","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":3743,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2824:7:18","nodeType":"FunctionDefinition","parameters":{"id":3666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3663,"mutability":"mutable","name":"set","nameLocation":"2844:3:18","nodeType":"VariableDeclaration","scope":3743,"src":"2832:15:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3662,"nodeType":"UserDefinedTypeName","pathNode":{"id":3661,"name":"Set","nameLocations":["2832:3:18"],"nodeType":"IdentifierPath","referencedDeclaration":3617,"src":"2832:3:18"},"referencedDeclaration":3617,"src":"2832:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":3665,"mutability":"mutable","name":"value","nameLocation":"2857:5:18","nodeType":"VariableDeclaration","scope":3743,"src":"2849:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3664,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2849:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2831:32:18"},"returnParameters":{"id":3669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3743,"src":"2881:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3667,"name":"bool","nodeType":"ElementaryTypeName","src":"2881:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2880:6:18"},"scope":4219,"src":"2815:1368:18","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3761,"nodeType":"Block","src":"4343:50:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":3754,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"4360:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3755,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4364:10:18","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":3616,"src":"4360:14:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3757,"indexExpression":{"id":3756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3749,"src":"4375:5:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4360:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4385:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4360:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3753,"id":3760,"nodeType":"Return","src":"4353:33:18"}]},"documentation":{"id":3744,"nodeType":"StructuredDocumentation","src":"4189:70:18","text":" @dev Returns true if the value is in the set. O(1)."},"id":3762,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4273:9:18","nodeType":"FunctionDefinition","parameters":{"id":3750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3747,"mutability":"mutable","name":"set","nameLocation":"4295:3:18","nodeType":"VariableDeclaration","scope":3762,"src":"4283:15:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3746,"nodeType":"UserDefinedTypeName","pathNode":{"id":3745,"name":"Set","nameLocations":["4283:3:18"],"nodeType":"IdentifierPath","referencedDeclaration":3617,"src":"4283:3:18"},"referencedDeclaration":3617,"src":"4283:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":3749,"mutability":"mutable","name":"value","nameLocation":"4308:5:18","nodeType":"VariableDeclaration","scope":3762,"src":"4300:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3748,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4300:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4282:32:18"},"returnParameters":{"id":3753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3762,"src":"4337:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3751,"name":"bool","nodeType":"ElementaryTypeName","src":"4337:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4336:6:18"},"scope":4219,"src":"4264:129:18","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3775,"nodeType":"Block","src":"4539:42:18","statements":[{"expression":{"expression":{"expression":{"id":3771,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3766,"src":"4556:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3772,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4560:7:18","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3612,"src":"4556:11:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4568:6:18","memberName":"length","nodeType":"MemberAccess","src":"4556:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3770,"id":3774,"nodeType":"Return","src":"4549:25:18"}]},"documentation":{"id":3763,"nodeType":"StructuredDocumentation","src":"4399:70:18","text":" @dev Returns the number of values on the set. O(1)."},"id":3776,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4483:7:18","nodeType":"FunctionDefinition","parameters":{"id":3767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3766,"mutability":"mutable","name":"set","nameLocation":"4503:3:18","nodeType":"VariableDeclaration","scope":3776,"src":"4491:15:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3765,"nodeType":"UserDefinedTypeName","pathNode":{"id":3764,"name":"Set","nameLocations":["4491:3:18"],"nodeType":"IdentifierPath","referencedDeclaration":3617,"src":"4491:3:18"},"referencedDeclaration":3617,"src":"4491:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4490:17:18"},"returnParameters":{"id":3770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3776,"src":"4530:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3768,"name":"uint256","nodeType":"ElementaryTypeName","src":"4530:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4529:9:18"},"scope":4219,"src":"4474:107:18","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3792,"nodeType":"Block","src":"4999:42:18","statements":[{"expression":{"baseExpression":{"expression":{"id":3787,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"5016:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3788,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5020:7:18","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3612,"src":"5016:11:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3790,"indexExpression":{"id":3789,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"5028:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5016:18:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3786,"id":3791,"nodeType":"Return","src":"5009:25:18"}]},"documentation":{"id":3777,"nodeType":"StructuredDocumentation","src":"4587:331:18","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3793,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4932:3:18","nodeType":"FunctionDefinition","parameters":{"id":3783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3780,"mutability":"mutable","name":"set","nameLocation":"4948:3:18","nodeType":"VariableDeclaration","scope":3793,"src":"4936:15:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3779,"nodeType":"UserDefinedTypeName","pathNode":{"id":3778,"name":"Set","nameLocations":["4936:3:18"],"nodeType":"IdentifierPath","referencedDeclaration":3617,"src":"4936:3:18"},"referencedDeclaration":3617,"src":"4936:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":3782,"mutability":"mutable","name":"index","nameLocation":"4961:5:18","nodeType":"VariableDeclaration","scope":3793,"src":"4953:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3781,"name":"uint256","nodeType":"ElementaryTypeName","src":"4953:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4935:32:18"},"returnParameters":{"id":3786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3793,"src":"4990:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3784,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4990:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4989:9:18"},"scope":4219,"src":"4923:118:18","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3806,"nodeType":"Block","src":"5655:35:18","statements":[{"expression":{"expression":{"id":3803,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"5672:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3804,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5676:7:18","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3612,"src":"5672:11:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":3802,"id":3805,"nodeType":"Return","src":"5665:18:18"}]},"documentation":{"id":3794,"nodeType":"StructuredDocumentation","src":"5047:529:18","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":3807,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5590:7:18","nodeType":"FunctionDefinition","parameters":{"id":3798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3797,"mutability":"mutable","name":"set","nameLocation":"5610:3:18","nodeType":"VariableDeclaration","scope":3807,"src":"5598:15:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3796,"nodeType":"UserDefinedTypeName","pathNode":{"id":3795,"name":"Set","nameLocations":["5598:3:18"],"nodeType":"IdentifierPath","referencedDeclaration":3617,"src":"5598:3:18"},"referencedDeclaration":3617,"src":"5598:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5597:17:18"},"returnParameters":{"id":3802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3801,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3807,"src":"5637:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3799,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5637:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3800,"nodeType":"ArrayTypeName","src":"5637:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5636:18:18"},"scope":4219,"src":"5581:109:18","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":3811,"members":[{"constant":false,"id":3810,"mutability":"mutable","name":"_inner","nameLocation":"5747:6:18","nodeType":"VariableDeclaration","scope":3811,"src":"5743:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3809,"nodeType":"UserDefinedTypeName","pathNode":{"id":3808,"name":"Set","nameLocations":["5743:3:18"],"nodeType":"IdentifierPath","referencedDeclaration":3617,"src":"5743:3:18"},"referencedDeclaration":3617,"src":"5743:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5722:10:18","nodeType":"StructDefinition","scope":4219,"src":"5715:45:18","visibility":"public"},{"body":{"id":3828,"nodeType":"Block","src":"6006:47:18","statements":[{"expression":{"arguments":[{"expression":{"id":3823,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"6028:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3811_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3824,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6032:6:18","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3810,"src":"6028:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3817,"src":"6040:5:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3822,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"6023:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3617_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6023:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3821,"id":3827,"nodeType":"Return","src":"6016:30:18"}]},"documentation":{"id":3812,"nodeType":"StructuredDocumentation","src":"5766:159:18","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":3829,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5939:3:18","nodeType":"FunctionDefinition","parameters":{"id":3818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3815,"mutability":"mutable","name":"set","nameLocation":"5962:3:18","nodeType":"VariableDeclaration","scope":3829,"src":"5943:22:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3811_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3814,"nodeType":"UserDefinedTypeName","pathNode":{"id":3813,"name":"Bytes32Set","nameLocations":["5943:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":3811,"src":"5943:10:18"},"referencedDeclaration":3811,"src":"5943:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3811_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3817,"mutability":"mutable","name":"value","nameLocation":"5975:5:18","nodeType":"VariableDeclaration","scope":3829,"src":"5967:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3816,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5967:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5942:39:18"},"returnParameters":{"id":3821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3829,"src":"6000:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3819,"name":"bool","nodeType":"ElementaryTypeName","src":"6000:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5999:6:18"},"scope":4219,"src":"5930:123:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3846,"nodeType":"Block","src":"6300:50:18","statements":[{"expression":{"arguments":[{"expression":{"id":3841,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3833,"src":"6325:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3811_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3842,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6329:6:18","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3810,"src":"6325:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"6337:5:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3840,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"6317:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3617_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6317:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3839,"id":3845,"nodeType":"Return","src":"6310:33:18"}]},"documentation":{"id":3830,"nodeType":"StructuredDocumentation","src":"6059:157:18","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":3847,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6230:6:18","nodeType":"FunctionDefinition","parameters":{"id":3836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3833,"mutability":"mutable","name":"set","nameLocation":"6256:3:18","nodeType":"VariableDeclaration","scope":3847,"src":"6237:22:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3811_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3832,"nodeType":"UserDefinedTypeName","pathNode":{"id":3831,"name":"Bytes32Set","nameLocations":["6237:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":3811,"src":"6237:10:18"},"referencedDeclaration":3811,"src":"6237:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3811_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3835,"mutability":"mutable","name":"value","nameLocation":"6269:5:18","nodeType":"VariableDeclaration","scope":3847,"src":"6261:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3834,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6261:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6236:39:18"},"returnParameters":{"id":3839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3838,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3847,"src":"6294:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3837,"name":"bool","nodeType":"ElementaryTypeName","src":"6294:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6293:6:18"},"scope":4219,"src":"6221:129:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3864,"nodeType":"Block","src":"6517:52:18","statements":[{"expression":{"arguments":[{"expression":{"id":3859,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"6544:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3811_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3860,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6548:6:18","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3810,"src":"6544:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"6556:5:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3858,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"6534:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3617_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":3862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6534:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3857,"id":3863,"nodeType":"Return","src":"6527:35:18"}]},"documentation":{"id":3848,"nodeType":"StructuredDocumentation","src":"6356:70:18","text":" @dev Returns true if the value is in the set. O(1)."},"id":3865,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6440:8:18","nodeType":"FunctionDefinition","parameters":{"id":3854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3851,"mutability":"mutable","name":"set","nameLocation":"6468:3:18","nodeType":"VariableDeclaration","scope":3865,"src":"6449:22:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3811_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3850,"nodeType":"UserDefinedTypeName","pathNode":{"id":3849,"name":"Bytes32Set","nameLocations":["6449:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":3811,"src":"6449:10:18"},"referencedDeclaration":3811,"src":"6449:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3811_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3853,"mutability":"mutable","name":"value","nameLocation":"6481:5:18","nodeType":"VariableDeclaration","scope":3865,"src":"6473:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3852,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6473:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6448:39:18"},"returnParameters":{"id":3857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3865,"src":"6511:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3855,"name":"bool","nodeType":"ElementaryTypeName","src":"6511:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6510:6:18"},"scope":4219,"src":"6431:138:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3879,"nodeType":"Block","src":"6722:43:18","statements":[{"expression":{"arguments":[{"expression":{"id":3875,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"6747:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3811_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3876,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6751:6:18","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3810,"src":"6747:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":3874,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3776,"src":"6739:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3617_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":3877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6739:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3873,"id":3878,"nodeType":"Return","src":"6732:26:18"}]},"documentation":{"id":3866,"nodeType":"StructuredDocumentation","src":"6575:70:18","text":" @dev Returns the number of values in the set. O(1)."},"id":3880,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6659:6:18","nodeType":"FunctionDefinition","parameters":{"id":3870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3869,"mutability":"mutable","name":"set","nameLocation":"6685:3:18","nodeType":"VariableDeclaration","scope":3880,"src":"6666:22:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3811_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3868,"nodeType":"UserDefinedTypeName","pathNode":{"id":3867,"name":"Bytes32Set","nameLocations":["6666:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":3811,"src":"6666:10:18"},"referencedDeclaration":3811,"src":"6666:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3811_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"6665:24:18"},"returnParameters":{"id":3873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3872,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3880,"src":"6713:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3871,"name":"uint256","nodeType":"ElementaryTypeName","src":"6713:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6712:9:18"},"scope":4219,"src":"6650:115:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3897,"nodeType":"Block","src":"7190:46:18","statements":[{"expression":{"arguments":[{"expression":{"id":3892,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"7211:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3811_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3893,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7215:6:18","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3810,"src":"7211:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3894,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"7223:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3891,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3793,"src":"7207:3:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3617_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":3895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7207:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3890,"id":3896,"nodeType":"Return","src":"7200:29:18"}]},"documentation":{"id":3881,"nodeType":"StructuredDocumentation","src":"6771:331:18","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3898,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7116:2:18","nodeType":"FunctionDefinition","parameters":{"id":3887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3884,"mutability":"mutable","name":"set","nameLocation":"7138:3:18","nodeType":"VariableDeclaration","scope":3898,"src":"7119:22:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3811_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3883,"nodeType":"UserDefinedTypeName","pathNode":{"id":3882,"name":"Bytes32Set","nameLocations":["7119:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":3811,"src":"7119:10:18"},"referencedDeclaration":3811,"src":"7119:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3811_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3886,"mutability":"mutable","name":"index","nameLocation":"7151:5:18","nodeType":"VariableDeclaration","scope":3898,"src":"7143:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3885,"name":"uint256","nodeType":"ElementaryTypeName","src":"7143:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7118:39:18"},"returnParameters":{"id":3890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3889,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3898,"src":"7181:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3888,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7181:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7180:9:18"},"scope":4219,"src":"7107:129:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3927,"nodeType":"Block","src":"7857:219:18","statements":[{"assignments":[3912],"declarations":[{"constant":false,"id":3912,"mutability":"mutable","name":"store","nameLocation":"7884:5:18","nodeType":"VariableDeclaration","scope":3927,"src":"7867:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3910,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7867:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3911,"nodeType":"ArrayTypeName","src":"7867:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3917,"initialValue":{"arguments":[{"expression":{"id":3914,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"7900:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3811_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3915,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7904:6:18","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3810,"src":"7900:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":3913,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"7892:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3617_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7892:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7867:44:18"},{"assignments":[3922],"declarations":[{"constant":false,"id":3922,"mutability":"mutable","name":"result","nameLocation":"7938:6:18","nodeType":"VariableDeclaration","scope":3927,"src":"7921:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3920,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7921:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3921,"nodeType":"ArrayTypeName","src":"7921:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3923,"nodeType":"VariableDeclarationStatement","src":"7921:23:18"},{"AST":{"nativeSrc":"8007:39:18","nodeType":"YulBlock","src":"8007:39:18","statements":[{"nativeSrc":"8021:15:18","nodeType":"YulAssignment","src":"8021:15:18","value":{"name":"store","nativeSrc":"8031:5:18","nodeType":"YulIdentifier","src":"8031:5:18"},"variableNames":[{"name":"result","nativeSrc":"8021:6:18","nodeType":"YulIdentifier","src":"8021:6:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3922,"isOffset":false,"isSlot":false,"src":"8021:6:18","valueSize":1},{"declaration":3912,"isOffset":false,"isSlot":false,"src":"8031:5:18","valueSize":1}],"id":3924,"nodeType":"InlineAssembly","src":"7998:48:18"},{"expression":{"id":3925,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"8063:6:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":3907,"id":3926,"nodeType":"Return","src":"8056:13:18"}]},"documentation":{"id":3899,"nodeType":"StructuredDocumentation","src":"7242:529:18","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":3928,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7785:6:18","nodeType":"FunctionDefinition","parameters":{"id":3903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3902,"mutability":"mutable","name":"set","nameLocation":"7811:3:18","nodeType":"VariableDeclaration","scope":3928,"src":"7792:22:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3811_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3901,"nodeType":"UserDefinedTypeName","pathNode":{"id":3900,"name":"Bytes32Set","nameLocations":["7792:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":3811,"src":"7792:10:18"},"referencedDeclaration":3811,"src":"7792:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3811_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7791:24:18"},"returnParameters":{"id":3907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3928,"src":"7839:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3904,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7839:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3905,"nodeType":"ArrayTypeName","src":"7839:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7838:18:18"},"scope":4219,"src":"7776:300:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":3932,"members":[{"constant":false,"id":3931,"mutability":"mutable","name":"_inner","nameLocation":"8133:6:18","nodeType":"VariableDeclaration","scope":3932,"src":"8129:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3930,"nodeType":"UserDefinedTypeName","pathNode":{"id":3929,"name":"Set","nameLocations":["8129:3:18"],"nodeType":"IdentifierPath","referencedDeclaration":3617,"src":"8129:3:18"},"referencedDeclaration":3617,"src":"8129:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8108:10:18","nodeType":"StructDefinition","scope":4219,"src":"8101:45:18","visibility":"public"},{"body":{"id":3958,"nodeType":"Block","src":"8392:74:18","statements":[{"expression":{"arguments":[{"expression":{"id":3944,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"8414:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3945,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8418:6:18","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3931,"src":"8414:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":3952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"8450:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8442:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3950,"name":"uint160","nodeType":"ElementaryTypeName","src":"8442:7:18","typeDescriptions":{}}},"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8442:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8434:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3948,"name":"uint256","nodeType":"ElementaryTypeName","src":"8434:7:18","typeDescriptions":{}}},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8434:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8426:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3946,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8426:7:18","typeDescriptions":{}}},"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8426:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3943,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"8409:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3617_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8409:50:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3942,"id":3957,"nodeType":"Return","src":"8402:57:18"}]},"documentation":{"id":3933,"nodeType":"StructuredDocumentation","src":"8152:159:18","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":3959,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8325:3:18","nodeType":"FunctionDefinition","parameters":{"id":3939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3936,"mutability":"mutable","name":"set","nameLocation":"8348:3:18","nodeType":"VariableDeclaration","scope":3959,"src":"8329:22:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3935,"nodeType":"UserDefinedTypeName","pathNode":{"id":3934,"name":"AddressSet","nameLocations":["8329:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":3932,"src":"8329:10:18"},"referencedDeclaration":3932,"src":"8329:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":3938,"mutability":"mutable","name":"value","nameLocation":"8361:5:18","nodeType":"VariableDeclaration","scope":3959,"src":"8353:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3937,"name":"address","nodeType":"ElementaryTypeName","src":"8353:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8328:39:18"},"returnParameters":{"id":3942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3959,"src":"8386:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3940,"name":"bool","nodeType":"ElementaryTypeName","src":"8386:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8385:6:18"},"scope":4219,"src":"8316:150:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3985,"nodeType":"Block","src":"8713:77:18","statements":[{"expression":{"arguments":[{"expression":{"id":3971,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"8738:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3972,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8742:6:18","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3931,"src":"8738:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":3979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"8774:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8766:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3977,"name":"uint160","nodeType":"ElementaryTypeName","src":"8766:7:18","typeDescriptions":{}}},"id":3980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8766:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8758:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3975,"name":"uint256","nodeType":"ElementaryTypeName","src":"8758:7:18","typeDescriptions":{}}},"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8758:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8750:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3973,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8750:7:18","typeDescriptions":{}}},"id":3982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8750:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3970,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"8730:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3617_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8730:53:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3969,"id":3984,"nodeType":"Return","src":"8723:60:18"}]},"documentation":{"id":3960,"nodeType":"StructuredDocumentation","src":"8472:157:18","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":3986,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8643:6:18","nodeType":"FunctionDefinition","parameters":{"id":3966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3963,"mutability":"mutable","name":"set","nameLocation":"8669:3:18","nodeType":"VariableDeclaration","scope":3986,"src":"8650:22:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3962,"nodeType":"UserDefinedTypeName","pathNode":{"id":3961,"name":"AddressSet","nameLocations":["8650:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":3932,"src":"8650:10:18"},"referencedDeclaration":3932,"src":"8650:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":3965,"mutability":"mutable","name":"value","nameLocation":"8682:5:18","nodeType":"VariableDeclaration","scope":3986,"src":"8674:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3964,"name":"address","nodeType":"ElementaryTypeName","src":"8674:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8649:39:18"},"returnParameters":{"id":3969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3968,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3986,"src":"8707:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3967,"name":"bool","nodeType":"ElementaryTypeName","src":"8707:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8706:6:18"},"scope":4219,"src":"8634:156:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4012,"nodeType":"Block","src":"8957:79:18","statements":[{"expression":{"arguments":[{"expression":{"id":3998,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3990,"src":"8984:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3999,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8988:6:18","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3931,"src":"8984:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":4006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3992,"src":"9020:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9012:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4004,"name":"uint160","nodeType":"ElementaryTypeName","src":"9012:7:18","typeDescriptions":{}}},"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9012:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9004:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4002,"name":"uint256","nodeType":"ElementaryTypeName","src":"9004:7:18","typeDescriptions":{}}},"id":4008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9004:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8996:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4000,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8996:7:18","typeDescriptions":{}}},"id":4009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8996:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3997,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"8974:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3617_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8974:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3996,"id":4011,"nodeType":"Return","src":"8967:62:18"}]},"documentation":{"id":3987,"nodeType":"StructuredDocumentation","src":"8796:70:18","text":" @dev Returns true if the value is in the set. O(1)."},"id":4013,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8880:8:18","nodeType":"FunctionDefinition","parameters":{"id":3993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3990,"mutability":"mutable","name":"set","nameLocation":"8908:3:18","nodeType":"VariableDeclaration","scope":4013,"src":"8889:22:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3989,"nodeType":"UserDefinedTypeName","pathNode":{"id":3988,"name":"AddressSet","nameLocations":["8889:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":3932,"src":"8889:10:18"},"referencedDeclaration":3932,"src":"8889:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":3992,"mutability":"mutable","name":"value","nameLocation":"8921:5:18","nodeType":"VariableDeclaration","scope":4013,"src":"8913:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3991,"name":"address","nodeType":"ElementaryTypeName","src":"8913:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8888:39:18"},"returnParameters":{"id":3996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3995,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4013,"src":"8951:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3994,"name":"bool","nodeType":"ElementaryTypeName","src":"8951:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8950:6:18"},"scope":4219,"src":"8871:165:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4027,"nodeType":"Block","src":"9189:43:18","statements":[{"expression":{"arguments":[{"expression":{"id":4023,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"9214:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":4024,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9218:6:18","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3931,"src":"9214:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4022,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3776,"src":"9206:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3617_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":4025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9206:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4021,"id":4026,"nodeType":"Return","src":"9199:26:18"}]},"documentation":{"id":4014,"nodeType":"StructuredDocumentation","src":"9042:70:18","text":" @dev Returns the number of values in the set. O(1)."},"id":4028,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9126:6:18","nodeType":"FunctionDefinition","parameters":{"id":4018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4017,"mutability":"mutable","name":"set","nameLocation":"9152:3:18","nodeType":"VariableDeclaration","scope":4028,"src":"9133:22:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":4016,"nodeType":"UserDefinedTypeName","pathNode":{"id":4015,"name":"AddressSet","nameLocations":["9133:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":3932,"src":"9133:10:18"},"referencedDeclaration":3932,"src":"9133:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"9132:24:18"},"returnParameters":{"id":4021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4020,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4028,"src":"9180:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4019,"name":"uint256","nodeType":"ElementaryTypeName","src":"9180:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9179:9:18"},"scope":4219,"src":"9117:115:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4054,"nodeType":"Block","src":"9657:73:18","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":4046,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"9702:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":4047,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9706:6:18","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3931,"src":"9702:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":4048,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4034,"src":"9714:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4045,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3793,"src":"9698:3:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3617_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9698:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9690:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4043,"name":"uint256","nodeType":"ElementaryTypeName","src":"9690:7:18","typeDescriptions":{}}},"id":4050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9690:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9682:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4041,"name":"uint160","nodeType":"ElementaryTypeName","src":"9682:7:18","typeDescriptions":{}}},"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9682:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9674:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4039,"name":"address","nodeType":"ElementaryTypeName","src":"9674:7:18","typeDescriptions":{}}},"id":4052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9674:49:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4038,"id":4053,"nodeType":"Return","src":"9667:56:18"}]},"documentation":{"id":4029,"nodeType":"StructuredDocumentation","src":"9238:331:18","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":4055,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9583:2:18","nodeType":"FunctionDefinition","parameters":{"id":4035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4032,"mutability":"mutable","name":"set","nameLocation":"9605:3:18","nodeType":"VariableDeclaration","scope":4055,"src":"9586:22:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":4031,"nodeType":"UserDefinedTypeName","pathNode":{"id":4030,"name":"AddressSet","nameLocations":["9586:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":3932,"src":"9586:10:18"},"referencedDeclaration":3932,"src":"9586:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":4034,"mutability":"mutable","name":"index","nameLocation":"9618:5:18","nodeType":"VariableDeclaration","scope":4055,"src":"9610:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4033,"name":"uint256","nodeType":"ElementaryTypeName","src":"9610:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9585:39:18"},"returnParameters":{"id":4038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4055,"src":"9648:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4036,"name":"address","nodeType":"ElementaryTypeName","src":"9648:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9647:9:18"},"scope":4219,"src":"9574:156:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4084,"nodeType":"Block","src":"10351:219:18","statements":[{"assignments":[4069],"declarations":[{"constant":false,"id":4069,"mutability":"mutable","name":"store","nameLocation":"10378:5:18","nodeType":"VariableDeclaration","scope":4084,"src":"10361:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4067,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10361:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4068,"nodeType":"ArrayTypeName","src":"10361:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":4074,"initialValue":{"arguments":[{"expression":{"id":4071,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"10394:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":4072,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10398:6:18","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3931,"src":"10394:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4070,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"10386:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3617_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":4073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10386:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10361:44:18"},{"assignments":[4079],"declarations":[{"constant":false,"id":4079,"mutability":"mutable","name":"result","nameLocation":"10432:6:18","nodeType":"VariableDeclaration","scope":4084,"src":"10415:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4077,"name":"address","nodeType":"ElementaryTypeName","src":"10415:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4078,"nodeType":"ArrayTypeName","src":"10415:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4080,"nodeType":"VariableDeclarationStatement","src":"10415:23:18"},{"AST":{"nativeSrc":"10501:39:18","nodeType":"YulBlock","src":"10501:39:18","statements":[{"nativeSrc":"10515:15:18","nodeType":"YulAssignment","src":"10515:15:18","value":{"name":"store","nativeSrc":"10525:5:18","nodeType":"YulIdentifier","src":"10525:5:18"},"variableNames":[{"name":"result","nativeSrc":"10515:6:18","nodeType":"YulIdentifier","src":"10515:6:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":4079,"isOffset":false,"isSlot":false,"src":"10515:6:18","valueSize":1},{"declaration":4069,"isOffset":false,"isSlot":false,"src":"10525:5:18","valueSize":1}],"id":4081,"nodeType":"InlineAssembly","src":"10492:48:18"},{"expression":{"id":4082,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4079,"src":"10557:6:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":4064,"id":4083,"nodeType":"Return","src":"10550:13:18"}]},"documentation":{"id":4056,"nodeType":"StructuredDocumentation","src":"9736:529:18","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":4085,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10279:6:18","nodeType":"FunctionDefinition","parameters":{"id":4060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4059,"mutability":"mutable","name":"set","nameLocation":"10305:3:18","nodeType":"VariableDeclaration","scope":4085,"src":"10286:22:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":4058,"nodeType":"UserDefinedTypeName","pathNode":{"id":4057,"name":"AddressSet","nameLocations":["10286:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":3932,"src":"10286:10:18"},"referencedDeclaration":3932,"src":"10286:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10285:24:18"},"returnParameters":{"id":4064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4063,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4085,"src":"10333:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4061,"name":"address","nodeType":"ElementaryTypeName","src":"10333:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4062,"nodeType":"ArrayTypeName","src":"10333:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10332:18:18"},"scope":4219,"src":"10270:300:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":4089,"members":[{"constant":false,"id":4088,"mutability":"mutable","name":"_inner","nameLocation":"10621:6:18","nodeType":"VariableDeclaration","scope":4089,"src":"10617:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4087,"nodeType":"UserDefinedTypeName","pathNode":{"id":4086,"name":"Set","nameLocations":["10617:3:18"],"nodeType":"IdentifierPath","referencedDeclaration":3617,"src":"10617:3:18"},"referencedDeclaration":3617,"src":"10617:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10599:7:18","nodeType":"StructDefinition","scope":4219,"src":"10592:42:18","visibility":"public"},{"body":{"id":4109,"nodeType":"Block","src":"10877:56:18","statements":[{"expression":{"arguments":[{"expression":{"id":4101,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"10899:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4089_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10903:6:18","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4088,"src":"10899:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":4105,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"10919:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10911:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4103,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10911:7:18","typeDescriptions":{}}},"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10911:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4100,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"10894:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3617_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10894:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4099,"id":4108,"nodeType":"Return","src":"10887:39:18"}]},"documentation":{"id":4090,"nodeType":"StructuredDocumentation","src":"10640:159:18","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":4110,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10813:3:18","nodeType":"FunctionDefinition","parameters":{"id":4096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4093,"mutability":"mutable","name":"set","nameLocation":"10833:3:18","nodeType":"VariableDeclaration","scope":4110,"src":"10817:19:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4089_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4092,"nodeType":"UserDefinedTypeName","pathNode":{"id":4091,"name":"UintSet","nameLocations":["10817:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":4089,"src":"10817:7:18"},"referencedDeclaration":4089,"src":"10817:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4089_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":4095,"mutability":"mutable","name":"value","nameLocation":"10846:5:18","nodeType":"VariableDeclaration","scope":4110,"src":"10838:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4094,"name":"uint256","nodeType":"ElementaryTypeName","src":"10838:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10816:36:18"},"returnParameters":{"id":4099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4098,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4110,"src":"10871:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4097,"name":"bool","nodeType":"ElementaryTypeName","src":"10871:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10870:6:18"},"scope":4219,"src":"10804:129:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4130,"nodeType":"Block","src":"11177:59:18","statements":[{"expression":{"arguments":[{"expression":{"id":4122,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"11202:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4089_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4123,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11206:6:18","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4088,"src":"11202:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":4126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4116,"src":"11222:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11214:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4124,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11214:7:18","typeDescriptions":{}}},"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11214:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4121,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"11194:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3617_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":4128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11194:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4120,"id":4129,"nodeType":"Return","src":"11187:42:18"}]},"documentation":{"id":4111,"nodeType":"StructuredDocumentation","src":"10939:157:18","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":4131,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11110:6:18","nodeType":"FunctionDefinition","parameters":{"id":4117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4114,"mutability":"mutable","name":"set","nameLocation":"11133:3:18","nodeType":"VariableDeclaration","scope":4131,"src":"11117:19:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4089_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4113,"nodeType":"UserDefinedTypeName","pathNode":{"id":4112,"name":"UintSet","nameLocations":["11117:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":4089,"src":"11117:7:18"},"referencedDeclaration":4089,"src":"11117:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4089_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":4116,"mutability":"mutable","name":"value","nameLocation":"11146:5:18","nodeType":"VariableDeclaration","scope":4131,"src":"11138:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4115,"name":"uint256","nodeType":"ElementaryTypeName","src":"11138:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11116:36:18"},"returnParameters":{"id":4120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4131,"src":"11171:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4118,"name":"bool","nodeType":"ElementaryTypeName","src":"11171:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11170:6:18"},"scope":4219,"src":"11101:135:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4151,"nodeType":"Block","src":"11400:61:18","statements":[{"expression":{"arguments":[{"expression":{"id":4143,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"11427:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4089_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4144,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11431:6:18","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4088,"src":"11427:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":4147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4137,"src":"11447:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11439:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4145,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11439:7:18","typeDescriptions":{}}},"id":4148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11439:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4142,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"11417:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3617_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":4149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11417:37:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4141,"id":4150,"nodeType":"Return","src":"11410:44:18"}]},"documentation":{"id":4132,"nodeType":"StructuredDocumentation","src":"11242:70:18","text":" @dev Returns true if the value is in the set. O(1)."},"id":4152,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11326:8:18","nodeType":"FunctionDefinition","parameters":{"id":4138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4135,"mutability":"mutable","name":"set","nameLocation":"11351:3:18","nodeType":"VariableDeclaration","scope":4152,"src":"11335:19:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4089_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4134,"nodeType":"UserDefinedTypeName","pathNode":{"id":4133,"name":"UintSet","nameLocations":["11335:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":4089,"src":"11335:7:18"},"referencedDeclaration":4089,"src":"11335:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4089_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":4137,"mutability":"mutable","name":"value","nameLocation":"11364:5:18","nodeType":"VariableDeclaration","scope":4152,"src":"11356:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4136,"name":"uint256","nodeType":"ElementaryTypeName","src":"11356:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11334:36:18"},"returnParameters":{"id":4141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4152,"src":"11394:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4139,"name":"bool","nodeType":"ElementaryTypeName","src":"11394:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11393:6:18"},"scope":4219,"src":"11317:144:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4166,"nodeType":"Block","src":"11611:43:18","statements":[{"expression":{"arguments":[{"expression":{"id":4162,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4156,"src":"11636:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4089_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4163,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11640:6:18","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4088,"src":"11636:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4161,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3776,"src":"11628:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3617_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":4164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4160,"id":4165,"nodeType":"Return","src":"11621:26:18"}]},"documentation":{"id":4153,"nodeType":"StructuredDocumentation","src":"11467:70:18","text":" @dev Returns the number of values in the set. O(1)."},"id":4167,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11551:6:18","nodeType":"FunctionDefinition","parameters":{"id":4157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4156,"mutability":"mutable","name":"set","nameLocation":"11574:3:18","nodeType":"VariableDeclaration","scope":4167,"src":"11558:19:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4089_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4155,"nodeType":"UserDefinedTypeName","pathNode":{"id":4154,"name":"UintSet","nameLocations":["11558:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":4089,"src":"11558:7:18"},"referencedDeclaration":4089,"src":"11558:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4089_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"11557:21:18"},"returnParameters":{"id":4160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4167,"src":"11602:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4158,"name":"uint256","nodeType":"ElementaryTypeName","src":"11602:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11601:9:18"},"scope":4219,"src":"11542:112:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4187,"nodeType":"Block","src":"12076:55:18","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":4181,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"12105:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4089_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4182,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12109:6:18","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4088,"src":"12105:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":4183,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4173,"src":"12117:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4180,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3793,"src":"12101:3:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3617_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12101:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12093:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4178,"name":"uint256","nodeType":"ElementaryTypeName","src":"12093:7:18","typeDescriptions":{}}},"id":4185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12093:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4177,"id":4186,"nodeType":"Return","src":"12086:38:18"}]},"documentation":{"id":4168,"nodeType":"StructuredDocumentation","src":"11660:331:18","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":4188,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"12005:2:18","nodeType":"FunctionDefinition","parameters":{"id":4174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4171,"mutability":"mutable","name":"set","nameLocation":"12024:3:18","nodeType":"VariableDeclaration","scope":4188,"src":"12008:19:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4089_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4170,"nodeType":"UserDefinedTypeName","pathNode":{"id":4169,"name":"UintSet","nameLocations":["12008:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":4089,"src":"12008:7:18"},"referencedDeclaration":4089,"src":"12008:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4089_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":4173,"mutability":"mutable","name":"index","nameLocation":"12037:5:18","nodeType":"VariableDeclaration","scope":4188,"src":"12029:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4172,"name":"uint256","nodeType":"ElementaryTypeName","src":"12029:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12007:36:18"},"returnParameters":{"id":4177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4176,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4188,"src":"12067:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4175,"name":"uint256","nodeType":"ElementaryTypeName","src":"12067:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12066:9:18"},"scope":4219,"src":"11996:135:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4217,"nodeType":"Block","src":"12749:219:18","statements":[{"assignments":[4202],"declarations":[{"constant":false,"id":4202,"mutability":"mutable","name":"store","nameLocation":"12776:5:18","nodeType":"VariableDeclaration","scope":4217,"src":"12759:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4200,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12759:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4201,"nodeType":"ArrayTypeName","src":"12759:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":4207,"initialValue":{"arguments":[{"expression":{"id":4204,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"12792:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4089_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4205,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12796:6:18","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4088,"src":"12792:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4203,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"12784:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3617_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":4206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12784:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12759:44:18"},{"assignments":[4212],"declarations":[{"constant":false,"id":4212,"mutability":"mutable","name":"result","nameLocation":"12830:6:18","nodeType":"VariableDeclaration","scope":4217,"src":"12813:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4210,"name":"uint256","nodeType":"ElementaryTypeName","src":"12813:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4211,"nodeType":"ArrayTypeName","src":"12813:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4213,"nodeType":"VariableDeclarationStatement","src":"12813:23:18"},{"AST":{"nativeSrc":"12899:39:18","nodeType":"YulBlock","src":"12899:39:18","statements":[{"nativeSrc":"12913:15:18","nodeType":"YulAssignment","src":"12913:15:18","value":{"name":"store","nativeSrc":"12923:5:18","nodeType":"YulIdentifier","src":"12923:5:18"},"variableNames":[{"name":"result","nativeSrc":"12913:6:18","nodeType":"YulIdentifier","src":"12913:6:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":4212,"isOffset":false,"isSlot":false,"src":"12913:6:18","valueSize":1},{"declaration":4202,"isOffset":false,"isSlot":false,"src":"12923:5:18","valueSize":1}],"id":4214,"nodeType":"InlineAssembly","src":"12890:48:18"},{"expression":{"id":4215,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"12955:6:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":4197,"id":4216,"nodeType":"Return","src":"12948:13:18"}]},"documentation":{"id":4189,"nodeType":"StructuredDocumentation","src":"12137:529:18","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":4218,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12680:6:18","nodeType":"FunctionDefinition","parameters":{"id":4193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4192,"mutability":"mutable","name":"set","nameLocation":"12703:3:18","nodeType":"VariableDeclaration","scope":4218,"src":"12687:19:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4089_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4191,"nodeType":"UserDefinedTypeName","pathNode":{"id":4190,"name":"UintSet","nameLocations":["12687:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":4089,"src":"12687:7:18"},"referencedDeclaration":4089,"src":"12687:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4089_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12686:21:18"},"returnParameters":{"id":4197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4196,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4218,"src":"12731:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4194,"name":"uint256","nodeType":"ElementaryTypeName","src":"12731:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4195,"nodeType":"ArrayTypeName","src":"12731:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12730:18:18"},"scope":4219,"src":"12671:297:18","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4220,"src":"1330:11640:18","usedErrors":[],"usedEvents":[]}],"src":"205:12766:18"},"id":18},"contracts/AraraCoin.sol":{"ast":{"absolutePath":"contracts/AraraCoin.sol","exportedSymbols":{"AraraCoin":[4640],"Context":[1148],"ECDSA":[2146],"EIP712":[2373],"ERC20":[824],"ERC20Permit":[1056],"IERC20":[902],"IERC20Errors":[214],"IERC20Metadata":[1082],"IERC20Permit":[1118],"ITaxHandler":[4656],"Nonces":[1216],"Ownable":[147]},"id":4641,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4221,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"81:24:19"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":4222,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4641,"sourceUnit":825,"src":"107:55:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":4223,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4641,"sourceUnit":1057,"src":"163:72:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":4224,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4641,"sourceUnit":148,"src":"236:52:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/tax/ITaxHandler.sol","file":"./tax/ITaxHandler.sol","id":4225,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4641,"sourceUnit":4657,"src":"290:31:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4226,"name":"ERC20","nameLocations":["345:5:19"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"345:5:19"},"id":4227,"nodeType":"InheritanceSpecifier","src":"345:5:19"},{"baseName":{"id":4228,"name":"ERC20Permit","nameLocations":["352:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":1056,"src":"352:11:19"},"id":4229,"nodeType":"InheritanceSpecifier","src":"352:11:19"},{"baseName":{"id":4230,"name":"Ownable","nameLocations":["365:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"365:7:19"},"id":4231,"nodeType":"InheritanceSpecifier","src":"365:7:19"}],"canonicalName":"AraraCoin","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4640,"linearizedBaseContracts":[4640,147,1056,1216,2373,172,1118,824,214,1082,902,1148],"name":"AraraCoin","nameLocation":"332:9:19","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"fca6172f","id":4234,"mutability":"mutable","name":"thirdPartyServices","nameLocation":"394:18:19","nodeType":"VariableDeclaration","scope":4640,"src":"379:78:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4232,"name":"address","nodeType":"ElementaryTypeName","src":"379:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307837303939373937304335313831326463334130313043376430316235306530643137646337394338","id":4233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"415:42:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x70997970C51812dc3A010C7d01b50e0d17dc79C8"},"visibility":"public"},{"constant":false,"functionSelector":"5a7adf7f","id":4237,"mutability":"mutable","name":"preSale","nameLocation":"478:7:19","nodeType":"VariableDeclaration","scope":4640,"src":"463:67:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4235,"name":"address","nodeType":"ElementaryTypeName","src":"463:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307833433434436444644236613930306661326235383564643239396530336431324641343239334243","id":4236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"488:42:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC"},"visibility":"public"},{"constant":false,"functionSelector":"bbaa49da","id":4240,"mutability":"mutable","name":"initialLaunch","nameLocation":"551:13:19","nodeType":"VariableDeclaration","scope":4640,"src":"536:73:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4238,"name":"address","nodeType":"ElementaryTypeName","src":"536:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307839304637396266364542326334663837303336354537383539383245316631303145393362393036","id":4239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"567:42:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x90F79bf6EB2c4f870365E785982E1f101E93b906"},"visibility":"public"},{"constant":false,"functionSelector":"8ac27f5f","id":4243,"mutability":"mutable","name":"investors","nameLocation":"630:9:19","nodeType":"VariableDeclaration","scope":4640,"src":"615:69:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4241,"name":"address","nodeType":"ElementaryTypeName","src":"615:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307831356433344141663534323637444237443763333637383339414166373141303061324336413635","id":4242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"642:42:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x15d34AAf54267DB7D7c367839AAf71A00a2C6A65"},"visibility":"public"},{"constant":false,"functionSelector":"c519099d","id":4246,"mutability":"mutable","name":"teamAndFounders","nameLocation":"705:15:19","nodeType":"VariableDeclaration","scope":4640,"src":"690:75:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4244,"name":"address","nodeType":"ElementaryTypeName","src":"690:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307839393635353037443161353562634332363935433538626131364642333764383139423041346463","id":4245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"723:42:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x9965507D1a55bcC2695C58ba16FB37d819B0A4dc"},"visibility":"public"},{"constant":false,"functionSelector":"7edd9e5e","id":4249,"mutability":"mutable","name":"preservationProjects","nameLocation":"786:20:19","nodeType":"VariableDeclaration","scope":4640,"src":"771:80:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4247,"name":"address","nodeType":"ElementaryTypeName","src":"771:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307839373645413734303236453732363535346442363537664135343736336162643043336130616139","id":4248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"809:42:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x976EA74026E726554dB657fA54763abd0C3a0aa9"},"visibility":"public"},{"constant":true,"id":4256,"mutability":"constant","name":"TOTAL_SUPPLY","nameLocation":"882:12:19","nodeType":"VariableDeclaration","scope":4640,"src":"857:66:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4250,"name":"uint256","nodeType":"ElementaryTypeName","src":"857:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000_by_1","typeString":"int_const 100000000000000000000000000000"},"id":4255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130305f3030305f3030305f303030","id":4251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"897:15:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000000_by_1","typeString":"int_const 100000000000"},"value":"100_000_000_000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":4254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"915:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":4253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"921:2:19","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"915:8:19","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"897:26:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000_by_1","typeString":"int_const 100000000000000000000000000000"}},"visibility":"private"},{"constant":false,"functionSelector":"12280ba8","id":4259,"mutability":"mutable","name":"taxHandler","nameLocation":"953:10:19","nodeType":"VariableDeclaration","scope":4640,"src":"934:29:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ITaxHandler_$4656","typeString":"contract ITaxHandler"},"typeName":{"id":4258,"nodeType":"UserDefinedTypeName","pathNode":{"id":4257,"name":"ITaxHandler","nameLocations":["934:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":4656,"src":"934:11:19"},"referencedDeclaration":4656,"src":"934:11:19","typeDescriptions":{"typeIdentifier":"t_contract$_ITaxHandler_$4656","typeString":"contract ITaxHandler"}},"visibility":"public"},{"constant":false,"functionSelector":"4ada218b","id":4261,"mutability":"mutable","name":"tradingEnabled","nameLocation":"981:14:19","nodeType":"VariableDeclaration","scope":4640,"src":"969:26:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4260,"name":"bool","nodeType":"ElementaryTypeName","src":"969:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"id":4265,"mutability":"mutable","name":"_canTrade","nameLocation":"1034:9:19","nodeType":"VariableDeclaration","scope":4640,"src":"1001:42:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":4264,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4262,"name":"address","nodeType":"ElementaryTypeName","src":"1009:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1001:24:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4263,"name":"bool","nodeType":"ElementaryTypeName","src":"1020:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"anonymous":false,"eventSelector":"799663458a5ef2936f7fa0c99b3336c69c25890f82974f04e811e5bb359186c7","id":4267,"name":"TradingEnabled","nameLocation":"1055:14:19","nodeType":"EventDefinition","parameters":{"id":4266,"nodeType":"ParameterList","parameters":[],"src":"1069:2:19"},"src":"1049:23:19"},{"anonymous":false,"documentation":{"id":4268,"nodeType":"StructuredDocumentation","src":"1077:61:19","text":"@notice Emitted when the tax handler contract is changed."},"eventSelector":"00d910c9481701ba32afe0c247572aaece27072f230c8ec769bf245fc0b38de6","id":4274,"name":"TaxHandlerChanged","nameLocation":"1149:17:19","nodeType":"EventDefinition","parameters":{"id":4273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4270,"indexed":false,"mutability":"mutable","name":"oldAddress","nameLocation":"1175:10:19","nodeType":"VariableDeclaration","scope":4274,"src":"1167:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4269,"name":"address","nodeType":"ElementaryTypeName","src":"1167:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4272,"indexed":false,"mutability":"mutable","name":"newAddress","nameLocation":"1195:10:19","nodeType":"VariableDeclaration","scope":4274,"src":"1187:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4271,"name":"address","nodeType":"ElementaryTypeName","src":"1187:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1166:40:19"},"src":"1143:64:19"},{"body":{"id":4384,"nodeType":"Block","src":"1375:674:19","statements":[{"expression":{"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4291,"name":"taxHandler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"1385:10:19","typeDescriptions":{"typeIdentifier":"t_contract$_ITaxHandler_$4656","typeString":"contract ITaxHandler"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4293,"name":"taxHandlerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"1410:17:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4292,"name":"ITaxHandler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4656,"src":"1398:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ITaxHandler_$4656_$","typeString":"type(contract ITaxHandler)"}},"id":4294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1398:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ITaxHandler_$4656","typeString":"contract ITaxHandler"}},"src":"1385:43:19","typeDescriptions":{"typeIdentifier":"t_contract$_ITaxHandler_$4656","typeString":"contract ITaxHandler"}},"id":4296,"nodeType":"ExpressionStatement","src":"1385:43:19"},{"expression":{"id":4304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4297,"name":"_canTrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"1438:9:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4302,"indexExpression":{"arguments":[{"hexValue":"30","id":4300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1456:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1448:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4298,"name":"address","nodeType":"ElementaryTypeName","src":"1448:7:19","typeDescriptions":{}}},"id":4301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1448:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1438:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1462:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1438:28:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4305,"nodeType":"ExpressionStatement","src":"1438:28:19"},{"expression":{"id":4310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4306,"name":"_canTrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"1476:9:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4308,"indexExpression":{"id":4307,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4276,"src":"1486:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1476:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1502:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1476:30:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4311,"nodeType":"ExpressionStatement","src":"1476:30:19"},{"expression":{"arguments":[{"expression":{"id":4313,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1522:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1526:6:19","memberName":"sender","nodeType":"MemberAccess","src":"1522:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4315,"name":"TOTAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"1534:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4312,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"1516:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1516:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4317,"nodeType":"ExpressionStatement","src":"1516:31:19"},{"expression":{"arguments":[{"expression":{"id":4319,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1575:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1579:6:19","memberName":"sender","nodeType":"MemberAccess","src":"1575:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4321,"name":"thirdPartyServices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4234,"src":"1587:18:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":4322,"name":"TOTAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"1607:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"35","id":4323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1622:1:19","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"1607:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":4325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1626:3:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"1607:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4318,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"1565:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1565:65:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4328,"nodeType":"ExpressionStatement","src":"1565:65:19"},{"expression":{"arguments":[{"expression":{"id":4330,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1659:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1663:6:19","memberName":"sender","nodeType":"MemberAccess","src":"1659:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4332,"name":"preSale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4237,"src":"1671:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":4333,"name":"TOTAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"1681:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130","id":4334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1696:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1681:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":4336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1701:3:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"1681:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4329,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"1649:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1649:56:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4339,"nodeType":"ExpressionStatement","src":"1649:56:19"},{"expression":{"arguments":[{"expression":{"id":4341,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1734:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1738:6:19","memberName":"sender","nodeType":"MemberAccess","src":"1734:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4343,"name":"initialLaunch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"1746:13:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":4344,"name":"TOTAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"1762:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3230","id":4345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1777:2:19","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"1762:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":4347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1782:3:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"1762:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4340,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"1724:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1724:62:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4350,"nodeType":"ExpressionStatement","src":"1724:62:19"},{"expression":{"arguments":[{"expression":{"id":4352,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1815:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1819:6:19","memberName":"sender","nodeType":"MemberAccess","src":"1815:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4354,"name":"investors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"1827:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":4355,"name":"TOTAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"1839:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3235","id":4356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:19","typeDescriptions":{"typeIdentifier":"t_rational_25_by_1","typeString":"int_const 25"},"value":"25"},"src":"1839:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":4358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1859:3:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"1839:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4351,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"1805:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1805:58:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4361,"nodeType":"ExpressionStatement","src":"1805:58:19"},{"expression":{"arguments":[{"expression":{"id":4363,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1892:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1896:6:19","memberName":"sender","nodeType":"MemberAccess","src":"1892:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4365,"name":"teamAndFounders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4246,"src":"1904:15:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":4366,"name":"TOTAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"1922:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3230","id":4367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1937:2:19","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"1922:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":4369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1942:3:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"1922:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4362,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"1882:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1882:64:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4372,"nodeType":"ExpressionStatement","src":"1882:64:19"},{"expression":{"arguments":[{"expression":{"id":4374,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1975:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:19","memberName":"sender","nodeType":"MemberAccess","src":"1975:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4376,"name":"preservationProjects","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"1987:20:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":4377,"name":"TOTAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"2009:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3230","id":4378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2024:2:19","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"2009:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":4380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2029:3:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"2009:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4373,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"1965:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1965:68:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4383,"nodeType":"ExpressionStatement","src":"1965:68:19"}]},"id":4385,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4172617261436f696e","id":4281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1288:11:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_2b3aecf7df38790a64aa47cac0f329e66520f4ad81720e4761e93ce9fb854278","typeString":"literal_string \"AraraCoin\""},"value":"AraraCoin"},{"hexValue":"415241","id":4282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1301:5:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_f7d1bec9d15d3a46b94945959edf7e342087ba88f1ee67d68e32022c75ae2f07","typeString":"literal_string \"ARA\""},"value":"ARA"}],"id":4283,"kind":"baseConstructorSpecifier","modifierName":{"id":4280,"name":"ERC20","nameLocations":["1282:5:19"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"1282:5:19"},"nodeType":"ModifierInvocation","src":"1282:25:19"},{"arguments":[{"hexValue":"4172617261436f696e","id":4285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1328:11:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_2b3aecf7df38790a64aa47cac0f329e66520f4ad81720e4761e93ce9fb854278","typeString":"literal_string \"AraraCoin\""},"value":"AraraCoin"}],"id":4286,"kind":"baseConstructorSpecifier","modifierName":{"id":4284,"name":"ERC20Permit","nameLocations":["1316:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":1056,"src":"1316:11:19"},"nodeType":"ModifierInvocation","src":"1316:24:19"},{"arguments":[{"id":4288,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4276,"src":"1357:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4289,"kind":"baseConstructorSpecifier","modifierName":{"id":4287,"name":"Ownable","nameLocations":["1349:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1349:7:19"},"nodeType":"ModifierInvocation","src":"1349:21:19"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4276,"mutability":"mutable","name":"initialOwner","nameLocation":"1233:12:19","nodeType":"VariableDeclaration","scope":4385,"src":"1225:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4275,"name":"address","nodeType":"ElementaryTypeName","src":"1225:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4278,"mutability":"mutable","name":"taxHandlerAddress","nameLocation":"1255:17:19","nodeType":"VariableDeclaration","scope":4385,"src":"1247:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4277,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1224:49:19"},"returnParameters":{"id":4290,"nodeType":"ParameterList","parameters":[],"src":"1375:0:19"},"scope":4640,"src":"1213:836:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4403,"nodeType":"Block","src":"2099:140:19","statements":[{"expression":{"arguments":[{"id":4392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2117:15:19","subExpression":{"id":4391,"name":"tradingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"2118:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4172617261436f696e2074726164696e6720616c726561647920656e61626c6564","id":4393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2134:35:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4","typeString":"literal_string \"AraraCoin trading already enabled\""},"value":"AraraCoin trading already enabled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4","typeString":"literal_string \"AraraCoin trading already enabled\""}],"id":4390,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2109:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2109:61:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4395,"nodeType":"ExpressionStatement","src":"2109:61:19"},{"expression":{"id":4398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4396,"name":"tradingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"2180:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2197:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2180:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4399,"nodeType":"ExpressionStatement","src":"2180:21:19"},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4400,"name":"TradingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4267,"src":"2216:14:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2216:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4402,"nodeType":"EmitStatement","src":"2211:21:19"}]},"functionSelector":"8a8c523c","id":4404,"implemented":true,"kind":"function","modifiers":[{"id":4388,"kind":"modifierInvocation","modifierName":{"id":4387,"name":"onlyOwner","nameLocations":["2089:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2089:9:19"},"nodeType":"ModifierInvocation","src":"2089:9:19"}],"name":"enableTrading","nameLocation":"2064:13:19","nodeType":"FunctionDefinition","parameters":{"id":4386,"nodeType":"ParameterList","parameters":[],"src":"2077:2:19"},"returnParameters":{"id":4389,"nodeType":"ParameterList","parameters":[],"src":"2099:0:19"},"scope":4640,"src":"2055:184:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4429,"nodeType":"Block","src":"2314:194:19","statements":[{"assignments":[4412],"declarations":[{"constant":false,"id":4412,"mutability":"mutable","name":"oldTaxHandlerAddress","nameLocation":"2332:20:19","nodeType":"VariableDeclaration","scope":4429,"src":"2324:28:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4411,"name":"address","nodeType":"ElementaryTypeName","src":"2324:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4417,"initialValue":{"arguments":[{"id":4415,"name":"taxHandler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"2363:10:19","typeDescriptions":{"typeIdentifier":"t_contract$_ITaxHandler_$4656","typeString":"contract ITaxHandler"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ITaxHandler_$4656","typeString":"contract ITaxHandler"}],"id":4414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2355:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4413,"name":"address","nodeType":"ElementaryTypeName","src":"2355:7:19","typeDescriptions":{}}},"id":4416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2355:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2324:50:19"},{"expression":{"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4418,"name":"taxHandler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"2384:10:19","typeDescriptions":{"typeIdentifier":"t_contract$_ITaxHandler_$4656","typeString":"contract ITaxHandler"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4420,"name":"taxHandlerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4406,"src":"2409:17:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4419,"name":"ITaxHandler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4656,"src":"2397:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ITaxHandler_$4656_$","typeString":"type(contract ITaxHandler)"}},"id":4421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2397:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ITaxHandler_$4656","typeString":"contract ITaxHandler"}},"src":"2384:43:19","typeDescriptions":{"typeIdentifier":"t_contract$_ITaxHandler_$4656","typeString":"contract ITaxHandler"}},"id":4423,"nodeType":"ExpressionStatement","src":"2384:43:19"},{"eventCall":{"arguments":[{"id":4425,"name":"oldTaxHandlerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"2461:20:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4426,"name":"taxHandlerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4406,"src":"2483:17:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4424,"name":"TaxHandlerChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"2443:17:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":4427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2443:58:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4428,"nodeType":"EmitStatement","src":"2438:63:19"}]},"functionSelector":"488d4a51","id":4430,"implemented":true,"kind":"function","modifiers":[{"id":4409,"kind":"modifierInvocation","modifierName":{"id":4408,"name":"onlyOwner","nameLocations":["2304:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2304:9:19"},"nodeType":"ModifierInvocation","src":"2304:9:19"}],"name":"setTaxHandler","nameLocation":"2254:13:19","nodeType":"FunctionDefinition","parameters":{"id":4407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4406,"mutability":"mutable","name":"taxHandlerAddress","nameLocation":"2276:17:19","nodeType":"VariableDeclaration","scope":4430,"src":"2268:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4405,"name":"address","nodeType":"ElementaryTypeName","src":"2268:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2267:27:19"},"returnParameters":{"id":4410,"nodeType":"ParameterList","parameters":[],"src":"2314:0:19"},"scope":4640,"src":"2245:263:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4479,"nodeType":"Block","src":"2626:256:19","statements":[{"expression":{"arguments":[{"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2644:15:19","subExpression":{"id":4442,"name":"tradingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"2645:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5447433a2074726164696e6720616c726561647920656e61626c6564","id":4444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2661:30:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_24cf83481f2a8ba90e1c3f2ad6b040e1487e7c57c8c9c5939238bafe3879f015","typeString":"literal_string \"TGC: trading already enabled\""},"value":"TGC: trading already enabled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24cf83481f2a8ba90e1c3f2ad6b040e1487e7c57c8c9c5939238bafe3879f015","typeString":"literal_string \"TGC: trading already enabled\""}],"id":4441,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2636:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2636:56:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4446,"nodeType":"ExpressionStatement","src":"2636:56:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4448,"name":"pairs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4433,"src":"2710:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2716:6:19","memberName":"length","nodeType":"MemberAccess","src":"2710:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4450,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4436,"src":"2726:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":4451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2733:6:19","memberName":"length","nodeType":"MemberAccess","src":"2726:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2710:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5447433a20696e76616c696420706172616d6574657273","id":4453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2741:25:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_ba7cd66ed381e90a6a6f5c81315eeba2f99d0bb92ba7388f35e237d2bf061d88","typeString":"literal_string \"TGC: invalid parameters\""},"value":"TGC: invalid parameters"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ba7cd66ed381e90a6a6f5c81315eeba2f99d0bb92ba7388f35e237d2bf061d88","typeString":"literal_string \"TGC: invalid parameters\""}],"id":4447,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2702:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2702:65:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4455,"nodeType":"ExpressionStatement","src":"2702:65:19"},{"body":{"id":4477,"nodeType":"Block","src":"2820:56:19","statements":[{"expression":{"id":4475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4467,"name":"_canTrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"2834:9:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4471,"indexExpression":{"baseExpression":{"id":4468,"name":"pairs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4433,"src":"2844:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4470,"indexExpression":{"id":4469,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4457,"src":"2850:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2844:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2834:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4472,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4436,"src":"2856:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":4474,"indexExpression":{"id":4473,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4457,"src":"2863:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2856:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2834:31:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4476,"nodeType":"ExpressionStatement","src":"2834:31:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4460,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4457,"src":"2797:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4461,"name":"pairs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4433,"src":"2801:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2807:6:19","memberName":"length","nodeType":"MemberAccess","src":"2801:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2797:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4478,"initializationExpression":{"assignments":[4457],"declarations":[{"constant":false,"id":4457,"mutability":"mutable","name":"i","nameLocation":"2790:1:19","nodeType":"VariableDeclaration","scope":4478,"src":"2782:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4456,"name":"uint256","nodeType":"ElementaryTypeName","src":"2782:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4459,"initialValue":{"hexValue":"30","id":4458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2794:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2782:13:19"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2815:3:19","subExpression":{"id":4464,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4457,"src":"2815:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4466,"nodeType":"ExpressionStatement","src":"2815:3:19"},"nodeType":"ForStatement","src":"2777:99:19"}]},"functionSelector":"44447b4e","id":4480,"implemented":true,"kind":"function","modifiers":[{"id":4439,"kind":"modifierInvocation","modifierName":{"id":4438,"name":"onlyOwner","nameLocations":["2616:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2616:9:19"},"nodeType":"ModifierInvocation","src":"2616:9:19"}],"name":"setCanTrade","nameLocation":"2523:11:19","nodeType":"FunctionDefinition","parameters":{"id":4437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4433,"mutability":"mutable","name":"pairs","nameLocation":"2563:5:19","nodeType":"VariableDeclaration","scope":4480,"src":"2544:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4431,"name":"address","nodeType":"ElementaryTypeName","src":"2544:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4432,"nodeType":"ArrayTypeName","src":"2544:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4436,"mutability":"mutable","name":"status","nameLocation":"2594:6:19","nodeType":"VariableDeclaration","scope":4480,"src":"2578:22:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4434,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4435,"nodeType":"ArrayTypeName","src":"2578:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"2534:72:19"},"returnParameters":{"id":4440,"nodeType":"ParameterList","parameters":[],"src":"2626:0:19"},"scope":4640,"src":"2514:368:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[631],"body":{"id":4510,"nodeType":"Block","src":"2992:157:19","statements":[{"condition":{"id":4492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3006:15:19","subExpression":{"id":4491,"name":"tradingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"3007:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4501,"nodeType":"IfStatement","src":"3002:101:19","trueBody":{"id":4500,"nodeType":"Block","src":"3023:80:19","statements":[{"expression":{"arguments":[{"baseExpression":{"id":4494,"name":"_canTrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"3045:9:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4496,"indexExpression":{"id":4495,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4482,"src":"3055:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3045:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4172617261436f696e2074726164652069732064697361626c6564","id":4497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3062:29:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7","typeString":"literal_string \"AraraCoin trade is disabled\""},"value":"AraraCoin trade is disabled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7","typeString":"literal_string \"AraraCoin trade is disabled\""}],"id":4493,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3037:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3037:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4499,"nodeType":"ExpressionStatement","src":"3037:55:19"}]}},{"expression":{"arguments":[{"id":4505,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4482,"src":"3126:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4506,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"3132:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"3136:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4502,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3112:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AraraCoin_$4640_$","typeString":"type(contract super AraraCoin)"}},"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3118:7:19","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":631,"src":"3112:13:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3112:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4509,"nodeType":"ExpressionStatement","src":"3112:30:19"}]},"id":4511,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"2897:7:19","nodeType":"FunctionDefinition","overrides":{"id":4489,"nodeType":"OverrideSpecifier","overrides":[{"id":4488,"name":"ERC20","nameLocations":["2981:5:19"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"2981:5:19"}],"src":"2972:15:19"},"parameters":{"id":4487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4482,"mutability":"mutable","name":"from","nameLocation":"2913:4:19","nodeType":"VariableDeclaration","scope":4511,"src":"2905:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4481,"name":"address","nodeType":"ElementaryTypeName","src":"2905:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4484,"mutability":"mutable","name":"to","nameLocation":"2927:2:19","nodeType":"VariableDeclaration","scope":4511,"src":"2919:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4483,"name":"address","nodeType":"ElementaryTypeName","src":"2919:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4486,"mutability":"mutable","name":"value","nameLocation":"2939:5:19","nodeType":"VariableDeclaration","scope":4511,"src":"2931:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4485,"name":"uint256","nodeType":"ElementaryTypeName","src":"2931:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2904:41:19"},"returnParameters":{"id":4490,"nodeType":"ParameterList","parameters":[],"src":"2992:0:19"},"scope":4640,"src":"2888:261:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4613,"nodeType":"Block","src":"3231:419:19","statements":[{"assignments":[4519],"declarations":[{"constant":false,"id":4519,"mutability":"mutable","name":"value","nameLocation":"3249:5:19","nodeType":"VariableDeclaration","scope":4613,"src":"3241:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4518,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3241:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4530,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":4526,"name":"_addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4513,"src":"3281:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3273:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4524,"name":"uint160","nodeType":"ElementaryTypeName","src":"3273:7:19","typeDescriptions":{}}},"id":4527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3265:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4522,"name":"uint256","nodeType":"ElementaryTypeName","src":"3265:7:19","typeDescriptions":{}}},"id":4528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3257:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4520,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3257:7:19","typeDescriptions":{}}},"id":4529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3257:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3241:48:19"},{"assignments":[4532],"declarations":[{"constant":false,"id":4532,"mutability":"mutable","name":"alphabet","nameLocation":"3312:8:19","nodeType":"VariableDeclaration","scope":4613,"src":"3299:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4531,"name":"bytes","nodeType":"ElementaryTypeName","src":"3299:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4534,"initialValue":{"hexValue":"30313233343536373839616263646566","id":4533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3323:18:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"nodeType":"VariableDeclarationStatement","src":"3299:42:19"},{"assignments":[4536],"declarations":[{"constant":false,"id":4536,"mutability":"mutable","name":"str","nameLocation":"3365:3:19","nodeType":"VariableDeclaration","scope":4613,"src":"3352:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4535,"name":"bytes","nodeType":"ElementaryTypeName","src":"3352:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4541,"initialValue":{"arguments":[{"hexValue":"3432","id":4539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3381:2:19","typeDescriptions":{"typeIdentifier":"t_rational_42_by_1","typeString":"int_const 42"},"value":"42"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_42_by_1","typeString":"int_const 42"}],"id":4538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3371:9:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4537,"name":"bytes","nodeType":"ElementaryTypeName","src":"3375:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3371:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3352:32:19"},{"expression":{"id":4546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4542,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"3394:3:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4544,"indexExpression":{"hexValue":"30","id":4543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3398:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3394:6:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3403:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"3394:12:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4547,"nodeType":"ExpressionStatement","src":"3394:12:19"},{"expression":{"id":4552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4548,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"3416:3:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4550,"indexExpression":{"hexValue":"31","id":4549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3420:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3416:6:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":4551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3425:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"3416:12:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4553,"nodeType":"ExpressionStatement","src":"3416:12:19"},{"body":{"id":4606,"nodeType":"Block","src":"3471:145:19","statements":[{"expression":{"id":4583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4564,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"3485:3:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4570,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3489:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4566,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"3493:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":4567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3497:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3493:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3489:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3485:14:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4571,"name":"alphabet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"3502:8:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4582,"indexExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4519,"src":"3517:5:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4578,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4575,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"3523:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3132","id":4576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3527:2:19","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"src":"3523:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3517:13:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":4579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3534:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3517:18:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3511:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4572,"name":"uint8","nodeType":"ElementaryTypeName","src":"3511:5:19","typeDescriptions":{}}},"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3511:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3502:35:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"3485:52:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4584,"nodeType":"ExpressionStatement","src":"3485:52:19"},{"expression":{"id":4604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4585,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"3551:3:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4591,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3555:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4587,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"3559:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":4588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3563:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3559:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3555:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3551:14:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4592,"name":"alphabet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"3568:8:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4603,"indexExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4519,"src":"3583:5:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4599,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4596,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"3589:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3132","id":4597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3593:2:19","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"src":"3589:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3583:13:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783066","id":4600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3599:4:19","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0x0f"},"src":"3583:20:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3577:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4593,"name":"uint8","nodeType":"ElementaryTypeName","src":"3577:5:19","typeDescriptions":{}}},"id":4602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3577:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3568:37:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"3551:54:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4605,"nodeType":"ExpressionStatement","src":"3551:54:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4558,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"3458:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3230","id":4559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3462:2:19","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"3458:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4607,"initializationExpression":{"assignments":[4555],"declarations":[{"constant":false,"id":4555,"mutability":"mutable","name":"i","nameLocation":"3451:1:19","nodeType":"VariableDeclaration","scope":4607,"src":"3443:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4554,"name":"uint256","nodeType":"ElementaryTypeName","src":"3443:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4557,"initialValue":{"hexValue":"30","id":4556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3455:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3443:13:19"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3466:3:19","subExpression":{"id":4561,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"3466:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4563,"nodeType":"ExpressionStatement","src":"3466:3:19"},"nodeType":"ForStatement","src":"3438:178:19"},{"expression":{"arguments":[{"id":4610,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"3639:3:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3632:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4608,"name":"string","nodeType":"ElementaryTypeName","src":"3632:6:19","typeDescriptions":{}}},"id":4611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3632:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4517,"id":4612,"nodeType":"Return","src":"3625:18:19"}]},"functionSelector":"5e57966d","id":4614,"implemented":true,"kind":"function","modifiers":[],"name":"addressToString","nameLocation":"3164:15:19","nodeType":"FunctionDefinition","parameters":{"id":4514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4513,"mutability":"mutable","name":"_addr","nameLocation":"3188:5:19","nodeType":"VariableDeclaration","scope":4614,"src":"3180:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4512,"name":"address","nodeType":"ElementaryTypeName","src":"3180:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3179:15:19"},"returnParameters":{"id":4517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4614,"src":"3216:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4515,"name":"string","nodeType":"ElementaryTypeName","src":"3216:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3215:15:19"},"scope":4640,"src":"3155:495:19","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":4638,"nodeType":"Block","src":"3765:119:19","statements":[{"assignments":[4624],"declarations":[{"constant":false,"id":4624,"mutability":"mutable","name":"addrStr","nameLocation":"3789:7:19","nodeType":"VariableDeclaration","scope":4638,"src":"3775:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4623,"name":"string","nodeType":"ElementaryTypeName","src":"3775:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":4628,"initialValue":{"arguments":[{"id":4626,"name":"_addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"3815:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4625,"name":"addressToString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"3799:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":4627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3799:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"3775:46:19"},{"expression":{"arguments":[{"arguments":[{"id":4633,"name":"addrStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"3862:7:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4634,"name":"_str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4618,"src":"3871:4:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4631,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3845:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3849:12:19","memberName":"encodePacked","nodeType":"MemberAccess","src":"3845:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3845:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3838:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4629,"name":"string","nodeType":"ElementaryTypeName","src":"3838:6:19","typeDescriptions":{}}},"id":4636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3838:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4622,"id":4637,"nodeType":"Return","src":"3831:46:19"}]},"functionSelector":"9b75679c","id":4639,"implemented":true,"kind":"function","modifiers":[],"name":"concatenateAddressWithString","nameLocation":"3665:28:19","nodeType":"FunctionDefinition","parameters":{"id":4619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4616,"mutability":"mutable","name":"_addr","nameLocation":"3702:5:19","nodeType":"VariableDeclaration","scope":4639,"src":"3694:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4615,"name":"address","nodeType":"ElementaryTypeName","src":"3694:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4618,"mutability":"mutable","name":"_str","nameLocation":"3723:4:19","nodeType":"VariableDeclaration","scope":4639,"src":"3709:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4617,"name":"string","nodeType":"ElementaryTypeName","src":"3709:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3693:35:19"},"returnParameters":{"id":4622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4639,"src":"3750:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4620,"name":"string","nodeType":"ElementaryTypeName","src":"3750:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3749:15:19"},"scope":4640,"src":"3656:228:19","stateMutability":"pure","virtual":false,"visibility":"public"}],"scope":4641,"src":"323:3563:19","usedErrors":[13,18,184,189,194,203,208,213,933,940,1158,1230,1232,1809,1814,1819],"usedEvents":[24,152,836,845,4267,4274]}],"src":"81:4121:19"},"id":19},"contracts/tax/ITaxHandler.sol":{"ast":{"absolutePath":"contracts/tax/ITaxHandler.sol","exportedSymbols":{"ITaxHandler":[4656]},"id":4657,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4642,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"ITaxHandler","contractDependencies":[],"contractKind":"interface","documentation":{"id":4643,"nodeType":"StructuredDocumentation","src":"58:140:20","text":" @title Tax handler interface\n @dev Any class that implements this interface can be used for protocol-specific tax calculations."},"fullyImplemented":false,"id":4656,"linearizedBaseContracts":[4656],"name":"ITaxHandler","nameLocation":"209:11:20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4644,"nodeType":"StructuredDocumentation","src":"227:270:20","text":" @notice Get number of tokens to pay as tax.\n @param benefactor Address of the benefactor.\n @param beneficiary Address of the beneficiary.\n @param amount Number of tokens in the transfer.\n @return Number of tokens to pay as tax."},"functionSelector":"d7ad21ac","id":4655,"implemented":false,"kind":"function","modifiers":[],"name":"getTax","nameLocation":"511:6:20","nodeType":"FunctionDefinition","parameters":{"id":4651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4646,"mutability":"mutable","name":"benefactor","nameLocation":"535:10:20","nodeType":"VariableDeclaration","scope":4655,"src":"527:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4645,"name":"address","nodeType":"ElementaryTypeName","src":"527:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4648,"mutability":"mutable","name":"beneficiary","nameLocation":"563:11:20","nodeType":"VariableDeclaration","scope":4655,"src":"555:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4647,"name":"address","nodeType":"ElementaryTypeName","src":"555:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4650,"mutability":"mutable","name":"amount","nameLocation":"592:6:20","nodeType":"VariableDeclaration","scope":4655,"src":"584:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4649,"name":"uint256","nodeType":"ElementaryTypeName","src":"584:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"517:87:20"},"returnParameters":{"id":4654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4655,"src":"628:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4652,"name":"uint256","nodeType":"ElementaryTypeName","src":"628:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"627:9:20"},"scope":4656,"src":"502:135:20","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4657,"src":"199:440:20","usedErrors":[],"usedEvents":[]}],"src":"32:607:20"},"id":20},"contracts/tax/StaticTaxHandler.sol":{"ast":{"absolutePath":"contracts/tax/StaticTaxHandler.sol","exportedSymbols":{"Context":[1148],"EnumerableSet":[4219],"ITaxHandler":[4656],"Ownable":[147],"StaticTaxHandler":[4809]},"id":4810,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4658,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:21"},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","id":4659,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4810,"sourceUnit":4220,"src":"58:65:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":4660,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4810,"sourceUnit":148,"src":"124:52:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/tax/ITaxHandler.sol","file":"./ITaxHandler.sol","id":4661,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4810,"sourceUnit":4657,"src":"178:27:21","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4663,"name":"ITaxHandler","nameLocations":["685:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":4656,"src":"685:11:21"},"id":4664,"nodeType":"InheritanceSpecifier","src":"685:11:21"},{"baseName":{"id":4665,"name":"Ownable","nameLocations":["698:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"698:7:21"},"id":4666,"nodeType":"InheritanceSpecifier","src":"698:7:21"}],"canonicalName":"StaticTaxHandler","contractDependencies":[],"contractKind":"contract","documentation":{"id":4662,"nodeType":"StructuredDocumentation","src":"207:448:21","text":" @title Static tax handler contract\n @dev This contract allows protocols to collect tax on transactions that count as either sells or liquidity additions\n to exchange pools. Addresses can be exempted from tax collection, and addresses designated as exchange pools can be\n added and removed by the owner of this contract. The owner of the contract should be set to a DAO-controlled timelock\n or at the very least a multisig wallet."},"fullyImplemented":true,"id":4809,"linearizedBaseContracts":[4809,147,1148,4656],"name":"StaticTaxHandler","nameLocation":"665:16:21","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4670,"libraryName":{"id":4667,"name":"EnumerableSet","nameLocations":["718:13:21"],"nodeType":"IdentifierPath","referencedDeclaration":4219,"src":"718:13:21"},"nodeType":"UsingForDirective","src":"712:49:21","typeName":{"id":4669,"nodeType":"UserDefinedTypeName","pathNode":{"id":4668,"name":"EnumerableSet.AddressSet","nameLocations":["736:13:21","750:10:21"],"nodeType":"IdentifierPath","referencedDeclaration":3932,"src":"736:24:21"},"referencedDeclaration":3932,"src":"736:24:21","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"constant":false,"documentation":{"id":4671,"nodeType":"StructuredDocumentation","src":"767:46:21","text":"@dev The set of addresses exempt from tax."},"id":4674,"mutability":"mutable","name":"_exempted","nameLocation":"851:9:21","nodeType":"VariableDeclaration","scope":4809,"src":"818:42:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":4673,"nodeType":"UserDefinedTypeName","pathNode":{"id":4672,"name":"EnumerableSet.AddressSet","nameLocations":["818:13:21","832:10:21"],"nodeType":"IdentifierPath","referencedDeclaration":3932,"src":"818:24:21"},"referencedDeclaration":3932,"src":"818:24:21","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"private"},{"constant":false,"documentation":{"id":4675,"nodeType":"StructuredDocumentation","src":"867:81:21","text":"@notice How much tax to collect in basis points. 10,000 basis points is 100%."},"functionSelector":"ae7b6d16","id":4677,"mutability":"mutable","name":"taxPercentage","nameLocation":"968:13:21","nodeType":"VariableDeclaration","scope":4809,"src":"953:28:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4676,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"documentation":{"id":4678,"nodeType":"StructuredDocumentation","src":"988:64:21","text":"@notice Emitted when the tax basis points number is updated."},"eventSelector":"4953fbf85b1bef649a55e328880dc688093c62b90bc90dec0ffcb6a1c5cce0a5","id":4684,"name":"TaxPercentageUpdated","nameLocation":"1063:20:21","nodeType":"EventDefinition","parameters":{"id":4683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4680,"indexed":false,"mutability":"mutable","name":"oldTaxPercentage","nameLocation":"1092:16:21","nodeType":"VariableDeclaration","scope":4684,"src":"1084:24:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4679,"name":"uint256","nodeType":"ElementaryTypeName","src":"1084:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4682,"indexed":false,"mutability":"mutable","name":"newTaxPercentage","nameLocation":"1118:16:21","nodeType":"VariableDeclaration","scope":4684,"src":"1110:24:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4681,"name":"uint256","nodeType":"ElementaryTypeName","src":"1110:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1083:52:21"},"src":"1057:79:21"},{"anonymous":false,"documentation":{"id":4685,"nodeType":"StructuredDocumentation","src":"1142:91:21","text":"@notice Emitted when an address is added to or removed from the exempted addresses set."},"eventSelector":"36ee46fa09c2419f7bcf8135c2bdd56bc882be141cb075961717003bed74367d","id":4691,"name":"TaxExemptionUpdated","nameLocation":"1244:19:21","nodeType":"EventDefinition","parameters":{"id":4690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4687,"indexed":true,"mutability":"mutable","name":"wallet","nameLocation":"1280:6:21","nodeType":"VariableDeclaration","scope":4691,"src":"1264:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4686,"name":"address","nodeType":"ElementaryTypeName","src":"1264:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4689,"indexed":false,"mutability":"mutable","name":"exempted","nameLocation":"1293:8:21","nodeType":"VariableDeclaration","scope":4691,"src":"1288:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4688,"name":"bool","nodeType":"ElementaryTypeName","src":"1288:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1263:39:21"},"src":"1238:65:21"},{"body":{"id":4706,"nodeType":"Block","src":"1525:53:21","statements":[{"expression":{"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4702,"name":"taxPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"1535:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4703,"name":"initialTaxPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4696,"src":"1551:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1535:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4705,"nodeType":"ExpressionStatement","src":"1535:36:21"}]},"documentation":{"id":4692,"nodeType":"StructuredDocumentation","src":"1309:115:21","text":" @param initialTaxPercentage The number of tax percentage to start out with for tax calculations."},"id":4707,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":4699,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4694,"src":"1507:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4700,"kind":"baseConstructorSpecifier","modifierName":{"id":4698,"name":"Ownable","nameLocations":["1499:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1499:7:21"},"nodeType":"ModifierInvocation","src":"1499:21:21"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4694,"mutability":"mutable","name":"initialOwner","nameLocation":"1449:12:21","nodeType":"VariableDeclaration","scope":4707,"src":"1441:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4693,"name":"address","nodeType":"ElementaryTypeName","src":"1441:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4696,"mutability":"mutable","name":"initialTaxPercentage","nameLocation":"1471:20:21","nodeType":"VariableDeclaration","scope":4707,"src":"1463:28:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4695,"name":"uint256","nodeType":"ElementaryTypeName","src":"1463:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1440:52:21"},"returnParameters":{"id":4701,"nodeType":"ParameterList","parameters":[],"src":"1525:0:21"},"scope":4809,"src":"1429:149:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[4655],"body":{"id":4738,"nodeType":"Block","src":"1728:166:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4721,"name":"benefactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4709,"src":"1761:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4719,"name":"_exempted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4674,"src":"1742:9:21","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":4720,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1752:8:21","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":4013,"src":"1742:18:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$3932_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$3932_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"}},"id":4722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1742:30:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":4725,"name":"beneficiary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4711,"src":"1795:11:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4723,"name":"_exempted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4674,"src":"1776:9:21","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":4724,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1786:8:21","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":4013,"src":"1776:18:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$3932_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$3932_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"}},"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1776:31:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1742:65:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4731,"nodeType":"IfStatement","src":"1738:104:21","trueBody":{"id":4730,"nodeType":"Block","src":"1809:33:21","statements":[{"expression":{"hexValue":"30","id":4728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1830:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4718,"id":4729,"nodeType":"Return","src":"1823:8:21"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4732,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4713,"src":"1859:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4733,"name":"taxPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"1868:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":4735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1884:3:21","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"1859:28:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4718,"id":4737,"nodeType":"Return","src":"1852:35:21"}]},"functionSelector":"d7ad21ac","id":4739,"implemented":true,"kind":"function","modifiers":[],"name":"getTax","nameLocation":"1593:6:21","nodeType":"FunctionDefinition","overrides":{"id":4715,"nodeType":"OverrideSpecifier","overrides":[],"src":"1701:8:21"},"parameters":{"id":4714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4709,"mutability":"mutable","name":"benefactor","nameLocation":"1617:10:21","nodeType":"VariableDeclaration","scope":4739,"src":"1609:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4708,"name":"address","nodeType":"ElementaryTypeName","src":"1609:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4711,"mutability":"mutable","name":"beneficiary","nameLocation":"1645:11:21","nodeType":"VariableDeclaration","scope":4739,"src":"1637:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4710,"name":"address","nodeType":"ElementaryTypeName","src":"1637:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4713,"mutability":"mutable","name":"amount","nameLocation":"1674:6:21","nodeType":"VariableDeclaration","scope":4739,"src":"1666:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4712,"name":"uint256","nodeType":"ElementaryTypeName","src":"1666:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1599:87:21"},"returnParameters":{"id":4718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4739,"src":"1719:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4716,"name":"uint256","nodeType":"ElementaryTypeName","src":"1719:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1718:9:21"},"scope":4809,"src":"1584:310:21","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4767,"nodeType":"Block","src":"2161:263:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4748,"name":"newTaxPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4742,"src":"2192:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2211:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2192:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642056616c75652e","id":4751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2226:16:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_efe8f4c43e0a7ce9afba23fb6c993cae9893c4081f1a55c9c3488cdb730ee4a2","typeString":"literal_string \"Invalid Value.\""},"value":"Invalid Value."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_efe8f4c43e0a7ce9afba23fb6c993cae9893c4081f1a55c9c3488cdb730ee4a2","typeString":"literal_string \"Invalid Value.\""}],"id":4747,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2171:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2171:81:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4753,"nodeType":"ExpressionStatement","src":"2171:81:21"},{"assignments":[4755],"declarations":[{"constant":false,"id":4755,"mutability":"mutable","name":"oldTaxPercentage","nameLocation":"2271:16:21","nodeType":"VariableDeclaration","scope":4767,"src":"2263:24:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4754,"name":"uint256","nodeType":"ElementaryTypeName","src":"2263:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4757,"initialValue":{"id":4756,"name":"taxPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"2290:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2263:40:21"},{"expression":{"id":4760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4758,"name":"taxPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"2313:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4759,"name":"newTaxPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4742,"src":"2329:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2313:32:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4761,"nodeType":"ExpressionStatement","src":"2313:32:21"},{"eventCall":{"arguments":[{"id":4763,"name":"oldTaxPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"2382:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4764,"name":"newTaxPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4742,"src":"2400:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4762,"name":"TaxPercentageUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"2361:20:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2361:56:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4766,"nodeType":"EmitStatement","src":"2356:61:21"}]},"documentation":{"id":4740,"nodeType":"StructuredDocumentation","src":"1900:185:21","text":" @notice Set new number for tax basis points. This number can only ever be lowered.\n @param newTaxPercentage New tax basis points number to set for calculations."},"functionSelector":"699abb3c","id":4768,"implemented":true,"kind":"function","modifiers":[{"id":4745,"kind":"modifierInvocation","modifierName":{"id":4744,"name":"onlyOwner","nameLocations":["2151:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2151:9:21"},"nodeType":"ModifierInvocation","src":"2151:9:21"}],"name":"setTaxPercentage","nameLocation":"2099:16:21","nodeType":"FunctionDefinition","parameters":{"id":4743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4742,"mutability":"mutable","name":"newTaxPercentage","nameLocation":"2124:16:21","nodeType":"VariableDeclaration","scope":4768,"src":"2116:24:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4741,"name":"uint256","nodeType":"ElementaryTypeName","src":"2116:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2115:26:21"},"returnParameters":{"id":4746,"nodeType":"ParameterList","parameters":[],"src":"2161:0:21"},"scope":4809,"src":"2090:334:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4787,"nodeType":"Block","src":"2640:112:21","statements":[{"condition":{"arguments":[{"id":4778,"name":"exemption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"2668:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4776,"name":"_exempted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4674,"src":"2654:9:21","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":4777,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2664:3:21","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":3959,"src":"2654:13:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$3932_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$3932_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":4779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2654:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4786,"nodeType":"IfStatement","src":"2650:96:21","trueBody":{"id":4785,"nodeType":"Block","src":"2680:66:21","statements":[{"eventCall":{"arguments":[{"id":4781,"name":"exemption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"2719:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":4782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2730:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4780,"name":"TaxExemptionUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"2699:19:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":4783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2699:36:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4784,"nodeType":"EmitStatement","src":"2694:41:21"}]}}]},"documentation":{"id":4769,"nodeType":"StructuredDocumentation","src":"2430:145:21","text":" @notice Add address to set of tax-exempted addresses.\n @param exemption Address to add to set of tax-exempted addresses."},"functionSelector":"705931fa","id":4788,"implemented":true,"kind":"function","modifiers":[{"id":4774,"kind":"modifierInvocation","modifierName":{"id":4773,"name":"onlyOwner","nameLocations":["2630:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2630:9:21"},"nodeType":"ModifierInvocation","src":"2630:9:21"}],"name":"addExemption","nameLocation":"2589:12:21","nodeType":"FunctionDefinition","parameters":{"id":4772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4771,"mutability":"mutable","name":"exemption","nameLocation":"2610:9:21","nodeType":"VariableDeclaration","scope":4788,"src":"2602:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4770,"name":"address","nodeType":"ElementaryTypeName","src":"2602:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2601:19:21"},"returnParameters":{"id":4775,"nodeType":"ParameterList","parameters":[],"src":"2640:0:21"},"scope":4809,"src":"2580:172:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4807,"nodeType":"Block","src":"2981:116:21","statements":[{"condition":{"arguments":[{"id":4798,"name":"exemption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"3012:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4796,"name":"_exempted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4674,"src":"2995:9:21","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":4797,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3005:6:21","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":3986,"src":"2995:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$3932_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$3932_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2995:27:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4806,"nodeType":"IfStatement","src":"2991:100:21","trueBody":{"id":4805,"nodeType":"Block","src":"3024:67:21","statements":[{"eventCall":{"arguments":[{"id":4801,"name":"exemption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"3063:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":4802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3074:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4800,"name":"TaxExemptionUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"3043:19:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":4803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3043:37:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4804,"nodeType":"EmitStatement","src":"3038:42:21"}]}}]},"documentation":{"id":4789,"nodeType":"StructuredDocumentation","src":"2758:155:21","text":" @notice Remove address from set of tax-exempted addresses.\n @param exemption Address to remove from set of tax-exempted addresses."},"functionSelector":"0ed9cc4c","id":4808,"implemented":true,"kind":"function","modifiers":[{"id":4794,"kind":"modifierInvocation","modifierName":{"id":4793,"name":"onlyOwner","nameLocations":["2971:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2971:9:21"},"nodeType":"ModifierInvocation","src":"2971:9:21"}],"name":"removeExemption","nameLocation":"2927:15:21","nodeType":"FunctionDefinition","parameters":{"id":4792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4791,"mutability":"mutable","name":"exemption","nameLocation":"2951:9:21","nodeType":"VariableDeclaration","scope":4808,"src":"2943:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4790,"name":"address","nodeType":"ElementaryTypeName","src":"2943:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2942:19:21"},"returnParameters":{"id":4795,"nodeType":"ParameterList","parameters":[],"src":"2981:0:21"},"scope":4809,"src":"2918:179:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4810,"src":"656:2443:21","usedErrors":[13,18],"usedEvents":[24,4684,4691]}],"src":"32:3067:21"},"id":21}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Nonces.sol":{"Nonces":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cfec0fdf9ffd764137a8d2e0ca2307a36b05be155fbb680fced6c37e5277843964736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF 0xEC 0xF 0xDF SWAP16 REVERT PUSH23 0x4137A8D2E0CA2307A36B05BE155FBB680FCED6C37E5277 DUP5 CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1255:3053:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cfec0fdf9ffd764137a8d2e0ca2307a36b05be155fbb680fced6c37e5277843964736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF 0xEC 0xF 0xDF SWAP16 REVERT PUSH23 0x4137A8D2E0CA2307A36B05BE155FBB680FCED6C37E5277 DUP5 CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1255:3053:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200d9d594500b0633db8c36b486b2e5bd19779e3026132b93582c791873a3dee9064736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD SWAP14 MSIZE GASLIMIT STOP 0xB0 PUSH4 0x3DB8C36B BASEFEE PUSH12 0x2E5BD19779E3026132B93582 0xC7 SWAP2 DUP8 GASPRICE RETURNDATASIZE 0xEE SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1245:2685:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200d9d594500b0633db8c36b486b2e5bd19779e3026132b93582c791873a3dee9064736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD SWAP14 MSIZE GASLIMIT STOP 0xB0 PUSH4 0x3DB8C36B BASEFEE PUSH12 0x2E5BD19779E3026132B93582 0xC7 SWAP2 DUP8 GASPRICE RETURNDATASIZE 0xEE SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1245:2685:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122022ea8e82b761ff0f2c8fae5d36bcca20db5176a1081cc893147086b57be5cf8f64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xEA DUP15 DUP3 0xB7 PUSH2 0xFF0F 0x2C DUP16 0xAE TSTORE CALLDATASIZE 0xBC 0xCA KECCAK256 0xDB MLOAD PUSH23 0xA1081CC893147086B57BE5CF8F64736F6C634300081800 CALLER ","sourceMap":"251:2847:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122022ea8e82b761ff0f2c8fae5d36bcca20db5176a1081cc893147086b57be5cf8f64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xEA DUP15 DUP3 0xB7 PUSH2 0xFF0F 0x2C DUP16 0xAE TSTORE CALLDATASIZE 0xBC 0xCA KECCAK256 0xDB MLOAD PUSH23 0xA1081CC893147086B57BE5CF8F64736F6C634300081800 CALLER ","sourceMap":"251:2847:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a0f0af1e89f3ddbdff57fa81e414c48e503c1b1d880410ba3858747441326c1664736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 CREATE 0xAF 0x1E DUP10 RETURN 0xDD 0xBD SELFDESTRUCT JUMPI STATICCALL DUP2 0xE4 EQ 0xC4 DUP15 POP EXTCODECOPY SHL SAR DUP9 DIV LT 0xBA CODESIZE PC PUSH21 0x7441326C1664736F6C634300081800330000000000 ","sourceMap":"344:7386:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a0f0af1e89f3ddbdff57fa81e414c48e503c1b1d880410ba3858747441326c1664736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 CREATE 0xAF 0x1E DUP10 RETURN 0xDD 0xBD SELFDESTRUCT JUMPI STATICCALL DUP2 0xE4 EQ 0xC4 DUP15 POP EXTCODECOPY SHL SAR DUP9 DIV LT 0xBA CODESIZE PC PUSH21 0x7441326C1664736F6C634300081800330000000000 ","sourceMap":"344:7386:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bdf6ac08341bc2c8c72c89b479b09c45d1cc23f4b55e7965962b8679a082214a64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0xF6 0xAC ADDMOD CALLVALUE SHL 0xC2 0xC8 0xC7 0x2C DUP10 0xB4 PUSH26 0xB09C45D1CC23F4B55E7965962B8679A082214A64736F6C634300 ADDMOD XOR STOP CALLER ","sourceMap":"521:3235:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bdf6ac08341bc2c8c72c89b479b09c45d1cc23f4b55e7965962b8679a082214a64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0xF6 0xAC ADDMOD CALLVALUE SHL 0xC2 0xC8 0xC7 0x2C DUP10 0xB4 PUSH26 0xB09C45D1CC23F4B55E7965962B8679A082214A64736F6C634300 ADDMOD XOR STOP CALLER ","sourceMap":"521:3235:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205f1847e716d326528b8b9324e0228d1e4971145e5ba1173b4269248a23a4838564736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH0 XOR SELFBALANCE 0xE7 AND 0xD3 0x26 MSTORE DUP12 DUP12 SWAP4 0x24 0xE0 0x22 DUP14 0x1E BLOBHASH PUSH18 0x145E5BA1173B4269248A23A4838564736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"203:14914:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205f1847e716d326528b8b9324e0228d1e4971145e5ba1173b4269248a23a4838564736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH0 XOR SELFBALANCE 0xE7 AND 0xD3 0x26 MSTORE DUP12 DUP12 SWAP4 0x24 0xE0 0x22 DUP14 0x1E BLOBHASH PUSH18 0x145E5BA1173B4269248A23A4838564736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"203:14914:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209275fb1eb703f1ada4f4ce7bacc8dfe6c85df9651d82c9adda1c7e92c94ddc8464736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 PUSH22 0xFB1EB703F1ADA4F4CE7BACC8DFE6C85DF9651D82C9AD 0xDA SHR PUSH31 0x92C94DDC8464736F6C63430008180033000000000000000000000000000000 ","sourceMap":"216:1047:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209275fb1eb703f1ada4f4ce7bacc8dfe6c85df9651d82c9adda1c7e92c94ddc8464736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 PUSH22 0xFB1EB703F1ADA4F4CE7BACC8DFE6C85DF9651D82C9AD 0xDA SHR PUSH31 0x92C94DDC8464736F6C63430008180033000000000000000000000000000000 ","sourceMap":"216:1047:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fc5d1723b91d94412ddf31a27681e58d7fea5f8cde80092c9e6170733b5de0ff64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC TSTORE OR 0x23 0xB9 SAR SWAP5 COINBASE 0x2D 0xDF BALANCE LOG2 PUSH23 0x81E58D7FEA5F8CDE80092C9E6170733B5DE0FF64736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"1330:11640:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fc5d1723b91d94412ddf31a27681e58d7fea5f8cde80092c9e6170733b5de0ff64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC TSTORE OR 0x23 0xB9 SAR SWAP5 COINBASE 0x2D 0xDF BALANCE LOG2 PUSH23 0x81E58D7FEA5F8CDE80092C9E6170733B5DE0FF64736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"1330:11640:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]}},\"version\":1}"}},"contracts/AraraCoin.sol":{"AraraCoin":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"},{"internalType":"address","name":"taxHandlerAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":false,"internalType":"address","name":"newAddress","type":"address"}],"name":"TaxHandlerChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"TradingEnabled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_addr","type":"address"}],"name":"addressToString","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_addr","type":"address"},{"internalType":"string","name":"_str","type":"string"}],"name":"concatenateAddressWithString","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"enableTrading","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"initialLaunch","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"investors","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"preSale","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"preservationProjects","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"pairs","type":"address[]"},{"internalType":"bool[]","name":"status","type":"bool[]"}],"name":"setCanTrade","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"taxHandlerAddress","type":"address"}],"name":"setTaxHandler","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"taxHandler","outputs":[{"internalType":"contract ITaxHandler","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"teamAndFounders","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"thirdPartyServices","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tradingEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_2243":{"entryPoint":null,"id":2243,"parameterSlots":2,"returnSlots":0},"@_361":{"entryPoint":null,"id":361,"parameterSlots":2,"returnSlots":0},"@_4385":{"entryPoint":null,"id":4385,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_951":{"entryPoint":null,"id":951,"parameterSlots":1,"returnSlots":0},"@_buildDomainSeparator_2290":{"entryPoint":2066,"id":2290,"parameterSlots":0,"returnSlots":1},"@_mint_664":{"entryPoint":2357,"id":664,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":2159,"id":146,"parameterSlots":1,"returnSlots":0},"@_transfer_554":{"entryPoint":2498,"id":554,"parameterSlots":3,"returnSlots":0},"@_update_4511":{"entryPoint":2875,"id":4511,"parameterSlots":3,"returnSlots":0},"@_update_631":{"entryPoint":3064,"id":631,"parameterSlots":3,"returnSlots":0},"@getStringSlot_1520":{"entryPoint":2865,"id":1520,"parameterSlots":1,"returnSlots":1},"@toShortStringWithFallback_1374":{"entryPoint":1978,"id":1374,"parameterSlots":2,"returnSlots":1},"@toShortString_1276":{"entryPoint":2756,"id":1276,"parameterSlots":1,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":3707,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":3730,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":4666,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":4947,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":5152,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7_to_t_string_memory_ptr_fromStack":{"entryPoint":5456,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":4964,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":4683,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":5588,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":4981,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5217,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5495,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":5649,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_bytes_memory_ptr":{"entryPoint":5264,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":3959,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":5253,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":3801,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":5074,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":5529,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":4881,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":4759,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":4280,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":3661,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":4937,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3629,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":4095,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":4241,"id":null,"parameterSlots":2,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":5303,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":4115,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":4435,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":5091,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":3980,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":3906,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":4405,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":4105,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":4373,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":4712,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":4834,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3859,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3812,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":4155,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":5280,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3624,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5135,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":3996,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":4360,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":4213,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7":{"entryPoint":5415,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":4009,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":4165,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3681,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":4208,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:12990:22","nodeType":"YulBlock","src":"0:12990:22","statements":[{"body":{"nativeSrc":"47:35:22","nodeType":"YulBlock","src":"47:35:22","statements":[{"nativeSrc":"57:19:22","nodeType":"YulAssignment","src":"57:19:22","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:22","nodeType":"YulLiteral","src":"73:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:22","nodeType":"YulIdentifier","src":"67:5:22"},"nativeSrc":"67:9:22","nodeType":"YulFunctionCall","src":"67:9:22"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:22","nodeType":"YulIdentifier","src":"57:6:22"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:22","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:22","nodeType":"YulTypedName","src":"40:6:22","type":""}],"src":"7:75:22"},{"body":{"nativeSrc":"177:28:22","nodeType":"YulBlock","src":"177:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:22","nodeType":"YulLiteral","src":"194:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:22","nodeType":"YulLiteral","src":"197:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:22","nodeType":"YulIdentifier","src":"187:6:22"},"nativeSrc":"187:12:22","nodeType":"YulFunctionCall","src":"187:12:22"},"nativeSrc":"187:12:22","nodeType":"YulExpressionStatement","src":"187:12:22"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:22","nodeType":"YulFunctionDefinition","src":"88:117:22"},{"body":{"nativeSrc":"300:28:22","nodeType":"YulBlock","src":"300:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:22","nodeType":"YulLiteral","src":"317:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:22","nodeType":"YulLiteral","src":"320:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:22","nodeType":"YulIdentifier","src":"310:6:22"},"nativeSrc":"310:12:22","nodeType":"YulFunctionCall","src":"310:12:22"},"nativeSrc":"310:12:22","nodeType":"YulExpressionStatement","src":"310:12:22"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:22","nodeType":"YulFunctionDefinition","src":"211:117:22"},{"body":{"nativeSrc":"379:81:22","nodeType":"YulBlock","src":"379:81:22","statements":[{"nativeSrc":"389:65:22","nodeType":"YulAssignment","src":"389:65:22","value":{"arguments":[{"name":"value","nativeSrc":"404:5:22","nodeType":"YulIdentifier","src":"404:5:22"},{"kind":"number","nativeSrc":"411:42:22","nodeType":"YulLiteral","src":"411:42:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:22","nodeType":"YulIdentifier","src":"400:3:22"},"nativeSrc":"400:54:22","nodeType":"YulFunctionCall","src":"400:54:22"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:22","nodeType":"YulIdentifier","src":"389:7:22"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:22","nodeType":"YulTypedName","src":"361:5:22","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:22","nodeType":"YulTypedName","src":"371:7:22","type":""}],"src":"334:126:22"},{"body":{"nativeSrc":"511:51:22","nodeType":"YulBlock","src":"511:51:22","statements":[{"nativeSrc":"521:35:22","nodeType":"YulAssignment","src":"521:35:22","value":{"arguments":[{"name":"value","nativeSrc":"550:5:22","nodeType":"YulIdentifier","src":"550:5:22"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:22","nodeType":"YulIdentifier","src":"532:17:22"},"nativeSrc":"532:24:22","nodeType":"YulFunctionCall","src":"532:24:22"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:22","nodeType":"YulIdentifier","src":"521:7:22"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:22","nodeType":"YulTypedName","src":"493:5:22","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:22","nodeType":"YulTypedName","src":"503:7:22","type":""}],"src":"466:96:22"},{"body":{"nativeSrc":"611:79:22","nodeType":"YulBlock","src":"611:79:22","statements":[{"body":{"nativeSrc":"668:16:22","nodeType":"YulBlock","src":"668:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:22","nodeType":"YulLiteral","src":"677:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:22","nodeType":"YulLiteral","src":"680:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:22","nodeType":"YulIdentifier","src":"670:6:22"},"nativeSrc":"670:12:22","nodeType":"YulFunctionCall","src":"670:12:22"},"nativeSrc":"670:12:22","nodeType":"YulExpressionStatement","src":"670:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:22","nodeType":"YulIdentifier","src":"634:5:22"},{"arguments":[{"name":"value","nativeSrc":"659:5:22","nodeType":"YulIdentifier","src":"659:5:22"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:22","nodeType":"YulIdentifier","src":"641:17:22"},"nativeSrc":"641:24:22","nodeType":"YulFunctionCall","src":"641:24:22"}],"functionName":{"name":"eq","nativeSrc":"631:2:22","nodeType":"YulIdentifier","src":"631:2:22"},"nativeSrc":"631:35:22","nodeType":"YulFunctionCall","src":"631:35:22"}],"functionName":{"name":"iszero","nativeSrc":"624:6:22","nodeType":"YulIdentifier","src":"624:6:22"},"nativeSrc":"624:43:22","nodeType":"YulFunctionCall","src":"624:43:22"},"nativeSrc":"621:63:22","nodeType":"YulIf","src":"621:63:22"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:22","nodeType":"YulTypedName","src":"604:5:22","type":""}],"src":"568:122:22"},{"body":{"nativeSrc":"759:80:22","nodeType":"YulBlock","src":"759:80:22","statements":[{"nativeSrc":"769:22:22","nodeType":"YulAssignment","src":"769:22:22","value":{"arguments":[{"name":"offset","nativeSrc":"784:6:22","nodeType":"YulIdentifier","src":"784:6:22"}],"functionName":{"name":"mload","nativeSrc":"778:5:22","nodeType":"YulIdentifier","src":"778:5:22"},"nativeSrc":"778:13:22","nodeType":"YulFunctionCall","src":"778:13:22"},"variableNames":[{"name":"value","nativeSrc":"769:5:22","nodeType":"YulIdentifier","src":"769:5:22"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"827:5:22","nodeType":"YulIdentifier","src":"827:5:22"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"800:26:22","nodeType":"YulIdentifier","src":"800:26:22"},"nativeSrc":"800:33:22","nodeType":"YulFunctionCall","src":"800:33:22"},"nativeSrc":"800:33:22","nodeType":"YulExpressionStatement","src":"800:33:22"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"696:143:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"737:6:22","nodeType":"YulTypedName","src":"737:6:22","type":""},{"name":"end","nativeSrc":"745:3:22","nodeType":"YulTypedName","src":"745:3:22","type":""}],"returnVariables":[{"name":"value","nativeSrc":"753:5:22","nodeType":"YulTypedName","src":"753:5:22","type":""}],"src":"696:143:22"},{"body":{"nativeSrc":"939:413:22","nodeType":"YulBlock","src":"939:413:22","statements":[{"body":{"nativeSrc":"985:83:22","nodeType":"YulBlock","src":"985:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"987:77:22","nodeType":"YulIdentifier","src":"987:77:22"},"nativeSrc":"987:79:22","nodeType":"YulFunctionCall","src":"987:79:22"},"nativeSrc":"987:79:22","nodeType":"YulExpressionStatement","src":"987:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"960:7:22","nodeType":"YulIdentifier","src":"960:7:22"},{"name":"headStart","nativeSrc":"969:9:22","nodeType":"YulIdentifier","src":"969:9:22"}],"functionName":{"name":"sub","nativeSrc":"956:3:22","nodeType":"YulIdentifier","src":"956:3:22"},"nativeSrc":"956:23:22","nodeType":"YulFunctionCall","src":"956:23:22"},{"kind":"number","nativeSrc":"981:2:22","nodeType":"YulLiteral","src":"981:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"952:3:22","nodeType":"YulIdentifier","src":"952:3:22"},"nativeSrc":"952:32:22","nodeType":"YulFunctionCall","src":"952:32:22"},"nativeSrc":"949:119:22","nodeType":"YulIf","src":"949:119:22"},{"nativeSrc":"1078:128:22","nodeType":"YulBlock","src":"1078:128:22","statements":[{"nativeSrc":"1093:15:22","nodeType":"YulVariableDeclaration","src":"1093:15:22","value":{"kind":"number","nativeSrc":"1107:1:22","nodeType":"YulLiteral","src":"1107:1:22","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1097:6:22","nodeType":"YulTypedName","src":"1097:6:22","type":""}]},{"nativeSrc":"1122:74:22","nodeType":"YulAssignment","src":"1122:74:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1168:9:22","nodeType":"YulIdentifier","src":"1168:9:22"},{"name":"offset","nativeSrc":"1179:6:22","nodeType":"YulIdentifier","src":"1179:6:22"}],"functionName":{"name":"add","nativeSrc":"1164:3:22","nodeType":"YulIdentifier","src":"1164:3:22"},"nativeSrc":"1164:22:22","nodeType":"YulFunctionCall","src":"1164:22:22"},{"name":"dataEnd","nativeSrc":"1188:7:22","nodeType":"YulIdentifier","src":"1188:7:22"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1132:31:22","nodeType":"YulIdentifier","src":"1132:31:22"},"nativeSrc":"1132:64:22","nodeType":"YulFunctionCall","src":"1132:64:22"},"variableNames":[{"name":"value0","nativeSrc":"1122:6:22","nodeType":"YulIdentifier","src":"1122:6:22"}]}]},{"nativeSrc":"1216:129:22","nodeType":"YulBlock","src":"1216:129:22","statements":[{"nativeSrc":"1231:16:22","nodeType":"YulVariableDeclaration","src":"1231:16:22","value":{"kind":"number","nativeSrc":"1245:2:22","nodeType":"YulLiteral","src":"1245:2:22","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1235:6:22","nodeType":"YulTypedName","src":"1235:6:22","type":""}]},{"nativeSrc":"1261:74:22","nodeType":"YulAssignment","src":"1261:74:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1307:9:22","nodeType":"YulIdentifier","src":"1307:9:22"},{"name":"offset","nativeSrc":"1318:6:22","nodeType":"YulIdentifier","src":"1318:6:22"}],"functionName":{"name":"add","nativeSrc":"1303:3:22","nodeType":"YulIdentifier","src":"1303:3:22"},"nativeSrc":"1303:22:22","nodeType":"YulFunctionCall","src":"1303:22:22"},{"name":"dataEnd","nativeSrc":"1327:7:22","nodeType":"YulIdentifier","src":"1327:7:22"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1271:31:22","nodeType":"YulIdentifier","src":"1271:31:22"},"nativeSrc":"1271:64:22","nodeType":"YulFunctionCall","src":"1271:64:22"},"variableNames":[{"name":"value1","nativeSrc":"1261:6:22","nodeType":"YulIdentifier","src":"1261:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nativeSrc":"845:507:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"901:9:22","nodeType":"YulTypedName","src":"901:9:22","type":""},{"name":"dataEnd","nativeSrc":"912:7:22","nodeType":"YulTypedName","src":"912:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"924:6:22","nodeType":"YulTypedName","src":"924:6:22","type":""},{"name":"value1","nativeSrc":"932:6:22","nodeType":"YulTypedName","src":"932:6:22","type":""}],"src":"845:507:22"},{"body":{"nativeSrc":"1417:40:22","nodeType":"YulBlock","src":"1417:40:22","statements":[{"nativeSrc":"1428:22:22","nodeType":"YulAssignment","src":"1428:22:22","value":{"arguments":[{"name":"value","nativeSrc":"1444:5:22","nodeType":"YulIdentifier","src":"1444:5:22"}],"functionName":{"name":"mload","nativeSrc":"1438:5:22","nodeType":"YulIdentifier","src":"1438:5:22"},"nativeSrc":"1438:12:22","nodeType":"YulFunctionCall","src":"1438:12:22"},"variableNames":[{"name":"length","nativeSrc":"1428:6:22","nodeType":"YulIdentifier","src":"1428:6:22"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"1358:99:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1400:5:22","nodeType":"YulTypedName","src":"1400:5:22","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1410:6:22","nodeType":"YulTypedName","src":"1410:6:22","type":""}],"src":"1358:99:22"},{"body":{"nativeSrc":"1491:152:22","nodeType":"YulBlock","src":"1491:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1508:1:22","nodeType":"YulLiteral","src":"1508:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"1511:77:22","nodeType":"YulLiteral","src":"1511:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1501:6:22","nodeType":"YulIdentifier","src":"1501:6:22"},"nativeSrc":"1501:88:22","nodeType":"YulFunctionCall","src":"1501:88:22"},"nativeSrc":"1501:88:22","nodeType":"YulExpressionStatement","src":"1501:88:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1605:1:22","nodeType":"YulLiteral","src":"1605:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"1608:4:22","nodeType":"YulLiteral","src":"1608:4:22","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"1598:6:22","nodeType":"YulIdentifier","src":"1598:6:22"},"nativeSrc":"1598:15:22","nodeType":"YulFunctionCall","src":"1598:15:22"},"nativeSrc":"1598:15:22","nodeType":"YulExpressionStatement","src":"1598:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1629:1:22","nodeType":"YulLiteral","src":"1629:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"1632:4:22","nodeType":"YulLiteral","src":"1632:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1622:6:22","nodeType":"YulIdentifier","src":"1622:6:22"},"nativeSrc":"1622:15:22","nodeType":"YulFunctionCall","src":"1622:15:22"},"nativeSrc":"1622:15:22","nodeType":"YulExpressionStatement","src":"1622:15:22"}]},"name":"panic_error_0x41","nativeSrc":"1463:180:22","nodeType":"YulFunctionDefinition","src":"1463:180:22"},{"body":{"nativeSrc":"1677:152:22","nodeType":"YulBlock","src":"1677:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1694:1:22","nodeType":"YulLiteral","src":"1694:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"1697:77:22","nodeType":"YulLiteral","src":"1697:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1687:6:22","nodeType":"YulIdentifier","src":"1687:6:22"},"nativeSrc":"1687:88:22","nodeType":"YulFunctionCall","src":"1687:88:22"},"nativeSrc":"1687:88:22","nodeType":"YulExpressionStatement","src":"1687:88:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1791:1:22","nodeType":"YulLiteral","src":"1791:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"1794:4:22","nodeType":"YulLiteral","src":"1794:4:22","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"1784:6:22","nodeType":"YulIdentifier","src":"1784:6:22"},"nativeSrc":"1784:15:22","nodeType":"YulFunctionCall","src":"1784:15:22"},"nativeSrc":"1784:15:22","nodeType":"YulExpressionStatement","src":"1784:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1815:1:22","nodeType":"YulLiteral","src":"1815:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"1818:4:22","nodeType":"YulLiteral","src":"1818:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1808:6:22","nodeType":"YulIdentifier","src":"1808:6:22"},"nativeSrc":"1808:15:22","nodeType":"YulFunctionCall","src":"1808:15:22"},"nativeSrc":"1808:15:22","nodeType":"YulExpressionStatement","src":"1808:15:22"}]},"name":"panic_error_0x22","nativeSrc":"1649:180:22","nodeType":"YulFunctionDefinition","src":"1649:180:22"},{"body":{"nativeSrc":"1886:269:22","nodeType":"YulBlock","src":"1886:269:22","statements":[{"nativeSrc":"1896:22:22","nodeType":"YulAssignment","src":"1896:22:22","value":{"arguments":[{"name":"data","nativeSrc":"1910:4:22","nodeType":"YulIdentifier","src":"1910:4:22"},{"kind":"number","nativeSrc":"1916:1:22","nodeType":"YulLiteral","src":"1916:1:22","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"1906:3:22","nodeType":"YulIdentifier","src":"1906:3:22"},"nativeSrc":"1906:12:22","nodeType":"YulFunctionCall","src":"1906:12:22"},"variableNames":[{"name":"length","nativeSrc":"1896:6:22","nodeType":"YulIdentifier","src":"1896:6:22"}]},{"nativeSrc":"1927:38:22","nodeType":"YulVariableDeclaration","src":"1927:38:22","value":{"arguments":[{"name":"data","nativeSrc":"1957:4:22","nodeType":"YulIdentifier","src":"1957:4:22"},{"kind":"number","nativeSrc":"1963:1:22","nodeType":"YulLiteral","src":"1963:1:22","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"1953:3:22","nodeType":"YulIdentifier","src":"1953:3:22"},"nativeSrc":"1953:12:22","nodeType":"YulFunctionCall","src":"1953:12:22"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"1931:18:22","nodeType":"YulTypedName","src":"1931:18:22","type":""}]},{"body":{"nativeSrc":"2004:51:22","nodeType":"YulBlock","src":"2004:51:22","statements":[{"nativeSrc":"2018:27:22","nodeType":"YulAssignment","src":"2018:27:22","value":{"arguments":[{"name":"length","nativeSrc":"2032:6:22","nodeType":"YulIdentifier","src":"2032:6:22"},{"kind":"number","nativeSrc":"2040:4:22","nodeType":"YulLiteral","src":"2040:4:22","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"2028:3:22","nodeType":"YulIdentifier","src":"2028:3:22"},"nativeSrc":"2028:17:22","nodeType":"YulFunctionCall","src":"2028:17:22"},"variableNames":[{"name":"length","nativeSrc":"2018:6:22","nodeType":"YulIdentifier","src":"2018:6:22"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"1984:18:22","nodeType":"YulIdentifier","src":"1984:18:22"}],"functionName":{"name":"iszero","nativeSrc":"1977:6:22","nodeType":"YulIdentifier","src":"1977:6:22"},"nativeSrc":"1977:26:22","nodeType":"YulFunctionCall","src":"1977:26:22"},"nativeSrc":"1974:81:22","nodeType":"YulIf","src":"1974:81:22"},{"body":{"nativeSrc":"2107:42:22","nodeType":"YulBlock","src":"2107:42:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"2121:16:22","nodeType":"YulIdentifier","src":"2121:16:22"},"nativeSrc":"2121:18:22","nodeType":"YulFunctionCall","src":"2121:18:22"},"nativeSrc":"2121:18:22","nodeType":"YulExpressionStatement","src":"2121:18:22"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"2071:18:22","nodeType":"YulIdentifier","src":"2071:18:22"},{"arguments":[{"name":"length","nativeSrc":"2094:6:22","nodeType":"YulIdentifier","src":"2094:6:22"},{"kind":"number","nativeSrc":"2102:2:22","nodeType":"YulLiteral","src":"2102:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"2091:2:22","nodeType":"YulIdentifier","src":"2091:2:22"},"nativeSrc":"2091:14:22","nodeType":"YulFunctionCall","src":"2091:14:22"}],"functionName":{"name":"eq","nativeSrc":"2068:2:22","nodeType":"YulIdentifier","src":"2068:2:22"},"nativeSrc":"2068:38:22","nodeType":"YulFunctionCall","src":"2068:38:22"},"nativeSrc":"2065:84:22","nodeType":"YulIf","src":"2065:84:22"}]},"name":"extract_byte_array_length","nativeSrc":"1835:320:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"1870:4:22","nodeType":"YulTypedName","src":"1870:4:22","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1879:6:22","nodeType":"YulTypedName","src":"1879:6:22","type":""}],"src":"1835:320:22"},{"body":{"nativeSrc":"2215:87:22","nodeType":"YulBlock","src":"2215:87:22","statements":[{"nativeSrc":"2225:11:22","nodeType":"YulAssignment","src":"2225:11:22","value":{"name":"ptr","nativeSrc":"2233:3:22","nodeType":"YulIdentifier","src":"2233:3:22"},"variableNames":[{"name":"data","nativeSrc":"2225:4:22","nodeType":"YulIdentifier","src":"2225:4:22"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2253:1:22","nodeType":"YulLiteral","src":"2253:1:22","type":"","value":"0"},{"name":"ptr","nativeSrc":"2256:3:22","nodeType":"YulIdentifier","src":"2256:3:22"}],"functionName":{"name":"mstore","nativeSrc":"2246:6:22","nodeType":"YulIdentifier","src":"2246:6:22"},"nativeSrc":"2246:14:22","nodeType":"YulFunctionCall","src":"2246:14:22"},"nativeSrc":"2246:14:22","nodeType":"YulExpressionStatement","src":"2246:14:22"},{"nativeSrc":"2269:26:22","nodeType":"YulAssignment","src":"2269:26:22","value":{"arguments":[{"kind":"number","nativeSrc":"2287:1:22","nodeType":"YulLiteral","src":"2287:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"2290:4:22","nodeType":"YulLiteral","src":"2290:4:22","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2277:9:22","nodeType":"YulIdentifier","src":"2277:9:22"},"nativeSrc":"2277:18:22","nodeType":"YulFunctionCall","src":"2277:18:22"},"variableNames":[{"name":"data","nativeSrc":"2269:4:22","nodeType":"YulIdentifier","src":"2269:4:22"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"2161:141:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"2202:3:22","nodeType":"YulTypedName","src":"2202:3:22","type":""}],"returnVariables":[{"name":"data","nativeSrc":"2210:4:22","nodeType":"YulTypedName","src":"2210:4:22","type":""}],"src":"2161:141:22"},{"body":{"nativeSrc":"2352:49:22","nodeType":"YulBlock","src":"2352:49:22","statements":[{"nativeSrc":"2362:33:22","nodeType":"YulAssignment","src":"2362:33:22","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2380:5:22","nodeType":"YulIdentifier","src":"2380:5:22"},{"kind":"number","nativeSrc":"2387:2:22","nodeType":"YulLiteral","src":"2387:2:22","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2376:3:22","nodeType":"YulIdentifier","src":"2376:3:22"},"nativeSrc":"2376:14:22","nodeType":"YulFunctionCall","src":"2376:14:22"},{"kind":"number","nativeSrc":"2392:2:22","nodeType":"YulLiteral","src":"2392:2:22","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"2372:3:22","nodeType":"YulIdentifier","src":"2372:3:22"},"nativeSrc":"2372:23:22","nodeType":"YulFunctionCall","src":"2372:23:22"},"variableNames":[{"name":"result","nativeSrc":"2362:6:22","nodeType":"YulIdentifier","src":"2362:6:22"}]}]},"name":"divide_by_32_ceil","nativeSrc":"2308:93:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2335:5:22","nodeType":"YulTypedName","src":"2335:5:22","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2345:6:22","nodeType":"YulTypedName","src":"2345:6:22","type":""}],"src":"2308:93:22"},{"body":{"nativeSrc":"2460:54:22","nodeType":"YulBlock","src":"2460:54:22","statements":[{"nativeSrc":"2470:37:22","nodeType":"YulAssignment","src":"2470:37:22","value":{"arguments":[{"name":"bits","nativeSrc":"2495:4:22","nodeType":"YulIdentifier","src":"2495:4:22"},{"name":"value","nativeSrc":"2501:5:22","nodeType":"YulIdentifier","src":"2501:5:22"}],"functionName":{"name":"shl","nativeSrc":"2491:3:22","nodeType":"YulIdentifier","src":"2491:3:22"},"nativeSrc":"2491:16:22","nodeType":"YulFunctionCall","src":"2491:16:22"},"variableNames":[{"name":"newValue","nativeSrc":"2470:8:22","nodeType":"YulIdentifier","src":"2470:8:22"}]}]},"name":"shift_left_dynamic","nativeSrc":"2407:107:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"2435:4:22","nodeType":"YulTypedName","src":"2435:4:22","type":""},{"name":"value","nativeSrc":"2441:5:22","nodeType":"YulTypedName","src":"2441:5:22","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"2451:8:22","nodeType":"YulTypedName","src":"2451:8:22","type":""}],"src":"2407:107:22"},{"body":{"nativeSrc":"2596:317:22","nodeType":"YulBlock","src":"2596:317:22","statements":[{"nativeSrc":"2606:35:22","nodeType":"YulVariableDeclaration","src":"2606:35:22","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"2627:10:22","nodeType":"YulIdentifier","src":"2627:10:22"},{"kind":"number","nativeSrc":"2639:1:22","nodeType":"YulLiteral","src":"2639:1:22","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"2623:3:22","nodeType":"YulIdentifier","src":"2623:3:22"},"nativeSrc":"2623:18:22","nodeType":"YulFunctionCall","src":"2623:18:22"},"variables":[{"name":"shiftBits","nativeSrc":"2610:9:22","nodeType":"YulTypedName","src":"2610:9:22","type":""}]},{"nativeSrc":"2650:109:22","nodeType":"YulVariableDeclaration","src":"2650:109:22","value":{"arguments":[{"name":"shiftBits","nativeSrc":"2681:9:22","nodeType":"YulIdentifier","src":"2681:9:22"},{"kind":"number","nativeSrc":"2692:66:22","nodeType":"YulLiteral","src":"2692:66:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"2662:18:22","nodeType":"YulIdentifier","src":"2662:18:22"},"nativeSrc":"2662:97:22","nodeType":"YulFunctionCall","src":"2662:97:22"},"variables":[{"name":"mask","nativeSrc":"2654:4:22","nodeType":"YulTypedName","src":"2654:4:22","type":""}]},{"nativeSrc":"2768:51:22","nodeType":"YulAssignment","src":"2768:51:22","value":{"arguments":[{"name":"shiftBits","nativeSrc":"2799:9:22","nodeType":"YulIdentifier","src":"2799:9:22"},{"name":"toInsert","nativeSrc":"2810:8:22","nodeType":"YulIdentifier","src":"2810:8:22"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"2780:18:22","nodeType":"YulIdentifier","src":"2780:18:22"},"nativeSrc":"2780:39:22","nodeType":"YulFunctionCall","src":"2780:39:22"},"variableNames":[{"name":"toInsert","nativeSrc":"2768:8:22","nodeType":"YulIdentifier","src":"2768:8:22"}]},{"nativeSrc":"2828:30:22","nodeType":"YulAssignment","src":"2828:30:22","value":{"arguments":[{"name":"value","nativeSrc":"2841:5:22","nodeType":"YulIdentifier","src":"2841:5:22"},{"arguments":[{"name":"mask","nativeSrc":"2852:4:22","nodeType":"YulIdentifier","src":"2852:4:22"}],"functionName":{"name":"not","nativeSrc":"2848:3:22","nodeType":"YulIdentifier","src":"2848:3:22"},"nativeSrc":"2848:9:22","nodeType":"YulFunctionCall","src":"2848:9:22"}],"functionName":{"name":"and","nativeSrc":"2837:3:22","nodeType":"YulIdentifier","src":"2837:3:22"},"nativeSrc":"2837:21:22","nodeType":"YulFunctionCall","src":"2837:21:22"},"variableNames":[{"name":"value","nativeSrc":"2828:5:22","nodeType":"YulIdentifier","src":"2828:5:22"}]},{"nativeSrc":"2867:40:22","nodeType":"YulAssignment","src":"2867:40:22","value":{"arguments":[{"name":"value","nativeSrc":"2880:5:22","nodeType":"YulIdentifier","src":"2880:5:22"},{"arguments":[{"name":"toInsert","nativeSrc":"2891:8:22","nodeType":"YulIdentifier","src":"2891:8:22"},{"name":"mask","nativeSrc":"2901:4:22","nodeType":"YulIdentifier","src":"2901:4:22"}],"functionName":{"name":"and","nativeSrc":"2887:3:22","nodeType":"YulIdentifier","src":"2887:3:22"},"nativeSrc":"2887:19:22","nodeType":"YulFunctionCall","src":"2887:19:22"}],"functionName":{"name":"or","nativeSrc":"2877:2:22","nodeType":"YulIdentifier","src":"2877:2:22"},"nativeSrc":"2877:30:22","nodeType":"YulFunctionCall","src":"2877:30:22"},"variableNames":[{"name":"result","nativeSrc":"2867:6:22","nodeType":"YulIdentifier","src":"2867:6:22"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"2520:393:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2557:5:22","nodeType":"YulTypedName","src":"2557:5:22","type":""},{"name":"shiftBytes","nativeSrc":"2564:10:22","nodeType":"YulTypedName","src":"2564:10:22","type":""},{"name":"toInsert","nativeSrc":"2576:8:22","nodeType":"YulTypedName","src":"2576:8:22","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2589:6:22","nodeType":"YulTypedName","src":"2589:6:22","type":""}],"src":"2520:393:22"},{"body":{"nativeSrc":"2964:32:22","nodeType":"YulBlock","src":"2964:32:22","statements":[{"nativeSrc":"2974:16:22","nodeType":"YulAssignment","src":"2974:16:22","value":{"name":"value","nativeSrc":"2985:5:22","nodeType":"YulIdentifier","src":"2985:5:22"},"variableNames":[{"name":"cleaned","nativeSrc":"2974:7:22","nodeType":"YulIdentifier","src":"2974:7:22"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2919:77:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2946:5:22","nodeType":"YulTypedName","src":"2946:5:22","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2956:7:22","nodeType":"YulTypedName","src":"2956:7:22","type":""}],"src":"2919:77:22"},{"body":{"nativeSrc":"3034:28:22","nodeType":"YulBlock","src":"3034:28:22","statements":[{"nativeSrc":"3044:12:22","nodeType":"YulAssignment","src":"3044:12:22","value":{"name":"value","nativeSrc":"3051:5:22","nodeType":"YulIdentifier","src":"3051:5:22"},"variableNames":[{"name":"ret","nativeSrc":"3044:3:22","nodeType":"YulIdentifier","src":"3044:3:22"}]}]},"name":"identity","nativeSrc":"3002:60:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3020:5:22","nodeType":"YulTypedName","src":"3020:5:22","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"3030:3:22","nodeType":"YulTypedName","src":"3030:3:22","type":""}],"src":"3002:60:22"},{"body":{"nativeSrc":"3128:82:22","nodeType":"YulBlock","src":"3128:82:22","statements":[{"nativeSrc":"3138:66:22","nodeType":"YulAssignment","src":"3138:66:22","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3196:5:22","nodeType":"YulIdentifier","src":"3196:5:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3178:17:22","nodeType":"YulIdentifier","src":"3178:17:22"},"nativeSrc":"3178:24:22","nodeType":"YulFunctionCall","src":"3178:24:22"}],"functionName":{"name":"identity","nativeSrc":"3169:8:22","nodeType":"YulIdentifier","src":"3169:8:22"},"nativeSrc":"3169:34:22","nodeType":"YulFunctionCall","src":"3169:34:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3151:17:22","nodeType":"YulIdentifier","src":"3151:17:22"},"nativeSrc":"3151:53:22","nodeType":"YulFunctionCall","src":"3151:53:22"},"variableNames":[{"name":"converted","nativeSrc":"3138:9:22","nodeType":"YulIdentifier","src":"3138:9:22"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"3068:142:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3108:5:22","nodeType":"YulTypedName","src":"3108:5:22","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"3118:9:22","nodeType":"YulTypedName","src":"3118:9:22","type":""}],"src":"3068:142:22"},{"body":{"nativeSrc":"3263:28:22","nodeType":"YulBlock","src":"3263:28:22","statements":[{"nativeSrc":"3273:12:22","nodeType":"YulAssignment","src":"3273:12:22","value":{"name":"value","nativeSrc":"3280:5:22","nodeType":"YulIdentifier","src":"3280:5:22"},"variableNames":[{"name":"ret","nativeSrc":"3273:3:22","nodeType":"YulIdentifier","src":"3273:3:22"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"3216:75:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3249:5:22","nodeType":"YulTypedName","src":"3249:5:22","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"3259:3:22","nodeType":"YulTypedName","src":"3259:3:22","type":""}],"src":"3216:75:22"},{"body":{"nativeSrc":"3373:193:22","nodeType":"YulBlock","src":"3373:193:22","statements":[{"nativeSrc":"3383:63:22","nodeType":"YulVariableDeclaration","src":"3383:63:22","value":{"arguments":[{"name":"value_0","nativeSrc":"3438:7:22","nodeType":"YulIdentifier","src":"3438:7:22"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"3407:30:22","nodeType":"YulIdentifier","src":"3407:30:22"},"nativeSrc":"3407:39:22","nodeType":"YulFunctionCall","src":"3407:39:22"},"variables":[{"name":"convertedValue_0","nativeSrc":"3387:16:22","nodeType":"YulTypedName","src":"3387:16:22","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3462:4:22","nodeType":"YulIdentifier","src":"3462:4:22"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"3502:4:22","nodeType":"YulIdentifier","src":"3502:4:22"}],"functionName":{"name":"sload","nativeSrc":"3496:5:22","nodeType":"YulIdentifier","src":"3496:5:22"},"nativeSrc":"3496:11:22","nodeType":"YulFunctionCall","src":"3496:11:22"},{"name":"offset","nativeSrc":"3509:6:22","nodeType":"YulIdentifier","src":"3509:6:22"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"3541:16:22","nodeType":"YulIdentifier","src":"3541:16:22"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"3517:23:22","nodeType":"YulIdentifier","src":"3517:23:22"},"nativeSrc":"3517:41:22","nodeType":"YulFunctionCall","src":"3517:41:22"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"3468:27:22","nodeType":"YulIdentifier","src":"3468:27:22"},"nativeSrc":"3468:91:22","nodeType":"YulFunctionCall","src":"3468:91:22"}],"functionName":{"name":"sstore","nativeSrc":"3455:6:22","nodeType":"YulIdentifier","src":"3455:6:22"},"nativeSrc":"3455:105:22","nodeType":"YulFunctionCall","src":"3455:105:22"},"nativeSrc":"3455:105:22","nodeType":"YulExpressionStatement","src":"3455:105:22"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"3297:269:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3350:4:22","nodeType":"YulTypedName","src":"3350:4:22","type":""},{"name":"offset","nativeSrc":"3356:6:22","nodeType":"YulTypedName","src":"3356:6:22","type":""},{"name":"value_0","nativeSrc":"3364:7:22","nodeType":"YulTypedName","src":"3364:7:22","type":""}],"src":"3297:269:22"},{"body":{"nativeSrc":"3621:24:22","nodeType":"YulBlock","src":"3621:24:22","statements":[{"nativeSrc":"3631:8:22","nodeType":"YulAssignment","src":"3631:8:22","value":{"kind":"number","nativeSrc":"3638:1:22","nodeType":"YulLiteral","src":"3638:1:22","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"3631:3:22","nodeType":"YulIdentifier","src":"3631:3:22"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"3572:73:22","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"3617:3:22","nodeType":"YulTypedName","src":"3617:3:22","type":""}],"src":"3572:73:22"},{"body":{"nativeSrc":"3704:136:22","nodeType":"YulBlock","src":"3704:136:22","statements":[{"nativeSrc":"3714:46:22","nodeType":"YulVariableDeclaration","src":"3714:46:22","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"3728:30:22","nodeType":"YulIdentifier","src":"3728:30:22"},"nativeSrc":"3728:32:22","nodeType":"YulFunctionCall","src":"3728:32:22"},"variables":[{"name":"zero_0","nativeSrc":"3718:6:22","nodeType":"YulTypedName","src":"3718:6:22","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3813:4:22","nodeType":"YulIdentifier","src":"3813:4:22"},{"name":"offset","nativeSrc":"3819:6:22","nodeType":"YulIdentifier","src":"3819:6:22"},{"name":"zero_0","nativeSrc":"3827:6:22","nodeType":"YulIdentifier","src":"3827:6:22"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"3769:43:22","nodeType":"YulIdentifier","src":"3769:43:22"},"nativeSrc":"3769:65:22","nodeType":"YulFunctionCall","src":"3769:65:22"},"nativeSrc":"3769:65:22","nodeType":"YulExpressionStatement","src":"3769:65:22"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"3651:189:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3690:4:22","nodeType":"YulTypedName","src":"3690:4:22","type":""},{"name":"offset","nativeSrc":"3696:6:22","nodeType":"YulTypedName","src":"3696:6:22","type":""}],"src":"3651:189:22"},{"body":{"nativeSrc":"3896:136:22","nodeType":"YulBlock","src":"3896:136:22","statements":[{"body":{"nativeSrc":"3963:63:22","nodeType":"YulBlock","src":"3963:63:22","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"4007:5:22","nodeType":"YulIdentifier","src":"4007:5:22"},{"kind":"number","nativeSrc":"4014:1:22","nodeType":"YulLiteral","src":"4014:1:22","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"3977:29:22","nodeType":"YulIdentifier","src":"3977:29:22"},"nativeSrc":"3977:39:22","nodeType":"YulFunctionCall","src":"3977:39:22"},"nativeSrc":"3977:39:22","nodeType":"YulExpressionStatement","src":"3977:39:22"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"3916:5:22","nodeType":"YulIdentifier","src":"3916:5:22"},{"name":"end","nativeSrc":"3923:3:22","nodeType":"YulIdentifier","src":"3923:3:22"}],"functionName":{"name":"lt","nativeSrc":"3913:2:22","nodeType":"YulIdentifier","src":"3913:2:22"},"nativeSrc":"3913:14:22","nodeType":"YulFunctionCall","src":"3913:14:22"},"nativeSrc":"3906:120:22","nodeType":"YulForLoop","post":{"nativeSrc":"3928:26:22","nodeType":"YulBlock","src":"3928:26:22","statements":[{"nativeSrc":"3930:22:22","nodeType":"YulAssignment","src":"3930:22:22","value":{"arguments":[{"name":"start","nativeSrc":"3943:5:22","nodeType":"YulIdentifier","src":"3943:5:22"},{"kind":"number","nativeSrc":"3950:1:22","nodeType":"YulLiteral","src":"3950:1:22","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"3939:3:22","nodeType":"YulIdentifier","src":"3939:3:22"},"nativeSrc":"3939:13:22","nodeType":"YulFunctionCall","src":"3939:13:22"},"variableNames":[{"name":"start","nativeSrc":"3930:5:22","nodeType":"YulIdentifier","src":"3930:5:22"}]}]},"pre":{"nativeSrc":"3910:2:22","nodeType":"YulBlock","src":"3910:2:22","statements":[]},"src":"3906:120:22"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"3846:186:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"3884:5:22","nodeType":"YulTypedName","src":"3884:5:22","type":""},{"name":"end","nativeSrc":"3891:3:22","nodeType":"YulTypedName","src":"3891:3:22","type":""}],"src":"3846:186:22"},{"body":{"nativeSrc":"4117:464:22","nodeType":"YulBlock","src":"4117:464:22","statements":[{"body":{"nativeSrc":"4143:431:22","nodeType":"YulBlock","src":"4143:431:22","statements":[{"nativeSrc":"4157:54:22","nodeType":"YulVariableDeclaration","src":"4157:54:22","value":{"arguments":[{"name":"array","nativeSrc":"4205:5:22","nodeType":"YulIdentifier","src":"4205:5:22"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"4173:31:22","nodeType":"YulIdentifier","src":"4173:31:22"},"nativeSrc":"4173:38:22","nodeType":"YulFunctionCall","src":"4173:38:22"},"variables":[{"name":"dataArea","nativeSrc":"4161:8:22","nodeType":"YulTypedName","src":"4161:8:22","type":""}]},{"nativeSrc":"4224:63:22","nodeType":"YulVariableDeclaration","src":"4224:63:22","value":{"arguments":[{"name":"dataArea","nativeSrc":"4247:8:22","nodeType":"YulIdentifier","src":"4247:8:22"},{"arguments":[{"name":"startIndex","nativeSrc":"4275:10:22","nodeType":"YulIdentifier","src":"4275:10:22"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"4257:17:22","nodeType":"YulIdentifier","src":"4257:17:22"},"nativeSrc":"4257:29:22","nodeType":"YulFunctionCall","src":"4257:29:22"}],"functionName":{"name":"add","nativeSrc":"4243:3:22","nodeType":"YulIdentifier","src":"4243:3:22"},"nativeSrc":"4243:44:22","nodeType":"YulFunctionCall","src":"4243:44:22"},"variables":[{"name":"deleteStart","nativeSrc":"4228:11:22","nodeType":"YulTypedName","src":"4228:11:22","type":""}]},{"body":{"nativeSrc":"4444:27:22","nodeType":"YulBlock","src":"4444:27:22","statements":[{"nativeSrc":"4446:23:22","nodeType":"YulAssignment","src":"4446:23:22","value":{"name":"dataArea","nativeSrc":"4461:8:22","nodeType":"YulIdentifier","src":"4461:8:22"},"variableNames":[{"name":"deleteStart","nativeSrc":"4446:11:22","nodeType":"YulIdentifier","src":"4446:11:22"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"4428:10:22","nodeType":"YulIdentifier","src":"4428:10:22"},{"kind":"number","nativeSrc":"4440:2:22","nodeType":"YulLiteral","src":"4440:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"4425:2:22","nodeType":"YulIdentifier","src":"4425:2:22"},"nativeSrc":"4425:18:22","nodeType":"YulFunctionCall","src":"4425:18:22"},"nativeSrc":"4422:49:22","nodeType":"YulIf","src":"4422:49:22"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"4513:11:22","nodeType":"YulIdentifier","src":"4513:11:22"},{"arguments":[{"name":"dataArea","nativeSrc":"4530:8:22","nodeType":"YulIdentifier","src":"4530:8:22"},{"arguments":[{"name":"len","nativeSrc":"4558:3:22","nodeType":"YulIdentifier","src":"4558:3:22"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"4540:17:22","nodeType":"YulIdentifier","src":"4540:17:22"},"nativeSrc":"4540:22:22","nodeType":"YulFunctionCall","src":"4540:22:22"}],"functionName":{"name":"add","nativeSrc":"4526:3:22","nodeType":"YulIdentifier","src":"4526:3:22"},"nativeSrc":"4526:37:22","nodeType":"YulFunctionCall","src":"4526:37:22"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"4484:28:22","nodeType":"YulIdentifier","src":"4484:28:22"},"nativeSrc":"4484:80:22","nodeType":"YulFunctionCall","src":"4484:80:22"},"nativeSrc":"4484:80:22","nodeType":"YulExpressionStatement","src":"4484:80:22"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"4134:3:22","nodeType":"YulIdentifier","src":"4134:3:22"},{"kind":"number","nativeSrc":"4139:2:22","nodeType":"YulLiteral","src":"4139:2:22","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"4131:2:22","nodeType":"YulIdentifier","src":"4131:2:22"},"nativeSrc":"4131:11:22","nodeType":"YulFunctionCall","src":"4131:11:22"},"nativeSrc":"4128:446:22","nodeType":"YulIf","src":"4128:446:22"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"4038:543:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"4093:5:22","nodeType":"YulTypedName","src":"4093:5:22","type":""},{"name":"len","nativeSrc":"4100:3:22","nodeType":"YulTypedName","src":"4100:3:22","type":""},{"name":"startIndex","nativeSrc":"4105:10:22","nodeType":"YulTypedName","src":"4105:10:22","type":""}],"src":"4038:543:22"},{"body":{"nativeSrc":"4650:54:22","nodeType":"YulBlock","src":"4650:54:22","statements":[{"nativeSrc":"4660:37:22","nodeType":"YulAssignment","src":"4660:37:22","value":{"arguments":[{"name":"bits","nativeSrc":"4685:4:22","nodeType":"YulIdentifier","src":"4685:4:22"},{"name":"value","nativeSrc":"4691:5:22","nodeType":"YulIdentifier","src":"4691:5:22"}],"functionName":{"name":"shr","nativeSrc":"4681:3:22","nodeType":"YulIdentifier","src":"4681:3:22"},"nativeSrc":"4681:16:22","nodeType":"YulFunctionCall","src":"4681:16:22"},"variableNames":[{"name":"newValue","nativeSrc":"4660:8:22","nodeType":"YulIdentifier","src":"4660:8:22"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"4587:117:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"4625:4:22","nodeType":"YulTypedName","src":"4625:4:22","type":""},{"name":"value","nativeSrc":"4631:5:22","nodeType":"YulTypedName","src":"4631:5:22","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"4641:8:22","nodeType":"YulTypedName","src":"4641:8:22","type":""}],"src":"4587:117:22"},{"body":{"nativeSrc":"4761:118:22","nodeType":"YulBlock","src":"4761:118:22","statements":[{"nativeSrc":"4771:68:22","nodeType":"YulVariableDeclaration","src":"4771:68:22","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4820:1:22","nodeType":"YulLiteral","src":"4820:1:22","type":"","value":"8"},{"name":"bytes","nativeSrc":"4823:5:22","nodeType":"YulIdentifier","src":"4823:5:22"}],"functionName":{"name":"mul","nativeSrc":"4816:3:22","nodeType":"YulIdentifier","src":"4816:3:22"},"nativeSrc":"4816:13:22","nodeType":"YulFunctionCall","src":"4816:13:22"},{"arguments":[{"kind":"number","nativeSrc":"4835:1:22","nodeType":"YulLiteral","src":"4835:1:22","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4831:3:22","nodeType":"YulIdentifier","src":"4831:3:22"},"nativeSrc":"4831:6:22","nodeType":"YulFunctionCall","src":"4831:6:22"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"4787:28:22","nodeType":"YulIdentifier","src":"4787:28:22"},"nativeSrc":"4787:51:22","nodeType":"YulFunctionCall","src":"4787:51:22"}],"functionName":{"name":"not","nativeSrc":"4783:3:22","nodeType":"YulIdentifier","src":"4783:3:22"},"nativeSrc":"4783:56:22","nodeType":"YulFunctionCall","src":"4783:56:22"},"variables":[{"name":"mask","nativeSrc":"4775:4:22","nodeType":"YulTypedName","src":"4775:4:22","type":""}]},{"nativeSrc":"4848:25:22","nodeType":"YulAssignment","src":"4848:25:22","value":{"arguments":[{"name":"data","nativeSrc":"4862:4:22","nodeType":"YulIdentifier","src":"4862:4:22"},{"name":"mask","nativeSrc":"4868:4:22","nodeType":"YulIdentifier","src":"4868:4:22"}],"functionName":{"name":"and","nativeSrc":"4858:3:22","nodeType":"YulIdentifier","src":"4858:3:22"},"nativeSrc":"4858:15:22","nodeType":"YulFunctionCall","src":"4858:15:22"},"variableNames":[{"name":"result","nativeSrc":"4848:6:22","nodeType":"YulIdentifier","src":"4848:6:22"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"4710:169:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4738:4:22","nodeType":"YulTypedName","src":"4738:4:22","type":""},{"name":"bytes","nativeSrc":"4744:5:22","nodeType":"YulTypedName","src":"4744:5:22","type":""}],"returnVariables":[{"name":"result","nativeSrc":"4754:6:22","nodeType":"YulTypedName","src":"4754:6:22","type":""}],"src":"4710:169:22"},{"body":{"nativeSrc":"4965:214:22","nodeType":"YulBlock","src":"4965:214:22","statements":[{"nativeSrc":"5098:37:22","nodeType":"YulAssignment","src":"5098:37:22","value":{"arguments":[{"name":"data","nativeSrc":"5125:4:22","nodeType":"YulIdentifier","src":"5125:4:22"},{"name":"len","nativeSrc":"5131:3:22","nodeType":"YulIdentifier","src":"5131:3:22"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"5106:18:22","nodeType":"YulIdentifier","src":"5106:18:22"},"nativeSrc":"5106:29:22","nodeType":"YulFunctionCall","src":"5106:29:22"},"variableNames":[{"name":"data","nativeSrc":"5098:4:22","nodeType":"YulIdentifier","src":"5098:4:22"}]},{"nativeSrc":"5144:29:22","nodeType":"YulAssignment","src":"5144:29:22","value":{"arguments":[{"name":"data","nativeSrc":"5155:4:22","nodeType":"YulIdentifier","src":"5155:4:22"},{"arguments":[{"kind":"number","nativeSrc":"5165:1:22","nodeType":"YulLiteral","src":"5165:1:22","type":"","value":"2"},{"name":"len","nativeSrc":"5168:3:22","nodeType":"YulIdentifier","src":"5168:3:22"}],"functionName":{"name":"mul","nativeSrc":"5161:3:22","nodeType":"YulIdentifier","src":"5161:3:22"},"nativeSrc":"5161:11:22","nodeType":"YulFunctionCall","src":"5161:11:22"}],"functionName":{"name":"or","nativeSrc":"5152:2:22","nodeType":"YulIdentifier","src":"5152:2:22"},"nativeSrc":"5152:21:22","nodeType":"YulFunctionCall","src":"5152:21:22"},"variableNames":[{"name":"used","nativeSrc":"5144:4:22","nodeType":"YulIdentifier","src":"5144:4:22"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"4884:295:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4946:4:22","nodeType":"YulTypedName","src":"4946:4:22","type":""},{"name":"len","nativeSrc":"4952:3:22","nodeType":"YulTypedName","src":"4952:3:22","type":""}],"returnVariables":[{"name":"used","nativeSrc":"4960:4:22","nodeType":"YulTypedName","src":"4960:4:22","type":""}],"src":"4884:295:22"},{"body":{"nativeSrc":"5276:1303:22","nodeType":"YulBlock","src":"5276:1303:22","statements":[{"nativeSrc":"5287:51:22","nodeType":"YulVariableDeclaration","src":"5287:51:22","value":{"arguments":[{"name":"src","nativeSrc":"5334:3:22","nodeType":"YulIdentifier","src":"5334:3:22"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"5301:32:22","nodeType":"YulIdentifier","src":"5301:32:22"},"nativeSrc":"5301:37:22","nodeType":"YulFunctionCall","src":"5301:37:22"},"variables":[{"name":"newLen","nativeSrc":"5291:6:22","nodeType":"YulTypedName","src":"5291:6:22","type":""}]},{"body":{"nativeSrc":"5423:22:22","nodeType":"YulBlock","src":"5423:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"5425:16:22","nodeType":"YulIdentifier","src":"5425:16:22"},"nativeSrc":"5425:18:22","nodeType":"YulFunctionCall","src":"5425:18:22"},"nativeSrc":"5425:18:22","nodeType":"YulExpressionStatement","src":"5425:18:22"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"5395:6:22","nodeType":"YulIdentifier","src":"5395:6:22"},{"kind":"number","nativeSrc":"5403:18:22","nodeType":"YulLiteral","src":"5403:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5392:2:22","nodeType":"YulIdentifier","src":"5392:2:22"},"nativeSrc":"5392:30:22","nodeType":"YulFunctionCall","src":"5392:30:22"},"nativeSrc":"5389:56:22","nodeType":"YulIf","src":"5389:56:22"},{"nativeSrc":"5455:52:22","nodeType":"YulVariableDeclaration","src":"5455:52:22","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"5501:4:22","nodeType":"YulIdentifier","src":"5501:4:22"}],"functionName":{"name":"sload","nativeSrc":"5495:5:22","nodeType":"YulIdentifier","src":"5495:5:22"},"nativeSrc":"5495:11:22","nodeType":"YulFunctionCall","src":"5495:11:22"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"5469:25:22","nodeType":"YulIdentifier","src":"5469:25:22"},"nativeSrc":"5469:38:22","nodeType":"YulFunctionCall","src":"5469:38:22"},"variables":[{"name":"oldLen","nativeSrc":"5459:6:22","nodeType":"YulTypedName","src":"5459:6:22","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5600:4:22","nodeType":"YulIdentifier","src":"5600:4:22"},{"name":"oldLen","nativeSrc":"5606:6:22","nodeType":"YulIdentifier","src":"5606:6:22"},{"name":"newLen","nativeSrc":"5614:6:22","nodeType":"YulIdentifier","src":"5614:6:22"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"5554:45:22","nodeType":"YulIdentifier","src":"5554:45:22"},"nativeSrc":"5554:67:22","nodeType":"YulFunctionCall","src":"5554:67:22"},"nativeSrc":"5554:67:22","nodeType":"YulExpressionStatement","src":"5554:67:22"},{"nativeSrc":"5631:18:22","nodeType":"YulVariableDeclaration","src":"5631:18:22","value":{"kind":"number","nativeSrc":"5648:1:22","nodeType":"YulLiteral","src":"5648:1:22","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"5635:9:22","nodeType":"YulTypedName","src":"5635:9:22","type":""}]},{"nativeSrc":"5659:17:22","nodeType":"YulAssignment","src":"5659:17:22","value":{"kind":"number","nativeSrc":"5672:4:22","nodeType":"YulLiteral","src":"5672:4:22","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"5659:9:22","nodeType":"YulIdentifier","src":"5659:9:22"}]},{"cases":[{"body":{"nativeSrc":"5723:611:22","nodeType":"YulBlock","src":"5723:611:22","statements":[{"nativeSrc":"5737:37:22","nodeType":"YulVariableDeclaration","src":"5737:37:22","value":{"arguments":[{"name":"newLen","nativeSrc":"5756:6:22","nodeType":"YulIdentifier","src":"5756:6:22"},{"arguments":[{"kind":"number","nativeSrc":"5768:4:22","nodeType":"YulLiteral","src":"5768:4:22","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"5764:3:22","nodeType":"YulIdentifier","src":"5764:3:22"},"nativeSrc":"5764:9:22","nodeType":"YulFunctionCall","src":"5764:9:22"}],"functionName":{"name":"and","nativeSrc":"5752:3:22","nodeType":"YulIdentifier","src":"5752:3:22"},"nativeSrc":"5752:22:22","nodeType":"YulFunctionCall","src":"5752:22:22"},"variables":[{"name":"loopEnd","nativeSrc":"5741:7:22","nodeType":"YulTypedName","src":"5741:7:22","type":""}]},{"nativeSrc":"5788:51:22","nodeType":"YulVariableDeclaration","src":"5788:51:22","value":{"arguments":[{"name":"slot","nativeSrc":"5834:4:22","nodeType":"YulIdentifier","src":"5834:4:22"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"5802:31:22","nodeType":"YulIdentifier","src":"5802:31:22"},"nativeSrc":"5802:37:22","nodeType":"YulFunctionCall","src":"5802:37:22"},"variables":[{"name":"dstPtr","nativeSrc":"5792:6:22","nodeType":"YulTypedName","src":"5792:6:22","type":""}]},{"nativeSrc":"5852:10:22","nodeType":"YulVariableDeclaration","src":"5852:10:22","value":{"kind":"number","nativeSrc":"5861:1:22","nodeType":"YulLiteral","src":"5861:1:22","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"5856:1:22","nodeType":"YulTypedName","src":"5856:1:22","type":""}]},{"body":{"nativeSrc":"5920:163:22","nodeType":"YulBlock","src":"5920:163:22","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"5945:6:22","nodeType":"YulIdentifier","src":"5945:6:22"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"5963:3:22","nodeType":"YulIdentifier","src":"5963:3:22"},{"name":"srcOffset","nativeSrc":"5968:9:22","nodeType":"YulIdentifier","src":"5968:9:22"}],"functionName":{"name":"add","nativeSrc":"5959:3:22","nodeType":"YulIdentifier","src":"5959:3:22"},"nativeSrc":"5959:19:22","nodeType":"YulFunctionCall","src":"5959:19:22"}],"functionName":{"name":"mload","nativeSrc":"5953:5:22","nodeType":"YulIdentifier","src":"5953:5:22"},"nativeSrc":"5953:26:22","nodeType":"YulFunctionCall","src":"5953:26:22"}],"functionName":{"name":"sstore","nativeSrc":"5938:6:22","nodeType":"YulIdentifier","src":"5938:6:22"},"nativeSrc":"5938:42:22","nodeType":"YulFunctionCall","src":"5938:42:22"},"nativeSrc":"5938:42:22","nodeType":"YulExpressionStatement","src":"5938:42:22"},{"nativeSrc":"5997:24:22","nodeType":"YulAssignment","src":"5997:24:22","value":{"arguments":[{"name":"dstPtr","nativeSrc":"6011:6:22","nodeType":"YulIdentifier","src":"6011:6:22"},{"kind":"number","nativeSrc":"6019:1:22","nodeType":"YulLiteral","src":"6019:1:22","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6007:3:22","nodeType":"YulIdentifier","src":"6007:3:22"},"nativeSrc":"6007:14:22","nodeType":"YulFunctionCall","src":"6007:14:22"},"variableNames":[{"name":"dstPtr","nativeSrc":"5997:6:22","nodeType":"YulIdentifier","src":"5997:6:22"}]},{"nativeSrc":"6038:31:22","nodeType":"YulAssignment","src":"6038:31:22","value":{"arguments":[{"name":"srcOffset","nativeSrc":"6055:9:22","nodeType":"YulIdentifier","src":"6055:9:22"},{"kind":"number","nativeSrc":"6066:2:22","nodeType":"YulLiteral","src":"6066:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6051:3:22","nodeType":"YulIdentifier","src":"6051:3:22"},"nativeSrc":"6051:18:22","nodeType":"YulFunctionCall","src":"6051:18:22"},"variableNames":[{"name":"srcOffset","nativeSrc":"6038:9:22","nodeType":"YulIdentifier","src":"6038:9:22"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"5886:1:22","nodeType":"YulIdentifier","src":"5886:1:22"},{"name":"loopEnd","nativeSrc":"5889:7:22","nodeType":"YulIdentifier","src":"5889:7:22"}],"functionName":{"name":"lt","nativeSrc":"5883:2:22","nodeType":"YulIdentifier","src":"5883:2:22"},"nativeSrc":"5883:14:22","nodeType":"YulFunctionCall","src":"5883:14:22"},"nativeSrc":"5875:208:22","nodeType":"YulForLoop","post":{"nativeSrc":"5898:21:22","nodeType":"YulBlock","src":"5898:21:22","statements":[{"nativeSrc":"5900:17:22","nodeType":"YulAssignment","src":"5900:17:22","value":{"arguments":[{"name":"i","nativeSrc":"5909:1:22","nodeType":"YulIdentifier","src":"5909:1:22"},{"kind":"number","nativeSrc":"5912:4:22","nodeType":"YulLiteral","src":"5912:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5905:3:22","nodeType":"YulIdentifier","src":"5905:3:22"},"nativeSrc":"5905:12:22","nodeType":"YulFunctionCall","src":"5905:12:22"},"variableNames":[{"name":"i","nativeSrc":"5900:1:22","nodeType":"YulIdentifier","src":"5900:1:22"}]}]},"pre":{"nativeSrc":"5879:3:22","nodeType":"YulBlock","src":"5879:3:22","statements":[]},"src":"5875:208:22"},{"body":{"nativeSrc":"6119:156:22","nodeType":"YulBlock","src":"6119:156:22","statements":[{"nativeSrc":"6137:43:22","nodeType":"YulVariableDeclaration","src":"6137:43:22","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6164:3:22","nodeType":"YulIdentifier","src":"6164:3:22"},{"name":"srcOffset","nativeSrc":"6169:9:22","nodeType":"YulIdentifier","src":"6169:9:22"}],"functionName":{"name":"add","nativeSrc":"6160:3:22","nodeType":"YulIdentifier","src":"6160:3:22"},"nativeSrc":"6160:19:22","nodeType":"YulFunctionCall","src":"6160:19:22"}],"functionName":{"name":"mload","nativeSrc":"6154:5:22","nodeType":"YulIdentifier","src":"6154:5:22"},"nativeSrc":"6154:26:22","nodeType":"YulFunctionCall","src":"6154:26:22"},"variables":[{"name":"lastValue","nativeSrc":"6141:9:22","nodeType":"YulTypedName","src":"6141:9:22","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"6204:6:22","nodeType":"YulIdentifier","src":"6204:6:22"},{"arguments":[{"name":"lastValue","nativeSrc":"6231:9:22","nodeType":"YulIdentifier","src":"6231:9:22"},{"arguments":[{"name":"newLen","nativeSrc":"6246:6:22","nodeType":"YulIdentifier","src":"6246:6:22"},{"kind":"number","nativeSrc":"6254:4:22","nodeType":"YulLiteral","src":"6254:4:22","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"6242:3:22","nodeType":"YulIdentifier","src":"6242:3:22"},"nativeSrc":"6242:17:22","nodeType":"YulFunctionCall","src":"6242:17:22"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"6212:18:22","nodeType":"YulIdentifier","src":"6212:18:22"},"nativeSrc":"6212:48:22","nodeType":"YulFunctionCall","src":"6212:48:22"}],"functionName":{"name":"sstore","nativeSrc":"6197:6:22","nodeType":"YulIdentifier","src":"6197:6:22"},"nativeSrc":"6197:64:22","nodeType":"YulFunctionCall","src":"6197:64:22"},"nativeSrc":"6197:64:22","nodeType":"YulExpressionStatement","src":"6197:64:22"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"6102:7:22","nodeType":"YulIdentifier","src":"6102:7:22"},{"name":"newLen","nativeSrc":"6111:6:22","nodeType":"YulIdentifier","src":"6111:6:22"}],"functionName":{"name":"lt","nativeSrc":"6099:2:22","nodeType":"YulIdentifier","src":"6099:2:22"},"nativeSrc":"6099:19:22","nodeType":"YulFunctionCall","src":"6099:19:22"},"nativeSrc":"6096:179:22","nodeType":"YulIf","src":"6096:179:22"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6295:4:22","nodeType":"YulIdentifier","src":"6295:4:22"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"6309:6:22","nodeType":"YulIdentifier","src":"6309:6:22"},{"kind":"number","nativeSrc":"6317:1:22","nodeType":"YulLiteral","src":"6317:1:22","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"6305:3:22","nodeType":"YulIdentifier","src":"6305:3:22"},"nativeSrc":"6305:14:22","nodeType":"YulFunctionCall","src":"6305:14:22"},{"kind":"number","nativeSrc":"6321:1:22","nodeType":"YulLiteral","src":"6321:1:22","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6301:3:22","nodeType":"YulIdentifier","src":"6301:3:22"},"nativeSrc":"6301:22:22","nodeType":"YulFunctionCall","src":"6301:22:22"}],"functionName":{"name":"sstore","nativeSrc":"6288:6:22","nodeType":"YulIdentifier","src":"6288:6:22"},"nativeSrc":"6288:36:22","nodeType":"YulFunctionCall","src":"6288:36:22"},"nativeSrc":"6288:36:22","nodeType":"YulExpressionStatement","src":"6288:36:22"}]},"nativeSrc":"5716:618:22","nodeType":"YulCase","src":"5716:618:22","value":{"kind":"number","nativeSrc":"5721:1:22","nodeType":"YulLiteral","src":"5721:1:22","type":"","value":"1"}},{"body":{"nativeSrc":"6351:222:22","nodeType":"YulBlock","src":"6351:222:22","statements":[{"nativeSrc":"6365:14:22","nodeType":"YulVariableDeclaration","src":"6365:14:22","value":{"kind":"number","nativeSrc":"6378:1:22","nodeType":"YulLiteral","src":"6378:1:22","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"6369:5:22","nodeType":"YulTypedName","src":"6369:5:22","type":""}]},{"body":{"nativeSrc":"6402:67:22","nodeType":"YulBlock","src":"6402:67:22","statements":[{"nativeSrc":"6420:35:22","nodeType":"YulAssignment","src":"6420:35:22","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6439:3:22","nodeType":"YulIdentifier","src":"6439:3:22"},{"name":"srcOffset","nativeSrc":"6444:9:22","nodeType":"YulIdentifier","src":"6444:9:22"}],"functionName":{"name":"add","nativeSrc":"6435:3:22","nodeType":"YulIdentifier","src":"6435:3:22"},"nativeSrc":"6435:19:22","nodeType":"YulFunctionCall","src":"6435:19:22"}],"functionName":{"name":"mload","nativeSrc":"6429:5:22","nodeType":"YulIdentifier","src":"6429:5:22"},"nativeSrc":"6429:26:22","nodeType":"YulFunctionCall","src":"6429:26:22"},"variableNames":[{"name":"value","nativeSrc":"6420:5:22","nodeType":"YulIdentifier","src":"6420:5:22"}]}]},"condition":{"name":"newLen","nativeSrc":"6395:6:22","nodeType":"YulIdentifier","src":"6395:6:22"},"nativeSrc":"6392:77:22","nodeType":"YulIf","src":"6392:77:22"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6489:4:22","nodeType":"YulIdentifier","src":"6489:4:22"},{"arguments":[{"name":"value","nativeSrc":"6548:5:22","nodeType":"YulIdentifier","src":"6548:5:22"},{"name":"newLen","nativeSrc":"6555:6:22","nodeType":"YulIdentifier","src":"6555:6:22"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"6495:52:22","nodeType":"YulIdentifier","src":"6495:52:22"},"nativeSrc":"6495:67:22","nodeType":"YulFunctionCall","src":"6495:67:22"}],"functionName":{"name":"sstore","nativeSrc":"6482:6:22","nodeType":"YulIdentifier","src":"6482:6:22"},"nativeSrc":"6482:81:22","nodeType":"YulFunctionCall","src":"6482:81:22"},"nativeSrc":"6482:81:22","nodeType":"YulExpressionStatement","src":"6482:81:22"}]},"nativeSrc":"6343:230:22","nodeType":"YulCase","src":"6343:230:22","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"5696:6:22","nodeType":"YulIdentifier","src":"5696:6:22"},{"kind":"number","nativeSrc":"5704:2:22","nodeType":"YulLiteral","src":"5704:2:22","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"5693:2:22","nodeType":"YulIdentifier","src":"5693:2:22"},"nativeSrc":"5693:14:22","nodeType":"YulFunctionCall","src":"5693:14:22"},"nativeSrc":"5686:887:22","nodeType":"YulSwitch","src":"5686:887:22"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"5184:1395:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"5265:4:22","nodeType":"YulTypedName","src":"5265:4:22","type":""},{"name":"src","nativeSrc":"5271:3:22","nodeType":"YulTypedName","src":"5271:3:22","type":""}],"src":"5184:1395:22"},{"body":{"nativeSrc":"6650:53:22","nodeType":"YulBlock","src":"6650:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6667:3:22","nodeType":"YulIdentifier","src":"6667:3:22"},{"arguments":[{"name":"value","nativeSrc":"6690:5:22","nodeType":"YulIdentifier","src":"6690:5:22"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"6672:17:22","nodeType":"YulIdentifier","src":"6672:17:22"},"nativeSrc":"6672:24:22","nodeType":"YulFunctionCall","src":"6672:24:22"}],"functionName":{"name":"mstore","nativeSrc":"6660:6:22","nodeType":"YulIdentifier","src":"6660:6:22"},"nativeSrc":"6660:37:22","nodeType":"YulFunctionCall","src":"6660:37:22"},"nativeSrc":"6660:37:22","nodeType":"YulExpressionStatement","src":"6660:37:22"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6585:118:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6638:5:22","nodeType":"YulTypedName","src":"6638:5:22","type":""},{"name":"pos","nativeSrc":"6645:3:22","nodeType":"YulTypedName","src":"6645:3:22","type":""}],"src":"6585:118:22"},{"body":{"nativeSrc":"6807:124:22","nodeType":"YulBlock","src":"6807:124:22","statements":[{"nativeSrc":"6817:26:22","nodeType":"YulAssignment","src":"6817:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"6829:9:22","nodeType":"YulIdentifier","src":"6829:9:22"},{"kind":"number","nativeSrc":"6840:2:22","nodeType":"YulLiteral","src":"6840:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6825:3:22","nodeType":"YulIdentifier","src":"6825:3:22"},"nativeSrc":"6825:18:22","nodeType":"YulFunctionCall","src":"6825:18:22"},"variableNames":[{"name":"tail","nativeSrc":"6817:4:22","nodeType":"YulIdentifier","src":"6817:4:22"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6897:6:22","nodeType":"YulIdentifier","src":"6897:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"6910:9:22","nodeType":"YulIdentifier","src":"6910:9:22"},{"kind":"number","nativeSrc":"6921:1:22","nodeType":"YulLiteral","src":"6921:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6906:3:22","nodeType":"YulIdentifier","src":"6906:3:22"},"nativeSrc":"6906:17:22","nodeType":"YulFunctionCall","src":"6906:17:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6853:43:22","nodeType":"YulIdentifier","src":"6853:43:22"},"nativeSrc":"6853:71:22","nodeType":"YulFunctionCall","src":"6853:71:22"},"nativeSrc":"6853:71:22","nodeType":"YulExpressionStatement","src":"6853:71:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"6709:222:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6779:9:22","nodeType":"YulTypedName","src":"6779:9:22","type":""},{"name":"value0","nativeSrc":"6791:6:22","nodeType":"YulTypedName","src":"6791:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6802:4:22","nodeType":"YulTypedName","src":"6802:4:22","type":""}],"src":"6709:222:22"},{"body":{"nativeSrc":"6965:152:22","nodeType":"YulBlock","src":"6965:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6982:1:22","nodeType":"YulLiteral","src":"6982:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"6985:77:22","nodeType":"YulLiteral","src":"6985:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"6975:6:22","nodeType":"YulIdentifier","src":"6975:6:22"},"nativeSrc":"6975:88:22","nodeType":"YulFunctionCall","src":"6975:88:22"},"nativeSrc":"6975:88:22","nodeType":"YulExpressionStatement","src":"6975:88:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7079:1:22","nodeType":"YulLiteral","src":"7079:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"7082:4:22","nodeType":"YulLiteral","src":"7082:4:22","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"7072:6:22","nodeType":"YulIdentifier","src":"7072:6:22"},"nativeSrc":"7072:15:22","nodeType":"YulFunctionCall","src":"7072:15:22"},"nativeSrc":"7072:15:22","nodeType":"YulExpressionStatement","src":"7072:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7103:1:22","nodeType":"YulLiteral","src":"7103:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"7106:4:22","nodeType":"YulLiteral","src":"7106:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7096:6:22","nodeType":"YulIdentifier","src":"7096:6:22"},"nativeSrc":"7096:15:22","nodeType":"YulFunctionCall","src":"7096:15:22"},"nativeSrc":"7096:15:22","nodeType":"YulExpressionStatement","src":"7096:15:22"}]},"name":"panic_error_0x11","nativeSrc":"6937:180:22","nodeType":"YulFunctionDefinition","src":"6937:180:22"},{"body":{"nativeSrc":"7171:362:22","nodeType":"YulBlock","src":"7171:362:22","statements":[{"nativeSrc":"7181:25:22","nodeType":"YulAssignment","src":"7181:25:22","value":{"arguments":[{"name":"x","nativeSrc":"7204:1:22","nodeType":"YulIdentifier","src":"7204:1:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7186:17:22","nodeType":"YulIdentifier","src":"7186:17:22"},"nativeSrc":"7186:20:22","nodeType":"YulFunctionCall","src":"7186:20:22"},"variableNames":[{"name":"x","nativeSrc":"7181:1:22","nodeType":"YulIdentifier","src":"7181:1:22"}]},{"nativeSrc":"7215:25:22","nodeType":"YulAssignment","src":"7215:25:22","value":{"arguments":[{"name":"y","nativeSrc":"7238:1:22","nodeType":"YulIdentifier","src":"7238:1:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7220:17:22","nodeType":"YulIdentifier","src":"7220:17:22"},"nativeSrc":"7220:20:22","nodeType":"YulFunctionCall","src":"7220:20:22"},"variableNames":[{"name":"y","nativeSrc":"7215:1:22","nodeType":"YulIdentifier","src":"7215:1:22"}]},{"nativeSrc":"7249:28:22","nodeType":"YulVariableDeclaration","src":"7249:28:22","value":{"arguments":[{"name":"x","nativeSrc":"7272:1:22","nodeType":"YulIdentifier","src":"7272:1:22"},{"name":"y","nativeSrc":"7275:1:22","nodeType":"YulIdentifier","src":"7275:1:22"}],"functionName":{"name":"mul","nativeSrc":"7268:3:22","nodeType":"YulIdentifier","src":"7268:3:22"},"nativeSrc":"7268:9:22","nodeType":"YulFunctionCall","src":"7268:9:22"},"variables":[{"name":"product_raw","nativeSrc":"7253:11:22","nodeType":"YulTypedName","src":"7253:11:22","type":""}]},{"nativeSrc":"7286:41:22","nodeType":"YulAssignment","src":"7286:41:22","value":{"arguments":[{"name":"product_raw","nativeSrc":"7315:11:22","nodeType":"YulIdentifier","src":"7315:11:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7297:17:22","nodeType":"YulIdentifier","src":"7297:17:22"},"nativeSrc":"7297:30:22","nodeType":"YulFunctionCall","src":"7297:30:22"},"variableNames":[{"name":"product","nativeSrc":"7286:7:22","nodeType":"YulIdentifier","src":"7286:7:22"}]},{"body":{"nativeSrc":"7504:22:22","nodeType":"YulBlock","src":"7504:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7506:16:22","nodeType":"YulIdentifier","src":"7506:16:22"},"nativeSrc":"7506:18:22","nodeType":"YulFunctionCall","src":"7506:18:22"},"nativeSrc":"7506:18:22","nodeType":"YulExpressionStatement","src":"7506:18:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"7437:1:22","nodeType":"YulIdentifier","src":"7437:1:22"}],"functionName":{"name":"iszero","nativeSrc":"7430:6:22","nodeType":"YulIdentifier","src":"7430:6:22"},"nativeSrc":"7430:9:22","nodeType":"YulFunctionCall","src":"7430:9:22"},{"arguments":[{"name":"y","nativeSrc":"7460:1:22","nodeType":"YulIdentifier","src":"7460:1:22"},{"arguments":[{"name":"product","nativeSrc":"7467:7:22","nodeType":"YulIdentifier","src":"7467:7:22"},{"name":"x","nativeSrc":"7476:1:22","nodeType":"YulIdentifier","src":"7476:1:22"}],"functionName":{"name":"div","nativeSrc":"7463:3:22","nodeType":"YulIdentifier","src":"7463:3:22"},"nativeSrc":"7463:15:22","nodeType":"YulFunctionCall","src":"7463:15:22"}],"functionName":{"name":"eq","nativeSrc":"7457:2:22","nodeType":"YulIdentifier","src":"7457:2:22"},"nativeSrc":"7457:22:22","nodeType":"YulFunctionCall","src":"7457:22:22"}],"functionName":{"name":"or","nativeSrc":"7410:2:22","nodeType":"YulIdentifier","src":"7410:2:22"},"nativeSrc":"7410:83:22","nodeType":"YulFunctionCall","src":"7410:83:22"}],"functionName":{"name":"iszero","nativeSrc":"7390:6:22","nodeType":"YulIdentifier","src":"7390:6:22"},"nativeSrc":"7390:113:22","nodeType":"YulFunctionCall","src":"7390:113:22"},"nativeSrc":"7387:139:22","nodeType":"YulIf","src":"7387:139:22"}]},"name":"checked_mul_t_uint256","nativeSrc":"7123:410:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"7154:1:22","nodeType":"YulTypedName","src":"7154:1:22","type":""},{"name":"y","nativeSrc":"7157:1:22","nodeType":"YulTypedName","src":"7157:1:22","type":""}],"returnVariables":[{"name":"product","nativeSrc":"7163:7:22","nodeType":"YulTypedName","src":"7163:7:22","type":""}],"src":"7123:410:22"},{"body":{"nativeSrc":"7567:152:22","nodeType":"YulBlock","src":"7567:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7584:1:22","nodeType":"YulLiteral","src":"7584:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"7587:77:22","nodeType":"YulLiteral","src":"7587:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"7577:6:22","nodeType":"YulIdentifier","src":"7577:6:22"},"nativeSrc":"7577:88:22","nodeType":"YulFunctionCall","src":"7577:88:22"},"nativeSrc":"7577:88:22","nodeType":"YulExpressionStatement","src":"7577:88:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7681:1:22","nodeType":"YulLiteral","src":"7681:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"7684:4:22","nodeType":"YulLiteral","src":"7684:4:22","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"7674:6:22","nodeType":"YulIdentifier","src":"7674:6:22"},"nativeSrc":"7674:15:22","nodeType":"YulFunctionCall","src":"7674:15:22"},"nativeSrc":"7674:15:22","nodeType":"YulExpressionStatement","src":"7674:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7705:1:22","nodeType":"YulLiteral","src":"7705:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"7708:4:22","nodeType":"YulLiteral","src":"7708:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7698:6:22","nodeType":"YulIdentifier","src":"7698:6:22"},"nativeSrc":"7698:15:22","nodeType":"YulFunctionCall","src":"7698:15:22"},"nativeSrc":"7698:15:22","nodeType":"YulExpressionStatement","src":"7698:15:22"}]},"name":"panic_error_0x12","nativeSrc":"7539:180:22","nodeType":"YulFunctionDefinition","src":"7539:180:22"},{"body":{"nativeSrc":"7767:143:22","nodeType":"YulBlock","src":"7767:143:22","statements":[{"nativeSrc":"7777:25:22","nodeType":"YulAssignment","src":"7777:25:22","value":{"arguments":[{"name":"x","nativeSrc":"7800:1:22","nodeType":"YulIdentifier","src":"7800:1:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7782:17:22","nodeType":"YulIdentifier","src":"7782:17:22"},"nativeSrc":"7782:20:22","nodeType":"YulFunctionCall","src":"7782:20:22"},"variableNames":[{"name":"x","nativeSrc":"7777:1:22","nodeType":"YulIdentifier","src":"7777:1:22"}]},{"nativeSrc":"7811:25:22","nodeType":"YulAssignment","src":"7811:25:22","value":{"arguments":[{"name":"y","nativeSrc":"7834:1:22","nodeType":"YulIdentifier","src":"7834:1:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7816:17:22","nodeType":"YulIdentifier","src":"7816:17:22"},"nativeSrc":"7816:20:22","nodeType":"YulFunctionCall","src":"7816:20:22"},"variableNames":[{"name":"y","nativeSrc":"7811:1:22","nodeType":"YulIdentifier","src":"7811:1:22"}]},{"body":{"nativeSrc":"7858:22:22","nodeType":"YulBlock","src":"7858:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"7860:16:22","nodeType":"YulIdentifier","src":"7860:16:22"},"nativeSrc":"7860:18:22","nodeType":"YulFunctionCall","src":"7860:18:22"},"nativeSrc":"7860:18:22","nodeType":"YulExpressionStatement","src":"7860:18:22"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"7855:1:22","nodeType":"YulIdentifier","src":"7855:1:22"}],"functionName":{"name":"iszero","nativeSrc":"7848:6:22","nodeType":"YulIdentifier","src":"7848:6:22"},"nativeSrc":"7848:9:22","nodeType":"YulFunctionCall","src":"7848:9:22"},"nativeSrc":"7845:35:22","nodeType":"YulIf","src":"7845:35:22"},{"nativeSrc":"7890:14:22","nodeType":"YulAssignment","src":"7890:14:22","value":{"arguments":[{"name":"x","nativeSrc":"7899:1:22","nodeType":"YulIdentifier","src":"7899:1:22"},{"name":"y","nativeSrc":"7902:1:22","nodeType":"YulIdentifier","src":"7902:1:22"}],"functionName":{"name":"div","nativeSrc":"7895:3:22","nodeType":"YulIdentifier","src":"7895:3:22"},"nativeSrc":"7895:9:22","nodeType":"YulFunctionCall","src":"7895:9:22"},"variableNames":[{"name":"r","nativeSrc":"7890:1:22","nodeType":"YulIdentifier","src":"7890:1:22"}]}]},"name":"checked_div_t_uint256","nativeSrc":"7725:185:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"7756:1:22","nodeType":"YulTypedName","src":"7756:1:22","type":""},{"name":"y","nativeSrc":"7759:1:22","nodeType":"YulTypedName","src":"7759:1:22","type":""}],"returnVariables":[{"name":"r","nativeSrc":"7765:1:22","nodeType":"YulTypedName","src":"7765:1:22","type":""}],"src":"7725:185:22"},{"body":{"nativeSrc":"7961:32:22","nodeType":"YulBlock","src":"7961:32:22","statements":[{"nativeSrc":"7971:16:22","nodeType":"YulAssignment","src":"7971:16:22","value":{"name":"value","nativeSrc":"7982:5:22","nodeType":"YulIdentifier","src":"7982:5:22"},"variableNames":[{"name":"cleaned","nativeSrc":"7971:7:22","nodeType":"YulIdentifier","src":"7971:7:22"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"7916:77:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7943:5:22","nodeType":"YulTypedName","src":"7943:5:22","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"7953:7:22","nodeType":"YulTypedName","src":"7953:7:22","type":""}],"src":"7916:77:22"},{"body":{"nativeSrc":"8064:53:22","nodeType":"YulBlock","src":"8064:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8081:3:22","nodeType":"YulIdentifier","src":"8081:3:22"},{"arguments":[{"name":"value","nativeSrc":"8104:5:22","nodeType":"YulIdentifier","src":"8104:5:22"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"8086:17:22","nodeType":"YulIdentifier","src":"8086:17:22"},"nativeSrc":"8086:24:22","nodeType":"YulFunctionCall","src":"8086:24:22"}],"functionName":{"name":"mstore","nativeSrc":"8074:6:22","nodeType":"YulIdentifier","src":"8074:6:22"},"nativeSrc":"8074:37:22","nodeType":"YulFunctionCall","src":"8074:37:22"},"nativeSrc":"8074:37:22","nodeType":"YulExpressionStatement","src":"8074:37:22"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"7999:118:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8052:5:22","nodeType":"YulTypedName","src":"8052:5:22","type":""},{"name":"pos","nativeSrc":"8059:3:22","nodeType":"YulTypedName","src":"8059:3:22","type":""}],"src":"7999:118:22"},{"body":{"nativeSrc":"8188:53:22","nodeType":"YulBlock","src":"8188:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8205:3:22","nodeType":"YulIdentifier","src":"8205:3:22"},{"arguments":[{"name":"value","nativeSrc":"8228:5:22","nodeType":"YulIdentifier","src":"8228:5:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"8210:17:22","nodeType":"YulIdentifier","src":"8210:17:22"},"nativeSrc":"8210:24:22","nodeType":"YulFunctionCall","src":"8210:24:22"}],"functionName":{"name":"mstore","nativeSrc":"8198:6:22","nodeType":"YulIdentifier","src":"8198:6:22"},"nativeSrc":"8198:37:22","nodeType":"YulFunctionCall","src":"8198:37:22"},"nativeSrc":"8198:37:22","nodeType":"YulExpressionStatement","src":"8198:37:22"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"8123:118:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8176:5:22","nodeType":"YulTypedName","src":"8176:5:22","type":""},{"name":"pos","nativeSrc":"8183:3:22","nodeType":"YulTypedName","src":"8183:3:22","type":""}],"src":"8123:118:22"},{"body":{"nativeSrc":"8457:454:22","nodeType":"YulBlock","src":"8457:454:22","statements":[{"nativeSrc":"8467:27:22","nodeType":"YulAssignment","src":"8467:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"8479:9:22","nodeType":"YulIdentifier","src":"8479:9:22"},{"kind":"number","nativeSrc":"8490:3:22","nodeType":"YulLiteral","src":"8490:3:22","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"8475:3:22","nodeType":"YulIdentifier","src":"8475:3:22"},"nativeSrc":"8475:19:22","nodeType":"YulFunctionCall","src":"8475:19:22"},"variableNames":[{"name":"tail","nativeSrc":"8467:4:22","nodeType":"YulIdentifier","src":"8467:4:22"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"8548:6:22","nodeType":"YulIdentifier","src":"8548:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"8561:9:22","nodeType":"YulIdentifier","src":"8561:9:22"},{"kind":"number","nativeSrc":"8572:1:22","nodeType":"YulLiteral","src":"8572:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8557:3:22","nodeType":"YulIdentifier","src":"8557:3:22"},"nativeSrc":"8557:17:22","nodeType":"YulFunctionCall","src":"8557:17:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"8504:43:22","nodeType":"YulIdentifier","src":"8504:43:22"},"nativeSrc":"8504:71:22","nodeType":"YulFunctionCall","src":"8504:71:22"},"nativeSrc":"8504:71:22","nodeType":"YulExpressionStatement","src":"8504:71:22"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"8629:6:22","nodeType":"YulIdentifier","src":"8629:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"8642:9:22","nodeType":"YulIdentifier","src":"8642:9:22"},{"kind":"number","nativeSrc":"8653:2:22","nodeType":"YulLiteral","src":"8653:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8638:3:22","nodeType":"YulIdentifier","src":"8638:3:22"},"nativeSrc":"8638:18:22","nodeType":"YulFunctionCall","src":"8638:18:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"8585:43:22","nodeType":"YulIdentifier","src":"8585:43:22"},"nativeSrc":"8585:72:22","nodeType":"YulFunctionCall","src":"8585:72:22"},"nativeSrc":"8585:72:22","nodeType":"YulExpressionStatement","src":"8585:72:22"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"8711:6:22","nodeType":"YulIdentifier","src":"8711:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"8724:9:22","nodeType":"YulIdentifier","src":"8724:9:22"},{"kind":"number","nativeSrc":"8735:2:22","nodeType":"YulLiteral","src":"8735:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8720:3:22","nodeType":"YulIdentifier","src":"8720:3:22"},"nativeSrc":"8720:18:22","nodeType":"YulFunctionCall","src":"8720:18:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"8667:43:22","nodeType":"YulIdentifier","src":"8667:43:22"},"nativeSrc":"8667:72:22","nodeType":"YulFunctionCall","src":"8667:72:22"},"nativeSrc":"8667:72:22","nodeType":"YulExpressionStatement","src":"8667:72:22"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"8793:6:22","nodeType":"YulIdentifier","src":"8793:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"8806:9:22","nodeType":"YulIdentifier","src":"8806:9:22"},{"kind":"number","nativeSrc":"8817:2:22","nodeType":"YulLiteral","src":"8817:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8802:3:22","nodeType":"YulIdentifier","src":"8802:3:22"},"nativeSrc":"8802:18:22","nodeType":"YulFunctionCall","src":"8802:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"8749:43:22","nodeType":"YulIdentifier","src":"8749:43:22"},"nativeSrc":"8749:72:22","nodeType":"YulFunctionCall","src":"8749:72:22"},"nativeSrc":"8749:72:22","nodeType":"YulExpressionStatement","src":"8749:72:22"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"8875:6:22","nodeType":"YulIdentifier","src":"8875:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"8888:9:22","nodeType":"YulIdentifier","src":"8888:9:22"},{"kind":"number","nativeSrc":"8899:3:22","nodeType":"YulLiteral","src":"8899:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"8884:3:22","nodeType":"YulIdentifier","src":"8884:3:22"},"nativeSrc":"8884:19:22","nodeType":"YulFunctionCall","src":"8884:19:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"8831:43:22","nodeType":"YulIdentifier","src":"8831:43:22"},"nativeSrc":"8831:73:22","nodeType":"YulFunctionCall","src":"8831:73:22"},"nativeSrc":"8831:73:22","nodeType":"YulExpressionStatement","src":"8831:73:22"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"8247:664:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8397:9:22","nodeType":"YulTypedName","src":"8397:9:22","type":""},{"name":"value4","nativeSrc":"8409:6:22","nodeType":"YulTypedName","src":"8409:6:22","type":""},{"name":"value3","nativeSrc":"8417:6:22","nodeType":"YulTypedName","src":"8417:6:22","type":""},{"name":"value2","nativeSrc":"8425:6:22","nodeType":"YulTypedName","src":"8425:6:22","type":""},{"name":"value1","nativeSrc":"8433:6:22","nodeType":"YulTypedName","src":"8433:6:22","type":""},{"name":"value0","nativeSrc":"8441:6:22","nodeType":"YulTypedName","src":"8441:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8452:4:22","nodeType":"YulTypedName","src":"8452:4:22","type":""}],"src":"8247:664:22"},{"body":{"nativeSrc":"9013:73:22","nodeType":"YulBlock","src":"9013:73:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9030:3:22","nodeType":"YulIdentifier","src":"9030:3:22"},{"name":"length","nativeSrc":"9035:6:22","nodeType":"YulIdentifier","src":"9035:6:22"}],"functionName":{"name":"mstore","nativeSrc":"9023:6:22","nodeType":"YulIdentifier","src":"9023:6:22"},"nativeSrc":"9023:19:22","nodeType":"YulFunctionCall","src":"9023:19:22"},"nativeSrc":"9023:19:22","nodeType":"YulExpressionStatement","src":"9023:19:22"},{"nativeSrc":"9051:29:22","nodeType":"YulAssignment","src":"9051:29:22","value":{"arguments":[{"name":"pos","nativeSrc":"9070:3:22","nodeType":"YulIdentifier","src":"9070:3:22"},{"kind":"number","nativeSrc":"9075:4:22","nodeType":"YulLiteral","src":"9075:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9066:3:22","nodeType":"YulIdentifier","src":"9066:3:22"},"nativeSrc":"9066:14:22","nodeType":"YulFunctionCall","src":"9066:14:22"},"variableNames":[{"name":"updated_pos","nativeSrc":"9051:11:22","nodeType":"YulIdentifier","src":"9051:11:22"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"8917:169:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"8985:3:22","nodeType":"YulTypedName","src":"8985:3:22","type":""},{"name":"length","nativeSrc":"8990:6:22","nodeType":"YulTypedName","src":"8990:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"9001:11:22","nodeType":"YulTypedName","src":"9001:11:22","type":""}],"src":"8917:169:22"},{"body":{"nativeSrc":"9154:184:22","nodeType":"YulBlock","src":"9154:184:22","statements":[{"nativeSrc":"9164:10:22","nodeType":"YulVariableDeclaration","src":"9164:10:22","value":{"kind":"number","nativeSrc":"9173:1:22","nodeType":"YulLiteral","src":"9173:1:22","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"9168:1:22","nodeType":"YulTypedName","src":"9168:1:22","type":""}]},{"body":{"nativeSrc":"9233:63:22","nodeType":"YulBlock","src":"9233:63:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"9258:3:22","nodeType":"YulIdentifier","src":"9258:3:22"},{"name":"i","nativeSrc":"9263:1:22","nodeType":"YulIdentifier","src":"9263:1:22"}],"functionName":{"name":"add","nativeSrc":"9254:3:22","nodeType":"YulIdentifier","src":"9254:3:22"},"nativeSrc":"9254:11:22","nodeType":"YulFunctionCall","src":"9254:11:22"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"9277:3:22","nodeType":"YulIdentifier","src":"9277:3:22"},{"name":"i","nativeSrc":"9282:1:22","nodeType":"YulIdentifier","src":"9282:1:22"}],"functionName":{"name":"add","nativeSrc":"9273:3:22","nodeType":"YulIdentifier","src":"9273:3:22"},"nativeSrc":"9273:11:22","nodeType":"YulFunctionCall","src":"9273:11:22"}],"functionName":{"name":"mload","nativeSrc":"9267:5:22","nodeType":"YulIdentifier","src":"9267:5:22"},"nativeSrc":"9267:18:22","nodeType":"YulFunctionCall","src":"9267:18:22"}],"functionName":{"name":"mstore","nativeSrc":"9247:6:22","nodeType":"YulIdentifier","src":"9247:6:22"},"nativeSrc":"9247:39:22","nodeType":"YulFunctionCall","src":"9247:39:22"},"nativeSrc":"9247:39:22","nodeType":"YulExpressionStatement","src":"9247:39:22"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"9194:1:22","nodeType":"YulIdentifier","src":"9194:1:22"},{"name":"length","nativeSrc":"9197:6:22","nodeType":"YulIdentifier","src":"9197:6:22"}],"functionName":{"name":"lt","nativeSrc":"9191:2:22","nodeType":"YulIdentifier","src":"9191:2:22"},"nativeSrc":"9191:13:22","nodeType":"YulFunctionCall","src":"9191:13:22"},"nativeSrc":"9183:113:22","nodeType":"YulForLoop","post":{"nativeSrc":"9205:19:22","nodeType":"YulBlock","src":"9205:19:22","statements":[{"nativeSrc":"9207:15:22","nodeType":"YulAssignment","src":"9207:15:22","value":{"arguments":[{"name":"i","nativeSrc":"9216:1:22","nodeType":"YulIdentifier","src":"9216:1:22"},{"kind":"number","nativeSrc":"9219:2:22","nodeType":"YulLiteral","src":"9219:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9212:3:22","nodeType":"YulIdentifier","src":"9212:3:22"},"nativeSrc":"9212:10:22","nodeType":"YulFunctionCall","src":"9212:10:22"},"variableNames":[{"name":"i","nativeSrc":"9207:1:22","nodeType":"YulIdentifier","src":"9207:1:22"}]}]},"pre":{"nativeSrc":"9187:3:22","nodeType":"YulBlock","src":"9187:3:22","statements":[]},"src":"9183:113:22"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"9316:3:22","nodeType":"YulIdentifier","src":"9316:3:22"},{"name":"length","nativeSrc":"9321:6:22","nodeType":"YulIdentifier","src":"9321:6:22"}],"functionName":{"name":"add","nativeSrc":"9312:3:22","nodeType":"YulIdentifier","src":"9312:3:22"},"nativeSrc":"9312:16:22","nodeType":"YulFunctionCall","src":"9312:16:22"},{"kind":"number","nativeSrc":"9330:1:22","nodeType":"YulLiteral","src":"9330:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"9305:6:22","nodeType":"YulIdentifier","src":"9305:6:22"},"nativeSrc":"9305:27:22","nodeType":"YulFunctionCall","src":"9305:27:22"},"nativeSrc":"9305:27:22","nodeType":"YulExpressionStatement","src":"9305:27:22"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"9092:246:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"9136:3:22","nodeType":"YulTypedName","src":"9136:3:22","type":""},{"name":"dst","nativeSrc":"9141:3:22","nodeType":"YulTypedName","src":"9141:3:22","type":""},{"name":"length","nativeSrc":"9146:6:22","nodeType":"YulTypedName","src":"9146:6:22","type":""}],"src":"9092:246:22"},{"body":{"nativeSrc":"9392:54:22","nodeType":"YulBlock","src":"9392:54:22","statements":[{"nativeSrc":"9402:38:22","nodeType":"YulAssignment","src":"9402:38:22","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"9420:5:22","nodeType":"YulIdentifier","src":"9420:5:22"},{"kind":"number","nativeSrc":"9427:2:22","nodeType":"YulLiteral","src":"9427:2:22","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"9416:3:22","nodeType":"YulIdentifier","src":"9416:3:22"},"nativeSrc":"9416:14:22","nodeType":"YulFunctionCall","src":"9416:14:22"},{"arguments":[{"kind":"number","nativeSrc":"9436:2:22","nodeType":"YulLiteral","src":"9436:2:22","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"9432:3:22","nodeType":"YulIdentifier","src":"9432:3:22"},"nativeSrc":"9432:7:22","nodeType":"YulFunctionCall","src":"9432:7:22"}],"functionName":{"name":"and","nativeSrc":"9412:3:22","nodeType":"YulIdentifier","src":"9412:3:22"},"nativeSrc":"9412:28:22","nodeType":"YulFunctionCall","src":"9412:28:22"},"variableNames":[{"name":"result","nativeSrc":"9402:6:22","nodeType":"YulIdentifier","src":"9402:6:22"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"9344:102:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9375:5:22","nodeType":"YulTypedName","src":"9375:5:22","type":""}],"returnVariables":[{"name":"result","nativeSrc":"9385:6:22","nodeType":"YulTypedName","src":"9385:6:22","type":""}],"src":"9344:102:22"},{"body":{"nativeSrc":"9544:285:22","nodeType":"YulBlock","src":"9544:285:22","statements":[{"nativeSrc":"9554:53:22","nodeType":"YulVariableDeclaration","src":"9554:53:22","value":{"arguments":[{"name":"value","nativeSrc":"9601:5:22","nodeType":"YulIdentifier","src":"9601:5:22"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"9568:32:22","nodeType":"YulIdentifier","src":"9568:32:22"},"nativeSrc":"9568:39:22","nodeType":"YulFunctionCall","src":"9568:39:22"},"variables":[{"name":"length","nativeSrc":"9558:6:22","nodeType":"YulTypedName","src":"9558:6:22","type":""}]},{"nativeSrc":"9616:78:22","nodeType":"YulAssignment","src":"9616:78:22","value":{"arguments":[{"name":"pos","nativeSrc":"9682:3:22","nodeType":"YulIdentifier","src":"9682:3:22"},{"name":"length","nativeSrc":"9687:6:22","nodeType":"YulIdentifier","src":"9687:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"9623:58:22","nodeType":"YulIdentifier","src":"9623:58:22"},"nativeSrc":"9623:71:22","nodeType":"YulFunctionCall","src":"9623:71:22"},"variableNames":[{"name":"pos","nativeSrc":"9616:3:22","nodeType":"YulIdentifier","src":"9616:3:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"9742:5:22","nodeType":"YulIdentifier","src":"9742:5:22"},{"kind":"number","nativeSrc":"9749:4:22","nodeType":"YulLiteral","src":"9749:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9738:3:22","nodeType":"YulIdentifier","src":"9738:3:22"},"nativeSrc":"9738:16:22","nodeType":"YulFunctionCall","src":"9738:16:22"},{"name":"pos","nativeSrc":"9756:3:22","nodeType":"YulIdentifier","src":"9756:3:22"},{"name":"length","nativeSrc":"9761:6:22","nodeType":"YulIdentifier","src":"9761:6:22"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"9703:34:22","nodeType":"YulIdentifier","src":"9703:34:22"},"nativeSrc":"9703:65:22","nodeType":"YulFunctionCall","src":"9703:65:22"},"nativeSrc":"9703:65:22","nodeType":"YulExpressionStatement","src":"9703:65:22"},{"nativeSrc":"9777:46:22","nodeType":"YulAssignment","src":"9777:46:22","value":{"arguments":[{"name":"pos","nativeSrc":"9788:3:22","nodeType":"YulIdentifier","src":"9788:3:22"},{"arguments":[{"name":"length","nativeSrc":"9815:6:22","nodeType":"YulIdentifier","src":"9815:6:22"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"9793:21:22","nodeType":"YulIdentifier","src":"9793:21:22"},"nativeSrc":"9793:29:22","nodeType":"YulFunctionCall","src":"9793:29:22"}],"functionName":{"name":"add","nativeSrc":"9784:3:22","nodeType":"YulIdentifier","src":"9784:3:22"},"nativeSrc":"9784:39:22","nodeType":"YulFunctionCall","src":"9784:39:22"},"variableNames":[{"name":"end","nativeSrc":"9777:3:22","nodeType":"YulIdentifier","src":"9777:3:22"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"9452:377:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9525:5:22","nodeType":"YulTypedName","src":"9525:5:22","type":""},{"name":"pos","nativeSrc":"9532:3:22","nodeType":"YulTypedName","src":"9532:3:22","type":""}],"returnVariables":[{"name":"end","nativeSrc":"9540:3:22","nodeType":"YulTypedName","src":"9540:3:22","type":""}],"src":"9452:377:22"},{"body":{"nativeSrc":"9953:195:22","nodeType":"YulBlock","src":"9953:195:22","statements":[{"nativeSrc":"9963:26:22","nodeType":"YulAssignment","src":"9963:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"9975:9:22","nodeType":"YulIdentifier","src":"9975:9:22"},{"kind":"number","nativeSrc":"9986:2:22","nodeType":"YulLiteral","src":"9986:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9971:3:22","nodeType":"YulIdentifier","src":"9971:3:22"},"nativeSrc":"9971:18:22","nodeType":"YulFunctionCall","src":"9971:18:22"},"variableNames":[{"name":"tail","nativeSrc":"9963:4:22","nodeType":"YulIdentifier","src":"9963:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10010:9:22","nodeType":"YulIdentifier","src":"10010:9:22"},{"kind":"number","nativeSrc":"10021:1:22","nodeType":"YulLiteral","src":"10021:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10006:3:22","nodeType":"YulIdentifier","src":"10006:3:22"},"nativeSrc":"10006:17:22","nodeType":"YulFunctionCall","src":"10006:17:22"},{"arguments":[{"name":"tail","nativeSrc":"10029:4:22","nodeType":"YulIdentifier","src":"10029:4:22"},{"name":"headStart","nativeSrc":"10035:9:22","nodeType":"YulIdentifier","src":"10035:9:22"}],"functionName":{"name":"sub","nativeSrc":"10025:3:22","nodeType":"YulIdentifier","src":"10025:3:22"},"nativeSrc":"10025:20:22","nodeType":"YulFunctionCall","src":"10025:20:22"}],"functionName":{"name":"mstore","nativeSrc":"9999:6:22","nodeType":"YulIdentifier","src":"9999:6:22"},"nativeSrc":"9999:47:22","nodeType":"YulFunctionCall","src":"9999:47:22"},"nativeSrc":"9999:47:22","nodeType":"YulExpressionStatement","src":"9999:47:22"},{"nativeSrc":"10055:86:22","nodeType":"YulAssignment","src":"10055:86:22","value":{"arguments":[{"name":"value0","nativeSrc":"10127:6:22","nodeType":"YulIdentifier","src":"10127:6:22"},{"name":"tail","nativeSrc":"10136:4:22","nodeType":"YulIdentifier","src":"10136:4:22"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"10063:63:22","nodeType":"YulIdentifier","src":"10063:63:22"},"nativeSrc":"10063:78:22","nodeType":"YulFunctionCall","src":"10063:78:22"},"variableNames":[{"name":"tail","nativeSrc":"10055:4:22","nodeType":"YulIdentifier","src":"10055:4:22"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"9835:313:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9925:9:22","nodeType":"YulTypedName","src":"9925:9:22","type":""},{"name":"value0","nativeSrc":"9937:6:22","nodeType":"YulTypedName","src":"9937:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9948:4:22","nodeType":"YulTypedName","src":"9948:4:22","type":""}],"src":"9835:313:22"},{"body":{"nativeSrc":"10212:40:22","nodeType":"YulBlock","src":"10212:40:22","statements":[{"nativeSrc":"10223:22:22","nodeType":"YulAssignment","src":"10223:22:22","value":{"arguments":[{"name":"value","nativeSrc":"10239:5:22","nodeType":"YulIdentifier","src":"10239:5:22"}],"functionName":{"name":"mload","nativeSrc":"10233:5:22","nodeType":"YulIdentifier","src":"10233:5:22"},"nativeSrc":"10233:12:22","nodeType":"YulFunctionCall","src":"10233:12:22"},"variableNames":[{"name":"length","nativeSrc":"10223:6:22","nodeType":"YulIdentifier","src":"10223:6:22"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"10154:98:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10195:5:22","nodeType":"YulTypedName","src":"10195:5:22","type":""}],"returnVariables":[{"name":"length","nativeSrc":"10205:6:22","nodeType":"YulTypedName","src":"10205:6:22","type":""}],"src":"10154:98:22"},{"body":{"nativeSrc":"10314:60:22","nodeType":"YulBlock","src":"10314:60:22","statements":[{"nativeSrc":"10324:11:22","nodeType":"YulAssignment","src":"10324:11:22","value":{"name":"ptr","nativeSrc":"10332:3:22","nodeType":"YulIdentifier","src":"10332:3:22"},"variableNames":[{"name":"data","nativeSrc":"10324:4:22","nodeType":"YulIdentifier","src":"10324:4:22"}]},{"nativeSrc":"10345:22:22","nodeType":"YulAssignment","src":"10345:22:22","value":{"arguments":[{"name":"ptr","nativeSrc":"10357:3:22","nodeType":"YulIdentifier","src":"10357:3:22"},{"kind":"number","nativeSrc":"10362:4:22","nodeType":"YulLiteral","src":"10362:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10353:3:22","nodeType":"YulIdentifier","src":"10353:3:22"},"nativeSrc":"10353:14:22","nodeType":"YulFunctionCall","src":"10353:14:22"},"variableNames":[{"name":"data","nativeSrc":"10345:4:22","nodeType":"YulIdentifier","src":"10345:4:22"}]}]},"name":"array_dataslot_t_bytes_memory_ptr","nativeSrc":"10258:116:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"10301:3:22","nodeType":"YulTypedName","src":"10301:3:22","type":""}],"returnVariables":[{"name":"data","nativeSrc":"10309:4:22","nodeType":"YulTypedName","src":"10309:4:22","type":""}],"src":"10258:116:22"},{"body":{"nativeSrc":"10435:99:22","nodeType":"YulBlock","src":"10435:99:22","statements":[{"nativeSrc":"10446:42:22","nodeType":"YulVariableDeclaration","src":"10446:42:22","value":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"10483:3:22","nodeType":"YulIdentifier","src":"10483:3:22"}],"functionName":{"name":"mload","nativeSrc":"10477:5:22","nodeType":"YulIdentifier","src":"10477:5:22"},"nativeSrc":"10477:10:22","nodeType":"YulFunctionCall","src":"10477:10:22"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"10459:17:22","nodeType":"YulIdentifier","src":"10459:17:22"},"nativeSrc":"10459:29:22","nodeType":"YulFunctionCall","src":"10459:29:22"},"variables":[{"name":"value","nativeSrc":"10450:5:22","nodeType":"YulTypedName","src":"10450:5:22","type":""}]},{"nativeSrc":"10498:29:22","nodeType":"YulAssignment","src":"10498:29:22","value":{"name":"value","nativeSrc":"10522:5:22","nodeType":"YulIdentifier","src":"10522:5:22"},"variableNames":[{"name":"returnValue","nativeSrc":"10498:11:22","nodeType":"YulIdentifier","src":"10498:11:22"}]}]},"name":"read_from_memoryt_bytes32","nativeSrc":"10380:154:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"10415:3:22","nodeType":"YulTypedName","src":"10415:3:22","type":""}],"returnVariables":[{"name":"returnValue","nativeSrc":"10423:11:22","nodeType":"YulTypedName","src":"10423:11:22","type":""}],"src":"10380:154:22"},{"body":{"nativeSrc":"10630:504:22","nodeType":"YulBlock","src":"10630:504:22","statements":[{"nativeSrc":"10641:52:22","nodeType":"YulVariableDeclaration","src":"10641:52:22","value":{"arguments":[{"name":"array","nativeSrc":"10687:5:22","nodeType":"YulIdentifier","src":"10687:5:22"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"10655:31:22","nodeType":"YulIdentifier","src":"10655:31:22"},"nativeSrc":"10655:38:22","nodeType":"YulFunctionCall","src":"10655:38:22"},"variables":[{"name":"length","nativeSrc":"10645:6:22","nodeType":"YulTypedName","src":"10645:6:22","type":""}]},{"nativeSrc":"10702:21:22","nodeType":"YulVariableDeclaration","src":"10702:21:22","value":{"name":"array","nativeSrc":"10718:5:22","nodeType":"YulIdentifier","src":"10718:5:22"},"variables":[{"name":"dataArea","nativeSrc":"10706:8:22","nodeType":"YulTypedName","src":"10706:8:22","type":""}]},{"nativeSrc":"10733:52:22","nodeType":"YulAssignment","src":"10733:52:22","value":{"arguments":[{"name":"array","nativeSrc":"10779:5:22","nodeType":"YulIdentifier","src":"10779:5:22"}],"functionName":{"name":"array_dataslot_t_bytes_memory_ptr","nativeSrc":"10745:33:22","nodeType":"YulIdentifier","src":"10745:33:22"},"nativeSrc":"10745:40:22","nodeType":"YulFunctionCall","src":"10745:40:22"},"variableNames":[{"name":"dataArea","nativeSrc":"10733:8:22","nodeType":"YulIdentifier","src":"10733:8:22"}]},{"nativeSrc":"10795:44:22","nodeType":"YulAssignment","src":"10795:44:22","value":{"arguments":[{"name":"dataArea","nativeSrc":"10830:8:22","nodeType":"YulIdentifier","src":"10830:8:22"}],"functionName":{"name":"read_from_memoryt_bytes32","nativeSrc":"10804:25:22","nodeType":"YulIdentifier","src":"10804:25:22"},"nativeSrc":"10804:35:22","nodeType":"YulFunctionCall","src":"10804:35:22"},"variableNames":[{"name":"value","nativeSrc":"10795:5:22","nodeType":"YulIdentifier","src":"10795:5:22"}]},{"body":{"nativeSrc":"10867:260:22","nodeType":"YulBlock","src":"10867:260:22","statements":[{"nativeSrc":"10881:236:22","nodeType":"YulAssignment","src":"10881:236:22","value":{"arguments":[{"name":"value","nativeSrc":"10911:5:22","nodeType":"YulIdentifier","src":"10911:5:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"10978:1:22","nodeType":"YulLiteral","src":"10978:1:22","type":"","value":"8"},{"arguments":[{"kind":"number","nativeSrc":"10985:2:22","nodeType":"YulLiteral","src":"10985:2:22","type":"","value":"32"},{"name":"length","nativeSrc":"10989:6:22","nodeType":"YulIdentifier","src":"10989:6:22"}],"functionName":{"name":"sub","nativeSrc":"10981:3:22","nodeType":"YulIdentifier","src":"10981:3:22"},"nativeSrc":"10981:15:22","nodeType":"YulFunctionCall","src":"10981:15:22"}],"functionName":{"name":"mul","nativeSrc":"10974:3:22","nodeType":"YulIdentifier","src":"10974:3:22"},"nativeSrc":"10974:23:22","nodeType":"YulFunctionCall","src":"10974:23:22"},{"kind":"number","nativeSrc":"11019:66:22","nodeType":"YulLiteral","src":"11019:66:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"10934:18:22","nodeType":"YulIdentifier","src":"10934:18:22"},"nativeSrc":"10934:169:22","nodeType":"YulFunctionCall","src":"10934:169:22"}],"functionName":{"name":"and","nativeSrc":"10890:3:22","nodeType":"YulIdentifier","src":"10890:3:22"},"nativeSrc":"10890:227:22","nodeType":"YulFunctionCall","src":"10890:227:22"},"variableNames":[{"name":"value","nativeSrc":"10881:5:22","nodeType":"YulIdentifier","src":"10881:5:22"}]}]},"condition":{"arguments":[{"name":"length","nativeSrc":"10855:6:22","nodeType":"YulIdentifier","src":"10855:6:22"},{"kind":"number","nativeSrc":"10863:2:22","nodeType":"YulLiteral","src":"10863:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"10852:2:22","nodeType":"YulIdentifier","src":"10852:2:22"},"nativeSrc":"10852:14:22","nodeType":"YulFunctionCall","src":"10852:14:22"},"nativeSrc":"10849:278:22","nodeType":"YulIf","src":"10849:278:22"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nativeSrc":"10540:594:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"10614:5:22","nodeType":"YulTypedName","src":"10614:5:22","type":""}],"returnVariables":[{"name":"value","nativeSrc":"10624:5:22","nodeType":"YulTypedName","src":"10624:5:22","type":""}],"src":"10540:594:22"},{"body":{"nativeSrc":"11246:71:22","nodeType":"YulBlock","src":"11246:71:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"11268:6:22","nodeType":"YulIdentifier","src":"11268:6:22"},{"kind":"number","nativeSrc":"11276:1:22","nodeType":"YulLiteral","src":"11276:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11264:3:22","nodeType":"YulIdentifier","src":"11264:3:22"},"nativeSrc":"11264:14:22","nodeType":"YulFunctionCall","src":"11264:14:22"},{"hexValue":"4172617261436f696e2074726164652069732064697361626c6564","kind":"string","nativeSrc":"11280:29:22","nodeType":"YulLiteral","src":"11280:29:22","type":"","value":"AraraCoin trade is disabled"}],"functionName":{"name":"mstore","nativeSrc":"11257:6:22","nodeType":"YulIdentifier","src":"11257:6:22"},"nativeSrc":"11257:53:22","nodeType":"YulFunctionCall","src":"11257:53:22"},"nativeSrc":"11257:53:22","nodeType":"YulExpressionStatement","src":"11257:53:22"}]},"name":"store_literal_in_memory_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7","nativeSrc":"11140:177:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"11238:6:22","nodeType":"YulTypedName","src":"11238:6:22","type":""}],"src":"11140:177:22"},{"body":{"nativeSrc":"11469:220:22","nodeType":"YulBlock","src":"11469:220:22","statements":[{"nativeSrc":"11479:74:22","nodeType":"YulAssignment","src":"11479:74:22","value":{"arguments":[{"name":"pos","nativeSrc":"11545:3:22","nodeType":"YulIdentifier","src":"11545:3:22"},{"kind":"number","nativeSrc":"11550:2:22","nodeType":"YulLiteral","src":"11550:2:22","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"11486:58:22","nodeType":"YulIdentifier","src":"11486:58:22"},"nativeSrc":"11486:67:22","nodeType":"YulFunctionCall","src":"11486:67:22"},"variableNames":[{"name":"pos","nativeSrc":"11479:3:22","nodeType":"YulIdentifier","src":"11479:3:22"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"11651:3:22","nodeType":"YulIdentifier","src":"11651:3:22"}],"functionName":{"name":"store_literal_in_memory_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7","nativeSrc":"11562:88:22","nodeType":"YulIdentifier","src":"11562:88:22"},"nativeSrc":"11562:93:22","nodeType":"YulFunctionCall","src":"11562:93:22"},"nativeSrc":"11562:93:22","nodeType":"YulExpressionStatement","src":"11562:93:22"},{"nativeSrc":"11664:19:22","nodeType":"YulAssignment","src":"11664:19:22","value":{"arguments":[{"name":"pos","nativeSrc":"11675:3:22","nodeType":"YulIdentifier","src":"11675:3:22"},{"kind":"number","nativeSrc":"11680:2:22","nodeType":"YulLiteral","src":"11680:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11671:3:22","nodeType":"YulIdentifier","src":"11671:3:22"},"nativeSrc":"11671:12:22","nodeType":"YulFunctionCall","src":"11671:12:22"},"variableNames":[{"name":"end","nativeSrc":"11664:3:22","nodeType":"YulIdentifier","src":"11664:3:22"}]}]},"name":"abi_encode_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7_to_t_string_memory_ptr_fromStack","nativeSrc":"11323:366:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"11457:3:22","nodeType":"YulTypedName","src":"11457:3:22","type":""}],"returnVariables":[{"name":"end","nativeSrc":"11465:3:22","nodeType":"YulTypedName","src":"11465:3:22","type":""}],"src":"11323:366:22"},{"body":{"nativeSrc":"11866:248:22","nodeType":"YulBlock","src":"11866:248:22","statements":[{"nativeSrc":"11876:26:22","nodeType":"YulAssignment","src":"11876:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"11888:9:22","nodeType":"YulIdentifier","src":"11888:9:22"},{"kind":"number","nativeSrc":"11899:2:22","nodeType":"YulLiteral","src":"11899:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11884:3:22","nodeType":"YulIdentifier","src":"11884:3:22"},"nativeSrc":"11884:18:22","nodeType":"YulFunctionCall","src":"11884:18:22"},"variableNames":[{"name":"tail","nativeSrc":"11876:4:22","nodeType":"YulIdentifier","src":"11876:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11923:9:22","nodeType":"YulIdentifier","src":"11923:9:22"},{"kind":"number","nativeSrc":"11934:1:22","nodeType":"YulLiteral","src":"11934:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11919:3:22","nodeType":"YulIdentifier","src":"11919:3:22"},"nativeSrc":"11919:17:22","nodeType":"YulFunctionCall","src":"11919:17:22"},{"arguments":[{"name":"tail","nativeSrc":"11942:4:22","nodeType":"YulIdentifier","src":"11942:4:22"},{"name":"headStart","nativeSrc":"11948:9:22","nodeType":"YulIdentifier","src":"11948:9:22"}],"functionName":{"name":"sub","nativeSrc":"11938:3:22","nodeType":"YulIdentifier","src":"11938:3:22"},"nativeSrc":"11938:20:22","nodeType":"YulFunctionCall","src":"11938:20:22"}],"functionName":{"name":"mstore","nativeSrc":"11912:6:22","nodeType":"YulIdentifier","src":"11912:6:22"},"nativeSrc":"11912:47:22","nodeType":"YulFunctionCall","src":"11912:47:22"},"nativeSrc":"11912:47:22","nodeType":"YulExpressionStatement","src":"11912:47:22"},{"nativeSrc":"11968:139:22","nodeType":"YulAssignment","src":"11968:139:22","value":{"arguments":[{"name":"tail","nativeSrc":"12102:4:22","nodeType":"YulIdentifier","src":"12102:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7_to_t_string_memory_ptr_fromStack","nativeSrc":"11976:124:22","nodeType":"YulIdentifier","src":"11976:124:22"},"nativeSrc":"11976:131:22","nodeType":"YulFunctionCall","src":"11976:131:22"},"variableNames":[{"name":"tail","nativeSrc":"11968:4:22","nodeType":"YulIdentifier","src":"11968:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"11695:419:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11846:9:22","nodeType":"YulTypedName","src":"11846:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11861:4:22","nodeType":"YulTypedName","src":"11861:4:22","type":""}],"src":"11695:419:22"},{"body":{"nativeSrc":"12164:147:22","nodeType":"YulBlock","src":"12164:147:22","statements":[{"nativeSrc":"12174:25:22","nodeType":"YulAssignment","src":"12174:25:22","value":{"arguments":[{"name":"x","nativeSrc":"12197:1:22","nodeType":"YulIdentifier","src":"12197:1:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"12179:17:22","nodeType":"YulIdentifier","src":"12179:17:22"},"nativeSrc":"12179:20:22","nodeType":"YulFunctionCall","src":"12179:20:22"},"variableNames":[{"name":"x","nativeSrc":"12174:1:22","nodeType":"YulIdentifier","src":"12174:1:22"}]},{"nativeSrc":"12208:25:22","nodeType":"YulAssignment","src":"12208:25:22","value":{"arguments":[{"name":"y","nativeSrc":"12231:1:22","nodeType":"YulIdentifier","src":"12231:1:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"12213:17:22","nodeType":"YulIdentifier","src":"12213:17:22"},"nativeSrc":"12213:20:22","nodeType":"YulFunctionCall","src":"12213:20:22"},"variableNames":[{"name":"y","nativeSrc":"12208:1:22","nodeType":"YulIdentifier","src":"12208:1:22"}]},{"nativeSrc":"12242:16:22","nodeType":"YulAssignment","src":"12242:16:22","value":{"arguments":[{"name":"x","nativeSrc":"12253:1:22","nodeType":"YulIdentifier","src":"12253:1:22"},{"name":"y","nativeSrc":"12256:1:22","nodeType":"YulIdentifier","src":"12256:1:22"}],"functionName":{"name":"add","nativeSrc":"12249:3:22","nodeType":"YulIdentifier","src":"12249:3:22"},"nativeSrc":"12249:9:22","nodeType":"YulFunctionCall","src":"12249:9:22"},"variableNames":[{"name":"sum","nativeSrc":"12242:3:22","nodeType":"YulIdentifier","src":"12242:3:22"}]},{"body":{"nativeSrc":"12282:22:22","nodeType":"YulBlock","src":"12282:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"12284:16:22","nodeType":"YulIdentifier","src":"12284:16:22"},"nativeSrc":"12284:18:22","nodeType":"YulFunctionCall","src":"12284:18:22"},"nativeSrc":"12284:18:22","nodeType":"YulExpressionStatement","src":"12284:18:22"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"12274:1:22","nodeType":"YulIdentifier","src":"12274:1:22"},{"name":"sum","nativeSrc":"12277:3:22","nodeType":"YulIdentifier","src":"12277:3:22"}],"functionName":{"name":"gt","nativeSrc":"12271:2:22","nodeType":"YulIdentifier","src":"12271:2:22"},"nativeSrc":"12271:10:22","nodeType":"YulFunctionCall","src":"12271:10:22"},"nativeSrc":"12268:36:22","nodeType":"YulIf","src":"12268:36:22"}]},"name":"checked_add_t_uint256","nativeSrc":"12120:191:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"12151:1:22","nodeType":"YulTypedName","src":"12151:1:22","type":""},{"name":"y","nativeSrc":"12154:1:22","nodeType":"YulTypedName","src":"12154:1:22","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"12160:3:22","nodeType":"YulTypedName","src":"12160:3:22","type":""}],"src":"12120:191:22"},{"body":{"nativeSrc":"12471:288:22","nodeType":"YulBlock","src":"12471:288:22","statements":[{"nativeSrc":"12481:26:22","nodeType":"YulAssignment","src":"12481:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"12493:9:22","nodeType":"YulIdentifier","src":"12493:9:22"},{"kind":"number","nativeSrc":"12504:2:22","nodeType":"YulLiteral","src":"12504:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12489:3:22","nodeType":"YulIdentifier","src":"12489:3:22"},"nativeSrc":"12489:18:22","nodeType":"YulFunctionCall","src":"12489:18:22"},"variableNames":[{"name":"tail","nativeSrc":"12481:4:22","nodeType":"YulIdentifier","src":"12481:4:22"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12561:6:22","nodeType":"YulIdentifier","src":"12561:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"12574:9:22","nodeType":"YulIdentifier","src":"12574:9:22"},{"kind":"number","nativeSrc":"12585:1:22","nodeType":"YulLiteral","src":"12585:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12570:3:22","nodeType":"YulIdentifier","src":"12570:3:22"},"nativeSrc":"12570:17:22","nodeType":"YulFunctionCall","src":"12570:17:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12517:43:22","nodeType":"YulIdentifier","src":"12517:43:22"},"nativeSrc":"12517:71:22","nodeType":"YulFunctionCall","src":"12517:71:22"},"nativeSrc":"12517:71:22","nodeType":"YulExpressionStatement","src":"12517:71:22"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"12642:6:22","nodeType":"YulIdentifier","src":"12642:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"12655:9:22","nodeType":"YulIdentifier","src":"12655:9:22"},{"kind":"number","nativeSrc":"12666:2:22","nodeType":"YulLiteral","src":"12666:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12651:3:22","nodeType":"YulIdentifier","src":"12651:3:22"},"nativeSrc":"12651:18:22","nodeType":"YulFunctionCall","src":"12651:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12598:43:22","nodeType":"YulIdentifier","src":"12598:43:22"},"nativeSrc":"12598:72:22","nodeType":"YulFunctionCall","src":"12598:72:22"},"nativeSrc":"12598:72:22","nodeType":"YulExpressionStatement","src":"12598:72:22"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"12724:6:22","nodeType":"YulIdentifier","src":"12724:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"12737:9:22","nodeType":"YulIdentifier","src":"12737:9:22"},{"kind":"number","nativeSrc":"12748:2:22","nodeType":"YulLiteral","src":"12748:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12733:3:22","nodeType":"YulIdentifier","src":"12733:3:22"},"nativeSrc":"12733:18:22","nodeType":"YulFunctionCall","src":"12733:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12680:43:22","nodeType":"YulIdentifier","src":"12680:43:22"},"nativeSrc":"12680:72:22","nodeType":"YulFunctionCall","src":"12680:72:22"},"nativeSrc":"12680:72:22","nodeType":"YulExpressionStatement","src":"12680:72:22"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"12317:442:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12427:9:22","nodeType":"YulTypedName","src":"12427:9:22","type":""},{"name":"value2","nativeSrc":"12439:6:22","nodeType":"YulTypedName","src":"12439:6:22","type":""},{"name":"value1","nativeSrc":"12447:6:22","nodeType":"YulTypedName","src":"12447:6:22","type":""},{"name":"value0","nativeSrc":"12455:6:22","nodeType":"YulTypedName","src":"12455:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12466:4:22","nodeType":"YulTypedName","src":"12466:4:22","type":""}],"src":"12317:442:22"},{"body":{"nativeSrc":"12863:124:22","nodeType":"YulBlock","src":"12863:124:22","statements":[{"nativeSrc":"12873:26:22","nodeType":"YulAssignment","src":"12873:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"12885:9:22","nodeType":"YulIdentifier","src":"12885:9:22"},{"kind":"number","nativeSrc":"12896:2:22","nodeType":"YulLiteral","src":"12896:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12881:3:22","nodeType":"YulIdentifier","src":"12881:3:22"},"nativeSrc":"12881:18:22","nodeType":"YulFunctionCall","src":"12881:18:22"},"variableNames":[{"name":"tail","nativeSrc":"12873:4:22","nodeType":"YulIdentifier","src":"12873:4:22"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12953:6:22","nodeType":"YulIdentifier","src":"12953:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"12966:9:22","nodeType":"YulIdentifier","src":"12966:9:22"},{"kind":"number","nativeSrc":"12977:1:22","nodeType":"YulLiteral","src":"12977:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12962:3:22","nodeType":"YulIdentifier","src":"12962:3:22"},"nativeSrc":"12962:17:22","nodeType":"YulFunctionCall","src":"12962:17:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12909:43:22","nodeType":"YulIdentifier","src":"12909:43:22"},"nativeSrc":"12909:71:22","nodeType":"YulFunctionCall","src":"12909:71:22"},"nativeSrc":"12909:71:22","nodeType":"YulExpressionStatement","src":"12909:71:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"12765:222:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12835:9:22","nodeType":"YulTypedName","src":"12835:9:22","type":""},{"name":"value0","nativeSrc":"12847:6:22","nodeType":"YulTypedName","src":"12847:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12858:4:22","nodeType":"YulTypedName","src":"12858:4:22","type":""}],"src":"12765:222:22"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n    function store_literal_in_memory_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7(memPtr) {\n\n        mstore(add(memPtr, 0), \"AraraCoin trade is disabled\")\n\n    }\n\n    function abi_encode_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":22,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6101606040527370997970c51812dc3a010c7d01b50e0d17dc79c8600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550733c44cdddb6a900fa2b585dd299e03d12fa4293bc600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507390f79bf6eb2c4f870365e785982e1f101e93b906600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507315d34aaf54267db7d7c367839aaf71a00a2c6a65600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550739965507d1a55bcc2695c58ba16fb37d819b0a4dc600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073976ea74026e726554db657fa54763abd0c3a0aa9600e60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156200021057600080fd5b506040516200456a3803806200456a833981810160405281019062000236919062000e92565b816040518060400160405280600981526020017f4172617261436f696e0000000000000000000000000000000000000000000000815250806040518060400160405280600181526020017f31000000000000000000000000000000000000000000000000000000000000008152506040518060400160405280600981526020017f4172617261436f696e00000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4152410000000000000000000000000000000000000000000000000000000000815250816003908162000321919062001153565b50806004908162000333919062001153565b5050506200034c600583620007ba60201b90919060201c565b61012081815250506200036a600682620007ba60201b90919060201c565b6101408181525050818051906020012060e08181525050808051906020012061010081815250504660a08181525050620003a96200081260201b60201c565b608081815250503073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1681525050505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200045c5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200045391906200124b565b60405180910390fd5b6200046d816200086f60201b60201c565b5080600f60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001601060008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001601060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506200057e336c01431e0fae6d7217caa00000006200093560201b60201c565b620005dc33600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16606460056c01431e0fae6d7217caa0000000620005c4919062001297565b620005d0919062001311565b620009c260201b60201c565b6200063a33600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166064600a6c01431e0fae6d7217caa000000062000622919062001297565b6200062e919062001311565b620009c260201b60201c565b6200069833600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16606460146c01431e0fae6d7217caa000000062000680919062001297565b6200068c919062001311565b620009c260201b60201c565b620006f633600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16606460196c01431e0fae6d7217caa0000000620006de919062001297565b620006ea919062001311565b620009c260201b60201c565b6200075433600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16606460146c01431e0fae6d7217caa00000006200073c919062001297565b62000748919062001311565b620009c260201b60201c565b620007b233600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16606460146c01431e0fae6d7217caa00000006200079a919062001297565b620007a6919062001311565b620009c260201b60201c565b50506200162e565b6000602083511015620007e057620007d88362000ac460201b60201c565b90506200080c565b82620007f28362000b3160201b60201c565b600001908162000803919062001153565b5060ff60001b90505b92915050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60e0516101005146306040516020016200085495949392919062001375565b60405160208183030381529060405280519060200120905090565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620009aa5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401620009a191906200124b565b60405180910390fd5b620009be6000838362000b3b60201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160362000a375760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040162000a2e91906200124b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000aac5760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040162000aa391906200124b565b60405180910390fd5b62000abf83838362000b3b60201b60201c565b505050565b600080829050601f8151111562000b1457826040517f305a27a900000000000000000000000000000000000000000000000000000000815260040162000b0b919062001461565b60405180910390fd5b80518162000b2290620014b7565b60001c1760001b915050919050565b6000819050919050565b600f60149054906101000a900460ff1662000be057601060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1662000bdf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000bd69062001577565b60405180910390fd5b5b62000bf383838362000bf860201b60201c565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160362000c4e57806002600082825462000c41919062001599565b9250508190555062000d24565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101562000cdd578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040162000cd493929190620015d4565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000d6f578060026000828254039250508190555062000dbc565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000e1b919062001611565b60405180910390a3505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000e5a8262000e2d565b9050919050565b62000e6c8162000e4d565b811462000e7857600080fd5b50565b60008151905062000e8c8162000e61565b92915050565b6000806040838503121562000eac5762000eab62000e28565b5b600062000ebc8582860162000e7b565b925050602062000ecf8582860162000e7b565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168062000f5b57607f821691505b60208210810362000f715762000f7062000f13565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830262000fdb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000f9c565b62000fe7868362000f9c565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620010346200102e620010288462000fff565b62001009565b62000fff565b9050919050565b6000819050919050565b620010508362001013565b620010686200105f826200103b565b84845462000fa9565b825550505050565b600090565b6200107f62001070565b6200108c81848462001045565b505050565b5b81811015620010b457620010a860008262001075565b60018101905062001092565b5050565b601f8211156200110357620010cd8162000f77565b620010d88462000f8c565b81016020851015620010e8578190505b62001100620010f78562000f8c565b83018262001091565b50505b505050565b600082821c905092915050565b6000620011286000198460080262001108565b1980831691505092915050565b600062001143838362001115565b9150826002028217905092915050565b6200115e8262000ed9565b67ffffffffffffffff8111156200117a576200117962000ee4565b5b62001186825462000f42565b62001193828285620010b8565b600060209050601f831160018114620011cb5760008415620011b6578287015190505b620011c2858262001135565b86555062001232565b601f198416620011db8662000f77565b60005b828110156200120557848901518255600182019150602085019450602081019050620011de565b8683101562001225578489015162001221601f89168262001115565b8355505b6001600288020188555050505b505050505050565b620012458162000e4d565b82525050565b60006020820190506200126260008301846200123a565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620012a48262000fff565b9150620012b18362000fff565b9250828202620012c18162000fff565b91508282048414831517620012db57620012da62001268565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006200131e8262000fff565b91506200132b8362000fff565b9250826200133e576200133d620012e2565b5b828204905092915050565b6000819050919050565b6200135e8162001349565b82525050565b6200136f8162000fff565b82525050565b600060a0820190506200138c600083018862001353565b6200139b602083018762001353565b620013aa604083018662001353565b620013b9606083018562001364565b620013c860808301846200123a565b9695505050505050565b600082825260208201905092915050565b60005b8381101562001403578082015181840152602081019050620013e6565b60008484015250505050565b6000601f19601f8301169050919050565b60006200142d8262000ed9565b620014398185620013d2565b93506200144b818560208601620013e3565b62001456816200140f565b840191505092915050565b600060208201905081810360008301526200147d818462001420565b905092915050565b600081519050919050565b6000819050602082019050919050565b6000620014ae825162001349565b80915050919050565b6000620014c48262001485565b82620014d08462001490565b9050620014dd81620014a0565b9250602082101562001520576200151b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8360200360080262000f9c565b831692505b5050919050565b7f4172617261436f696e2074726164652069732064697361626c65640000000000600082015250565b60006200155f601b83620013d2565b91506200156c8262001527565b602082019050919050565b60006020820190508181036000830152620015928162001550565b9050919050565b6000620015a68262000fff565b9150620015b38362000fff565b9250828201905080821115620015ce57620015cd62001268565b5b92915050565b6000606082019050620015eb60008301866200123a565b620015fa602083018562001364565b62001609604083018462001364565b949350505050565b600060208201905062001628600083018462001364565b92915050565b60805160a05160c05160e051610100516101205161014051612ee1620016896000396000611635015260006115fa015260006119d6015260006119b5015260006113a8015260006113fe015260006114270152612ee16000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80637ecebe00116101045780639b75679c116100a2578063d505accf11610071578063d505accf1461051a578063dd62ed3e14610536578063f2fde38b14610566578063fca6172f14610582576101cf565b80639b75679c1461047e578063a9059cbb146104ae578063bbaa49da146104de578063c519099d146104fc576101cf565b80638a8c523c116100de5780638a8c523c1461041a5780638ac27f5f146104245780638da5cb5b1461044257806395d89b4114610460576101cf565b80637ecebe00146103a85780637edd9e5e146103d857806384b0196e146103f6576101cf565b806344447b4e116101715780635a7adf7f1161014b5780635a7adf7f146103205780635e57966d1461033e57806370a082311461036e578063715018a61461039e576101cf565b806344447b4e146102ca578063488d4a51146102e65780634ada218b14610302576101cf565b806318160ddd116101ad57806318160ddd1461024057806323b872dd1461025e578063313ce5671461028e5780633644e515146102ac576101cf565b806306fdde03146101d4578063095ea7b3146101f257806312280ba814610222575b600080fd5b6101dc6105a0565b6040516101e991906120e8565b60405180910390f35b61020c600480360381019061020791906121b2565b610632565b604051610219919061220d565b60405180910390f35b61022a610655565b6040516102379190612287565b60405180910390f35b61024861067b565b60405161025591906122b1565b60405180910390f35b610278600480360381019061027391906122cc565b610685565b604051610285919061220d565b60405180910390f35b6102966106b4565b6040516102a3919061233b565b60405180910390f35b6102b46106bd565b6040516102c1919061236f565b60405180910390f35b6102e460048036038101906102df9190612445565b6106cc565b005b61030060048036038101906102fb91906124c6565b610833565b005b61030a6108df565b604051610317919061220d565b60405180910390f35b6103286108f2565b6040516103359190612502565b60405180910390f35b610358600480360381019061035391906124c6565b610918565b60405161036591906120e8565b60405180910390f35b610388600480360381019061038391906124c6565b610c1d565b60405161039591906122b1565b60405180910390f35b6103a6610c65565b005b6103c260048036038101906103bd91906124c6565b610c79565b6040516103cf91906122b1565b60405180910390f35b6103e0610c8b565b6040516103ed9190612502565b60405180910390f35b6103fe610cb1565b6040516104119796959493929190612616565b60405180910390f35b610422610d5b565b005b61042c610dfc565b6040516104399190612502565b60405180910390f35b61044a610e22565b6040516104579190612502565b60405180910390f35b610468610e4c565b60405161047591906120e8565b60405180910390f35b610498600480360381019061049391906127ca565b610ede565b6040516104a591906120e8565b60405180910390f35b6104c860048036038101906104c391906121b2565b610f18565b6040516104d5919061220d565b60405180910390f35b6104e6610f3b565b6040516104f39190612502565b60405180910390f35b610504610f61565b6040516105119190612502565b60405180910390f35b610534600480360381019061052f919061287e565b610f87565b005b610550600480360381019061054b9190612920565b6110cf565b60405161055d91906122b1565b60405180910390f35b610580600480360381019061057b91906124c6565b611156565b005b61058a6111dc565b6040516105979190612502565b60405180910390f35b6060600380546105af9061298f565b80601f01602080910402602001604051908101604052809291908181526020018280546105db9061298f565b80156106285780601f106105fd57610100808354040283529160200191610628565b820191906000526020600020905b81548152906001019060200180831161060b57829003601f168201915b5050505050905090565b60008061063d611202565b905061064a81858561120a565b600191505092915050565b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600254905090565b600080610690611202565b905061069d85828561121c565b6106a88585856112b0565b60019150509392505050565b60006012905090565b60006106c76113a4565b905090565b6106d461145b565b600f60149054906101000a900460ff1615610724576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071b90612a0c565b60405180910390fd5b81819050848490501461076c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076390612a78565b60405180910390fd5b60005b8484905081101561082c5782828281811061078d5761078c612a98565b5b90506020020160208101906107a29190612af3565b601060008787858181106107b9576107b8612a98565b5b90506020020160208101906107ce91906124c6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550808060010191505061076f565b5050505050565b61083b61145b565b6000600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600f60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ed910c9481701ba32afe0c247572aaece27072f230c8ec769bf245fc0b38de681836040516108d3929190612b20565b60405180910390a15050565b600f60149054906101000a900460ff1681565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060008273ffffffffffffffffffffffffffffffffffffffff1660001b905060006040518060400160405280601081526020017f303132333435363738396162636465660000000000000000000000000000000081525090506000602a67ffffffffffffffff81111561098f5761098e61269f565b5b6040519080825280601f01601f1916602001820160405280156109c15781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106109f9576109f8612a98565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610a5d57610a5c612a98565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060005b6014811015610c115782600485600c84610aa99190612b78565b60208110610aba57610ab9612a98565b5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c60f81c60ff1681518110610af957610af8612a98565b5b602001015160f81c60f81b82600283610b129190612bac565b6002610b1e9190612b78565b81518110610b2f57610b2e612a98565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535082600f60f81b85600c84610b729190612b78565b60208110610b8357610b82612a98565b5b1a60f81b1660f81c60ff1681518110610b9f57610b9e612a98565b5b602001015160f81c60f81b82600283610bb89190612bac565b6003610bc49190612b78565b81518110610bd557610bd4612a98565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050610a8f565b50809350505050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610c6d61145b565b610c7760006114e2565b565b6000610c84826115a8565b9050919050565b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060608060008060006060610cc56115f1565b610ccd61162c565b46306000801b600067ffffffffffffffff811115610cee57610ced61269f565b5b604051908082528060200260200182016040528015610d1c5781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b610d6361145b565b600f60149054906101000a900460ff1615610db3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610daa90612c60565b60405180910390fd5b6001600f60146101000a81548160ff0219169083151502179055507f799663458a5ef2936f7fa0c99b3336c69c25890f82974f04e811e5bb359186c760405160405180910390a1565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610e5b9061298f565b80601f0160208091040260200160405190810160405280929190818152602001828054610e879061298f565b8015610ed45780601f10610ea957610100808354040283529160200191610ed4565b820191906000526020600020905b815481529060010190602001808311610eb757829003601f168201915b5050505050905090565b60606000610eeb84610918565b90508083604051602001610f00929190612cbc565b60405160208183030381529060405291505092915050565b600080610f23611202565b9050610f308185856112b0565b600191505092915050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b83421115610fcc57836040517f62791302000000000000000000000000000000000000000000000000000000008152600401610fc391906122b1565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610ffb8c611667565b8960405160200161101196959493929190612ce0565b6040516020818303038152906040528051906020012090506000611034826116be565b90506000611044828787876116d8565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146110b857808a6040517f4b800e460000000000000000000000000000000000000000000000000000000081526004016110af929190612b20565b60405180910390fd5b6110c38a8a8a61120a565b50505050505050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61115e61145b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036111d05760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016111c79190612502565b60405180910390fd5b6111d9816114e2565b50565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b6112178383836001611708565b505050565b600061122884846110cf565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146112aa578181101561129a578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161129193929190612d41565b60405180910390fd5b6112a984848484036000611708565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113225760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016113199190612502565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113945760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161138b9190612502565b60405180910390fd5b61139f8383836118df565b505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614801561142057507f000000000000000000000000000000000000000000000000000000000000000046145b1561144d577f00000000000000000000000000000000000000000000000000000000000000009050611458565b611455611990565b90505b90565b611463611202565b73ffffffffffffffffffffffffffffffffffffffff16611481610e22565b73ffffffffffffffffffffffffffffffffffffffff16146114e0576114a4611202565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016114d79190612502565b60405180910390fd5b565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606061162760057f0000000000000000000000000000000000000000000000000000000000000000611a2690919063ffffffff16565b905090565b606061166260067f0000000000000000000000000000000000000000000000000000000000000000611a2690919063ffffffff16565b905090565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050559050919050565b60006116d16116cb6113a4565b83611ad6565b9050919050565b6000806000806116ea88888888611b17565b9250925092506116fa8282611c0b565b829350505050949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361177a5760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016117719190612502565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036117ec5760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016117e39190612502565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080156118d9578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516118d091906122b1565b60405180910390a35b50505050565b600f60149054906101000a900460ff1661198057601060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661197f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161197690612dc4565b60405180910390fd5b5b61198b838383611d6f565b505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000004630604051602001611a0b959493929190612de4565b60405160208183030381529060405280519060200120905090565b606060ff60001b8314611a4357611a3c83611f94565b9050611ad0565b818054611a4f9061298f565b80601f0160208091040260200160405190810160405280929190818152602001828054611a7b9061298f565b8015611ac85780601f10611a9d57610100808354040283529160200191611ac8565b820191906000526020600020905b815481529060010190602001808311611aab57829003601f168201915b505050505090505b92915050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c1115611b57576000600385925092509250611c01565b600060018888888860405160008152602001604052604051611b7c9493929190612e37565b6020604051602081039080840390855afa158015611b9e573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611bf257600060016000801b93509350935050611c01565b8060008060001b935093509350505b9450945094915050565b60006003811115611c1f57611c1e612e7c565b5b826003811115611c3257611c31612e7c565b5b0315611d6b5760016003811115611c4c57611c4b612e7c565b5b826003811115611c5f57611c5e612e7c565b5b03611c96576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026003811115611caa57611ca9612e7c565b5b826003811115611cbd57611cbc612e7c565b5b03611d02578060001c6040517ffce698f7000000000000000000000000000000000000000000000000000000008152600401611cf991906122b1565b60405180910390fd5b600380811115611d1557611d14612e7c565b5b826003811115611d2857611d27612e7c565b5b03611d6a57806040517fd78bce0c000000000000000000000000000000000000000000000000000000008152600401611d61919061236f565b60405180910390fd5b5b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611dc1578060026000828254611db59190612b78565b92505081905550611e94565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611e4d578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611e4493929190612d41565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611edd5780600260008282540392505081905550611f2a565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611f8791906122b1565b60405180910390a3505050565b60606000611fa183612008565b90506000602067ffffffffffffffff811115611fc057611fbf61269f565b5b6040519080825280601f01601f191660200182016040528015611ff25781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b60008060ff8360001c169050601f81111561204f576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612092578082015181840152602081019050612077565b60008484015250505050565b6000601f19601f8301169050919050565b60006120ba82612058565b6120c48185612063565b93506120d4818560208601612074565b6120dd8161209e565b840191505092915050565b6000602082019050818103600083015261210281846120af565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006121498261211e565b9050919050565b6121598161213e565b811461216457600080fd5b50565b60008135905061217681612150565b92915050565b6000819050919050565b61218f8161217c565b811461219a57600080fd5b50565b6000813590506121ac81612186565b92915050565b600080604083850312156121c9576121c8612114565b5b60006121d785828601612167565b92505060206121e88582860161219d565b9150509250929050565b60008115159050919050565b612207816121f2565b82525050565b600060208201905061222260008301846121fe565b92915050565b6000819050919050565b600061224d6122486122438461211e565b612228565b61211e565b9050919050565b600061225f82612232565b9050919050565b600061227182612254565b9050919050565b61228181612266565b82525050565b600060208201905061229c6000830184612278565b92915050565b6122ab8161217c565b82525050565b60006020820190506122c660008301846122a2565b92915050565b6000806000606084860312156122e5576122e4612114565b5b60006122f386828701612167565b935050602061230486828701612167565b92505060406123158682870161219d565b9150509250925092565b600060ff82169050919050565b6123358161231f565b82525050565b6000602082019050612350600083018461232c565b92915050565b6000819050919050565b61236981612356565b82525050565b60006020820190506123846000830184612360565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126123af576123ae61238a565b5b8235905067ffffffffffffffff8111156123cc576123cb61238f565b5b6020830191508360208202830111156123e8576123e7612394565b5b9250929050565b60008083601f8401126124055761240461238a565b5b8235905067ffffffffffffffff8111156124225761242161238f565b5b60208301915083602082028301111561243e5761243d612394565b5b9250929050565b6000806000806040858703121561245f5761245e612114565b5b600085013567ffffffffffffffff81111561247d5761247c612119565b5b61248987828801612399565b9450945050602085013567ffffffffffffffff8111156124ac576124ab612119565b5b6124b8878288016123ef565b925092505092959194509250565b6000602082840312156124dc576124db612114565b5b60006124ea84828501612167565b91505092915050565b6124fc8161213e565b82525050565b600060208201905061251760008301846124f3565b92915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6125528161251d565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61258d8161217c565b82525050565b600061259f8383612584565b60208301905092915050565b6000602082019050919050565b60006125c382612558565b6125cd8185612563565b93506125d883612574565b8060005b838110156126095781516125f08882612593565b97506125fb836125ab565b9250506001810190506125dc565b5085935050505092915050565b600060e08201905061262b600083018a612549565b818103602083015261263d81896120af565b9050818103604083015261265181886120af565b905061266060608301876122a2565b61266d60808301866124f3565b61267a60a0830185612360565b81810360c083015261268c81846125b8565b905098975050505050505050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6126d78261209e565b810181811067ffffffffffffffff821117156126f6576126f561269f565b5b80604052505050565b600061270961210a565b905061271582826126ce565b919050565b600067ffffffffffffffff8211156127355761273461269f565b5b61273e8261209e565b9050602081019050919050565b82818337600083830152505050565b600061276d6127688461271a565b6126ff565b9050828152602081018484840111156127895761278861269a565b5b61279484828561274b565b509392505050565b600082601f8301126127b1576127b061238a565b5b81356127c184826020860161275a565b91505092915050565b600080604083850312156127e1576127e0612114565b5b60006127ef85828601612167565b925050602083013567ffffffffffffffff8111156128105761280f612119565b5b61281c8582860161279c565b9150509250929050565b61282f8161231f565b811461283a57600080fd5b50565b60008135905061284c81612826565b92915050565b61285b81612356565b811461286657600080fd5b50565b60008135905061287881612852565b92915050565b600080600080600080600060e0888a03121561289d5761289c612114565b5b60006128ab8a828b01612167565b97505060206128bc8a828b01612167565b96505060406128cd8a828b0161219d565b95505060606128de8a828b0161219d565b94505060806128ef8a828b0161283d565b93505060a06129008a828b01612869565b92505060c06129118a828b01612869565b91505092959891949750929550565b6000806040838503121561293757612936612114565b5b600061294585828601612167565b925050602061295685828601612167565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806129a757607f821691505b6020821081036129ba576129b9612960565b5b50919050565b7f5447433a2074726164696e6720616c726561647920656e61626c656400000000600082015250565b60006129f6601c83612063565b9150612a01826129c0565b602082019050919050565b60006020820190508181036000830152612a25816129e9565b9050919050565b7f5447433a20696e76616c696420706172616d6574657273000000000000000000600082015250565b6000612a62601783612063565b9150612a6d82612a2c565b602082019050919050565b60006020820190508181036000830152612a9181612a55565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b612ad0816121f2565b8114612adb57600080fd5b50565b600081359050612aed81612ac7565b92915050565b600060208284031215612b0957612b08612114565b5b6000612b1784828501612ade565b91505092915050565b6000604082019050612b3560008301856124f3565b612b4260208301846124f3565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612b838261217c565b9150612b8e8361217c565b9250828201905080821115612ba657612ba5612b49565b5b92915050565b6000612bb78261217c565b9150612bc28361217c565b9250828202612bd08161217c565b91508282048414831517612be757612be6612b49565b5b5092915050565b7f4172617261436f696e2074726164696e6720616c726561647920656e61626c6560008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b6000612c4a602183612063565b9150612c5582612bee565b604082019050919050565b60006020820190508181036000830152612c7981612c3d565b9050919050565b600081905092915050565b6000612c9682612058565b612ca08185612c80565b9350612cb0818560208601612074565b80840191505092915050565b6000612cc88285612c8b565b9150612cd48284612c8b565b91508190509392505050565b600060c082019050612cf56000830189612360565b612d0260208301886124f3565b612d0f60408301876124f3565b612d1c60608301866122a2565b612d2960808301856122a2565b612d3660a08301846122a2565b979650505050505050565b6000606082019050612d5660008301866124f3565b612d6360208301856122a2565b612d7060408301846122a2565b949350505050565b7f4172617261436f696e2074726164652069732064697361626c65640000000000600082015250565b6000612dae601b83612063565b9150612db982612d78565b602082019050919050565b60006020820190508181036000830152612ddd81612da1565b9050919050565b600060a082019050612df96000830188612360565b612e066020830187612360565b612e136040830186612360565b612e2060608301856122a2565b612e2d60808301846124f3565b9695505050505050565b6000608082019050612e4c6000830187612360565b612e59602083018661232c565b612e666040830185612360565b612e736060830184612360565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea2646970667358221220b874fcc53d58bb8d96ff5366a98a5222e8b0d942eaa40cf0d10a14af5eae234e64736f6c63430008180033","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE PUSH20 0x70997970C51812DC3A010C7D01B50E0D17DC79C8 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x3C44CDDDB6A900FA2B585DD299E03D12FA4293BC PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x90F79BF6EB2C4F870365E785982E1F101E93B906 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x15D34AAF54267DB7D7C367839AAF71A00A2C6A65 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x9965507D1A55BCC2695C58BA16FB37D819B0A4DC PUSH1 0xD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x976EA74026E726554DB657FA54763ABD0C3A0AA9 PUSH1 0xE PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x456A CODESIZE SUB DUP1 PUSH3 0x456A DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x236 SWAP2 SWAP1 PUSH3 0xE92 JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4172617261436F696E0000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4172617261436F696E0000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4152410000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x321 SWAP2 SWAP1 PUSH3 0x1153 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x333 SWAP2 SWAP1 PUSH3 0x1153 JUMP JUMPDEST POP POP POP PUSH3 0x34C PUSH1 0x5 DUP4 PUSH3 0x7BA PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH3 0x36A PUSH1 0x6 DUP3 PUSH3 0x7BA PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH3 0x3A9 PUSH3 0x812 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x45C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x453 SWAP2 SWAP1 PUSH3 0x124B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x46D DUP2 PUSH3 0x86F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH1 0xF PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x10 PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x10 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x57E CALLER PUSH13 0x1431E0FAE6D7217CAA0000000 PUSH3 0x935 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x5DC CALLER PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x64 PUSH1 0x5 PUSH13 0x1431E0FAE6D7217CAA0000000 PUSH3 0x5C4 SWAP2 SWAP1 PUSH3 0x1297 JUMP JUMPDEST PUSH3 0x5D0 SWAP2 SWAP1 PUSH3 0x1311 JUMP JUMPDEST PUSH3 0x9C2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x63A CALLER PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x64 PUSH1 0xA PUSH13 0x1431E0FAE6D7217CAA0000000 PUSH3 0x622 SWAP2 SWAP1 PUSH3 0x1297 JUMP JUMPDEST PUSH3 0x62E SWAP2 SWAP1 PUSH3 0x1311 JUMP JUMPDEST PUSH3 0x9C2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x698 CALLER PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x64 PUSH1 0x14 PUSH13 0x1431E0FAE6D7217CAA0000000 PUSH3 0x680 SWAP2 SWAP1 PUSH3 0x1297 JUMP JUMPDEST PUSH3 0x68C SWAP2 SWAP1 PUSH3 0x1311 JUMP JUMPDEST PUSH3 0x9C2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x6F6 CALLER PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x64 PUSH1 0x19 PUSH13 0x1431E0FAE6D7217CAA0000000 PUSH3 0x6DE SWAP2 SWAP1 PUSH3 0x1297 JUMP JUMPDEST PUSH3 0x6EA SWAP2 SWAP1 PUSH3 0x1311 JUMP JUMPDEST PUSH3 0x9C2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x754 CALLER PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x64 PUSH1 0x14 PUSH13 0x1431E0FAE6D7217CAA0000000 PUSH3 0x73C SWAP2 SWAP1 PUSH3 0x1297 JUMP JUMPDEST PUSH3 0x748 SWAP2 SWAP1 PUSH3 0x1311 JUMP JUMPDEST PUSH3 0x9C2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x7B2 CALLER PUSH1 0xE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x64 PUSH1 0x14 PUSH13 0x1431E0FAE6D7217CAA0000000 PUSH3 0x79A SWAP2 SWAP1 PUSH3 0x1297 JUMP JUMPDEST PUSH3 0x7A6 SWAP2 SWAP1 PUSH3 0x1311 JUMP JUMPDEST PUSH3 0x9C2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0x162E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x7E0 JUMPI PUSH3 0x7D8 DUP4 PUSH3 0xAC4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH3 0x80C JUMP JUMPDEST DUP3 PUSH3 0x7F2 DUP4 PUSH3 0xB31 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 DUP2 PUSH3 0x803 SWAP2 SWAP1 PUSH3 0x1153 JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x854 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x1375 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x9AA JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x9A1 SWAP2 SWAP1 PUSH3 0x124B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x9BE PUSH1 0x0 DUP4 DUP4 PUSH3 0xB3B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xA37 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA2E SWAP2 SWAP1 PUSH3 0x124B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAAC JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xAA3 SWAP2 SWAP1 PUSH3 0x124B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xABF DUP4 DUP4 DUP4 PUSH3 0xB3B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0xB14 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xB0B SWAP2 SWAP1 PUSH3 0x1461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH3 0xB22 SWAP1 PUSH3 0x14B7 JUMP JUMPDEST PUSH1 0x0 SHR OR PUSH1 0x0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH3 0xBE0 JUMPI PUSH1 0x10 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH3 0xBDF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xBD6 SWAP1 PUSH3 0x1577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH3 0xBF3 DUP4 DUP4 DUP4 PUSH3 0xBF8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xC4E JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0xC41 SWAP2 SWAP1 PUSH3 0x1599 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0xD24 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0xCDD JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xCD4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x15D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xD6F JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0xDBC JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0xE1B SWAP2 SWAP1 PUSH3 0x1611 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xE5A DUP3 PUSH3 0xE2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xE6C DUP2 PUSH3 0xE4D JUMP JUMPDEST DUP2 EQ PUSH3 0xE78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0xE8C DUP2 PUSH3 0xE61 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0xEAC JUMPI PUSH3 0xEAB PUSH3 0xE28 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0xEBC DUP6 DUP3 DUP7 ADD PUSH3 0xE7B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0xECF DUP6 DUP3 DUP7 ADD PUSH3 0xE7B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0xF5B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0xF71 JUMPI PUSH3 0xF70 PUSH3 0xF13 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0xFDB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0xF9C JUMP JUMPDEST PUSH3 0xFE7 DUP7 DUP4 PUSH3 0xF9C JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1034 PUSH3 0x102E PUSH3 0x1028 DUP5 PUSH3 0xFFF JUMP JUMPDEST PUSH3 0x1009 JUMP JUMPDEST PUSH3 0xFFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1050 DUP4 PUSH3 0x1013 JUMP JUMPDEST PUSH3 0x1068 PUSH3 0x105F DUP3 PUSH3 0x103B JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0xFA9 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x107F PUSH3 0x1070 JUMP JUMPDEST PUSH3 0x108C DUP2 DUP5 DUP5 PUSH3 0x1045 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x10B4 JUMPI PUSH3 0x10A8 PUSH1 0x0 DUP3 PUSH3 0x1075 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x1092 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x1103 JUMPI PUSH3 0x10CD DUP2 PUSH3 0xF77 JUMP JUMPDEST PUSH3 0x10D8 DUP5 PUSH3 0xF8C JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x10E8 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x1100 PUSH3 0x10F7 DUP6 PUSH3 0xF8C JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x1091 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1128 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x1108 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1143 DUP4 DUP4 PUSH3 0x1115 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x115E DUP3 PUSH3 0xED9 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x117A JUMPI PUSH3 0x1179 PUSH3 0xEE4 JUMP JUMPDEST JUMPDEST PUSH3 0x1186 DUP3 SLOAD PUSH3 0xF42 JUMP JUMPDEST PUSH3 0x1193 DUP3 DUP3 DUP6 PUSH3 0x10B8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x11CB JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x11B6 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x11C2 DUP6 DUP3 PUSH3 0x1135 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x1232 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x11DB DUP7 PUSH3 0xF77 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x1205 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x11DE JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x1225 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x1221 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x1115 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x1245 DUP2 PUSH3 0xE4D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1262 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x123A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x12A4 DUP3 PUSH3 0xFFF JUMP JUMPDEST SWAP2 POP PUSH3 0x12B1 DUP4 PUSH3 0xFFF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0x12C1 DUP2 PUSH3 0xFFF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0x12DB JUMPI PUSH3 0x12DA PUSH3 0x1268 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x131E DUP3 PUSH3 0xFFF JUMP JUMPDEST SWAP2 POP PUSH3 0x132B DUP4 PUSH3 0xFFF JUMP JUMPDEST SWAP3 POP DUP3 PUSH3 0x133E JUMPI PUSH3 0x133D PUSH3 0x12E2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x135E DUP2 PUSH3 0x1349 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x136F DUP2 PUSH3 0xFFF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x138C PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0x1353 JUMP JUMPDEST PUSH3 0x139B PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0x1353 JUMP JUMPDEST PUSH3 0x13AA PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0x1353 JUMP JUMPDEST PUSH3 0x13B9 PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0x1364 JUMP JUMPDEST PUSH3 0x13C8 PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0x123A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x1403 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x13E6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x142D DUP3 PUSH3 0xED9 JUMP JUMPDEST PUSH3 0x1439 DUP2 DUP6 PUSH3 0x13D2 JUMP JUMPDEST SWAP4 POP PUSH3 0x144B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x13E3 JUMP JUMPDEST PUSH3 0x1456 DUP2 PUSH3 0x140F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x147D DUP2 DUP5 PUSH3 0x1420 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x14AE DUP3 MLOAD PUSH3 0x1349 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x14C4 DUP3 PUSH3 0x1485 JUMP JUMPDEST DUP3 PUSH3 0x14D0 DUP5 PUSH3 0x1490 JUMP JUMPDEST SWAP1 POP PUSH3 0x14DD DUP2 PUSH3 0x14A0 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH3 0x1520 JUMPI PUSH3 0x151B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH3 0xF9C JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4172617261436F696E2074726164652069732064697361626C65640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x155F PUSH1 0x1B DUP4 PUSH3 0x13D2 JUMP JUMPDEST SWAP2 POP PUSH3 0x156C DUP3 PUSH3 0x1527 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1592 DUP2 PUSH3 0x1550 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x15A6 DUP3 PUSH3 0xFFF JUMP JUMPDEST SWAP2 POP PUSH3 0x15B3 DUP4 PUSH3 0xFFF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x15CE JUMPI PUSH3 0x15CD PUSH3 0x1268 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x15EB PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x123A JUMP JUMPDEST PUSH3 0x15FA PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x1364 JUMP JUMPDEST PUSH3 0x1609 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x1364 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1628 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1364 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x2EE1 PUSH3 0x1689 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x1635 ADD MSTORE PUSH1 0x0 PUSH2 0x15FA ADD MSTORE PUSH1 0x0 PUSH2 0x19D6 ADD MSTORE PUSH1 0x0 PUSH2 0x19B5 ADD MSTORE PUSH1 0x0 PUSH2 0x13A8 ADD MSTORE PUSH1 0x0 PUSH2 0x13FE ADD MSTORE PUSH1 0x0 PUSH2 0x1427 ADD MSTORE PUSH2 0x2EE1 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0x9B75679C GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x51A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x566 JUMPI DUP1 PUSH4 0xFCA6172F EQ PUSH2 0x582 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x9B75679C EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4AE JUMPI DUP1 PUSH4 0xBBAA49DA EQ PUSH2 0x4DE JUMPI DUP1 PUSH4 0xC519099D EQ PUSH2 0x4FC JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x8A8C523C GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8A8C523C EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0x8AC27F5F EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x442 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x460 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0x7EDD9E5E EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x3F6 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x44447B4E GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x5A7ADF7F GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x5A7ADF7F EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x5E57966D EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x39E JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x44447B4E EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x488D4A51 EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x4ADA218B EQ PUSH2 0x302 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1AD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2AC JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x12280BA8 EQ PUSH2 0x222 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x21B2 JUMP JUMPDEST PUSH2 0x632 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x220D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22A PUSH2 0x655 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x2287 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x248 PUSH2 0x67B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x22B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x278 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x22CC JUMP JUMPDEST PUSH2 0x685 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x220D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x296 PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x233B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B4 PUSH2 0x6BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x236F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DF SWAP2 SWAP1 PUSH2 0x2445 JUMP JUMPDEST PUSH2 0x6CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x300 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x24C6 JUMP JUMPDEST PUSH2 0x833 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30A PUSH2 0x8DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x220D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x328 PUSH2 0x8F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x2502 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x358 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x24C6 JUMP JUMPDEST PUSH2 0x918 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x388 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x383 SWAP2 SWAP1 PUSH2 0x24C6 JUMP JUMPDEST PUSH2 0xC1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x395 SWAP2 SWAP1 PUSH2 0x22B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A6 PUSH2 0xC65 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x24C6 JUMP JUMPDEST PUSH2 0xC79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0x22B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E0 PUSH2 0xC8B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3ED SWAP2 SWAP1 PUSH2 0x2502 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FE PUSH2 0xCB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x411 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2616 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x422 PUSH2 0xD5B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x42C PUSH2 0xDFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x439 SWAP2 SWAP1 PUSH2 0x2502 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44A PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x457 SWAP2 SWAP1 PUSH2 0x2502 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x468 PUSH2 0xE4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x475 SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x498 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x493 SWAP2 SWAP1 PUSH2 0x27CA JUMP JUMPDEST PUSH2 0xEDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A5 SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C3 SWAP2 SWAP1 PUSH2 0x21B2 JUMP JUMPDEST PUSH2 0xF18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D5 SWAP2 SWAP1 PUSH2 0x220D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E6 PUSH2 0xF3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F3 SWAP2 SWAP1 PUSH2 0x2502 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x504 PUSH2 0xF61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x511 SWAP2 SWAP1 PUSH2 0x2502 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x534 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x52F SWAP2 SWAP1 PUSH2 0x287E JUMP JUMPDEST PUSH2 0xF87 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x550 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54B SWAP2 SWAP1 PUSH2 0x2920 JUMP JUMPDEST PUSH2 0x10CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55D SWAP2 SWAP1 PUSH2 0x22B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x580 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57B SWAP2 SWAP1 PUSH2 0x24C6 JUMP JUMPDEST PUSH2 0x1156 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58A PUSH2 0x11DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x597 SWAP2 SWAP1 PUSH2 0x2502 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x5AF SWAP1 PUSH2 0x298F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5DB SWAP1 PUSH2 0x298F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x628 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x628 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x60B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x63D PUSH2 0x1202 JUMP JUMPDEST SWAP1 POP PUSH2 0x64A DUP2 DUP6 DUP6 PUSH2 0x120A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x690 PUSH2 0x1202 JUMP JUMPDEST SWAP1 POP PUSH2 0x69D DUP6 DUP3 DUP6 PUSH2 0x121C JUMP JUMPDEST PUSH2 0x6A8 DUP6 DUP6 DUP6 PUSH2 0x12B0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C7 PUSH2 0x13A4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6D4 PUSH2 0x145B JUMP JUMPDEST PUSH1 0xF PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x724 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71B SWAP1 PUSH2 0x2A0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SWAP1 POP DUP5 DUP5 SWAP1 POP EQ PUSH2 0x76C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x2A78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP5 DUP5 SWAP1 POP DUP2 LT ISZERO PUSH2 0x82C JUMPI DUP3 DUP3 DUP3 DUP2 DUP2 LT PUSH2 0x78D JUMPI PUSH2 0x78C PUSH2 0x2A98 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x7A2 SWAP2 SWAP1 PUSH2 0x2AF3 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0x7B9 JUMPI PUSH2 0x7B8 PUSH2 0x2A98 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x7CE SWAP2 SWAP1 PUSH2 0x24C6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x76F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x83B PUSH2 0x145B JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0xF PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH31 0xD910C9481701BA32AFE0C247572AAECE27072F230C8EC769BF245FC0B38DE6 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x8D3 SWAP3 SWAP2 SWAP1 PUSH2 0x2B20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH1 0x2A PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x98F JUMPI PUSH2 0x98E PUSH2 0x269F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x9C1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x9F9 JUMPI PUSH2 0x9F8 PUSH2 0x2A98 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xA5D JUMPI PUSH2 0xA5C PUSH2 0x2A98 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 JUMPDEST PUSH1 0x14 DUP2 LT ISZERO PUSH2 0xC11 JUMPI DUP3 PUSH1 0x4 DUP6 PUSH1 0xC DUP5 PUSH2 0xAA9 SWAP2 SWAP1 PUSH2 0x2B78 JUMP JUMPDEST PUSH1 0x20 DUP2 LT PUSH2 0xABA JUMPI PUSH2 0xAB9 PUSH2 0x2A98 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SHR PUSH1 0xF8 SHR PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0xAF9 JUMPI PUSH2 0xAF8 PUSH2 0x2A98 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP3 PUSH1 0x2 DUP4 PUSH2 0xB12 SWAP2 SWAP1 PUSH2 0x2BAC JUMP JUMPDEST PUSH1 0x2 PUSH2 0xB1E SWAP2 SWAP1 PUSH2 0x2B78 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xB2F JUMPI PUSH2 0xB2E PUSH2 0x2A98 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP3 PUSH1 0xF PUSH1 0xF8 SHL DUP6 PUSH1 0xC DUP5 PUSH2 0xB72 SWAP2 SWAP1 PUSH2 0x2B78 JUMP JUMPDEST PUSH1 0x20 DUP2 LT PUSH2 0xB83 JUMPI PUSH2 0xB82 PUSH2 0x2A98 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL AND PUSH1 0xF8 SHR PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0xB9F JUMPI PUSH2 0xB9E PUSH2 0x2A98 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP3 PUSH1 0x2 DUP4 PUSH2 0xBB8 SWAP2 SWAP1 PUSH2 0x2BAC JUMP JUMPDEST PUSH1 0x3 PUSH2 0xBC4 SWAP2 SWAP1 PUSH2 0x2B78 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xBD5 JUMPI PUSH2 0xBD4 PUSH2 0x2A98 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xA8F JUMP JUMPDEST POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC6D PUSH2 0x145B JUMP JUMPDEST PUSH2 0xC77 PUSH1 0x0 PUSH2 0x14E2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC84 DUP3 PUSH2 0x15A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0xCC5 PUSH2 0x15F1 JUMP JUMPDEST PUSH2 0xCCD PUSH2 0x162C JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCEE JUMPI PUSH2 0xCED PUSH2 0x269F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD1C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH2 0xD63 PUSH2 0x145B JUMP JUMPDEST PUSH1 0xF PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xDB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDAA SWAP1 PUSH2 0x2C60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xF PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x799663458A5EF2936F7FA0C99B3336C69C25890F82974F04E811E5BB359186C7 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xE5B SWAP1 PUSH2 0x298F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE87 SWAP1 PUSH2 0x298F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xED4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEA9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xED4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEB7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xEEB DUP5 PUSH2 0x918 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF00 SWAP3 SWAP2 SWAP1 PUSH2 0x2CBC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xF23 PUSH2 0x1202 JUMP JUMPDEST SWAP1 POP PUSH2 0xF30 DUP2 DUP6 DUP6 PUSH2 0x12B0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xFCC JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC3 SWAP2 SWAP1 PUSH2 0x22B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xFFB DUP13 PUSH2 0x1667 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1011 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2CE0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1034 DUP3 PUSH2 0x16BE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1044 DUP3 DUP8 DUP8 DUP8 PUSH2 0x16D8 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10B8 JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10AF SWAP3 SWAP2 SWAP1 PUSH2 0x2B20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10C3 DUP11 DUP11 DUP11 PUSH2 0x120A JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x115E PUSH2 0x145B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11D0 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C7 SWAP2 SWAP1 PUSH2 0x2502 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11D9 DUP2 PUSH2 0x14E2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1217 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1708 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1228 DUP5 DUP5 PUSH2 0x10CF JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x12AA JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x129A JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1291 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12A9 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1708 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1322 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1319 SWAP2 SWAP1 PUSH2 0x2502 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1394 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x138B SWAP2 SWAP1 PUSH2 0x2502 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x139F DUP4 DUP4 DUP4 PUSH2 0x18DF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1420 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x144D JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x1458 JUMP JUMPDEST PUSH2 0x1455 PUSH2 0x1990 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1463 PUSH2 0x1202 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1481 PUSH2 0xE22 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14E0 JUMPI PUSH2 0x14A4 PUSH2 0x1202 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D7 SWAP2 SWAP1 PUSH2 0x2502 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1627 PUSH1 0x5 PUSH32 0x0 PUSH2 0x1A26 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1662 PUSH1 0x6 PUSH32 0x0 PUSH2 0x1A26 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16D1 PUSH2 0x16CB PUSH2 0x13A4 JUMP JUMPDEST DUP4 PUSH2 0x1AD6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x16EA DUP9 DUP9 DUP9 DUP9 PUSH2 0x1B17 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x16FA DUP3 DUP3 PUSH2 0x1C0B JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x177A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1771 SWAP2 SWAP1 PUSH2 0x2502 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17EC JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17E3 SWAP2 SWAP1 PUSH2 0x2502 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x18D9 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x18D0 SWAP2 SWAP1 PUSH2 0x22B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1980 JUMPI PUSH1 0x10 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x197F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1976 SWAP1 PUSH2 0x2DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH2 0x198B DUP4 DUP4 DUP4 PUSH2 0x1D6F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1A0B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x1A43 JUMPI PUSH2 0x1A3C DUP4 PUSH2 0x1F94 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AD0 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1A4F SWAP1 PUSH2 0x298F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1A7B SWAP1 PUSH2 0x298F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1AC8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1A9D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1AC8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1AAB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1B57 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1C01 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1B7C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E37 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B9E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BF2 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1C01 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1C1F JUMPI PUSH2 0x1C1E PUSH2 0x2E7C JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1C32 JUMPI PUSH2 0x1C31 PUSH2 0x2E7C JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x1D6B JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1C4C JUMPI PUSH2 0x1C4B PUSH2 0x2E7C JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1C5F JUMPI PUSH2 0x1C5E PUSH2 0x2E7C JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1C96 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1CAA JUMPI PUSH2 0x1CA9 PUSH2 0x2E7C JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1CBD JUMPI PUSH2 0x1CBC PUSH2 0x2E7C JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1D02 JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CF9 SWAP2 SWAP1 PUSH2 0x22B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1D15 JUMPI PUSH2 0x1D14 PUSH2 0x2E7C JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1D28 JUMPI PUSH2 0x1D27 PUSH2 0x2E7C JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1D6A JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D61 SWAP2 SWAP1 PUSH2 0x236F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1DC1 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1DB5 SWAP2 SWAP1 PUSH2 0x2B78 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1E94 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1E4D JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E44 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1EDD JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1F2A JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1F87 SWAP2 SWAP1 PUSH2 0x22B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1FA1 DUP4 PUSH2 0x2008 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FC0 JUMPI PUSH2 0x1FBF PUSH2 0x269F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1FF2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x204F JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2092 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2077 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20BA DUP3 PUSH2 0x2058 JUMP JUMPDEST PUSH2 0x20C4 DUP2 DUP6 PUSH2 0x2063 JUMP JUMPDEST SWAP4 POP PUSH2 0x20D4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2074 JUMP JUMPDEST PUSH2 0x20DD DUP2 PUSH2 0x209E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2102 DUP2 DUP5 PUSH2 0x20AF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2149 DUP3 PUSH2 0x211E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2159 DUP2 PUSH2 0x213E JUMP JUMPDEST DUP2 EQ PUSH2 0x2164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2176 DUP2 PUSH2 0x2150 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x218F DUP2 PUSH2 0x217C JUMP JUMPDEST DUP2 EQ PUSH2 0x219A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21AC DUP2 PUSH2 0x2186 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21C9 JUMPI PUSH2 0x21C8 PUSH2 0x2114 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21D7 DUP6 DUP3 DUP7 ADD PUSH2 0x2167 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21E8 DUP6 DUP3 DUP7 ADD PUSH2 0x219D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2207 DUP2 PUSH2 0x21F2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2222 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x21FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x224D PUSH2 0x2248 PUSH2 0x2243 DUP5 PUSH2 0x211E JUMP JUMPDEST PUSH2 0x2228 JUMP JUMPDEST PUSH2 0x211E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x225F DUP3 PUSH2 0x2232 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2271 DUP3 PUSH2 0x2254 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2281 DUP2 PUSH2 0x2266 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x229C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2278 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22AB DUP2 PUSH2 0x217C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22C6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x22E5 JUMPI PUSH2 0x22E4 PUSH2 0x2114 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22F3 DUP7 DUP3 DUP8 ADD PUSH2 0x2167 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2304 DUP7 DUP3 DUP8 ADD PUSH2 0x2167 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2315 DUP7 DUP3 DUP8 ADD PUSH2 0x219D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2335 DUP2 PUSH2 0x231F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2350 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x232C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2369 DUP2 PUSH2 0x2356 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2384 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2360 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x23AF JUMPI PUSH2 0x23AE PUSH2 0x238A JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23CC JUMPI PUSH2 0x23CB PUSH2 0x238F JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x23E8 JUMPI PUSH2 0x23E7 PUSH2 0x2394 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2405 JUMPI PUSH2 0x2404 PUSH2 0x238A JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2422 JUMPI PUSH2 0x2421 PUSH2 0x238F JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x243E JUMPI PUSH2 0x243D PUSH2 0x2394 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x245F JUMPI PUSH2 0x245E PUSH2 0x2114 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x247D JUMPI PUSH2 0x247C PUSH2 0x2119 JUMP JUMPDEST JUMPDEST PUSH2 0x2489 DUP8 DUP3 DUP9 ADD PUSH2 0x2399 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24AC JUMPI PUSH2 0x24AB PUSH2 0x2119 JUMP JUMPDEST JUMPDEST PUSH2 0x24B8 DUP8 DUP3 DUP9 ADD PUSH2 0x23EF JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24DC JUMPI PUSH2 0x24DB PUSH2 0x2114 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24EA DUP5 DUP3 DUP6 ADD PUSH2 0x2167 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x24FC DUP2 PUSH2 0x213E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2517 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x24F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2552 DUP2 PUSH2 0x251D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x258D DUP2 PUSH2 0x217C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x259F DUP4 DUP4 PUSH2 0x2584 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25C3 DUP3 PUSH2 0x2558 JUMP JUMPDEST PUSH2 0x25CD DUP2 DUP6 PUSH2 0x2563 JUMP JUMPDEST SWAP4 POP PUSH2 0x25D8 DUP4 PUSH2 0x2574 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2609 JUMPI DUP2 MLOAD PUSH2 0x25F0 DUP9 DUP3 PUSH2 0x2593 JUMP JUMPDEST SWAP8 POP PUSH2 0x25FB DUP4 PUSH2 0x25AB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x25DC JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x262B PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x2549 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x263D DUP2 DUP10 PUSH2 0x20AF JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2651 DUP2 DUP9 PUSH2 0x20AF JUMP JUMPDEST SWAP1 POP PUSH2 0x2660 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x22A2 JUMP JUMPDEST PUSH2 0x266D PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x24F3 JUMP JUMPDEST PUSH2 0x267A PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x2360 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x268C DUP2 DUP5 PUSH2 0x25B8 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x26D7 DUP3 PUSH2 0x209E JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x26F6 JUMPI PUSH2 0x26F5 PUSH2 0x269F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2709 PUSH2 0x210A JUMP JUMPDEST SWAP1 POP PUSH2 0x2715 DUP3 DUP3 PUSH2 0x26CE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2735 JUMPI PUSH2 0x2734 PUSH2 0x269F JUMP JUMPDEST JUMPDEST PUSH2 0x273E DUP3 PUSH2 0x209E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x276D PUSH2 0x2768 DUP5 PUSH2 0x271A JUMP JUMPDEST PUSH2 0x26FF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2789 JUMPI PUSH2 0x2788 PUSH2 0x269A JUMP JUMPDEST JUMPDEST PUSH2 0x2794 DUP5 DUP3 DUP6 PUSH2 0x274B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x27B1 JUMPI PUSH2 0x27B0 PUSH2 0x238A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x27C1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x275A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27E1 JUMPI PUSH2 0x27E0 PUSH2 0x2114 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27EF DUP6 DUP3 DUP7 ADD PUSH2 0x2167 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2810 JUMPI PUSH2 0x280F PUSH2 0x2119 JUMP JUMPDEST JUMPDEST PUSH2 0x281C DUP6 DUP3 DUP7 ADD PUSH2 0x279C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x282F DUP2 PUSH2 0x231F JUMP JUMPDEST DUP2 EQ PUSH2 0x283A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x284C DUP2 PUSH2 0x2826 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x285B DUP2 PUSH2 0x2356 JUMP JUMPDEST DUP2 EQ PUSH2 0x2866 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2878 DUP2 PUSH2 0x2852 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x289D JUMPI PUSH2 0x289C PUSH2 0x2114 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28AB DUP11 DUP3 DUP12 ADD PUSH2 0x2167 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x28BC DUP11 DUP3 DUP12 ADD PUSH2 0x2167 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x28CD DUP11 DUP3 DUP12 ADD PUSH2 0x219D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x28DE DUP11 DUP3 DUP12 ADD PUSH2 0x219D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x28EF DUP11 DUP3 DUP12 ADD PUSH2 0x283D JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x2900 DUP11 DUP3 DUP12 ADD PUSH2 0x2869 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x2911 DUP11 DUP3 DUP12 ADD PUSH2 0x2869 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2937 JUMPI PUSH2 0x2936 PUSH2 0x2114 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2945 DUP6 DUP3 DUP7 ADD PUSH2 0x2167 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2956 DUP6 DUP3 DUP7 ADD PUSH2 0x2167 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x29A7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x29BA JUMPI PUSH2 0x29B9 PUSH2 0x2960 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5447433A2074726164696E6720616C726561647920656E61626C656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29F6 PUSH1 0x1C DUP4 PUSH2 0x2063 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A01 DUP3 PUSH2 0x29C0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A25 DUP2 PUSH2 0x29E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5447433A20696E76616C696420706172616D6574657273000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A62 PUSH1 0x17 DUP4 PUSH2 0x2063 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A6D DUP3 PUSH2 0x2A2C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A91 DUP2 PUSH2 0x2A55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2AD0 DUP2 PUSH2 0x21F2 JUMP JUMPDEST DUP2 EQ PUSH2 0x2ADB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2AED DUP2 PUSH2 0x2AC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B09 JUMPI PUSH2 0x2B08 PUSH2 0x2114 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B17 DUP5 DUP3 DUP6 ADD PUSH2 0x2ADE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2B35 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x24F3 JUMP JUMPDEST PUSH2 0x2B42 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x24F3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2B83 DUP3 PUSH2 0x217C JUMP JUMPDEST SWAP2 POP PUSH2 0x2B8E DUP4 PUSH2 0x217C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2BA6 JUMPI PUSH2 0x2BA5 PUSH2 0x2B49 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BB7 DUP3 PUSH2 0x217C JUMP JUMPDEST SWAP2 POP PUSH2 0x2BC2 DUP4 PUSH2 0x217C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2BD0 DUP2 PUSH2 0x217C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2BE7 JUMPI PUSH2 0x2BE6 PUSH2 0x2B49 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4172617261436F696E2074726164696E6720616C726561647920656E61626C65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C4A PUSH1 0x21 DUP4 PUSH2 0x2063 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C55 DUP3 PUSH2 0x2BEE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C79 DUP2 PUSH2 0x2C3D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C96 DUP3 PUSH2 0x2058 JUMP JUMPDEST PUSH2 0x2CA0 DUP2 DUP6 PUSH2 0x2C80 JUMP JUMPDEST SWAP4 POP PUSH2 0x2CB0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2074 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CC8 DUP3 DUP6 PUSH2 0x2C8B JUMP JUMPDEST SWAP2 POP PUSH2 0x2CD4 DUP3 DUP5 PUSH2 0x2C8B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x2CF5 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x2360 JUMP JUMPDEST PUSH2 0x2D02 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x24F3 JUMP JUMPDEST PUSH2 0x2D0F PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x24F3 JUMP JUMPDEST PUSH2 0x2D1C PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x22A2 JUMP JUMPDEST PUSH2 0x2D29 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x22A2 JUMP JUMPDEST PUSH2 0x2D36 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x22A2 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2D56 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x24F3 JUMP JUMPDEST PUSH2 0x2D63 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x22A2 JUMP JUMPDEST PUSH2 0x2D70 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x22A2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4172617261436F696E2074726164652069732064697361626C65640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DAE PUSH1 0x1B DUP4 PUSH2 0x2063 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DB9 DUP3 PUSH2 0x2D78 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DDD DUP2 PUSH2 0x2DA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2DF9 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2360 JUMP JUMPDEST PUSH2 0x2E06 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2360 JUMP JUMPDEST PUSH2 0x2E13 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x2360 JUMP JUMPDEST PUSH2 0x2E20 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x22A2 JUMP JUMPDEST PUSH2 0x2E2D PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x24F3 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2E4C PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2360 JUMP JUMPDEST PUSH2 0x2E59 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x232C JUMP JUMPDEST PUSH2 0x2E66 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2360 JUMP JUMPDEST PUSH2 0x2E73 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2360 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 PUSH21 0xFCC53D58BB8D96FF5366A98A5222E8B0D942EAA40C CREATE 0xD1 EXP EQ 0xAF MCOPY 0xAE 0x23 0x4E PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"323:3563:19:-:0;;;415:42;379:78;;;;;;;;;;;;;;;;;;;;488:42;463:67;;;;;;;;;;;;;;;;;;;;567:42;536:73;;;;;;;;;;;;;;;;;;;;642:42;615:69;;;;;;;;;;;;;;;;;;;;723:42;690:75;;;;;;;;;;;;;;;;;;;;809:42;771:80;;;;;;;;;;;;;;;;;;;;1213:836;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1357:12;1574:52:5;;;;;;;;;;;;;;;;;1613:4;3328:431:14;;;;;;;;;;;;;;;;;1896:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;3401:45:14;3432:13;3401:4;:30;;;;:45;;;;:::i;:::-;3393:53;;;;;;3467:51;3501:16;3467:7;:33;;;;:51;;;;:::i;:::-;3456:62;;;;;;3558:4;3542:22;;;;;;3528:36;;;;;;3607:7;3591:25;;;;;;3574:42;;;;;;3644:13;3627:30;;;;;;3692:23;:21;;;:23;;:::i;:::-;3667:48;;;;;;3747:4;3725:27;;;;;;;;;;3328:431;;1574:52:5;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1410:17:19::3;1385:10;;:43;;;;;;;;;;;;;;;;;;1462:4;1438:9;:21;1456:1:::0;1438:21:::3;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;1502:4;1476:9;:23;1486:12;1476:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;1516:31;1522:10;897:26;1516:5;;;:31;;:::i;:::-;1565:65;1575:10;1587:18;;;;;;;;;;;1626:3;1622:1;897:26;1607:16;;;;:::i;:::-;:22;;;;:::i;:::-;1565:9;;;:65;;:::i;:::-;1649:56;1659:10;1671:7;;;;;;;;;;;1701:3;1696:2;897:26;1681:17;;;;:::i;:::-;:23;;;;:::i;:::-;1649:9;;;:56;;:::i;:::-;1724:62;1734:10;1746:13;;;;;;;;;;;1782:3;1777:2;897:26;1762:17;;;;:::i;:::-;:23;;;;:::i;:::-;1724:9;;;:62;;:::i;:::-;1805:58;1815:10;1827:9;;;;;;;;;;;1859:3;1854:2;897:26;1839:17;;;;:::i;:::-;:23;;;;:::i;:::-;1805:9;;;:58;;:::i;:::-;1882:64;1892:10;1904:15;;;;;;;;;;;1942:3;1937:2;897:26;1922:17;;;;:::i;:::-;:23;;;;:::i;:::-;1882:9;;;:64;;:::i;:::-;1965:68;1975:10;1987:20;;;;;;;;;;;2029:3;2024:2;897:26;2009:17;;;;:::i;:::-;:23;;;;:::i;:::-;1965:9;;;:68;;:::i;:::-;1213:836:::0;;323:3563;;2914:340:10;3010:11;3059:2;3043:5;3037:19;:24;3033:215;;;3084:20;3098:5;3084:13;;;:20;;:::i;:::-;3077:27;;;;3033:215;3176:5;3135:32;3161:5;3135:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;1390:66;3219:17;;3195:42;;2914:340;;;;;:::o;4113:179:14:-;4168:7;2079:95;4226:11;;4239:14;;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7721:208:3:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;;;:24;;:::i;:::-;5656:300;;;:::o;1708:286:10:-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;;;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:4;:11;1965:4;1957:13;;;:::i;:::-;1949:22;;:36;1941:45;;1917:70;;;1708:286;;;:::o;3135:202:11:-;3203:20;3311:10;3301:20;;3135:202;;;:::o;2888:261:19:-;3007:14;;;;;;;;;;;3002:101;;3045:9;:15;3055:4;3045:15;;;;;;;;;;;;;;;;;;;;;;;;;3037:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;3002:101;3112:30;3126:4;3132:2;3136:5;3112:13;;;:30;;:::i;:::-;2888:261;;;:::o;6271:1107:3:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;88:117:22:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:99::-;1410:6;1444:5;1438:12;1428:22;;1358:99;;;:::o;1463:180::-;1511:77;1508:1;1501:88;1608:4;1605:1;1598:15;1632:4;1629:1;1622:15;1649:180;1697:77;1694:1;1687:88;1794:4;1791:1;1784:15;1818:4;1815:1;1808:15;1835:320;1879:6;1916:1;1910:4;1906:12;1896:22;;1963:1;1957:4;1953:12;1984:18;1974:81;;2040:4;2032:6;2028:17;2018:27;;1974:81;2102:2;2094:6;2091:14;2071:18;2068:38;2065:84;;2121:18;;:::i;:::-;2065:84;1886:269;1835:320;;;:::o;2161:141::-;2210:4;2233:3;2225:11;;2256:3;2253:1;2246:14;2290:4;2287:1;2277:18;2269:26;;2161:141;;;:::o;2308:93::-;2345:6;2392:2;2387;2380:5;2376:14;2372:23;2362:33;;2308:93;;;:::o;2407:107::-;2451:8;2501:5;2495:4;2491:16;2470:37;;2407:107;;;;:::o;2520:393::-;2589:6;2639:1;2627:10;2623:18;2662:97;2692:66;2681:9;2662:97;:::i;:::-;2780:39;2810:8;2799:9;2780:39;:::i;:::-;2768:51;;2852:4;2848:9;2841:5;2837:21;2828:30;;2901:4;2891:8;2887:19;2880:5;2877:30;2867:40;;2596:317;;2520:393;;;;;:::o;2919:77::-;2956:7;2985:5;2974:16;;2919:77;;;:::o;3002:60::-;3030:3;3051:5;3044:12;;3002:60;;;:::o;3068:142::-;3118:9;3151:53;3169:34;3178:24;3196:5;3178:24;:::i;:::-;3169:34;:::i;:::-;3151:53;:::i;:::-;3138:66;;3068:142;;;:::o;3216:75::-;3259:3;3280:5;3273:12;;3216:75;;;:::o;3297:269::-;3407:39;3438:7;3407:39;:::i;:::-;3468:91;3517:41;3541:16;3517:41;:::i;:::-;3509:6;3502:4;3496:11;3468:91;:::i;:::-;3462:4;3455:105;3373:193;3297:269;;;:::o;3572:73::-;3617:3;3572:73;:::o;3651:189::-;3728:32;;:::i;:::-;3769:65;3827:6;3819;3813:4;3769:65;:::i;:::-;3704:136;3651:189;;:::o;3846:186::-;3906:120;3923:3;3916:5;3913:14;3906:120;;;3977:39;4014:1;4007:5;3977:39;:::i;:::-;3950:1;3943:5;3939:13;3930:22;;3906:120;;;3846:186;;:::o;4038:543::-;4139:2;4134:3;4131:11;4128:446;;;4173:38;4205:5;4173:38;:::i;:::-;4257:29;4275:10;4257:29;:::i;:::-;4247:8;4243:44;4440:2;4428:10;4425:18;4422:49;;;4461:8;4446:23;;4422:49;4484:80;4540:22;4558:3;4540:22;:::i;:::-;4530:8;4526:37;4513:11;4484:80;:::i;:::-;4143:431;;4128:446;4038:543;;;:::o;4587:117::-;4641:8;4691:5;4685:4;4681:16;4660:37;;4587:117;;;;:::o;4710:169::-;4754:6;4787:51;4835:1;4831:6;4823:5;4820:1;4816:13;4787:51;:::i;:::-;4783:56;4868:4;4862;4858:15;4848:25;;4761:118;4710:169;;;;:::o;4884:295::-;4960:4;5106:29;5131:3;5125:4;5106:29;:::i;:::-;5098:37;;5168:3;5165:1;5161:11;5155:4;5152:21;5144:29;;4884:295;;;;:::o;5184:1395::-;5301:37;5334:3;5301:37;:::i;:::-;5403:18;5395:6;5392:30;5389:56;;;5425:18;;:::i;:::-;5389:56;5469:38;5501:4;5495:11;5469:38;:::i;:::-;5554:67;5614:6;5606;5600:4;5554:67;:::i;:::-;5648:1;5672:4;5659:17;;5704:2;5696:6;5693:14;5721:1;5716:618;;;;6378:1;6395:6;6392:77;;;6444:9;6439:3;6435:19;6429:26;6420:35;;6392:77;6495:67;6555:6;6548:5;6495:67;:::i;:::-;6489:4;6482:81;6351:222;5686:887;;5716:618;5768:4;5764:9;5756:6;5752:22;5802:37;5834:4;5802:37;:::i;:::-;5861:1;5875:208;5889:7;5886:1;5883:14;5875:208;;;5968:9;5963:3;5959:19;5953:26;5945:6;5938:42;6019:1;6011:6;6007:14;5997:24;;6066:2;6055:9;6051:18;6038:31;;5912:4;5909:1;5905:12;5900:17;;5875:208;;;6111:6;6102:7;6099:19;6096:179;;;6169:9;6164:3;6160:19;6154:26;6212:48;6254:4;6246:6;6242:17;6231:9;6212:48;:::i;:::-;6204:6;6197:64;6119:156;6096:179;6321:1;6317;6309:6;6305:14;6301:22;6295:4;6288:36;5723:611;;;5686:887;;5276:1303;;;5184:1395;;:::o;6585:118::-;6672:24;6690:5;6672:24;:::i;:::-;6667:3;6660:37;6585:118;;:::o;6709:222::-;6802:4;6840:2;6829:9;6825:18;6817:26;;6853:71;6921:1;6910:9;6906:17;6897:6;6853:71;:::i;:::-;6709:222;;;;:::o;6937:180::-;6985:77;6982:1;6975:88;7082:4;7079:1;7072:15;7106:4;7103:1;7096:15;7123:410;7163:7;7186:20;7204:1;7186:20;:::i;:::-;7181:25;;7220:20;7238:1;7220:20;:::i;:::-;7215:25;;7275:1;7272;7268:9;7297:30;7315:11;7297:30;:::i;:::-;7286:41;;7476:1;7467:7;7463:15;7460:1;7457:22;7437:1;7430:9;7410:83;7387:139;;7506:18;;:::i;:::-;7387:139;7171:362;7123:410;;;;:::o;7539:180::-;7587:77;7584:1;7577:88;7684:4;7681:1;7674:15;7708:4;7705:1;7698:15;7725:185;7765:1;7782:20;7800:1;7782:20;:::i;:::-;7777:25;;7816:20;7834:1;7816:20;:::i;:::-;7811:25;;7855:1;7845:35;;7860:18;;:::i;:::-;7845:35;7902:1;7899;7895:9;7890:14;;7725:185;;;;:::o;7916:77::-;7953:7;7982:5;7971:16;;7916:77;;;:::o;7999:118::-;8086:24;8104:5;8086:24;:::i;:::-;8081:3;8074:37;7999:118;;:::o;8123:::-;8210:24;8228:5;8210:24;:::i;:::-;8205:3;8198:37;8123:118;;:::o;8247:664::-;8452:4;8490:3;8479:9;8475:19;8467:27;;8504:71;8572:1;8561:9;8557:17;8548:6;8504:71;:::i;:::-;8585:72;8653:2;8642:9;8638:18;8629:6;8585:72;:::i;:::-;8667;8735:2;8724:9;8720:18;8711:6;8667:72;:::i;:::-;8749;8817:2;8806:9;8802:18;8793:6;8749:72;:::i;:::-;8831:73;8899:3;8888:9;8884:19;8875:6;8831:73;:::i;:::-;8247:664;;;;;;;;:::o;8917:169::-;9001:11;9035:6;9030:3;9023:19;9075:4;9070:3;9066:14;9051:29;;8917:169;;;;:::o;9092:246::-;9173:1;9183:113;9197:6;9194:1;9191:13;9183:113;;;9282:1;9277:3;9273:11;9267:18;9263:1;9258:3;9254:11;9247:39;9219:2;9216:1;9212:10;9207:15;;9183:113;;;9330:1;9321:6;9316:3;9312:16;9305:27;9154:184;9092:246;;;:::o;9344:102::-;9385:6;9436:2;9432:7;9427:2;9420:5;9416:14;9412:28;9402:38;;9344:102;;;:::o;9452:377::-;9540:3;9568:39;9601:5;9568:39;:::i;:::-;9623:71;9687:6;9682:3;9623:71;:::i;:::-;9616:78;;9703:65;9761:6;9756:3;9749:4;9742:5;9738:16;9703:65;:::i;:::-;9793:29;9815:6;9793:29;:::i;:::-;9788:3;9784:39;9777:46;;9544:285;9452:377;;;;:::o;9835:313::-;9948:4;9986:2;9975:9;9971:18;9963:26;;10035:9;10029:4;10025:20;10021:1;10010:9;10006:17;9999:47;10063:78;10136:4;10127:6;10063:78;:::i;:::-;10055:86;;9835:313;;;;:::o;10154:98::-;10205:6;10239:5;10233:12;10223:22;;10154:98;;;:::o;10258:116::-;10309:4;10332:3;10324:11;;10362:4;10357:3;10353:14;10345:22;;10258:116;;;:::o;10380:154::-;10423:11;10459:29;10483:3;10477:10;10459:29;:::i;:::-;10522:5;10498:29;;10435:99;10380:154;;;:::o;10540:594::-;10624:5;10655:38;10687:5;10655:38;:::i;:::-;10718:5;10745:40;10779:5;10745:40;:::i;:::-;10733:52;;10804:35;10830:8;10804:35;:::i;:::-;10795:44;;10863:2;10855:6;10852:14;10849:278;;;10934:169;11019:66;10989:6;10985:2;10981:15;10978:1;10974:23;10934:169;:::i;:::-;10911:5;10890:227;10881:236;;10849:278;10630:504;;10540:594;;;:::o;11140:177::-;11280:29;11276:1;11268:6;11264:14;11257:53;11140:177;:::o;11323:366::-;11465:3;11486:67;11550:2;11545:3;11486:67;:::i;:::-;11479:74;;11562:93;11651:3;11562:93;:::i;:::-;11680:2;11675:3;11671:12;11664:19;;11323:366;;;:::o;11695:419::-;11861:4;11899:2;11888:9;11884:18;11876:26;;11948:9;11942:4;11938:20;11934:1;11923:9;11919:17;11912:47;11976:131;12102:4;11976:131;:::i;:::-;11968:139;;11695:419;;;:::o;12120:191::-;12160:3;12179:20;12197:1;12179:20;:::i;:::-;12174:25;;12213:20;12231:1;12213:20;:::i;:::-;12208:25;;12256:1;12253;12249:9;12242:16;;12277:3;12274:1;12271:10;12268:36;;;12284:18;;:::i;:::-;12268:36;12120:191;;;;:::o;12317:442::-;12466:4;12504:2;12493:9;12489:18;12481:26;;12517:71;12585:1;12574:9;12570:17;12561:6;12517:71;:::i;:::-;12598:72;12666:2;12655:9;12651:18;12642:6;12598:72;:::i;:::-;12680;12748:2;12737:9;12733:18;12724:6;12680:72;:::i;:::-;12317:442;;;;;;:::o;12765:222::-;12858:4;12896:2;12885:9;12881:18;12873:26;;12909:71;12977:1;12966:9;12962:17;12953:6;12909:71;:::i;:::-;12765:222;;;;:::o;323:3563:19:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DOMAIN_SEPARATOR_1055":{"entryPoint":1725,"id":1055,"parameterSlots":0,"returnSlots":1},"@_EIP712Name_2360":{"entryPoint":5617,"id":2360,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_2372":{"entryPoint":5676,"id":2372,"parameterSlots":0,"returnSlots":1},"@_approve_715":{"entryPoint":4618,"id":715,"parameterSlots":3,"returnSlots":0},"@_approve_775":{"entryPoint":5896,"id":775,"parameterSlots":4,"returnSlots":0},"@_buildDomainSeparator_2290":{"entryPoint":6544,"id":2290,"parameterSlots":0,"returnSlots":1},"@_checkOwner_84":{"entryPoint":5211,"id":84,"parameterSlots":0,"returnSlots":0},"@_domainSeparatorV4_2269":{"entryPoint":5028,"id":2269,"parameterSlots":0,"returnSlots":1},"@_hashTypedDataV4_2306":{"entryPoint":5822,"id":2306,"parameterSlots":1,"returnSlots":1},"@_msgSender_1130":{"entryPoint":4610,"id":1130,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_823":{"entryPoint":4636,"id":823,"parameterSlots":3,"returnSlots":0},"@_throwError_2145":{"entryPoint":7179,"id":2145,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":5346,"id":146,"parameterSlots":1,"returnSlots":0},"@_transfer_554":{"entryPoint":4784,"id":554,"parameterSlots":3,"returnSlots":0},"@_update_4511":{"entryPoint":6367,"id":4511,"parameterSlots":3,"returnSlots":0},"@_update_631":{"entryPoint":7535,"id":631,"parameterSlots":3,"returnSlots":0},"@_useNonce_1190":{"entryPoint":5735,"id":1190,"parameterSlots":1,"returnSlots":1},"@addressToString_4614":{"entryPoint":2328,"id":4614,"parameterSlots":1,"returnSlots":1},"@allowance_451":{"entryPoint":4303,"id":451,"parameterSlots":2,"returnSlots":1},"@approve_475":{"entryPoint":1586,"id":475,"parameterSlots":2,"returnSlots":1},"@balanceOf_410":{"entryPoint":3101,"id":410,"parameterSlots":1,"returnSlots":1},"@byteLength_1334":{"entryPoint":8200,"id":1334,"parameterSlots":1,"returnSlots":1},"@concatenateAddressWithString_4639":{"entryPoint":3806,"id":4639,"parameterSlots":2,"returnSlots":1},"@decimals_388":{"entryPoint":1716,"id":388,"parameterSlots":0,"returnSlots":1},"@eip712Domain_2348":{"entryPoint":3249,"id":2348,"parameterSlots":0,"returnSlots":7},"@enableTrading_4404":{"entryPoint":3419,"id":4404,"parameterSlots":0,"returnSlots":0},"@initialLaunch_4240":{"entryPoint":3899,"id":4240,"parameterSlots":0,"returnSlots":0},"@investors_4243":{"entryPoint":3580,"id":4243,"parameterSlots":0,"returnSlots":0},"@name_370":{"entryPoint":1440,"id":370,"parameterSlots":0,"returnSlots":1},"@nonces_1045":{"entryPoint":3193,"id":1045,"parameterSlots":1,"returnSlots":1},"@nonces_1175":{"entryPoint":5544,"id":1175,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":3618,"id":67,"parameterSlots":0,"returnSlots":1},"@permit_1028":{"entryPoint":3975,"id":1028,"parameterSlots":7,"returnSlots":0},"@preSale_4237":{"entryPoint":2290,"id":4237,"parameterSlots":0,"returnSlots":0},"@preservationProjects_4249":{"entryPoint":3211,"id":4249,"parameterSlots":0,"returnSlots":0},"@recover_2096":{"entryPoint":5848,"id":2096,"parameterSlots":4,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":3173,"id":98,"parameterSlots":0,"returnSlots":0},"@setCanTrade_4480":{"entryPoint":1740,"id":4480,"parameterSlots":4,"returnSlots":0},"@setTaxHandler_4430":{"entryPoint":2099,"id":4430,"parameterSlots":1,"returnSlots":0},"@symbol_379":{"entryPoint":3660,"id":379,"parameterSlots":0,"returnSlots":1},"@taxHandler_4259":{"entryPoint":1621,"id":4259,"parameterSlots":0,"returnSlots":0},"@teamAndFounders_4246":{"entryPoint":3937,"id":4246,"parameterSlots":0,"returnSlots":0},"@thirdPartyServices_4234":{"entryPoint":4572,"id":4234,"parameterSlots":0,"returnSlots":0},"@toStringWithFallback_1401":{"entryPoint":6694,"id":1401,"parameterSlots":2,"returnSlots":1},"@toString_1302":{"entryPoint":8084,"id":1302,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_2446":{"entryPoint":6870,"id":2446,"parameterSlots":2,"returnSlots":1},"@totalSupply_397":{"entryPoint":1659,"id":397,"parameterSlots":0,"returnSlots":1},"@tradingEnabled_4261":{"entryPoint":2271,"id":4261,"parameterSlots":0,"returnSlots":0},"@transferFrom_507":{"entryPoint":1669,"id":507,"parameterSlots":3,"returnSlots":1},"@transferOwnership_126":{"entryPoint":4438,"id":126,"parameterSlots":1,"returnSlots":0},"@transfer_434":{"entryPoint":3864,"id":434,"parameterSlots":2,"returnSlots":1},"@tryRecover_2060":{"entryPoint":6935,"id":2060,"parameterSlots":4,"returnSlots":3},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":10074,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":8551,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_calldata_ptr":{"entryPoint":9113,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_array$_t_bool_$dyn_calldata_ptr":{"entryPoint":9199,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bool":{"entryPoint":10974,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":10345,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":10140,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":8605,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":10301,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":9414,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":10528,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":8908,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":10366,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_string_memory_ptr":{"entryPoint":10186,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":8626,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_bool_$dyn_calldata_ptr":{"entryPoint":9285,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bool":{"entryPoint":10995,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":9619,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":9459,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":9656,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":8702,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes1_to_t_bytes1_fromStack":{"entryPoint":9545,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":9056,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_ITaxHandler_$4656_to_t_address_fromStack":{"entryPoint":8824,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":8367,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":11403,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_24cf83481f2a8ba90e1c3f2ad6b040e1487e7c57c8c9c5939238bafe3879f015_to_t_string_memory_ptr_fromStack":{"entryPoint":10729,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7_to_t_string_memory_ptr_fromStack":{"entryPoint":11681,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4_to_t_string_memory_ptr_fromStack":{"entryPoint":11325,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ba7cd66ed381e90a6a6f5c81315eeba2f99d0bb92ba7388f35e237d2bf061d88_to_t_string_memory_ptr_fromStack":{"entryPoint":10837,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":9604,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":8866,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":9004,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":11452,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":9474,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":11040,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":11585,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":8717,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":9750,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":9071,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":11488,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":11748,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":11831,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_contract$_ITaxHandler_$4656__to_t_address__fromStack_reversed":{"entryPoint":8839,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8424,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24cf83481f2a8ba90e1c3f2ad6b040e1487e7c57c8c9c5939238bafe3879f015__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10764,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11716,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11360,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ba7cd66ed381e90a6a6f5c81315eeba2f99d0bb92ba7388f35e237d2bf061d88__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10872,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":8881,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":9019,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":9983,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":8458,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":10010,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":9588,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":9560,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":8280,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":9643,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":9571,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":8291,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":11392,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":11128,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":11180,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":8510,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":8690,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes1":{"entryPoint":9501,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":9046,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":8478,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":8572,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":8991,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_ITaxHandler_$4656_to_t_address":{"entryPoint":8806,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":8788,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":8754,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":10059,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":8308,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":10639,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":9934,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":8744,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":11081,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":11900,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":10592,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":10904,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":9887,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":9103,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":9098,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":9108,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":9882,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":8473,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":8468,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":8350,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_24cf83481f2a8ba90e1c3f2ad6b040e1487e7c57c8c9c5939238bafe3879f015":{"entryPoint":10688,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7":{"entryPoint":11640,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4":{"entryPoint":11246,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ba7cd66ed381e90a6a6f5c81315eeba2f99d0bb92ba7388f35e237d2bf061d88":{"entryPoint":10796,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":8528,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":10951,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":10322,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":8582,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":10278,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:27408:22","nodeType":"YulBlock","src":"0:27408:22","statements":[{"body":{"nativeSrc":"66:40:22","nodeType":"YulBlock","src":"66:40:22","statements":[{"nativeSrc":"77:22:22","nodeType":"YulAssignment","src":"77:22:22","value":{"arguments":[{"name":"value","nativeSrc":"93:5:22","nodeType":"YulIdentifier","src":"93:5:22"}],"functionName":{"name":"mload","nativeSrc":"87:5:22","nodeType":"YulIdentifier","src":"87:5:22"},"nativeSrc":"87:12:22","nodeType":"YulFunctionCall","src":"87:12:22"},"variableNames":[{"name":"length","nativeSrc":"77:6:22","nodeType":"YulIdentifier","src":"77:6:22"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"7:99:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"49:5:22","nodeType":"YulTypedName","src":"49:5:22","type":""}],"returnVariables":[{"name":"length","nativeSrc":"59:6:22","nodeType":"YulTypedName","src":"59:6:22","type":""}],"src":"7:99:22"},{"body":{"nativeSrc":"208:73:22","nodeType":"YulBlock","src":"208:73:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"225:3:22","nodeType":"YulIdentifier","src":"225:3:22"},{"name":"length","nativeSrc":"230:6:22","nodeType":"YulIdentifier","src":"230:6:22"}],"functionName":{"name":"mstore","nativeSrc":"218:6:22","nodeType":"YulIdentifier","src":"218:6:22"},"nativeSrc":"218:19:22","nodeType":"YulFunctionCall","src":"218:19:22"},"nativeSrc":"218:19:22","nodeType":"YulExpressionStatement","src":"218:19:22"},{"nativeSrc":"246:29:22","nodeType":"YulAssignment","src":"246:29:22","value":{"arguments":[{"name":"pos","nativeSrc":"265:3:22","nodeType":"YulIdentifier","src":"265:3:22"},{"kind":"number","nativeSrc":"270:4:22","nodeType":"YulLiteral","src":"270:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"261:3:22","nodeType":"YulIdentifier","src":"261:3:22"},"nativeSrc":"261:14:22","nodeType":"YulFunctionCall","src":"261:14:22"},"variableNames":[{"name":"updated_pos","nativeSrc":"246:11:22","nodeType":"YulIdentifier","src":"246:11:22"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"112:169:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"180:3:22","nodeType":"YulTypedName","src":"180:3:22","type":""},{"name":"length","nativeSrc":"185:6:22","nodeType":"YulTypedName","src":"185:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"196:11:22","nodeType":"YulTypedName","src":"196:11:22","type":""}],"src":"112:169:22"},{"body":{"nativeSrc":"349:184:22","nodeType":"YulBlock","src":"349:184:22","statements":[{"nativeSrc":"359:10:22","nodeType":"YulVariableDeclaration","src":"359:10:22","value":{"kind":"number","nativeSrc":"368:1:22","nodeType":"YulLiteral","src":"368:1:22","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"363:1:22","nodeType":"YulTypedName","src":"363:1:22","type":""}]},{"body":{"nativeSrc":"428:63:22","nodeType":"YulBlock","src":"428:63:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"453:3:22","nodeType":"YulIdentifier","src":"453:3:22"},{"name":"i","nativeSrc":"458:1:22","nodeType":"YulIdentifier","src":"458:1:22"}],"functionName":{"name":"add","nativeSrc":"449:3:22","nodeType":"YulIdentifier","src":"449:3:22"},"nativeSrc":"449:11:22","nodeType":"YulFunctionCall","src":"449:11:22"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"472:3:22","nodeType":"YulIdentifier","src":"472:3:22"},{"name":"i","nativeSrc":"477:1:22","nodeType":"YulIdentifier","src":"477:1:22"}],"functionName":{"name":"add","nativeSrc":"468:3:22","nodeType":"YulIdentifier","src":"468:3:22"},"nativeSrc":"468:11:22","nodeType":"YulFunctionCall","src":"468:11:22"}],"functionName":{"name":"mload","nativeSrc":"462:5:22","nodeType":"YulIdentifier","src":"462:5:22"},"nativeSrc":"462:18:22","nodeType":"YulFunctionCall","src":"462:18:22"}],"functionName":{"name":"mstore","nativeSrc":"442:6:22","nodeType":"YulIdentifier","src":"442:6:22"},"nativeSrc":"442:39:22","nodeType":"YulFunctionCall","src":"442:39:22"},"nativeSrc":"442:39:22","nodeType":"YulExpressionStatement","src":"442:39:22"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"389:1:22","nodeType":"YulIdentifier","src":"389:1:22"},{"name":"length","nativeSrc":"392:6:22","nodeType":"YulIdentifier","src":"392:6:22"}],"functionName":{"name":"lt","nativeSrc":"386:2:22","nodeType":"YulIdentifier","src":"386:2:22"},"nativeSrc":"386:13:22","nodeType":"YulFunctionCall","src":"386:13:22"},"nativeSrc":"378:113:22","nodeType":"YulForLoop","post":{"nativeSrc":"400:19:22","nodeType":"YulBlock","src":"400:19:22","statements":[{"nativeSrc":"402:15:22","nodeType":"YulAssignment","src":"402:15:22","value":{"arguments":[{"name":"i","nativeSrc":"411:1:22","nodeType":"YulIdentifier","src":"411:1:22"},{"kind":"number","nativeSrc":"414:2:22","nodeType":"YulLiteral","src":"414:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"407:3:22","nodeType":"YulIdentifier","src":"407:3:22"},"nativeSrc":"407:10:22","nodeType":"YulFunctionCall","src":"407:10:22"},"variableNames":[{"name":"i","nativeSrc":"402:1:22","nodeType":"YulIdentifier","src":"402:1:22"}]}]},"pre":{"nativeSrc":"382:3:22","nodeType":"YulBlock","src":"382:3:22","statements":[]},"src":"378:113:22"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"511:3:22","nodeType":"YulIdentifier","src":"511:3:22"},{"name":"length","nativeSrc":"516:6:22","nodeType":"YulIdentifier","src":"516:6:22"}],"functionName":{"name":"add","nativeSrc":"507:3:22","nodeType":"YulIdentifier","src":"507:3:22"},"nativeSrc":"507:16:22","nodeType":"YulFunctionCall","src":"507:16:22"},{"kind":"number","nativeSrc":"525:1:22","nodeType":"YulLiteral","src":"525:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"500:6:22","nodeType":"YulIdentifier","src":"500:6:22"},"nativeSrc":"500:27:22","nodeType":"YulFunctionCall","src":"500:27:22"},"nativeSrc":"500:27:22","nodeType":"YulExpressionStatement","src":"500:27:22"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"287:246:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"331:3:22","nodeType":"YulTypedName","src":"331:3:22","type":""},{"name":"dst","nativeSrc":"336:3:22","nodeType":"YulTypedName","src":"336:3:22","type":""},{"name":"length","nativeSrc":"341:6:22","nodeType":"YulTypedName","src":"341:6:22","type":""}],"src":"287:246:22"},{"body":{"nativeSrc":"587:54:22","nodeType":"YulBlock","src":"587:54:22","statements":[{"nativeSrc":"597:38:22","nodeType":"YulAssignment","src":"597:38:22","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"615:5:22","nodeType":"YulIdentifier","src":"615:5:22"},{"kind":"number","nativeSrc":"622:2:22","nodeType":"YulLiteral","src":"622:2:22","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"611:3:22","nodeType":"YulIdentifier","src":"611:3:22"},"nativeSrc":"611:14:22","nodeType":"YulFunctionCall","src":"611:14:22"},{"arguments":[{"kind":"number","nativeSrc":"631:2:22","nodeType":"YulLiteral","src":"631:2:22","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"627:3:22","nodeType":"YulIdentifier","src":"627:3:22"},"nativeSrc":"627:7:22","nodeType":"YulFunctionCall","src":"627:7:22"}],"functionName":{"name":"and","nativeSrc":"607:3:22","nodeType":"YulIdentifier","src":"607:3:22"},"nativeSrc":"607:28:22","nodeType":"YulFunctionCall","src":"607:28:22"},"variableNames":[{"name":"result","nativeSrc":"597:6:22","nodeType":"YulIdentifier","src":"597:6:22"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"539:102:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"570:5:22","nodeType":"YulTypedName","src":"570:5:22","type":""}],"returnVariables":[{"name":"result","nativeSrc":"580:6:22","nodeType":"YulTypedName","src":"580:6:22","type":""}],"src":"539:102:22"},{"body":{"nativeSrc":"739:285:22","nodeType":"YulBlock","src":"739:285:22","statements":[{"nativeSrc":"749:53:22","nodeType":"YulVariableDeclaration","src":"749:53:22","value":{"arguments":[{"name":"value","nativeSrc":"796:5:22","nodeType":"YulIdentifier","src":"796:5:22"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"763:32:22","nodeType":"YulIdentifier","src":"763:32:22"},"nativeSrc":"763:39:22","nodeType":"YulFunctionCall","src":"763:39:22"},"variables":[{"name":"length","nativeSrc":"753:6:22","nodeType":"YulTypedName","src":"753:6:22","type":""}]},{"nativeSrc":"811:78:22","nodeType":"YulAssignment","src":"811:78:22","value":{"arguments":[{"name":"pos","nativeSrc":"877:3:22","nodeType":"YulIdentifier","src":"877:3:22"},{"name":"length","nativeSrc":"882:6:22","nodeType":"YulIdentifier","src":"882:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"818:58:22","nodeType":"YulIdentifier","src":"818:58:22"},"nativeSrc":"818:71:22","nodeType":"YulFunctionCall","src":"818:71:22"},"variableNames":[{"name":"pos","nativeSrc":"811:3:22","nodeType":"YulIdentifier","src":"811:3:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"937:5:22","nodeType":"YulIdentifier","src":"937:5:22"},{"kind":"number","nativeSrc":"944:4:22","nodeType":"YulLiteral","src":"944:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"933:3:22","nodeType":"YulIdentifier","src":"933:3:22"},"nativeSrc":"933:16:22","nodeType":"YulFunctionCall","src":"933:16:22"},{"name":"pos","nativeSrc":"951:3:22","nodeType":"YulIdentifier","src":"951:3:22"},{"name":"length","nativeSrc":"956:6:22","nodeType":"YulIdentifier","src":"956:6:22"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"898:34:22","nodeType":"YulIdentifier","src":"898:34:22"},"nativeSrc":"898:65:22","nodeType":"YulFunctionCall","src":"898:65:22"},"nativeSrc":"898:65:22","nodeType":"YulExpressionStatement","src":"898:65:22"},{"nativeSrc":"972:46:22","nodeType":"YulAssignment","src":"972:46:22","value":{"arguments":[{"name":"pos","nativeSrc":"983:3:22","nodeType":"YulIdentifier","src":"983:3:22"},{"arguments":[{"name":"length","nativeSrc":"1010:6:22","nodeType":"YulIdentifier","src":"1010:6:22"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"988:21:22","nodeType":"YulIdentifier","src":"988:21:22"},"nativeSrc":"988:29:22","nodeType":"YulFunctionCall","src":"988:29:22"}],"functionName":{"name":"add","nativeSrc":"979:3:22","nodeType":"YulIdentifier","src":"979:3:22"},"nativeSrc":"979:39:22","nodeType":"YulFunctionCall","src":"979:39:22"},"variableNames":[{"name":"end","nativeSrc":"972:3:22","nodeType":"YulIdentifier","src":"972:3:22"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"647:377:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"720:5:22","nodeType":"YulTypedName","src":"720:5:22","type":""},{"name":"pos","nativeSrc":"727:3:22","nodeType":"YulTypedName","src":"727:3:22","type":""}],"returnVariables":[{"name":"end","nativeSrc":"735:3:22","nodeType":"YulTypedName","src":"735:3:22","type":""}],"src":"647:377:22"},{"body":{"nativeSrc":"1148:195:22","nodeType":"YulBlock","src":"1148:195:22","statements":[{"nativeSrc":"1158:26:22","nodeType":"YulAssignment","src":"1158:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"1170:9:22","nodeType":"YulIdentifier","src":"1170:9:22"},{"kind":"number","nativeSrc":"1181:2:22","nodeType":"YulLiteral","src":"1181:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1166:3:22","nodeType":"YulIdentifier","src":"1166:3:22"},"nativeSrc":"1166:18:22","nodeType":"YulFunctionCall","src":"1166:18:22"},"variableNames":[{"name":"tail","nativeSrc":"1158:4:22","nodeType":"YulIdentifier","src":"1158:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1205:9:22","nodeType":"YulIdentifier","src":"1205:9:22"},{"kind":"number","nativeSrc":"1216:1:22","nodeType":"YulLiteral","src":"1216:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1201:3:22","nodeType":"YulIdentifier","src":"1201:3:22"},"nativeSrc":"1201:17:22","nodeType":"YulFunctionCall","src":"1201:17:22"},{"arguments":[{"name":"tail","nativeSrc":"1224:4:22","nodeType":"YulIdentifier","src":"1224:4:22"},{"name":"headStart","nativeSrc":"1230:9:22","nodeType":"YulIdentifier","src":"1230:9:22"}],"functionName":{"name":"sub","nativeSrc":"1220:3:22","nodeType":"YulIdentifier","src":"1220:3:22"},"nativeSrc":"1220:20:22","nodeType":"YulFunctionCall","src":"1220:20:22"}],"functionName":{"name":"mstore","nativeSrc":"1194:6:22","nodeType":"YulIdentifier","src":"1194:6:22"},"nativeSrc":"1194:47:22","nodeType":"YulFunctionCall","src":"1194:47:22"},"nativeSrc":"1194:47:22","nodeType":"YulExpressionStatement","src":"1194:47:22"},{"nativeSrc":"1250:86:22","nodeType":"YulAssignment","src":"1250:86:22","value":{"arguments":[{"name":"value0","nativeSrc":"1322:6:22","nodeType":"YulIdentifier","src":"1322:6:22"},{"name":"tail","nativeSrc":"1331:4:22","nodeType":"YulIdentifier","src":"1331:4:22"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"1258:63:22","nodeType":"YulIdentifier","src":"1258:63:22"},"nativeSrc":"1258:78:22","nodeType":"YulFunctionCall","src":"1258:78:22"},"variableNames":[{"name":"tail","nativeSrc":"1250:4:22","nodeType":"YulIdentifier","src":"1250:4:22"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1030:313:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1120:9:22","nodeType":"YulTypedName","src":"1120:9:22","type":""},{"name":"value0","nativeSrc":"1132:6:22","nodeType":"YulTypedName","src":"1132:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1143:4:22","nodeType":"YulTypedName","src":"1143:4:22","type":""}],"src":"1030:313:22"},{"body":{"nativeSrc":"1389:35:22","nodeType":"YulBlock","src":"1389:35:22","statements":[{"nativeSrc":"1399:19:22","nodeType":"YulAssignment","src":"1399:19:22","value":{"arguments":[{"kind":"number","nativeSrc":"1415:2:22","nodeType":"YulLiteral","src":"1415:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1409:5:22","nodeType":"YulIdentifier","src":"1409:5:22"},"nativeSrc":"1409:9:22","nodeType":"YulFunctionCall","src":"1409:9:22"},"variableNames":[{"name":"memPtr","nativeSrc":"1399:6:22","nodeType":"YulIdentifier","src":"1399:6:22"}]}]},"name":"allocate_unbounded","nativeSrc":"1349:75:22","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"1382:6:22","nodeType":"YulTypedName","src":"1382:6:22","type":""}],"src":"1349:75:22"},{"body":{"nativeSrc":"1519:28:22","nodeType":"YulBlock","src":"1519:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1536:1:22","nodeType":"YulLiteral","src":"1536:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"1539:1:22","nodeType":"YulLiteral","src":"1539:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1529:6:22","nodeType":"YulIdentifier","src":"1529:6:22"},"nativeSrc":"1529:12:22","nodeType":"YulFunctionCall","src":"1529:12:22"},"nativeSrc":"1529:12:22","nodeType":"YulExpressionStatement","src":"1529:12:22"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1430:117:22","nodeType":"YulFunctionDefinition","src":"1430:117:22"},{"body":{"nativeSrc":"1642:28:22","nodeType":"YulBlock","src":"1642:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1659:1:22","nodeType":"YulLiteral","src":"1659:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"1662:1:22","nodeType":"YulLiteral","src":"1662:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1652:6:22","nodeType":"YulIdentifier","src":"1652:6:22"},"nativeSrc":"1652:12:22","nodeType":"YulFunctionCall","src":"1652:12:22"},"nativeSrc":"1652:12:22","nodeType":"YulExpressionStatement","src":"1652:12:22"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"1553:117:22","nodeType":"YulFunctionDefinition","src":"1553:117:22"},{"body":{"nativeSrc":"1721:81:22","nodeType":"YulBlock","src":"1721:81:22","statements":[{"nativeSrc":"1731:65:22","nodeType":"YulAssignment","src":"1731:65:22","value":{"arguments":[{"name":"value","nativeSrc":"1746:5:22","nodeType":"YulIdentifier","src":"1746:5:22"},{"kind":"number","nativeSrc":"1753:42:22","nodeType":"YulLiteral","src":"1753:42:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1742:3:22","nodeType":"YulIdentifier","src":"1742:3:22"},"nativeSrc":"1742:54:22","nodeType":"YulFunctionCall","src":"1742:54:22"},"variableNames":[{"name":"cleaned","nativeSrc":"1731:7:22","nodeType":"YulIdentifier","src":"1731:7:22"}]}]},"name":"cleanup_t_uint160","nativeSrc":"1676:126:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1703:5:22","nodeType":"YulTypedName","src":"1703:5:22","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1713:7:22","nodeType":"YulTypedName","src":"1713:7:22","type":""}],"src":"1676:126:22"},{"body":{"nativeSrc":"1853:51:22","nodeType":"YulBlock","src":"1853:51:22","statements":[{"nativeSrc":"1863:35:22","nodeType":"YulAssignment","src":"1863:35:22","value":{"arguments":[{"name":"value","nativeSrc":"1892:5:22","nodeType":"YulIdentifier","src":"1892:5:22"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1874:17:22","nodeType":"YulIdentifier","src":"1874:17:22"},"nativeSrc":"1874:24:22","nodeType":"YulFunctionCall","src":"1874:24:22"},"variableNames":[{"name":"cleaned","nativeSrc":"1863:7:22","nodeType":"YulIdentifier","src":"1863:7:22"}]}]},"name":"cleanup_t_address","nativeSrc":"1808:96:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1835:5:22","nodeType":"YulTypedName","src":"1835:5:22","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1845:7:22","nodeType":"YulTypedName","src":"1845:7:22","type":""}],"src":"1808:96:22"},{"body":{"nativeSrc":"1953:79:22","nodeType":"YulBlock","src":"1953:79:22","statements":[{"body":{"nativeSrc":"2010:16:22","nodeType":"YulBlock","src":"2010:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2019:1:22","nodeType":"YulLiteral","src":"2019:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"2022:1:22","nodeType":"YulLiteral","src":"2022:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2012:6:22","nodeType":"YulIdentifier","src":"2012:6:22"},"nativeSrc":"2012:12:22","nodeType":"YulFunctionCall","src":"2012:12:22"},"nativeSrc":"2012:12:22","nodeType":"YulExpressionStatement","src":"2012:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1976:5:22","nodeType":"YulIdentifier","src":"1976:5:22"},{"arguments":[{"name":"value","nativeSrc":"2001:5:22","nodeType":"YulIdentifier","src":"2001:5:22"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1983:17:22","nodeType":"YulIdentifier","src":"1983:17:22"},"nativeSrc":"1983:24:22","nodeType":"YulFunctionCall","src":"1983:24:22"}],"functionName":{"name":"eq","nativeSrc":"1973:2:22","nodeType":"YulIdentifier","src":"1973:2:22"},"nativeSrc":"1973:35:22","nodeType":"YulFunctionCall","src":"1973:35:22"}],"functionName":{"name":"iszero","nativeSrc":"1966:6:22","nodeType":"YulIdentifier","src":"1966:6:22"},"nativeSrc":"1966:43:22","nodeType":"YulFunctionCall","src":"1966:43:22"},"nativeSrc":"1963:63:22","nodeType":"YulIf","src":"1963:63:22"}]},"name":"validator_revert_t_address","nativeSrc":"1910:122:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1946:5:22","nodeType":"YulTypedName","src":"1946:5:22","type":""}],"src":"1910:122:22"},{"body":{"nativeSrc":"2090:87:22","nodeType":"YulBlock","src":"2090:87:22","statements":[{"nativeSrc":"2100:29:22","nodeType":"YulAssignment","src":"2100:29:22","value":{"arguments":[{"name":"offset","nativeSrc":"2122:6:22","nodeType":"YulIdentifier","src":"2122:6:22"}],"functionName":{"name":"calldataload","nativeSrc":"2109:12:22","nodeType":"YulIdentifier","src":"2109:12:22"},"nativeSrc":"2109:20:22","nodeType":"YulFunctionCall","src":"2109:20:22"},"variableNames":[{"name":"value","nativeSrc":"2100:5:22","nodeType":"YulIdentifier","src":"2100:5:22"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2165:5:22","nodeType":"YulIdentifier","src":"2165:5:22"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"2138:26:22","nodeType":"YulIdentifier","src":"2138:26:22"},"nativeSrc":"2138:33:22","nodeType":"YulFunctionCall","src":"2138:33:22"},"nativeSrc":"2138:33:22","nodeType":"YulExpressionStatement","src":"2138:33:22"}]},"name":"abi_decode_t_address","nativeSrc":"2038:139:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2068:6:22","nodeType":"YulTypedName","src":"2068:6:22","type":""},{"name":"end","nativeSrc":"2076:3:22","nodeType":"YulTypedName","src":"2076:3:22","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2084:5:22","nodeType":"YulTypedName","src":"2084:5:22","type":""}],"src":"2038:139:22"},{"body":{"nativeSrc":"2228:32:22","nodeType":"YulBlock","src":"2228:32:22","statements":[{"nativeSrc":"2238:16:22","nodeType":"YulAssignment","src":"2238:16:22","value":{"name":"value","nativeSrc":"2249:5:22","nodeType":"YulIdentifier","src":"2249:5:22"},"variableNames":[{"name":"cleaned","nativeSrc":"2238:7:22","nodeType":"YulIdentifier","src":"2238:7:22"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2183:77:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2210:5:22","nodeType":"YulTypedName","src":"2210:5:22","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2220:7:22","nodeType":"YulTypedName","src":"2220:7:22","type":""}],"src":"2183:77:22"},{"body":{"nativeSrc":"2309:79:22","nodeType":"YulBlock","src":"2309:79:22","statements":[{"body":{"nativeSrc":"2366:16:22","nodeType":"YulBlock","src":"2366:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2375:1:22","nodeType":"YulLiteral","src":"2375:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"2378:1:22","nodeType":"YulLiteral","src":"2378:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2368:6:22","nodeType":"YulIdentifier","src":"2368:6:22"},"nativeSrc":"2368:12:22","nodeType":"YulFunctionCall","src":"2368:12:22"},"nativeSrc":"2368:12:22","nodeType":"YulExpressionStatement","src":"2368:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2332:5:22","nodeType":"YulIdentifier","src":"2332:5:22"},{"arguments":[{"name":"value","nativeSrc":"2357:5:22","nodeType":"YulIdentifier","src":"2357:5:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2339:17:22","nodeType":"YulIdentifier","src":"2339:17:22"},"nativeSrc":"2339:24:22","nodeType":"YulFunctionCall","src":"2339:24:22"}],"functionName":{"name":"eq","nativeSrc":"2329:2:22","nodeType":"YulIdentifier","src":"2329:2:22"},"nativeSrc":"2329:35:22","nodeType":"YulFunctionCall","src":"2329:35:22"}],"functionName":{"name":"iszero","nativeSrc":"2322:6:22","nodeType":"YulIdentifier","src":"2322:6:22"},"nativeSrc":"2322:43:22","nodeType":"YulFunctionCall","src":"2322:43:22"},"nativeSrc":"2319:63:22","nodeType":"YulIf","src":"2319:63:22"}]},"name":"validator_revert_t_uint256","nativeSrc":"2266:122:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2302:5:22","nodeType":"YulTypedName","src":"2302:5:22","type":""}],"src":"2266:122:22"},{"body":{"nativeSrc":"2446:87:22","nodeType":"YulBlock","src":"2446:87:22","statements":[{"nativeSrc":"2456:29:22","nodeType":"YulAssignment","src":"2456:29:22","value":{"arguments":[{"name":"offset","nativeSrc":"2478:6:22","nodeType":"YulIdentifier","src":"2478:6:22"}],"functionName":{"name":"calldataload","nativeSrc":"2465:12:22","nodeType":"YulIdentifier","src":"2465:12:22"},"nativeSrc":"2465:20:22","nodeType":"YulFunctionCall","src":"2465:20:22"},"variableNames":[{"name":"value","nativeSrc":"2456:5:22","nodeType":"YulIdentifier","src":"2456:5:22"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2521:5:22","nodeType":"YulIdentifier","src":"2521:5:22"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"2494:26:22","nodeType":"YulIdentifier","src":"2494:26:22"},"nativeSrc":"2494:33:22","nodeType":"YulFunctionCall","src":"2494:33:22"},"nativeSrc":"2494:33:22","nodeType":"YulExpressionStatement","src":"2494:33:22"}]},"name":"abi_decode_t_uint256","nativeSrc":"2394:139:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2424:6:22","nodeType":"YulTypedName","src":"2424:6:22","type":""},{"name":"end","nativeSrc":"2432:3:22","nodeType":"YulTypedName","src":"2432:3:22","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2440:5:22","nodeType":"YulTypedName","src":"2440:5:22","type":""}],"src":"2394:139:22"},{"body":{"nativeSrc":"2622:391:22","nodeType":"YulBlock","src":"2622:391:22","statements":[{"body":{"nativeSrc":"2668:83:22","nodeType":"YulBlock","src":"2668:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2670:77:22","nodeType":"YulIdentifier","src":"2670:77:22"},"nativeSrc":"2670:79:22","nodeType":"YulFunctionCall","src":"2670:79:22"},"nativeSrc":"2670:79:22","nodeType":"YulExpressionStatement","src":"2670:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2643:7:22","nodeType":"YulIdentifier","src":"2643:7:22"},{"name":"headStart","nativeSrc":"2652:9:22","nodeType":"YulIdentifier","src":"2652:9:22"}],"functionName":{"name":"sub","nativeSrc":"2639:3:22","nodeType":"YulIdentifier","src":"2639:3:22"},"nativeSrc":"2639:23:22","nodeType":"YulFunctionCall","src":"2639:23:22"},{"kind":"number","nativeSrc":"2664:2:22","nodeType":"YulLiteral","src":"2664:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2635:3:22","nodeType":"YulIdentifier","src":"2635:3:22"},"nativeSrc":"2635:32:22","nodeType":"YulFunctionCall","src":"2635:32:22"},"nativeSrc":"2632:119:22","nodeType":"YulIf","src":"2632:119:22"},{"nativeSrc":"2761:117:22","nodeType":"YulBlock","src":"2761:117:22","statements":[{"nativeSrc":"2776:15:22","nodeType":"YulVariableDeclaration","src":"2776:15:22","value":{"kind":"number","nativeSrc":"2790:1:22","nodeType":"YulLiteral","src":"2790:1:22","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2780:6:22","nodeType":"YulTypedName","src":"2780:6:22","type":""}]},{"nativeSrc":"2805:63:22","nodeType":"YulAssignment","src":"2805:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2840:9:22","nodeType":"YulIdentifier","src":"2840:9:22"},{"name":"offset","nativeSrc":"2851:6:22","nodeType":"YulIdentifier","src":"2851:6:22"}],"functionName":{"name":"add","nativeSrc":"2836:3:22","nodeType":"YulIdentifier","src":"2836:3:22"},"nativeSrc":"2836:22:22","nodeType":"YulFunctionCall","src":"2836:22:22"},{"name":"dataEnd","nativeSrc":"2860:7:22","nodeType":"YulIdentifier","src":"2860:7:22"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2815:20:22","nodeType":"YulIdentifier","src":"2815:20:22"},"nativeSrc":"2815:53:22","nodeType":"YulFunctionCall","src":"2815:53:22"},"variableNames":[{"name":"value0","nativeSrc":"2805:6:22","nodeType":"YulIdentifier","src":"2805:6:22"}]}]},{"nativeSrc":"2888:118:22","nodeType":"YulBlock","src":"2888:118:22","statements":[{"nativeSrc":"2903:16:22","nodeType":"YulVariableDeclaration","src":"2903:16:22","value":{"kind":"number","nativeSrc":"2917:2:22","nodeType":"YulLiteral","src":"2917:2:22","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2907:6:22","nodeType":"YulTypedName","src":"2907:6:22","type":""}]},{"nativeSrc":"2933:63:22","nodeType":"YulAssignment","src":"2933:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2968:9:22","nodeType":"YulIdentifier","src":"2968:9:22"},{"name":"offset","nativeSrc":"2979:6:22","nodeType":"YulIdentifier","src":"2979:6:22"}],"functionName":{"name":"add","nativeSrc":"2964:3:22","nodeType":"YulIdentifier","src":"2964:3:22"},"nativeSrc":"2964:22:22","nodeType":"YulFunctionCall","src":"2964:22:22"},{"name":"dataEnd","nativeSrc":"2988:7:22","nodeType":"YulIdentifier","src":"2988:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2943:20:22","nodeType":"YulIdentifier","src":"2943:20:22"},"nativeSrc":"2943:53:22","nodeType":"YulFunctionCall","src":"2943:53:22"},"variableNames":[{"name":"value1","nativeSrc":"2933:6:22","nodeType":"YulIdentifier","src":"2933:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"2539:474:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2584:9:22","nodeType":"YulTypedName","src":"2584:9:22","type":""},{"name":"dataEnd","nativeSrc":"2595:7:22","nodeType":"YulTypedName","src":"2595:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2607:6:22","nodeType":"YulTypedName","src":"2607:6:22","type":""},{"name":"value1","nativeSrc":"2615:6:22","nodeType":"YulTypedName","src":"2615:6:22","type":""}],"src":"2539:474:22"},{"body":{"nativeSrc":"3061:48:22","nodeType":"YulBlock","src":"3061:48:22","statements":[{"nativeSrc":"3071:32:22","nodeType":"YulAssignment","src":"3071:32:22","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3096:5:22","nodeType":"YulIdentifier","src":"3096:5:22"}],"functionName":{"name":"iszero","nativeSrc":"3089:6:22","nodeType":"YulIdentifier","src":"3089:6:22"},"nativeSrc":"3089:13:22","nodeType":"YulFunctionCall","src":"3089:13:22"}],"functionName":{"name":"iszero","nativeSrc":"3082:6:22","nodeType":"YulIdentifier","src":"3082:6:22"},"nativeSrc":"3082:21:22","nodeType":"YulFunctionCall","src":"3082:21:22"},"variableNames":[{"name":"cleaned","nativeSrc":"3071:7:22","nodeType":"YulIdentifier","src":"3071:7:22"}]}]},"name":"cleanup_t_bool","nativeSrc":"3019:90:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3043:5:22","nodeType":"YulTypedName","src":"3043:5:22","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3053:7:22","nodeType":"YulTypedName","src":"3053:7:22","type":""}],"src":"3019:90:22"},{"body":{"nativeSrc":"3174:50:22","nodeType":"YulBlock","src":"3174:50:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3191:3:22","nodeType":"YulIdentifier","src":"3191:3:22"},{"arguments":[{"name":"value","nativeSrc":"3211:5:22","nodeType":"YulIdentifier","src":"3211:5:22"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"3196:14:22","nodeType":"YulIdentifier","src":"3196:14:22"},"nativeSrc":"3196:21:22","nodeType":"YulFunctionCall","src":"3196:21:22"}],"functionName":{"name":"mstore","nativeSrc":"3184:6:22","nodeType":"YulIdentifier","src":"3184:6:22"},"nativeSrc":"3184:34:22","nodeType":"YulFunctionCall","src":"3184:34:22"},"nativeSrc":"3184:34:22","nodeType":"YulExpressionStatement","src":"3184:34:22"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3115:109:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3162:5:22","nodeType":"YulTypedName","src":"3162:5:22","type":""},{"name":"pos","nativeSrc":"3169:3:22","nodeType":"YulTypedName","src":"3169:3:22","type":""}],"src":"3115:109:22"},{"body":{"nativeSrc":"3322:118:22","nodeType":"YulBlock","src":"3322:118:22","statements":[{"nativeSrc":"3332:26:22","nodeType":"YulAssignment","src":"3332:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"3344:9:22","nodeType":"YulIdentifier","src":"3344:9:22"},{"kind":"number","nativeSrc":"3355:2:22","nodeType":"YulLiteral","src":"3355:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3340:3:22","nodeType":"YulIdentifier","src":"3340:3:22"},"nativeSrc":"3340:18:22","nodeType":"YulFunctionCall","src":"3340:18:22"},"variableNames":[{"name":"tail","nativeSrc":"3332:4:22","nodeType":"YulIdentifier","src":"3332:4:22"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3406:6:22","nodeType":"YulIdentifier","src":"3406:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"3419:9:22","nodeType":"YulIdentifier","src":"3419:9:22"},{"kind":"number","nativeSrc":"3430:1:22","nodeType":"YulLiteral","src":"3430:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3415:3:22","nodeType":"YulIdentifier","src":"3415:3:22"},"nativeSrc":"3415:17:22","nodeType":"YulFunctionCall","src":"3415:17:22"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3368:37:22","nodeType":"YulIdentifier","src":"3368:37:22"},"nativeSrc":"3368:65:22","nodeType":"YulFunctionCall","src":"3368:65:22"},"nativeSrc":"3368:65:22","nodeType":"YulExpressionStatement","src":"3368:65:22"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"3230:210:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3294:9:22","nodeType":"YulTypedName","src":"3294:9:22","type":""},{"name":"value0","nativeSrc":"3306:6:22","nodeType":"YulTypedName","src":"3306:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3317:4:22","nodeType":"YulTypedName","src":"3317:4:22","type":""}],"src":"3230:210:22"},{"body":{"nativeSrc":"3478:28:22","nodeType":"YulBlock","src":"3478:28:22","statements":[{"nativeSrc":"3488:12:22","nodeType":"YulAssignment","src":"3488:12:22","value":{"name":"value","nativeSrc":"3495:5:22","nodeType":"YulIdentifier","src":"3495:5:22"},"variableNames":[{"name":"ret","nativeSrc":"3488:3:22","nodeType":"YulIdentifier","src":"3488:3:22"}]}]},"name":"identity","nativeSrc":"3446:60:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3464:5:22","nodeType":"YulTypedName","src":"3464:5:22","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"3474:3:22","nodeType":"YulTypedName","src":"3474:3:22","type":""}],"src":"3446:60:22"},{"body":{"nativeSrc":"3572:82:22","nodeType":"YulBlock","src":"3572:82:22","statements":[{"nativeSrc":"3582:66:22","nodeType":"YulAssignment","src":"3582:66:22","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3640:5:22","nodeType":"YulIdentifier","src":"3640:5:22"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"3622:17:22","nodeType":"YulIdentifier","src":"3622:17:22"},"nativeSrc":"3622:24:22","nodeType":"YulFunctionCall","src":"3622:24:22"}],"functionName":{"name":"identity","nativeSrc":"3613:8:22","nodeType":"YulIdentifier","src":"3613:8:22"},"nativeSrc":"3613:34:22","nodeType":"YulFunctionCall","src":"3613:34:22"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"3595:17:22","nodeType":"YulIdentifier","src":"3595:17:22"},"nativeSrc":"3595:53:22","nodeType":"YulFunctionCall","src":"3595:53:22"},"variableNames":[{"name":"converted","nativeSrc":"3582:9:22","nodeType":"YulIdentifier","src":"3582:9:22"}]}]},"name":"convert_t_uint160_to_t_uint160","nativeSrc":"3512:142:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3552:5:22","nodeType":"YulTypedName","src":"3552:5:22","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"3562:9:22","nodeType":"YulTypedName","src":"3562:9:22","type":""}],"src":"3512:142:22"},{"body":{"nativeSrc":"3720:66:22","nodeType":"YulBlock","src":"3720:66:22","statements":[{"nativeSrc":"3730:50:22","nodeType":"YulAssignment","src":"3730:50:22","value":{"arguments":[{"name":"value","nativeSrc":"3774:5:22","nodeType":"YulIdentifier","src":"3774:5:22"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nativeSrc":"3743:30:22","nodeType":"YulIdentifier","src":"3743:30:22"},"nativeSrc":"3743:37:22","nodeType":"YulFunctionCall","src":"3743:37:22"},"variableNames":[{"name":"converted","nativeSrc":"3730:9:22","nodeType":"YulIdentifier","src":"3730:9:22"}]}]},"name":"convert_t_uint160_to_t_address","nativeSrc":"3660:126:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3700:5:22","nodeType":"YulTypedName","src":"3700:5:22","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"3710:9:22","nodeType":"YulTypedName","src":"3710:9:22","type":""}],"src":"3660:126:22"},{"body":{"nativeSrc":"3872:66:22","nodeType":"YulBlock","src":"3872:66:22","statements":[{"nativeSrc":"3882:50:22","nodeType":"YulAssignment","src":"3882:50:22","value":{"arguments":[{"name":"value","nativeSrc":"3926:5:22","nodeType":"YulIdentifier","src":"3926:5:22"}],"functionName":{"name":"convert_t_uint160_to_t_address","nativeSrc":"3895:30:22","nodeType":"YulIdentifier","src":"3895:30:22"},"nativeSrc":"3895:37:22","nodeType":"YulFunctionCall","src":"3895:37:22"},"variableNames":[{"name":"converted","nativeSrc":"3882:9:22","nodeType":"YulIdentifier","src":"3882:9:22"}]}]},"name":"convert_t_contract$_ITaxHandler_$4656_to_t_address","nativeSrc":"3792:146:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3852:5:22","nodeType":"YulTypedName","src":"3852:5:22","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"3862:9:22","nodeType":"YulTypedName","src":"3862:9:22","type":""}],"src":"3792:146:22"},{"body":{"nativeSrc":"4029:86:22","nodeType":"YulBlock","src":"4029:86:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4046:3:22","nodeType":"YulIdentifier","src":"4046:3:22"},{"arguments":[{"name":"value","nativeSrc":"4102:5:22","nodeType":"YulIdentifier","src":"4102:5:22"}],"functionName":{"name":"convert_t_contract$_ITaxHandler_$4656_to_t_address","nativeSrc":"4051:50:22","nodeType":"YulIdentifier","src":"4051:50:22"},"nativeSrc":"4051:57:22","nodeType":"YulFunctionCall","src":"4051:57:22"}],"functionName":{"name":"mstore","nativeSrc":"4039:6:22","nodeType":"YulIdentifier","src":"4039:6:22"},"nativeSrc":"4039:70:22","nodeType":"YulFunctionCall","src":"4039:70:22"},"nativeSrc":"4039:70:22","nodeType":"YulExpressionStatement","src":"4039:70:22"}]},"name":"abi_encode_t_contract$_ITaxHandler_$4656_to_t_address_fromStack","nativeSrc":"3944:171:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4017:5:22","nodeType":"YulTypedName","src":"4017:5:22","type":""},{"name":"pos","nativeSrc":"4024:3:22","nodeType":"YulTypedName","src":"4024:3:22","type":""}],"src":"3944:171:22"},{"body":{"nativeSrc":"4239:144:22","nodeType":"YulBlock","src":"4239:144:22","statements":[{"nativeSrc":"4249:26:22","nodeType":"YulAssignment","src":"4249:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"4261:9:22","nodeType":"YulIdentifier","src":"4261:9:22"},{"kind":"number","nativeSrc":"4272:2:22","nodeType":"YulLiteral","src":"4272:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4257:3:22","nodeType":"YulIdentifier","src":"4257:3:22"},"nativeSrc":"4257:18:22","nodeType":"YulFunctionCall","src":"4257:18:22"},"variableNames":[{"name":"tail","nativeSrc":"4249:4:22","nodeType":"YulIdentifier","src":"4249:4:22"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4349:6:22","nodeType":"YulIdentifier","src":"4349:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"4362:9:22","nodeType":"YulIdentifier","src":"4362:9:22"},{"kind":"number","nativeSrc":"4373:1:22","nodeType":"YulLiteral","src":"4373:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4358:3:22","nodeType":"YulIdentifier","src":"4358:3:22"},"nativeSrc":"4358:17:22","nodeType":"YulFunctionCall","src":"4358:17:22"}],"functionName":{"name":"abi_encode_t_contract$_ITaxHandler_$4656_to_t_address_fromStack","nativeSrc":"4285:63:22","nodeType":"YulIdentifier","src":"4285:63:22"},"nativeSrc":"4285:91:22","nodeType":"YulFunctionCall","src":"4285:91:22"},"nativeSrc":"4285:91:22","nodeType":"YulExpressionStatement","src":"4285:91:22"}]},"name":"abi_encode_tuple_t_contract$_ITaxHandler_$4656__to_t_address__fromStack_reversed","nativeSrc":"4121:262:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4211:9:22","nodeType":"YulTypedName","src":"4211:9:22","type":""},{"name":"value0","nativeSrc":"4223:6:22","nodeType":"YulTypedName","src":"4223:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4234:4:22","nodeType":"YulTypedName","src":"4234:4:22","type":""}],"src":"4121:262:22"},{"body":{"nativeSrc":"4454:53:22","nodeType":"YulBlock","src":"4454:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4471:3:22","nodeType":"YulIdentifier","src":"4471:3:22"},{"arguments":[{"name":"value","nativeSrc":"4494:5:22","nodeType":"YulIdentifier","src":"4494:5:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"4476:17:22","nodeType":"YulIdentifier","src":"4476:17:22"},"nativeSrc":"4476:24:22","nodeType":"YulFunctionCall","src":"4476:24:22"}],"functionName":{"name":"mstore","nativeSrc":"4464:6:22","nodeType":"YulIdentifier","src":"4464:6:22"},"nativeSrc":"4464:37:22","nodeType":"YulFunctionCall","src":"4464:37:22"},"nativeSrc":"4464:37:22","nodeType":"YulExpressionStatement","src":"4464:37:22"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"4389:118:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4442:5:22","nodeType":"YulTypedName","src":"4442:5:22","type":""},{"name":"pos","nativeSrc":"4449:3:22","nodeType":"YulTypedName","src":"4449:3:22","type":""}],"src":"4389:118:22"},{"body":{"nativeSrc":"4611:124:22","nodeType":"YulBlock","src":"4611:124:22","statements":[{"nativeSrc":"4621:26:22","nodeType":"YulAssignment","src":"4621:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"4633:9:22","nodeType":"YulIdentifier","src":"4633:9:22"},{"kind":"number","nativeSrc":"4644:2:22","nodeType":"YulLiteral","src":"4644:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4629:3:22","nodeType":"YulIdentifier","src":"4629:3:22"},"nativeSrc":"4629:18:22","nodeType":"YulFunctionCall","src":"4629:18:22"},"variableNames":[{"name":"tail","nativeSrc":"4621:4:22","nodeType":"YulIdentifier","src":"4621:4:22"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4701:6:22","nodeType":"YulIdentifier","src":"4701:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"4714:9:22","nodeType":"YulIdentifier","src":"4714:9:22"},{"kind":"number","nativeSrc":"4725:1:22","nodeType":"YulLiteral","src":"4725:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4710:3:22","nodeType":"YulIdentifier","src":"4710:3:22"},"nativeSrc":"4710:17:22","nodeType":"YulFunctionCall","src":"4710:17:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"4657:43:22","nodeType":"YulIdentifier","src":"4657:43:22"},"nativeSrc":"4657:71:22","nodeType":"YulFunctionCall","src":"4657:71:22"},"nativeSrc":"4657:71:22","nodeType":"YulExpressionStatement","src":"4657:71:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"4513:222:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4583:9:22","nodeType":"YulTypedName","src":"4583:9:22","type":""},{"name":"value0","nativeSrc":"4595:6:22","nodeType":"YulTypedName","src":"4595:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4606:4:22","nodeType":"YulTypedName","src":"4606:4:22","type":""}],"src":"4513:222:22"},{"body":{"nativeSrc":"4841:519:22","nodeType":"YulBlock","src":"4841:519:22","statements":[{"body":{"nativeSrc":"4887:83:22","nodeType":"YulBlock","src":"4887:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4889:77:22","nodeType":"YulIdentifier","src":"4889:77:22"},"nativeSrc":"4889:79:22","nodeType":"YulFunctionCall","src":"4889:79:22"},"nativeSrc":"4889:79:22","nodeType":"YulExpressionStatement","src":"4889:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4862:7:22","nodeType":"YulIdentifier","src":"4862:7:22"},{"name":"headStart","nativeSrc":"4871:9:22","nodeType":"YulIdentifier","src":"4871:9:22"}],"functionName":{"name":"sub","nativeSrc":"4858:3:22","nodeType":"YulIdentifier","src":"4858:3:22"},"nativeSrc":"4858:23:22","nodeType":"YulFunctionCall","src":"4858:23:22"},{"kind":"number","nativeSrc":"4883:2:22","nodeType":"YulLiteral","src":"4883:2:22","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"4854:3:22","nodeType":"YulIdentifier","src":"4854:3:22"},"nativeSrc":"4854:32:22","nodeType":"YulFunctionCall","src":"4854:32:22"},"nativeSrc":"4851:119:22","nodeType":"YulIf","src":"4851:119:22"},{"nativeSrc":"4980:117:22","nodeType":"YulBlock","src":"4980:117:22","statements":[{"nativeSrc":"4995:15:22","nodeType":"YulVariableDeclaration","src":"4995:15:22","value":{"kind":"number","nativeSrc":"5009:1:22","nodeType":"YulLiteral","src":"5009:1:22","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4999:6:22","nodeType":"YulTypedName","src":"4999:6:22","type":""}]},{"nativeSrc":"5024:63:22","nodeType":"YulAssignment","src":"5024:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5059:9:22","nodeType":"YulIdentifier","src":"5059:9:22"},{"name":"offset","nativeSrc":"5070:6:22","nodeType":"YulIdentifier","src":"5070:6:22"}],"functionName":{"name":"add","nativeSrc":"5055:3:22","nodeType":"YulIdentifier","src":"5055:3:22"},"nativeSrc":"5055:22:22","nodeType":"YulFunctionCall","src":"5055:22:22"},{"name":"dataEnd","nativeSrc":"5079:7:22","nodeType":"YulIdentifier","src":"5079:7:22"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5034:20:22","nodeType":"YulIdentifier","src":"5034:20:22"},"nativeSrc":"5034:53:22","nodeType":"YulFunctionCall","src":"5034:53:22"},"variableNames":[{"name":"value0","nativeSrc":"5024:6:22","nodeType":"YulIdentifier","src":"5024:6:22"}]}]},{"nativeSrc":"5107:118:22","nodeType":"YulBlock","src":"5107:118:22","statements":[{"nativeSrc":"5122:16:22","nodeType":"YulVariableDeclaration","src":"5122:16:22","value":{"kind":"number","nativeSrc":"5136:2:22","nodeType":"YulLiteral","src":"5136:2:22","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"5126:6:22","nodeType":"YulTypedName","src":"5126:6:22","type":""}]},{"nativeSrc":"5152:63:22","nodeType":"YulAssignment","src":"5152:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5187:9:22","nodeType":"YulIdentifier","src":"5187:9:22"},{"name":"offset","nativeSrc":"5198:6:22","nodeType":"YulIdentifier","src":"5198:6:22"}],"functionName":{"name":"add","nativeSrc":"5183:3:22","nodeType":"YulIdentifier","src":"5183:3:22"},"nativeSrc":"5183:22:22","nodeType":"YulFunctionCall","src":"5183:22:22"},{"name":"dataEnd","nativeSrc":"5207:7:22","nodeType":"YulIdentifier","src":"5207:7:22"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5162:20:22","nodeType":"YulIdentifier","src":"5162:20:22"},"nativeSrc":"5162:53:22","nodeType":"YulFunctionCall","src":"5162:53:22"},"variableNames":[{"name":"value1","nativeSrc":"5152:6:22","nodeType":"YulIdentifier","src":"5152:6:22"}]}]},{"nativeSrc":"5235:118:22","nodeType":"YulBlock","src":"5235:118:22","statements":[{"nativeSrc":"5250:16:22","nodeType":"YulVariableDeclaration","src":"5250:16:22","value":{"kind":"number","nativeSrc":"5264:2:22","nodeType":"YulLiteral","src":"5264:2:22","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"5254:6:22","nodeType":"YulTypedName","src":"5254:6:22","type":""}]},{"nativeSrc":"5280:63:22","nodeType":"YulAssignment","src":"5280:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5315:9:22","nodeType":"YulIdentifier","src":"5315:9:22"},{"name":"offset","nativeSrc":"5326:6:22","nodeType":"YulIdentifier","src":"5326:6:22"}],"functionName":{"name":"add","nativeSrc":"5311:3:22","nodeType":"YulIdentifier","src":"5311:3:22"},"nativeSrc":"5311:22:22","nodeType":"YulFunctionCall","src":"5311:22:22"},{"name":"dataEnd","nativeSrc":"5335:7:22","nodeType":"YulIdentifier","src":"5335:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"5290:20:22","nodeType":"YulIdentifier","src":"5290:20:22"},"nativeSrc":"5290:53:22","nodeType":"YulFunctionCall","src":"5290:53:22"},"variableNames":[{"name":"value2","nativeSrc":"5280:6:22","nodeType":"YulIdentifier","src":"5280:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"4741:619:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4795:9:22","nodeType":"YulTypedName","src":"4795:9:22","type":""},{"name":"dataEnd","nativeSrc":"4806:7:22","nodeType":"YulTypedName","src":"4806:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4818:6:22","nodeType":"YulTypedName","src":"4818:6:22","type":""},{"name":"value1","nativeSrc":"4826:6:22","nodeType":"YulTypedName","src":"4826:6:22","type":""},{"name":"value2","nativeSrc":"4834:6:22","nodeType":"YulTypedName","src":"4834:6:22","type":""}],"src":"4741:619:22"},{"body":{"nativeSrc":"5409:43:22","nodeType":"YulBlock","src":"5409:43:22","statements":[{"nativeSrc":"5419:27:22","nodeType":"YulAssignment","src":"5419:27:22","value":{"arguments":[{"name":"value","nativeSrc":"5434:5:22","nodeType":"YulIdentifier","src":"5434:5:22"},{"kind":"number","nativeSrc":"5441:4:22","nodeType":"YulLiteral","src":"5441:4:22","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"5430:3:22","nodeType":"YulIdentifier","src":"5430:3:22"},"nativeSrc":"5430:16:22","nodeType":"YulFunctionCall","src":"5430:16:22"},"variableNames":[{"name":"cleaned","nativeSrc":"5419:7:22","nodeType":"YulIdentifier","src":"5419:7:22"}]}]},"name":"cleanup_t_uint8","nativeSrc":"5366:86:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5391:5:22","nodeType":"YulTypedName","src":"5391:5:22","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5401:7:22","nodeType":"YulTypedName","src":"5401:7:22","type":""}],"src":"5366:86:22"},{"body":{"nativeSrc":"5519:51:22","nodeType":"YulBlock","src":"5519:51:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5536:3:22","nodeType":"YulIdentifier","src":"5536:3:22"},{"arguments":[{"name":"value","nativeSrc":"5557:5:22","nodeType":"YulIdentifier","src":"5557:5:22"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"5541:15:22","nodeType":"YulIdentifier","src":"5541:15:22"},"nativeSrc":"5541:22:22","nodeType":"YulFunctionCall","src":"5541:22:22"}],"functionName":{"name":"mstore","nativeSrc":"5529:6:22","nodeType":"YulIdentifier","src":"5529:6:22"},"nativeSrc":"5529:35:22","nodeType":"YulFunctionCall","src":"5529:35:22"},"nativeSrc":"5529:35:22","nodeType":"YulExpressionStatement","src":"5529:35:22"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"5458:112:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5507:5:22","nodeType":"YulTypedName","src":"5507:5:22","type":""},{"name":"pos","nativeSrc":"5514:3:22","nodeType":"YulTypedName","src":"5514:3:22","type":""}],"src":"5458:112:22"},{"body":{"nativeSrc":"5670:120:22","nodeType":"YulBlock","src":"5670:120:22","statements":[{"nativeSrc":"5680:26:22","nodeType":"YulAssignment","src":"5680:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"5692:9:22","nodeType":"YulIdentifier","src":"5692:9:22"},{"kind":"number","nativeSrc":"5703:2:22","nodeType":"YulLiteral","src":"5703:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5688:3:22","nodeType":"YulIdentifier","src":"5688:3:22"},"nativeSrc":"5688:18:22","nodeType":"YulFunctionCall","src":"5688:18:22"},"variableNames":[{"name":"tail","nativeSrc":"5680:4:22","nodeType":"YulIdentifier","src":"5680:4:22"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5756:6:22","nodeType":"YulIdentifier","src":"5756:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"5769:9:22","nodeType":"YulIdentifier","src":"5769:9:22"},{"kind":"number","nativeSrc":"5780:1:22","nodeType":"YulLiteral","src":"5780:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5765:3:22","nodeType":"YulIdentifier","src":"5765:3:22"},"nativeSrc":"5765:17:22","nodeType":"YulFunctionCall","src":"5765:17:22"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"5716:39:22","nodeType":"YulIdentifier","src":"5716:39:22"},"nativeSrc":"5716:67:22","nodeType":"YulFunctionCall","src":"5716:67:22"},"nativeSrc":"5716:67:22","nodeType":"YulExpressionStatement","src":"5716:67:22"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"5576:214:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5642:9:22","nodeType":"YulTypedName","src":"5642:9:22","type":""},{"name":"value0","nativeSrc":"5654:6:22","nodeType":"YulTypedName","src":"5654:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5665:4:22","nodeType":"YulTypedName","src":"5665:4:22","type":""}],"src":"5576:214:22"},{"body":{"nativeSrc":"5841:32:22","nodeType":"YulBlock","src":"5841:32:22","statements":[{"nativeSrc":"5851:16:22","nodeType":"YulAssignment","src":"5851:16:22","value":{"name":"value","nativeSrc":"5862:5:22","nodeType":"YulIdentifier","src":"5862:5:22"},"variableNames":[{"name":"cleaned","nativeSrc":"5851:7:22","nodeType":"YulIdentifier","src":"5851:7:22"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"5796:77:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5823:5:22","nodeType":"YulTypedName","src":"5823:5:22","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5833:7:22","nodeType":"YulTypedName","src":"5833:7:22","type":""}],"src":"5796:77:22"},{"body":{"nativeSrc":"5944:53:22","nodeType":"YulBlock","src":"5944:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5961:3:22","nodeType":"YulIdentifier","src":"5961:3:22"},{"arguments":[{"name":"value","nativeSrc":"5984:5:22","nodeType":"YulIdentifier","src":"5984:5:22"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"5966:17:22","nodeType":"YulIdentifier","src":"5966:17:22"},"nativeSrc":"5966:24:22","nodeType":"YulFunctionCall","src":"5966:24:22"}],"functionName":{"name":"mstore","nativeSrc":"5954:6:22","nodeType":"YulIdentifier","src":"5954:6:22"},"nativeSrc":"5954:37:22","nodeType":"YulFunctionCall","src":"5954:37:22"},"nativeSrc":"5954:37:22","nodeType":"YulExpressionStatement","src":"5954:37:22"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"5879:118:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5932:5:22","nodeType":"YulTypedName","src":"5932:5:22","type":""},{"name":"pos","nativeSrc":"5939:3:22","nodeType":"YulTypedName","src":"5939:3:22","type":""}],"src":"5879:118:22"},{"body":{"nativeSrc":"6101:124:22","nodeType":"YulBlock","src":"6101:124:22","statements":[{"nativeSrc":"6111:26:22","nodeType":"YulAssignment","src":"6111:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"6123:9:22","nodeType":"YulIdentifier","src":"6123:9:22"},{"kind":"number","nativeSrc":"6134:2:22","nodeType":"YulLiteral","src":"6134:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6119:3:22","nodeType":"YulIdentifier","src":"6119:3:22"},"nativeSrc":"6119:18:22","nodeType":"YulFunctionCall","src":"6119:18:22"},"variableNames":[{"name":"tail","nativeSrc":"6111:4:22","nodeType":"YulIdentifier","src":"6111:4:22"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6191:6:22","nodeType":"YulIdentifier","src":"6191:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"6204:9:22","nodeType":"YulIdentifier","src":"6204:9:22"},{"kind":"number","nativeSrc":"6215:1:22","nodeType":"YulLiteral","src":"6215:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6200:3:22","nodeType":"YulIdentifier","src":"6200:3:22"},"nativeSrc":"6200:17:22","nodeType":"YulFunctionCall","src":"6200:17:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"6147:43:22","nodeType":"YulIdentifier","src":"6147:43:22"},"nativeSrc":"6147:71:22","nodeType":"YulFunctionCall","src":"6147:71:22"},"nativeSrc":"6147:71:22","nodeType":"YulExpressionStatement","src":"6147:71:22"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"6003:222:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6073:9:22","nodeType":"YulTypedName","src":"6073:9:22","type":""},{"name":"value0","nativeSrc":"6085:6:22","nodeType":"YulTypedName","src":"6085:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6096:4:22","nodeType":"YulTypedName","src":"6096:4:22","type":""}],"src":"6003:222:22"},{"body":{"nativeSrc":"6320:28:22","nodeType":"YulBlock","src":"6320:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6337:1:22","nodeType":"YulLiteral","src":"6337:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"6340:1:22","nodeType":"YulLiteral","src":"6340:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6330:6:22","nodeType":"YulIdentifier","src":"6330:6:22"},"nativeSrc":"6330:12:22","nodeType":"YulFunctionCall","src":"6330:12:22"},"nativeSrc":"6330:12:22","nodeType":"YulExpressionStatement","src":"6330:12:22"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"6231:117:22","nodeType":"YulFunctionDefinition","src":"6231:117:22"},{"body":{"nativeSrc":"6443:28:22","nodeType":"YulBlock","src":"6443:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6460:1:22","nodeType":"YulLiteral","src":"6460:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"6463:1:22","nodeType":"YulLiteral","src":"6463:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6453:6:22","nodeType":"YulIdentifier","src":"6453:6:22"},"nativeSrc":"6453:12:22","nodeType":"YulFunctionCall","src":"6453:12:22"},"nativeSrc":"6453:12:22","nodeType":"YulExpressionStatement","src":"6453:12:22"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"6354:117:22","nodeType":"YulFunctionDefinition","src":"6354:117:22"},{"body":{"nativeSrc":"6566:28:22","nodeType":"YulBlock","src":"6566:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6583:1:22","nodeType":"YulLiteral","src":"6583:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"6586:1:22","nodeType":"YulLiteral","src":"6586:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6576:6:22","nodeType":"YulIdentifier","src":"6576:6:22"},"nativeSrc":"6576:12:22","nodeType":"YulFunctionCall","src":"6576:12:22"},"nativeSrc":"6576:12:22","nodeType":"YulExpressionStatement","src":"6576:12:22"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"6477:117:22","nodeType":"YulFunctionDefinition","src":"6477:117:22"},{"body":{"nativeSrc":"6707:478:22","nodeType":"YulBlock","src":"6707:478:22","statements":[{"body":{"nativeSrc":"6756:83:22","nodeType":"YulBlock","src":"6756:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"6758:77:22","nodeType":"YulIdentifier","src":"6758:77:22"},"nativeSrc":"6758:79:22","nodeType":"YulFunctionCall","src":"6758:79:22"},"nativeSrc":"6758:79:22","nodeType":"YulExpressionStatement","src":"6758:79:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"6735:6:22","nodeType":"YulIdentifier","src":"6735:6:22"},{"kind":"number","nativeSrc":"6743:4:22","nodeType":"YulLiteral","src":"6743:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"6731:3:22","nodeType":"YulIdentifier","src":"6731:3:22"},"nativeSrc":"6731:17:22","nodeType":"YulFunctionCall","src":"6731:17:22"},{"name":"end","nativeSrc":"6750:3:22","nodeType":"YulIdentifier","src":"6750:3:22"}],"functionName":{"name":"slt","nativeSrc":"6727:3:22","nodeType":"YulIdentifier","src":"6727:3:22"},"nativeSrc":"6727:27:22","nodeType":"YulFunctionCall","src":"6727:27:22"}],"functionName":{"name":"iszero","nativeSrc":"6720:6:22","nodeType":"YulIdentifier","src":"6720:6:22"},"nativeSrc":"6720:35:22","nodeType":"YulFunctionCall","src":"6720:35:22"},"nativeSrc":"6717:122:22","nodeType":"YulIf","src":"6717:122:22"},{"nativeSrc":"6848:30:22","nodeType":"YulAssignment","src":"6848:30:22","value":{"arguments":[{"name":"offset","nativeSrc":"6871:6:22","nodeType":"YulIdentifier","src":"6871:6:22"}],"functionName":{"name":"calldataload","nativeSrc":"6858:12:22","nodeType":"YulIdentifier","src":"6858:12:22"},"nativeSrc":"6858:20:22","nodeType":"YulFunctionCall","src":"6858:20:22"},"variableNames":[{"name":"length","nativeSrc":"6848:6:22","nodeType":"YulIdentifier","src":"6848:6:22"}]},{"body":{"nativeSrc":"6921:83:22","nodeType":"YulBlock","src":"6921:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"6923:77:22","nodeType":"YulIdentifier","src":"6923:77:22"},"nativeSrc":"6923:79:22","nodeType":"YulFunctionCall","src":"6923:79:22"},"nativeSrc":"6923:79:22","nodeType":"YulExpressionStatement","src":"6923:79:22"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"6893:6:22","nodeType":"YulIdentifier","src":"6893:6:22"},{"kind":"number","nativeSrc":"6901:18:22","nodeType":"YulLiteral","src":"6901:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"6890:2:22","nodeType":"YulIdentifier","src":"6890:2:22"},"nativeSrc":"6890:30:22","nodeType":"YulFunctionCall","src":"6890:30:22"},"nativeSrc":"6887:117:22","nodeType":"YulIf","src":"6887:117:22"},{"nativeSrc":"7013:29:22","nodeType":"YulAssignment","src":"7013:29:22","value":{"arguments":[{"name":"offset","nativeSrc":"7029:6:22","nodeType":"YulIdentifier","src":"7029:6:22"},{"kind":"number","nativeSrc":"7037:4:22","nodeType":"YulLiteral","src":"7037:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7025:3:22","nodeType":"YulIdentifier","src":"7025:3:22"},"nativeSrc":"7025:17:22","nodeType":"YulFunctionCall","src":"7025:17:22"},"variableNames":[{"name":"arrayPos","nativeSrc":"7013:8:22","nodeType":"YulIdentifier","src":"7013:8:22"}]},{"body":{"nativeSrc":"7096:83:22","nodeType":"YulBlock","src":"7096:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"7098:77:22","nodeType":"YulIdentifier","src":"7098:77:22"},"nativeSrc":"7098:79:22","nodeType":"YulFunctionCall","src":"7098:79:22"},"nativeSrc":"7098:79:22","nodeType":"YulExpressionStatement","src":"7098:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nativeSrc":"7061:8:22","nodeType":"YulIdentifier","src":"7061:8:22"},{"arguments":[{"name":"length","nativeSrc":"7075:6:22","nodeType":"YulIdentifier","src":"7075:6:22"},{"kind":"number","nativeSrc":"7083:4:22","nodeType":"YulLiteral","src":"7083:4:22","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"7071:3:22","nodeType":"YulIdentifier","src":"7071:3:22"},"nativeSrc":"7071:17:22","nodeType":"YulFunctionCall","src":"7071:17:22"}],"functionName":{"name":"add","nativeSrc":"7057:3:22","nodeType":"YulIdentifier","src":"7057:3:22"},"nativeSrc":"7057:32:22","nodeType":"YulFunctionCall","src":"7057:32:22"},{"name":"end","nativeSrc":"7091:3:22","nodeType":"YulIdentifier","src":"7091:3:22"}],"functionName":{"name":"gt","nativeSrc":"7054:2:22","nodeType":"YulIdentifier","src":"7054:2:22"},"nativeSrc":"7054:41:22","nodeType":"YulFunctionCall","src":"7054:41:22"},"nativeSrc":"7051:128:22","nodeType":"YulIf","src":"7051:128:22"}]},"name":"abi_decode_t_array$_t_address_$dyn_calldata_ptr","nativeSrc":"6617:568:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"6674:6:22","nodeType":"YulTypedName","src":"6674:6:22","type":""},{"name":"end","nativeSrc":"6682:3:22","nodeType":"YulTypedName","src":"6682:3:22","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"6690:8:22","nodeType":"YulTypedName","src":"6690:8:22","type":""},{"name":"length","nativeSrc":"6700:6:22","nodeType":"YulTypedName","src":"6700:6:22","type":""}],"src":"6617:568:22"},{"body":{"nativeSrc":"7292:478:22","nodeType":"YulBlock","src":"7292:478:22","statements":[{"body":{"nativeSrc":"7341:83:22","nodeType":"YulBlock","src":"7341:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"7343:77:22","nodeType":"YulIdentifier","src":"7343:77:22"},"nativeSrc":"7343:79:22","nodeType":"YulFunctionCall","src":"7343:79:22"},"nativeSrc":"7343:79:22","nodeType":"YulExpressionStatement","src":"7343:79:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"7320:6:22","nodeType":"YulIdentifier","src":"7320:6:22"},{"kind":"number","nativeSrc":"7328:4:22","nodeType":"YulLiteral","src":"7328:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"7316:3:22","nodeType":"YulIdentifier","src":"7316:3:22"},"nativeSrc":"7316:17:22","nodeType":"YulFunctionCall","src":"7316:17:22"},{"name":"end","nativeSrc":"7335:3:22","nodeType":"YulIdentifier","src":"7335:3:22"}],"functionName":{"name":"slt","nativeSrc":"7312:3:22","nodeType":"YulIdentifier","src":"7312:3:22"},"nativeSrc":"7312:27:22","nodeType":"YulFunctionCall","src":"7312:27:22"}],"functionName":{"name":"iszero","nativeSrc":"7305:6:22","nodeType":"YulIdentifier","src":"7305:6:22"},"nativeSrc":"7305:35:22","nodeType":"YulFunctionCall","src":"7305:35:22"},"nativeSrc":"7302:122:22","nodeType":"YulIf","src":"7302:122:22"},{"nativeSrc":"7433:30:22","nodeType":"YulAssignment","src":"7433:30:22","value":{"arguments":[{"name":"offset","nativeSrc":"7456:6:22","nodeType":"YulIdentifier","src":"7456:6:22"}],"functionName":{"name":"calldataload","nativeSrc":"7443:12:22","nodeType":"YulIdentifier","src":"7443:12:22"},"nativeSrc":"7443:20:22","nodeType":"YulFunctionCall","src":"7443:20:22"},"variableNames":[{"name":"length","nativeSrc":"7433:6:22","nodeType":"YulIdentifier","src":"7433:6:22"}]},{"body":{"nativeSrc":"7506:83:22","nodeType":"YulBlock","src":"7506:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"7508:77:22","nodeType":"YulIdentifier","src":"7508:77:22"},"nativeSrc":"7508:79:22","nodeType":"YulFunctionCall","src":"7508:79:22"},"nativeSrc":"7508:79:22","nodeType":"YulExpressionStatement","src":"7508:79:22"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"7478:6:22","nodeType":"YulIdentifier","src":"7478:6:22"},{"kind":"number","nativeSrc":"7486:18:22","nodeType":"YulLiteral","src":"7486:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7475:2:22","nodeType":"YulIdentifier","src":"7475:2:22"},"nativeSrc":"7475:30:22","nodeType":"YulFunctionCall","src":"7475:30:22"},"nativeSrc":"7472:117:22","nodeType":"YulIf","src":"7472:117:22"},{"nativeSrc":"7598:29:22","nodeType":"YulAssignment","src":"7598:29:22","value":{"arguments":[{"name":"offset","nativeSrc":"7614:6:22","nodeType":"YulIdentifier","src":"7614:6:22"},{"kind":"number","nativeSrc":"7622:4:22","nodeType":"YulLiteral","src":"7622:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7610:3:22","nodeType":"YulIdentifier","src":"7610:3:22"},"nativeSrc":"7610:17:22","nodeType":"YulFunctionCall","src":"7610:17:22"},"variableNames":[{"name":"arrayPos","nativeSrc":"7598:8:22","nodeType":"YulIdentifier","src":"7598:8:22"}]},{"body":{"nativeSrc":"7681:83:22","nodeType":"YulBlock","src":"7681:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"7683:77:22","nodeType":"YulIdentifier","src":"7683:77:22"},"nativeSrc":"7683:79:22","nodeType":"YulFunctionCall","src":"7683:79:22"},"nativeSrc":"7683:79:22","nodeType":"YulExpressionStatement","src":"7683:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nativeSrc":"7646:8:22","nodeType":"YulIdentifier","src":"7646:8:22"},{"arguments":[{"name":"length","nativeSrc":"7660:6:22","nodeType":"YulIdentifier","src":"7660:6:22"},{"kind":"number","nativeSrc":"7668:4:22","nodeType":"YulLiteral","src":"7668:4:22","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"7656:3:22","nodeType":"YulIdentifier","src":"7656:3:22"},"nativeSrc":"7656:17:22","nodeType":"YulFunctionCall","src":"7656:17:22"}],"functionName":{"name":"add","nativeSrc":"7642:3:22","nodeType":"YulIdentifier","src":"7642:3:22"},"nativeSrc":"7642:32:22","nodeType":"YulFunctionCall","src":"7642:32:22"},{"name":"end","nativeSrc":"7676:3:22","nodeType":"YulIdentifier","src":"7676:3:22"}],"functionName":{"name":"gt","nativeSrc":"7639:2:22","nodeType":"YulIdentifier","src":"7639:2:22"},"nativeSrc":"7639:41:22","nodeType":"YulFunctionCall","src":"7639:41:22"},"nativeSrc":"7636:128:22","nodeType":"YulIf","src":"7636:128:22"}]},"name":"abi_decode_t_array$_t_bool_$dyn_calldata_ptr","nativeSrc":"7205:565:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"7259:6:22","nodeType":"YulTypedName","src":"7259:6:22","type":""},{"name":"end","nativeSrc":"7267:3:22","nodeType":"YulTypedName","src":"7267:3:22","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"7275:8:22","nodeType":"YulTypedName","src":"7275:8:22","type":""},{"name":"length","nativeSrc":"7285:6:22","nodeType":"YulTypedName","src":"7285:6:22","type":""}],"src":"7205:565:22"},{"body":{"nativeSrc":"7926:778:22","nodeType":"YulBlock","src":"7926:778:22","statements":[{"body":{"nativeSrc":"7972:83:22","nodeType":"YulBlock","src":"7972:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"7974:77:22","nodeType":"YulIdentifier","src":"7974:77:22"},"nativeSrc":"7974:79:22","nodeType":"YulFunctionCall","src":"7974:79:22"},"nativeSrc":"7974:79:22","nodeType":"YulExpressionStatement","src":"7974:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7947:7:22","nodeType":"YulIdentifier","src":"7947:7:22"},{"name":"headStart","nativeSrc":"7956:9:22","nodeType":"YulIdentifier","src":"7956:9:22"}],"functionName":{"name":"sub","nativeSrc":"7943:3:22","nodeType":"YulIdentifier","src":"7943:3:22"},"nativeSrc":"7943:23:22","nodeType":"YulFunctionCall","src":"7943:23:22"},{"kind":"number","nativeSrc":"7968:2:22","nodeType":"YulLiteral","src":"7968:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"7939:3:22","nodeType":"YulIdentifier","src":"7939:3:22"},"nativeSrc":"7939:32:22","nodeType":"YulFunctionCall","src":"7939:32:22"},"nativeSrc":"7936:119:22","nodeType":"YulIf","src":"7936:119:22"},{"nativeSrc":"8065:312:22","nodeType":"YulBlock","src":"8065:312:22","statements":[{"nativeSrc":"8080:45:22","nodeType":"YulVariableDeclaration","src":"8080:45:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8111:9:22","nodeType":"YulIdentifier","src":"8111:9:22"},{"kind":"number","nativeSrc":"8122:1:22","nodeType":"YulLiteral","src":"8122:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8107:3:22","nodeType":"YulIdentifier","src":"8107:3:22"},"nativeSrc":"8107:17:22","nodeType":"YulFunctionCall","src":"8107:17:22"}],"functionName":{"name":"calldataload","nativeSrc":"8094:12:22","nodeType":"YulIdentifier","src":"8094:12:22"},"nativeSrc":"8094:31:22","nodeType":"YulFunctionCall","src":"8094:31:22"},"variables":[{"name":"offset","nativeSrc":"8084:6:22","nodeType":"YulTypedName","src":"8084:6:22","type":""}]},{"body":{"nativeSrc":"8172:83:22","nodeType":"YulBlock","src":"8172:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"8174:77:22","nodeType":"YulIdentifier","src":"8174:77:22"},"nativeSrc":"8174:79:22","nodeType":"YulFunctionCall","src":"8174:79:22"},"nativeSrc":"8174:79:22","nodeType":"YulExpressionStatement","src":"8174:79:22"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"8144:6:22","nodeType":"YulIdentifier","src":"8144:6:22"},{"kind":"number","nativeSrc":"8152:18:22","nodeType":"YulLiteral","src":"8152:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"8141:2:22","nodeType":"YulIdentifier","src":"8141:2:22"},"nativeSrc":"8141:30:22","nodeType":"YulFunctionCall","src":"8141:30:22"},"nativeSrc":"8138:117:22","nodeType":"YulIf","src":"8138:117:22"},{"nativeSrc":"8269:98:22","nodeType":"YulAssignment","src":"8269:98:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8339:9:22","nodeType":"YulIdentifier","src":"8339:9:22"},{"name":"offset","nativeSrc":"8350:6:22","nodeType":"YulIdentifier","src":"8350:6:22"}],"functionName":{"name":"add","nativeSrc":"8335:3:22","nodeType":"YulIdentifier","src":"8335:3:22"},"nativeSrc":"8335:22:22","nodeType":"YulFunctionCall","src":"8335:22:22"},{"name":"dataEnd","nativeSrc":"8359:7:22","nodeType":"YulIdentifier","src":"8359:7:22"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_calldata_ptr","nativeSrc":"8287:47:22","nodeType":"YulIdentifier","src":"8287:47:22"},"nativeSrc":"8287:80:22","nodeType":"YulFunctionCall","src":"8287:80:22"},"variableNames":[{"name":"value0","nativeSrc":"8269:6:22","nodeType":"YulIdentifier","src":"8269:6:22"},{"name":"value1","nativeSrc":"8277:6:22","nodeType":"YulIdentifier","src":"8277:6:22"}]}]},{"nativeSrc":"8387:310:22","nodeType":"YulBlock","src":"8387:310:22","statements":[{"nativeSrc":"8402:46:22","nodeType":"YulVariableDeclaration","src":"8402:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8433:9:22","nodeType":"YulIdentifier","src":"8433:9:22"},{"kind":"number","nativeSrc":"8444:2:22","nodeType":"YulLiteral","src":"8444:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8429:3:22","nodeType":"YulIdentifier","src":"8429:3:22"},"nativeSrc":"8429:18:22","nodeType":"YulFunctionCall","src":"8429:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"8416:12:22","nodeType":"YulIdentifier","src":"8416:12:22"},"nativeSrc":"8416:32:22","nodeType":"YulFunctionCall","src":"8416:32:22"},"variables":[{"name":"offset","nativeSrc":"8406:6:22","nodeType":"YulTypedName","src":"8406:6:22","type":""}]},{"body":{"nativeSrc":"8495:83:22","nodeType":"YulBlock","src":"8495:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"8497:77:22","nodeType":"YulIdentifier","src":"8497:77:22"},"nativeSrc":"8497:79:22","nodeType":"YulFunctionCall","src":"8497:79:22"},"nativeSrc":"8497:79:22","nodeType":"YulExpressionStatement","src":"8497:79:22"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"8467:6:22","nodeType":"YulIdentifier","src":"8467:6:22"},{"kind":"number","nativeSrc":"8475:18:22","nodeType":"YulLiteral","src":"8475:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"8464:2:22","nodeType":"YulIdentifier","src":"8464:2:22"},"nativeSrc":"8464:30:22","nodeType":"YulFunctionCall","src":"8464:30:22"},"nativeSrc":"8461:117:22","nodeType":"YulIf","src":"8461:117:22"},{"nativeSrc":"8592:95:22","nodeType":"YulAssignment","src":"8592:95:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8659:9:22","nodeType":"YulIdentifier","src":"8659:9:22"},{"name":"offset","nativeSrc":"8670:6:22","nodeType":"YulIdentifier","src":"8670:6:22"}],"functionName":{"name":"add","nativeSrc":"8655:3:22","nodeType":"YulIdentifier","src":"8655:3:22"},"nativeSrc":"8655:22:22","nodeType":"YulFunctionCall","src":"8655:22:22"},{"name":"dataEnd","nativeSrc":"8679:7:22","nodeType":"YulIdentifier","src":"8679:7:22"}],"functionName":{"name":"abi_decode_t_array$_t_bool_$dyn_calldata_ptr","nativeSrc":"8610:44:22","nodeType":"YulIdentifier","src":"8610:44:22"},"nativeSrc":"8610:77:22","nodeType":"YulFunctionCall","src":"8610:77:22"},"variableNames":[{"name":"value2","nativeSrc":"8592:6:22","nodeType":"YulIdentifier","src":"8592:6:22"},{"name":"value3","nativeSrc":"8600:6:22","nodeType":"YulIdentifier","src":"8600:6:22"}]}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_bool_$dyn_calldata_ptr","nativeSrc":"7776:928:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7872:9:22","nodeType":"YulTypedName","src":"7872:9:22","type":""},{"name":"dataEnd","nativeSrc":"7883:7:22","nodeType":"YulTypedName","src":"7883:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7895:6:22","nodeType":"YulTypedName","src":"7895:6:22","type":""},{"name":"value1","nativeSrc":"7903:6:22","nodeType":"YulTypedName","src":"7903:6:22","type":""},{"name":"value2","nativeSrc":"7911:6:22","nodeType":"YulTypedName","src":"7911:6:22","type":""},{"name":"value3","nativeSrc":"7919:6:22","nodeType":"YulTypedName","src":"7919:6:22","type":""}],"src":"7776:928:22"},{"body":{"nativeSrc":"8776:263:22","nodeType":"YulBlock","src":"8776:263:22","statements":[{"body":{"nativeSrc":"8822:83:22","nodeType":"YulBlock","src":"8822:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"8824:77:22","nodeType":"YulIdentifier","src":"8824:77:22"},"nativeSrc":"8824:79:22","nodeType":"YulFunctionCall","src":"8824:79:22"},"nativeSrc":"8824:79:22","nodeType":"YulExpressionStatement","src":"8824:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8797:7:22","nodeType":"YulIdentifier","src":"8797:7:22"},{"name":"headStart","nativeSrc":"8806:9:22","nodeType":"YulIdentifier","src":"8806:9:22"}],"functionName":{"name":"sub","nativeSrc":"8793:3:22","nodeType":"YulIdentifier","src":"8793:3:22"},"nativeSrc":"8793:23:22","nodeType":"YulFunctionCall","src":"8793:23:22"},{"kind":"number","nativeSrc":"8818:2:22","nodeType":"YulLiteral","src":"8818:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"8789:3:22","nodeType":"YulIdentifier","src":"8789:3:22"},"nativeSrc":"8789:32:22","nodeType":"YulFunctionCall","src":"8789:32:22"},"nativeSrc":"8786:119:22","nodeType":"YulIf","src":"8786:119:22"},{"nativeSrc":"8915:117:22","nodeType":"YulBlock","src":"8915:117:22","statements":[{"nativeSrc":"8930:15:22","nodeType":"YulVariableDeclaration","src":"8930:15:22","value":{"kind":"number","nativeSrc":"8944:1:22","nodeType":"YulLiteral","src":"8944:1:22","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"8934:6:22","nodeType":"YulTypedName","src":"8934:6:22","type":""}]},{"nativeSrc":"8959:63:22","nodeType":"YulAssignment","src":"8959:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8994:9:22","nodeType":"YulIdentifier","src":"8994:9:22"},{"name":"offset","nativeSrc":"9005:6:22","nodeType":"YulIdentifier","src":"9005:6:22"}],"functionName":{"name":"add","nativeSrc":"8990:3:22","nodeType":"YulIdentifier","src":"8990:3:22"},"nativeSrc":"8990:22:22","nodeType":"YulFunctionCall","src":"8990:22:22"},{"name":"dataEnd","nativeSrc":"9014:7:22","nodeType":"YulIdentifier","src":"9014:7:22"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"8969:20:22","nodeType":"YulIdentifier","src":"8969:20:22"},"nativeSrc":"8969:53:22","nodeType":"YulFunctionCall","src":"8969:53:22"},"variableNames":[{"name":"value0","nativeSrc":"8959:6:22","nodeType":"YulIdentifier","src":"8959:6:22"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"8710:329:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8746:9:22","nodeType":"YulTypedName","src":"8746:9:22","type":""},{"name":"dataEnd","nativeSrc":"8757:7:22","nodeType":"YulTypedName","src":"8757:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8769:6:22","nodeType":"YulTypedName","src":"8769:6:22","type":""}],"src":"8710:329:22"},{"body":{"nativeSrc":"9110:53:22","nodeType":"YulBlock","src":"9110:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9127:3:22","nodeType":"YulIdentifier","src":"9127:3:22"},{"arguments":[{"name":"value","nativeSrc":"9150:5:22","nodeType":"YulIdentifier","src":"9150:5:22"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"9132:17:22","nodeType":"YulIdentifier","src":"9132:17:22"},"nativeSrc":"9132:24:22","nodeType":"YulFunctionCall","src":"9132:24:22"}],"functionName":{"name":"mstore","nativeSrc":"9120:6:22","nodeType":"YulIdentifier","src":"9120:6:22"},"nativeSrc":"9120:37:22","nodeType":"YulFunctionCall","src":"9120:37:22"},"nativeSrc":"9120:37:22","nodeType":"YulExpressionStatement","src":"9120:37:22"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9045:118:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9098:5:22","nodeType":"YulTypedName","src":"9098:5:22","type":""},{"name":"pos","nativeSrc":"9105:3:22","nodeType":"YulTypedName","src":"9105:3:22","type":""}],"src":"9045:118:22"},{"body":{"nativeSrc":"9267:124:22","nodeType":"YulBlock","src":"9267:124:22","statements":[{"nativeSrc":"9277:26:22","nodeType":"YulAssignment","src":"9277:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"9289:9:22","nodeType":"YulIdentifier","src":"9289:9:22"},{"kind":"number","nativeSrc":"9300:2:22","nodeType":"YulLiteral","src":"9300:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9285:3:22","nodeType":"YulIdentifier","src":"9285:3:22"},"nativeSrc":"9285:18:22","nodeType":"YulFunctionCall","src":"9285:18:22"},"variableNames":[{"name":"tail","nativeSrc":"9277:4:22","nodeType":"YulIdentifier","src":"9277:4:22"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9357:6:22","nodeType":"YulIdentifier","src":"9357:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"9370:9:22","nodeType":"YulIdentifier","src":"9370:9:22"},{"kind":"number","nativeSrc":"9381:1:22","nodeType":"YulLiteral","src":"9381:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9366:3:22","nodeType":"YulIdentifier","src":"9366:3:22"},"nativeSrc":"9366:17:22","nodeType":"YulFunctionCall","src":"9366:17:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9313:43:22","nodeType":"YulIdentifier","src":"9313:43:22"},"nativeSrc":"9313:71:22","nodeType":"YulFunctionCall","src":"9313:71:22"},"nativeSrc":"9313:71:22","nodeType":"YulExpressionStatement","src":"9313:71:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"9169:222:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9239:9:22","nodeType":"YulTypedName","src":"9239:9:22","type":""},{"name":"value0","nativeSrc":"9251:6:22","nodeType":"YulTypedName","src":"9251:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9262:4:22","nodeType":"YulTypedName","src":"9262:4:22","type":""}],"src":"9169:222:22"},{"body":{"nativeSrc":"9441:105:22","nodeType":"YulBlock","src":"9441:105:22","statements":[{"nativeSrc":"9451:89:22","nodeType":"YulAssignment","src":"9451:89:22","value":{"arguments":[{"name":"value","nativeSrc":"9466:5:22","nodeType":"YulIdentifier","src":"9466:5:22"},{"kind":"number","nativeSrc":"9473:66:22","nodeType":"YulLiteral","src":"9473:66:22","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"9462:3:22","nodeType":"YulIdentifier","src":"9462:3:22"},"nativeSrc":"9462:78:22","nodeType":"YulFunctionCall","src":"9462:78:22"},"variableNames":[{"name":"cleaned","nativeSrc":"9451:7:22","nodeType":"YulIdentifier","src":"9451:7:22"}]}]},"name":"cleanup_t_bytes1","nativeSrc":"9397:149:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9423:5:22","nodeType":"YulTypedName","src":"9423:5:22","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"9433:7:22","nodeType":"YulTypedName","src":"9433:7:22","type":""}],"src":"9397:149:22"},{"body":{"nativeSrc":"9615:52:22","nodeType":"YulBlock","src":"9615:52:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9632:3:22","nodeType":"YulIdentifier","src":"9632:3:22"},{"arguments":[{"name":"value","nativeSrc":"9654:5:22","nodeType":"YulIdentifier","src":"9654:5:22"}],"functionName":{"name":"cleanup_t_bytes1","nativeSrc":"9637:16:22","nodeType":"YulIdentifier","src":"9637:16:22"},"nativeSrc":"9637:23:22","nodeType":"YulFunctionCall","src":"9637:23:22"}],"functionName":{"name":"mstore","nativeSrc":"9625:6:22","nodeType":"YulIdentifier","src":"9625:6:22"},"nativeSrc":"9625:36:22","nodeType":"YulFunctionCall","src":"9625:36:22"},"nativeSrc":"9625:36:22","nodeType":"YulExpressionStatement","src":"9625:36:22"}]},"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nativeSrc":"9552:115:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9603:5:22","nodeType":"YulTypedName","src":"9603:5:22","type":""},{"name":"pos","nativeSrc":"9610:3:22","nodeType":"YulTypedName","src":"9610:3:22","type":""}],"src":"9552:115:22"},{"body":{"nativeSrc":"9747:40:22","nodeType":"YulBlock","src":"9747:40:22","statements":[{"nativeSrc":"9758:22:22","nodeType":"YulAssignment","src":"9758:22:22","value":{"arguments":[{"name":"value","nativeSrc":"9774:5:22","nodeType":"YulIdentifier","src":"9774:5:22"}],"functionName":{"name":"mload","nativeSrc":"9768:5:22","nodeType":"YulIdentifier","src":"9768:5:22"},"nativeSrc":"9768:12:22","nodeType":"YulFunctionCall","src":"9768:12:22"},"variableNames":[{"name":"length","nativeSrc":"9758:6:22","nodeType":"YulIdentifier","src":"9758:6:22"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"9673:114:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9730:5:22","nodeType":"YulTypedName","src":"9730:5:22","type":""}],"returnVariables":[{"name":"length","nativeSrc":"9740:6:22","nodeType":"YulTypedName","src":"9740:6:22","type":""}],"src":"9673:114:22"},{"body":{"nativeSrc":"9904:73:22","nodeType":"YulBlock","src":"9904:73:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9921:3:22","nodeType":"YulIdentifier","src":"9921:3:22"},{"name":"length","nativeSrc":"9926:6:22","nodeType":"YulIdentifier","src":"9926:6:22"}],"functionName":{"name":"mstore","nativeSrc":"9914:6:22","nodeType":"YulIdentifier","src":"9914:6:22"},"nativeSrc":"9914:19:22","nodeType":"YulFunctionCall","src":"9914:19:22"},"nativeSrc":"9914:19:22","nodeType":"YulExpressionStatement","src":"9914:19:22"},{"nativeSrc":"9942:29:22","nodeType":"YulAssignment","src":"9942:29:22","value":{"arguments":[{"name":"pos","nativeSrc":"9961:3:22","nodeType":"YulIdentifier","src":"9961:3:22"},{"kind":"number","nativeSrc":"9966:4:22","nodeType":"YulLiteral","src":"9966:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9957:3:22","nodeType":"YulIdentifier","src":"9957:3:22"},"nativeSrc":"9957:14:22","nodeType":"YulFunctionCall","src":"9957:14:22"},"variableNames":[{"name":"updated_pos","nativeSrc":"9942:11:22","nodeType":"YulIdentifier","src":"9942:11:22"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"9793:184:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"9876:3:22","nodeType":"YulTypedName","src":"9876:3:22","type":""},{"name":"length","nativeSrc":"9881:6:22","nodeType":"YulTypedName","src":"9881:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"9892:11:22","nodeType":"YulTypedName","src":"9892:11:22","type":""}],"src":"9793:184:22"},{"body":{"nativeSrc":"10055:60:22","nodeType":"YulBlock","src":"10055:60:22","statements":[{"nativeSrc":"10065:11:22","nodeType":"YulAssignment","src":"10065:11:22","value":{"name":"ptr","nativeSrc":"10073:3:22","nodeType":"YulIdentifier","src":"10073:3:22"},"variableNames":[{"name":"data","nativeSrc":"10065:4:22","nodeType":"YulIdentifier","src":"10065:4:22"}]},{"nativeSrc":"10086:22:22","nodeType":"YulAssignment","src":"10086:22:22","value":{"arguments":[{"name":"ptr","nativeSrc":"10098:3:22","nodeType":"YulIdentifier","src":"10098:3:22"},{"kind":"number","nativeSrc":"10103:4:22","nodeType":"YulLiteral","src":"10103:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10094:3:22","nodeType":"YulIdentifier","src":"10094:3:22"},"nativeSrc":"10094:14:22","nodeType":"YulFunctionCall","src":"10094:14:22"},"variableNames":[{"name":"data","nativeSrc":"10086:4:22","nodeType":"YulIdentifier","src":"10086:4:22"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"9983:132:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"10042:3:22","nodeType":"YulTypedName","src":"10042:3:22","type":""}],"returnVariables":[{"name":"data","nativeSrc":"10050:4:22","nodeType":"YulTypedName","src":"10050:4:22","type":""}],"src":"9983:132:22"},{"body":{"nativeSrc":"10176:53:22","nodeType":"YulBlock","src":"10176:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10193:3:22","nodeType":"YulIdentifier","src":"10193:3:22"},{"arguments":[{"name":"value","nativeSrc":"10216:5:22","nodeType":"YulIdentifier","src":"10216:5:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10198:17:22","nodeType":"YulIdentifier","src":"10198:17:22"},"nativeSrc":"10198:24:22","nodeType":"YulFunctionCall","src":"10198:24:22"}],"functionName":{"name":"mstore","nativeSrc":"10186:6:22","nodeType":"YulIdentifier","src":"10186:6:22"},"nativeSrc":"10186:37:22","nodeType":"YulFunctionCall","src":"10186:37:22"},"nativeSrc":"10186:37:22","nodeType":"YulExpressionStatement","src":"10186:37:22"}]},"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"10121:108:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10164:5:22","nodeType":"YulTypedName","src":"10164:5:22","type":""},{"name":"pos","nativeSrc":"10171:3:22","nodeType":"YulTypedName","src":"10171:3:22","type":""}],"src":"10121:108:22"},{"body":{"nativeSrc":"10315:99:22","nodeType":"YulBlock","src":"10315:99:22","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"10359:6:22","nodeType":"YulIdentifier","src":"10359:6:22"},{"name":"pos","nativeSrc":"10367:3:22","nodeType":"YulIdentifier","src":"10367:3:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"10325:33:22","nodeType":"YulIdentifier","src":"10325:33:22"},"nativeSrc":"10325:46:22","nodeType":"YulFunctionCall","src":"10325:46:22"},"nativeSrc":"10325:46:22","nodeType":"YulExpressionStatement","src":"10325:46:22"},{"nativeSrc":"10380:28:22","nodeType":"YulAssignment","src":"10380:28:22","value":{"arguments":[{"name":"pos","nativeSrc":"10398:3:22","nodeType":"YulIdentifier","src":"10398:3:22"},{"kind":"number","nativeSrc":"10403:4:22","nodeType":"YulLiteral","src":"10403:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10394:3:22","nodeType":"YulIdentifier","src":"10394:3:22"},"nativeSrc":"10394:14:22","nodeType":"YulFunctionCall","src":"10394:14:22"},"variableNames":[{"name":"updatedPos","nativeSrc":"10380:10:22","nodeType":"YulIdentifier","src":"10380:10:22"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"10235:179:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nativeSrc":"10288:6:22","nodeType":"YulTypedName","src":"10288:6:22","type":""},{"name":"pos","nativeSrc":"10296:3:22","nodeType":"YulTypedName","src":"10296:3:22","type":""}],"returnVariables":[{"name":"updatedPos","nativeSrc":"10304:10:22","nodeType":"YulTypedName","src":"10304:10:22","type":""}],"src":"10235:179:22"},{"body":{"nativeSrc":"10495:38:22","nodeType":"YulBlock","src":"10495:38:22","statements":[{"nativeSrc":"10505:22:22","nodeType":"YulAssignment","src":"10505:22:22","value":{"arguments":[{"name":"ptr","nativeSrc":"10517:3:22","nodeType":"YulIdentifier","src":"10517:3:22"},{"kind":"number","nativeSrc":"10522:4:22","nodeType":"YulLiteral","src":"10522:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10513:3:22","nodeType":"YulIdentifier","src":"10513:3:22"},"nativeSrc":"10513:14:22","nodeType":"YulFunctionCall","src":"10513:14:22"},"variableNames":[{"name":"next","nativeSrc":"10505:4:22","nodeType":"YulIdentifier","src":"10505:4:22"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"10420:113:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"10482:3:22","nodeType":"YulTypedName","src":"10482:3:22","type":""}],"returnVariables":[{"name":"next","nativeSrc":"10490:4:22","nodeType":"YulTypedName","src":"10490:4:22","type":""}],"src":"10420:113:22"},{"body":{"nativeSrc":"10693:608:22","nodeType":"YulBlock","src":"10693:608:22","statements":[{"nativeSrc":"10703:68:22","nodeType":"YulVariableDeclaration","src":"10703:68:22","value":{"arguments":[{"name":"value","nativeSrc":"10765:5:22","nodeType":"YulIdentifier","src":"10765:5:22"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"10717:47:22","nodeType":"YulIdentifier","src":"10717:47:22"},"nativeSrc":"10717:54:22","nodeType":"YulFunctionCall","src":"10717:54:22"},"variables":[{"name":"length","nativeSrc":"10707:6:22","nodeType":"YulTypedName","src":"10707:6:22","type":""}]},{"nativeSrc":"10780:93:22","nodeType":"YulAssignment","src":"10780:93:22","value":{"arguments":[{"name":"pos","nativeSrc":"10861:3:22","nodeType":"YulIdentifier","src":"10861:3:22"},{"name":"length","nativeSrc":"10866:6:22","nodeType":"YulIdentifier","src":"10866:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"10787:73:22","nodeType":"YulIdentifier","src":"10787:73:22"},"nativeSrc":"10787:86:22","nodeType":"YulFunctionCall","src":"10787:86:22"},"variableNames":[{"name":"pos","nativeSrc":"10780:3:22","nodeType":"YulIdentifier","src":"10780:3:22"}]},{"nativeSrc":"10882:71:22","nodeType":"YulVariableDeclaration","src":"10882:71:22","value":{"arguments":[{"name":"value","nativeSrc":"10947:5:22","nodeType":"YulIdentifier","src":"10947:5:22"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"10897:49:22","nodeType":"YulIdentifier","src":"10897:49:22"},"nativeSrc":"10897:56:22","nodeType":"YulFunctionCall","src":"10897:56:22"},"variables":[{"name":"baseRef","nativeSrc":"10886:7:22","nodeType":"YulTypedName","src":"10886:7:22","type":""}]},{"nativeSrc":"10962:21:22","nodeType":"YulVariableDeclaration","src":"10962:21:22","value":{"name":"baseRef","nativeSrc":"10976:7:22","nodeType":"YulIdentifier","src":"10976:7:22"},"variables":[{"name":"srcPtr","nativeSrc":"10966:6:22","nodeType":"YulTypedName","src":"10966:6:22","type":""}]},{"body":{"nativeSrc":"11052:224:22","nodeType":"YulBlock","src":"11052:224:22","statements":[{"nativeSrc":"11066:34:22","nodeType":"YulVariableDeclaration","src":"11066:34:22","value":{"arguments":[{"name":"srcPtr","nativeSrc":"11093:6:22","nodeType":"YulIdentifier","src":"11093:6:22"}],"functionName":{"name":"mload","nativeSrc":"11087:5:22","nodeType":"YulIdentifier","src":"11087:5:22"},"nativeSrc":"11087:13:22","nodeType":"YulFunctionCall","src":"11087:13:22"},"variables":[{"name":"elementValue0","nativeSrc":"11070:13:22","nodeType":"YulTypedName","src":"11070:13:22","type":""}]},{"nativeSrc":"11113:70:22","nodeType":"YulAssignment","src":"11113:70:22","value":{"arguments":[{"name":"elementValue0","nativeSrc":"11164:13:22","nodeType":"YulIdentifier","src":"11164:13:22"},{"name":"pos","nativeSrc":"11179:3:22","nodeType":"YulIdentifier","src":"11179:3:22"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"11120:43:22","nodeType":"YulIdentifier","src":"11120:43:22"},"nativeSrc":"11120:63:22","nodeType":"YulFunctionCall","src":"11120:63:22"},"variableNames":[{"name":"pos","nativeSrc":"11113:3:22","nodeType":"YulIdentifier","src":"11113:3:22"}]},{"nativeSrc":"11196:70:22","nodeType":"YulAssignment","src":"11196:70:22","value":{"arguments":[{"name":"srcPtr","nativeSrc":"11259:6:22","nodeType":"YulIdentifier","src":"11259:6:22"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"11206:52:22","nodeType":"YulIdentifier","src":"11206:52:22"},"nativeSrc":"11206:60:22","nodeType":"YulFunctionCall","src":"11206:60:22"},"variableNames":[{"name":"srcPtr","nativeSrc":"11196:6:22","nodeType":"YulIdentifier","src":"11196:6:22"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"11014:1:22","nodeType":"YulIdentifier","src":"11014:1:22"},{"name":"length","nativeSrc":"11017:6:22","nodeType":"YulIdentifier","src":"11017:6:22"}],"functionName":{"name":"lt","nativeSrc":"11011:2:22","nodeType":"YulIdentifier","src":"11011:2:22"},"nativeSrc":"11011:13:22","nodeType":"YulFunctionCall","src":"11011:13:22"},"nativeSrc":"10992:284:22","nodeType":"YulForLoop","post":{"nativeSrc":"11025:18:22","nodeType":"YulBlock","src":"11025:18:22","statements":[{"nativeSrc":"11027:14:22","nodeType":"YulAssignment","src":"11027:14:22","value":{"arguments":[{"name":"i","nativeSrc":"11036:1:22","nodeType":"YulIdentifier","src":"11036:1:22"},{"kind":"number","nativeSrc":"11039:1:22","nodeType":"YulLiteral","src":"11039:1:22","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"11032:3:22","nodeType":"YulIdentifier","src":"11032:3:22"},"nativeSrc":"11032:9:22","nodeType":"YulFunctionCall","src":"11032:9:22"},"variableNames":[{"name":"i","nativeSrc":"11027:1:22","nodeType":"YulIdentifier","src":"11027:1:22"}]}]},"pre":{"nativeSrc":"10996:14:22","nodeType":"YulBlock","src":"10996:14:22","statements":[{"nativeSrc":"10998:10:22","nodeType":"YulVariableDeclaration","src":"10998:10:22","value":{"kind":"number","nativeSrc":"11007:1:22","nodeType":"YulLiteral","src":"11007:1:22","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"11002:1:22","nodeType":"YulTypedName","src":"11002:1:22","type":""}]}]},"src":"10992:284:22"},{"nativeSrc":"11285:10:22","nodeType":"YulAssignment","src":"11285:10:22","value":{"name":"pos","nativeSrc":"11292:3:22","nodeType":"YulIdentifier","src":"11292:3:22"},"variableNames":[{"name":"end","nativeSrc":"11285:3:22","nodeType":"YulIdentifier","src":"11285:3:22"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"10569:732:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10672:5:22","nodeType":"YulTypedName","src":"10672:5:22","type":""},{"name":"pos","nativeSrc":"10679:3:22","nodeType":"YulTypedName","src":"10679:3:22","type":""}],"returnVariables":[{"name":"end","nativeSrc":"10688:3:22","nodeType":"YulTypedName","src":"10688:3:22","type":""}],"src":"10569:732:22"},{"body":{"nativeSrc":"11661:861:22","nodeType":"YulBlock","src":"11661:861:22","statements":[{"nativeSrc":"11671:27:22","nodeType":"YulAssignment","src":"11671:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"11683:9:22","nodeType":"YulIdentifier","src":"11683:9:22"},{"kind":"number","nativeSrc":"11694:3:22","nodeType":"YulLiteral","src":"11694:3:22","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"11679:3:22","nodeType":"YulIdentifier","src":"11679:3:22"},"nativeSrc":"11679:19:22","nodeType":"YulFunctionCall","src":"11679:19:22"},"variableNames":[{"name":"tail","nativeSrc":"11671:4:22","nodeType":"YulIdentifier","src":"11671:4:22"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"11750:6:22","nodeType":"YulIdentifier","src":"11750:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"11763:9:22","nodeType":"YulIdentifier","src":"11763:9:22"},{"kind":"number","nativeSrc":"11774:1:22","nodeType":"YulLiteral","src":"11774:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11759:3:22","nodeType":"YulIdentifier","src":"11759:3:22"},"nativeSrc":"11759:17:22","nodeType":"YulFunctionCall","src":"11759:17:22"}],"functionName":{"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nativeSrc":"11708:41:22","nodeType":"YulIdentifier","src":"11708:41:22"},"nativeSrc":"11708:69:22","nodeType":"YulFunctionCall","src":"11708:69:22"},"nativeSrc":"11708:69:22","nodeType":"YulExpressionStatement","src":"11708:69:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11798:9:22","nodeType":"YulIdentifier","src":"11798:9:22"},{"kind":"number","nativeSrc":"11809:2:22","nodeType":"YulLiteral","src":"11809:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11794:3:22","nodeType":"YulIdentifier","src":"11794:3:22"},"nativeSrc":"11794:18:22","nodeType":"YulFunctionCall","src":"11794:18:22"},{"arguments":[{"name":"tail","nativeSrc":"11818:4:22","nodeType":"YulIdentifier","src":"11818:4:22"},{"name":"headStart","nativeSrc":"11824:9:22","nodeType":"YulIdentifier","src":"11824:9:22"}],"functionName":{"name":"sub","nativeSrc":"11814:3:22","nodeType":"YulIdentifier","src":"11814:3:22"},"nativeSrc":"11814:20:22","nodeType":"YulFunctionCall","src":"11814:20:22"}],"functionName":{"name":"mstore","nativeSrc":"11787:6:22","nodeType":"YulIdentifier","src":"11787:6:22"},"nativeSrc":"11787:48:22","nodeType":"YulFunctionCall","src":"11787:48:22"},"nativeSrc":"11787:48:22","nodeType":"YulExpressionStatement","src":"11787:48:22"},{"nativeSrc":"11844:86:22","nodeType":"YulAssignment","src":"11844:86:22","value":{"arguments":[{"name":"value1","nativeSrc":"11916:6:22","nodeType":"YulIdentifier","src":"11916:6:22"},{"name":"tail","nativeSrc":"11925:4:22","nodeType":"YulIdentifier","src":"11925:4:22"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"11852:63:22","nodeType":"YulIdentifier","src":"11852:63:22"},"nativeSrc":"11852:78:22","nodeType":"YulFunctionCall","src":"11852:78:22"},"variableNames":[{"name":"tail","nativeSrc":"11844:4:22","nodeType":"YulIdentifier","src":"11844:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11951:9:22","nodeType":"YulIdentifier","src":"11951:9:22"},{"kind":"number","nativeSrc":"11962:2:22","nodeType":"YulLiteral","src":"11962:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11947:3:22","nodeType":"YulIdentifier","src":"11947:3:22"},"nativeSrc":"11947:18:22","nodeType":"YulFunctionCall","src":"11947:18:22"},{"arguments":[{"name":"tail","nativeSrc":"11971:4:22","nodeType":"YulIdentifier","src":"11971:4:22"},{"name":"headStart","nativeSrc":"11977:9:22","nodeType":"YulIdentifier","src":"11977:9:22"}],"functionName":{"name":"sub","nativeSrc":"11967:3:22","nodeType":"YulIdentifier","src":"11967:3:22"},"nativeSrc":"11967:20:22","nodeType":"YulFunctionCall","src":"11967:20:22"}],"functionName":{"name":"mstore","nativeSrc":"11940:6:22","nodeType":"YulIdentifier","src":"11940:6:22"},"nativeSrc":"11940:48:22","nodeType":"YulFunctionCall","src":"11940:48:22"},"nativeSrc":"11940:48:22","nodeType":"YulExpressionStatement","src":"11940:48:22"},{"nativeSrc":"11997:86:22","nodeType":"YulAssignment","src":"11997:86:22","value":{"arguments":[{"name":"value2","nativeSrc":"12069:6:22","nodeType":"YulIdentifier","src":"12069:6:22"},{"name":"tail","nativeSrc":"12078:4:22","nodeType":"YulIdentifier","src":"12078:4:22"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"12005:63:22","nodeType":"YulIdentifier","src":"12005:63:22"},"nativeSrc":"12005:78:22","nodeType":"YulFunctionCall","src":"12005:78:22"},"variableNames":[{"name":"tail","nativeSrc":"11997:4:22","nodeType":"YulIdentifier","src":"11997:4:22"}]},{"expression":{"arguments":[{"name":"value3","nativeSrc":"12137:6:22","nodeType":"YulIdentifier","src":"12137:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"12150:9:22","nodeType":"YulIdentifier","src":"12150:9:22"},{"kind":"number","nativeSrc":"12161:2:22","nodeType":"YulLiteral","src":"12161:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12146:3:22","nodeType":"YulIdentifier","src":"12146:3:22"},"nativeSrc":"12146:18:22","nodeType":"YulFunctionCall","src":"12146:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12093:43:22","nodeType":"YulIdentifier","src":"12093:43:22"},"nativeSrc":"12093:72:22","nodeType":"YulFunctionCall","src":"12093:72:22"},"nativeSrc":"12093:72:22","nodeType":"YulExpressionStatement","src":"12093:72:22"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"12219:6:22","nodeType":"YulIdentifier","src":"12219:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"12232:9:22","nodeType":"YulIdentifier","src":"12232:9:22"},{"kind":"number","nativeSrc":"12243:3:22","nodeType":"YulLiteral","src":"12243:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"12228:3:22","nodeType":"YulIdentifier","src":"12228:3:22"},"nativeSrc":"12228:19:22","nodeType":"YulFunctionCall","src":"12228:19:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12175:43:22","nodeType":"YulIdentifier","src":"12175:43:22"},"nativeSrc":"12175:73:22","nodeType":"YulFunctionCall","src":"12175:73:22"},"nativeSrc":"12175:73:22","nodeType":"YulExpressionStatement","src":"12175:73:22"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"12302:6:22","nodeType":"YulIdentifier","src":"12302:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"12315:9:22","nodeType":"YulIdentifier","src":"12315:9:22"},{"kind":"number","nativeSrc":"12326:3:22","nodeType":"YulLiteral","src":"12326:3:22","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"12311:3:22","nodeType":"YulIdentifier","src":"12311:3:22"},"nativeSrc":"12311:19:22","nodeType":"YulFunctionCall","src":"12311:19:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"12258:43:22","nodeType":"YulIdentifier","src":"12258:43:22"},"nativeSrc":"12258:73:22","nodeType":"YulFunctionCall","src":"12258:73:22"},"nativeSrc":"12258:73:22","nodeType":"YulExpressionStatement","src":"12258:73:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12352:9:22","nodeType":"YulIdentifier","src":"12352:9:22"},{"kind":"number","nativeSrc":"12363:3:22","nodeType":"YulLiteral","src":"12363:3:22","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"12348:3:22","nodeType":"YulIdentifier","src":"12348:3:22"},"nativeSrc":"12348:19:22","nodeType":"YulFunctionCall","src":"12348:19:22"},{"arguments":[{"name":"tail","nativeSrc":"12373:4:22","nodeType":"YulIdentifier","src":"12373:4:22"},{"name":"headStart","nativeSrc":"12379:9:22","nodeType":"YulIdentifier","src":"12379:9:22"}],"functionName":{"name":"sub","nativeSrc":"12369:3:22","nodeType":"YulIdentifier","src":"12369:3:22"},"nativeSrc":"12369:20:22","nodeType":"YulFunctionCall","src":"12369:20:22"}],"functionName":{"name":"mstore","nativeSrc":"12341:6:22","nodeType":"YulIdentifier","src":"12341:6:22"},"nativeSrc":"12341:49:22","nodeType":"YulFunctionCall","src":"12341:49:22"},"nativeSrc":"12341:49:22","nodeType":"YulExpressionStatement","src":"12341:49:22"},{"nativeSrc":"12399:116:22","nodeType":"YulAssignment","src":"12399:116:22","value":{"arguments":[{"name":"value6","nativeSrc":"12501:6:22","nodeType":"YulIdentifier","src":"12501:6:22"},{"name":"tail","nativeSrc":"12510:4:22","nodeType":"YulIdentifier","src":"12510:4:22"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"12407:93:22","nodeType":"YulIdentifier","src":"12407:93:22"},"nativeSrc":"12407:108:22","nodeType":"YulFunctionCall","src":"12407:108:22"},"variableNames":[{"name":"tail","nativeSrc":"12399:4:22","nodeType":"YulIdentifier","src":"12399:4:22"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"11307:1215:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11585:9:22","nodeType":"YulTypedName","src":"11585:9:22","type":""},{"name":"value6","nativeSrc":"11597:6:22","nodeType":"YulTypedName","src":"11597:6:22","type":""},{"name":"value5","nativeSrc":"11605:6:22","nodeType":"YulTypedName","src":"11605:6:22","type":""},{"name":"value4","nativeSrc":"11613:6:22","nodeType":"YulTypedName","src":"11613:6:22","type":""},{"name":"value3","nativeSrc":"11621:6:22","nodeType":"YulTypedName","src":"11621:6:22","type":""},{"name":"value2","nativeSrc":"11629:6:22","nodeType":"YulTypedName","src":"11629:6:22","type":""},{"name":"value1","nativeSrc":"11637:6:22","nodeType":"YulTypedName","src":"11637:6:22","type":""},{"name":"value0","nativeSrc":"11645:6:22","nodeType":"YulTypedName","src":"11645:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11656:4:22","nodeType":"YulTypedName","src":"11656:4:22","type":""}],"src":"11307:1215:22"},{"body":{"nativeSrc":"12617:28:22","nodeType":"YulBlock","src":"12617:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12634:1:22","nodeType":"YulLiteral","src":"12634:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"12637:1:22","nodeType":"YulLiteral","src":"12637:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"12627:6:22","nodeType":"YulIdentifier","src":"12627:6:22"},"nativeSrc":"12627:12:22","nodeType":"YulFunctionCall","src":"12627:12:22"},"nativeSrc":"12627:12:22","nodeType":"YulExpressionStatement","src":"12627:12:22"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"12528:117:22","nodeType":"YulFunctionDefinition","src":"12528:117:22"},{"body":{"nativeSrc":"12679:152:22","nodeType":"YulBlock","src":"12679:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12696:1:22","nodeType":"YulLiteral","src":"12696:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"12699:77:22","nodeType":"YulLiteral","src":"12699:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"12689:6:22","nodeType":"YulIdentifier","src":"12689:6:22"},"nativeSrc":"12689:88:22","nodeType":"YulFunctionCall","src":"12689:88:22"},"nativeSrc":"12689:88:22","nodeType":"YulExpressionStatement","src":"12689:88:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12793:1:22","nodeType":"YulLiteral","src":"12793:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"12796:4:22","nodeType":"YulLiteral","src":"12796:4:22","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"12786:6:22","nodeType":"YulIdentifier","src":"12786:6:22"},"nativeSrc":"12786:15:22","nodeType":"YulFunctionCall","src":"12786:15:22"},"nativeSrc":"12786:15:22","nodeType":"YulExpressionStatement","src":"12786:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12817:1:22","nodeType":"YulLiteral","src":"12817:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"12820:4:22","nodeType":"YulLiteral","src":"12820:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"12810:6:22","nodeType":"YulIdentifier","src":"12810:6:22"},"nativeSrc":"12810:15:22","nodeType":"YulFunctionCall","src":"12810:15:22"},"nativeSrc":"12810:15:22","nodeType":"YulExpressionStatement","src":"12810:15:22"}]},"name":"panic_error_0x41","nativeSrc":"12651:180:22","nodeType":"YulFunctionDefinition","src":"12651:180:22"},{"body":{"nativeSrc":"12880:238:22","nodeType":"YulBlock","src":"12880:238:22","statements":[{"nativeSrc":"12890:58:22","nodeType":"YulVariableDeclaration","src":"12890:58:22","value":{"arguments":[{"name":"memPtr","nativeSrc":"12912:6:22","nodeType":"YulIdentifier","src":"12912:6:22"},{"arguments":[{"name":"size","nativeSrc":"12942:4:22","nodeType":"YulIdentifier","src":"12942:4:22"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"12920:21:22","nodeType":"YulIdentifier","src":"12920:21:22"},"nativeSrc":"12920:27:22","nodeType":"YulFunctionCall","src":"12920:27:22"}],"functionName":{"name":"add","nativeSrc":"12908:3:22","nodeType":"YulIdentifier","src":"12908:3:22"},"nativeSrc":"12908:40:22","nodeType":"YulFunctionCall","src":"12908:40:22"},"variables":[{"name":"newFreePtr","nativeSrc":"12894:10:22","nodeType":"YulTypedName","src":"12894:10:22","type":""}]},{"body":{"nativeSrc":"13059:22:22","nodeType":"YulBlock","src":"13059:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"13061:16:22","nodeType":"YulIdentifier","src":"13061:16:22"},"nativeSrc":"13061:18:22","nodeType":"YulFunctionCall","src":"13061:18:22"},"nativeSrc":"13061:18:22","nodeType":"YulExpressionStatement","src":"13061:18:22"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"13002:10:22","nodeType":"YulIdentifier","src":"13002:10:22"},{"kind":"number","nativeSrc":"13014:18:22","nodeType":"YulLiteral","src":"13014:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"12999:2:22","nodeType":"YulIdentifier","src":"12999:2:22"},"nativeSrc":"12999:34:22","nodeType":"YulFunctionCall","src":"12999:34:22"},{"arguments":[{"name":"newFreePtr","nativeSrc":"13038:10:22","nodeType":"YulIdentifier","src":"13038:10:22"},{"name":"memPtr","nativeSrc":"13050:6:22","nodeType":"YulIdentifier","src":"13050:6:22"}],"functionName":{"name":"lt","nativeSrc":"13035:2:22","nodeType":"YulIdentifier","src":"13035:2:22"},"nativeSrc":"13035:22:22","nodeType":"YulFunctionCall","src":"13035:22:22"}],"functionName":{"name":"or","nativeSrc":"12996:2:22","nodeType":"YulIdentifier","src":"12996:2:22"},"nativeSrc":"12996:62:22","nodeType":"YulFunctionCall","src":"12996:62:22"},"nativeSrc":"12993:88:22","nodeType":"YulIf","src":"12993:88:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13097:2:22","nodeType":"YulLiteral","src":"13097:2:22","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"13101:10:22","nodeType":"YulIdentifier","src":"13101:10:22"}],"functionName":{"name":"mstore","nativeSrc":"13090:6:22","nodeType":"YulIdentifier","src":"13090:6:22"},"nativeSrc":"13090:22:22","nodeType":"YulFunctionCall","src":"13090:22:22"},"nativeSrc":"13090:22:22","nodeType":"YulExpressionStatement","src":"13090:22:22"}]},"name":"finalize_allocation","nativeSrc":"12837:281:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"12866:6:22","nodeType":"YulTypedName","src":"12866:6:22","type":""},{"name":"size","nativeSrc":"12874:4:22","nodeType":"YulTypedName","src":"12874:4:22","type":""}],"src":"12837:281:22"},{"body":{"nativeSrc":"13165:88:22","nodeType":"YulBlock","src":"13165:88:22","statements":[{"nativeSrc":"13175:30:22","nodeType":"YulAssignment","src":"13175:30:22","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"13185:18:22","nodeType":"YulIdentifier","src":"13185:18:22"},"nativeSrc":"13185:20:22","nodeType":"YulFunctionCall","src":"13185:20:22"},"variableNames":[{"name":"memPtr","nativeSrc":"13175:6:22","nodeType":"YulIdentifier","src":"13175:6:22"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"13234:6:22","nodeType":"YulIdentifier","src":"13234:6:22"},{"name":"size","nativeSrc":"13242:4:22","nodeType":"YulIdentifier","src":"13242:4:22"}],"functionName":{"name":"finalize_allocation","nativeSrc":"13214:19:22","nodeType":"YulIdentifier","src":"13214:19:22"},"nativeSrc":"13214:33:22","nodeType":"YulFunctionCall","src":"13214:33:22"},"nativeSrc":"13214:33:22","nodeType":"YulExpressionStatement","src":"13214:33:22"}]},"name":"allocate_memory","nativeSrc":"13124:129:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"13149:4:22","nodeType":"YulTypedName","src":"13149:4:22","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"13158:6:22","nodeType":"YulTypedName","src":"13158:6:22","type":""}],"src":"13124:129:22"},{"body":{"nativeSrc":"13326:241:22","nodeType":"YulBlock","src":"13326:241:22","statements":[{"body":{"nativeSrc":"13431:22:22","nodeType":"YulBlock","src":"13431:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"13433:16:22","nodeType":"YulIdentifier","src":"13433:16:22"},"nativeSrc":"13433:18:22","nodeType":"YulFunctionCall","src":"13433:18:22"},"nativeSrc":"13433:18:22","nodeType":"YulExpressionStatement","src":"13433:18:22"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"13403:6:22","nodeType":"YulIdentifier","src":"13403:6:22"},{"kind":"number","nativeSrc":"13411:18:22","nodeType":"YulLiteral","src":"13411:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"13400:2:22","nodeType":"YulIdentifier","src":"13400:2:22"},"nativeSrc":"13400:30:22","nodeType":"YulFunctionCall","src":"13400:30:22"},"nativeSrc":"13397:56:22","nodeType":"YulIf","src":"13397:56:22"},{"nativeSrc":"13463:37:22","nodeType":"YulAssignment","src":"13463:37:22","value":{"arguments":[{"name":"length","nativeSrc":"13493:6:22","nodeType":"YulIdentifier","src":"13493:6:22"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"13471:21:22","nodeType":"YulIdentifier","src":"13471:21:22"},"nativeSrc":"13471:29:22","nodeType":"YulFunctionCall","src":"13471:29:22"},"variableNames":[{"name":"size","nativeSrc":"13463:4:22","nodeType":"YulIdentifier","src":"13463:4:22"}]},{"nativeSrc":"13537:23:22","nodeType":"YulAssignment","src":"13537:23:22","value":{"arguments":[{"name":"size","nativeSrc":"13549:4:22","nodeType":"YulIdentifier","src":"13549:4:22"},{"kind":"number","nativeSrc":"13555:4:22","nodeType":"YulLiteral","src":"13555:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"13545:3:22","nodeType":"YulIdentifier","src":"13545:3:22"},"nativeSrc":"13545:15:22","nodeType":"YulFunctionCall","src":"13545:15:22"},"variableNames":[{"name":"size","nativeSrc":"13537:4:22","nodeType":"YulIdentifier","src":"13537:4:22"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"13259:308:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"13310:6:22","nodeType":"YulTypedName","src":"13310:6:22","type":""}],"returnVariables":[{"name":"size","nativeSrc":"13321:4:22","nodeType":"YulTypedName","src":"13321:4:22","type":""}],"src":"13259:308:22"},{"body":{"nativeSrc":"13637:82:22","nodeType":"YulBlock","src":"13637:82:22","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"13660:3:22","nodeType":"YulIdentifier","src":"13660:3:22"},{"name":"src","nativeSrc":"13665:3:22","nodeType":"YulIdentifier","src":"13665:3:22"},{"name":"length","nativeSrc":"13670:6:22","nodeType":"YulIdentifier","src":"13670:6:22"}],"functionName":{"name":"calldatacopy","nativeSrc":"13647:12:22","nodeType":"YulIdentifier","src":"13647:12:22"},"nativeSrc":"13647:30:22","nodeType":"YulFunctionCall","src":"13647:30:22"},"nativeSrc":"13647:30:22","nodeType":"YulExpressionStatement","src":"13647:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"13697:3:22","nodeType":"YulIdentifier","src":"13697:3:22"},{"name":"length","nativeSrc":"13702:6:22","nodeType":"YulIdentifier","src":"13702:6:22"}],"functionName":{"name":"add","nativeSrc":"13693:3:22","nodeType":"YulIdentifier","src":"13693:3:22"},"nativeSrc":"13693:16:22","nodeType":"YulFunctionCall","src":"13693:16:22"},{"kind":"number","nativeSrc":"13711:1:22","nodeType":"YulLiteral","src":"13711:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"13686:6:22","nodeType":"YulIdentifier","src":"13686:6:22"},"nativeSrc":"13686:27:22","nodeType":"YulFunctionCall","src":"13686:27:22"},"nativeSrc":"13686:27:22","nodeType":"YulExpressionStatement","src":"13686:27:22"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"13573:146:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"13619:3:22","nodeType":"YulTypedName","src":"13619:3:22","type":""},{"name":"dst","nativeSrc":"13624:3:22","nodeType":"YulTypedName","src":"13624:3:22","type":""},{"name":"length","nativeSrc":"13629:6:22","nodeType":"YulTypedName","src":"13629:6:22","type":""}],"src":"13573:146:22"},{"body":{"nativeSrc":"13809:341:22","nodeType":"YulBlock","src":"13809:341:22","statements":[{"nativeSrc":"13819:75:22","nodeType":"YulAssignment","src":"13819:75:22","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"13886:6:22","nodeType":"YulIdentifier","src":"13886:6:22"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"13844:41:22","nodeType":"YulIdentifier","src":"13844:41:22"},"nativeSrc":"13844:49:22","nodeType":"YulFunctionCall","src":"13844:49:22"}],"functionName":{"name":"allocate_memory","nativeSrc":"13828:15:22","nodeType":"YulIdentifier","src":"13828:15:22"},"nativeSrc":"13828:66:22","nodeType":"YulFunctionCall","src":"13828:66:22"},"variableNames":[{"name":"array","nativeSrc":"13819:5:22","nodeType":"YulIdentifier","src":"13819:5:22"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"13910:5:22","nodeType":"YulIdentifier","src":"13910:5:22"},{"name":"length","nativeSrc":"13917:6:22","nodeType":"YulIdentifier","src":"13917:6:22"}],"functionName":{"name":"mstore","nativeSrc":"13903:6:22","nodeType":"YulIdentifier","src":"13903:6:22"},"nativeSrc":"13903:21:22","nodeType":"YulFunctionCall","src":"13903:21:22"},"nativeSrc":"13903:21:22","nodeType":"YulExpressionStatement","src":"13903:21:22"},{"nativeSrc":"13933:27:22","nodeType":"YulVariableDeclaration","src":"13933:27:22","value":{"arguments":[{"name":"array","nativeSrc":"13948:5:22","nodeType":"YulIdentifier","src":"13948:5:22"},{"kind":"number","nativeSrc":"13955:4:22","nodeType":"YulLiteral","src":"13955:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"13944:3:22","nodeType":"YulIdentifier","src":"13944:3:22"},"nativeSrc":"13944:16:22","nodeType":"YulFunctionCall","src":"13944:16:22"},"variables":[{"name":"dst","nativeSrc":"13937:3:22","nodeType":"YulTypedName","src":"13937:3:22","type":""}]},{"body":{"nativeSrc":"13998:83:22","nodeType":"YulBlock","src":"13998:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"14000:77:22","nodeType":"YulIdentifier","src":"14000:77:22"},"nativeSrc":"14000:79:22","nodeType":"YulFunctionCall","src":"14000:79:22"},"nativeSrc":"14000:79:22","nodeType":"YulExpressionStatement","src":"14000:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"13979:3:22","nodeType":"YulIdentifier","src":"13979:3:22"},{"name":"length","nativeSrc":"13984:6:22","nodeType":"YulIdentifier","src":"13984:6:22"}],"functionName":{"name":"add","nativeSrc":"13975:3:22","nodeType":"YulIdentifier","src":"13975:3:22"},"nativeSrc":"13975:16:22","nodeType":"YulFunctionCall","src":"13975:16:22"},{"name":"end","nativeSrc":"13993:3:22","nodeType":"YulIdentifier","src":"13993:3:22"}],"functionName":{"name":"gt","nativeSrc":"13972:2:22","nodeType":"YulIdentifier","src":"13972:2:22"},"nativeSrc":"13972:25:22","nodeType":"YulFunctionCall","src":"13972:25:22"},"nativeSrc":"13969:112:22","nodeType":"YulIf","src":"13969:112:22"},{"expression":{"arguments":[{"name":"src","nativeSrc":"14127:3:22","nodeType":"YulIdentifier","src":"14127:3:22"},{"name":"dst","nativeSrc":"14132:3:22","nodeType":"YulIdentifier","src":"14132:3:22"},{"name":"length","nativeSrc":"14137:6:22","nodeType":"YulIdentifier","src":"14137:6:22"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"14090:36:22","nodeType":"YulIdentifier","src":"14090:36:22"},"nativeSrc":"14090:54:22","nodeType":"YulFunctionCall","src":"14090:54:22"},"nativeSrc":"14090:54:22","nodeType":"YulExpressionStatement","src":"14090:54:22"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nativeSrc":"13725:425:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"13782:3:22","nodeType":"YulTypedName","src":"13782:3:22","type":""},{"name":"length","nativeSrc":"13787:6:22","nodeType":"YulTypedName","src":"13787:6:22","type":""},{"name":"end","nativeSrc":"13795:3:22","nodeType":"YulTypedName","src":"13795:3:22","type":""}],"returnVariables":[{"name":"array","nativeSrc":"13803:5:22","nodeType":"YulTypedName","src":"13803:5:22","type":""}],"src":"13725:425:22"},{"body":{"nativeSrc":"14232:278:22","nodeType":"YulBlock","src":"14232:278:22","statements":[{"body":{"nativeSrc":"14281:83:22","nodeType":"YulBlock","src":"14281:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"14283:77:22","nodeType":"YulIdentifier","src":"14283:77:22"},"nativeSrc":"14283:79:22","nodeType":"YulFunctionCall","src":"14283:79:22"},"nativeSrc":"14283:79:22","nodeType":"YulExpressionStatement","src":"14283:79:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"14260:6:22","nodeType":"YulIdentifier","src":"14260:6:22"},{"kind":"number","nativeSrc":"14268:4:22","nodeType":"YulLiteral","src":"14268:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"14256:3:22","nodeType":"YulIdentifier","src":"14256:3:22"},"nativeSrc":"14256:17:22","nodeType":"YulFunctionCall","src":"14256:17:22"},{"name":"end","nativeSrc":"14275:3:22","nodeType":"YulIdentifier","src":"14275:3:22"}],"functionName":{"name":"slt","nativeSrc":"14252:3:22","nodeType":"YulIdentifier","src":"14252:3:22"},"nativeSrc":"14252:27:22","nodeType":"YulFunctionCall","src":"14252:27:22"}],"functionName":{"name":"iszero","nativeSrc":"14245:6:22","nodeType":"YulIdentifier","src":"14245:6:22"},"nativeSrc":"14245:35:22","nodeType":"YulFunctionCall","src":"14245:35:22"},"nativeSrc":"14242:122:22","nodeType":"YulIf","src":"14242:122:22"},{"nativeSrc":"14373:34:22","nodeType":"YulVariableDeclaration","src":"14373:34:22","value":{"arguments":[{"name":"offset","nativeSrc":"14400:6:22","nodeType":"YulIdentifier","src":"14400:6:22"}],"functionName":{"name":"calldataload","nativeSrc":"14387:12:22","nodeType":"YulIdentifier","src":"14387:12:22"},"nativeSrc":"14387:20:22","nodeType":"YulFunctionCall","src":"14387:20:22"},"variables":[{"name":"length","nativeSrc":"14377:6:22","nodeType":"YulTypedName","src":"14377:6:22","type":""}]},{"nativeSrc":"14416:88:22","nodeType":"YulAssignment","src":"14416:88:22","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"14477:6:22","nodeType":"YulIdentifier","src":"14477:6:22"},{"kind":"number","nativeSrc":"14485:4:22","nodeType":"YulLiteral","src":"14485:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14473:3:22","nodeType":"YulIdentifier","src":"14473:3:22"},"nativeSrc":"14473:17:22","nodeType":"YulFunctionCall","src":"14473:17:22"},{"name":"length","nativeSrc":"14492:6:22","nodeType":"YulIdentifier","src":"14492:6:22"},{"name":"end","nativeSrc":"14500:3:22","nodeType":"YulIdentifier","src":"14500:3:22"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nativeSrc":"14425:47:22","nodeType":"YulIdentifier","src":"14425:47:22"},"nativeSrc":"14425:79:22","nodeType":"YulFunctionCall","src":"14425:79:22"},"variableNames":[{"name":"array","nativeSrc":"14416:5:22","nodeType":"YulIdentifier","src":"14416:5:22"}]}]},"name":"abi_decode_t_string_memory_ptr","nativeSrc":"14170:340:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"14210:6:22","nodeType":"YulTypedName","src":"14210:6:22","type":""},{"name":"end","nativeSrc":"14218:3:22","nodeType":"YulTypedName","src":"14218:3:22","type":""}],"returnVariables":[{"name":"array","nativeSrc":"14226:5:22","nodeType":"YulTypedName","src":"14226:5:22","type":""}],"src":"14170:340:22"},{"body":{"nativeSrc":"14609:561:22","nodeType":"YulBlock","src":"14609:561:22","statements":[{"body":{"nativeSrc":"14655:83:22","nodeType":"YulBlock","src":"14655:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"14657:77:22","nodeType":"YulIdentifier","src":"14657:77:22"},"nativeSrc":"14657:79:22","nodeType":"YulFunctionCall","src":"14657:79:22"},"nativeSrc":"14657:79:22","nodeType":"YulExpressionStatement","src":"14657:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"14630:7:22","nodeType":"YulIdentifier","src":"14630:7:22"},{"name":"headStart","nativeSrc":"14639:9:22","nodeType":"YulIdentifier","src":"14639:9:22"}],"functionName":{"name":"sub","nativeSrc":"14626:3:22","nodeType":"YulIdentifier","src":"14626:3:22"},"nativeSrc":"14626:23:22","nodeType":"YulFunctionCall","src":"14626:23:22"},{"kind":"number","nativeSrc":"14651:2:22","nodeType":"YulLiteral","src":"14651:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"14622:3:22","nodeType":"YulIdentifier","src":"14622:3:22"},"nativeSrc":"14622:32:22","nodeType":"YulFunctionCall","src":"14622:32:22"},"nativeSrc":"14619:119:22","nodeType":"YulIf","src":"14619:119:22"},{"nativeSrc":"14748:117:22","nodeType":"YulBlock","src":"14748:117:22","statements":[{"nativeSrc":"14763:15:22","nodeType":"YulVariableDeclaration","src":"14763:15:22","value":{"kind":"number","nativeSrc":"14777:1:22","nodeType":"YulLiteral","src":"14777:1:22","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"14767:6:22","nodeType":"YulTypedName","src":"14767:6:22","type":""}]},{"nativeSrc":"14792:63:22","nodeType":"YulAssignment","src":"14792:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14827:9:22","nodeType":"YulIdentifier","src":"14827:9:22"},{"name":"offset","nativeSrc":"14838:6:22","nodeType":"YulIdentifier","src":"14838:6:22"}],"functionName":{"name":"add","nativeSrc":"14823:3:22","nodeType":"YulIdentifier","src":"14823:3:22"},"nativeSrc":"14823:22:22","nodeType":"YulFunctionCall","src":"14823:22:22"},{"name":"dataEnd","nativeSrc":"14847:7:22","nodeType":"YulIdentifier","src":"14847:7:22"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"14802:20:22","nodeType":"YulIdentifier","src":"14802:20:22"},"nativeSrc":"14802:53:22","nodeType":"YulFunctionCall","src":"14802:53:22"},"variableNames":[{"name":"value0","nativeSrc":"14792:6:22","nodeType":"YulIdentifier","src":"14792:6:22"}]}]},{"nativeSrc":"14875:288:22","nodeType":"YulBlock","src":"14875:288:22","statements":[{"nativeSrc":"14890:46:22","nodeType":"YulVariableDeclaration","src":"14890:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14921:9:22","nodeType":"YulIdentifier","src":"14921:9:22"},{"kind":"number","nativeSrc":"14932:2:22","nodeType":"YulLiteral","src":"14932:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14917:3:22","nodeType":"YulIdentifier","src":"14917:3:22"},"nativeSrc":"14917:18:22","nodeType":"YulFunctionCall","src":"14917:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"14904:12:22","nodeType":"YulIdentifier","src":"14904:12:22"},"nativeSrc":"14904:32:22","nodeType":"YulFunctionCall","src":"14904:32:22"},"variables":[{"name":"offset","nativeSrc":"14894:6:22","nodeType":"YulTypedName","src":"14894:6:22","type":""}]},{"body":{"nativeSrc":"14983:83:22","nodeType":"YulBlock","src":"14983:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"14985:77:22","nodeType":"YulIdentifier","src":"14985:77:22"},"nativeSrc":"14985:79:22","nodeType":"YulFunctionCall","src":"14985:79:22"},"nativeSrc":"14985:79:22","nodeType":"YulExpressionStatement","src":"14985:79:22"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"14955:6:22","nodeType":"YulIdentifier","src":"14955:6:22"},{"kind":"number","nativeSrc":"14963:18:22","nodeType":"YulLiteral","src":"14963:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"14952:2:22","nodeType":"YulIdentifier","src":"14952:2:22"},"nativeSrc":"14952:30:22","nodeType":"YulFunctionCall","src":"14952:30:22"},"nativeSrc":"14949:117:22","nodeType":"YulIf","src":"14949:117:22"},{"nativeSrc":"15080:73:22","nodeType":"YulAssignment","src":"15080:73:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15125:9:22","nodeType":"YulIdentifier","src":"15125:9:22"},{"name":"offset","nativeSrc":"15136:6:22","nodeType":"YulIdentifier","src":"15136:6:22"}],"functionName":{"name":"add","nativeSrc":"15121:3:22","nodeType":"YulIdentifier","src":"15121:3:22"},"nativeSrc":"15121:22:22","nodeType":"YulFunctionCall","src":"15121:22:22"},{"name":"dataEnd","nativeSrc":"15145:7:22","nodeType":"YulIdentifier","src":"15145:7:22"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"15090:30:22","nodeType":"YulIdentifier","src":"15090:30:22"},"nativeSrc":"15090:63:22","nodeType":"YulFunctionCall","src":"15090:63:22"},"variableNames":[{"name":"value1","nativeSrc":"15080:6:22","nodeType":"YulIdentifier","src":"15080:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_string_memory_ptr","nativeSrc":"14516:654:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14571:9:22","nodeType":"YulTypedName","src":"14571:9:22","type":""},{"name":"dataEnd","nativeSrc":"14582:7:22","nodeType":"YulTypedName","src":"14582:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"14594:6:22","nodeType":"YulTypedName","src":"14594:6:22","type":""},{"name":"value1","nativeSrc":"14602:6:22","nodeType":"YulTypedName","src":"14602:6:22","type":""}],"src":"14516:654:22"},{"body":{"nativeSrc":"15217:77:22","nodeType":"YulBlock","src":"15217:77:22","statements":[{"body":{"nativeSrc":"15272:16:22","nodeType":"YulBlock","src":"15272:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15281:1:22","nodeType":"YulLiteral","src":"15281:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"15284:1:22","nodeType":"YulLiteral","src":"15284:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"15274:6:22","nodeType":"YulIdentifier","src":"15274:6:22"},"nativeSrc":"15274:12:22","nodeType":"YulFunctionCall","src":"15274:12:22"},"nativeSrc":"15274:12:22","nodeType":"YulExpressionStatement","src":"15274:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"15240:5:22","nodeType":"YulIdentifier","src":"15240:5:22"},{"arguments":[{"name":"value","nativeSrc":"15263:5:22","nodeType":"YulIdentifier","src":"15263:5:22"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"15247:15:22","nodeType":"YulIdentifier","src":"15247:15:22"},"nativeSrc":"15247:22:22","nodeType":"YulFunctionCall","src":"15247:22:22"}],"functionName":{"name":"eq","nativeSrc":"15237:2:22","nodeType":"YulIdentifier","src":"15237:2:22"},"nativeSrc":"15237:33:22","nodeType":"YulFunctionCall","src":"15237:33:22"}],"functionName":{"name":"iszero","nativeSrc":"15230:6:22","nodeType":"YulIdentifier","src":"15230:6:22"},"nativeSrc":"15230:41:22","nodeType":"YulFunctionCall","src":"15230:41:22"},"nativeSrc":"15227:61:22","nodeType":"YulIf","src":"15227:61:22"}]},"name":"validator_revert_t_uint8","nativeSrc":"15176:118:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"15210:5:22","nodeType":"YulTypedName","src":"15210:5:22","type":""}],"src":"15176:118:22"},{"body":{"nativeSrc":"15350:85:22","nodeType":"YulBlock","src":"15350:85:22","statements":[{"nativeSrc":"15360:29:22","nodeType":"YulAssignment","src":"15360:29:22","value":{"arguments":[{"name":"offset","nativeSrc":"15382:6:22","nodeType":"YulIdentifier","src":"15382:6:22"}],"functionName":{"name":"calldataload","nativeSrc":"15369:12:22","nodeType":"YulIdentifier","src":"15369:12:22"},"nativeSrc":"15369:20:22","nodeType":"YulFunctionCall","src":"15369:20:22"},"variableNames":[{"name":"value","nativeSrc":"15360:5:22","nodeType":"YulIdentifier","src":"15360:5:22"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"15423:5:22","nodeType":"YulIdentifier","src":"15423:5:22"}],"functionName":{"name":"validator_revert_t_uint8","nativeSrc":"15398:24:22","nodeType":"YulIdentifier","src":"15398:24:22"},"nativeSrc":"15398:31:22","nodeType":"YulFunctionCall","src":"15398:31:22"},"nativeSrc":"15398:31:22","nodeType":"YulExpressionStatement","src":"15398:31:22"}]},"name":"abi_decode_t_uint8","nativeSrc":"15300:135:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"15328:6:22","nodeType":"YulTypedName","src":"15328:6:22","type":""},{"name":"end","nativeSrc":"15336:3:22","nodeType":"YulTypedName","src":"15336:3:22","type":""}],"returnVariables":[{"name":"value","nativeSrc":"15344:5:22","nodeType":"YulTypedName","src":"15344:5:22","type":""}],"src":"15300:135:22"},{"body":{"nativeSrc":"15484:79:22","nodeType":"YulBlock","src":"15484:79:22","statements":[{"body":{"nativeSrc":"15541:16:22","nodeType":"YulBlock","src":"15541:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15550:1:22","nodeType":"YulLiteral","src":"15550:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"15553:1:22","nodeType":"YulLiteral","src":"15553:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"15543:6:22","nodeType":"YulIdentifier","src":"15543:6:22"},"nativeSrc":"15543:12:22","nodeType":"YulFunctionCall","src":"15543:12:22"},"nativeSrc":"15543:12:22","nodeType":"YulExpressionStatement","src":"15543:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"15507:5:22","nodeType":"YulIdentifier","src":"15507:5:22"},{"arguments":[{"name":"value","nativeSrc":"15532:5:22","nodeType":"YulIdentifier","src":"15532:5:22"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"15514:17:22","nodeType":"YulIdentifier","src":"15514:17:22"},"nativeSrc":"15514:24:22","nodeType":"YulFunctionCall","src":"15514:24:22"}],"functionName":{"name":"eq","nativeSrc":"15504:2:22","nodeType":"YulIdentifier","src":"15504:2:22"},"nativeSrc":"15504:35:22","nodeType":"YulFunctionCall","src":"15504:35:22"}],"functionName":{"name":"iszero","nativeSrc":"15497:6:22","nodeType":"YulIdentifier","src":"15497:6:22"},"nativeSrc":"15497:43:22","nodeType":"YulFunctionCall","src":"15497:43:22"},"nativeSrc":"15494:63:22","nodeType":"YulIf","src":"15494:63:22"}]},"name":"validator_revert_t_bytes32","nativeSrc":"15441:122:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"15477:5:22","nodeType":"YulTypedName","src":"15477:5:22","type":""}],"src":"15441:122:22"},{"body":{"nativeSrc":"15621:87:22","nodeType":"YulBlock","src":"15621:87:22","statements":[{"nativeSrc":"15631:29:22","nodeType":"YulAssignment","src":"15631:29:22","value":{"arguments":[{"name":"offset","nativeSrc":"15653:6:22","nodeType":"YulIdentifier","src":"15653:6:22"}],"functionName":{"name":"calldataload","nativeSrc":"15640:12:22","nodeType":"YulIdentifier","src":"15640:12:22"},"nativeSrc":"15640:20:22","nodeType":"YulFunctionCall","src":"15640:20:22"},"variableNames":[{"name":"value","nativeSrc":"15631:5:22","nodeType":"YulIdentifier","src":"15631:5:22"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"15696:5:22","nodeType":"YulIdentifier","src":"15696:5:22"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"15669:26:22","nodeType":"YulIdentifier","src":"15669:26:22"},"nativeSrc":"15669:33:22","nodeType":"YulFunctionCall","src":"15669:33:22"},"nativeSrc":"15669:33:22","nodeType":"YulExpressionStatement","src":"15669:33:22"}]},"name":"abi_decode_t_bytes32","nativeSrc":"15569:139:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"15599:6:22","nodeType":"YulTypedName","src":"15599:6:22","type":""},{"name":"end","nativeSrc":"15607:3:22","nodeType":"YulTypedName","src":"15607:3:22","type":""}],"returnVariables":[{"name":"value","nativeSrc":"15615:5:22","nodeType":"YulTypedName","src":"15615:5:22","type":""}],"src":"15569:139:22"},{"body":{"nativeSrc":"15880:1033:22","nodeType":"YulBlock","src":"15880:1033:22","statements":[{"body":{"nativeSrc":"15927:83:22","nodeType":"YulBlock","src":"15927:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"15929:77:22","nodeType":"YulIdentifier","src":"15929:77:22"},"nativeSrc":"15929:79:22","nodeType":"YulFunctionCall","src":"15929:79:22"},"nativeSrc":"15929:79:22","nodeType":"YulExpressionStatement","src":"15929:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"15901:7:22","nodeType":"YulIdentifier","src":"15901:7:22"},{"name":"headStart","nativeSrc":"15910:9:22","nodeType":"YulIdentifier","src":"15910:9:22"}],"functionName":{"name":"sub","nativeSrc":"15897:3:22","nodeType":"YulIdentifier","src":"15897:3:22"},"nativeSrc":"15897:23:22","nodeType":"YulFunctionCall","src":"15897:23:22"},{"kind":"number","nativeSrc":"15922:3:22","nodeType":"YulLiteral","src":"15922:3:22","type":"","value":"224"}],"functionName":{"name":"slt","nativeSrc":"15893:3:22","nodeType":"YulIdentifier","src":"15893:3:22"},"nativeSrc":"15893:33:22","nodeType":"YulFunctionCall","src":"15893:33:22"},"nativeSrc":"15890:120:22","nodeType":"YulIf","src":"15890:120:22"},{"nativeSrc":"16020:117:22","nodeType":"YulBlock","src":"16020:117:22","statements":[{"nativeSrc":"16035:15:22","nodeType":"YulVariableDeclaration","src":"16035:15:22","value":{"kind":"number","nativeSrc":"16049:1:22","nodeType":"YulLiteral","src":"16049:1:22","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"16039:6:22","nodeType":"YulTypedName","src":"16039:6:22","type":""}]},{"nativeSrc":"16064:63:22","nodeType":"YulAssignment","src":"16064:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16099:9:22","nodeType":"YulIdentifier","src":"16099:9:22"},{"name":"offset","nativeSrc":"16110:6:22","nodeType":"YulIdentifier","src":"16110:6:22"}],"functionName":{"name":"add","nativeSrc":"16095:3:22","nodeType":"YulIdentifier","src":"16095:3:22"},"nativeSrc":"16095:22:22","nodeType":"YulFunctionCall","src":"16095:22:22"},{"name":"dataEnd","nativeSrc":"16119:7:22","nodeType":"YulIdentifier","src":"16119:7:22"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"16074:20:22","nodeType":"YulIdentifier","src":"16074:20:22"},"nativeSrc":"16074:53:22","nodeType":"YulFunctionCall","src":"16074:53:22"},"variableNames":[{"name":"value0","nativeSrc":"16064:6:22","nodeType":"YulIdentifier","src":"16064:6:22"}]}]},{"nativeSrc":"16147:118:22","nodeType":"YulBlock","src":"16147:118:22","statements":[{"nativeSrc":"16162:16:22","nodeType":"YulVariableDeclaration","src":"16162:16:22","value":{"kind":"number","nativeSrc":"16176:2:22","nodeType":"YulLiteral","src":"16176:2:22","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"16166:6:22","nodeType":"YulTypedName","src":"16166:6:22","type":""}]},{"nativeSrc":"16192:63:22","nodeType":"YulAssignment","src":"16192:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16227:9:22","nodeType":"YulIdentifier","src":"16227:9:22"},{"name":"offset","nativeSrc":"16238:6:22","nodeType":"YulIdentifier","src":"16238:6:22"}],"functionName":{"name":"add","nativeSrc":"16223:3:22","nodeType":"YulIdentifier","src":"16223:3:22"},"nativeSrc":"16223:22:22","nodeType":"YulFunctionCall","src":"16223:22:22"},{"name":"dataEnd","nativeSrc":"16247:7:22","nodeType":"YulIdentifier","src":"16247:7:22"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"16202:20:22","nodeType":"YulIdentifier","src":"16202:20:22"},"nativeSrc":"16202:53:22","nodeType":"YulFunctionCall","src":"16202:53:22"},"variableNames":[{"name":"value1","nativeSrc":"16192:6:22","nodeType":"YulIdentifier","src":"16192:6:22"}]}]},{"nativeSrc":"16275:118:22","nodeType":"YulBlock","src":"16275:118:22","statements":[{"nativeSrc":"16290:16:22","nodeType":"YulVariableDeclaration","src":"16290:16:22","value":{"kind":"number","nativeSrc":"16304:2:22","nodeType":"YulLiteral","src":"16304:2:22","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"16294:6:22","nodeType":"YulTypedName","src":"16294:6:22","type":""}]},{"nativeSrc":"16320:63:22","nodeType":"YulAssignment","src":"16320:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16355:9:22","nodeType":"YulIdentifier","src":"16355:9:22"},{"name":"offset","nativeSrc":"16366:6:22","nodeType":"YulIdentifier","src":"16366:6:22"}],"functionName":{"name":"add","nativeSrc":"16351:3:22","nodeType":"YulIdentifier","src":"16351:3:22"},"nativeSrc":"16351:22:22","nodeType":"YulFunctionCall","src":"16351:22:22"},{"name":"dataEnd","nativeSrc":"16375:7:22","nodeType":"YulIdentifier","src":"16375:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"16330:20:22","nodeType":"YulIdentifier","src":"16330:20:22"},"nativeSrc":"16330:53:22","nodeType":"YulFunctionCall","src":"16330:53:22"},"variableNames":[{"name":"value2","nativeSrc":"16320:6:22","nodeType":"YulIdentifier","src":"16320:6:22"}]}]},{"nativeSrc":"16403:118:22","nodeType":"YulBlock","src":"16403:118:22","statements":[{"nativeSrc":"16418:16:22","nodeType":"YulVariableDeclaration","src":"16418:16:22","value":{"kind":"number","nativeSrc":"16432:2:22","nodeType":"YulLiteral","src":"16432:2:22","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"16422:6:22","nodeType":"YulTypedName","src":"16422:6:22","type":""}]},{"nativeSrc":"16448:63:22","nodeType":"YulAssignment","src":"16448:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16483:9:22","nodeType":"YulIdentifier","src":"16483:9:22"},{"name":"offset","nativeSrc":"16494:6:22","nodeType":"YulIdentifier","src":"16494:6:22"}],"functionName":{"name":"add","nativeSrc":"16479:3:22","nodeType":"YulIdentifier","src":"16479:3:22"},"nativeSrc":"16479:22:22","nodeType":"YulFunctionCall","src":"16479:22:22"},{"name":"dataEnd","nativeSrc":"16503:7:22","nodeType":"YulIdentifier","src":"16503:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"16458:20:22","nodeType":"YulIdentifier","src":"16458:20:22"},"nativeSrc":"16458:53:22","nodeType":"YulFunctionCall","src":"16458:53:22"},"variableNames":[{"name":"value3","nativeSrc":"16448:6:22","nodeType":"YulIdentifier","src":"16448:6:22"}]}]},{"nativeSrc":"16531:117:22","nodeType":"YulBlock","src":"16531:117:22","statements":[{"nativeSrc":"16546:17:22","nodeType":"YulVariableDeclaration","src":"16546:17:22","value":{"kind":"number","nativeSrc":"16560:3:22","nodeType":"YulLiteral","src":"16560:3:22","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"16550:6:22","nodeType":"YulTypedName","src":"16550:6:22","type":""}]},{"nativeSrc":"16577:61:22","nodeType":"YulAssignment","src":"16577:61:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16610:9:22","nodeType":"YulIdentifier","src":"16610:9:22"},{"name":"offset","nativeSrc":"16621:6:22","nodeType":"YulIdentifier","src":"16621:6:22"}],"functionName":{"name":"add","nativeSrc":"16606:3:22","nodeType":"YulIdentifier","src":"16606:3:22"},"nativeSrc":"16606:22:22","nodeType":"YulFunctionCall","src":"16606:22:22"},{"name":"dataEnd","nativeSrc":"16630:7:22","nodeType":"YulIdentifier","src":"16630:7:22"}],"functionName":{"name":"abi_decode_t_uint8","nativeSrc":"16587:18:22","nodeType":"YulIdentifier","src":"16587:18:22"},"nativeSrc":"16587:51:22","nodeType":"YulFunctionCall","src":"16587:51:22"},"variableNames":[{"name":"value4","nativeSrc":"16577:6:22","nodeType":"YulIdentifier","src":"16577:6:22"}]}]},{"nativeSrc":"16658:119:22","nodeType":"YulBlock","src":"16658:119:22","statements":[{"nativeSrc":"16673:17:22","nodeType":"YulVariableDeclaration","src":"16673:17:22","value":{"kind":"number","nativeSrc":"16687:3:22","nodeType":"YulLiteral","src":"16687:3:22","type":"","value":"160"},"variables":[{"name":"offset","nativeSrc":"16677:6:22","nodeType":"YulTypedName","src":"16677:6:22","type":""}]},{"nativeSrc":"16704:63:22","nodeType":"YulAssignment","src":"16704:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16739:9:22","nodeType":"YulIdentifier","src":"16739:9:22"},{"name":"offset","nativeSrc":"16750:6:22","nodeType":"YulIdentifier","src":"16750:6:22"}],"functionName":{"name":"add","nativeSrc":"16735:3:22","nodeType":"YulIdentifier","src":"16735:3:22"},"nativeSrc":"16735:22:22","nodeType":"YulFunctionCall","src":"16735:22:22"},{"name":"dataEnd","nativeSrc":"16759:7:22","nodeType":"YulIdentifier","src":"16759:7:22"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"16714:20:22","nodeType":"YulIdentifier","src":"16714:20:22"},"nativeSrc":"16714:53:22","nodeType":"YulFunctionCall","src":"16714:53:22"},"variableNames":[{"name":"value5","nativeSrc":"16704:6:22","nodeType":"YulIdentifier","src":"16704:6:22"}]}]},{"nativeSrc":"16787:119:22","nodeType":"YulBlock","src":"16787:119:22","statements":[{"nativeSrc":"16802:17:22","nodeType":"YulVariableDeclaration","src":"16802:17:22","value":{"kind":"number","nativeSrc":"16816:3:22","nodeType":"YulLiteral","src":"16816:3:22","type":"","value":"192"},"variables":[{"name":"offset","nativeSrc":"16806:6:22","nodeType":"YulTypedName","src":"16806:6:22","type":""}]},{"nativeSrc":"16833:63:22","nodeType":"YulAssignment","src":"16833:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16868:9:22","nodeType":"YulIdentifier","src":"16868:9:22"},{"name":"offset","nativeSrc":"16879:6:22","nodeType":"YulIdentifier","src":"16879:6:22"}],"functionName":{"name":"add","nativeSrc":"16864:3:22","nodeType":"YulIdentifier","src":"16864:3:22"},"nativeSrc":"16864:22:22","nodeType":"YulFunctionCall","src":"16864:22:22"},{"name":"dataEnd","nativeSrc":"16888:7:22","nodeType":"YulIdentifier","src":"16888:7:22"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"16843:20:22","nodeType":"YulIdentifier","src":"16843:20:22"},"nativeSrc":"16843:53:22","nodeType":"YulFunctionCall","src":"16843:53:22"},"variableNames":[{"name":"value6","nativeSrc":"16833:6:22","nodeType":"YulIdentifier","src":"16833:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nativeSrc":"15714:1199:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15802:9:22","nodeType":"YulTypedName","src":"15802:9:22","type":""},{"name":"dataEnd","nativeSrc":"15813:7:22","nodeType":"YulTypedName","src":"15813:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"15825:6:22","nodeType":"YulTypedName","src":"15825:6:22","type":""},{"name":"value1","nativeSrc":"15833:6:22","nodeType":"YulTypedName","src":"15833:6:22","type":""},{"name":"value2","nativeSrc":"15841:6:22","nodeType":"YulTypedName","src":"15841:6:22","type":""},{"name":"value3","nativeSrc":"15849:6:22","nodeType":"YulTypedName","src":"15849:6:22","type":""},{"name":"value4","nativeSrc":"15857:6:22","nodeType":"YulTypedName","src":"15857:6:22","type":""},{"name":"value5","nativeSrc":"15865:6:22","nodeType":"YulTypedName","src":"15865:6:22","type":""},{"name":"value6","nativeSrc":"15873:6:22","nodeType":"YulTypedName","src":"15873:6:22","type":""}],"src":"15714:1199:22"},{"body":{"nativeSrc":"17002:391:22","nodeType":"YulBlock","src":"17002:391:22","statements":[{"body":{"nativeSrc":"17048:83:22","nodeType":"YulBlock","src":"17048:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"17050:77:22","nodeType":"YulIdentifier","src":"17050:77:22"},"nativeSrc":"17050:79:22","nodeType":"YulFunctionCall","src":"17050:79:22"},"nativeSrc":"17050:79:22","nodeType":"YulExpressionStatement","src":"17050:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"17023:7:22","nodeType":"YulIdentifier","src":"17023:7:22"},{"name":"headStart","nativeSrc":"17032:9:22","nodeType":"YulIdentifier","src":"17032:9:22"}],"functionName":{"name":"sub","nativeSrc":"17019:3:22","nodeType":"YulIdentifier","src":"17019:3:22"},"nativeSrc":"17019:23:22","nodeType":"YulFunctionCall","src":"17019:23:22"},{"kind":"number","nativeSrc":"17044:2:22","nodeType":"YulLiteral","src":"17044:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"17015:3:22","nodeType":"YulIdentifier","src":"17015:3:22"},"nativeSrc":"17015:32:22","nodeType":"YulFunctionCall","src":"17015:32:22"},"nativeSrc":"17012:119:22","nodeType":"YulIf","src":"17012:119:22"},{"nativeSrc":"17141:117:22","nodeType":"YulBlock","src":"17141:117:22","statements":[{"nativeSrc":"17156:15:22","nodeType":"YulVariableDeclaration","src":"17156:15:22","value":{"kind":"number","nativeSrc":"17170:1:22","nodeType":"YulLiteral","src":"17170:1:22","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"17160:6:22","nodeType":"YulTypedName","src":"17160:6:22","type":""}]},{"nativeSrc":"17185:63:22","nodeType":"YulAssignment","src":"17185:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17220:9:22","nodeType":"YulIdentifier","src":"17220:9:22"},{"name":"offset","nativeSrc":"17231:6:22","nodeType":"YulIdentifier","src":"17231:6:22"}],"functionName":{"name":"add","nativeSrc":"17216:3:22","nodeType":"YulIdentifier","src":"17216:3:22"},"nativeSrc":"17216:22:22","nodeType":"YulFunctionCall","src":"17216:22:22"},{"name":"dataEnd","nativeSrc":"17240:7:22","nodeType":"YulIdentifier","src":"17240:7:22"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"17195:20:22","nodeType":"YulIdentifier","src":"17195:20:22"},"nativeSrc":"17195:53:22","nodeType":"YulFunctionCall","src":"17195:53:22"},"variableNames":[{"name":"value0","nativeSrc":"17185:6:22","nodeType":"YulIdentifier","src":"17185:6:22"}]}]},{"nativeSrc":"17268:118:22","nodeType":"YulBlock","src":"17268:118:22","statements":[{"nativeSrc":"17283:16:22","nodeType":"YulVariableDeclaration","src":"17283:16:22","value":{"kind":"number","nativeSrc":"17297:2:22","nodeType":"YulLiteral","src":"17297:2:22","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"17287:6:22","nodeType":"YulTypedName","src":"17287:6:22","type":""}]},{"nativeSrc":"17313:63:22","nodeType":"YulAssignment","src":"17313:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17348:9:22","nodeType":"YulIdentifier","src":"17348:9:22"},{"name":"offset","nativeSrc":"17359:6:22","nodeType":"YulIdentifier","src":"17359:6:22"}],"functionName":{"name":"add","nativeSrc":"17344:3:22","nodeType":"YulIdentifier","src":"17344:3:22"},"nativeSrc":"17344:22:22","nodeType":"YulFunctionCall","src":"17344:22:22"},{"name":"dataEnd","nativeSrc":"17368:7:22","nodeType":"YulIdentifier","src":"17368:7:22"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"17323:20:22","nodeType":"YulIdentifier","src":"17323:20:22"},"nativeSrc":"17323:53:22","nodeType":"YulFunctionCall","src":"17323:53:22"},"variableNames":[{"name":"value1","nativeSrc":"17313:6:22","nodeType":"YulIdentifier","src":"17313:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"16919:474:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16964:9:22","nodeType":"YulTypedName","src":"16964:9:22","type":""},{"name":"dataEnd","nativeSrc":"16975:7:22","nodeType":"YulTypedName","src":"16975:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"16987:6:22","nodeType":"YulTypedName","src":"16987:6:22","type":""},{"name":"value1","nativeSrc":"16995:6:22","nodeType":"YulTypedName","src":"16995:6:22","type":""}],"src":"16919:474:22"},{"body":{"nativeSrc":"17427:152:22","nodeType":"YulBlock","src":"17427:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"17444:1:22","nodeType":"YulLiteral","src":"17444:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"17447:77:22","nodeType":"YulLiteral","src":"17447:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"17437:6:22","nodeType":"YulIdentifier","src":"17437:6:22"},"nativeSrc":"17437:88:22","nodeType":"YulFunctionCall","src":"17437:88:22"},"nativeSrc":"17437:88:22","nodeType":"YulExpressionStatement","src":"17437:88:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17541:1:22","nodeType":"YulLiteral","src":"17541:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"17544:4:22","nodeType":"YulLiteral","src":"17544:4:22","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"17534:6:22","nodeType":"YulIdentifier","src":"17534:6:22"},"nativeSrc":"17534:15:22","nodeType":"YulFunctionCall","src":"17534:15:22"},"nativeSrc":"17534:15:22","nodeType":"YulExpressionStatement","src":"17534:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17565:1:22","nodeType":"YulLiteral","src":"17565:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"17568:4:22","nodeType":"YulLiteral","src":"17568:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"17558:6:22","nodeType":"YulIdentifier","src":"17558:6:22"},"nativeSrc":"17558:15:22","nodeType":"YulFunctionCall","src":"17558:15:22"},"nativeSrc":"17558:15:22","nodeType":"YulExpressionStatement","src":"17558:15:22"}]},"name":"panic_error_0x22","nativeSrc":"17399:180:22","nodeType":"YulFunctionDefinition","src":"17399:180:22"},{"body":{"nativeSrc":"17636:269:22","nodeType":"YulBlock","src":"17636:269:22","statements":[{"nativeSrc":"17646:22:22","nodeType":"YulAssignment","src":"17646:22:22","value":{"arguments":[{"name":"data","nativeSrc":"17660:4:22","nodeType":"YulIdentifier","src":"17660:4:22"},{"kind":"number","nativeSrc":"17666:1:22","nodeType":"YulLiteral","src":"17666:1:22","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"17656:3:22","nodeType":"YulIdentifier","src":"17656:3:22"},"nativeSrc":"17656:12:22","nodeType":"YulFunctionCall","src":"17656:12:22"},"variableNames":[{"name":"length","nativeSrc":"17646:6:22","nodeType":"YulIdentifier","src":"17646:6:22"}]},{"nativeSrc":"17677:38:22","nodeType":"YulVariableDeclaration","src":"17677:38:22","value":{"arguments":[{"name":"data","nativeSrc":"17707:4:22","nodeType":"YulIdentifier","src":"17707:4:22"},{"kind":"number","nativeSrc":"17713:1:22","nodeType":"YulLiteral","src":"17713:1:22","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"17703:3:22","nodeType":"YulIdentifier","src":"17703:3:22"},"nativeSrc":"17703:12:22","nodeType":"YulFunctionCall","src":"17703:12:22"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"17681:18:22","nodeType":"YulTypedName","src":"17681:18:22","type":""}]},{"body":{"nativeSrc":"17754:51:22","nodeType":"YulBlock","src":"17754:51:22","statements":[{"nativeSrc":"17768:27:22","nodeType":"YulAssignment","src":"17768:27:22","value":{"arguments":[{"name":"length","nativeSrc":"17782:6:22","nodeType":"YulIdentifier","src":"17782:6:22"},{"kind":"number","nativeSrc":"17790:4:22","nodeType":"YulLiteral","src":"17790:4:22","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"17778:3:22","nodeType":"YulIdentifier","src":"17778:3:22"},"nativeSrc":"17778:17:22","nodeType":"YulFunctionCall","src":"17778:17:22"},"variableNames":[{"name":"length","nativeSrc":"17768:6:22","nodeType":"YulIdentifier","src":"17768:6:22"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"17734:18:22","nodeType":"YulIdentifier","src":"17734:18:22"}],"functionName":{"name":"iszero","nativeSrc":"17727:6:22","nodeType":"YulIdentifier","src":"17727:6:22"},"nativeSrc":"17727:26:22","nodeType":"YulFunctionCall","src":"17727:26:22"},"nativeSrc":"17724:81:22","nodeType":"YulIf","src":"17724:81:22"},{"body":{"nativeSrc":"17857:42:22","nodeType":"YulBlock","src":"17857:42:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"17871:16:22","nodeType":"YulIdentifier","src":"17871:16:22"},"nativeSrc":"17871:18:22","nodeType":"YulFunctionCall","src":"17871:18:22"},"nativeSrc":"17871:18:22","nodeType":"YulExpressionStatement","src":"17871:18:22"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"17821:18:22","nodeType":"YulIdentifier","src":"17821:18:22"},{"arguments":[{"name":"length","nativeSrc":"17844:6:22","nodeType":"YulIdentifier","src":"17844:6:22"},{"kind":"number","nativeSrc":"17852:2:22","nodeType":"YulLiteral","src":"17852:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"17841:2:22","nodeType":"YulIdentifier","src":"17841:2:22"},"nativeSrc":"17841:14:22","nodeType":"YulFunctionCall","src":"17841:14:22"}],"functionName":{"name":"eq","nativeSrc":"17818:2:22","nodeType":"YulIdentifier","src":"17818:2:22"},"nativeSrc":"17818:38:22","nodeType":"YulFunctionCall","src":"17818:38:22"},"nativeSrc":"17815:84:22","nodeType":"YulIf","src":"17815:84:22"}]},"name":"extract_byte_array_length","nativeSrc":"17585:320:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"17620:4:22","nodeType":"YulTypedName","src":"17620:4:22","type":""}],"returnVariables":[{"name":"length","nativeSrc":"17629:6:22","nodeType":"YulTypedName","src":"17629:6:22","type":""}],"src":"17585:320:22"},{"body":{"nativeSrc":"18017:72:22","nodeType":"YulBlock","src":"18017:72:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"18039:6:22","nodeType":"YulIdentifier","src":"18039:6:22"},{"kind":"number","nativeSrc":"18047:1:22","nodeType":"YulLiteral","src":"18047:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"18035:3:22","nodeType":"YulIdentifier","src":"18035:3:22"},"nativeSrc":"18035:14:22","nodeType":"YulFunctionCall","src":"18035:14:22"},{"hexValue":"5447433a2074726164696e6720616c726561647920656e61626c6564","kind":"string","nativeSrc":"18051:30:22","nodeType":"YulLiteral","src":"18051:30:22","type":"","value":"TGC: trading already enabled"}],"functionName":{"name":"mstore","nativeSrc":"18028:6:22","nodeType":"YulIdentifier","src":"18028:6:22"},"nativeSrc":"18028:54:22","nodeType":"YulFunctionCall","src":"18028:54:22"},"nativeSrc":"18028:54:22","nodeType":"YulExpressionStatement","src":"18028:54:22"}]},"name":"store_literal_in_memory_24cf83481f2a8ba90e1c3f2ad6b040e1487e7c57c8c9c5939238bafe3879f015","nativeSrc":"17911:178:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"18009:6:22","nodeType":"YulTypedName","src":"18009:6:22","type":""}],"src":"17911:178:22"},{"body":{"nativeSrc":"18241:220:22","nodeType":"YulBlock","src":"18241:220:22","statements":[{"nativeSrc":"18251:74:22","nodeType":"YulAssignment","src":"18251:74:22","value":{"arguments":[{"name":"pos","nativeSrc":"18317:3:22","nodeType":"YulIdentifier","src":"18317:3:22"},{"kind":"number","nativeSrc":"18322:2:22","nodeType":"YulLiteral","src":"18322:2:22","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"18258:58:22","nodeType":"YulIdentifier","src":"18258:58:22"},"nativeSrc":"18258:67:22","nodeType":"YulFunctionCall","src":"18258:67:22"},"variableNames":[{"name":"pos","nativeSrc":"18251:3:22","nodeType":"YulIdentifier","src":"18251:3:22"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"18423:3:22","nodeType":"YulIdentifier","src":"18423:3:22"}],"functionName":{"name":"store_literal_in_memory_24cf83481f2a8ba90e1c3f2ad6b040e1487e7c57c8c9c5939238bafe3879f015","nativeSrc":"18334:88:22","nodeType":"YulIdentifier","src":"18334:88:22"},"nativeSrc":"18334:93:22","nodeType":"YulFunctionCall","src":"18334:93:22"},"nativeSrc":"18334:93:22","nodeType":"YulExpressionStatement","src":"18334:93:22"},{"nativeSrc":"18436:19:22","nodeType":"YulAssignment","src":"18436:19:22","value":{"arguments":[{"name":"pos","nativeSrc":"18447:3:22","nodeType":"YulIdentifier","src":"18447:3:22"},{"kind":"number","nativeSrc":"18452:2:22","nodeType":"YulLiteral","src":"18452:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18443:3:22","nodeType":"YulIdentifier","src":"18443:3:22"},"nativeSrc":"18443:12:22","nodeType":"YulFunctionCall","src":"18443:12:22"},"variableNames":[{"name":"end","nativeSrc":"18436:3:22","nodeType":"YulIdentifier","src":"18436:3:22"}]}]},"name":"abi_encode_t_stringliteral_24cf83481f2a8ba90e1c3f2ad6b040e1487e7c57c8c9c5939238bafe3879f015_to_t_string_memory_ptr_fromStack","nativeSrc":"18095:366:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"18229:3:22","nodeType":"YulTypedName","src":"18229:3:22","type":""}],"returnVariables":[{"name":"end","nativeSrc":"18237:3:22","nodeType":"YulTypedName","src":"18237:3:22","type":""}],"src":"18095:366:22"},{"body":{"nativeSrc":"18638:248:22","nodeType":"YulBlock","src":"18638:248:22","statements":[{"nativeSrc":"18648:26:22","nodeType":"YulAssignment","src":"18648:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"18660:9:22","nodeType":"YulIdentifier","src":"18660:9:22"},{"kind":"number","nativeSrc":"18671:2:22","nodeType":"YulLiteral","src":"18671:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18656:3:22","nodeType":"YulIdentifier","src":"18656:3:22"},"nativeSrc":"18656:18:22","nodeType":"YulFunctionCall","src":"18656:18:22"},"variableNames":[{"name":"tail","nativeSrc":"18648:4:22","nodeType":"YulIdentifier","src":"18648:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18695:9:22","nodeType":"YulIdentifier","src":"18695:9:22"},{"kind":"number","nativeSrc":"18706:1:22","nodeType":"YulLiteral","src":"18706:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"18691:3:22","nodeType":"YulIdentifier","src":"18691:3:22"},"nativeSrc":"18691:17:22","nodeType":"YulFunctionCall","src":"18691:17:22"},{"arguments":[{"name":"tail","nativeSrc":"18714:4:22","nodeType":"YulIdentifier","src":"18714:4:22"},{"name":"headStart","nativeSrc":"18720:9:22","nodeType":"YulIdentifier","src":"18720:9:22"}],"functionName":{"name":"sub","nativeSrc":"18710:3:22","nodeType":"YulIdentifier","src":"18710:3:22"},"nativeSrc":"18710:20:22","nodeType":"YulFunctionCall","src":"18710:20:22"}],"functionName":{"name":"mstore","nativeSrc":"18684:6:22","nodeType":"YulIdentifier","src":"18684:6:22"},"nativeSrc":"18684:47:22","nodeType":"YulFunctionCall","src":"18684:47:22"},"nativeSrc":"18684:47:22","nodeType":"YulExpressionStatement","src":"18684:47:22"},{"nativeSrc":"18740:139:22","nodeType":"YulAssignment","src":"18740:139:22","value":{"arguments":[{"name":"tail","nativeSrc":"18874:4:22","nodeType":"YulIdentifier","src":"18874:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_24cf83481f2a8ba90e1c3f2ad6b040e1487e7c57c8c9c5939238bafe3879f015_to_t_string_memory_ptr_fromStack","nativeSrc":"18748:124:22","nodeType":"YulIdentifier","src":"18748:124:22"},"nativeSrc":"18748:131:22","nodeType":"YulFunctionCall","src":"18748:131:22"},"variableNames":[{"name":"tail","nativeSrc":"18740:4:22","nodeType":"YulIdentifier","src":"18740:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_24cf83481f2a8ba90e1c3f2ad6b040e1487e7c57c8c9c5939238bafe3879f015__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"18467:419:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18618:9:22","nodeType":"YulTypedName","src":"18618:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18633:4:22","nodeType":"YulTypedName","src":"18633:4:22","type":""}],"src":"18467:419:22"},{"body":{"nativeSrc":"18998:67:22","nodeType":"YulBlock","src":"18998:67:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"19020:6:22","nodeType":"YulIdentifier","src":"19020:6:22"},{"kind":"number","nativeSrc":"19028:1:22","nodeType":"YulLiteral","src":"19028:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"19016:3:22","nodeType":"YulIdentifier","src":"19016:3:22"},"nativeSrc":"19016:14:22","nodeType":"YulFunctionCall","src":"19016:14:22"},{"hexValue":"5447433a20696e76616c696420706172616d6574657273","kind":"string","nativeSrc":"19032:25:22","nodeType":"YulLiteral","src":"19032:25:22","type":"","value":"TGC: invalid parameters"}],"functionName":{"name":"mstore","nativeSrc":"19009:6:22","nodeType":"YulIdentifier","src":"19009:6:22"},"nativeSrc":"19009:49:22","nodeType":"YulFunctionCall","src":"19009:49:22"},"nativeSrc":"19009:49:22","nodeType":"YulExpressionStatement","src":"19009:49:22"}]},"name":"store_literal_in_memory_ba7cd66ed381e90a6a6f5c81315eeba2f99d0bb92ba7388f35e237d2bf061d88","nativeSrc":"18892:173:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"18990:6:22","nodeType":"YulTypedName","src":"18990:6:22","type":""}],"src":"18892:173:22"},{"body":{"nativeSrc":"19217:220:22","nodeType":"YulBlock","src":"19217:220:22","statements":[{"nativeSrc":"19227:74:22","nodeType":"YulAssignment","src":"19227:74:22","value":{"arguments":[{"name":"pos","nativeSrc":"19293:3:22","nodeType":"YulIdentifier","src":"19293:3:22"},{"kind":"number","nativeSrc":"19298:2:22","nodeType":"YulLiteral","src":"19298:2:22","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"19234:58:22","nodeType":"YulIdentifier","src":"19234:58:22"},"nativeSrc":"19234:67:22","nodeType":"YulFunctionCall","src":"19234:67:22"},"variableNames":[{"name":"pos","nativeSrc":"19227:3:22","nodeType":"YulIdentifier","src":"19227:3:22"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"19399:3:22","nodeType":"YulIdentifier","src":"19399:3:22"}],"functionName":{"name":"store_literal_in_memory_ba7cd66ed381e90a6a6f5c81315eeba2f99d0bb92ba7388f35e237d2bf061d88","nativeSrc":"19310:88:22","nodeType":"YulIdentifier","src":"19310:88:22"},"nativeSrc":"19310:93:22","nodeType":"YulFunctionCall","src":"19310:93:22"},"nativeSrc":"19310:93:22","nodeType":"YulExpressionStatement","src":"19310:93:22"},{"nativeSrc":"19412:19:22","nodeType":"YulAssignment","src":"19412:19:22","value":{"arguments":[{"name":"pos","nativeSrc":"19423:3:22","nodeType":"YulIdentifier","src":"19423:3:22"},{"kind":"number","nativeSrc":"19428:2:22","nodeType":"YulLiteral","src":"19428:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19419:3:22","nodeType":"YulIdentifier","src":"19419:3:22"},"nativeSrc":"19419:12:22","nodeType":"YulFunctionCall","src":"19419:12:22"},"variableNames":[{"name":"end","nativeSrc":"19412:3:22","nodeType":"YulIdentifier","src":"19412:3:22"}]}]},"name":"abi_encode_t_stringliteral_ba7cd66ed381e90a6a6f5c81315eeba2f99d0bb92ba7388f35e237d2bf061d88_to_t_string_memory_ptr_fromStack","nativeSrc":"19071:366:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"19205:3:22","nodeType":"YulTypedName","src":"19205:3:22","type":""}],"returnVariables":[{"name":"end","nativeSrc":"19213:3:22","nodeType":"YulTypedName","src":"19213:3:22","type":""}],"src":"19071:366:22"},{"body":{"nativeSrc":"19614:248:22","nodeType":"YulBlock","src":"19614:248:22","statements":[{"nativeSrc":"19624:26:22","nodeType":"YulAssignment","src":"19624:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"19636:9:22","nodeType":"YulIdentifier","src":"19636:9:22"},{"kind":"number","nativeSrc":"19647:2:22","nodeType":"YulLiteral","src":"19647:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19632:3:22","nodeType":"YulIdentifier","src":"19632:3:22"},"nativeSrc":"19632:18:22","nodeType":"YulFunctionCall","src":"19632:18:22"},"variableNames":[{"name":"tail","nativeSrc":"19624:4:22","nodeType":"YulIdentifier","src":"19624:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19671:9:22","nodeType":"YulIdentifier","src":"19671:9:22"},{"kind":"number","nativeSrc":"19682:1:22","nodeType":"YulLiteral","src":"19682:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"19667:3:22","nodeType":"YulIdentifier","src":"19667:3:22"},"nativeSrc":"19667:17:22","nodeType":"YulFunctionCall","src":"19667:17:22"},{"arguments":[{"name":"tail","nativeSrc":"19690:4:22","nodeType":"YulIdentifier","src":"19690:4:22"},{"name":"headStart","nativeSrc":"19696:9:22","nodeType":"YulIdentifier","src":"19696:9:22"}],"functionName":{"name":"sub","nativeSrc":"19686:3:22","nodeType":"YulIdentifier","src":"19686:3:22"},"nativeSrc":"19686:20:22","nodeType":"YulFunctionCall","src":"19686:20:22"}],"functionName":{"name":"mstore","nativeSrc":"19660:6:22","nodeType":"YulIdentifier","src":"19660:6:22"},"nativeSrc":"19660:47:22","nodeType":"YulFunctionCall","src":"19660:47:22"},"nativeSrc":"19660:47:22","nodeType":"YulExpressionStatement","src":"19660:47:22"},{"nativeSrc":"19716:139:22","nodeType":"YulAssignment","src":"19716:139:22","value":{"arguments":[{"name":"tail","nativeSrc":"19850:4:22","nodeType":"YulIdentifier","src":"19850:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_ba7cd66ed381e90a6a6f5c81315eeba2f99d0bb92ba7388f35e237d2bf061d88_to_t_string_memory_ptr_fromStack","nativeSrc":"19724:124:22","nodeType":"YulIdentifier","src":"19724:124:22"},"nativeSrc":"19724:131:22","nodeType":"YulFunctionCall","src":"19724:131:22"},"variableNames":[{"name":"tail","nativeSrc":"19716:4:22","nodeType":"YulIdentifier","src":"19716:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_ba7cd66ed381e90a6a6f5c81315eeba2f99d0bb92ba7388f35e237d2bf061d88__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"19443:419:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19594:9:22","nodeType":"YulTypedName","src":"19594:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"19609:4:22","nodeType":"YulTypedName","src":"19609:4:22","type":""}],"src":"19443:419:22"},{"body":{"nativeSrc":"19896:152:22","nodeType":"YulBlock","src":"19896:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"19913:1:22","nodeType":"YulLiteral","src":"19913:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"19916:77:22","nodeType":"YulLiteral","src":"19916:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"19906:6:22","nodeType":"YulIdentifier","src":"19906:6:22"},"nativeSrc":"19906:88:22","nodeType":"YulFunctionCall","src":"19906:88:22"},"nativeSrc":"19906:88:22","nodeType":"YulExpressionStatement","src":"19906:88:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"20010:1:22","nodeType":"YulLiteral","src":"20010:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"20013:4:22","nodeType":"YulLiteral","src":"20013:4:22","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"20003:6:22","nodeType":"YulIdentifier","src":"20003:6:22"},"nativeSrc":"20003:15:22","nodeType":"YulFunctionCall","src":"20003:15:22"},"nativeSrc":"20003:15:22","nodeType":"YulExpressionStatement","src":"20003:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"20034:1:22","nodeType":"YulLiteral","src":"20034:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"20037:4:22","nodeType":"YulLiteral","src":"20037:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"20027:6:22","nodeType":"YulIdentifier","src":"20027:6:22"},"nativeSrc":"20027:15:22","nodeType":"YulFunctionCall","src":"20027:15:22"},"nativeSrc":"20027:15:22","nodeType":"YulExpressionStatement","src":"20027:15:22"}]},"name":"panic_error_0x32","nativeSrc":"19868:180:22","nodeType":"YulFunctionDefinition","src":"19868:180:22"},{"body":{"nativeSrc":"20094:76:22","nodeType":"YulBlock","src":"20094:76:22","statements":[{"body":{"nativeSrc":"20148:16:22","nodeType":"YulBlock","src":"20148:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"20157:1:22","nodeType":"YulLiteral","src":"20157:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"20160:1:22","nodeType":"YulLiteral","src":"20160:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"20150:6:22","nodeType":"YulIdentifier","src":"20150:6:22"},"nativeSrc":"20150:12:22","nodeType":"YulFunctionCall","src":"20150:12:22"},"nativeSrc":"20150:12:22","nodeType":"YulExpressionStatement","src":"20150:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"20117:5:22","nodeType":"YulIdentifier","src":"20117:5:22"},{"arguments":[{"name":"value","nativeSrc":"20139:5:22","nodeType":"YulIdentifier","src":"20139:5:22"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"20124:14:22","nodeType":"YulIdentifier","src":"20124:14:22"},"nativeSrc":"20124:21:22","nodeType":"YulFunctionCall","src":"20124:21:22"}],"functionName":{"name":"eq","nativeSrc":"20114:2:22","nodeType":"YulIdentifier","src":"20114:2:22"},"nativeSrc":"20114:32:22","nodeType":"YulFunctionCall","src":"20114:32:22"}],"functionName":{"name":"iszero","nativeSrc":"20107:6:22","nodeType":"YulIdentifier","src":"20107:6:22"},"nativeSrc":"20107:40:22","nodeType":"YulFunctionCall","src":"20107:40:22"},"nativeSrc":"20104:60:22","nodeType":"YulIf","src":"20104:60:22"}]},"name":"validator_revert_t_bool","nativeSrc":"20054:116:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"20087:5:22","nodeType":"YulTypedName","src":"20087:5:22","type":""}],"src":"20054:116:22"},{"body":{"nativeSrc":"20225:84:22","nodeType":"YulBlock","src":"20225:84:22","statements":[{"nativeSrc":"20235:29:22","nodeType":"YulAssignment","src":"20235:29:22","value":{"arguments":[{"name":"offset","nativeSrc":"20257:6:22","nodeType":"YulIdentifier","src":"20257:6:22"}],"functionName":{"name":"calldataload","nativeSrc":"20244:12:22","nodeType":"YulIdentifier","src":"20244:12:22"},"nativeSrc":"20244:20:22","nodeType":"YulFunctionCall","src":"20244:20:22"},"variableNames":[{"name":"value","nativeSrc":"20235:5:22","nodeType":"YulIdentifier","src":"20235:5:22"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"20297:5:22","nodeType":"YulIdentifier","src":"20297:5:22"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"20273:23:22","nodeType":"YulIdentifier","src":"20273:23:22"},"nativeSrc":"20273:30:22","nodeType":"YulFunctionCall","src":"20273:30:22"},"nativeSrc":"20273:30:22","nodeType":"YulExpressionStatement","src":"20273:30:22"}]},"name":"abi_decode_t_bool","nativeSrc":"20176:133:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"20203:6:22","nodeType":"YulTypedName","src":"20203:6:22","type":""},{"name":"end","nativeSrc":"20211:3:22","nodeType":"YulTypedName","src":"20211:3:22","type":""}],"returnVariables":[{"name":"value","nativeSrc":"20219:5:22","nodeType":"YulTypedName","src":"20219:5:22","type":""}],"src":"20176:133:22"},{"body":{"nativeSrc":"20378:260:22","nodeType":"YulBlock","src":"20378:260:22","statements":[{"body":{"nativeSrc":"20424:83:22","nodeType":"YulBlock","src":"20424:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"20426:77:22","nodeType":"YulIdentifier","src":"20426:77:22"},"nativeSrc":"20426:79:22","nodeType":"YulFunctionCall","src":"20426:79:22"},"nativeSrc":"20426:79:22","nodeType":"YulExpressionStatement","src":"20426:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"20399:7:22","nodeType":"YulIdentifier","src":"20399:7:22"},{"name":"headStart","nativeSrc":"20408:9:22","nodeType":"YulIdentifier","src":"20408:9:22"}],"functionName":{"name":"sub","nativeSrc":"20395:3:22","nodeType":"YulIdentifier","src":"20395:3:22"},"nativeSrc":"20395:23:22","nodeType":"YulFunctionCall","src":"20395:23:22"},{"kind":"number","nativeSrc":"20420:2:22","nodeType":"YulLiteral","src":"20420:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"20391:3:22","nodeType":"YulIdentifier","src":"20391:3:22"},"nativeSrc":"20391:32:22","nodeType":"YulFunctionCall","src":"20391:32:22"},"nativeSrc":"20388:119:22","nodeType":"YulIf","src":"20388:119:22"},{"nativeSrc":"20517:114:22","nodeType":"YulBlock","src":"20517:114:22","statements":[{"nativeSrc":"20532:15:22","nodeType":"YulVariableDeclaration","src":"20532:15:22","value":{"kind":"number","nativeSrc":"20546:1:22","nodeType":"YulLiteral","src":"20546:1:22","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"20536:6:22","nodeType":"YulTypedName","src":"20536:6:22","type":""}]},{"nativeSrc":"20561:60:22","nodeType":"YulAssignment","src":"20561:60:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20593:9:22","nodeType":"YulIdentifier","src":"20593:9:22"},{"name":"offset","nativeSrc":"20604:6:22","nodeType":"YulIdentifier","src":"20604:6:22"}],"functionName":{"name":"add","nativeSrc":"20589:3:22","nodeType":"YulIdentifier","src":"20589:3:22"},"nativeSrc":"20589:22:22","nodeType":"YulFunctionCall","src":"20589:22:22"},{"name":"dataEnd","nativeSrc":"20613:7:22","nodeType":"YulIdentifier","src":"20613:7:22"}],"functionName":{"name":"abi_decode_t_bool","nativeSrc":"20571:17:22","nodeType":"YulIdentifier","src":"20571:17:22"},"nativeSrc":"20571:50:22","nodeType":"YulFunctionCall","src":"20571:50:22"},"variableNames":[{"name":"value0","nativeSrc":"20561:6:22","nodeType":"YulIdentifier","src":"20561:6:22"}]}]}]},"name":"abi_decode_tuple_t_bool","nativeSrc":"20315:323:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20348:9:22","nodeType":"YulTypedName","src":"20348:9:22","type":""},{"name":"dataEnd","nativeSrc":"20359:7:22","nodeType":"YulTypedName","src":"20359:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"20371:6:22","nodeType":"YulTypedName","src":"20371:6:22","type":""}],"src":"20315:323:22"},{"body":{"nativeSrc":"20770:206:22","nodeType":"YulBlock","src":"20770:206:22","statements":[{"nativeSrc":"20780:26:22","nodeType":"YulAssignment","src":"20780:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"20792:9:22","nodeType":"YulIdentifier","src":"20792:9:22"},{"kind":"number","nativeSrc":"20803:2:22","nodeType":"YulLiteral","src":"20803:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"20788:3:22","nodeType":"YulIdentifier","src":"20788:3:22"},"nativeSrc":"20788:18:22","nodeType":"YulFunctionCall","src":"20788:18:22"},"variableNames":[{"name":"tail","nativeSrc":"20780:4:22","nodeType":"YulIdentifier","src":"20780:4:22"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"20860:6:22","nodeType":"YulIdentifier","src":"20860:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"20873:9:22","nodeType":"YulIdentifier","src":"20873:9:22"},{"kind":"number","nativeSrc":"20884:1:22","nodeType":"YulLiteral","src":"20884:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"20869:3:22","nodeType":"YulIdentifier","src":"20869:3:22"},"nativeSrc":"20869:17:22","nodeType":"YulFunctionCall","src":"20869:17:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"20816:43:22","nodeType":"YulIdentifier","src":"20816:43:22"},"nativeSrc":"20816:71:22","nodeType":"YulFunctionCall","src":"20816:71:22"},"nativeSrc":"20816:71:22","nodeType":"YulExpressionStatement","src":"20816:71:22"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"20941:6:22","nodeType":"YulIdentifier","src":"20941:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"20954:9:22","nodeType":"YulIdentifier","src":"20954:9:22"},{"kind":"number","nativeSrc":"20965:2:22","nodeType":"YulLiteral","src":"20965:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20950:3:22","nodeType":"YulIdentifier","src":"20950:3:22"},"nativeSrc":"20950:18:22","nodeType":"YulFunctionCall","src":"20950:18:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"20897:43:22","nodeType":"YulIdentifier","src":"20897:43:22"},"nativeSrc":"20897:72:22","nodeType":"YulFunctionCall","src":"20897:72:22"},"nativeSrc":"20897:72:22","nodeType":"YulExpressionStatement","src":"20897:72:22"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"20644:332:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20734:9:22","nodeType":"YulTypedName","src":"20734:9:22","type":""},{"name":"value1","nativeSrc":"20746:6:22","nodeType":"YulTypedName","src":"20746:6:22","type":""},{"name":"value0","nativeSrc":"20754:6:22","nodeType":"YulTypedName","src":"20754:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"20765:4:22","nodeType":"YulTypedName","src":"20765:4:22","type":""}],"src":"20644:332:22"},{"body":{"nativeSrc":"21010:152:22","nodeType":"YulBlock","src":"21010:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"21027:1:22","nodeType":"YulLiteral","src":"21027:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"21030:77:22","nodeType":"YulLiteral","src":"21030:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"21020:6:22","nodeType":"YulIdentifier","src":"21020:6:22"},"nativeSrc":"21020:88:22","nodeType":"YulFunctionCall","src":"21020:88:22"},"nativeSrc":"21020:88:22","nodeType":"YulExpressionStatement","src":"21020:88:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"21124:1:22","nodeType":"YulLiteral","src":"21124:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"21127:4:22","nodeType":"YulLiteral","src":"21127:4:22","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"21117:6:22","nodeType":"YulIdentifier","src":"21117:6:22"},"nativeSrc":"21117:15:22","nodeType":"YulFunctionCall","src":"21117:15:22"},"nativeSrc":"21117:15:22","nodeType":"YulExpressionStatement","src":"21117:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"21148:1:22","nodeType":"YulLiteral","src":"21148:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"21151:4:22","nodeType":"YulLiteral","src":"21151:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"21141:6:22","nodeType":"YulIdentifier","src":"21141:6:22"},"nativeSrc":"21141:15:22","nodeType":"YulFunctionCall","src":"21141:15:22"},"nativeSrc":"21141:15:22","nodeType":"YulExpressionStatement","src":"21141:15:22"}]},"name":"panic_error_0x11","nativeSrc":"20982:180:22","nodeType":"YulFunctionDefinition","src":"20982:180:22"},{"body":{"nativeSrc":"21212:147:22","nodeType":"YulBlock","src":"21212:147:22","statements":[{"nativeSrc":"21222:25:22","nodeType":"YulAssignment","src":"21222:25:22","value":{"arguments":[{"name":"x","nativeSrc":"21245:1:22","nodeType":"YulIdentifier","src":"21245:1:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"21227:17:22","nodeType":"YulIdentifier","src":"21227:17:22"},"nativeSrc":"21227:20:22","nodeType":"YulFunctionCall","src":"21227:20:22"},"variableNames":[{"name":"x","nativeSrc":"21222:1:22","nodeType":"YulIdentifier","src":"21222:1:22"}]},{"nativeSrc":"21256:25:22","nodeType":"YulAssignment","src":"21256:25:22","value":{"arguments":[{"name":"y","nativeSrc":"21279:1:22","nodeType":"YulIdentifier","src":"21279:1:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"21261:17:22","nodeType":"YulIdentifier","src":"21261:17:22"},"nativeSrc":"21261:20:22","nodeType":"YulFunctionCall","src":"21261:20:22"},"variableNames":[{"name":"y","nativeSrc":"21256:1:22","nodeType":"YulIdentifier","src":"21256:1:22"}]},{"nativeSrc":"21290:16:22","nodeType":"YulAssignment","src":"21290:16:22","value":{"arguments":[{"name":"x","nativeSrc":"21301:1:22","nodeType":"YulIdentifier","src":"21301:1:22"},{"name":"y","nativeSrc":"21304:1:22","nodeType":"YulIdentifier","src":"21304:1:22"}],"functionName":{"name":"add","nativeSrc":"21297:3:22","nodeType":"YulIdentifier","src":"21297:3:22"},"nativeSrc":"21297:9:22","nodeType":"YulFunctionCall","src":"21297:9:22"},"variableNames":[{"name":"sum","nativeSrc":"21290:3:22","nodeType":"YulIdentifier","src":"21290:3:22"}]},{"body":{"nativeSrc":"21330:22:22","nodeType":"YulBlock","src":"21330:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"21332:16:22","nodeType":"YulIdentifier","src":"21332:16:22"},"nativeSrc":"21332:18:22","nodeType":"YulFunctionCall","src":"21332:18:22"},"nativeSrc":"21332:18:22","nodeType":"YulExpressionStatement","src":"21332:18:22"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"21322:1:22","nodeType":"YulIdentifier","src":"21322:1:22"},{"name":"sum","nativeSrc":"21325:3:22","nodeType":"YulIdentifier","src":"21325:3:22"}],"functionName":{"name":"gt","nativeSrc":"21319:2:22","nodeType":"YulIdentifier","src":"21319:2:22"},"nativeSrc":"21319:10:22","nodeType":"YulFunctionCall","src":"21319:10:22"},"nativeSrc":"21316:36:22","nodeType":"YulIf","src":"21316:36:22"}]},"name":"checked_add_t_uint256","nativeSrc":"21168:191:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"21199:1:22","nodeType":"YulTypedName","src":"21199:1:22","type":""},{"name":"y","nativeSrc":"21202:1:22","nodeType":"YulTypedName","src":"21202:1:22","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"21208:3:22","nodeType":"YulTypedName","src":"21208:3:22","type":""}],"src":"21168:191:22"},{"body":{"nativeSrc":"21413:362:22","nodeType":"YulBlock","src":"21413:362:22","statements":[{"nativeSrc":"21423:25:22","nodeType":"YulAssignment","src":"21423:25:22","value":{"arguments":[{"name":"x","nativeSrc":"21446:1:22","nodeType":"YulIdentifier","src":"21446:1:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"21428:17:22","nodeType":"YulIdentifier","src":"21428:17:22"},"nativeSrc":"21428:20:22","nodeType":"YulFunctionCall","src":"21428:20:22"},"variableNames":[{"name":"x","nativeSrc":"21423:1:22","nodeType":"YulIdentifier","src":"21423:1:22"}]},{"nativeSrc":"21457:25:22","nodeType":"YulAssignment","src":"21457:25:22","value":{"arguments":[{"name":"y","nativeSrc":"21480:1:22","nodeType":"YulIdentifier","src":"21480:1:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"21462:17:22","nodeType":"YulIdentifier","src":"21462:17:22"},"nativeSrc":"21462:20:22","nodeType":"YulFunctionCall","src":"21462:20:22"},"variableNames":[{"name":"y","nativeSrc":"21457:1:22","nodeType":"YulIdentifier","src":"21457:1:22"}]},{"nativeSrc":"21491:28:22","nodeType":"YulVariableDeclaration","src":"21491:28:22","value":{"arguments":[{"name":"x","nativeSrc":"21514:1:22","nodeType":"YulIdentifier","src":"21514:1:22"},{"name":"y","nativeSrc":"21517:1:22","nodeType":"YulIdentifier","src":"21517:1:22"}],"functionName":{"name":"mul","nativeSrc":"21510:3:22","nodeType":"YulIdentifier","src":"21510:3:22"},"nativeSrc":"21510:9:22","nodeType":"YulFunctionCall","src":"21510:9:22"},"variables":[{"name":"product_raw","nativeSrc":"21495:11:22","nodeType":"YulTypedName","src":"21495:11:22","type":""}]},{"nativeSrc":"21528:41:22","nodeType":"YulAssignment","src":"21528:41:22","value":{"arguments":[{"name":"product_raw","nativeSrc":"21557:11:22","nodeType":"YulIdentifier","src":"21557:11:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"21539:17:22","nodeType":"YulIdentifier","src":"21539:17:22"},"nativeSrc":"21539:30:22","nodeType":"YulFunctionCall","src":"21539:30:22"},"variableNames":[{"name":"product","nativeSrc":"21528:7:22","nodeType":"YulIdentifier","src":"21528:7:22"}]},{"body":{"nativeSrc":"21746:22:22","nodeType":"YulBlock","src":"21746:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"21748:16:22","nodeType":"YulIdentifier","src":"21748:16:22"},"nativeSrc":"21748:18:22","nodeType":"YulFunctionCall","src":"21748:18:22"},"nativeSrc":"21748:18:22","nodeType":"YulExpressionStatement","src":"21748:18:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"21679:1:22","nodeType":"YulIdentifier","src":"21679:1:22"}],"functionName":{"name":"iszero","nativeSrc":"21672:6:22","nodeType":"YulIdentifier","src":"21672:6:22"},"nativeSrc":"21672:9:22","nodeType":"YulFunctionCall","src":"21672:9:22"},{"arguments":[{"name":"y","nativeSrc":"21702:1:22","nodeType":"YulIdentifier","src":"21702:1:22"},{"arguments":[{"name":"product","nativeSrc":"21709:7:22","nodeType":"YulIdentifier","src":"21709:7:22"},{"name":"x","nativeSrc":"21718:1:22","nodeType":"YulIdentifier","src":"21718:1:22"}],"functionName":{"name":"div","nativeSrc":"21705:3:22","nodeType":"YulIdentifier","src":"21705:3:22"},"nativeSrc":"21705:15:22","nodeType":"YulFunctionCall","src":"21705:15:22"}],"functionName":{"name":"eq","nativeSrc":"21699:2:22","nodeType":"YulIdentifier","src":"21699:2:22"},"nativeSrc":"21699:22:22","nodeType":"YulFunctionCall","src":"21699:22:22"}],"functionName":{"name":"or","nativeSrc":"21652:2:22","nodeType":"YulIdentifier","src":"21652:2:22"},"nativeSrc":"21652:83:22","nodeType":"YulFunctionCall","src":"21652:83:22"}],"functionName":{"name":"iszero","nativeSrc":"21632:6:22","nodeType":"YulIdentifier","src":"21632:6:22"},"nativeSrc":"21632:113:22","nodeType":"YulFunctionCall","src":"21632:113:22"},"nativeSrc":"21629:139:22","nodeType":"YulIf","src":"21629:139:22"}]},"name":"checked_mul_t_uint256","nativeSrc":"21365:410:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"21396:1:22","nodeType":"YulTypedName","src":"21396:1:22","type":""},{"name":"y","nativeSrc":"21399:1:22","nodeType":"YulTypedName","src":"21399:1:22","type":""}],"returnVariables":[{"name":"product","nativeSrc":"21405:7:22","nodeType":"YulTypedName","src":"21405:7:22","type":""}],"src":"21365:410:22"},{"body":{"nativeSrc":"21887:114:22","nodeType":"YulBlock","src":"21887:114:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"21909:6:22","nodeType":"YulIdentifier","src":"21909:6:22"},{"kind":"number","nativeSrc":"21917:1:22","nodeType":"YulLiteral","src":"21917:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"21905:3:22","nodeType":"YulIdentifier","src":"21905:3:22"},"nativeSrc":"21905:14:22","nodeType":"YulFunctionCall","src":"21905:14:22"},{"hexValue":"4172617261436f696e2074726164696e6720616c726561647920656e61626c65","kind":"string","nativeSrc":"21921:34:22","nodeType":"YulLiteral","src":"21921:34:22","type":"","value":"AraraCoin trading already enable"}],"functionName":{"name":"mstore","nativeSrc":"21898:6:22","nodeType":"YulIdentifier","src":"21898:6:22"},"nativeSrc":"21898:58:22","nodeType":"YulFunctionCall","src":"21898:58:22"},"nativeSrc":"21898:58:22","nodeType":"YulExpressionStatement","src":"21898:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"21977:6:22","nodeType":"YulIdentifier","src":"21977:6:22"},{"kind":"number","nativeSrc":"21985:2:22","nodeType":"YulLiteral","src":"21985:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21973:3:22","nodeType":"YulIdentifier","src":"21973:3:22"},"nativeSrc":"21973:15:22","nodeType":"YulFunctionCall","src":"21973:15:22"},{"hexValue":"64","kind":"string","nativeSrc":"21990:3:22","nodeType":"YulLiteral","src":"21990:3:22","type":"","value":"d"}],"functionName":{"name":"mstore","nativeSrc":"21966:6:22","nodeType":"YulIdentifier","src":"21966:6:22"},"nativeSrc":"21966:28:22","nodeType":"YulFunctionCall","src":"21966:28:22"},"nativeSrc":"21966:28:22","nodeType":"YulExpressionStatement","src":"21966:28:22"}]},"name":"store_literal_in_memory_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4","nativeSrc":"21781:220:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"21879:6:22","nodeType":"YulTypedName","src":"21879:6:22","type":""}],"src":"21781:220:22"},{"body":{"nativeSrc":"22153:220:22","nodeType":"YulBlock","src":"22153:220:22","statements":[{"nativeSrc":"22163:74:22","nodeType":"YulAssignment","src":"22163:74:22","value":{"arguments":[{"name":"pos","nativeSrc":"22229:3:22","nodeType":"YulIdentifier","src":"22229:3:22"},{"kind":"number","nativeSrc":"22234:2:22","nodeType":"YulLiteral","src":"22234:2:22","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"22170:58:22","nodeType":"YulIdentifier","src":"22170:58:22"},"nativeSrc":"22170:67:22","nodeType":"YulFunctionCall","src":"22170:67:22"},"variableNames":[{"name":"pos","nativeSrc":"22163:3:22","nodeType":"YulIdentifier","src":"22163:3:22"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"22335:3:22","nodeType":"YulIdentifier","src":"22335:3:22"}],"functionName":{"name":"store_literal_in_memory_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4","nativeSrc":"22246:88:22","nodeType":"YulIdentifier","src":"22246:88:22"},"nativeSrc":"22246:93:22","nodeType":"YulFunctionCall","src":"22246:93:22"},"nativeSrc":"22246:93:22","nodeType":"YulExpressionStatement","src":"22246:93:22"},{"nativeSrc":"22348:19:22","nodeType":"YulAssignment","src":"22348:19:22","value":{"arguments":[{"name":"pos","nativeSrc":"22359:3:22","nodeType":"YulIdentifier","src":"22359:3:22"},{"kind":"number","nativeSrc":"22364:2:22","nodeType":"YulLiteral","src":"22364:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"22355:3:22","nodeType":"YulIdentifier","src":"22355:3:22"},"nativeSrc":"22355:12:22","nodeType":"YulFunctionCall","src":"22355:12:22"},"variableNames":[{"name":"end","nativeSrc":"22348:3:22","nodeType":"YulIdentifier","src":"22348:3:22"}]}]},"name":"abi_encode_t_stringliteral_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4_to_t_string_memory_ptr_fromStack","nativeSrc":"22007:366:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"22141:3:22","nodeType":"YulTypedName","src":"22141:3:22","type":""}],"returnVariables":[{"name":"end","nativeSrc":"22149:3:22","nodeType":"YulTypedName","src":"22149:3:22","type":""}],"src":"22007:366:22"},{"body":{"nativeSrc":"22550:248:22","nodeType":"YulBlock","src":"22550:248:22","statements":[{"nativeSrc":"22560:26:22","nodeType":"YulAssignment","src":"22560:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"22572:9:22","nodeType":"YulIdentifier","src":"22572:9:22"},{"kind":"number","nativeSrc":"22583:2:22","nodeType":"YulLiteral","src":"22583:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22568:3:22","nodeType":"YulIdentifier","src":"22568:3:22"},"nativeSrc":"22568:18:22","nodeType":"YulFunctionCall","src":"22568:18:22"},"variableNames":[{"name":"tail","nativeSrc":"22560:4:22","nodeType":"YulIdentifier","src":"22560:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22607:9:22","nodeType":"YulIdentifier","src":"22607:9:22"},{"kind":"number","nativeSrc":"22618:1:22","nodeType":"YulLiteral","src":"22618:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"22603:3:22","nodeType":"YulIdentifier","src":"22603:3:22"},"nativeSrc":"22603:17:22","nodeType":"YulFunctionCall","src":"22603:17:22"},{"arguments":[{"name":"tail","nativeSrc":"22626:4:22","nodeType":"YulIdentifier","src":"22626:4:22"},{"name":"headStart","nativeSrc":"22632:9:22","nodeType":"YulIdentifier","src":"22632:9:22"}],"functionName":{"name":"sub","nativeSrc":"22622:3:22","nodeType":"YulIdentifier","src":"22622:3:22"},"nativeSrc":"22622:20:22","nodeType":"YulFunctionCall","src":"22622:20:22"}],"functionName":{"name":"mstore","nativeSrc":"22596:6:22","nodeType":"YulIdentifier","src":"22596:6:22"},"nativeSrc":"22596:47:22","nodeType":"YulFunctionCall","src":"22596:47:22"},"nativeSrc":"22596:47:22","nodeType":"YulExpressionStatement","src":"22596:47:22"},{"nativeSrc":"22652:139:22","nodeType":"YulAssignment","src":"22652:139:22","value":{"arguments":[{"name":"tail","nativeSrc":"22786:4:22","nodeType":"YulIdentifier","src":"22786:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4_to_t_string_memory_ptr_fromStack","nativeSrc":"22660:124:22","nodeType":"YulIdentifier","src":"22660:124:22"},"nativeSrc":"22660:131:22","nodeType":"YulFunctionCall","src":"22660:131:22"},"variableNames":[{"name":"tail","nativeSrc":"22652:4:22","nodeType":"YulIdentifier","src":"22652:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"22379:419:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22530:9:22","nodeType":"YulTypedName","src":"22530:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"22545:4:22","nodeType":"YulTypedName","src":"22545:4:22","type":""}],"src":"22379:419:22"},{"body":{"nativeSrc":"22918:34:22","nodeType":"YulBlock","src":"22918:34:22","statements":[{"nativeSrc":"22928:18:22","nodeType":"YulAssignment","src":"22928:18:22","value":{"name":"pos","nativeSrc":"22943:3:22","nodeType":"YulIdentifier","src":"22943:3:22"},"variableNames":[{"name":"updated_pos","nativeSrc":"22928:11:22","nodeType":"YulIdentifier","src":"22928:11:22"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"22804:148:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"22890:3:22","nodeType":"YulTypedName","src":"22890:3:22","type":""},{"name":"length","nativeSrc":"22895:6:22","nodeType":"YulTypedName","src":"22895:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"22906:11:22","nodeType":"YulTypedName","src":"22906:11:22","type":""}],"src":"22804:148:22"},{"body":{"nativeSrc":"23068:280:22","nodeType":"YulBlock","src":"23068:280:22","statements":[{"nativeSrc":"23078:53:22","nodeType":"YulVariableDeclaration","src":"23078:53:22","value":{"arguments":[{"name":"value","nativeSrc":"23125:5:22","nodeType":"YulIdentifier","src":"23125:5:22"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"23092:32:22","nodeType":"YulIdentifier","src":"23092:32:22"},"nativeSrc":"23092:39:22","nodeType":"YulFunctionCall","src":"23092:39:22"},"variables":[{"name":"length","nativeSrc":"23082:6:22","nodeType":"YulTypedName","src":"23082:6:22","type":""}]},{"nativeSrc":"23140:96:22","nodeType":"YulAssignment","src":"23140:96:22","value":{"arguments":[{"name":"pos","nativeSrc":"23224:3:22","nodeType":"YulIdentifier","src":"23224:3:22"},{"name":"length","nativeSrc":"23229:6:22","nodeType":"YulIdentifier","src":"23229:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"23147:76:22","nodeType":"YulIdentifier","src":"23147:76:22"},"nativeSrc":"23147:89:22","nodeType":"YulFunctionCall","src":"23147:89:22"},"variableNames":[{"name":"pos","nativeSrc":"23140:3:22","nodeType":"YulIdentifier","src":"23140:3:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"23284:5:22","nodeType":"YulIdentifier","src":"23284:5:22"},{"kind":"number","nativeSrc":"23291:4:22","nodeType":"YulLiteral","src":"23291:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"23280:3:22","nodeType":"YulIdentifier","src":"23280:3:22"},"nativeSrc":"23280:16:22","nodeType":"YulFunctionCall","src":"23280:16:22"},{"name":"pos","nativeSrc":"23298:3:22","nodeType":"YulIdentifier","src":"23298:3:22"},{"name":"length","nativeSrc":"23303:6:22","nodeType":"YulIdentifier","src":"23303:6:22"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"23245:34:22","nodeType":"YulIdentifier","src":"23245:34:22"},"nativeSrc":"23245:65:22","nodeType":"YulFunctionCall","src":"23245:65:22"},"nativeSrc":"23245:65:22","nodeType":"YulExpressionStatement","src":"23245:65:22"},{"nativeSrc":"23319:23:22","nodeType":"YulAssignment","src":"23319:23:22","value":{"arguments":[{"name":"pos","nativeSrc":"23330:3:22","nodeType":"YulIdentifier","src":"23330:3:22"},{"name":"length","nativeSrc":"23335:6:22","nodeType":"YulIdentifier","src":"23335:6:22"}],"functionName":{"name":"add","nativeSrc":"23326:3:22","nodeType":"YulIdentifier","src":"23326:3:22"},"nativeSrc":"23326:16:22","nodeType":"YulFunctionCall","src":"23326:16:22"},"variableNames":[{"name":"end","nativeSrc":"23319:3:22","nodeType":"YulIdentifier","src":"23319:3:22"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"22958:390:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"23049:5:22","nodeType":"YulTypedName","src":"23049:5:22","type":""},{"name":"pos","nativeSrc":"23056:3:22","nodeType":"YulTypedName","src":"23056:3:22","type":""}],"returnVariables":[{"name":"end","nativeSrc":"23064:3:22","nodeType":"YulTypedName","src":"23064:3:22","type":""}],"src":"22958:390:22"},{"body":{"nativeSrc":"23538:251:22","nodeType":"YulBlock","src":"23538:251:22","statements":[{"nativeSrc":"23549:102:22","nodeType":"YulAssignment","src":"23549:102:22","value":{"arguments":[{"name":"value0","nativeSrc":"23638:6:22","nodeType":"YulIdentifier","src":"23638:6:22"},{"name":"pos","nativeSrc":"23647:3:22","nodeType":"YulIdentifier","src":"23647:3:22"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"23556:81:22","nodeType":"YulIdentifier","src":"23556:81:22"},"nativeSrc":"23556:95:22","nodeType":"YulFunctionCall","src":"23556:95:22"},"variableNames":[{"name":"pos","nativeSrc":"23549:3:22","nodeType":"YulIdentifier","src":"23549:3:22"}]},{"nativeSrc":"23661:102:22","nodeType":"YulAssignment","src":"23661:102:22","value":{"arguments":[{"name":"value1","nativeSrc":"23750:6:22","nodeType":"YulIdentifier","src":"23750:6:22"},{"name":"pos","nativeSrc":"23759:3:22","nodeType":"YulIdentifier","src":"23759:3:22"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"23668:81:22","nodeType":"YulIdentifier","src":"23668:81:22"},"nativeSrc":"23668:95:22","nodeType":"YulFunctionCall","src":"23668:95:22"},"variableNames":[{"name":"pos","nativeSrc":"23661:3:22","nodeType":"YulIdentifier","src":"23661:3:22"}]},{"nativeSrc":"23773:10:22","nodeType":"YulAssignment","src":"23773:10:22","value":{"name":"pos","nativeSrc":"23780:3:22","nodeType":"YulIdentifier","src":"23780:3:22"},"variableNames":[{"name":"end","nativeSrc":"23773:3:22","nodeType":"YulIdentifier","src":"23773:3:22"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"23354:435:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"23509:3:22","nodeType":"YulTypedName","src":"23509:3:22","type":""},{"name":"value1","nativeSrc":"23515:6:22","nodeType":"YulTypedName","src":"23515:6:22","type":""},{"name":"value0","nativeSrc":"23523:6:22","nodeType":"YulTypedName","src":"23523:6:22","type":""}],"returnVariables":[{"name":"end","nativeSrc":"23534:3:22","nodeType":"YulTypedName","src":"23534:3:22","type":""}],"src":"23354:435:22"},{"body":{"nativeSrc":"24033:537:22","nodeType":"YulBlock","src":"24033:537:22","statements":[{"nativeSrc":"24043:27:22","nodeType":"YulAssignment","src":"24043:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"24055:9:22","nodeType":"YulIdentifier","src":"24055:9:22"},{"kind":"number","nativeSrc":"24066:3:22","nodeType":"YulLiteral","src":"24066:3:22","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"24051:3:22","nodeType":"YulIdentifier","src":"24051:3:22"},"nativeSrc":"24051:19:22","nodeType":"YulFunctionCall","src":"24051:19:22"},"variableNames":[{"name":"tail","nativeSrc":"24043:4:22","nodeType":"YulIdentifier","src":"24043:4:22"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"24124:6:22","nodeType":"YulIdentifier","src":"24124:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"24137:9:22","nodeType":"YulIdentifier","src":"24137:9:22"},{"kind":"number","nativeSrc":"24148:1:22","nodeType":"YulLiteral","src":"24148:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"24133:3:22","nodeType":"YulIdentifier","src":"24133:3:22"},"nativeSrc":"24133:17:22","nodeType":"YulFunctionCall","src":"24133:17:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"24080:43:22","nodeType":"YulIdentifier","src":"24080:43:22"},"nativeSrc":"24080:71:22","nodeType":"YulFunctionCall","src":"24080:71:22"},"nativeSrc":"24080:71:22","nodeType":"YulExpressionStatement","src":"24080:71:22"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"24205:6:22","nodeType":"YulIdentifier","src":"24205:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"24218:9:22","nodeType":"YulIdentifier","src":"24218:9:22"},{"kind":"number","nativeSrc":"24229:2:22","nodeType":"YulLiteral","src":"24229:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"24214:3:22","nodeType":"YulIdentifier","src":"24214:3:22"},"nativeSrc":"24214:18:22","nodeType":"YulFunctionCall","src":"24214:18:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"24161:43:22","nodeType":"YulIdentifier","src":"24161:43:22"},"nativeSrc":"24161:72:22","nodeType":"YulFunctionCall","src":"24161:72:22"},"nativeSrc":"24161:72:22","nodeType":"YulExpressionStatement","src":"24161:72:22"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"24287:6:22","nodeType":"YulIdentifier","src":"24287:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"24300:9:22","nodeType":"YulIdentifier","src":"24300:9:22"},{"kind":"number","nativeSrc":"24311:2:22","nodeType":"YulLiteral","src":"24311:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"24296:3:22","nodeType":"YulIdentifier","src":"24296:3:22"},"nativeSrc":"24296:18:22","nodeType":"YulFunctionCall","src":"24296:18:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"24243:43:22","nodeType":"YulIdentifier","src":"24243:43:22"},"nativeSrc":"24243:72:22","nodeType":"YulFunctionCall","src":"24243:72:22"},"nativeSrc":"24243:72:22","nodeType":"YulExpressionStatement","src":"24243:72:22"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"24369:6:22","nodeType":"YulIdentifier","src":"24369:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"24382:9:22","nodeType":"YulIdentifier","src":"24382:9:22"},{"kind":"number","nativeSrc":"24393:2:22","nodeType":"YulLiteral","src":"24393:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"24378:3:22","nodeType":"YulIdentifier","src":"24378:3:22"},"nativeSrc":"24378:18:22","nodeType":"YulFunctionCall","src":"24378:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"24325:43:22","nodeType":"YulIdentifier","src":"24325:43:22"},"nativeSrc":"24325:72:22","nodeType":"YulFunctionCall","src":"24325:72:22"},"nativeSrc":"24325:72:22","nodeType":"YulExpressionStatement","src":"24325:72:22"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"24451:6:22","nodeType":"YulIdentifier","src":"24451:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"24464:9:22","nodeType":"YulIdentifier","src":"24464:9:22"},{"kind":"number","nativeSrc":"24475:3:22","nodeType":"YulLiteral","src":"24475:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"24460:3:22","nodeType":"YulIdentifier","src":"24460:3:22"},"nativeSrc":"24460:19:22","nodeType":"YulFunctionCall","src":"24460:19:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"24407:43:22","nodeType":"YulIdentifier","src":"24407:43:22"},"nativeSrc":"24407:73:22","nodeType":"YulFunctionCall","src":"24407:73:22"},"nativeSrc":"24407:73:22","nodeType":"YulExpressionStatement","src":"24407:73:22"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"24534:6:22","nodeType":"YulIdentifier","src":"24534:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"24547:9:22","nodeType":"YulIdentifier","src":"24547:9:22"},{"kind":"number","nativeSrc":"24558:3:22","nodeType":"YulLiteral","src":"24558:3:22","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"24543:3:22","nodeType":"YulIdentifier","src":"24543:3:22"},"nativeSrc":"24543:19:22","nodeType":"YulFunctionCall","src":"24543:19:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"24490:43:22","nodeType":"YulIdentifier","src":"24490:43:22"},"nativeSrc":"24490:73:22","nodeType":"YulFunctionCall","src":"24490:73:22"},"nativeSrc":"24490:73:22","nodeType":"YulExpressionStatement","src":"24490:73:22"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"23795:775:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"23965:9:22","nodeType":"YulTypedName","src":"23965:9:22","type":""},{"name":"value5","nativeSrc":"23977:6:22","nodeType":"YulTypedName","src":"23977:6:22","type":""},{"name":"value4","nativeSrc":"23985:6:22","nodeType":"YulTypedName","src":"23985:6:22","type":""},{"name":"value3","nativeSrc":"23993:6:22","nodeType":"YulTypedName","src":"23993:6:22","type":""},{"name":"value2","nativeSrc":"24001:6:22","nodeType":"YulTypedName","src":"24001:6:22","type":""},{"name":"value1","nativeSrc":"24009:6:22","nodeType":"YulTypedName","src":"24009:6:22","type":""},{"name":"value0","nativeSrc":"24017:6:22","nodeType":"YulTypedName","src":"24017:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"24028:4:22","nodeType":"YulTypedName","src":"24028:4:22","type":""}],"src":"23795:775:22"},{"body":{"nativeSrc":"24730:288:22","nodeType":"YulBlock","src":"24730:288:22","statements":[{"nativeSrc":"24740:26:22","nodeType":"YulAssignment","src":"24740:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"24752:9:22","nodeType":"YulIdentifier","src":"24752:9:22"},{"kind":"number","nativeSrc":"24763:2:22","nodeType":"YulLiteral","src":"24763:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"24748:3:22","nodeType":"YulIdentifier","src":"24748:3:22"},"nativeSrc":"24748:18:22","nodeType":"YulFunctionCall","src":"24748:18:22"},"variableNames":[{"name":"tail","nativeSrc":"24740:4:22","nodeType":"YulIdentifier","src":"24740:4:22"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"24820:6:22","nodeType":"YulIdentifier","src":"24820:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"24833:9:22","nodeType":"YulIdentifier","src":"24833:9:22"},{"kind":"number","nativeSrc":"24844:1:22","nodeType":"YulLiteral","src":"24844:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"24829:3:22","nodeType":"YulIdentifier","src":"24829:3:22"},"nativeSrc":"24829:17:22","nodeType":"YulFunctionCall","src":"24829:17:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"24776:43:22","nodeType":"YulIdentifier","src":"24776:43:22"},"nativeSrc":"24776:71:22","nodeType":"YulFunctionCall","src":"24776:71:22"},"nativeSrc":"24776:71:22","nodeType":"YulExpressionStatement","src":"24776:71:22"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"24901:6:22","nodeType":"YulIdentifier","src":"24901:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"24914:9:22","nodeType":"YulIdentifier","src":"24914:9:22"},{"kind":"number","nativeSrc":"24925:2:22","nodeType":"YulLiteral","src":"24925:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"24910:3:22","nodeType":"YulIdentifier","src":"24910:3:22"},"nativeSrc":"24910:18:22","nodeType":"YulFunctionCall","src":"24910:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"24857:43:22","nodeType":"YulIdentifier","src":"24857:43:22"},"nativeSrc":"24857:72:22","nodeType":"YulFunctionCall","src":"24857:72:22"},"nativeSrc":"24857:72:22","nodeType":"YulExpressionStatement","src":"24857:72:22"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"24983:6:22","nodeType":"YulIdentifier","src":"24983:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"24996:9:22","nodeType":"YulIdentifier","src":"24996:9:22"},{"kind":"number","nativeSrc":"25007:2:22","nodeType":"YulLiteral","src":"25007:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"24992:3:22","nodeType":"YulIdentifier","src":"24992:3:22"},"nativeSrc":"24992:18:22","nodeType":"YulFunctionCall","src":"24992:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"24939:43:22","nodeType":"YulIdentifier","src":"24939:43:22"},"nativeSrc":"24939:72:22","nodeType":"YulFunctionCall","src":"24939:72:22"},"nativeSrc":"24939:72:22","nodeType":"YulExpressionStatement","src":"24939:72:22"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"24576:442:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"24686:9:22","nodeType":"YulTypedName","src":"24686:9:22","type":""},{"name":"value2","nativeSrc":"24698:6:22","nodeType":"YulTypedName","src":"24698:6:22","type":""},{"name":"value1","nativeSrc":"24706:6:22","nodeType":"YulTypedName","src":"24706:6:22","type":""},{"name":"value0","nativeSrc":"24714:6:22","nodeType":"YulTypedName","src":"24714:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"24725:4:22","nodeType":"YulTypedName","src":"24725:4:22","type":""}],"src":"24576:442:22"},{"body":{"nativeSrc":"25130:71:22","nodeType":"YulBlock","src":"25130:71:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"25152:6:22","nodeType":"YulIdentifier","src":"25152:6:22"},{"kind":"number","nativeSrc":"25160:1:22","nodeType":"YulLiteral","src":"25160:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"25148:3:22","nodeType":"YulIdentifier","src":"25148:3:22"},"nativeSrc":"25148:14:22","nodeType":"YulFunctionCall","src":"25148:14:22"},{"hexValue":"4172617261436f696e2074726164652069732064697361626c6564","kind":"string","nativeSrc":"25164:29:22","nodeType":"YulLiteral","src":"25164:29:22","type":"","value":"AraraCoin trade is disabled"}],"functionName":{"name":"mstore","nativeSrc":"25141:6:22","nodeType":"YulIdentifier","src":"25141:6:22"},"nativeSrc":"25141:53:22","nodeType":"YulFunctionCall","src":"25141:53:22"},"nativeSrc":"25141:53:22","nodeType":"YulExpressionStatement","src":"25141:53:22"}]},"name":"store_literal_in_memory_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7","nativeSrc":"25024:177:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"25122:6:22","nodeType":"YulTypedName","src":"25122:6:22","type":""}],"src":"25024:177:22"},{"body":{"nativeSrc":"25353:220:22","nodeType":"YulBlock","src":"25353:220:22","statements":[{"nativeSrc":"25363:74:22","nodeType":"YulAssignment","src":"25363:74:22","value":{"arguments":[{"name":"pos","nativeSrc":"25429:3:22","nodeType":"YulIdentifier","src":"25429:3:22"},{"kind":"number","nativeSrc":"25434:2:22","nodeType":"YulLiteral","src":"25434:2:22","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"25370:58:22","nodeType":"YulIdentifier","src":"25370:58:22"},"nativeSrc":"25370:67:22","nodeType":"YulFunctionCall","src":"25370:67:22"},"variableNames":[{"name":"pos","nativeSrc":"25363:3:22","nodeType":"YulIdentifier","src":"25363:3:22"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"25535:3:22","nodeType":"YulIdentifier","src":"25535:3:22"}],"functionName":{"name":"store_literal_in_memory_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7","nativeSrc":"25446:88:22","nodeType":"YulIdentifier","src":"25446:88:22"},"nativeSrc":"25446:93:22","nodeType":"YulFunctionCall","src":"25446:93:22"},"nativeSrc":"25446:93:22","nodeType":"YulExpressionStatement","src":"25446:93:22"},{"nativeSrc":"25548:19:22","nodeType":"YulAssignment","src":"25548:19:22","value":{"arguments":[{"name":"pos","nativeSrc":"25559:3:22","nodeType":"YulIdentifier","src":"25559:3:22"},{"kind":"number","nativeSrc":"25564:2:22","nodeType":"YulLiteral","src":"25564:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"25555:3:22","nodeType":"YulIdentifier","src":"25555:3:22"},"nativeSrc":"25555:12:22","nodeType":"YulFunctionCall","src":"25555:12:22"},"variableNames":[{"name":"end","nativeSrc":"25548:3:22","nodeType":"YulIdentifier","src":"25548:3:22"}]}]},"name":"abi_encode_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7_to_t_string_memory_ptr_fromStack","nativeSrc":"25207:366:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"25341:3:22","nodeType":"YulTypedName","src":"25341:3:22","type":""}],"returnVariables":[{"name":"end","nativeSrc":"25349:3:22","nodeType":"YulTypedName","src":"25349:3:22","type":""}],"src":"25207:366:22"},{"body":{"nativeSrc":"25750:248:22","nodeType":"YulBlock","src":"25750:248:22","statements":[{"nativeSrc":"25760:26:22","nodeType":"YulAssignment","src":"25760:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"25772:9:22","nodeType":"YulIdentifier","src":"25772:9:22"},{"kind":"number","nativeSrc":"25783:2:22","nodeType":"YulLiteral","src":"25783:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"25768:3:22","nodeType":"YulIdentifier","src":"25768:3:22"},"nativeSrc":"25768:18:22","nodeType":"YulFunctionCall","src":"25768:18:22"},"variableNames":[{"name":"tail","nativeSrc":"25760:4:22","nodeType":"YulIdentifier","src":"25760:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"25807:9:22","nodeType":"YulIdentifier","src":"25807:9:22"},{"kind":"number","nativeSrc":"25818:1:22","nodeType":"YulLiteral","src":"25818:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"25803:3:22","nodeType":"YulIdentifier","src":"25803:3:22"},"nativeSrc":"25803:17:22","nodeType":"YulFunctionCall","src":"25803:17:22"},{"arguments":[{"name":"tail","nativeSrc":"25826:4:22","nodeType":"YulIdentifier","src":"25826:4:22"},{"name":"headStart","nativeSrc":"25832:9:22","nodeType":"YulIdentifier","src":"25832:9:22"}],"functionName":{"name":"sub","nativeSrc":"25822:3:22","nodeType":"YulIdentifier","src":"25822:3:22"},"nativeSrc":"25822:20:22","nodeType":"YulFunctionCall","src":"25822:20:22"}],"functionName":{"name":"mstore","nativeSrc":"25796:6:22","nodeType":"YulIdentifier","src":"25796:6:22"},"nativeSrc":"25796:47:22","nodeType":"YulFunctionCall","src":"25796:47:22"},"nativeSrc":"25796:47:22","nodeType":"YulExpressionStatement","src":"25796:47:22"},{"nativeSrc":"25852:139:22","nodeType":"YulAssignment","src":"25852:139:22","value":{"arguments":[{"name":"tail","nativeSrc":"25986:4:22","nodeType":"YulIdentifier","src":"25986:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7_to_t_string_memory_ptr_fromStack","nativeSrc":"25860:124:22","nodeType":"YulIdentifier","src":"25860:124:22"},"nativeSrc":"25860:131:22","nodeType":"YulFunctionCall","src":"25860:131:22"},"variableNames":[{"name":"tail","nativeSrc":"25852:4:22","nodeType":"YulIdentifier","src":"25852:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"25579:419:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"25730:9:22","nodeType":"YulTypedName","src":"25730:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"25745:4:22","nodeType":"YulTypedName","src":"25745:4:22","type":""}],"src":"25579:419:22"},{"body":{"nativeSrc":"26214:454:22","nodeType":"YulBlock","src":"26214:454:22","statements":[{"nativeSrc":"26224:27:22","nodeType":"YulAssignment","src":"26224:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"26236:9:22","nodeType":"YulIdentifier","src":"26236:9:22"},{"kind":"number","nativeSrc":"26247:3:22","nodeType":"YulLiteral","src":"26247:3:22","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"26232:3:22","nodeType":"YulIdentifier","src":"26232:3:22"},"nativeSrc":"26232:19:22","nodeType":"YulFunctionCall","src":"26232:19:22"},"variableNames":[{"name":"tail","nativeSrc":"26224:4:22","nodeType":"YulIdentifier","src":"26224:4:22"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"26305:6:22","nodeType":"YulIdentifier","src":"26305:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"26318:9:22","nodeType":"YulIdentifier","src":"26318:9:22"},{"kind":"number","nativeSrc":"26329:1:22","nodeType":"YulLiteral","src":"26329:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"26314:3:22","nodeType":"YulIdentifier","src":"26314:3:22"},"nativeSrc":"26314:17:22","nodeType":"YulFunctionCall","src":"26314:17:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"26261:43:22","nodeType":"YulIdentifier","src":"26261:43:22"},"nativeSrc":"26261:71:22","nodeType":"YulFunctionCall","src":"26261:71:22"},"nativeSrc":"26261:71:22","nodeType":"YulExpressionStatement","src":"26261:71:22"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"26386:6:22","nodeType":"YulIdentifier","src":"26386:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"26399:9:22","nodeType":"YulIdentifier","src":"26399:9:22"},{"kind":"number","nativeSrc":"26410:2:22","nodeType":"YulLiteral","src":"26410:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"26395:3:22","nodeType":"YulIdentifier","src":"26395:3:22"},"nativeSrc":"26395:18:22","nodeType":"YulFunctionCall","src":"26395:18:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"26342:43:22","nodeType":"YulIdentifier","src":"26342:43:22"},"nativeSrc":"26342:72:22","nodeType":"YulFunctionCall","src":"26342:72:22"},"nativeSrc":"26342:72:22","nodeType":"YulExpressionStatement","src":"26342:72:22"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"26468:6:22","nodeType":"YulIdentifier","src":"26468:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"26481:9:22","nodeType":"YulIdentifier","src":"26481:9:22"},{"kind":"number","nativeSrc":"26492:2:22","nodeType":"YulLiteral","src":"26492:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"26477:3:22","nodeType":"YulIdentifier","src":"26477:3:22"},"nativeSrc":"26477:18:22","nodeType":"YulFunctionCall","src":"26477:18:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"26424:43:22","nodeType":"YulIdentifier","src":"26424:43:22"},"nativeSrc":"26424:72:22","nodeType":"YulFunctionCall","src":"26424:72:22"},"nativeSrc":"26424:72:22","nodeType":"YulExpressionStatement","src":"26424:72:22"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"26550:6:22","nodeType":"YulIdentifier","src":"26550:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"26563:9:22","nodeType":"YulIdentifier","src":"26563:9:22"},{"kind":"number","nativeSrc":"26574:2:22","nodeType":"YulLiteral","src":"26574:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"26559:3:22","nodeType":"YulIdentifier","src":"26559:3:22"},"nativeSrc":"26559:18:22","nodeType":"YulFunctionCall","src":"26559:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"26506:43:22","nodeType":"YulIdentifier","src":"26506:43:22"},"nativeSrc":"26506:72:22","nodeType":"YulFunctionCall","src":"26506:72:22"},"nativeSrc":"26506:72:22","nodeType":"YulExpressionStatement","src":"26506:72:22"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"26632:6:22","nodeType":"YulIdentifier","src":"26632:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"26645:9:22","nodeType":"YulIdentifier","src":"26645:9:22"},{"kind":"number","nativeSrc":"26656:3:22","nodeType":"YulLiteral","src":"26656:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"26641:3:22","nodeType":"YulIdentifier","src":"26641:3:22"},"nativeSrc":"26641:19:22","nodeType":"YulFunctionCall","src":"26641:19:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"26588:43:22","nodeType":"YulIdentifier","src":"26588:43:22"},"nativeSrc":"26588:73:22","nodeType":"YulFunctionCall","src":"26588:73:22"},"nativeSrc":"26588:73:22","nodeType":"YulExpressionStatement","src":"26588:73:22"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"26004:664:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"26154:9:22","nodeType":"YulTypedName","src":"26154:9:22","type":""},{"name":"value4","nativeSrc":"26166:6:22","nodeType":"YulTypedName","src":"26166:6:22","type":""},{"name":"value3","nativeSrc":"26174:6:22","nodeType":"YulTypedName","src":"26174:6:22","type":""},{"name":"value2","nativeSrc":"26182:6:22","nodeType":"YulTypedName","src":"26182:6:22","type":""},{"name":"value1","nativeSrc":"26190:6:22","nodeType":"YulTypedName","src":"26190:6:22","type":""},{"name":"value0","nativeSrc":"26198:6:22","nodeType":"YulTypedName","src":"26198:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"26209:4:22","nodeType":"YulTypedName","src":"26209:4:22","type":""}],"src":"26004:664:22"},{"body":{"nativeSrc":"26852:367:22","nodeType":"YulBlock","src":"26852:367:22","statements":[{"nativeSrc":"26862:27:22","nodeType":"YulAssignment","src":"26862:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"26874:9:22","nodeType":"YulIdentifier","src":"26874:9:22"},{"kind":"number","nativeSrc":"26885:3:22","nodeType":"YulLiteral","src":"26885:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"26870:3:22","nodeType":"YulIdentifier","src":"26870:3:22"},"nativeSrc":"26870:19:22","nodeType":"YulFunctionCall","src":"26870:19:22"},"variableNames":[{"name":"tail","nativeSrc":"26862:4:22","nodeType":"YulIdentifier","src":"26862:4:22"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"26943:6:22","nodeType":"YulIdentifier","src":"26943:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"26956:9:22","nodeType":"YulIdentifier","src":"26956:9:22"},{"kind":"number","nativeSrc":"26967:1:22","nodeType":"YulLiteral","src":"26967:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"26952:3:22","nodeType":"YulIdentifier","src":"26952:3:22"},"nativeSrc":"26952:17:22","nodeType":"YulFunctionCall","src":"26952:17:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"26899:43:22","nodeType":"YulIdentifier","src":"26899:43:22"},"nativeSrc":"26899:71:22","nodeType":"YulFunctionCall","src":"26899:71:22"},"nativeSrc":"26899:71:22","nodeType":"YulExpressionStatement","src":"26899:71:22"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"27020:6:22","nodeType":"YulIdentifier","src":"27020:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"27033:9:22","nodeType":"YulIdentifier","src":"27033:9:22"},{"kind":"number","nativeSrc":"27044:2:22","nodeType":"YulLiteral","src":"27044:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"27029:3:22","nodeType":"YulIdentifier","src":"27029:3:22"},"nativeSrc":"27029:18:22","nodeType":"YulFunctionCall","src":"27029:18:22"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"26980:39:22","nodeType":"YulIdentifier","src":"26980:39:22"},"nativeSrc":"26980:68:22","nodeType":"YulFunctionCall","src":"26980:68:22"},"nativeSrc":"26980:68:22","nodeType":"YulExpressionStatement","src":"26980:68:22"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"27102:6:22","nodeType":"YulIdentifier","src":"27102:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"27115:9:22","nodeType":"YulIdentifier","src":"27115:9:22"},{"kind":"number","nativeSrc":"27126:2:22","nodeType":"YulLiteral","src":"27126:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"27111:3:22","nodeType":"YulIdentifier","src":"27111:3:22"},"nativeSrc":"27111:18:22","nodeType":"YulFunctionCall","src":"27111:18:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"27058:43:22","nodeType":"YulIdentifier","src":"27058:43:22"},"nativeSrc":"27058:72:22","nodeType":"YulFunctionCall","src":"27058:72:22"},"nativeSrc":"27058:72:22","nodeType":"YulExpressionStatement","src":"27058:72:22"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"27184:6:22","nodeType":"YulIdentifier","src":"27184:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"27197:9:22","nodeType":"YulIdentifier","src":"27197:9:22"},{"kind":"number","nativeSrc":"27208:2:22","nodeType":"YulLiteral","src":"27208:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"27193:3:22","nodeType":"YulIdentifier","src":"27193:3:22"},"nativeSrc":"27193:18:22","nodeType":"YulFunctionCall","src":"27193:18:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"27140:43:22","nodeType":"YulIdentifier","src":"27140:43:22"},"nativeSrc":"27140:72:22","nodeType":"YulFunctionCall","src":"27140:72:22"},"nativeSrc":"27140:72:22","nodeType":"YulExpressionStatement","src":"27140:72:22"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"26674:545:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"26800:9:22","nodeType":"YulTypedName","src":"26800:9:22","type":""},{"name":"value3","nativeSrc":"26812:6:22","nodeType":"YulTypedName","src":"26812:6:22","type":""},{"name":"value2","nativeSrc":"26820:6:22","nodeType":"YulTypedName","src":"26820:6:22","type":""},{"name":"value1","nativeSrc":"26828:6:22","nodeType":"YulTypedName","src":"26828:6:22","type":""},{"name":"value0","nativeSrc":"26836:6:22","nodeType":"YulTypedName","src":"26836:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"26847:4:22","nodeType":"YulTypedName","src":"26847:4:22","type":""}],"src":"26674:545:22"},{"body":{"nativeSrc":"27253:152:22","nodeType":"YulBlock","src":"27253:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"27270:1:22","nodeType":"YulLiteral","src":"27270:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"27273:77:22","nodeType":"YulLiteral","src":"27273:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"27263:6:22","nodeType":"YulIdentifier","src":"27263:6:22"},"nativeSrc":"27263:88:22","nodeType":"YulFunctionCall","src":"27263:88:22"},"nativeSrc":"27263:88:22","nodeType":"YulExpressionStatement","src":"27263:88:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"27367:1:22","nodeType":"YulLiteral","src":"27367:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"27370:4:22","nodeType":"YulLiteral","src":"27370:4:22","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"27360:6:22","nodeType":"YulIdentifier","src":"27360:6:22"},"nativeSrc":"27360:15:22","nodeType":"YulFunctionCall","src":"27360:15:22"},"nativeSrc":"27360:15:22","nodeType":"YulExpressionStatement","src":"27360:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"27391:1:22","nodeType":"YulLiteral","src":"27391:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"27394:4:22","nodeType":"YulLiteral","src":"27394:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"27384:6:22","nodeType":"YulIdentifier","src":"27384:6:22"},"nativeSrc":"27384:15:22","nodeType":"YulFunctionCall","src":"27384:15:22"},"nativeSrc":"27384:15:22","nodeType":"YulExpressionStatement","src":"27384:15:22"}]},"name":"panic_error_0x21","nativeSrc":"27225:180:22","nodeType":"YulFunctionDefinition","src":"27225:180:22"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ITaxHandler_$4656_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ITaxHandler_$4656_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ITaxHandler_$4656_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ITaxHandler_$4656__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ITaxHandler_$4656_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // bool[]\n    function abi_decode_t_array$_t_bool_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_bool_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_array$_t_bool_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_24cf83481f2a8ba90e1c3f2ad6b040e1487e7c57c8c9c5939238bafe3879f015(memPtr) {\n\n        mstore(add(memPtr, 0), \"TGC: trading already enabled\")\n\n    }\n\n    function abi_encode_t_stringliteral_24cf83481f2a8ba90e1c3f2ad6b040e1487e7c57c8c9c5939238bafe3879f015_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_24cf83481f2a8ba90e1c3f2ad6b040e1487e7c57c8c9c5939238bafe3879f015(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24cf83481f2a8ba90e1c3f2ad6b040e1487e7c57c8c9c5939238bafe3879f015__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24cf83481f2a8ba90e1c3f2ad6b040e1487e7c57c8c9c5939238bafe3879f015_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ba7cd66ed381e90a6a6f5c81315eeba2f99d0bb92ba7388f35e237d2bf061d88(memPtr) {\n\n        mstore(add(memPtr, 0), \"TGC: invalid parameters\")\n\n    }\n\n    function abi_encode_t_stringliteral_ba7cd66ed381e90a6a6f5c81315eeba2f99d0bb92ba7388f35e237d2bf061d88_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_ba7cd66ed381e90a6a6f5c81315eeba2f99d0bb92ba7388f35e237d2bf061d88(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ba7cd66ed381e90a6a6f5c81315eeba2f99d0bb92ba7388f35e237d2bf061d88__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ba7cd66ed381e90a6a6f5c81315eeba2f99d0bb92ba7388f35e237d2bf061d88_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4(memPtr) {\n\n        mstore(add(memPtr, 0), \"AraraCoin trading already enable\")\n\n        mstore(add(memPtr, 32), \"d\")\n\n    }\n\n    function abi_encode_t_stringliteral_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7(memPtr) {\n\n        mstore(add(memPtr, 0), \"AraraCoin trade is disabled\")\n\n    }\n\n    function abi_encode_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2167":[{"length":32,"start":5159}],"2169":[{"length":32,"start":5118}],"2171":[{"length":32,"start":5032}],"2173":[{"length":32,"start":6581}],"2175":[{"length":32,"start":6614}],"2178":[{"length":32,"start":5626}],"2181":[{"length":32,"start":5685}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101cf5760003560e01c80637ecebe00116101045780639b75679c116100a2578063d505accf11610071578063d505accf1461051a578063dd62ed3e14610536578063f2fde38b14610566578063fca6172f14610582576101cf565b80639b75679c1461047e578063a9059cbb146104ae578063bbaa49da146104de578063c519099d146104fc576101cf565b80638a8c523c116100de5780638a8c523c1461041a5780638ac27f5f146104245780638da5cb5b1461044257806395d89b4114610460576101cf565b80637ecebe00146103a85780637edd9e5e146103d857806384b0196e146103f6576101cf565b806344447b4e116101715780635a7adf7f1161014b5780635a7adf7f146103205780635e57966d1461033e57806370a082311461036e578063715018a61461039e576101cf565b806344447b4e146102ca578063488d4a51146102e65780634ada218b14610302576101cf565b806318160ddd116101ad57806318160ddd1461024057806323b872dd1461025e578063313ce5671461028e5780633644e515146102ac576101cf565b806306fdde03146101d4578063095ea7b3146101f257806312280ba814610222575b600080fd5b6101dc6105a0565b6040516101e991906120e8565b60405180910390f35b61020c600480360381019061020791906121b2565b610632565b604051610219919061220d565b60405180910390f35b61022a610655565b6040516102379190612287565b60405180910390f35b61024861067b565b60405161025591906122b1565b60405180910390f35b610278600480360381019061027391906122cc565b610685565b604051610285919061220d565b60405180910390f35b6102966106b4565b6040516102a3919061233b565b60405180910390f35b6102b46106bd565b6040516102c1919061236f565b60405180910390f35b6102e460048036038101906102df9190612445565b6106cc565b005b61030060048036038101906102fb91906124c6565b610833565b005b61030a6108df565b604051610317919061220d565b60405180910390f35b6103286108f2565b6040516103359190612502565b60405180910390f35b610358600480360381019061035391906124c6565b610918565b60405161036591906120e8565b60405180910390f35b610388600480360381019061038391906124c6565b610c1d565b60405161039591906122b1565b60405180910390f35b6103a6610c65565b005b6103c260048036038101906103bd91906124c6565b610c79565b6040516103cf91906122b1565b60405180910390f35b6103e0610c8b565b6040516103ed9190612502565b60405180910390f35b6103fe610cb1565b6040516104119796959493929190612616565b60405180910390f35b610422610d5b565b005b61042c610dfc565b6040516104399190612502565b60405180910390f35b61044a610e22565b6040516104579190612502565b60405180910390f35b610468610e4c565b60405161047591906120e8565b60405180910390f35b610498600480360381019061049391906127ca565b610ede565b6040516104a591906120e8565b60405180910390f35b6104c860048036038101906104c391906121b2565b610f18565b6040516104d5919061220d565b60405180910390f35b6104e6610f3b565b6040516104f39190612502565b60405180910390f35b610504610f61565b6040516105119190612502565b60405180910390f35b610534600480360381019061052f919061287e565b610f87565b005b610550600480360381019061054b9190612920565b6110cf565b60405161055d91906122b1565b60405180910390f35b610580600480360381019061057b91906124c6565b611156565b005b61058a6111dc565b6040516105979190612502565b60405180910390f35b6060600380546105af9061298f565b80601f01602080910402602001604051908101604052809291908181526020018280546105db9061298f565b80156106285780601f106105fd57610100808354040283529160200191610628565b820191906000526020600020905b81548152906001019060200180831161060b57829003601f168201915b5050505050905090565b60008061063d611202565b905061064a81858561120a565b600191505092915050565b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600254905090565b600080610690611202565b905061069d85828561121c565b6106a88585856112b0565b60019150509392505050565b60006012905090565b60006106c76113a4565b905090565b6106d461145b565b600f60149054906101000a900460ff1615610724576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071b90612a0c565b60405180910390fd5b81819050848490501461076c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076390612a78565b60405180910390fd5b60005b8484905081101561082c5782828281811061078d5761078c612a98565b5b90506020020160208101906107a29190612af3565b601060008787858181106107b9576107b8612a98565b5b90506020020160208101906107ce91906124c6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550808060010191505061076f565b5050505050565b61083b61145b565b6000600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600f60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ed910c9481701ba32afe0c247572aaece27072f230c8ec769bf245fc0b38de681836040516108d3929190612b20565b60405180910390a15050565b600f60149054906101000a900460ff1681565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060008273ffffffffffffffffffffffffffffffffffffffff1660001b905060006040518060400160405280601081526020017f303132333435363738396162636465660000000000000000000000000000000081525090506000602a67ffffffffffffffff81111561098f5761098e61269f565b5b6040519080825280601f01601f1916602001820160405280156109c15781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106109f9576109f8612a98565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610a5d57610a5c612a98565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060005b6014811015610c115782600485600c84610aa99190612b78565b60208110610aba57610ab9612a98565b5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c60f81c60ff1681518110610af957610af8612a98565b5b602001015160f81c60f81b82600283610b129190612bac565b6002610b1e9190612b78565b81518110610b2f57610b2e612a98565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535082600f60f81b85600c84610b729190612b78565b60208110610b8357610b82612a98565b5b1a60f81b1660f81c60ff1681518110610b9f57610b9e612a98565b5b602001015160f81c60f81b82600283610bb89190612bac565b6003610bc49190612b78565b81518110610bd557610bd4612a98565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050610a8f565b50809350505050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610c6d61145b565b610c7760006114e2565b565b6000610c84826115a8565b9050919050565b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060608060008060006060610cc56115f1565b610ccd61162c565b46306000801b600067ffffffffffffffff811115610cee57610ced61269f565b5b604051908082528060200260200182016040528015610d1c5781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b610d6361145b565b600f60149054906101000a900460ff1615610db3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610daa90612c60565b60405180910390fd5b6001600f60146101000a81548160ff0219169083151502179055507f799663458a5ef2936f7fa0c99b3336c69c25890f82974f04e811e5bb359186c760405160405180910390a1565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610e5b9061298f565b80601f0160208091040260200160405190810160405280929190818152602001828054610e879061298f565b8015610ed45780601f10610ea957610100808354040283529160200191610ed4565b820191906000526020600020905b815481529060010190602001808311610eb757829003601f168201915b5050505050905090565b60606000610eeb84610918565b90508083604051602001610f00929190612cbc565b60405160208183030381529060405291505092915050565b600080610f23611202565b9050610f308185856112b0565b600191505092915050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b83421115610fcc57836040517f62791302000000000000000000000000000000000000000000000000000000008152600401610fc391906122b1565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610ffb8c611667565b8960405160200161101196959493929190612ce0565b6040516020818303038152906040528051906020012090506000611034826116be565b90506000611044828787876116d8565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146110b857808a6040517f4b800e460000000000000000000000000000000000000000000000000000000081526004016110af929190612b20565b60405180910390fd5b6110c38a8a8a61120a565b50505050505050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61115e61145b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036111d05760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016111c79190612502565b60405180910390fd5b6111d9816114e2565b50565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b6112178383836001611708565b505050565b600061122884846110cf565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146112aa578181101561129a578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161129193929190612d41565b60405180910390fd5b6112a984848484036000611708565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113225760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016113199190612502565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113945760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161138b9190612502565b60405180910390fd5b61139f8383836118df565b505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614801561142057507f000000000000000000000000000000000000000000000000000000000000000046145b1561144d577f00000000000000000000000000000000000000000000000000000000000000009050611458565b611455611990565b90505b90565b611463611202565b73ffffffffffffffffffffffffffffffffffffffff16611481610e22565b73ffffffffffffffffffffffffffffffffffffffff16146114e0576114a4611202565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016114d79190612502565b60405180910390fd5b565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606061162760057f0000000000000000000000000000000000000000000000000000000000000000611a2690919063ffffffff16565b905090565b606061166260067f0000000000000000000000000000000000000000000000000000000000000000611a2690919063ffffffff16565b905090565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050559050919050565b60006116d16116cb6113a4565b83611ad6565b9050919050565b6000806000806116ea88888888611b17565b9250925092506116fa8282611c0b565b829350505050949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361177a5760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016117719190612502565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036117ec5760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016117e39190612502565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080156118d9578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516118d091906122b1565b60405180910390a35b50505050565b600f60149054906101000a900460ff1661198057601060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661197f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161197690612dc4565b60405180910390fd5b5b61198b838383611d6f565b505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000004630604051602001611a0b959493929190612de4565b60405160208183030381529060405280519060200120905090565b606060ff60001b8314611a4357611a3c83611f94565b9050611ad0565b818054611a4f9061298f565b80601f0160208091040260200160405190810160405280929190818152602001828054611a7b9061298f565b8015611ac85780601f10611a9d57610100808354040283529160200191611ac8565b820191906000526020600020905b815481529060010190602001808311611aab57829003601f168201915b505050505090505b92915050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c1115611b57576000600385925092509250611c01565b600060018888888860405160008152602001604052604051611b7c9493929190612e37565b6020604051602081039080840390855afa158015611b9e573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611bf257600060016000801b93509350935050611c01565b8060008060001b935093509350505b9450945094915050565b60006003811115611c1f57611c1e612e7c565b5b826003811115611c3257611c31612e7c565b5b0315611d6b5760016003811115611c4c57611c4b612e7c565b5b826003811115611c5f57611c5e612e7c565b5b03611c96576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026003811115611caa57611ca9612e7c565b5b826003811115611cbd57611cbc612e7c565b5b03611d02578060001c6040517ffce698f7000000000000000000000000000000000000000000000000000000008152600401611cf991906122b1565b60405180910390fd5b600380811115611d1557611d14612e7c565b5b826003811115611d2857611d27612e7c565b5b03611d6a57806040517fd78bce0c000000000000000000000000000000000000000000000000000000008152600401611d61919061236f565b60405180910390fd5b5b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611dc1578060026000828254611db59190612b78565b92505081905550611e94565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611e4d578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611e4493929190612d41565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611edd5780600260008282540392505081905550611f2a565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611f8791906122b1565b60405180910390a3505050565b60606000611fa183612008565b90506000602067ffffffffffffffff811115611fc057611fbf61269f565b5b6040519080825280601f01601f191660200182016040528015611ff25781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b60008060ff8360001c169050601f81111561204f576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612092578082015181840152602081019050612077565b60008484015250505050565b6000601f19601f8301169050919050565b60006120ba82612058565b6120c48185612063565b93506120d4818560208601612074565b6120dd8161209e565b840191505092915050565b6000602082019050818103600083015261210281846120af565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006121498261211e565b9050919050565b6121598161213e565b811461216457600080fd5b50565b60008135905061217681612150565b92915050565b6000819050919050565b61218f8161217c565b811461219a57600080fd5b50565b6000813590506121ac81612186565b92915050565b600080604083850312156121c9576121c8612114565b5b60006121d785828601612167565b92505060206121e88582860161219d565b9150509250929050565b60008115159050919050565b612207816121f2565b82525050565b600060208201905061222260008301846121fe565b92915050565b6000819050919050565b600061224d6122486122438461211e565b612228565b61211e565b9050919050565b600061225f82612232565b9050919050565b600061227182612254565b9050919050565b61228181612266565b82525050565b600060208201905061229c6000830184612278565b92915050565b6122ab8161217c565b82525050565b60006020820190506122c660008301846122a2565b92915050565b6000806000606084860312156122e5576122e4612114565b5b60006122f386828701612167565b935050602061230486828701612167565b92505060406123158682870161219d565b9150509250925092565b600060ff82169050919050565b6123358161231f565b82525050565b6000602082019050612350600083018461232c565b92915050565b6000819050919050565b61236981612356565b82525050565b60006020820190506123846000830184612360565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126123af576123ae61238a565b5b8235905067ffffffffffffffff8111156123cc576123cb61238f565b5b6020830191508360208202830111156123e8576123e7612394565b5b9250929050565b60008083601f8401126124055761240461238a565b5b8235905067ffffffffffffffff8111156124225761242161238f565b5b60208301915083602082028301111561243e5761243d612394565b5b9250929050565b6000806000806040858703121561245f5761245e612114565b5b600085013567ffffffffffffffff81111561247d5761247c612119565b5b61248987828801612399565b9450945050602085013567ffffffffffffffff8111156124ac576124ab612119565b5b6124b8878288016123ef565b925092505092959194509250565b6000602082840312156124dc576124db612114565b5b60006124ea84828501612167565b91505092915050565b6124fc8161213e565b82525050565b600060208201905061251760008301846124f3565b92915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6125528161251d565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61258d8161217c565b82525050565b600061259f8383612584565b60208301905092915050565b6000602082019050919050565b60006125c382612558565b6125cd8185612563565b93506125d883612574565b8060005b838110156126095781516125f08882612593565b97506125fb836125ab565b9250506001810190506125dc565b5085935050505092915050565b600060e08201905061262b600083018a612549565b818103602083015261263d81896120af565b9050818103604083015261265181886120af565b905061266060608301876122a2565b61266d60808301866124f3565b61267a60a0830185612360565b81810360c083015261268c81846125b8565b905098975050505050505050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6126d78261209e565b810181811067ffffffffffffffff821117156126f6576126f561269f565b5b80604052505050565b600061270961210a565b905061271582826126ce565b919050565b600067ffffffffffffffff8211156127355761273461269f565b5b61273e8261209e565b9050602081019050919050565b82818337600083830152505050565b600061276d6127688461271a565b6126ff565b9050828152602081018484840111156127895761278861269a565b5b61279484828561274b565b509392505050565b600082601f8301126127b1576127b061238a565b5b81356127c184826020860161275a565b91505092915050565b600080604083850312156127e1576127e0612114565b5b60006127ef85828601612167565b925050602083013567ffffffffffffffff8111156128105761280f612119565b5b61281c8582860161279c565b9150509250929050565b61282f8161231f565b811461283a57600080fd5b50565b60008135905061284c81612826565b92915050565b61285b81612356565b811461286657600080fd5b50565b60008135905061287881612852565b92915050565b600080600080600080600060e0888a03121561289d5761289c612114565b5b60006128ab8a828b01612167565b97505060206128bc8a828b01612167565b96505060406128cd8a828b0161219d565b95505060606128de8a828b0161219d565b94505060806128ef8a828b0161283d565b93505060a06129008a828b01612869565b92505060c06129118a828b01612869565b91505092959891949750929550565b6000806040838503121561293757612936612114565b5b600061294585828601612167565b925050602061295685828601612167565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806129a757607f821691505b6020821081036129ba576129b9612960565b5b50919050565b7f5447433a2074726164696e6720616c726561647920656e61626c656400000000600082015250565b60006129f6601c83612063565b9150612a01826129c0565b602082019050919050565b60006020820190508181036000830152612a25816129e9565b9050919050565b7f5447433a20696e76616c696420706172616d6574657273000000000000000000600082015250565b6000612a62601783612063565b9150612a6d82612a2c565b602082019050919050565b60006020820190508181036000830152612a9181612a55565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b612ad0816121f2565b8114612adb57600080fd5b50565b600081359050612aed81612ac7565b92915050565b600060208284031215612b0957612b08612114565b5b6000612b1784828501612ade565b91505092915050565b6000604082019050612b3560008301856124f3565b612b4260208301846124f3565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612b838261217c565b9150612b8e8361217c565b9250828201905080821115612ba657612ba5612b49565b5b92915050565b6000612bb78261217c565b9150612bc28361217c565b9250828202612bd08161217c565b91508282048414831517612be757612be6612b49565b5b5092915050565b7f4172617261436f696e2074726164696e6720616c726561647920656e61626c6560008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b6000612c4a602183612063565b9150612c5582612bee565b604082019050919050565b60006020820190508181036000830152612c7981612c3d565b9050919050565b600081905092915050565b6000612c9682612058565b612ca08185612c80565b9350612cb0818560208601612074565b80840191505092915050565b6000612cc88285612c8b565b9150612cd48284612c8b565b91508190509392505050565b600060c082019050612cf56000830189612360565b612d0260208301886124f3565b612d0f60408301876124f3565b612d1c60608301866122a2565b612d2960808301856122a2565b612d3660a08301846122a2565b979650505050505050565b6000606082019050612d5660008301866124f3565b612d6360208301856122a2565b612d7060408301846122a2565b949350505050565b7f4172617261436f696e2074726164652069732064697361626c65640000000000600082015250565b6000612dae601b83612063565b9150612db982612d78565b602082019050919050565b60006020820190508181036000830152612ddd81612da1565b9050919050565b600060a082019050612df96000830188612360565b612e066020830187612360565b612e136040830186612360565b612e2060608301856122a2565b612e2d60808301846124f3565b9695505050505050565b6000608082019050612e4c6000830187612360565b612e59602083018661232c565b612e666040830185612360565b612e736060830184612360565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea2646970667358221220b874fcc53d58bb8d96ff5366a98a5222e8b0d942eaa40cf0d10a14af5eae234e64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0x9B75679C GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x51A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x566 JUMPI DUP1 PUSH4 0xFCA6172F EQ PUSH2 0x582 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x9B75679C EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4AE JUMPI DUP1 PUSH4 0xBBAA49DA EQ PUSH2 0x4DE JUMPI DUP1 PUSH4 0xC519099D EQ PUSH2 0x4FC JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x8A8C523C GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8A8C523C EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0x8AC27F5F EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x442 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x460 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0x7EDD9E5E EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x3F6 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x44447B4E GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x5A7ADF7F GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x5A7ADF7F EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x5E57966D EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x39E JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x44447B4E EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x488D4A51 EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x4ADA218B EQ PUSH2 0x302 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1AD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2AC JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x12280BA8 EQ PUSH2 0x222 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x21B2 JUMP JUMPDEST PUSH2 0x632 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x220D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22A PUSH2 0x655 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x2287 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x248 PUSH2 0x67B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x22B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x278 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x22CC JUMP JUMPDEST PUSH2 0x685 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x220D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x296 PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x233B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B4 PUSH2 0x6BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x236F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DF SWAP2 SWAP1 PUSH2 0x2445 JUMP JUMPDEST PUSH2 0x6CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x300 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x24C6 JUMP JUMPDEST PUSH2 0x833 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30A PUSH2 0x8DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x220D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x328 PUSH2 0x8F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x2502 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x358 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x24C6 JUMP JUMPDEST PUSH2 0x918 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x388 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x383 SWAP2 SWAP1 PUSH2 0x24C6 JUMP JUMPDEST PUSH2 0xC1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x395 SWAP2 SWAP1 PUSH2 0x22B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A6 PUSH2 0xC65 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x24C6 JUMP JUMPDEST PUSH2 0xC79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0x22B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E0 PUSH2 0xC8B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3ED SWAP2 SWAP1 PUSH2 0x2502 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FE PUSH2 0xCB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x411 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2616 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x422 PUSH2 0xD5B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x42C PUSH2 0xDFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x439 SWAP2 SWAP1 PUSH2 0x2502 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44A PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x457 SWAP2 SWAP1 PUSH2 0x2502 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x468 PUSH2 0xE4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x475 SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x498 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x493 SWAP2 SWAP1 PUSH2 0x27CA JUMP JUMPDEST PUSH2 0xEDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A5 SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C3 SWAP2 SWAP1 PUSH2 0x21B2 JUMP JUMPDEST PUSH2 0xF18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D5 SWAP2 SWAP1 PUSH2 0x220D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E6 PUSH2 0xF3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F3 SWAP2 SWAP1 PUSH2 0x2502 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x504 PUSH2 0xF61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x511 SWAP2 SWAP1 PUSH2 0x2502 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x534 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x52F SWAP2 SWAP1 PUSH2 0x287E JUMP JUMPDEST PUSH2 0xF87 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x550 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54B SWAP2 SWAP1 PUSH2 0x2920 JUMP JUMPDEST PUSH2 0x10CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55D SWAP2 SWAP1 PUSH2 0x22B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x580 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57B SWAP2 SWAP1 PUSH2 0x24C6 JUMP JUMPDEST PUSH2 0x1156 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58A PUSH2 0x11DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x597 SWAP2 SWAP1 PUSH2 0x2502 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x5AF SWAP1 PUSH2 0x298F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5DB SWAP1 PUSH2 0x298F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x628 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x628 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x60B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x63D PUSH2 0x1202 JUMP JUMPDEST SWAP1 POP PUSH2 0x64A DUP2 DUP6 DUP6 PUSH2 0x120A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x690 PUSH2 0x1202 JUMP JUMPDEST SWAP1 POP PUSH2 0x69D DUP6 DUP3 DUP6 PUSH2 0x121C JUMP JUMPDEST PUSH2 0x6A8 DUP6 DUP6 DUP6 PUSH2 0x12B0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C7 PUSH2 0x13A4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6D4 PUSH2 0x145B JUMP JUMPDEST PUSH1 0xF PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x724 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71B SWAP1 PUSH2 0x2A0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SWAP1 POP DUP5 DUP5 SWAP1 POP EQ PUSH2 0x76C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x2A78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP5 DUP5 SWAP1 POP DUP2 LT ISZERO PUSH2 0x82C JUMPI DUP3 DUP3 DUP3 DUP2 DUP2 LT PUSH2 0x78D JUMPI PUSH2 0x78C PUSH2 0x2A98 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x7A2 SWAP2 SWAP1 PUSH2 0x2AF3 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0x7B9 JUMPI PUSH2 0x7B8 PUSH2 0x2A98 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x7CE SWAP2 SWAP1 PUSH2 0x24C6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x76F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x83B PUSH2 0x145B JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0xF PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH31 0xD910C9481701BA32AFE0C247572AAECE27072F230C8EC769BF245FC0B38DE6 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x8D3 SWAP3 SWAP2 SWAP1 PUSH2 0x2B20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH1 0x2A PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x98F JUMPI PUSH2 0x98E PUSH2 0x269F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x9C1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x9F9 JUMPI PUSH2 0x9F8 PUSH2 0x2A98 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xA5D JUMPI PUSH2 0xA5C PUSH2 0x2A98 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 JUMPDEST PUSH1 0x14 DUP2 LT ISZERO PUSH2 0xC11 JUMPI DUP3 PUSH1 0x4 DUP6 PUSH1 0xC DUP5 PUSH2 0xAA9 SWAP2 SWAP1 PUSH2 0x2B78 JUMP JUMPDEST PUSH1 0x20 DUP2 LT PUSH2 0xABA JUMPI PUSH2 0xAB9 PUSH2 0x2A98 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SHR PUSH1 0xF8 SHR PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0xAF9 JUMPI PUSH2 0xAF8 PUSH2 0x2A98 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP3 PUSH1 0x2 DUP4 PUSH2 0xB12 SWAP2 SWAP1 PUSH2 0x2BAC JUMP JUMPDEST PUSH1 0x2 PUSH2 0xB1E SWAP2 SWAP1 PUSH2 0x2B78 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xB2F JUMPI PUSH2 0xB2E PUSH2 0x2A98 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP3 PUSH1 0xF PUSH1 0xF8 SHL DUP6 PUSH1 0xC DUP5 PUSH2 0xB72 SWAP2 SWAP1 PUSH2 0x2B78 JUMP JUMPDEST PUSH1 0x20 DUP2 LT PUSH2 0xB83 JUMPI PUSH2 0xB82 PUSH2 0x2A98 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL AND PUSH1 0xF8 SHR PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0xB9F JUMPI PUSH2 0xB9E PUSH2 0x2A98 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP3 PUSH1 0x2 DUP4 PUSH2 0xBB8 SWAP2 SWAP1 PUSH2 0x2BAC JUMP JUMPDEST PUSH1 0x3 PUSH2 0xBC4 SWAP2 SWAP1 PUSH2 0x2B78 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xBD5 JUMPI PUSH2 0xBD4 PUSH2 0x2A98 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xA8F JUMP JUMPDEST POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC6D PUSH2 0x145B JUMP JUMPDEST PUSH2 0xC77 PUSH1 0x0 PUSH2 0x14E2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC84 DUP3 PUSH2 0x15A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0xCC5 PUSH2 0x15F1 JUMP JUMPDEST PUSH2 0xCCD PUSH2 0x162C JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCEE JUMPI PUSH2 0xCED PUSH2 0x269F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD1C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH2 0xD63 PUSH2 0x145B JUMP JUMPDEST PUSH1 0xF PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xDB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDAA SWAP1 PUSH2 0x2C60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xF PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x799663458A5EF2936F7FA0C99B3336C69C25890F82974F04E811E5BB359186C7 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xE5B SWAP1 PUSH2 0x298F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE87 SWAP1 PUSH2 0x298F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xED4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEA9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xED4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEB7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xEEB DUP5 PUSH2 0x918 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF00 SWAP3 SWAP2 SWAP1 PUSH2 0x2CBC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xF23 PUSH2 0x1202 JUMP JUMPDEST SWAP1 POP PUSH2 0xF30 DUP2 DUP6 DUP6 PUSH2 0x12B0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xFCC JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC3 SWAP2 SWAP1 PUSH2 0x22B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xFFB DUP13 PUSH2 0x1667 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1011 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2CE0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1034 DUP3 PUSH2 0x16BE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1044 DUP3 DUP8 DUP8 DUP8 PUSH2 0x16D8 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10B8 JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10AF SWAP3 SWAP2 SWAP1 PUSH2 0x2B20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10C3 DUP11 DUP11 DUP11 PUSH2 0x120A JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x115E PUSH2 0x145B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11D0 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C7 SWAP2 SWAP1 PUSH2 0x2502 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11D9 DUP2 PUSH2 0x14E2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1217 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1708 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1228 DUP5 DUP5 PUSH2 0x10CF JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x12AA JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x129A JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1291 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12A9 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1708 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1322 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1319 SWAP2 SWAP1 PUSH2 0x2502 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1394 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x138B SWAP2 SWAP1 PUSH2 0x2502 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x139F DUP4 DUP4 DUP4 PUSH2 0x18DF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1420 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x144D JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x1458 JUMP JUMPDEST PUSH2 0x1455 PUSH2 0x1990 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1463 PUSH2 0x1202 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1481 PUSH2 0xE22 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14E0 JUMPI PUSH2 0x14A4 PUSH2 0x1202 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D7 SWAP2 SWAP1 PUSH2 0x2502 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1627 PUSH1 0x5 PUSH32 0x0 PUSH2 0x1A26 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1662 PUSH1 0x6 PUSH32 0x0 PUSH2 0x1A26 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16D1 PUSH2 0x16CB PUSH2 0x13A4 JUMP JUMPDEST DUP4 PUSH2 0x1AD6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x16EA DUP9 DUP9 DUP9 DUP9 PUSH2 0x1B17 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x16FA DUP3 DUP3 PUSH2 0x1C0B JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x177A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1771 SWAP2 SWAP1 PUSH2 0x2502 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17EC JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17E3 SWAP2 SWAP1 PUSH2 0x2502 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x18D9 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x18D0 SWAP2 SWAP1 PUSH2 0x22B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1980 JUMPI PUSH1 0x10 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x197F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1976 SWAP1 PUSH2 0x2DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH2 0x198B DUP4 DUP4 DUP4 PUSH2 0x1D6F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1A0B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x1A43 JUMPI PUSH2 0x1A3C DUP4 PUSH2 0x1F94 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AD0 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1A4F SWAP1 PUSH2 0x298F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1A7B SWAP1 PUSH2 0x298F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1AC8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1A9D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1AC8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1AAB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1B57 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1C01 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1B7C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E37 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B9E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BF2 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1C01 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1C1F JUMPI PUSH2 0x1C1E PUSH2 0x2E7C JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1C32 JUMPI PUSH2 0x1C31 PUSH2 0x2E7C JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x1D6B JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1C4C JUMPI PUSH2 0x1C4B PUSH2 0x2E7C JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1C5F JUMPI PUSH2 0x1C5E PUSH2 0x2E7C JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1C96 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1CAA JUMPI PUSH2 0x1CA9 PUSH2 0x2E7C JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1CBD JUMPI PUSH2 0x1CBC PUSH2 0x2E7C JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1D02 JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CF9 SWAP2 SWAP1 PUSH2 0x22B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1D15 JUMPI PUSH2 0x1D14 PUSH2 0x2E7C JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1D28 JUMPI PUSH2 0x1D27 PUSH2 0x2E7C JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1D6A JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D61 SWAP2 SWAP1 PUSH2 0x236F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1DC1 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1DB5 SWAP2 SWAP1 PUSH2 0x2B78 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1E94 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1E4D JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E44 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1EDD JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1F2A JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1F87 SWAP2 SWAP1 PUSH2 0x22B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1FA1 DUP4 PUSH2 0x2008 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FC0 JUMPI PUSH2 0x1FBF PUSH2 0x269F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1FF2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x204F JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2092 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2077 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20BA DUP3 PUSH2 0x2058 JUMP JUMPDEST PUSH2 0x20C4 DUP2 DUP6 PUSH2 0x2063 JUMP JUMPDEST SWAP4 POP PUSH2 0x20D4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2074 JUMP JUMPDEST PUSH2 0x20DD DUP2 PUSH2 0x209E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2102 DUP2 DUP5 PUSH2 0x20AF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2149 DUP3 PUSH2 0x211E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2159 DUP2 PUSH2 0x213E JUMP JUMPDEST DUP2 EQ PUSH2 0x2164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2176 DUP2 PUSH2 0x2150 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x218F DUP2 PUSH2 0x217C JUMP JUMPDEST DUP2 EQ PUSH2 0x219A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21AC DUP2 PUSH2 0x2186 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21C9 JUMPI PUSH2 0x21C8 PUSH2 0x2114 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21D7 DUP6 DUP3 DUP7 ADD PUSH2 0x2167 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21E8 DUP6 DUP3 DUP7 ADD PUSH2 0x219D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2207 DUP2 PUSH2 0x21F2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2222 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x21FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x224D PUSH2 0x2248 PUSH2 0x2243 DUP5 PUSH2 0x211E JUMP JUMPDEST PUSH2 0x2228 JUMP JUMPDEST PUSH2 0x211E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x225F DUP3 PUSH2 0x2232 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2271 DUP3 PUSH2 0x2254 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2281 DUP2 PUSH2 0x2266 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x229C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2278 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22AB DUP2 PUSH2 0x217C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22C6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x22E5 JUMPI PUSH2 0x22E4 PUSH2 0x2114 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22F3 DUP7 DUP3 DUP8 ADD PUSH2 0x2167 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2304 DUP7 DUP3 DUP8 ADD PUSH2 0x2167 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2315 DUP7 DUP3 DUP8 ADD PUSH2 0x219D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2335 DUP2 PUSH2 0x231F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2350 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x232C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2369 DUP2 PUSH2 0x2356 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2384 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2360 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x23AF JUMPI PUSH2 0x23AE PUSH2 0x238A JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23CC JUMPI PUSH2 0x23CB PUSH2 0x238F JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x23E8 JUMPI PUSH2 0x23E7 PUSH2 0x2394 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2405 JUMPI PUSH2 0x2404 PUSH2 0x238A JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2422 JUMPI PUSH2 0x2421 PUSH2 0x238F JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x243E JUMPI PUSH2 0x243D PUSH2 0x2394 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x245F JUMPI PUSH2 0x245E PUSH2 0x2114 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x247D JUMPI PUSH2 0x247C PUSH2 0x2119 JUMP JUMPDEST JUMPDEST PUSH2 0x2489 DUP8 DUP3 DUP9 ADD PUSH2 0x2399 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24AC JUMPI PUSH2 0x24AB PUSH2 0x2119 JUMP JUMPDEST JUMPDEST PUSH2 0x24B8 DUP8 DUP3 DUP9 ADD PUSH2 0x23EF JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24DC JUMPI PUSH2 0x24DB PUSH2 0x2114 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24EA DUP5 DUP3 DUP6 ADD PUSH2 0x2167 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x24FC DUP2 PUSH2 0x213E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2517 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x24F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2552 DUP2 PUSH2 0x251D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x258D DUP2 PUSH2 0x217C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x259F DUP4 DUP4 PUSH2 0x2584 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25C3 DUP3 PUSH2 0x2558 JUMP JUMPDEST PUSH2 0x25CD DUP2 DUP6 PUSH2 0x2563 JUMP JUMPDEST SWAP4 POP PUSH2 0x25D8 DUP4 PUSH2 0x2574 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2609 JUMPI DUP2 MLOAD PUSH2 0x25F0 DUP9 DUP3 PUSH2 0x2593 JUMP JUMPDEST SWAP8 POP PUSH2 0x25FB DUP4 PUSH2 0x25AB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x25DC JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x262B PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x2549 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x263D DUP2 DUP10 PUSH2 0x20AF JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2651 DUP2 DUP9 PUSH2 0x20AF JUMP JUMPDEST SWAP1 POP PUSH2 0x2660 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x22A2 JUMP JUMPDEST PUSH2 0x266D PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x24F3 JUMP JUMPDEST PUSH2 0x267A PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x2360 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x268C DUP2 DUP5 PUSH2 0x25B8 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x26D7 DUP3 PUSH2 0x209E JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x26F6 JUMPI PUSH2 0x26F5 PUSH2 0x269F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2709 PUSH2 0x210A JUMP JUMPDEST SWAP1 POP PUSH2 0x2715 DUP3 DUP3 PUSH2 0x26CE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2735 JUMPI PUSH2 0x2734 PUSH2 0x269F JUMP JUMPDEST JUMPDEST PUSH2 0x273E DUP3 PUSH2 0x209E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x276D PUSH2 0x2768 DUP5 PUSH2 0x271A JUMP JUMPDEST PUSH2 0x26FF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2789 JUMPI PUSH2 0x2788 PUSH2 0x269A JUMP JUMPDEST JUMPDEST PUSH2 0x2794 DUP5 DUP3 DUP6 PUSH2 0x274B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x27B1 JUMPI PUSH2 0x27B0 PUSH2 0x238A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x27C1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x275A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27E1 JUMPI PUSH2 0x27E0 PUSH2 0x2114 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27EF DUP6 DUP3 DUP7 ADD PUSH2 0x2167 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2810 JUMPI PUSH2 0x280F PUSH2 0x2119 JUMP JUMPDEST JUMPDEST PUSH2 0x281C DUP6 DUP3 DUP7 ADD PUSH2 0x279C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x282F DUP2 PUSH2 0x231F JUMP JUMPDEST DUP2 EQ PUSH2 0x283A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x284C DUP2 PUSH2 0x2826 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x285B DUP2 PUSH2 0x2356 JUMP JUMPDEST DUP2 EQ PUSH2 0x2866 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2878 DUP2 PUSH2 0x2852 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x289D JUMPI PUSH2 0x289C PUSH2 0x2114 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28AB DUP11 DUP3 DUP12 ADD PUSH2 0x2167 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x28BC DUP11 DUP3 DUP12 ADD PUSH2 0x2167 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x28CD DUP11 DUP3 DUP12 ADD PUSH2 0x219D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x28DE DUP11 DUP3 DUP12 ADD PUSH2 0x219D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x28EF DUP11 DUP3 DUP12 ADD PUSH2 0x283D JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x2900 DUP11 DUP3 DUP12 ADD PUSH2 0x2869 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x2911 DUP11 DUP3 DUP12 ADD PUSH2 0x2869 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2937 JUMPI PUSH2 0x2936 PUSH2 0x2114 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2945 DUP6 DUP3 DUP7 ADD PUSH2 0x2167 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2956 DUP6 DUP3 DUP7 ADD PUSH2 0x2167 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x29A7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x29BA JUMPI PUSH2 0x29B9 PUSH2 0x2960 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5447433A2074726164696E6720616C726561647920656E61626C656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29F6 PUSH1 0x1C DUP4 PUSH2 0x2063 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A01 DUP3 PUSH2 0x29C0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A25 DUP2 PUSH2 0x29E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5447433A20696E76616C696420706172616D6574657273000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A62 PUSH1 0x17 DUP4 PUSH2 0x2063 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A6D DUP3 PUSH2 0x2A2C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A91 DUP2 PUSH2 0x2A55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2AD0 DUP2 PUSH2 0x21F2 JUMP JUMPDEST DUP2 EQ PUSH2 0x2ADB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2AED DUP2 PUSH2 0x2AC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B09 JUMPI PUSH2 0x2B08 PUSH2 0x2114 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B17 DUP5 DUP3 DUP6 ADD PUSH2 0x2ADE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2B35 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x24F3 JUMP JUMPDEST PUSH2 0x2B42 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x24F3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2B83 DUP3 PUSH2 0x217C JUMP JUMPDEST SWAP2 POP PUSH2 0x2B8E DUP4 PUSH2 0x217C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2BA6 JUMPI PUSH2 0x2BA5 PUSH2 0x2B49 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BB7 DUP3 PUSH2 0x217C JUMP JUMPDEST SWAP2 POP PUSH2 0x2BC2 DUP4 PUSH2 0x217C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2BD0 DUP2 PUSH2 0x217C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2BE7 JUMPI PUSH2 0x2BE6 PUSH2 0x2B49 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4172617261436F696E2074726164696E6720616C726561647920656E61626C65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C4A PUSH1 0x21 DUP4 PUSH2 0x2063 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C55 DUP3 PUSH2 0x2BEE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C79 DUP2 PUSH2 0x2C3D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C96 DUP3 PUSH2 0x2058 JUMP JUMPDEST PUSH2 0x2CA0 DUP2 DUP6 PUSH2 0x2C80 JUMP JUMPDEST SWAP4 POP PUSH2 0x2CB0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2074 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CC8 DUP3 DUP6 PUSH2 0x2C8B JUMP JUMPDEST SWAP2 POP PUSH2 0x2CD4 DUP3 DUP5 PUSH2 0x2C8B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x2CF5 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x2360 JUMP JUMPDEST PUSH2 0x2D02 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x24F3 JUMP JUMPDEST PUSH2 0x2D0F PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x24F3 JUMP JUMPDEST PUSH2 0x2D1C PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x22A2 JUMP JUMPDEST PUSH2 0x2D29 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x22A2 JUMP JUMPDEST PUSH2 0x2D36 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x22A2 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2D56 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x24F3 JUMP JUMPDEST PUSH2 0x2D63 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x22A2 JUMP JUMPDEST PUSH2 0x2D70 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x22A2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4172617261436F696E2074726164652069732064697361626C65640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DAE PUSH1 0x1B DUP4 PUSH2 0x2063 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DB9 DUP3 PUSH2 0x2D78 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DDD DUP2 PUSH2 0x2DA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2DF9 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2360 JUMP JUMPDEST PUSH2 0x2E06 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2360 JUMP JUMPDEST PUSH2 0x2E13 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x2360 JUMP JUMPDEST PUSH2 0x2E20 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x22A2 JUMP JUMPDEST PUSH2 0x2E2D PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x24F3 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2E4C PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2360 JUMP JUMPDEST PUSH2 0x2E59 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x232C JUMP JUMPDEST PUSH2 0x2E66 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2360 JUMP JUMPDEST PUSH2 0x2E73 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2360 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 PUSH21 0xFCC53D58BB8D96FF5366A98A5222E8B0D942EAA40C CREATE 0xD1 EXP EQ 0xAF MCOPY 0xAE 0x23 0x4E PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"323:3563:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;934:29:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2656:112:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2514:368:19;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2245:263;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;969:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;463:67;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3155:495;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;2406:143:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;771:80:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5144:557:14;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;2055:184:19;;;:::i;:::-;;615:69;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3656:228:19;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;536:73:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;690:75;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1680:672:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3846:140:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;379:78:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89:3;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;934:29:19:-;;;;;;;;;;;;;:::o;3144:97:3:-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3002:82::-;3051:5;3075:2;3068:9;;3002:82;:::o;2656:112:5:-;2715:7;2741:20;:18;:20::i;:::-;2734:27;;2656:112;:::o;2514:368:19:-;1531:13:0;:11;:13::i;:::-;2645:14:19::1;;;;;;;;;;;2644:15;2636:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2726:6;;:13;;2710:5;;:12;;:29;2702:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;2782:9;2777:99;2801:5;;:12;;2797:1;:16;2777:99;;;2856:6;;2863:1;2856:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;2834;:19;2844:5;;2850:1;2844:8;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;2834:19;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;2815:3;;;;;;;2777:99;;;;2514:368:::0;;;;:::o;2245:263::-;1531:13:0;:11;:13::i;:::-;2324:28:19::1;2363:10;;;;;;;;;;;2324:50;;2409:17;2384:10;;:43;;;;;;;;;;;;;;;;;;2443:58;2461:20;2483:17;2443:58;;;;;;;:::i;:::-;;;;;;;;2314:194;2245:263:::0;:::o;969:26::-;;;;;;;;;;;;;:::o;463:67::-;;;;;;;;;;;;;:::o;3155:495::-;3216:13;3241;3281:5;3265:23;;3257:32;;3241:48;;3299:21;:42;;;;;;;;;;;;;;;;;;;3352:16;3381:2;3371:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3352:32;;3394:12;:3;3398:1;3394:6;;;;;;;;:::i;:::-;;;;;:12;;;;;;;;;;;3416;:3;3420:1;3416:6;;;;;;;;:::i;:::-;;;;;:12;;;;;;;;;;;3443:9;3438:178;3462:2;3458:1;:6;3438:178;;;3502:8;3534:1;3517:5;3527:2;3523:1;:6;;;;:::i;:::-;3517:13;;;;;;;:::i;:::-;;;;;:18;;;;;3511:25;;3502:35;;;;;;;;;;:::i;:::-;;;;;;;;;;3485:3;3497:1;3493;:5;;;;:::i;:::-;3489:1;:9;;;;:::i;:::-;3485:14;;;;;;;;:::i;:::-;;;;;:52;;;;;;;;;;;3568:8;3599:4;3583:20;;:5;3593:2;3589:1;:6;;;;:::i;:::-;3583:13;;;;;;;:::i;:::-;;;;;:20;3577:27;;3568:37;;;;;;;;;;:::i;:::-;;;;;;;;;;3551:3;3563:1;3559;:5;;;;:::i;:::-;3555:1;:9;;;;:::i;:::-;3551:14;;;;;;;;:::i;:::-;;;;;:54;;;;;;;;;;;3466:3;;;;;;;3438:178;;;;3639:3;3625:18;;;;;3155:495;;;:::o;3299:116:3:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2406:143:5:-;2497:7;2523:19;2536:5;2523:12;:19::i;:::-;2516:26;;2406:143;;;:::o;771:80:19:-;;;;;;;;;;;;;:::o;5144:557:14:-;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5590:13;5625:4;5652:1;5644:10;;5682:1;5668:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5482:212;;;;;;;;;;;;;;;;;;;;;5144:557;;;;;;;:::o;2055:184:19:-;1531:13:0;:11;:13::i;:::-;2118:14:19::1;;;;;;;;;;;2117:15;2109:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;2197:4;2180:14;;:21;;;;;;;;;;;;;;;;;;2216:16;;;;;;;;;;2055:184::o:0;615:69::-;;;;;;;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2276:93:3:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;3656:228:19:-;3750:13;3775:21;3799:22;3815:5;3799:15;:22::i;:::-;3775:46;;3862:7;3871:4;3845:31;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3831:46;;;3656:228;;;;:::o;3610:178:3:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;536:73:19:-;;;;;;;;;;;;;:::o;690:75::-;;;;;;;;;;;;;:::o;1680:672:5:-;1901:8;1883:15;:26;1879:97;;;1956:8;1932:33;;;;;;;;;;;:::i;:::-;;;;;;;;1879:97;1986:18;1022:95;2045:5;2052:7;2061:5;2068:16;2078:5;2068:9;:16::i;:::-;2086:8;2017:78;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2007:89;;;;;;1986:110;;2107:12;2122:28;2139:10;2122:16;:28::i;:::-;2107:43;;2161:14;2178:28;2192:4;2198:1;2201;2204;2178:13;:28::i;:::-;2161:45;;2230:5;2220:15;;:6;:15;;;2216:88;;2279:6;2287:5;2258:35;;;;;;;;;;;;:::i;:::-;;;;;;;;2216:88;2314:31;2323:5;2330:7;2339:5;2314:8;:31::i;:::-;1869:483;;;1680:672;;;;;;;:::o;3846:140:3:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;379:78:19:-;;;;;;;;;;;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;8989:128:3:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;3845:262:14:-;3898:7;3938:11;3921:28;;3929:4;3921:28;;;:63;;;;;3970:14;3953:13;:31;3921:63;3917:184;;;4007:22;4000:29;;;;3917:184;4067:23;:21;:23::i;:::-;4060:30;;3845:262;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;538:107:9:-;598:7;624;:14;632:5;624:14;;;;;;;;;;;;;;;;617:21;;538:107;;;:::o;6021:126:14:-;6067:13;6099:41;6126:13;6099:5;:26;;:41;;;;:::i;:::-;6092:48;;6021:126;:::o;6473:135::-;6522:13;6554:47;6584:16;6554:8;:29;;:47;;;;:::i;:::-;6547:54;;6473:135;:::o;759:395:9:-;819:7;1121;:14;1129:5;1121:14;;;;;;;;;;;;;;;;:16;;;;;;;;;;;;1114:23;;759:395;;;:::o;4917:176:14:-;4994:7;5020:66;5053:20;:18;:20::i;:::-;5075:10;5020:32;:66::i;:::-;5013:73;;4917:176;;;:::o;6803:260:13:-;6888:7;6908:17;6927:18;6947:16;6967:25;6978:4;6984:1;6987;6990;6967:10;:25::i;:::-;6907:85;;;;;;7002:28;7014:5;7021:8;7002:11;:28::i;:::-;7047:9;7040:16;;;;;6803:260;;;;;;:::o;9949:432:3:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;2888:261:19:-;3007:14;;;;;;;;;;;3002:101;;3045:9;:15;3055:4;3045:15;;;;;;;;;;;;;;;;;;;;;;;;;3037:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;3002:101;3112:30;3126:4;3132:2;3136:5;3112:13;:30::i;:::-;2888:261;;;:::o;4113:179:14:-;4168:7;2079:95;4226:11;4239:14;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;3385:267:10:-;3479:13;1390:66;3537:17;;3527:5;3508:46;3504:142;;3577:15;3586:5;3577:8;:15::i;:::-;3570:22;;;;3504:142;3630:5;3623:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3385:267;;;;;:::o;3353:401:15:-;3446:14;3555:4;3549:11;3585:10;3580:3;3573:23;3632:15;3625:4;3620:3;3616:14;3609:39;3684:10;3677:4;3672:3;3668:14;3661:34;3733:4;3728:3;3718:20;3708:30;;3524:224;3353:401;;;;:::o;5140:1530:13:-;5266:7;5275:12;5289:7;6199:66;6194:1;6186:10;;:79;6182:164;;;6297:1;6301:30;6333:1;6281:54;;;;;;;;6182:164;6440:14;6457:24;6467:4;6473:1;6476;6479;6457:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6440:41;;6513:1;6495:20;;:6;:20;;;6491:113;;6547:1;6551:29;6590:1;6582:10;;6531:62;;;;;;;;;6491:113;6622:6;6630:20;6660:1;6652:10;;6614:49;;;;;;;5140:1530;;;;;;;;;:::o;7196:532::-;7291:20;7282:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7278:444;7327:7;7278:444;7387:29;7378:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7374:348;;7439:23;;;;;;;;;;;;;;7374:348;7492:35;7483:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7479:243;;7586:8;7578:17;;7550:46;;;;;;;;;;;:::i;:::-;;;;;;;;7479:243;7626:30;7617:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7613:109;;7702:8;7679:32;;;;;;;;;;;:::i;:::-;;;;;;;;7613:109;7196:532;;;:::o;6271:1107:3:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;2078:405:10:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2162:30;;2280:17;2311:2;2300:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2280:34;;2402:3;2397;2390:16;2442:4;2435;2430:3;2426:14;2419:28;2473:3;2466:10;;;;2078:405;;;:::o;2555:245::-;2616:7;2635:14;2688:4;2679;2652:33;;:40;2635:57;;2715:2;2706:6;:11;2702:69;;;2740:20;;;;;;;;;;;;;;2702:69;2787:6;2780:13;;;2555:245;;;:::o;7:99:22:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1349:75::-;1382:6;1415:2;1409:9;1399:19;;1349:75;:::o;1430:117::-;1539:1;1536;1529:12;1553:117;1662:1;1659;1652:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:60::-;3474:3;3495:5;3488:12;;3446:60;;;:::o;3512:142::-;3562:9;3595:53;3613:34;3622:24;3640:5;3622:24;:::i;:::-;3613:34;:::i;:::-;3595:53;:::i;:::-;3582:66;;3512:142;;;:::o;3660:126::-;3710:9;3743:37;3774:5;3743:37;:::i;:::-;3730:50;;3660:126;;;:::o;3792:146::-;3862:9;3895:37;3926:5;3895:37;:::i;:::-;3882:50;;3792:146;;;:::o;3944:171::-;4051:57;4102:5;4051:57;:::i;:::-;4046:3;4039:70;3944:171;;:::o;4121:262::-;4234:4;4272:2;4261:9;4257:18;4249:26;;4285:91;4373:1;4362:9;4358:17;4349:6;4285:91;:::i;:::-;4121:262;;;;:::o;4389:118::-;4476:24;4494:5;4476:24;:::i;:::-;4471:3;4464:37;4389:118;;:::o;4513:222::-;4606:4;4644:2;4633:9;4629:18;4621:26;;4657:71;4725:1;4714:9;4710:17;4701:6;4657:71;:::i;:::-;4513:222;;;;:::o;4741:619::-;4818:6;4826;4834;4883:2;4871:9;4862:7;4858:23;4854:32;4851:119;;;4889:79;;:::i;:::-;4851:119;5009:1;5034:53;5079:7;5070:6;5059:9;5055:22;5034:53;:::i;:::-;5024:63;;4980:117;5136:2;5162:53;5207:7;5198:6;5187:9;5183:22;5162:53;:::i;:::-;5152:63;;5107:118;5264:2;5290:53;5335:7;5326:6;5315:9;5311:22;5290:53;:::i;:::-;5280:63;;5235:118;4741:619;;;;;:::o;5366:86::-;5401:7;5441:4;5434:5;5430:16;5419:27;;5366:86;;;:::o;5458:112::-;5541:22;5557:5;5541:22;:::i;:::-;5536:3;5529:35;5458:112;;:::o;5576:214::-;5665:4;5703:2;5692:9;5688:18;5680:26;;5716:67;5780:1;5769:9;5765:17;5756:6;5716:67;:::i;:::-;5576:214;;;;:::o;5796:77::-;5833:7;5862:5;5851:16;;5796:77;;;:::o;5879:118::-;5966:24;5984:5;5966:24;:::i;:::-;5961:3;5954:37;5879:118;;:::o;6003:222::-;6096:4;6134:2;6123:9;6119:18;6111:26;;6147:71;6215:1;6204:9;6200:17;6191:6;6147:71;:::i;:::-;6003:222;;;;:::o;6231:117::-;6340:1;6337;6330:12;6354:117;6463:1;6460;6453:12;6477:117;6586:1;6583;6576:12;6617:568;6690:8;6700:6;6750:3;6743:4;6735:6;6731:17;6727:27;6717:122;;6758:79;;:::i;:::-;6717:122;6871:6;6858:20;6848:30;;6901:18;6893:6;6890:30;6887:117;;;6923:79;;:::i;:::-;6887:117;7037:4;7029:6;7025:17;7013:29;;7091:3;7083:4;7075:6;7071:17;7061:8;7057:32;7054:41;7051:128;;;7098:79;;:::i;:::-;7051:128;6617:568;;;;;:::o;7205:565::-;7275:8;7285:6;7335:3;7328:4;7320:6;7316:17;7312:27;7302:122;;7343:79;;:::i;:::-;7302:122;7456:6;7443:20;7433:30;;7486:18;7478:6;7475:30;7472:117;;;7508:79;;:::i;:::-;7472:117;7622:4;7614:6;7610:17;7598:29;;7676:3;7668:4;7660:6;7656:17;7646:8;7642:32;7639:41;7636:128;;;7683:79;;:::i;:::-;7636:128;7205:565;;;;;:::o;7776:928::-;7895:6;7903;7911;7919;7968:2;7956:9;7947:7;7943:23;7939:32;7936:119;;;7974:79;;:::i;:::-;7936:119;8122:1;8111:9;8107:17;8094:31;8152:18;8144:6;8141:30;8138:117;;;8174:79;;:::i;:::-;8138:117;8287:80;8359:7;8350:6;8339:9;8335:22;8287:80;:::i;:::-;8269:98;;;;8065:312;8444:2;8433:9;8429:18;8416:32;8475:18;8467:6;8464:30;8461:117;;;8497:79;;:::i;:::-;8461:117;8610:77;8679:7;8670:6;8659:9;8655:22;8610:77;:::i;:::-;8592:95;;;;8387:310;7776:928;;;;;;;:::o;8710:329::-;8769:6;8818:2;8806:9;8797:7;8793:23;8789:32;8786:119;;;8824:79;;:::i;:::-;8786:119;8944:1;8969:53;9014:7;9005:6;8994:9;8990:22;8969:53;:::i;:::-;8959:63;;8915:117;8710:329;;;;:::o;9045:118::-;9132:24;9150:5;9132:24;:::i;:::-;9127:3;9120:37;9045:118;;:::o;9169:222::-;9262:4;9300:2;9289:9;9285:18;9277:26;;9313:71;9381:1;9370:9;9366:17;9357:6;9313:71;:::i;:::-;9169:222;;;;:::o;9397:149::-;9433:7;9473:66;9466:5;9462:78;9451:89;;9397:149;;;:::o;9552:115::-;9637:23;9654:5;9637:23;:::i;:::-;9632:3;9625:36;9552:115;;:::o;9673:114::-;9740:6;9774:5;9768:12;9758:22;;9673:114;;;:::o;9793:184::-;9892:11;9926:6;9921:3;9914:19;9966:4;9961:3;9957:14;9942:29;;9793:184;;;;:::o;9983:132::-;10050:4;10073:3;10065:11;;10103:4;10098:3;10094:14;10086:22;;9983:132;;;:::o;10121:108::-;10198:24;10216:5;10198:24;:::i;:::-;10193:3;10186:37;10121:108;;:::o;10235:179::-;10304:10;10325:46;10367:3;10359:6;10325:46;:::i;:::-;10403:4;10398:3;10394:14;10380:28;;10235:179;;;;:::o;10420:113::-;10490:4;10522;10517:3;10513:14;10505:22;;10420:113;;;:::o;10569:732::-;10688:3;10717:54;10765:5;10717:54;:::i;:::-;10787:86;10866:6;10861:3;10787:86;:::i;:::-;10780:93;;10897:56;10947:5;10897:56;:::i;:::-;10976:7;11007:1;10992:284;11017:6;11014:1;11011:13;10992:284;;;11093:6;11087:13;11120:63;11179:3;11164:13;11120:63;:::i;:::-;11113:70;;11206:60;11259:6;11206:60;:::i;:::-;11196:70;;11052:224;11039:1;11036;11032:9;11027:14;;10992:284;;;10996:14;11292:3;11285:10;;10693:608;;;10569:732;;;;:::o;11307:1215::-;11656:4;11694:3;11683:9;11679:19;11671:27;;11708:69;11774:1;11763:9;11759:17;11750:6;11708:69;:::i;:::-;11824:9;11818:4;11814:20;11809:2;11798:9;11794:18;11787:48;11852:78;11925:4;11916:6;11852:78;:::i;:::-;11844:86;;11977:9;11971:4;11967:20;11962:2;11951:9;11947:18;11940:48;12005:78;12078:4;12069:6;12005:78;:::i;:::-;11997:86;;12093:72;12161:2;12150:9;12146:18;12137:6;12093:72;:::i;:::-;12175:73;12243:3;12232:9;12228:19;12219:6;12175:73;:::i;:::-;12258;12326:3;12315:9;12311:19;12302:6;12258:73;:::i;:::-;12379:9;12373:4;12369:20;12363:3;12352:9;12348:19;12341:49;12407:108;12510:4;12501:6;12407:108;:::i;:::-;12399:116;;11307:1215;;;;;;;;;;:::o;12528:117::-;12637:1;12634;12627:12;12651:180;12699:77;12696:1;12689:88;12796:4;12793:1;12786:15;12820:4;12817:1;12810:15;12837:281;12920:27;12942:4;12920:27;:::i;:::-;12912:6;12908:40;13050:6;13038:10;13035:22;13014:18;13002:10;12999:34;12996:62;12993:88;;;13061:18;;:::i;:::-;12993:88;13101:10;13097:2;13090:22;12880:238;12837:281;;:::o;13124:129::-;13158:6;13185:20;;:::i;:::-;13175:30;;13214:33;13242:4;13234:6;13214:33;:::i;:::-;13124:129;;;:::o;13259:308::-;13321:4;13411:18;13403:6;13400:30;13397:56;;;13433:18;;:::i;:::-;13397:56;13471:29;13493:6;13471:29;:::i;:::-;13463:37;;13555:4;13549;13545:15;13537:23;;13259:308;;;:::o;13573:146::-;13670:6;13665:3;13660;13647:30;13711:1;13702:6;13697:3;13693:16;13686:27;13573:146;;;:::o;13725:425::-;13803:5;13828:66;13844:49;13886:6;13844:49;:::i;:::-;13828:66;:::i;:::-;13819:75;;13917:6;13910:5;13903:21;13955:4;13948:5;13944:16;13993:3;13984:6;13979:3;13975:16;13972:25;13969:112;;;14000:79;;:::i;:::-;13969:112;14090:54;14137:6;14132:3;14127;14090:54;:::i;:::-;13809:341;13725:425;;;;;:::o;14170:340::-;14226:5;14275:3;14268:4;14260:6;14256:17;14252:27;14242:122;;14283:79;;:::i;:::-;14242:122;14400:6;14387:20;14425:79;14500:3;14492:6;14485:4;14477:6;14473:17;14425:79;:::i;:::-;14416:88;;14232:278;14170:340;;;;:::o;14516:654::-;14594:6;14602;14651:2;14639:9;14630:7;14626:23;14622:32;14619:119;;;14657:79;;:::i;:::-;14619:119;14777:1;14802:53;14847:7;14838:6;14827:9;14823:22;14802:53;:::i;:::-;14792:63;;14748:117;14932:2;14921:9;14917:18;14904:32;14963:18;14955:6;14952:30;14949:117;;;14985:79;;:::i;:::-;14949:117;15090:63;15145:7;15136:6;15125:9;15121:22;15090:63;:::i;:::-;15080:73;;14875:288;14516:654;;;;;:::o;15176:118::-;15247:22;15263:5;15247:22;:::i;:::-;15240:5;15237:33;15227:61;;15284:1;15281;15274:12;15227:61;15176:118;:::o;15300:135::-;15344:5;15382:6;15369:20;15360:29;;15398:31;15423:5;15398:31;:::i;:::-;15300:135;;;;:::o;15441:122::-;15514:24;15532:5;15514:24;:::i;:::-;15507:5;15504:35;15494:63;;15553:1;15550;15543:12;15494:63;15441:122;:::o;15569:139::-;15615:5;15653:6;15640:20;15631:29;;15669:33;15696:5;15669:33;:::i;:::-;15569:139;;;;:::o;15714:1199::-;15825:6;15833;15841;15849;15857;15865;15873;15922:3;15910:9;15901:7;15897:23;15893:33;15890:120;;;15929:79;;:::i;:::-;15890:120;16049:1;16074:53;16119:7;16110:6;16099:9;16095:22;16074:53;:::i;:::-;16064:63;;16020:117;16176:2;16202:53;16247:7;16238:6;16227:9;16223:22;16202:53;:::i;:::-;16192:63;;16147:118;16304:2;16330:53;16375:7;16366:6;16355:9;16351:22;16330:53;:::i;:::-;16320:63;;16275:118;16432:2;16458:53;16503:7;16494:6;16483:9;16479:22;16458:53;:::i;:::-;16448:63;;16403:118;16560:3;16587:51;16630:7;16621:6;16610:9;16606:22;16587:51;:::i;:::-;16577:61;;16531:117;16687:3;16714:53;16759:7;16750:6;16739:9;16735:22;16714:53;:::i;:::-;16704:63;;16658:119;16816:3;16843:53;16888:7;16879:6;16868:9;16864:22;16843:53;:::i;:::-;16833:63;;16787:119;15714:1199;;;;;;;;;;:::o;16919:474::-;16987:6;16995;17044:2;17032:9;17023:7;17019:23;17015:32;17012:119;;;17050:79;;:::i;:::-;17012:119;17170:1;17195:53;17240:7;17231:6;17220:9;17216:22;17195:53;:::i;:::-;17185:63;;17141:117;17297:2;17323:53;17368:7;17359:6;17348:9;17344:22;17323:53;:::i;:::-;17313:63;;17268:118;16919:474;;;;;:::o;17399:180::-;17447:77;17444:1;17437:88;17544:4;17541:1;17534:15;17568:4;17565:1;17558:15;17585:320;17629:6;17666:1;17660:4;17656:12;17646:22;;17713:1;17707:4;17703:12;17734:18;17724:81;;17790:4;17782:6;17778:17;17768:27;;17724:81;17852:2;17844:6;17841:14;17821:18;17818:38;17815:84;;17871:18;;:::i;:::-;17815:84;17636:269;17585:320;;;:::o;17911:178::-;18051:30;18047:1;18039:6;18035:14;18028:54;17911:178;:::o;18095:366::-;18237:3;18258:67;18322:2;18317:3;18258:67;:::i;:::-;18251:74;;18334:93;18423:3;18334:93;:::i;:::-;18452:2;18447:3;18443:12;18436:19;;18095:366;;;:::o;18467:419::-;18633:4;18671:2;18660:9;18656:18;18648:26;;18720:9;18714:4;18710:20;18706:1;18695:9;18691:17;18684:47;18748:131;18874:4;18748:131;:::i;:::-;18740:139;;18467:419;;;:::o;18892:173::-;19032:25;19028:1;19020:6;19016:14;19009:49;18892:173;:::o;19071:366::-;19213:3;19234:67;19298:2;19293:3;19234:67;:::i;:::-;19227:74;;19310:93;19399:3;19310:93;:::i;:::-;19428:2;19423:3;19419:12;19412:19;;19071:366;;;:::o;19443:419::-;19609:4;19647:2;19636:9;19632:18;19624:26;;19696:9;19690:4;19686:20;19682:1;19671:9;19667:17;19660:47;19724:131;19850:4;19724:131;:::i;:::-;19716:139;;19443:419;;;:::o;19868:180::-;19916:77;19913:1;19906:88;20013:4;20010:1;20003:15;20037:4;20034:1;20027:15;20054:116;20124:21;20139:5;20124:21;:::i;:::-;20117:5;20114:32;20104:60;;20160:1;20157;20150:12;20104:60;20054:116;:::o;20176:133::-;20219:5;20257:6;20244:20;20235:29;;20273:30;20297:5;20273:30;:::i;:::-;20176:133;;;;:::o;20315:323::-;20371:6;20420:2;20408:9;20399:7;20395:23;20391:32;20388:119;;;20426:79;;:::i;:::-;20388:119;20546:1;20571:50;20613:7;20604:6;20593:9;20589:22;20571:50;:::i;:::-;20561:60;;20517:114;20315:323;;;;:::o;20644:332::-;20765:4;20803:2;20792:9;20788:18;20780:26;;20816:71;20884:1;20873:9;20869:17;20860:6;20816:71;:::i;:::-;20897:72;20965:2;20954:9;20950:18;20941:6;20897:72;:::i;:::-;20644:332;;;;;:::o;20982:180::-;21030:77;21027:1;21020:88;21127:4;21124:1;21117:15;21151:4;21148:1;21141:15;21168:191;21208:3;21227:20;21245:1;21227:20;:::i;:::-;21222:25;;21261:20;21279:1;21261:20;:::i;:::-;21256:25;;21304:1;21301;21297:9;21290:16;;21325:3;21322:1;21319:10;21316:36;;;21332:18;;:::i;:::-;21316:36;21168:191;;;;:::o;21365:410::-;21405:7;21428:20;21446:1;21428:20;:::i;:::-;21423:25;;21462:20;21480:1;21462:20;:::i;:::-;21457:25;;21517:1;21514;21510:9;21539:30;21557:11;21539:30;:::i;:::-;21528:41;;21718:1;21709:7;21705:15;21702:1;21699:22;21679:1;21672:9;21652:83;21629:139;;21748:18;;:::i;:::-;21629:139;21413:362;21365:410;;;;:::o;21781:220::-;21921:34;21917:1;21909:6;21905:14;21898:58;21990:3;21985:2;21977:6;21973:15;21966:28;21781:220;:::o;22007:366::-;22149:3;22170:67;22234:2;22229:3;22170:67;:::i;:::-;22163:74;;22246:93;22335:3;22246:93;:::i;:::-;22364:2;22359:3;22355:12;22348:19;;22007:366;;;:::o;22379:419::-;22545:4;22583:2;22572:9;22568:18;22560:26;;22632:9;22626:4;22622:20;22618:1;22607:9;22603:17;22596:47;22660:131;22786:4;22660:131;:::i;:::-;22652:139;;22379:419;;;:::o;22804:148::-;22906:11;22943:3;22928:18;;22804:148;;;;:::o;22958:390::-;23064:3;23092:39;23125:5;23092:39;:::i;:::-;23147:89;23229:6;23224:3;23147:89;:::i;:::-;23140:96;;23245:65;23303:6;23298:3;23291:4;23284:5;23280:16;23245:65;:::i;:::-;23335:6;23330:3;23326:16;23319:23;;23068:280;22958:390;;;;:::o;23354:435::-;23534:3;23556:95;23647:3;23638:6;23556:95;:::i;:::-;23549:102;;23668:95;23759:3;23750:6;23668:95;:::i;:::-;23661:102;;23780:3;23773:10;;23354:435;;;;;:::o;23795:775::-;24028:4;24066:3;24055:9;24051:19;24043:27;;24080:71;24148:1;24137:9;24133:17;24124:6;24080:71;:::i;:::-;24161:72;24229:2;24218:9;24214:18;24205:6;24161:72;:::i;:::-;24243;24311:2;24300:9;24296:18;24287:6;24243:72;:::i;:::-;24325;24393:2;24382:9;24378:18;24369:6;24325:72;:::i;:::-;24407:73;24475:3;24464:9;24460:19;24451:6;24407:73;:::i;:::-;24490;24558:3;24547:9;24543:19;24534:6;24490:73;:::i;:::-;23795:775;;;;;;;;;:::o;24576:442::-;24725:4;24763:2;24752:9;24748:18;24740:26;;24776:71;24844:1;24833:9;24829:17;24820:6;24776:71;:::i;:::-;24857:72;24925:2;24914:9;24910:18;24901:6;24857:72;:::i;:::-;24939;25007:2;24996:9;24992:18;24983:6;24939:72;:::i;:::-;24576:442;;;;;;:::o;25024:177::-;25164:29;25160:1;25152:6;25148:14;25141:53;25024:177;:::o;25207:366::-;25349:3;25370:67;25434:2;25429:3;25370:67;:::i;:::-;25363:74;;25446:93;25535:3;25446:93;:::i;:::-;25564:2;25559:3;25555:12;25548:19;;25207:366;;;:::o;25579:419::-;25745:4;25783:2;25772:9;25768:18;25760:26;;25832:9;25826:4;25822:20;25818:1;25807:9;25803:17;25796:47;25860:131;25986:4;25860:131;:::i;:::-;25852:139;;25579:419;;;:::o;26004:664::-;26209:4;26247:3;26236:9;26232:19;26224:27;;26261:71;26329:1;26318:9;26314:17;26305:6;26261:71;:::i;:::-;26342:72;26410:2;26399:9;26395:18;26386:6;26342:72;:::i;:::-;26424;26492:2;26481:9;26477:18;26468:6;26424:72;:::i;:::-;26506;26574:2;26563:9;26559:18;26550:6;26506:72;:::i;:::-;26588:73;26656:3;26645:9;26641:19;26632:6;26588:73;:::i;:::-;26004:664;;;;;;;;:::o;26674:545::-;26847:4;26885:3;26874:9;26870:19;26862:27;;26899:71;26967:1;26956:9;26952:17;26943:6;26899:71;:::i;:::-;26980:68;27044:2;27033:9;27029:18;27020:6;26980:68;:::i;:::-;27058:72;27126:2;27115:9;27111:18;27102:6;27058:72;:::i;:::-;27140;27208:2;27197:9;27193:18;27184:6;27140:72;:::i;:::-;26674:545;;;;;;;:::o;27225:180::-;27273:77;27270:1;27263:88;27370:4;27367:1;27360:15;27394:4;27391:1;27384:15"},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","addressToString(address)":"5e57966d","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","concatenateAddressWithString(address,string)":"9b75679c","decimals()":"313ce567","eip712Domain()":"84b0196e","enableTrading()":"8a8c523c","initialLaunch()":"bbaa49da","investors()":"8ac27f5f","name()":"06fdde03","nonces(address)":"7ecebe00","owner()":"8da5cb5b","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","preSale()":"5a7adf7f","preservationProjects()":"7edd9e5e","renounceOwnership()":"715018a6","setCanTrade(address[],bool[])":"44447b4e","setTaxHandler(address)":"488d4a51","symbol()":"95d89b41","taxHandler()":"12280ba8","teamAndFounders()":"c519099d","thirdPartyServices()":"fca6172f","totalSupply()":"18160ddd","tradingEnabled()":"4ada218b","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"taxHandlerAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"TaxHandlerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"TradingEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"addressToString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_str\",\"type\":\"string\"}],\"name\":\"concatenateAddressWithString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialLaunch\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"investors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"preSale\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"preservationProjects\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"pairs\",\"type\":\"address[]\"},{\"internalType\":\"bool[]\",\"name\":\"status\",\"type\":\"bool[]\"}],\"name\":\"setCanTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"taxHandlerAddress\",\"type\":\"address\"}],\"name\":\"setTaxHandler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxHandler\",\"outputs\":[{\"internalType\":\"contract ITaxHandler\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamAndFounders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"thirdPartyServices\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"TaxHandlerChanged(address,address)\":{\"notice\":\"Emitted when the tax handler contract is changed.\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AraraCoin.sol\":\"AraraCoin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/AraraCoin.sol\":{\"keccak256\":\"0xe5f84c30be9a8f8d146ca8323f74d831c068adf813fd402e720504dae8e5929b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01ee84958c5ad903b8377f825b6247f7ac52d713bcace36d1a886a93eaf72da1\",\"dweb:/ipfs/QmRWmHNGyGcETjjgRr9RaSjmWxfxPiDYGUNoMVtmhiJAcC\"]},\"contracts/tax/ITaxHandler.sol\":{\"keccak256\":\"0xfbe50a73a526b7425030b98d2659fd5e5eb4222102f59c5b620d1c77a0178518\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b720ef524c3d25af70f56f19eff096a2142d6d3d606166b326a96f5c0afd49db\",\"dweb:/ipfs/QmWukwdeBzzMRzemBxFc8nK2yZkhjDP8r4b8abGuWuBdF4\"]}},\"version\":1}"}},"contracts/tax/ITaxHandler.sol":{"ITaxHandler":{"abi":[{"inputs":[{"internalType":"address","name":"benefactor","type":"address"},{"internalType":"address","name":"beneficiary","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getTax","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getTax(address,address,uint256)":"d7ad21ac"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"benefactor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Any class that implements this interface can be used for protocol-specific tax calculations.\",\"kind\":\"dev\",\"methods\":{\"getTax(address,address,uint256)\":{\"params\":{\"amount\":\"Number of tokens in the transfer.\",\"benefactor\":\"Address of the benefactor.\",\"beneficiary\":\"Address of the beneficiary.\"},\"returns\":{\"_0\":\"Number of tokens to pay as tax.\"}}},\"title\":\"Tax handler interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getTax(address,address,uint256)\":{\"notice\":\"Get number of tokens to pay as tax.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tax/ITaxHandler.sol\":\"ITaxHandler\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/tax/ITaxHandler.sol\":{\"keccak256\":\"0xfbe50a73a526b7425030b98d2659fd5e5eb4222102f59c5b620d1c77a0178518\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b720ef524c3d25af70f56f19eff096a2142d6d3d606166b326a96f5c0afd49db\",\"dweb:/ipfs/QmWukwdeBzzMRzemBxFc8nK2yZkhjDP8r4b8abGuWuBdF4\"]}},\"version\":1}"}},"contracts/tax/StaticTaxHandler.sol":{"StaticTaxHandler":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"},{"internalType":"uint256","name":"initialTaxPercentage","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"wallet","type":"address"},{"indexed":false,"internalType":"bool","name":"exempted","type":"bool"}],"name":"TaxExemptionUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldTaxPercentage","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newTaxPercentage","type":"uint256"}],"name":"TaxPercentageUpdated","type":"event"},{"inputs":[{"internalType":"address","name":"exemption","type":"address"}],"name":"addExemption","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"benefactor","type":"address"},{"internalType":"address","name":"beneficiary","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getTax","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"exemption","type":"address"}],"name":"removeExemption","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newTaxPercentage","type":"uint256"}],"name":"setTaxPercentage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"taxPercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_4707":{"entryPoint":null,"id":4707,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":206,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":485,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":544,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256_fromMemory":{"entryPoint":567,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":638,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":655,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":439,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":407,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":508,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":402,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":459,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":518,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:2067:22","nodeType":"YulBlock","src":"0:2067:22","statements":[{"body":{"nativeSrc":"47:35:22","nodeType":"YulBlock","src":"47:35:22","statements":[{"nativeSrc":"57:19:22","nodeType":"YulAssignment","src":"57:19:22","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:22","nodeType":"YulLiteral","src":"73:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:22","nodeType":"YulIdentifier","src":"67:5:22"},"nativeSrc":"67:9:22","nodeType":"YulFunctionCall","src":"67:9:22"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:22","nodeType":"YulIdentifier","src":"57:6:22"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:22","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:22","nodeType":"YulTypedName","src":"40:6:22","type":""}],"src":"7:75:22"},{"body":{"nativeSrc":"177:28:22","nodeType":"YulBlock","src":"177:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:22","nodeType":"YulLiteral","src":"194:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:22","nodeType":"YulLiteral","src":"197:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:22","nodeType":"YulIdentifier","src":"187:6:22"},"nativeSrc":"187:12:22","nodeType":"YulFunctionCall","src":"187:12:22"},"nativeSrc":"187:12:22","nodeType":"YulExpressionStatement","src":"187:12:22"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:22","nodeType":"YulFunctionDefinition","src":"88:117:22"},{"body":{"nativeSrc":"300:28:22","nodeType":"YulBlock","src":"300:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:22","nodeType":"YulLiteral","src":"317:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:22","nodeType":"YulLiteral","src":"320:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:22","nodeType":"YulIdentifier","src":"310:6:22"},"nativeSrc":"310:12:22","nodeType":"YulFunctionCall","src":"310:12:22"},"nativeSrc":"310:12:22","nodeType":"YulExpressionStatement","src":"310:12:22"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:22","nodeType":"YulFunctionDefinition","src":"211:117:22"},{"body":{"nativeSrc":"379:81:22","nodeType":"YulBlock","src":"379:81:22","statements":[{"nativeSrc":"389:65:22","nodeType":"YulAssignment","src":"389:65:22","value":{"arguments":[{"name":"value","nativeSrc":"404:5:22","nodeType":"YulIdentifier","src":"404:5:22"},{"kind":"number","nativeSrc":"411:42:22","nodeType":"YulLiteral","src":"411:42:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:22","nodeType":"YulIdentifier","src":"400:3:22"},"nativeSrc":"400:54:22","nodeType":"YulFunctionCall","src":"400:54:22"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:22","nodeType":"YulIdentifier","src":"389:7:22"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:22","nodeType":"YulTypedName","src":"361:5:22","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:22","nodeType":"YulTypedName","src":"371:7:22","type":""}],"src":"334:126:22"},{"body":{"nativeSrc":"511:51:22","nodeType":"YulBlock","src":"511:51:22","statements":[{"nativeSrc":"521:35:22","nodeType":"YulAssignment","src":"521:35:22","value":{"arguments":[{"name":"value","nativeSrc":"550:5:22","nodeType":"YulIdentifier","src":"550:5:22"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:22","nodeType":"YulIdentifier","src":"532:17:22"},"nativeSrc":"532:24:22","nodeType":"YulFunctionCall","src":"532:24:22"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:22","nodeType":"YulIdentifier","src":"521:7:22"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:22","nodeType":"YulTypedName","src":"493:5:22","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:22","nodeType":"YulTypedName","src":"503:7:22","type":""}],"src":"466:96:22"},{"body":{"nativeSrc":"611:79:22","nodeType":"YulBlock","src":"611:79:22","statements":[{"body":{"nativeSrc":"668:16:22","nodeType":"YulBlock","src":"668:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:22","nodeType":"YulLiteral","src":"677:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:22","nodeType":"YulLiteral","src":"680:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:22","nodeType":"YulIdentifier","src":"670:6:22"},"nativeSrc":"670:12:22","nodeType":"YulFunctionCall","src":"670:12:22"},"nativeSrc":"670:12:22","nodeType":"YulExpressionStatement","src":"670:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:22","nodeType":"YulIdentifier","src":"634:5:22"},{"arguments":[{"name":"value","nativeSrc":"659:5:22","nodeType":"YulIdentifier","src":"659:5:22"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:22","nodeType":"YulIdentifier","src":"641:17:22"},"nativeSrc":"641:24:22","nodeType":"YulFunctionCall","src":"641:24:22"}],"functionName":{"name":"eq","nativeSrc":"631:2:22","nodeType":"YulIdentifier","src":"631:2:22"},"nativeSrc":"631:35:22","nodeType":"YulFunctionCall","src":"631:35:22"}],"functionName":{"name":"iszero","nativeSrc":"624:6:22","nodeType":"YulIdentifier","src":"624:6:22"},"nativeSrc":"624:43:22","nodeType":"YulFunctionCall","src":"624:43:22"},"nativeSrc":"621:63:22","nodeType":"YulIf","src":"621:63:22"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:22","nodeType":"YulTypedName","src":"604:5:22","type":""}],"src":"568:122:22"},{"body":{"nativeSrc":"759:80:22","nodeType":"YulBlock","src":"759:80:22","statements":[{"nativeSrc":"769:22:22","nodeType":"YulAssignment","src":"769:22:22","value":{"arguments":[{"name":"offset","nativeSrc":"784:6:22","nodeType":"YulIdentifier","src":"784:6:22"}],"functionName":{"name":"mload","nativeSrc":"778:5:22","nodeType":"YulIdentifier","src":"778:5:22"},"nativeSrc":"778:13:22","nodeType":"YulFunctionCall","src":"778:13:22"},"variableNames":[{"name":"value","nativeSrc":"769:5:22","nodeType":"YulIdentifier","src":"769:5:22"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"827:5:22","nodeType":"YulIdentifier","src":"827:5:22"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"800:26:22","nodeType":"YulIdentifier","src":"800:26:22"},"nativeSrc":"800:33:22","nodeType":"YulFunctionCall","src":"800:33:22"},"nativeSrc":"800:33:22","nodeType":"YulExpressionStatement","src":"800:33:22"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"696:143:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"737:6:22","nodeType":"YulTypedName","src":"737:6:22","type":""},{"name":"end","nativeSrc":"745:3:22","nodeType":"YulTypedName","src":"745:3:22","type":""}],"returnVariables":[{"name":"value","nativeSrc":"753:5:22","nodeType":"YulTypedName","src":"753:5:22","type":""}],"src":"696:143:22"},{"body":{"nativeSrc":"890:32:22","nodeType":"YulBlock","src":"890:32:22","statements":[{"nativeSrc":"900:16:22","nodeType":"YulAssignment","src":"900:16:22","value":{"name":"value","nativeSrc":"911:5:22","nodeType":"YulIdentifier","src":"911:5:22"},"variableNames":[{"name":"cleaned","nativeSrc":"900:7:22","nodeType":"YulIdentifier","src":"900:7:22"}]}]},"name":"cleanup_t_uint256","nativeSrc":"845:77:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"872:5:22","nodeType":"YulTypedName","src":"872:5:22","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"882:7:22","nodeType":"YulTypedName","src":"882:7:22","type":""}],"src":"845:77:22"},{"body":{"nativeSrc":"971:79:22","nodeType":"YulBlock","src":"971:79:22","statements":[{"body":{"nativeSrc":"1028:16:22","nodeType":"YulBlock","src":"1028:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1037:1:22","nodeType":"YulLiteral","src":"1037:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"1040:1:22","nodeType":"YulLiteral","src":"1040:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1030:6:22","nodeType":"YulIdentifier","src":"1030:6:22"},"nativeSrc":"1030:12:22","nodeType":"YulFunctionCall","src":"1030:12:22"},"nativeSrc":"1030:12:22","nodeType":"YulExpressionStatement","src":"1030:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"994:5:22","nodeType":"YulIdentifier","src":"994:5:22"},{"arguments":[{"name":"value","nativeSrc":"1019:5:22","nodeType":"YulIdentifier","src":"1019:5:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1001:17:22","nodeType":"YulIdentifier","src":"1001:17:22"},"nativeSrc":"1001:24:22","nodeType":"YulFunctionCall","src":"1001:24:22"}],"functionName":{"name":"eq","nativeSrc":"991:2:22","nodeType":"YulIdentifier","src":"991:2:22"},"nativeSrc":"991:35:22","nodeType":"YulFunctionCall","src":"991:35:22"}],"functionName":{"name":"iszero","nativeSrc":"984:6:22","nodeType":"YulIdentifier","src":"984:6:22"},"nativeSrc":"984:43:22","nodeType":"YulFunctionCall","src":"984:43:22"},"nativeSrc":"981:63:22","nodeType":"YulIf","src":"981:63:22"}]},"name":"validator_revert_t_uint256","nativeSrc":"928:122:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"964:5:22","nodeType":"YulTypedName","src":"964:5:22","type":""}],"src":"928:122:22"},{"body":{"nativeSrc":"1119:80:22","nodeType":"YulBlock","src":"1119:80:22","statements":[{"nativeSrc":"1129:22:22","nodeType":"YulAssignment","src":"1129:22:22","value":{"arguments":[{"name":"offset","nativeSrc":"1144:6:22","nodeType":"YulIdentifier","src":"1144:6:22"}],"functionName":{"name":"mload","nativeSrc":"1138:5:22","nodeType":"YulIdentifier","src":"1138:5:22"},"nativeSrc":"1138:13:22","nodeType":"YulFunctionCall","src":"1138:13:22"},"variableNames":[{"name":"value","nativeSrc":"1129:5:22","nodeType":"YulIdentifier","src":"1129:5:22"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1187:5:22","nodeType":"YulIdentifier","src":"1187:5:22"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"1160:26:22","nodeType":"YulIdentifier","src":"1160:26:22"},"nativeSrc":"1160:33:22","nodeType":"YulFunctionCall","src":"1160:33:22"},"nativeSrc":"1160:33:22","nodeType":"YulExpressionStatement","src":"1160:33:22"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"1056:143:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1097:6:22","nodeType":"YulTypedName","src":"1097:6:22","type":""},{"name":"end","nativeSrc":"1105:3:22","nodeType":"YulTypedName","src":"1105:3:22","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1113:5:22","nodeType":"YulTypedName","src":"1113:5:22","type":""}],"src":"1056:143:22"},{"body":{"nativeSrc":"1299:413:22","nodeType":"YulBlock","src":"1299:413:22","statements":[{"body":{"nativeSrc":"1345:83:22","nodeType":"YulBlock","src":"1345:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1347:77:22","nodeType":"YulIdentifier","src":"1347:77:22"},"nativeSrc":"1347:79:22","nodeType":"YulFunctionCall","src":"1347:79:22"},"nativeSrc":"1347:79:22","nodeType":"YulExpressionStatement","src":"1347:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1320:7:22","nodeType":"YulIdentifier","src":"1320:7:22"},{"name":"headStart","nativeSrc":"1329:9:22","nodeType":"YulIdentifier","src":"1329:9:22"}],"functionName":{"name":"sub","nativeSrc":"1316:3:22","nodeType":"YulIdentifier","src":"1316:3:22"},"nativeSrc":"1316:23:22","nodeType":"YulFunctionCall","src":"1316:23:22"},{"kind":"number","nativeSrc":"1341:2:22","nodeType":"YulLiteral","src":"1341:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1312:3:22","nodeType":"YulIdentifier","src":"1312:3:22"},"nativeSrc":"1312:32:22","nodeType":"YulFunctionCall","src":"1312:32:22"},"nativeSrc":"1309:119:22","nodeType":"YulIf","src":"1309:119:22"},{"nativeSrc":"1438:128:22","nodeType":"YulBlock","src":"1438:128:22","statements":[{"nativeSrc":"1453:15:22","nodeType":"YulVariableDeclaration","src":"1453:15:22","value":{"kind":"number","nativeSrc":"1467:1:22","nodeType":"YulLiteral","src":"1467:1:22","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1457:6:22","nodeType":"YulTypedName","src":"1457:6:22","type":""}]},{"nativeSrc":"1482:74:22","nodeType":"YulAssignment","src":"1482:74:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1528:9:22","nodeType":"YulIdentifier","src":"1528:9:22"},{"name":"offset","nativeSrc":"1539:6:22","nodeType":"YulIdentifier","src":"1539:6:22"}],"functionName":{"name":"add","nativeSrc":"1524:3:22","nodeType":"YulIdentifier","src":"1524:3:22"},"nativeSrc":"1524:22:22","nodeType":"YulFunctionCall","src":"1524:22:22"},{"name":"dataEnd","nativeSrc":"1548:7:22","nodeType":"YulIdentifier","src":"1548:7:22"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1492:31:22","nodeType":"YulIdentifier","src":"1492:31:22"},"nativeSrc":"1492:64:22","nodeType":"YulFunctionCall","src":"1492:64:22"},"variableNames":[{"name":"value0","nativeSrc":"1482:6:22","nodeType":"YulIdentifier","src":"1482:6:22"}]}]},{"nativeSrc":"1576:129:22","nodeType":"YulBlock","src":"1576:129:22","statements":[{"nativeSrc":"1591:16:22","nodeType":"YulVariableDeclaration","src":"1591:16:22","value":{"kind":"number","nativeSrc":"1605:2:22","nodeType":"YulLiteral","src":"1605:2:22","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1595:6:22","nodeType":"YulTypedName","src":"1595:6:22","type":""}]},{"nativeSrc":"1621:74:22","nodeType":"YulAssignment","src":"1621:74:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1667:9:22","nodeType":"YulIdentifier","src":"1667:9:22"},{"name":"offset","nativeSrc":"1678:6:22","nodeType":"YulIdentifier","src":"1678:6:22"}],"functionName":{"name":"add","nativeSrc":"1663:3:22","nodeType":"YulIdentifier","src":"1663:3:22"},"nativeSrc":"1663:22:22","nodeType":"YulFunctionCall","src":"1663:22:22"},{"name":"dataEnd","nativeSrc":"1687:7:22","nodeType":"YulIdentifier","src":"1687:7:22"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"1631:31:22","nodeType":"YulIdentifier","src":"1631:31:22"},"nativeSrc":"1631:64:22","nodeType":"YulFunctionCall","src":"1631:64:22"},"variableNames":[{"name":"value1","nativeSrc":"1621:6:22","nodeType":"YulIdentifier","src":"1621:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256_fromMemory","nativeSrc":"1205:507:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1261:9:22","nodeType":"YulTypedName","src":"1261:9:22","type":""},{"name":"dataEnd","nativeSrc":"1272:7:22","nodeType":"YulTypedName","src":"1272:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1284:6:22","nodeType":"YulTypedName","src":"1284:6:22","type":""},{"name":"value1","nativeSrc":"1292:6:22","nodeType":"YulTypedName","src":"1292:6:22","type":""}],"src":"1205:507:22"},{"body":{"nativeSrc":"1783:53:22","nodeType":"YulBlock","src":"1783:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1800:3:22","nodeType":"YulIdentifier","src":"1800:3:22"},{"arguments":[{"name":"value","nativeSrc":"1823:5:22","nodeType":"YulIdentifier","src":"1823:5:22"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1805:17:22","nodeType":"YulIdentifier","src":"1805:17:22"},"nativeSrc":"1805:24:22","nodeType":"YulFunctionCall","src":"1805:24:22"}],"functionName":{"name":"mstore","nativeSrc":"1793:6:22","nodeType":"YulIdentifier","src":"1793:6:22"},"nativeSrc":"1793:37:22","nodeType":"YulFunctionCall","src":"1793:37:22"},"nativeSrc":"1793:37:22","nodeType":"YulExpressionStatement","src":"1793:37:22"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"1718:118:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1771:5:22","nodeType":"YulTypedName","src":"1771:5:22","type":""},{"name":"pos","nativeSrc":"1778:3:22","nodeType":"YulTypedName","src":"1778:3:22","type":""}],"src":"1718:118:22"},{"body":{"nativeSrc":"1940:124:22","nodeType":"YulBlock","src":"1940:124:22","statements":[{"nativeSrc":"1950:26:22","nodeType":"YulAssignment","src":"1950:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"1962:9:22","nodeType":"YulIdentifier","src":"1962:9:22"},{"kind":"number","nativeSrc":"1973:2:22","nodeType":"YulLiteral","src":"1973:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1958:3:22","nodeType":"YulIdentifier","src":"1958:3:22"},"nativeSrc":"1958:18:22","nodeType":"YulFunctionCall","src":"1958:18:22"},"variableNames":[{"name":"tail","nativeSrc":"1950:4:22","nodeType":"YulIdentifier","src":"1950:4:22"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"2030:6:22","nodeType":"YulIdentifier","src":"2030:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"2043:9:22","nodeType":"YulIdentifier","src":"2043:9:22"},{"kind":"number","nativeSrc":"2054:1:22","nodeType":"YulLiteral","src":"2054:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2039:3:22","nodeType":"YulIdentifier","src":"2039:3:22"},"nativeSrc":"2039:17:22","nodeType":"YulFunctionCall","src":"2039:17:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"1986:43:22","nodeType":"YulIdentifier","src":"1986:43:22"},"nativeSrc":"1986:71:22","nodeType":"YulFunctionCall","src":"1986:71:22"},"nativeSrc":"1986:71:22","nodeType":"YulExpressionStatement","src":"1986:71:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"1842:222:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1912:9:22","nodeType":"YulTypedName","src":"1912:9:22","type":""},{"name":"value0","nativeSrc":"1924:6:22","nodeType":"YulTypedName","src":"1924:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1935:4:22","nodeType":"YulTypedName","src":"1935:4:22","type":""}],"src":"1842:222:22"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":22,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000e7238038062000e72833981810160405281019062000037919062000237565b81600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a491906200028f565b60405180910390fd5b620000be81620000ce60201b60201c565b50806003819055505050620002ac565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001c48262000197565b9050919050565b620001d681620001b7565b8114620001e257600080fd5b50565b600081519050620001f681620001cb565b92915050565b6000819050919050565b6200021181620001fc565b81146200021d57600080fd5b50565b600081519050620002318162000206565b92915050565b6000806040838503121562000251576200025062000192565b5b60006200026185828601620001e5565b9250506020620002748582860162000220565b9150509250929050565b6200028981620001b7565b82525050565b6000602082019050620002a660008301846200027e565b92915050565b610bb680620002bc6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100eb578063ae7b6d1614610109578063d7ad21ac14610127578063f2fde38b1461015757610088565b80630ed9cc4c1461008d578063699abb3c146100a9578063705931fa146100c5578063715018a6146100e1575b600080fd5b6100a760048036038101906100a2919061080a565b610173565b005b6100c360048036038101906100be919061086d565b6101e7565b005b6100df60048036038101906100da919061080a565b61027d565b005b6100e96102f1565b005b6100f3610305565b60405161010091906108a9565b60405180910390f35b61011161032e565b60405161011e91906108d3565b60405180910390f35b610141600480360381019061013c91906108ee565b610334565b60405161014e91906108d3565b60405180910390f35b610171600480360381019061016c919061080a565b610397565b005b61017b61041d565b61018f8160016104a490919063ffffffff16565b156101e4578073ffffffffffffffffffffffffffffffffffffffff167f36ee46fa09c2419f7bcf8135c2bdd56bc882be141cb075961717003bed74367d60006040516101db919061095c565b60405180910390a25b50565b6101ef61041d565b60008110610232576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610229906109d4565b60405180910390fd5b60006003549050816003819055507f4953fbf85b1bef649a55e328880dc688093c62b90bc90dec0ffcb6a1c5cce0a581836040516102719291906109f4565b60405180910390a15050565b61028561041d565b6102998160016104d490919063ffffffff16565b156102ee578073ffffffffffffffffffffffffffffffffffffffff167f36ee46fa09c2419f7bcf8135c2bdd56bc882be141cb075961717003bed74367d60016040516102e5919061095c565b60405180910390a25b50565b6102f961041d565b6103036000610504565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60035481565b600061034a8460016105c890919063ffffffff16565b8061036557506103648360016105c890919063ffffffff16565b5b156103735760009050610390565b6064600354836103839190610a4c565b61038d9190610abd565b90505b9392505050565b61039f61041d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104115760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161040891906108a9565b60405180910390fd5b61041a81610504565b50565b6104256105f8565b73ffffffffffffffffffffffffffffffffffffffff16610443610305565b73ffffffffffffffffffffffffffffffffffffffff16146104a2576104666105f8565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161049991906108a9565b60405180910390fd5b565b60006104cc836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610600565b905092915050565b60006104fc836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610714565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006105f0836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610784565b905092915050565b600033905090565b600080836001016000848152602001908152602001600020549050600081146107085760006001826106329190610aee565b905060006001866000018054905061064a9190610aee565b90508082146106b957600086600001828154811061066b5761066a610b22565b5b906000526020600020015490508087600001848154811061068f5761068e610b22565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b856000018054806106cd576106cc610b51565b5b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061070e565b60009150505b92915050565b60006107208383610784565b61077957826000018290806001815401808255809150506001900390600052602060002001600090919091909150558260000180549050836001016000848152602001908152602001600020819055506001905061077e565b600090505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107d7826107ac565b9050919050565b6107e7816107cc565b81146107f257600080fd5b50565b600081359050610804816107de565b92915050565b6000602082840312156108205761081f6107a7565b5b600061082e848285016107f5565b91505092915050565b6000819050919050565b61084a81610837565b811461085557600080fd5b50565b60008135905061086781610841565b92915050565b600060208284031215610883576108826107a7565b5b600061089184828501610858565b91505092915050565b6108a3816107cc565b82525050565b60006020820190506108be600083018461089a565b92915050565b6108cd81610837565b82525050565b60006020820190506108e860008301846108c4565b92915050565b600080600060608486031215610907576109066107a7565b5b6000610915868287016107f5565b9350506020610926868287016107f5565b925050604061093786828701610858565b9150509250925092565b60008115159050919050565b61095681610941565b82525050565b6000602082019050610971600083018461094d565b92915050565b600082825260208201905092915050565b7f496e76616c69642056616c75652e000000000000000000000000000000000000600082015250565b60006109be600e83610977565b91506109c982610988565b602082019050919050565b600060208201905081810360008301526109ed816109b1565b9050919050565b6000604082019050610a0960008301856108c4565b610a1660208301846108c4565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a5782610837565b9150610a6283610837565b9250828202610a7081610837565b91508282048414831517610a8757610a86610a1d565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ac882610837565b9150610ad383610837565b925082610ae357610ae2610a8e565b5b828204905092915050565b6000610af982610837565b9150610b0483610837565b9250828203905081811115610b1c57610b1b610a1d565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220a1e8075ad8fc17d9ebe5335b8afde056e21c67771d16515e6e61752e3c046ec464736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xE72 CODESIZE SUB DUP1 PUSH3 0xE72 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x237 JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA4 SWAP2 SWAP1 PUSH3 0x28F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBE DUP2 PUSH3 0xCE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x2AC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C4 DUP3 PUSH3 0x197 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1D6 DUP2 PUSH3 0x1B7 JUMP JUMPDEST DUP2 EQ PUSH3 0x1E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1F6 DUP2 PUSH3 0x1CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x211 DUP2 PUSH3 0x1FC JUMP JUMPDEST DUP2 EQ PUSH3 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x231 DUP2 PUSH3 0x206 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x251 JUMPI PUSH3 0x250 PUSH3 0x192 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x261 DUP6 DUP3 DUP7 ADD PUSH3 0x1E5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x274 DUP6 DUP3 DUP7 ADD PUSH3 0x220 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH3 0x289 DUP2 PUSH3 0x1B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x2A6 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x27E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBB6 DUP1 PUSH3 0x2BC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0xAE7B6D16 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0xD7AD21AC EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x157 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0xED9CC4C EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x699ABB3C EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x705931FA EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x80A JUMP JUMPDEST PUSH2 0x173 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x86D JUMP JUMPDEST PUSH2 0x1E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDA SWAP2 SWAP1 PUSH2 0x80A JUMP JUMPDEST PUSH2 0x27D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE9 PUSH2 0x2F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF3 PUSH2 0x305 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x100 SWAP2 SWAP1 PUSH2 0x8A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x111 PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x8D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x8EE JUMP JUMPDEST PUSH2 0x334 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x8D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x80A JUMP JUMPDEST PUSH2 0x397 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17B PUSH2 0x41D JUMP JUMPDEST PUSH2 0x18F DUP2 PUSH1 0x1 PUSH2 0x4A4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x1E4 JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x36EE46FA09C2419F7BCF8135C2BDD56BC882BE141CB075961717003BED74367D PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x95C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMP JUMPDEST PUSH2 0x1EF PUSH2 0x41D JUMP JUMPDEST PUSH1 0x0 DUP2 LT PUSH2 0x232 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x229 SWAP1 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0x4953FBF85B1BEF649A55E328880DC688093C62B90BC90DEC0FFCB6A1C5CCE0A5 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x271 SWAP3 SWAP2 SWAP1 PUSH2 0x9F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x285 PUSH2 0x41D JUMP JUMPDEST PUSH2 0x299 DUP2 PUSH1 0x1 PUSH2 0x4D4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x2EE JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x36EE46FA09C2419F7BCF8135C2BDD56BC882BE141CB075961717003BED74367D PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x95C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMP JUMPDEST PUSH2 0x2F9 PUSH2 0x41D JUMP JUMPDEST PUSH2 0x303 PUSH1 0x0 PUSH2 0x504 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34A DUP5 PUSH1 0x1 PUSH2 0x5C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH2 0x365 JUMPI POP PUSH2 0x364 DUP4 PUSH1 0x1 PUSH2 0x5C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST ISZERO PUSH2 0x373 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x390 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x3 SLOAD DUP4 PUSH2 0x383 SWAP2 SWAP1 PUSH2 0xA4C JUMP JUMPDEST PUSH2 0x38D SWAP2 SWAP1 PUSH2 0xABD JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x39F PUSH2 0x41D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x411 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x408 SWAP2 SWAP1 PUSH2 0x8A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x41A DUP2 PUSH2 0x504 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x425 PUSH2 0x5F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x443 PUSH2 0x305 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4A2 JUMPI PUSH2 0x466 PUSH2 0x5F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x499 SWAP2 SWAP1 PUSH2 0x8A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CC DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x600 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FC DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x714 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F0 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x784 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x708 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x632 SWAP2 SWAP1 PUSH2 0xAEE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x64A SWAP2 SWAP1 PUSH2 0xAEE JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0x6B9 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x66B JUMPI PUSH2 0x66A PUSH2 0xB22 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x68F JUMPI PUSH2 0x68E PUSH2 0xB22 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x6CD JUMPI PUSH2 0x6CC PUSH2 0xB51 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x70E JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x720 DUP4 DUP4 PUSH2 0x784 JUMP JUMPDEST PUSH2 0x779 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x77E JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D7 DUP3 PUSH2 0x7AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7E7 DUP2 PUSH2 0x7CC JUMP JUMPDEST DUP2 EQ PUSH2 0x7F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x804 DUP2 PUSH2 0x7DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x820 JUMPI PUSH2 0x81F PUSH2 0x7A7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x82E DUP5 DUP3 DUP6 ADD PUSH2 0x7F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x84A DUP2 PUSH2 0x837 JUMP JUMPDEST DUP2 EQ PUSH2 0x855 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x867 DUP2 PUSH2 0x841 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x883 JUMPI PUSH2 0x882 PUSH2 0x7A7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x891 DUP5 DUP3 DUP6 ADD PUSH2 0x858 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8A3 DUP2 PUSH2 0x7CC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8BE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x89A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8CD DUP2 PUSH2 0x837 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8E8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x907 JUMPI PUSH2 0x906 PUSH2 0x7A7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x915 DUP7 DUP3 DUP8 ADD PUSH2 0x7F5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x926 DUP7 DUP3 DUP8 ADD PUSH2 0x7F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x937 DUP7 DUP3 DUP8 ADD PUSH2 0x858 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x956 DUP2 PUSH2 0x941 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x971 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x94D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C69642056616C75652E000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9BE PUSH1 0xE DUP4 PUSH2 0x977 JUMP JUMPDEST SWAP2 POP PUSH2 0x9C9 DUP3 PUSH2 0x988 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9ED DUP2 PUSH2 0x9B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA09 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x8C4 JUMP JUMPDEST PUSH2 0xA16 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8C4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA57 DUP3 PUSH2 0x837 JUMP JUMPDEST SWAP2 POP PUSH2 0xA62 DUP4 PUSH2 0x837 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xA70 DUP2 PUSH2 0x837 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xA87 JUMPI PUSH2 0xA86 PUSH2 0xA1D JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAC8 DUP3 PUSH2 0x837 JUMP JUMPDEST SWAP2 POP PUSH2 0xAD3 DUP4 PUSH2 0x837 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xAE3 JUMPI PUSH2 0xAE2 PUSH2 0xA8E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF9 DUP3 PUSH2 0x837 JUMP JUMPDEST SWAP2 POP PUSH2 0xB04 DUP4 PUSH2 0x837 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xB1C JUMPI PUSH2 0xB1B PUSH2 0xA1D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0xE8 SMOD GAS 0xD8 0xFC OR 0xD9 0xEB 0xE5 CALLER JUMPDEST DUP11 REVERT 0xE0 JUMP 0xE2 SHR PUSH8 0x771D16515E6E6175 0x2E EXTCODECOPY DIV PUSH15 0xC464736F6C63430008180033000000 ","sourceMap":"656:2443:21:-:0;;;1429:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1507:12;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1551:20:21::1;1535:13;:36;;;;1429:149:::0;;656:2443;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:22:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:507::-;1284:6;1292;1341:2;1329:9;1320:7;1316:23;1312:32;1309:119;;;1347:79;;:::i;:::-;1309:119;1467:1;1492:64;1548:7;1539:6;1528:9;1524:22;1492:64;:::i;:::-;1482:74;;1438:128;1605:2;1631:64;1687:7;1678:6;1667:9;1663:22;1631:64;:::i;:::-;1621:74;;1576:129;1205:507;;;;;:::o;1718:118::-;1805:24;1823:5;1805:24;:::i;:::-;1800:3;1793:37;1718:118;;:::o;1842:222::-;1935:4;1973:2;1962:9;1958:18;1950:26;;1986:71;2054:1;2043:9;2039:17;2030:6;1986:71;:::i;:::-;1842:222;;;;:::o;656:2443:21:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_add_3659":{"entryPoint":1812,"id":3659,"parameterSlots":2,"returnSlots":1},"@_checkOwner_84":{"entryPoint":1053,"id":84,"parameterSlots":0,"returnSlots":0},"@_contains_3762":{"entryPoint":1924,"id":3762,"parameterSlots":2,"returnSlots":1},"@_msgSender_1130":{"entryPoint":1528,"id":1130,"parameterSlots":0,"returnSlots":1},"@_remove_3743":{"entryPoint":1536,"id":3743,"parameterSlots":2,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":1284,"id":146,"parameterSlots":1,"returnSlots":0},"@addExemption_4788":{"entryPoint":637,"id":4788,"parameterSlots":1,"returnSlots":0},"@add_3959":{"entryPoint":1236,"id":3959,"parameterSlots":2,"returnSlots":1},"@contains_4013":{"entryPoint":1480,"id":4013,"parameterSlots":2,"returnSlots":1},"@getTax_4739":{"entryPoint":820,"id":4739,"parameterSlots":3,"returnSlots":1},"@owner_67":{"entryPoint":773,"id":67,"parameterSlots":0,"returnSlots":1},"@removeExemption_4808":{"entryPoint":371,"id":4808,"parameterSlots":1,"returnSlots":0},"@remove_3986":{"entryPoint":1188,"id":3986,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":753,"id":98,"parameterSlots":0,"returnSlots":0},"@setTaxPercentage_4768":{"entryPoint":487,"id":4768,"parameterSlots":1,"returnSlots":0},"@taxPercentage_4677":{"entryPoint":814,"id":4677,"parameterSlots":0,"returnSlots":0},"@transferOwnership_126":{"entryPoint":919,"id":126,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":2037,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2136,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2058,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":2286,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256":{"entryPoint":2157,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2202,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":2381,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_efe8f4c43e0a7ce9afba23fb6c993cae9893c4081f1a55c9c3488cdb730ee4a2_to_t_string_memory_ptr_fromStack":{"entryPoint":2481,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2244,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2217,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":2396,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_efe8f4c43e0a7ce9afba23fb6c993cae9893c4081f1a55c9c3488cdb730ee4a2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2516,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":2259,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":2548,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2423,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":2749,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":2636,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":2798,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1996,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":2369,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1964,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2103,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":2589,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":2702,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":2897,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":2850,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1959,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_efe8f4c43e0a7ce9afba23fb6c993cae9893c4081f1a55c9c3488cdb730ee4a2":{"entryPoint":2440,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2014,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2113,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:6651:22","nodeType":"YulBlock","src":"0:6651:22","statements":[{"body":{"nativeSrc":"47:35:22","nodeType":"YulBlock","src":"47:35:22","statements":[{"nativeSrc":"57:19:22","nodeType":"YulAssignment","src":"57:19:22","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:22","nodeType":"YulLiteral","src":"73:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:22","nodeType":"YulIdentifier","src":"67:5:22"},"nativeSrc":"67:9:22","nodeType":"YulFunctionCall","src":"67:9:22"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:22","nodeType":"YulIdentifier","src":"57:6:22"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:22","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:22","nodeType":"YulTypedName","src":"40:6:22","type":""}],"src":"7:75:22"},{"body":{"nativeSrc":"177:28:22","nodeType":"YulBlock","src":"177:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:22","nodeType":"YulLiteral","src":"194:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:22","nodeType":"YulLiteral","src":"197:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:22","nodeType":"YulIdentifier","src":"187:6:22"},"nativeSrc":"187:12:22","nodeType":"YulFunctionCall","src":"187:12:22"},"nativeSrc":"187:12:22","nodeType":"YulExpressionStatement","src":"187:12:22"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:22","nodeType":"YulFunctionDefinition","src":"88:117:22"},{"body":{"nativeSrc":"300:28:22","nodeType":"YulBlock","src":"300:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:22","nodeType":"YulLiteral","src":"317:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:22","nodeType":"YulLiteral","src":"320:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:22","nodeType":"YulIdentifier","src":"310:6:22"},"nativeSrc":"310:12:22","nodeType":"YulFunctionCall","src":"310:12:22"},"nativeSrc":"310:12:22","nodeType":"YulExpressionStatement","src":"310:12:22"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:22","nodeType":"YulFunctionDefinition","src":"211:117:22"},{"body":{"nativeSrc":"379:81:22","nodeType":"YulBlock","src":"379:81:22","statements":[{"nativeSrc":"389:65:22","nodeType":"YulAssignment","src":"389:65:22","value":{"arguments":[{"name":"value","nativeSrc":"404:5:22","nodeType":"YulIdentifier","src":"404:5:22"},{"kind":"number","nativeSrc":"411:42:22","nodeType":"YulLiteral","src":"411:42:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:22","nodeType":"YulIdentifier","src":"400:3:22"},"nativeSrc":"400:54:22","nodeType":"YulFunctionCall","src":"400:54:22"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:22","nodeType":"YulIdentifier","src":"389:7:22"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:22","nodeType":"YulTypedName","src":"361:5:22","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:22","nodeType":"YulTypedName","src":"371:7:22","type":""}],"src":"334:126:22"},{"body":{"nativeSrc":"511:51:22","nodeType":"YulBlock","src":"511:51:22","statements":[{"nativeSrc":"521:35:22","nodeType":"YulAssignment","src":"521:35:22","value":{"arguments":[{"name":"value","nativeSrc":"550:5:22","nodeType":"YulIdentifier","src":"550:5:22"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:22","nodeType":"YulIdentifier","src":"532:17:22"},"nativeSrc":"532:24:22","nodeType":"YulFunctionCall","src":"532:24:22"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:22","nodeType":"YulIdentifier","src":"521:7:22"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:22","nodeType":"YulTypedName","src":"493:5:22","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:22","nodeType":"YulTypedName","src":"503:7:22","type":""}],"src":"466:96:22"},{"body":{"nativeSrc":"611:79:22","nodeType":"YulBlock","src":"611:79:22","statements":[{"body":{"nativeSrc":"668:16:22","nodeType":"YulBlock","src":"668:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:22","nodeType":"YulLiteral","src":"677:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:22","nodeType":"YulLiteral","src":"680:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:22","nodeType":"YulIdentifier","src":"670:6:22"},"nativeSrc":"670:12:22","nodeType":"YulFunctionCall","src":"670:12:22"},"nativeSrc":"670:12:22","nodeType":"YulExpressionStatement","src":"670:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:22","nodeType":"YulIdentifier","src":"634:5:22"},{"arguments":[{"name":"value","nativeSrc":"659:5:22","nodeType":"YulIdentifier","src":"659:5:22"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:22","nodeType":"YulIdentifier","src":"641:17:22"},"nativeSrc":"641:24:22","nodeType":"YulFunctionCall","src":"641:24:22"}],"functionName":{"name":"eq","nativeSrc":"631:2:22","nodeType":"YulIdentifier","src":"631:2:22"},"nativeSrc":"631:35:22","nodeType":"YulFunctionCall","src":"631:35:22"}],"functionName":{"name":"iszero","nativeSrc":"624:6:22","nodeType":"YulIdentifier","src":"624:6:22"},"nativeSrc":"624:43:22","nodeType":"YulFunctionCall","src":"624:43:22"},"nativeSrc":"621:63:22","nodeType":"YulIf","src":"621:63:22"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:22","nodeType":"YulTypedName","src":"604:5:22","type":""}],"src":"568:122:22"},{"body":{"nativeSrc":"748:87:22","nodeType":"YulBlock","src":"748:87:22","statements":[{"nativeSrc":"758:29:22","nodeType":"YulAssignment","src":"758:29:22","value":{"arguments":[{"name":"offset","nativeSrc":"780:6:22","nodeType":"YulIdentifier","src":"780:6:22"}],"functionName":{"name":"calldataload","nativeSrc":"767:12:22","nodeType":"YulIdentifier","src":"767:12:22"},"nativeSrc":"767:20:22","nodeType":"YulFunctionCall","src":"767:20:22"},"variableNames":[{"name":"value","nativeSrc":"758:5:22","nodeType":"YulIdentifier","src":"758:5:22"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"823:5:22","nodeType":"YulIdentifier","src":"823:5:22"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"796:26:22","nodeType":"YulIdentifier","src":"796:26:22"},"nativeSrc":"796:33:22","nodeType":"YulFunctionCall","src":"796:33:22"},"nativeSrc":"796:33:22","nodeType":"YulExpressionStatement","src":"796:33:22"}]},"name":"abi_decode_t_address","nativeSrc":"696:139:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"726:6:22","nodeType":"YulTypedName","src":"726:6:22","type":""},{"name":"end","nativeSrc":"734:3:22","nodeType":"YulTypedName","src":"734:3:22","type":""}],"returnVariables":[{"name":"value","nativeSrc":"742:5:22","nodeType":"YulTypedName","src":"742:5:22","type":""}],"src":"696:139:22"},{"body":{"nativeSrc":"907:263:22","nodeType":"YulBlock","src":"907:263:22","statements":[{"body":{"nativeSrc":"953:83:22","nodeType":"YulBlock","src":"953:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"955:77:22","nodeType":"YulIdentifier","src":"955:77:22"},"nativeSrc":"955:79:22","nodeType":"YulFunctionCall","src":"955:79:22"},"nativeSrc":"955:79:22","nodeType":"YulExpressionStatement","src":"955:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"928:7:22","nodeType":"YulIdentifier","src":"928:7:22"},{"name":"headStart","nativeSrc":"937:9:22","nodeType":"YulIdentifier","src":"937:9:22"}],"functionName":{"name":"sub","nativeSrc":"924:3:22","nodeType":"YulIdentifier","src":"924:3:22"},"nativeSrc":"924:23:22","nodeType":"YulFunctionCall","src":"924:23:22"},{"kind":"number","nativeSrc":"949:2:22","nodeType":"YulLiteral","src":"949:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"920:3:22","nodeType":"YulIdentifier","src":"920:3:22"},"nativeSrc":"920:32:22","nodeType":"YulFunctionCall","src":"920:32:22"},"nativeSrc":"917:119:22","nodeType":"YulIf","src":"917:119:22"},{"nativeSrc":"1046:117:22","nodeType":"YulBlock","src":"1046:117:22","statements":[{"nativeSrc":"1061:15:22","nodeType":"YulVariableDeclaration","src":"1061:15:22","value":{"kind":"number","nativeSrc":"1075:1:22","nodeType":"YulLiteral","src":"1075:1:22","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1065:6:22","nodeType":"YulTypedName","src":"1065:6:22","type":""}]},{"nativeSrc":"1090:63:22","nodeType":"YulAssignment","src":"1090:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1125:9:22","nodeType":"YulIdentifier","src":"1125:9:22"},{"name":"offset","nativeSrc":"1136:6:22","nodeType":"YulIdentifier","src":"1136:6:22"}],"functionName":{"name":"add","nativeSrc":"1121:3:22","nodeType":"YulIdentifier","src":"1121:3:22"},"nativeSrc":"1121:22:22","nodeType":"YulFunctionCall","src":"1121:22:22"},{"name":"dataEnd","nativeSrc":"1145:7:22","nodeType":"YulIdentifier","src":"1145:7:22"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"1100:20:22","nodeType":"YulIdentifier","src":"1100:20:22"},"nativeSrc":"1100:53:22","nodeType":"YulFunctionCall","src":"1100:53:22"},"variableNames":[{"name":"value0","nativeSrc":"1090:6:22","nodeType":"YulIdentifier","src":"1090:6:22"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"841:329:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"877:9:22","nodeType":"YulTypedName","src":"877:9:22","type":""},{"name":"dataEnd","nativeSrc":"888:7:22","nodeType":"YulTypedName","src":"888:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"900:6:22","nodeType":"YulTypedName","src":"900:6:22","type":""}],"src":"841:329:22"},{"body":{"nativeSrc":"1221:32:22","nodeType":"YulBlock","src":"1221:32:22","statements":[{"nativeSrc":"1231:16:22","nodeType":"YulAssignment","src":"1231:16:22","value":{"name":"value","nativeSrc":"1242:5:22","nodeType":"YulIdentifier","src":"1242:5:22"},"variableNames":[{"name":"cleaned","nativeSrc":"1231:7:22","nodeType":"YulIdentifier","src":"1231:7:22"}]}]},"name":"cleanup_t_uint256","nativeSrc":"1176:77:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1203:5:22","nodeType":"YulTypedName","src":"1203:5:22","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1213:7:22","nodeType":"YulTypedName","src":"1213:7:22","type":""}],"src":"1176:77:22"},{"body":{"nativeSrc":"1302:79:22","nodeType":"YulBlock","src":"1302:79:22","statements":[{"body":{"nativeSrc":"1359:16:22","nodeType":"YulBlock","src":"1359:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1368:1:22","nodeType":"YulLiteral","src":"1368:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"1371:1:22","nodeType":"YulLiteral","src":"1371:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1361:6:22","nodeType":"YulIdentifier","src":"1361:6:22"},"nativeSrc":"1361:12:22","nodeType":"YulFunctionCall","src":"1361:12:22"},"nativeSrc":"1361:12:22","nodeType":"YulExpressionStatement","src":"1361:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1325:5:22","nodeType":"YulIdentifier","src":"1325:5:22"},{"arguments":[{"name":"value","nativeSrc":"1350:5:22","nodeType":"YulIdentifier","src":"1350:5:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1332:17:22","nodeType":"YulIdentifier","src":"1332:17:22"},"nativeSrc":"1332:24:22","nodeType":"YulFunctionCall","src":"1332:24:22"}],"functionName":{"name":"eq","nativeSrc":"1322:2:22","nodeType":"YulIdentifier","src":"1322:2:22"},"nativeSrc":"1322:35:22","nodeType":"YulFunctionCall","src":"1322:35:22"}],"functionName":{"name":"iszero","nativeSrc":"1315:6:22","nodeType":"YulIdentifier","src":"1315:6:22"},"nativeSrc":"1315:43:22","nodeType":"YulFunctionCall","src":"1315:43:22"},"nativeSrc":"1312:63:22","nodeType":"YulIf","src":"1312:63:22"}]},"name":"validator_revert_t_uint256","nativeSrc":"1259:122:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1295:5:22","nodeType":"YulTypedName","src":"1295:5:22","type":""}],"src":"1259:122:22"},{"body":{"nativeSrc":"1439:87:22","nodeType":"YulBlock","src":"1439:87:22","statements":[{"nativeSrc":"1449:29:22","nodeType":"YulAssignment","src":"1449:29:22","value":{"arguments":[{"name":"offset","nativeSrc":"1471:6:22","nodeType":"YulIdentifier","src":"1471:6:22"}],"functionName":{"name":"calldataload","nativeSrc":"1458:12:22","nodeType":"YulIdentifier","src":"1458:12:22"},"nativeSrc":"1458:20:22","nodeType":"YulFunctionCall","src":"1458:20:22"},"variableNames":[{"name":"value","nativeSrc":"1449:5:22","nodeType":"YulIdentifier","src":"1449:5:22"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1514:5:22","nodeType":"YulIdentifier","src":"1514:5:22"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"1487:26:22","nodeType":"YulIdentifier","src":"1487:26:22"},"nativeSrc":"1487:33:22","nodeType":"YulFunctionCall","src":"1487:33:22"},"nativeSrc":"1487:33:22","nodeType":"YulExpressionStatement","src":"1487:33:22"}]},"name":"abi_decode_t_uint256","nativeSrc":"1387:139:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1417:6:22","nodeType":"YulTypedName","src":"1417:6:22","type":""},{"name":"end","nativeSrc":"1425:3:22","nodeType":"YulTypedName","src":"1425:3:22","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1433:5:22","nodeType":"YulTypedName","src":"1433:5:22","type":""}],"src":"1387:139:22"},{"body":{"nativeSrc":"1598:263:22","nodeType":"YulBlock","src":"1598:263:22","statements":[{"body":{"nativeSrc":"1644:83:22","nodeType":"YulBlock","src":"1644:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1646:77:22","nodeType":"YulIdentifier","src":"1646:77:22"},"nativeSrc":"1646:79:22","nodeType":"YulFunctionCall","src":"1646:79:22"},"nativeSrc":"1646:79:22","nodeType":"YulExpressionStatement","src":"1646:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1619:7:22","nodeType":"YulIdentifier","src":"1619:7:22"},{"name":"headStart","nativeSrc":"1628:9:22","nodeType":"YulIdentifier","src":"1628:9:22"}],"functionName":{"name":"sub","nativeSrc":"1615:3:22","nodeType":"YulIdentifier","src":"1615:3:22"},"nativeSrc":"1615:23:22","nodeType":"YulFunctionCall","src":"1615:23:22"},{"kind":"number","nativeSrc":"1640:2:22","nodeType":"YulLiteral","src":"1640:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1611:3:22","nodeType":"YulIdentifier","src":"1611:3:22"},"nativeSrc":"1611:32:22","nodeType":"YulFunctionCall","src":"1611:32:22"},"nativeSrc":"1608:119:22","nodeType":"YulIf","src":"1608:119:22"},{"nativeSrc":"1737:117:22","nodeType":"YulBlock","src":"1737:117:22","statements":[{"nativeSrc":"1752:15:22","nodeType":"YulVariableDeclaration","src":"1752:15:22","value":{"kind":"number","nativeSrc":"1766:1:22","nodeType":"YulLiteral","src":"1766:1:22","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1756:6:22","nodeType":"YulTypedName","src":"1756:6:22","type":""}]},{"nativeSrc":"1781:63:22","nodeType":"YulAssignment","src":"1781:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1816:9:22","nodeType":"YulIdentifier","src":"1816:9:22"},{"name":"offset","nativeSrc":"1827:6:22","nodeType":"YulIdentifier","src":"1827:6:22"}],"functionName":{"name":"add","nativeSrc":"1812:3:22","nodeType":"YulIdentifier","src":"1812:3:22"},"nativeSrc":"1812:22:22","nodeType":"YulFunctionCall","src":"1812:22:22"},{"name":"dataEnd","nativeSrc":"1836:7:22","nodeType":"YulIdentifier","src":"1836:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"1791:20:22","nodeType":"YulIdentifier","src":"1791:20:22"},"nativeSrc":"1791:53:22","nodeType":"YulFunctionCall","src":"1791:53:22"},"variableNames":[{"name":"value0","nativeSrc":"1781:6:22","nodeType":"YulIdentifier","src":"1781:6:22"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"1532:329:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1568:9:22","nodeType":"YulTypedName","src":"1568:9:22","type":""},{"name":"dataEnd","nativeSrc":"1579:7:22","nodeType":"YulTypedName","src":"1579:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1591:6:22","nodeType":"YulTypedName","src":"1591:6:22","type":""}],"src":"1532:329:22"},{"body":{"nativeSrc":"1932:53:22","nodeType":"YulBlock","src":"1932:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1949:3:22","nodeType":"YulIdentifier","src":"1949:3:22"},{"arguments":[{"name":"value","nativeSrc":"1972:5:22","nodeType":"YulIdentifier","src":"1972:5:22"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1954:17:22","nodeType":"YulIdentifier","src":"1954:17:22"},"nativeSrc":"1954:24:22","nodeType":"YulFunctionCall","src":"1954:24:22"}],"functionName":{"name":"mstore","nativeSrc":"1942:6:22","nodeType":"YulIdentifier","src":"1942:6:22"},"nativeSrc":"1942:37:22","nodeType":"YulFunctionCall","src":"1942:37:22"},"nativeSrc":"1942:37:22","nodeType":"YulExpressionStatement","src":"1942:37:22"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"1867:118:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1920:5:22","nodeType":"YulTypedName","src":"1920:5:22","type":""},{"name":"pos","nativeSrc":"1927:3:22","nodeType":"YulTypedName","src":"1927:3:22","type":""}],"src":"1867:118:22"},{"body":{"nativeSrc":"2089:124:22","nodeType":"YulBlock","src":"2089:124:22","statements":[{"nativeSrc":"2099:26:22","nodeType":"YulAssignment","src":"2099:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"2111:9:22","nodeType":"YulIdentifier","src":"2111:9:22"},{"kind":"number","nativeSrc":"2122:2:22","nodeType":"YulLiteral","src":"2122:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2107:3:22","nodeType":"YulIdentifier","src":"2107:3:22"},"nativeSrc":"2107:18:22","nodeType":"YulFunctionCall","src":"2107:18:22"},"variableNames":[{"name":"tail","nativeSrc":"2099:4:22","nodeType":"YulIdentifier","src":"2099:4:22"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"2179:6:22","nodeType":"YulIdentifier","src":"2179:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"2192:9:22","nodeType":"YulIdentifier","src":"2192:9:22"},{"kind":"number","nativeSrc":"2203:1:22","nodeType":"YulLiteral","src":"2203:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2188:3:22","nodeType":"YulIdentifier","src":"2188:3:22"},"nativeSrc":"2188:17:22","nodeType":"YulFunctionCall","src":"2188:17:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"2135:43:22","nodeType":"YulIdentifier","src":"2135:43:22"},"nativeSrc":"2135:71:22","nodeType":"YulFunctionCall","src":"2135:71:22"},"nativeSrc":"2135:71:22","nodeType":"YulExpressionStatement","src":"2135:71:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"1991:222:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2061:9:22","nodeType":"YulTypedName","src":"2061:9:22","type":""},{"name":"value0","nativeSrc":"2073:6:22","nodeType":"YulTypedName","src":"2073:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2084:4:22","nodeType":"YulTypedName","src":"2084:4:22","type":""}],"src":"1991:222:22"},{"body":{"nativeSrc":"2284:53:22","nodeType":"YulBlock","src":"2284:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2301:3:22","nodeType":"YulIdentifier","src":"2301:3:22"},{"arguments":[{"name":"value","nativeSrc":"2324:5:22","nodeType":"YulIdentifier","src":"2324:5:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2306:17:22","nodeType":"YulIdentifier","src":"2306:17:22"},"nativeSrc":"2306:24:22","nodeType":"YulFunctionCall","src":"2306:24:22"}],"functionName":{"name":"mstore","nativeSrc":"2294:6:22","nodeType":"YulIdentifier","src":"2294:6:22"},"nativeSrc":"2294:37:22","nodeType":"YulFunctionCall","src":"2294:37:22"},"nativeSrc":"2294:37:22","nodeType":"YulExpressionStatement","src":"2294:37:22"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"2219:118:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2272:5:22","nodeType":"YulTypedName","src":"2272:5:22","type":""},{"name":"pos","nativeSrc":"2279:3:22","nodeType":"YulTypedName","src":"2279:3:22","type":""}],"src":"2219:118:22"},{"body":{"nativeSrc":"2441:124:22","nodeType":"YulBlock","src":"2441:124:22","statements":[{"nativeSrc":"2451:26:22","nodeType":"YulAssignment","src":"2451:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"2463:9:22","nodeType":"YulIdentifier","src":"2463:9:22"},{"kind":"number","nativeSrc":"2474:2:22","nodeType":"YulLiteral","src":"2474:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2459:3:22","nodeType":"YulIdentifier","src":"2459:3:22"},"nativeSrc":"2459:18:22","nodeType":"YulFunctionCall","src":"2459:18:22"},"variableNames":[{"name":"tail","nativeSrc":"2451:4:22","nodeType":"YulIdentifier","src":"2451:4:22"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"2531:6:22","nodeType":"YulIdentifier","src":"2531:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"2544:9:22","nodeType":"YulIdentifier","src":"2544:9:22"},{"kind":"number","nativeSrc":"2555:1:22","nodeType":"YulLiteral","src":"2555:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2540:3:22","nodeType":"YulIdentifier","src":"2540:3:22"},"nativeSrc":"2540:17:22","nodeType":"YulFunctionCall","src":"2540:17:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"2487:43:22","nodeType":"YulIdentifier","src":"2487:43:22"},"nativeSrc":"2487:71:22","nodeType":"YulFunctionCall","src":"2487:71:22"},"nativeSrc":"2487:71:22","nodeType":"YulExpressionStatement","src":"2487:71:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"2343:222:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2413:9:22","nodeType":"YulTypedName","src":"2413:9:22","type":""},{"name":"value0","nativeSrc":"2425:6:22","nodeType":"YulTypedName","src":"2425:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2436:4:22","nodeType":"YulTypedName","src":"2436:4:22","type":""}],"src":"2343:222:22"},{"body":{"nativeSrc":"2671:519:22","nodeType":"YulBlock","src":"2671:519:22","statements":[{"body":{"nativeSrc":"2717:83:22","nodeType":"YulBlock","src":"2717:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2719:77:22","nodeType":"YulIdentifier","src":"2719:77:22"},"nativeSrc":"2719:79:22","nodeType":"YulFunctionCall","src":"2719:79:22"},"nativeSrc":"2719:79:22","nodeType":"YulExpressionStatement","src":"2719:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2692:7:22","nodeType":"YulIdentifier","src":"2692:7:22"},{"name":"headStart","nativeSrc":"2701:9:22","nodeType":"YulIdentifier","src":"2701:9:22"}],"functionName":{"name":"sub","nativeSrc":"2688:3:22","nodeType":"YulIdentifier","src":"2688:3:22"},"nativeSrc":"2688:23:22","nodeType":"YulFunctionCall","src":"2688:23:22"},{"kind":"number","nativeSrc":"2713:2:22","nodeType":"YulLiteral","src":"2713:2:22","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"2684:3:22","nodeType":"YulIdentifier","src":"2684:3:22"},"nativeSrc":"2684:32:22","nodeType":"YulFunctionCall","src":"2684:32:22"},"nativeSrc":"2681:119:22","nodeType":"YulIf","src":"2681:119:22"},{"nativeSrc":"2810:117:22","nodeType":"YulBlock","src":"2810:117:22","statements":[{"nativeSrc":"2825:15:22","nodeType":"YulVariableDeclaration","src":"2825:15:22","value":{"kind":"number","nativeSrc":"2839:1:22","nodeType":"YulLiteral","src":"2839:1:22","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2829:6:22","nodeType":"YulTypedName","src":"2829:6:22","type":""}]},{"nativeSrc":"2854:63:22","nodeType":"YulAssignment","src":"2854:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2889:9:22","nodeType":"YulIdentifier","src":"2889:9:22"},{"name":"offset","nativeSrc":"2900:6:22","nodeType":"YulIdentifier","src":"2900:6:22"}],"functionName":{"name":"add","nativeSrc":"2885:3:22","nodeType":"YulIdentifier","src":"2885:3:22"},"nativeSrc":"2885:22:22","nodeType":"YulFunctionCall","src":"2885:22:22"},{"name":"dataEnd","nativeSrc":"2909:7:22","nodeType":"YulIdentifier","src":"2909:7:22"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2864:20:22","nodeType":"YulIdentifier","src":"2864:20:22"},"nativeSrc":"2864:53:22","nodeType":"YulFunctionCall","src":"2864:53:22"},"variableNames":[{"name":"value0","nativeSrc":"2854:6:22","nodeType":"YulIdentifier","src":"2854:6:22"}]}]},{"nativeSrc":"2937:118:22","nodeType":"YulBlock","src":"2937:118:22","statements":[{"nativeSrc":"2952:16:22","nodeType":"YulVariableDeclaration","src":"2952:16:22","value":{"kind":"number","nativeSrc":"2966:2:22","nodeType":"YulLiteral","src":"2966:2:22","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2956:6:22","nodeType":"YulTypedName","src":"2956:6:22","type":""}]},{"nativeSrc":"2982:63:22","nodeType":"YulAssignment","src":"2982:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3017:9:22","nodeType":"YulIdentifier","src":"3017:9:22"},{"name":"offset","nativeSrc":"3028:6:22","nodeType":"YulIdentifier","src":"3028:6:22"}],"functionName":{"name":"add","nativeSrc":"3013:3:22","nodeType":"YulIdentifier","src":"3013:3:22"},"nativeSrc":"3013:22:22","nodeType":"YulFunctionCall","src":"3013:22:22"},{"name":"dataEnd","nativeSrc":"3037:7:22","nodeType":"YulIdentifier","src":"3037:7:22"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2992:20:22","nodeType":"YulIdentifier","src":"2992:20:22"},"nativeSrc":"2992:53:22","nodeType":"YulFunctionCall","src":"2992:53:22"},"variableNames":[{"name":"value1","nativeSrc":"2982:6:22","nodeType":"YulIdentifier","src":"2982:6:22"}]}]},{"nativeSrc":"3065:118:22","nodeType":"YulBlock","src":"3065:118:22","statements":[{"nativeSrc":"3080:16:22","nodeType":"YulVariableDeclaration","src":"3080:16:22","value":{"kind":"number","nativeSrc":"3094:2:22","nodeType":"YulLiteral","src":"3094:2:22","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"3084:6:22","nodeType":"YulTypedName","src":"3084:6:22","type":""}]},{"nativeSrc":"3110:63:22","nodeType":"YulAssignment","src":"3110:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3145:9:22","nodeType":"YulIdentifier","src":"3145:9:22"},{"name":"offset","nativeSrc":"3156:6:22","nodeType":"YulIdentifier","src":"3156:6:22"}],"functionName":{"name":"add","nativeSrc":"3141:3:22","nodeType":"YulIdentifier","src":"3141:3:22"},"nativeSrc":"3141:22:22","nodeType":"YulFunctionCall","src":"3141:22:22"},{"name":"dataEnd","nativeSrc":"3165:7:22","nodeType":"YulIdentifier","src":"3165:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"3120:20:22","nodeType":"YulIdentifier","src":"3120:20:22"},"nativeSrc":"3120:53:22","nodeType":"YulFunctionCall","src":"3120:53:22"},"variableNames":[{"name":"value2","nativeSrc":"3110:6:22","nodeType":"YulIdentifier","src":"3110:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"2571:619:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2625:9:22","nodeType":"YulTypedName","src":"2625:9:22","type":""},{"name":"dataEnd","nativeSrc":"2636:7:22","nodeType":"YulTypedName","src":"2636:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2648:6:22","nodeType":"YulTypedName","src":"2648:6:22","type":""},{"name":"value1","nativeSrc":"2656:6:22","nodeType":"YulTypedName","src":"2656:6:22","type":""},{"name":"value2","nativeSrc":"2664:6:22","nodeType":"YulTypedName","src":"2664:6:22","type":""}],"src":"2571:619:22"},{"body":{"nativeSrc":"3238:48:22","nodeType":"YulBlock","src":"3238:48:22","statements":[{"nativeSrc":"3248:32:22","nodeType":"YulAssignment","src":"3248:32:22","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3273:5:22","nodeType":"YulIdentifier","src":"3273:5:22"}],"functionName":{"name":"iszero","nativeSrc":"3266:6:22","nodeType":"YulIdentifier","src":"3266:6:22"},"nativeSrc":"3266:13:22","nodeType":"YulFunctionCall","src":"3266:13:22"}],"functionName":{"name":"iszero","nativeSrc":"3259:6:22","nodeType":"YulIdentifier","src":"3259:6:22"},"nativeSrc":"3259:21:22","nodeType":"YulFunctionCall","src":"3259:21:22"},"variableNames":[{"name":"cleaned","nativeSrc":"3248:7:22","nodeType":"YulIdentifier","src":"3248:7:22"}]}]},"name":"cleanup_t_bool","nativeSrc":"3196:90:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3220:5:22","nodeType":"YulTypedName","src":"3220:5:22","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3230:7:22","nodeType":"YulTypedName","src":"3230:7:22","type":""}],"src":"3196:90:22"},{"body":{"nativeSrc":"3351:50:22","nodeType":"YulBlock","src":"3351:50:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3368:3:22","nodeType":"YulIdentifier","src":"3368:3:22"},{"arguments":[{"name":"value","nativeSrc":"3388:5:22","nodeType":"YulIdentifier","src":"3388:5:22"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"3373:14:22","nodeType":"YulIdentifier","src":"3373:14:22"},"nativeSrc":"3373:21:22","nodeType":"YulFunctionCall","src":"3373:21:22"}],"functionName":{"name":"mstore","nativeSrc":"3361:6:22","nodeType":"YulIdentifier","src":"3361:6:22"},"nativeSrc":"3361:34:22","nodeType":"YulFunctionCall","src":"3361:34:22"},"nativeSrc":"3361:34:22","nodeType":"YulExpressionStatement","src":"3361:34:22"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3292:109:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3339:5:22","nodeType":"YulTypedName","src":"3339:5:22","type":""},{"name":"pos","nativeSrc":"3346:3:22","nodeType":"YulTypedName","src":"3346:3:22","type":""}],"src":"3292:109:22"},{"body":{"nativeSrc":"3499:118:22","nodeType":"YulBlock","src":"3499:118:22","statements":[{"nativeSrc":"3509:26:22","nodeType":"YulAssignment","src":"3509:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"3521:9:22","nodeType":"YulIdentifier","src":"3521:9:22"},{"kind":"number","nativeSrc":"3532:2:22","nodeType":"YulLiteral","src":"3532:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3517:3:22","nodeType":"YulIdentifier","src":"3517:3:22"},"nativeSrc":"3517:18:22","nodeType":"YulFunctionCall","src":"3517:18:22"},"variableNames":[{"name":"tail","nativeSrc":"3509:4:22","nodeType":"YulIdentifier","src":"3509:4:22"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3583:6:22","nodeType":"YulIdentifier","src":"3583:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"3596:9:22","nodeType":"YulIdentifier","src":"3596:9:22"},{"kind":"number","nativeSrc":"3607:1:22","nodeType":"YulLiteral","src":"3607:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3592:3:22","nodeType":"YulIdentifier","src":"3592:3:22"},"nativeSrc":"3592:17:22","nodeType":"YulFunctionCall","src":"3592:17:22"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3545:37:22","nodeType":"YulIdentifier","src":"3545:37:22"},"nativeSrc":"3545:65:22","nodeType":"YulFunctionCall","src":"3545:65:22"},"nativeSrc":"3545:65:22","nodeType":"YulExpressionStatement","src":"3545:65:22"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"3407:210:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3471:9:22","nodeType":"YulTypedName","src":"3471:9:22","type":""},{"name":"value0","nativeSrc":"3483:6:22","nodeType":"YulTypedName","src":"3483:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3494:4:22","nodeType":"YulTypedName","src":"3494:4:22","type":""}],"src":"3407:210:22"},{"body":{"nativeSrc":"3719:73:22","nodeType":"YulBlock","src":"3719:73:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3736:3:22","nodeType":"YulIdentifier","src":"3736:3:22"},{"name":"length","nativeSrc":"3741:6:22","nodeType":"YulIdentifier","src":"3741:6:22"}],"functionName":{"name":"mstore","nativeSrc":"3729:6:22","nodeType":"YulIdentifier","src":"3729:6:22"},"nativeSrc":"3729:19:22","nodeType":"YulFunctionCall","src":"3729:19:22"},"nativeSrc":"3729:19:22","nodeType":"YulExpressionStatement","src":"3729:19:22"},{"nativeSrc":"3757:29:22","nodeType":"YulAssignment","src":"3757:29:22","value":{"arguments":[{"name":"pos","nativeSrc":"3776:3:22","nodeType":"YulIdentifier","src":"3776:3:22"},{"kind":"number","nativeSrc":"3781:4:22","nodeType":"YulLiteral","src":"3781:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3772:3:22","nodeType":"YulIdentifier","src":"3772:3:22"},"nativeSrc":"3772:14:22","nodeType":"YulFunctionCall","src":"3772:14:22"},"variableNames":[{"name":"updated_pos","nativeSrc":"3757:11:22","nodeType":"YulIdentifier","src":"3757:11:22"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"3623:169:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"3691:3:22","nodeType":"YulTypedName","src":"3691:3:22","type":""},{"name":"length","nativeSrc":"3696:6:22","nodeType":"YulTypedName","src":"3696:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"3707:11:22","nodeType":"YulTypedName","src":"3707:11:22","type":""}],"src":"3623:169:22"},{"body":{"nativeSrc":"3904:58:22","nodeType":"YulBlock","src":"3904:58:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"3926:6:22","nodeType":"YulIdentifier","src":"3926:6:22"},{"kind":"number","nativeSrc":"3934:1:22","nodeType":"YulLiteral","src":"3934:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3922:3:22","nodeType":"YulIdentifier","src":"3922:3:22"},"nativeSrc":"3922:14:22","nodeType":"YulFunctionCall","src":"3922:14:22"},{"hexValue":"496e76616c69642056616c75652e","kind":"string","nativeSrc":"3938:16:22","nodeType":"YulLiteral","src":"3938:16:22","type":"","value":"Invalid Value."}],"functionName":{"name":"mstore","nativeSrc":"3915:6:22","nodeType":"YulIdentifier","src":"3915:6:22"},"nativeSrc":"3915:40:22","nodeType":"YulFunctionCall","src":"3915:40:22"},"nativeSrc":"3915:40:22","nodeType":"YulExpressionStatement","src":"3915:40:22"}]},"name":"store_literal_in_memory_efe8f4c43e0a7ce9afba23fb6c993cae9893c4081f1a55c9c3488cdb730ee4a2","nativeSrc":"3798:164:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"3896:6:22","nodeType":"YulTypedName","src":"3896:6:22","type":""}],"src":"3798:164:22"},{"body":{"nativeSrc":"4114:220:22","nodeType":"YulBlock","src":"4114:220:22","statements":[{"nativeSrc":"4124:74:22","nodeType":"YulAssignment","src":"4124:74:22","value":{"arguments":[{"name":"pos","nativeSrc":"4190:3:22","nodeType":"YulIdentifier","src":"4190:3:22"},{"kind":"number","nativeSrc":"4195:2:22","nodeType":"YulLiteral","src":"4195:2:22","type":"","value":"14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"4131:58:22","nodeType":"YulIdentifier","src":"4131:58:22"},"nativeSrc":"4131:67:22","nodeType":"YulFunctionCall","src":"4131:67:22"},"variableNames":[{"name":"pos","nativeSrc":"4124:3:22","nodeType":"YulIdentifier","src":"4124:3:22"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"4296:3:22","nodeType":"YulIdentifier","src":"4296:3:22"}],"functionName":{"name":"store_literal_in_memory_efe8f4c43e0a7ce9afba23fb6c993cae9893c4081f1a55c9c3488cdb730ee4a2","nativeSrc":"4207:88:22","nodeType":"YulIdentifier","src":"4207:88:22"},"nativeSrc":"4207:93:22","nodeType":"YulFunctionCall","src":"4207:93:22"},"nativeSrc":"4207:93:22","nodeType":"YulExpressionStatement","src":"4207:93:22"},{"nativeSrc":"4309:19:22","nodeType":"YulAssignment","src":"4309:19:22","value":{"arguments":[{"name":"pos","nativeSrc":"4320:3:22","nodeType":"YulIdentifier","src":"4320:3:22"},{"kind":"number","nativeSrc":"4325:2:22","nodeType":"YulLiteral","src":"4325:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4316:3:22","nodeType":"YulIdentifier","src":"4316:3:22"},"nativeSrc":"4316:12:22","nodeType":"YulFunctionCall","src":"4316:12:22"},"variableNames":[{"name":"end","nativeSrc":"4309:3:22","nodeType":"YulIdentifier","src":"4309:3:22"}]}]},"name":"abi_encode_t_stringliteral_efe8f4c43e0a7ce9afba23fb6c993cae9893c4081f1a55c9c3488cdb730ee4a2_to_t_string_memory_ptr_fromStack","nativeSrc":"3968:366:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"4102:3:22","nodeType":"YulTypedName","src":"4102:3:22","type":""}],"returnVariables":[{"name":"end","nativeSrc":"4110:3:22","nodeType":"YulTypedName","src":"4110:3:22","type":""}],"src":"3968:366:22"},{"body":{"nativeSrc":"4511:248:22","nodeType":"YulBlock","src":"4511:248:22","statements":[{"nativeSrc":"4521:26:22","nodeType":"YulAssignment","src":"4521:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"4533:9:22","nodeType":"YulIdentifier","src":"4533:9:22"},{"kind":"number","nativeSrc":"4544:2:22","nodeType":"YulLiteral","src":"4544:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4529:3:22","nodeType":"YulIdentifier","src":"4529:3:22"},"nativeSrc":"4529:18:22","nodeType":"YulFunctionCall","src":"4529:18:22"},"variableNames":[{"name":"tail","nativeSrc":"4521:4:22","nodeType":"YulIdentifier","src":"4521:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4568:9:22","nodeType":"YulIdentifier","src":"4568:9:22"},{"kind":"number","nativeSrc":"4579:1:22","nodeType":"YulLiteral","src":"4579:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4564:3:22","nodeType":"YulIdentifier","src":"4564:3:22"},"nativeSrc":"4564:17:22","nodeType":"YulFunctionCall","src":"4564:17:22"},{"arguments":[{"name":"tail","nativeSrc":"4587:4:22","nodeType":"YulIdentifier","src":"4587:4:22"},{"name":"headStart","nativeSrc":"4593:9:22","nodeType":"YulIdentifier","src":"4593:9:22"}],"functionName":{"name":"sub","nativeSrc":"4583:3:22","nodeType":"YulIdentifier","src":"4583:3:22"},"nativeSrc":"4583:20:22","nodeType":"YulFunctionCall","src":"4583:20:22"}],"functionName":{"name":"mstore","nativeSrc":"4557:6:22","nodeType":"YulIdentifier","src":"4557:6:22"},"nativeSrc":"4557:47:22","nodeType":"YulFunctionCall","src":"4557:47:22"},"nativeSrc":"4557:47:22","nodeType":"YulExpressionStatement","src":"4557:47:22"},{"nativeSrc":"4613:139:22","nodeType":"YulAssignment","src":"4613:139:22","value":{"arguments":[{"name":"tail","nativeSrc":"4747:4:22","nodeType":"YulIdentifier","src":"4747:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_efe8f4c43e0a7ce9afba23fb6c993cae9893c4081f1a55c9c3488cdb730ee4a2_to_t_string_memory_ptr_fromStack","nativeSrc":"4621:124:22","nodeType":"YulIdentifier","src":"4621:124:22"},"nativeSrc":"4621:131:22","nodeType":"YulFunctionCall","src":"4621:131:22"},"variableNames":[{"name":"tail","nativeSrc":"4613:4:22","nodeType":"YulIdentifier","src":"4613:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_efe8f4c43e0a7ce9afba23fb6c993cae9893c4081f1a55c9c3488cdb730ee4a2__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4340:419:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4491:9:22","nodeType":"YulTypedName","src":"4491:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4506:4:22","nodeType":"YulTypedName","src":"4506:4:22","type":""}],"src":"4340:419:22"},{"body":{"nativeSrc":"4891:206:22","nodeType":"YulBlock","src":"4891:206:22","statements":[{"nativeSrc":"4901:26:22","nodeType":"YulAssignment","src":"4901:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"4913:9:22","nodeType":"YulIdentifier","src":"4913:9:22"},{"kind":"number","nativeSrc":"4924:2:22","nodeType":"YulLiteral","src":"4924:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4909:3:22","nodeType":"YulIdentifier","src":"4909:3:22"},"nativeSrc":"4909:18:22","nodeType":"YulFunctionCall","src":"4909:18:22"},"variableNames":[{"name":"tail","nativeSrc":"4901:4:22","nodeType":"YulIdentifier","src":"4901:4:22"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4981:6:22","nodeType":"YulIdentifier","src":"4981:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"4994:9:22","nodeType":"YulIdentifier","src":"4994:9:22"},{"kind":"number","nativeSrc":"5005:1:22","nodeType":"YulLiteral","src":"5005:1:22","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4990:3:22","nodeType":"YulIdentifier","src":"4990:3:22"},"nativeSrc":"4990:17:22","nodeType":"YulFunctionCall","src":"4990:17:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"4937:43:22","nodeType":"YulIdentifier","src":"4937:43:22"},"nativeSrc":"4937:71:22","nodeType":"YulFunctionCall","src":"4937:71:22"},"nativeSrc":"4937:71:22","nodeType":"YulExpressionStatement","src":"4937:71:22"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"5062:6:22","nodeType":"YulIdentifier","src":"5062:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"5075:9:22","nodeType":"YulIdentifier","src":"5075:9:22"},{"kind":"number","nativeSrc":"5086:2:22","nodeType":"YulLiteral","src":"5086:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5071:3:22","nodeType":"YulIdentifier","src":"5071:3:22"},"nativeSrc":"5071:18:22","nodeType":"YulFunctionCall","src":"5071:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"5018:43:22","nodeType":"YulIdentifier","src":"5018:43:22"},"nativeSrc":"5018:72:22","nodeType":"YulFunctionCall","src":"5018:72:22"},"nativeSrc":"5018:72:22","nodeType":"YulExpressionStatement","src":"5018:72:22"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"4765:332:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4855:9:22","nodeType":"YulTypedName","src":"4855:9:22","type":""},{"name":"value1","nativeSrc":"4867:6:22","nodeType":"YulTypedName","src":"4867:6:22","type":""},{"name":"value0","nativeSrc":"4875:6:22","nodeType":"YulTypedName","src":"4875:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4886:4:22","nodeType":"YulTypedName","src":"4886:4:22","type":""}],"src":"4765:332:22"},{"body":{"nativeSrc":"5131:152:22","nodeType":"YulBlock","src":"5131:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5148:1:22","nodeType":"YulLiteral","src":"5148:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"5151:77:22","nodeType":"YulLiteral","src":"5151:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"5141:6:22","nodeType":"YulIdentifier","src":"5141:6:22"},"nativeSrc":"5141:88:22","nodeType":"YulFunctionCall","src":"5141:88:22"},"nativeSrc":"5141:88:22","nodeType":"YulExpressionStatement","src":"5141:88:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5245:1:22","nodeType":"YulLiteral","src":"5245:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"5248:4:22","nodeType":"YulLiteral","src":"5248:4:22","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"5238:6:22","nodeType":"YulIdentifier","src":"5238:6:22"},"nativeSrc":"5238:15:22","nodeType":"YulFunctionCall","src":"5238:15:22"},"nativeSrc":"5238:15:22","nodeType":"YulExpressionStatement","src":"5238:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5269:1:22","nodeType":"YulLiteral","src":"5269:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"5272:4:22","nodeType":"YulLiteral","src":"5272:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5262:6:22","nodeType":"YulIdentifier","src":"5262:6:22"},"nativeSrc":"5262:15:22","nodeType":"YulFunctionCall","src":"5262:15:22"},"nativeSrc":"5262:15:22","nodeType":"YulExpressionStatement","src":"5262:15:22"}]},"name":"panic_error_0x11","nativeSrc":"5103:180:22","nodeType":"YulFunctionDefinition","src":"5103:180:22"},{"body":{"nativeSrc":"5337:362:22","nodeType":"YulBlock","src":"5337:362:22","statements":[{"nativeSrc":"5347:25:22","nodeType":"YulAssignment","src":"5347:25:22","value":{"arguments":[{"name":"x","nativeSrc":"5370:1:22","nodeType":"YulIdentifier","src":"5370:1:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5352:17:22","nodeType":"YulIdentifier","src":"5352:17:22"},"nativeSrc":"5352:20:22","nodeType":"YulFunctionCall","src":"5352:20:22"},"variableNames":[{"name":"x","nativeSrc":"5347:1:22","nodeType":"YulIdentifier","src":"5347:1:22"}]},{"nativeSrc":"5381:25:22","nodeType":"YulAssignment","src":"5381:25:22","value":{"arguments":[{"name":"y","nativeSrc":"5404:1:22","nodeType":"YulIdentifier","src":"5404:1:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5386:17:22","nodeType":"YulIdentifier","src":"5386:17:22"},"nativeSrc":"5386:20:22","nodeType":"YulFunctionCall","src":"5386:20:22"},"variableNames":[{"name":"y","nativeSrc":"5381:1:22","nodeType":"YulIdentifier","src":"5381:1:22"}]},{"nativeSrc":"5415:28:22","nodeType":"YulVariableDeclaration","src":"5415:28:22","value":{"arguments":[{"name":"x","nativeSrc":"5438:1:22","nodeType":"YulIdentifier","src":"5438:1:22"},{"name":"y","nativeSrc":"5441:1:22","nodeType":"YulIdentifier","src":"5441:1:22"}],"functionName":{"name":"mul","nativeSrc":"5434:3:22","nodeType":"YulIdentifier","src":"5434:3:22"},"nativeSrc":"5434:9:22","nodeType":"YulFunctionCall","src":"5434:9:22"},"variables":[{"name":"product_raw","nativeSrc":"5419:11:22","nodeType":"YulTypedName","src":"5419:11:22","type":""}]},{"nativeSrc":"5452:41:22","nodeType":"YulAssignment","src":"5452:41:22","value":{"arguments":[{"name":"product_raw","nativeSrc":"5481:11:22","nodeType":"YulIdentifier","src":"5481:11:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5463:17:22","nodeType":"YulIdentifier","src":"5463:17:22"},"nativeSrc":"5463:30:22","nodeType":"YulFunctionCall","src":"5463:30:22"},"variableNames":[{"name":"product","nativeSrc":"5452:7:22","nodeType":"YulIdentifier","src":"5452:7:22"}]},{"body":{"nativeSrc":"5670:22:22","nodeType":"YulBlock","src":"5670:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"5672:16:22","nodeType":"YulIdentifier","src":"5672:16:22"},"nativeSrc":"5672:18:22","nodeType":"YulFunctionCall","src":"5672:18:22"},"nativeSrc":"5672:18:22","nodeType":"YulExpressionStatement","src":"5672:18:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"5603:1:22","nodeType":"YulIdentifier","src":"5603:1:22"}],"functionName":{"name":"iszero","nativeSrc":"5596:6:22","nodeType":"YulIdentifier","src":"5596:6:22"},"nativeSrc":"5596:9:22","nodeType":"YulFunctionCall","src":"5596:9:22"},{"arguments":[{"name":"y","nativeSrc":"5626:1:22","nodeType":"YulIdentifier","src":"5626:1:22"},{"arguments":[{"name":"product","nativeSrc":"5633:7:22","nodeType":"YulIdentifier","src":"5633:7:22"},{"name":"x","nativeSrc":"5642:1:22","nodeType":"YulIdentifier","src":"5642:1:22"}],"functionName":{"name":"div","nativeSrc":"5629:3:22","nodeType":"YulIdentifier","src":"5629:3:22"},"nativeSrc":"5629:15:22","nodeType":"YulFunctionCall","src":"5629:15:22"}],"functionName":{"name":"eq","nativeSrc":"5623:2:22","nodeType":"YulIdentifier","src":"5623:2:22"},"nativeSrc":"5623:22:22","nodeType":"YulFunctionCall","src":"5623:22:22"}],"functionName":{"name":"or","nativeSrc":"5576:2:22","nodeType":"YulIdentifier","src":"5576:2:22"},"nativeSrc":"5576:83:22","nodeType":"YulFunctionCall","src":"5576:83:22"}],"functionName":{"name":"iszero","nativeSrc":"5556:6:22","nodeType":"YulIdentifier","src":"5556:6:22"},"nativeSrc":"5556:113:22","nodeType":"YulFunctionCall","src":"5556:113:22"},"nativeSrc":"5553:139:22","nodeType":"YulIf","src":"5553:139:22"}]},"name":"checked_mul_t_uint256","nativeSrc":"5289:410:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"5320:1:22","nodeType":"YulTypedName","src":"5320:1:22","type":""},{"name":"y","nativeSrc":"5323:1:22","nodeType":"YulTypedName","src":"5323:1:22","type":""}],"returnVariables":[{"name":"product","nativeSrc":"5329:7:22","nodeType":"YulTypedName","src":"5329:7:22","type":""}],"src":"5289:410:22"},{"body":{"nativeSrc":"5733:152:22","nodeType":"YulBlock","src":"5733:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5750:1:22","nodeType":"YulLiteral","src":"5750:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"5753:77:22","nodeType":"YulLiteral","src":"5753:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"5743:6:22","nodeType":"YulIdentifier","src":"5743:6:22"},"nativeSrc":"5743:88:22","nodeType":"YulFunctionCall","src":"5743:88:22"},"nativeSrc":"5743:88:22","nodeType":"YulExpressionStatement","src":"5743:88:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5847:1:22","nodeType":"YulLiteral","src":"5847:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"5850:4:22","nodeType":"YulLiteral","src":"5850:4:22","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"5840:6:22","nodeType":"YulIdentifier","src":"5840:6:22"},"nativeSrc":"5840:15:22","nodeType":"YulFunctionCall","src":"5840:15:22"},"nativeSrc":"5840:15:22","nodeType":"YulExpressionStatement","src":"5840:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5871:1:22","nodeType":"YulLiteral","src":"5871:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"5874:4:22","nodeType":"YulLiteral","src":"5874:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5864:6:22","nodeType":"YulIdentifier","src":"5864:6:22"},"nativeSrc":"5864:15:22","nodeType":"YulFunctionCall","src":"5864:15:22"},"nativeSrc":"5864:15:22","nodeType":"YulExpressionStatement","src":"5864:15:22"}]},"name":"panic_error_0x12","nativeSrc":"5705:180:22","nodeType":"YulFunctionDefinition","src":"5705:180:22"},{"body":{"nativeSrc":"5933:143:22","nodeType":"YulBlock","src":"5933:143:22","statements":[{"nativeSrc":"5943:25:22","nodeType":"YulAssignment","src":"5943:25:22","value":{"arguments":[{"name":"x","nativeSrc":"5966:1:22","nodeType":"YulIdentifier","src":"5966:1:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5948:17:22","nodeType":"YulIdentifier","src":"5948:17:22"},"nativeSrc":"5948:20:22","nodeType":"YulFunctionCall","src":"5948:20:22"},"variableNames":[{"name":"x","nativeSrc":"5943:1:22","nodeType":"YulIdentifier","src":"5943:1:22"}]},{"nativeSrc":"5977:25:22","nodeType":"YulAssignment","src":"5977:25:22","value":{"arguments":[{"name":"y","nativeSrc":"6000:1:22","nodeType":"YulIdentifier","src":"6000:1:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5982:17:22","nodeType":"YulIdentifier","src":"5982:17:22"},"nativeSrc":"5982:20:22","nodeType":"YulFunctionCall","src":"5982:20:22"},"variableNames":[{"name":"y","nativeSrc":"5977:1:22","nodeType":"YulIdentifier","src":"5977:1:22"}]},{"body":{"nativeSrc":"6024:22:22","nodeType":"YulBlock","src":"6024:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"6026:16:22","nodeType":"YulIdentifier","src":"6026:16:22"},"nativeSrc":"6026:18:22","nodeType":"YulFunctionCall","src":"6026:18:22"},"nativeSrc":"6026:18:22","nodeType":"YulExpressionStatement","src":"6026:18:22"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"6021:1:22","nodeType":"YulIdentifier","src":"6021:1:22"}],"functionName":{"name":"iszero","nativeSrc":"6014:6:22","nodeType":"YulIdentifier","src":"6014:6:22"},"nativeSrc":"6014:9:22","nodeType":"YulFunctionCall","src":"6014:9:22"},"nativeSrc":"6011:35:22","nodeType":"YulIf","src":"6011:35:22"},{"nativeSrc":"6056:14:22","nodeType":"YulAssignment","src":"6056:14:22","value":{"arguments":[{"name":"x","nativeSrc":"6065:1:22","nodeType":"YulIdentifier","src":"6065:1:22"},{"name":"y","nativeSrc":"6068:1:22","nodeType":"YulIdentifier","src":"6068:1:22"}],"functionName":{"name":"div","nativeSrc":"6061:3:22","nodeType":"YulIdentifier","src":"6061:3:22"},"nativeSrc":"6061:9:22","nodeType":"YulFunctionCall","src":"6061:9:22"},"variableNames":[{"name":"r","nativeSrc":"6056:1:22","nodeType":"YulIdentifier","src":"6056:1:22"}]}]},"name":"checked_div_t_uint256","nativeSrc":"5891:185:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"5922:1:22","nodeType":"YulTypedName","src":"5922:1:22","type":""},{"name":"y","nativeSrc":"5925:1:22","nodeType":"YulTypedName","src":"5925:1:22","type":""}],"returnVariables":[{"name":"r","nativeSrc":"5931:1:22","nodeType":"YulTypedName","src":"5931:1:22","type":""}],"src":"5891:185:22"},{"body":{"nativeSrc":"6127:149:22","nodeType":"YulBlock","src":"6127:149:22","statements":[{"nativeSrc":"6137:25:22","nodeType":"YulAssignment","src":"6137:25:22","value":{"arguments":[{"name":"x","nativeSrc":"6160:1:22","nodeType":"YulIdentifier","src":"6160:1:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6142:17:22","nodeType":"YulIdentifier","src":"6142:17:22"},"nativeSrc":"6142:20:22","nodeType":"YulFunctionCall","src":"6142:20:22"},"variableNames":[{"name":"x","nativeSrc":"6137:1:22","nodeType":"YulIdentifier","src":"6137:1:22"}]},{"nativeSrc":"6171:25:22","nodeType":"YulAssignment","src":"6171:25:22","value":{"arguments":[{"name":"y","nativeSrc":"6194:1:22","nodeType":"YulIdentifier","src":"6194:1:22"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6176:17:22","nodeType":"YulIdentifier","src":"6176:17:22"},"nativeSrc":"6176:20:22","nodeType":"YulFunctionCall","src":"6176:20:22"},"variableNames":[{"name":"y","nativeSrc":"6171:1:22","nodeType":"YulIdentifier","src":"6171:1:22"}]},{"nativeSrc":"6205:17:22","nodeType":"YulAssignment","src":"6205:17:22","value":{"arguments":[{"name":"x","nativeSrc":"6217:1:22","nodeType":"YulIdentifier","src":"6217:1:22"},{"name":"y","nativeSrc":"6220:1:22","nodeType":"YulIdentifier","src":"6220:1:22"}],"functionName":{"name":"sub","nativeSrc":"6213:3:22","nodeType":"YulIdentifier","src":"6213:3:22"},"nativeSrc":"6213:9:22","nodeType":"YulFunctionCall","src":"6213:9:22"},"variableNames":[{"name":"diff","nativeSrc":"6205:4:22","nodeType":"YulIdentifier","src":"6205:4:22"}]},{"body":{"nativeSrc":"6247:22:22","nodeType":"YulBlock","src":"6247:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"6249:16:22","nodeType":"YulIdentifier","src":"6249:16:22"},"nativeSrc":"6249:18:22","nodeType":"YulFunctionCall","src":"6249:18:22"},"nativeSrc":"6249:18:22","nodeType":"YulExpressionStatement","src":"6249:18:22"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"6238:4:22","nodeType":"YulIdentifier","src":"6238:4:22"},{"name":"x","nativeSrc":"6244:1:22","nodeType":"YulIdentifier","src":"6244:1:22"}],"functionName":{"name":"gt","nativeSrc":"6235:2:22","nodeType":"YulIdentifier","src":"6235:2:22"},"nativeSrc":"6235:11:22","nodeType":"YulFunctionCall","src":"6235:11:22"},"nativeSrc":"6232:37:22","nodeType":"YulIf","src":"6232:37:22"}]},"name":"checked_sub_t_uint256","nativeSrc":"6082:194:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"6113:1:22","nodeType":"YulTypedName","src":"6113:1:22","type":""},{"name":"y","nativeSrc":"6116:1:22","nodeType":"YulTypedName","src":"6116:1:22","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"6122:4:22","nodeType":"YulTypedName","src":"6122:4:22","type":""}],"src":"6082:194:22"},{"body":{"nativeSrc":"6310:152:22","nodeType":"YulBlock","src":"6310:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6327:1:22","nodeType":"YulLiteral","src":"6327:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"6330:77:22","nodeType":"YulLiteral","src":"6330:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"6320:6:22","nodeType":"YulIdentifier","src":"6320:6:22"},"nativeSrc":"6320:88:22","nodeType":"YulFunctionCall","src":"6320:88:22"},"nativeSrc":"6320:88:22","nodeType":"YulExpressionStatement","src":"6320:88:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6424:1:22","nodeType":"YulLiteral","src":"6424:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"6427:4:22","nodeType":"YulLiteral","src":"6427:4:22","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"6417:6:22","nodeType":"YulIdentifier","src":"6417:6:22"},"nativeSrc":"6417:15:22","nodeType":"YulFunctionCall","src":"6417:15:22"},"nativeSrc":"6417:15:22","nodeType":"YulExpressionStatement","src":"6417:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6448:1:22","nodeType":"YulLiteral","src":"6448:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"6451:4:22","nodeType":"YulLiteral","src":"6451:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6441:6:22","nodeType":"YulIdentifier","src":"6441:6:22"},"nativeSrc":"6441:15:22","nodeType":"YulFunctionCall","src":"6441:15:22"},"nativeSrc":"6441:15:22","nodeType":"YulExpressionStatement","src":"6441:15:22"}]},"name":"panic_error_0x32","nativeSrc":"6282:180:22","nodeType":"YulFunctionDefinition","src":"6282:180:22"},{"body":{"nativeSrc":"6496:152:22","nodeType":"YulBlock","src":"6496:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6513:1:22","nodeType":"YulLiteral","src":"6513:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"6516:77:22","nodeType":"YulLiteral","src":"6516:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"6506:6:22","nodeType":"YulIdentifier","src":"6506:6:22"},"nativeSrc":"6506:88:22","nodeType":"YulFunctionCall","src":"6506:88:22"},"nativeSrc":"6506:88:22","nodeType":"YulExpressionStatement","src":"6506:88:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6610:1:22","nodeType":"YulLiteral","src":"6610:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"6613:4:22","nodeType":"YulLiteral","src":"6613:4:22","type":"","value":"0x31"}],"functionName":{"name":"mstore","nativeSrc":"6603:6:22","nodeType":"YulIdentifier","src":"6603:6:22"},"nativeSrc":"6603:15:22","nodeType":"YulFunctionCall","src":"6603:15:22"},"nativeSrc":"6603:15:22","nodeType":"YulExpressionStatement","src":"6603:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6634:1:22","nodeType":"YulLiteral","src":"6634:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"6637:4:22","nodeType":"YulLiteral","src":"6637:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6627:6:22","nodeType":"YulIdentifier","src":"6627:6:22"},"nativeSrc":"6627:15:22","nodeType":"YulFunctionCall","src":"6627:15:22"},"nativeSrc":"6627:15:22","nodeType":"YulExpressionStatement","src":"6627:15:22"}]},"name":"panic_error_0x31","nativeSrc":"6468:180:22","nodeType":"YulFunctionDefinition","src":"6468:180:22"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_efe8f4c43e0a7ce9afba23fb6c993cae9893c4081f1a55c9c3488cdb730ee4a2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Value.\")\n\n    }\n\n    function abi_encode_t_stringliteral_efe8f4c43e0a7ce9afba23fb6c993cae9893c4081f1a55c9c3488cdb730ee4a2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_efe8f4c43e0a7ce9afba23fb6c993cae9893c4081f1a55c9c3488cdb730ee4a2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_efe8f4c43e0a7ce9afba23fb6c993cae9893c4081f1a55c9c3488cdb730ee4a2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_efe8f4c43e0a7ce9afba23fb6c993cae9893c4081f1a55c9c3488cdb730ee4a2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n}\n","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100eb578063ae7b6d1614610109578063d7ad21ac14610127578063f2fde38b1461015757610088565b80630ed9cc4c1461008d578063699abb3c146100a9578063705931fa146100c5578063715018a6146100e1575b600080fd5b6100a760048036038101906100a2919061080a565b610173565b005b6100c360048036038101906100be919061086d565b6101e7565b005b6100df60048036038101906100da919061080a565b61027d565b005b6100e96102f1565b005b6100f3610305565b60405161010091906108a9565b60405180910390f35b61011161032e565b60405161011e91906108d3565b60405180910390f35b610141600480360381019061013c91906108ee565b610334565b60405161014e91906108d3565b60405180910390f35b610171600480360381019061016c919061080a565b610397565b005b61017b61041d565b61018f8160016104a490919063ffffffff16565b156101e4578073ffffffffffffffffffffffffffffffffffffffff167f36ee46fa09c2419f7bcf8135c2bdd56bc882be141cb075961717003bed74367d60006040516101db919061095c565b60405180910390a25b50565b6101ef61041d565b60008110610232576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610229906109d4565b60405180910390fd5b60006003549050816003819055507f4953fbf85b1bef649a55e328880dc688093c62b90bc90dec0ffcb6a1c5cce0a581836040516102719291906109f4565b60405180910390a15050565b61028561041d565b6102998160016104d490919063ffffffff16565b156102ee578073ffffffffffffffffffffffffffffffffffffffff167f36ee46fa09c2419f7bcf8135c2bdd56bc882be141cb075961717003bed74367d60016040516102e5919061095c565b60405180910390a25b50565b6102f961041d565b6103036000610504565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60035481565b600061034a8460016105c890919063ffffffff16565b8061036557506103648360016105c890919063ffffffff16565b5b156103735760009050610390565b6064600354836103839190610a4c565b61038d9190610abd565b90505b9392505050565b61039f61041d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104115760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161040891906108a9565b60405180910390fd5b61041a81610504565b50565b6104256105f8565b73ffffffffffffffffffffffffffffffffffffffff16610443610305565b73ffffffffffffffffffffffffffffffffffffffff16146104a2576104666105f8565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161049991906108a9565b60405180910390fd5b565b60006104cc836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610600565b905092915050565b60006104fc836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610714565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006105f0836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610784565b905092915050565b600033905090565b600080836001016000848152602001908152602001600020549050600081146107085760006001826106329190610aee565b905060006001866000018054905061064a9190610aee565b90508082146106b957600086600001828154811061066b5761066a610b22565b5b906000526020600020015490508087600001848154811061068f5761068e610b22565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b856000018054806106cd576106cc610b51565b5b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061070e565b60009150505b92915050565b60006107208383610784565b61077957826000018290806001815401808255809150506001900390600052602060002001600090919091909150558260000180549050836001016000848152602001908152602001600020819055506001905061077e565b600090505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107d7826107ac565b9050919050565b6107e7816107cc565b81146107f257600080fd5b50565b600081359050610804816107de565b92915050565b6000602082840312156108205761081f6107a7565b5b600061082e848285016107f5565b91505092915050565b6000819050919050565b61084a81610837565b811461085557600080fd5b50565b60008135905061086781610841565b92915050565b600060208284031215610883576108826107a7565b5b600061089184828501610858565b91505092915050565b6108a3816107cc565b82525050565b60006020820190506108be600083018461089a565b92915050565b6108cd81610837565b82525050565b60006020820190506108e860008301846108c4565b92915050565b600080600060608486031215610907576109066107a7565b5b6000610915868287016107f5565b9350506020610926868287016107f5565b925050604061093786828701610858565b9150509250925092565b60008115159050919050565b61095681610941565b82525050565b6000602082019050610971600083018461094d565b92915050565b600082825260208201905092915050565b7f496e76616c69642056616c75652e000000000000000000000000000000000000600082015250565b60006109be600e83610977565b91506109c982610988565b602082019050919050565b600060208201905081810360008301526109ed816109b1565b9050919050565b6000604082019050610a0960008301856108c4565b610a1660208301846108c4565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a5782610837565b9150610a6283610837565b9250828202610a7081610837565b91508282048414831517610a8757610a86610a1d565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ac882610837565b9150610ad383610837565b925082610ae357610ae2610a8e565b5b828204905092915050565b6000610af982610837565b9150610b0483610837565b9250828203905081811115610b1c57610b1b610a1d565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220a1e8075ad8fc17d9ebe5335b8afde056e21c67771d16515e6e61752e3c046ec464736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0xAE7B6D16 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0xD7AD21AC EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x157 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0xED9CC4C EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x699ABB3C EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x705931FA EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x80A JUMP JUMPDEST PUSH2 0x173 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x86D JUMP JUMPDEST PUSH2 0x1E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDA SWAP2 SWAP1 PUSH2 0x80A JUMP JUMPDEST PUSH2 0x27D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE9 PUSH2 0x2F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF3 PUSH2 0x305 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x100 SWAP2 SWAP1 PUSH2 0x8A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x111 PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x8D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x8EE JUMP JUMPDEST PUSH2 0x334 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x8D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x80A JUMP JUMPDEST PUSH2 0x397 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17B PUSH2 0x41D JUMP JUMPDEST PUSH2 0x18F DUP2 PUSH1 0x1 PUSH2 0x4A4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x1E4 JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x36EE46FA09C2419F7BCF8135C2BDD56BC882BE141CB075961717003BED74367D PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x95C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMP JUMPDEST PUSH2 0x1EF PUSH2 0x41D JUMP JUMPDEST PUSH1 0x0 DUP2 LT PUSH2 0x232 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x229 SWAP1 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0x4953FBF85B1BEF649A55E328880DC688093C62B90BC90DEC0FFCB6A1C5CCE0A5 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x271 SWAP3 SWAP2 SWAP1 PUSH2 0x9F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x285 PUSH2 0x41D JUMP JUMPDEST PUSH2 0x299 DUP2 PUSH1 0x1 PUSH2 0x4D4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x2EE JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x36EE46FA09C2419F7BCF8135C2BDD56BC882BE141CB075961717003BED74367D PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x95C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMP JUMPDEST PUSH2 0x2F9 PUSH2 0x41D JUMP JUMPDEST PUSH2 0x303 PUSH1 0x0 PUSH2 0x504 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34A DUP5 PUSH1 0x1 PUSH2 0x5C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH2 0x365 JUMPI POP PUSH2 0x364 DUP4 PUSH1 0x1 PUSH2 0x5C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST ISZERO PUSH2 0x373 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x390 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x3 SLOAD DUP4 PUSH2 0x383 SWAP2 SWAP1 PUSH2 0xA4C JUMP JUMPDEST PUSH2 0x38D SWAP2 SWAP1 PUSH2 0xABD JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x39F PUSH2 0x41D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x411 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x408 SWAP2 SWAP1 PUSH2 0x8A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x41A DUP2 PUSH2 0x504 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x425 PUSH2 0x5F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x443 PUSH2 0x305 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4A2 JUMPI PUSH2 0x466 PUSH2 0x5F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x499 SWAP2 SWAP1 PUSH2 0x8A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CC DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x600 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FC DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x714 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F0 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x784 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x708 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x632 SWAP2 SWAP1 PUSH2 0xAEE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x64A SWAP2 SWAP1 PUSH2 0xAEE JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0x6B9 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x66B JUMPI PUSH2 0x66A PUSH2 0xB22 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x68F JUMPI PUSH2 0x68E PUSH2 0xB22 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x6CD JUMPI PUSH2 0x6CC PUSH2 0xB51 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x70E JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x720 DUP4 DUP4 PUSH2 0x784 JUMP JUMPDEST PUSH2 0x779 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x77E JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D7 DUP3 PUSH2 0x7AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7E7 DUP2 PUSH2 0x7CC JUMP JUMPDEST DUP2 EQ PUSH2 0x7F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x804 DUP2 PUSH2 0x7DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x820 JUMPI PUSH2 0x81F PUSH2 0x7A7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x82E DUP5 DUP3 DUP6 ADD PUSH2 0x7F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x84A DUP2 PUSH2 0x837 JUMP JUMPDEST DUP2 EQ PUSH2 0x855 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x867 DUP2 PUSH2 0x841 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x883 JUMPI PUSH2 0x882 PUSH2 0x7A7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x891 DUP5 DUP3 DUP6 ADD PUSH2 0x858 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8A3 DUP2 PUSH2 0x7CC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8BE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x89A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8CD DUP2 PUSH2 0x837 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8E8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x907 JUMPI PUSH2 0x906 PUSH2 0x7A7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x915 DUP7 DUP3 DUP8 ADD PUSH2 0x7F5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x926 DUP7 DUP3 DUP8 ADD PUSH2 0x7F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x937 DUP7 DUP3 DUP8 ADD PUSH2 0x858 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x956 DUP2 PUSH2 0x941 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x971 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x94D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C69642056616C75652E000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9BE PUSH1 0xE DUP4 PUSH2 0x977 JUMP JUMPDEST SWAP2 POP PUSH2 0x9C9 DUP3 PUSH2 0x988 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9ED DUP2 PUSH2 0x9B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA09 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x8C4 JUMP JUMPDEST PUSH2 0xA16 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8C4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA57 DUP3 PUSH2 0x837 JUMP JUMPDEST SWAP2 POP PUSH2 0xA62 DUP4 PUSH2 0x837 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xA70 DUP2 PUSH2 0x837 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xA87 JUMPI PUSH2 0xA86 PUSH2 0xA1D JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAC8 DUP3 PUSH2 0x837 JUMP JUMPDEST SWAP2 POP PUSH2 0xAD3 DUP4 PUSH2 0x837 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xAE3 JUMPI PUSH2 0xAE2 PUSH2 0xA8E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF9 DUP3 PUSH2 0x837 JUMP JUMPDEST SWAP2 POP PUSH2 0xB04 DUP4 PUSH2 0x837 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xB1C JUMPI PUSH2 0xB1B PUSH2 0xA1D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0xE8 SMOD GAS 0xD8 0xFC OR 0xD9 0xEB 0xE5 CALLER JUMPDEST DUP11 REVERT 0xE0 JUMP 0xE2 SHR PUSH8 0x771D16515E6E6175 0x2E EXTCODECOPY DIV PUSH15 0xC464736F6C63430008180033000000 ","sourceMap":"656:2443:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2918:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2090:334;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2580:172;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;953:28:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1584:310;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2918:179:21;1531:13:0;:11;:13::i;:::-;2995:27:21::1;3012:9;2995;:16;;:27;;;;:::i;:::-;2991:100;;;3063:9;3043:37;;;3074:5;3043:37;;;;;;:::i;:::-;;;;;;;;2991:100;2918:179:::0;:::o;2090:334::-;1531:13:0;:11;:13::i;:::-;2211:1:21::1;2192:16;:20;2171:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;2263:24;2290:13;;2263:40;;2329:16;2313:13;:32;;;;2361:56;2382:16;2400;2361:56;;;;;;;:::i;:::-;;;;;;;;2161:263;2090:334:::0;:::o;2580:172::-;1531:13:0;:11;:13::i;:::-;2654:24:21::1;2668:9;2654;:13;;:24;;;;:::i;:::-;2650:96;;;2719:9;2699:36;;;2730:4;2699:36;;;;;;:::i;:::-;;;;;;;;2650:96;2580:172:::0;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;953:28:21:-;;;;:::o;1584:310::-;1719:7;1742:30;1761:10;1742:9;:18;;:30;;;;:::i;:::-;:65;;;;1776:31;1795:11;1776:9;:18;;:31;;;;:::i;:::-;1742:65;1738:104;;;1830:1;1823:8;;;;1738:104;1884:3;1868:13;;1859:6;:22;;;;:::i;:::-;:28;;;;:::i;:::-;1852:35;;1584:310;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;8634:156:18:-;8707:4;8730:53;8738:3;:10;;8774:5;8758:23;;8750:32;;8730:7;:53::i;:::-;8723:60;;8634:156;;;;:::o;8316:150::-;8386:4;8409:50;8414:3;:10;;8450:5;8434:23;;8426:32;;8409:4;:50::i;:::-;8402:57;;8316:150;;;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;8871:165:18:-;8951:4;8974:55;8984:3;:10;;9020:5;9004:23;;8996:32;;8974:9;:55::i;:::-;8967:62;;8871:165;;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;2815:1368:18:-;2881:4;2991:16;3010:3;:14;;:21;3025:5;3010:21;;;;;;;;;;;;2991:40;;3058:1;3046:8;:13;3042:1135;;3413:18;3445:1;3434:8;:12;;;;:::i;:::-;3413:33;;3460:17;3501:1;3480:3;:11;;:18;;;;:22;;;;:::i;:::-;3460:42;;3535:9;3521:10;:23;3517:378;;3564:17;3584:3;:11;;3596:9;3584:22;;;;;;;;:::i;:::-;;;;;;;;;;3564:42;;3731:9;3705:3;:11;;3717:10;3705:23;;;;;;;;:::i;:::-;;;;;;;;;:35;;;;3872:8;3844:3;:14;;:25;3859:9;3844:25;;;;;;;;;;;:36;;;;3546:349;3517:378;3973:3;:11;;:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4076:3;:14;;:21;4091:5;4076:21;;;;;;;;;;;4069:28;;;4119:4;4112:11;;;;;;;3042:1135;4161:5;4154:12;;;2815:1368;;;;;:::o;2241:406::-;2304:4;2325:21;2335:3;2340:5;2325:9;:21::i;:::-;2320:321;;2362:3;:11;;2379:5;2362:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2544:3;:11;;:18;;;;2520:3;:14;;:21;2535:5;2520:21;;;;;;;;;;;:42;;;;2583:4;2576:11;;;;2320:321;2625:5;2618:12;;2241:406;;;;;:::o;4264:129::-;4337:4;4385:1;4360:3;:14;;:21;4375:5;4360:21;;;;;;;;;;;;:26;;4353:33;;4264:129;;;;:::o;88:117:22:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:122::-;1332:24;1350:5;1332:24;:::i;:::-;1325:5;1322:35;1312:63;;1371:1;1368;1361:12;1312:63;1259:122;:::o;1387:139::-;1433:5;1471:6;1458:20;1449:29;;1487:33;1514:5;1487:33;:::i;:::-;1387:139;;;;:::o;1532:329::-;1591:6;1640:2;1628:9;1619:7;1615:23;1611:32;1608:119;;;1646:79;;:::i;:::-;1608:119;1766:1;1791:53;1836:7;1827:6;1816:9;1812:22;1791:53;:::i;:::-;1781:63;;1737:117;1532:329;;;;:::o;1867:118::-;1954:24;1972:5;1954:24;:::i;:::-;1949:3;1942:37;1867:118;;:::o;1991:222::-;2084:4;2122:2;2111:9;2107:18;2099:26;;2135:71;2203:1;2192:9;2188:17;2179:6;2135:71;:::i;:::-;1991:222;;;;:::o;2219:118::-;2306:24;2324:5;2306:24;:::i;:::-;2301:3;2294:37;2219:118;;:::o;2343:222::-;2436:4;2474:2;2463:9;2459:18;2451:26;;2487:71;2555:1;2544:9;2540:17;2531:6;2487:71;:::i;:::-;2343:222;;;;:::o;2571:619::-;2648:6;2656;2664;2713:2;2701:9;2692:7;2688:23;2684:32;2681:119;;;2719:79;;:::i;:::-;2681:119;2839:1;2864:53;2909:7;2900:6;2889:9;2885:22;2864:53;:::i;:::-;2854:63;;2810:117;2966:2;2992:53;3037:7;3028:6;3017:9;3013:22;2992:53;:::i;:::-;2982:63;;2937:118;3094:2;3120:53;3165:7;3156:6;3145:9;3141:22;3120:53;:::i;:::-;3110:63;;3065:118;2571:619;;;;;:::o;3196:90::-;3230:7;3273:5;3266:13;3259:21;3248:32;;3196:90;;;:::o;3292:109::-;3373:21;3388:5;3373:21;:::i;:::-;3368:3;3361:34;3292:109;;:::o;3407:210::-;3494:4;3532:2;3521:9;3517:18;3509:26;;3545:65;3607:1;3596:9;3592:17;3583:6;3545:65;:::i;:::-;3407:210;;;;:::o;3623:169::-;3707:11;3741:6;3736:3;3729:19;3781:4;3776:3;3772:14;3757:29;;3623:169;;;;:::o;3798:164::-;3938:16;3934:1;3926:6;3922:14;3915:40;3798:164;:::o;3968:366::-;4110:3;4131:67;4195:2;4190:3;4131:67;:::i;:::-;4124:74;;4207:93;4296:3;4207:93;:::i;:::-;4325:2;4320:3;4316:12;4309:19;;3968:366;;;:::o;4340:419::-;4506:4;4544:2;4533:9;4529:18;4521:26;;4593:9;4587:4;4583:20;4579:1;4568:9;4564:17;4557:47;4621:131;4747:4;4621:131;:::i;:::-;4613:139;;4340:419;;;:::o;4765:332::-;4886:4;4924:2;4913:9;4909:18;4901:26;;4937:71;5005:1;4994:9;4990:17;4981:6;4937:71;:::i;:::-;5018:72;5086:2;5075:9;5071:18;5062:6;5018:72;:::i;:::-;4765:332;;;;;:::o;5103:180::-;5151:77;5148:1;5141:88;5248:4;5245:1;5238:15;5272:4;5269:1;5262:15;5289:410;5329:7;5352:20;5370:1;5352:20;:::i;:::-;5347:25;;5386:20;5404:1;5386:20;:::i;:::-;5381:25;;5441:1;5438;5434:9;5463:30;5481:11;5463:30;:::i;:::-;5452:41;;5642:1;5633:7;5629:15;5626:1;5623:22;5603:1;5596:9;5576:83;5553:139;;5672:18;;:::i;:::-;5553:139;5337:362;5289:410;;;;:::o;5705:180::-;5753:77;5750:1;5743:88;5850:4;5847:1;5840:15;5874:4;5871:1;5864:15;5891:185;5931:1;5948:20;5966:1;5948:20;:::i;:::-;5943:25;;5982:20;6000:1;5982:20;:::i;:::-;5977:25;;6021:1;6011:35;;6026:18;;:::i;:::-;6011:35;6068:1;6065;6061:9;6056:14;;5891:185;;;;:::o;6082:194::-;6122:4;6142:20;6160:1;6142:20;:::i;:::-;6137:25;;6176:20;6194:1;6176:20;:::i;:::-;6171:25;;6220:1;6217;6213:9;6205:17;;6244:1;6238:4;6235:11;6232:37;;;6249:18;;:::i;:::-;6232:37;6082:194;;;;:::o;6282:180::-;6330:77;6327:1;6320:88;6427:4;6424:1;6417:15;6451:4;6448:1;6441:15;6468:180;6516:77;6513:1;6506:88;6613:4;6610:1;6603:15;6637:4;6634:1;6627:15"},"methodIdentifiers":{"addExemption(address)":"705931fa","getTax(address,address,uint256)":"d7ad21ac","owner()":"8da5cb5b","removeExemption(address)":"0ed9cc4c","renounceOwnership()":"715018a6","setTaxPercentage(uint256)":"699abb3c","taxPercentage()":"ae7b6d16","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialTaxPercentage\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"exempted\",\"type\":\"bool\"}],\"name\":\"TaxExemptionUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldTaxPercentage\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTaxPercentage\",\"type\":\"uint256\"}],\"name\":\"TaxPercentageUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemption\",\"type\":\"address\"}],\"name\":\"addExemption\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"benefactor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemption\",\"type\":\"address\"}],\"name\":\"removeExemption\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTaxPercentage\",\"type\":\"uint256\"}],\"name\":\"setTaxPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract allows protocols to collect tax on transactions that count as either sells or liquidity additions to exchange pools. Addresses can be exempted from tax collection, and addresses designated as exchange pools can be added and removed by the owner of this contract. The owner of the contract should be set to a DAO-controlled timelock or at the very least a multisig wallet.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"addExemption(address)\":{\"params\":{\"exemption\":\"Address to add to set of tax-exempted addresses.\"}},\"constructor\":{\"params\":{\"initialTaxPercentage\":\"The number of tax percentage to start out with for tax calculations.\"}},\"getTax(address,address,uint256)\":{\"params\":{\"amount\":\"Number of tokens in the transfer.\",\"benefactor\":\"Address of the benefactor.\",\"beneficiary\":\"Address of the beneficiary.\"},\"returns\":{\"_0\":\"Number of tokens to pay as tax.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeExemption(address)\":{\"params\":{\"exemption\":\"Address to remove from set of tax-exempted addresses.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setTaxPercentage(uint256)\":{\"params\":{\"newTaxPercentage\":\"New tax basis points number to set for calculations.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"_exempted\":{\"details\":\"The set of addresses exempt from tax.\"}},\"title\":\"Static tax handler contract\",\"version\":1},\"userdoc\":{\"events\":{\"TaxExemptionUpdated(address,bool)\":{\"notice\":\"Emitted when an address is added to or removed from the exempted addresses set.\"},\"TaxPercentageUpdated(uint256,uint256)\":{\"notice\":\"Emitted when the tax basis points number is updated.\"}},\"kind\":\"user\",\"methods\":{\"addExemption(address)\":{\"notice\":\"Add address to set of tax-exempted addresses.\"},\"getTax(address,address,uint256)\":{\"notice\":\"Get number of tokens to pay as tax.\"},\"removeExemption(address)\":{\"notice\":\"Remove address from set of tax-exempted addresses.\"},\"setTaxPercentage(uint256)\":{\"notice\":\"Set new number for tax basis points. This number can only ever be lowered.\"},\"taxPercentage()\":{\"notice\":\"How much tax to collect in basis points. 10,000 basis points is 100%.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tax/StaticTaxHandler.sol\":\"StaticTaxHandler\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]},\"contracts/tax/ITaxHandler.sol\":{\"keccak256\":\"0xfbe50a73a526b7425030b98d2659fd5e5eb4222102f59c5b620d1c77a0178518\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b720ef524c3d25af70f56f19eff096a2142d6d3d606166b326a96f5c0afd49db\",\"dweb:/ipfs/QmWukwdeBzzMRzemBxFc8nK2yZkhjDP8r4b8abGuWuBdF4\"]},\"contracts/tax/StaticTaxHandler.sol\":{\"keccak256\":\"0x461ed3a833cae2d3545f26a70cd170b175449a449e10edcc6a493fbd067cda62\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81b54047e21c435c6d36a1bc8d88cac503cb8b9bae9e106f592a32f3fd430625\",\"dweb:/ipfs/QmR8AYRcentbfytxLWitFXejonTNY3uq4udJSHHDaEdrN8\"]}},\"version\":1}"}}}}}