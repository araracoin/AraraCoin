{"id":"92a1126749057a434d626562b32deef3","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\nimport {ERC20} from \"../ERC20.sol\";\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../../../utils/Nonces.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Nonces.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position is the index of the value in the `values` array plus 1.\n        // Position 0 is used to mean a value is not in the set.\n        mapping(bytes32 value => uint256) _positions;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._positions[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We cache the value's position to prevent multiple reads from the same storage slot\n        uint256 position = set._positions[value];\n\n        if (position != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 valueIndex = position - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (valueIndex != lastIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the lastValue to the index where the value to delete is\n                set._values[valueIndex] = lastValue;\n                // Update the tracked position of the lastValue (that was just moved)\n                set._positions[lastValue] = position;\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the tracked position for the deleted slot\n            delete set._positions[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._positions[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"contracts/AraraCoin.sol":{"content":"// SPDX-License-Identifier: MIT\n// This contract is compatible with OpenZeppelin Contracts version ^5.0.0\npragma solidity ^0.8.20;\n\n// Importing OpenZeppelin libraries for ERC20, ERC20Permit, and Ownable functionality\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\n\n// Importing a custom interface for tax handling functionality\nimport \"./tax/ITaxHandler.sol\";\n\n// The main contract for the AraraCoin token\ncontract AraraCoin is ERC20, ERC20Permit, Ownable {\n    \n    // Addresses used for initial token distribution\n    address public marketingWallet = 0x23618e81E3f5cdF7f54C3d65f7FBc0aBf5B21E8f;\n    address public consultingWallet = 0xa0Ee7A142d267C1f36714E4a8F75612F20a79720;\n    address public auditWallet = 0x70997970C51812dc3A010C7d01b50e0d17dc79C8;\n    address public preSaleWallet = 0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC;\n    address public launchWallet = 0x90F79bf6EB2c4f870365E785982E1f101E93b906;\n    address public investorsWallet = 0x15d34AAf54267DB7D7c367839AAf71A00a2C6A65;\n    address public investorsYearOneVestingWallet = 0x71bE63f3384f5fb98995898A86B02Fb2426c5788;\n    address public investorsYearTwoVestingWallet = 0xFABB0ac9d68B0B445fB7357272Ff202C5651694a;\n    address public teamVestingWallet = 0x9965507D1a55bcC2695C58ba16FB37d819B0A4dc;\n    address public foundersVestingWallet = 0x1CBd3b2770909D4e10f157cABC84C7264073C9Ec;\n    address public companyVestingWallet = 0xdF3e18d64BC6A983f673Ab319CCaE4f1a57C7097;\n    address public preservationProjectsVestingWallet = 0x976EA74026E726554dB657fA54763abd0C3a0aa9;\n    \n    // Total supply of the token, set at 100 billion tokens, with 18 decimals\n    uint256 private constant TOTAL_SUPPLY = 100_000_000_000 * 10 ** 18;\n    \n    // Address where tax funds will be sent\n    address public taxWallet = 0xbDA5747bFD65F08deb54cb465eB87D40e51B197E;\n\n    // Instance of the ITaxHandler interface for managing taxes on transfers\n    ITaxHandler public taxHandler;\n\n    // A boolean that indicates whether trading has been enabled\n    bool public tradingEnabled;\n    \n    // A set of addresses that are allowed to trade before trading is officially enabled\n    using EnumerableSet for EnumerableSet.AddressSet;\n    EnumerableSet.AddressSet private _canTrade;\n\n    // Event emitted when trading is enabled\n    event TradingEnabled();\n\n    // Event emitted when the tax handler is updated\n    event TaxHandlerChanged(address oldAddress, address newAddress);\n\n    // Event emitted when the tax wallet is updated\n    event TaxWalletChanged(address oldAddress, address newAddress);\n\n    // Constructor initializes the token with name, symbol, and owner\n    // Also handles token distribution and minting\n    constructor(address initialOwner, address taxHandlerAddress, address preservationProjectsVestingContract)\n        ERC20(\"Araracoin\", \"ARARA\") // Initialize the ERC20 token with a name and symbol\n        ERC20Permit(\"Araracoin\") // Enable ERC20 Permit functionality for approvals\n        Ownable(initialOwner) // Set the owner of the contract\n    {\n        // Initialize the tax handler with the provided address\n        taxHandler = ITaxHandler(taxHandlerAddress);\n\n        // Add address(0) and the initial owner to the whitelist of addresses that can trade before trading is enabled\n        _canTrade.add(address(0)); \n        _canTrade.add(initialOwner);\n\n        // Mint the total supply to the deployer of the contract\n        _mint(msg.sender, TOTAL_SUPPLY);\n\n        // Distribute the total supply according to the pre-defined percentages\n        _transfer(msg.sender, marketingWallet, 3_000_000_000 * 10 ** 18);  // 3% to marketing services\n        _transfer(msg.sender, consultingWallet, 1_250_000_000 * 10 ** 18);  // 1.25% to consulting services\n        _transfer(msg.sender, auditWallet, 750_000_000 * 10 ** 18);  // 0.75% to audit service\n        _transfer(msg.sender, preSaleWallet, TOTAL_SUPPLY * 10 / 100); // 10% to pre-sale\n        _transfer(msg.sender, launchWallet, TOTAL_SUPPLY * 20 / 100); // 20% to launch\n        _transfer(msg.sender, investorsWallet, 6_250_000_000 * 10 ** 18);  // 6.25% tokens for investors\n        _transfer(msg.sender, investorsYearOneVestingWallet, 6_250_000_000 * 10 ** 18);  // 6.25% tokens for investors' year-one vesting\n        _transfer(msg.sender, investorsYearTwoVestingWallet, 12_500_000_000 * 10 ** 18);  // 12.5% tokens for investors' year-two vesting\n        _transfer(msg.sender, companyVestingWallet, 9_600_000_000 * 10 ** 18);  // 9.6% to comapny vesting\n        _transfer(msg.sender, foundersVestingWallet, 5_600_000_000 * 10 ** 18); // 5.6% to founders vesting\n        _transfer(msg.sender, teamVestingWallet, 4_800_000_000 * 10 ** 18);  // 4.8% to team vesting\n        _transfer(msg.sender, preservationProjectsVestingContract, TOTAL_SUPPLY * 20 / 100); // 20% to preservation projects\n    }\n\n    // Function to enable trading, only callable by the owner\n    function enableTrading() external onlyOwner {\n        require(!tradingEnabled, \"AraraCoin trading already enabled\"); // Ensure trading hasn't been enabled yet\n        tradingEnabled = true; // Set trading to enabled\n        emit TradingEnabled(); // Emit event that trading has been enabled\n    }\n\n    // Function to update the tax handler contract, only callable by the owner\n    function setTaxHandler(address taxHandlerAddress) external onlyOwner {\n        address oldTaxHandlerAddress = address(taxHandler); // Store the current tax handler address\n        taxHandler = ITaxHandler(taxHandlerAddress); // Set the new tax handler address\n\n        emit TaxHandlerChanged(oldTaxHandlerAddress, taxHandlerAddress); // Emit event with old and new tax handler addresses\n    }\n\n    // Function to update the tax wallet address, only callable by the owner\n    function setTaxWallet(address taxWalletAddress) external onlyOwner {\n        address oldTaxWalletAddress = taxWallet; // Store the current tax wallet address\n        taxWallet = taxWalletAddress; // Set the new tax wallet address\n\n        emit TaxWalletChanged(oldTaxWalletAddress, taxWallet); // Emit event with old and new tax wallet addresses\n    }\n\n    // Function to add addresses that are allowed to trade before trading is enabled, only callable by the owner\n    function addCanTrade(\n        address[] calldata allowedAddresses\n    ) external onlyOwner {\n        require(!tradingEnabled, \"AraraCoin trading already enabled\"); // Ensure trading isn't enabled yet\n        require(allowedAddresses.length != 0, \"AraraCoin invalid parameters\"); // Ensure there are addresses to add\n\n        // Add each address in the provided list to the set of addresses allowed to trade\n        for (uint256 i = 0; i < allowedAddresses.length; i++) {\n            _canTrade.add(allowedAddresses[i]);\n        }\n    }\n\n    // Internal function to handle transfers, with tax calculations\n    function _update(address from, address to, uint256 value) \n        internal virtual override(ERC20) \n    {\n        // If trading is not yet enabled, ensure the sender is allowed to trade\n        if (!tradingEnabled) {\n            require(_canTrade.contains(from), \"AraraCoin trade is disabled\");\n        }\n\n        // Calculate the tax based on the sender, receiver, and amount\n        uint256 tax = taxHandler.getTax(from, to, value);\n        uint256 taxedAmount = value - tax;\n\n        // If there is a tax, transfer the tax amount to the tax wallet\n        if (tax > 0) {\n            super._update(from, taxWallet, tax);\n        }\n\n        // Transfer the remaining amount to the receiver\n        super._update(from, to, taxedAmount);\n    }\n}\n"},"contracts/tax/ITaxHandler.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\n/**\n * @title Tax handler interface\n * @dev Any class that implements this interface can be used for protocol-specific tax calculations.\n */\ninterface ITaxHandler {\n    /**\n     * @notice Get number of tokens to pay as tax.\n     * @param benefactor Address of the benefactor.\n     * @param beneficiary Address of the beneficiary.\n     * @param amount Number of tokens in the transfer.\n     * @return Number of tokens to pay as tax.\n     */\n    function getTax(\n        address benefactor,\n        address beneficiary,\n        uint256 amount\n    ) external view returns (uint256);\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1148],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":1149,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1148,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,1148],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[172]},"id":173,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":172,"linearizedBaseContracts":[172],"name":"IERC5267","nameLocation":"143:8:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"158:84:1","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":152,"name":"EIP712DomainChanged","nameLocation":"253:19:1","nodeType":"EventDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[],"src":"272:2:1"},"src":"247:28:1"},{"documentation":{"id":153,"nodeType":"StructuredDocumentation","src":"281:140:1","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":171,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:1","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[],"src":"447:2:1"},"returnParameters":{"id":170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"fields","nameLocation":"517:6:1","nodeType":"VariableDeclaration","scope":171,"src":"510:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":155,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:1","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":158,"mutability":"mutable","name":"name","nameLocation":"551:4:1","nodeType":"VariableDeclaration","scope":171,"src":"537:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":157,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":160,"mutability":"mutable","name":"version","nameLocation":"583:7:1","nodeType":"VariableDeclaration","scope":171,"src":"569:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":159,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":162,"mutability":"mutable","name":"chainId","nameLocation":"612:7:1","nodeType":"VariableDeclaration","scope":171,"src":"604:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":161,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":164,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:1","nodeType":"VariableDeclaration","scope":171,"src":"633:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":166,"mutability":"mutable","name":"salt","nameLocation":"680:4:1","nodeType":"VariableDeclaration","scope":171,"src":"672:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":169,"mutability":"mutable","name":"extensions","nameLocation":"715:10:1","nodeType":"VariableDeclaration","scope":171,"src":"698:27:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":167,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":168,"nodeType":"ArrayTypeName","src":"698:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:1"},"scope":172,"src":"426:310:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":173,"src":"133:605:1","usedErrors":[],"usedEvents":[152]}],"src":"107:632:1"},"id":1},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[309],"IERC20Errors":[214],"IERC721Errors":[262]},"id":310,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":174,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":175,"nodeType":"StructuredDocumentation","src":"138:139:2","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":214,"linearizedBaseContracts":[214],"name":"IERC20Errors","nameLocation":"288:12:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":176,"nodeType":"StructuredDocumentation","src":"307:309:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":184,"name":"ERC20InsufficientBalance","nameLocation":"627:24:2","nodeType":"ErrorDefinition","parameters":{"id":183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"sender","nameLocation":"660:6:2","nodeType":"VariableDeclaration","scope":184,"src":"652:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":177,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":180,"mutability":"mutable","name":"balance","nameLocation":"676:7:2","nodeType":"VariableDeclaration","scope":184,"src":"668:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":179,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":182,"mutability":"mutable","name":"needed","nameLocation":"693:6:2","nodeType":"VariableDeclaration","scope":184,"src":"685:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":181,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:2"},"src":"621:80:2"},{"documentation":{"id":185,"nodeType":"StructuredDocumentation","src":"707:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":189,"name":"ERC20InvalidSender","nameLocation":"870:18:2","nodeType":"ErrorDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"mutability":"mutable","name":"sender","nameLocation":"897:6:2","nodeType":"VariableDeclaration","scope":189,"src":"889:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":186,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:2"},"src":"864:41:2"},{"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"911:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":194,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:2","nodeType":"ErrorDefinition","parameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:2","nodeType":"VariableDeclaration","scope":194,"src":"1102:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":191,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:2"},"src":"1075:45:2"},{"documentation":{"id":195,"nodeType":"StructuredDocumentation","src":"1126:345:2","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":203,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:2","nodeType":"ErrorDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":197,"mutability":"mutable","name":"spender","nameLocation":"1517:7:2","nodeType":"VariableDeclaration","scope":203,"src":"1509:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:2","nodeType":"VariableDeclaration","scope":203,"src":"1526:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":198,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"needed","nameLocation":"1553:6:2","nodeType":"VariableDeclaration","scope":203,"src":"1545:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":200,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:2"},"src":"1476:85:2"},{"documentation":{"id":204,"nodeType":"StructuredDocumentation","src":"1567:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":208,"name":"ERC20InvalidApprover","nameLocation":"1752:20:2","nodeType":"ErrorDefinition","parameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":206,"mutability":"mutable","name":"approver","nameLocation":"1781:8:2","nodeType":"VariableDeclaration","scope":208,"src":"1773:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":205,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:2"},"src":"1746:45:2"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"1797:195:2","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":213,"name":"ERC20InvalidSpender","nameLocation":"2003:19:2","nodeType":"ErrorDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":211,"mutability":"mutable","name":"spender","nameLocation":"2031:7:2","nodeType":"VariableDeclaration","scope":213,"src":"2023:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":210,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:2"},"src":"1997:43:2"}],"scope":310,"src":"278:1764:2","usedErrors":[184,189,194,203,208,213],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"2044:141:2","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":262,"linearizedBaseContracts":[262],"name":"IERC721Errors","nameLocation":"2196:13:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":216,"nodeType":"StructuredDocumentation","src":"2216:219:2","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":220,"name":"ERC721InvalidOwner","nameLocation":"2446:18:2","nodeType":"ErrorDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":218,"mutability":"mutable","name":"owner","nameLocation":"2473:5:2","nodeType":"VariableDeclaration","scope":220,"src":"2465:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":217,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:2"},"src":"2440:40:2"},{"documentation":{"id":221,"nodeType":"StructuredDocumentation","src":"2486:132:2","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":225,"name":"ERC721NonexistentToken","nameLocation":"2629:22:2","nodeType":"ErrorDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:2","nodeType":"VariableDeclaration","scope":225,"src":"2652:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":222,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:2"},"src":"2623:46:2"},{"documentation":{"id":226,"nodeType":"StructuredDocumentation","src":"2675:289:2","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":234,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:2","nodeType":"ErrorDefinition","parameters":{"id":233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":228,"mutability":"mutable","name":"sender","nameLocation":"3004:6:2","nodeType":"VariableDeclaration","scope":234,"src":"2996:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":227,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":230,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:2","nodeType":"VariableDeclaration","scope":234,"src":"3012:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":232,"mutability":"mutable","name":"owner","nameLocation":"3037:5:2","nodeType":"VariableDeclaration","scope":234,"src":"3029:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":231,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:2"},"src":"2969:75:2"},{"documentation":{"id":235,"nodeType":"StructuredDocumentation","src":"3050:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":239,"name":"ERC721InvalidSender","nameLocation":"3213:19:2","nodeType":"ErrorDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"sender","nameLocation":"3241:6:2","nodeType":"VariableDeclaration","scope":239,"src":"3233:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":236,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:2"},"src":"3207:42:2"},{"documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"3255:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":244,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:2","nodeType":"ErrorDefinition","parameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":242,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:2","nodeType":"VariableDeclaration","scope":244,"src":"3447:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":241,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:2"},"src":"3419:46:2"},{"documentation":{"id":245,"nodeType":"StructuredDocumentation","src":"3471:247:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":251,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:2","nodeType":"ErrorDefinition","parameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":247,"mutability":"mutable","name":"operator","nameLocation":"3764:8:2","nodeType":"VariableDeclaration","scope":251,"src":"3756:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":246,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":249,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:2","nodeType":"VariableDeclaration","scope":251,"src":"3774:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":248,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:2"},"src":"3723:68:2"},{"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"3797:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":256,"name":"ERC721InvalidApprover","nameLocation":"3982:21:2","nodeType":"ErrorDefinition","parameters":{"id":255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"approver","nameLocation":"4012:8:2","nodeType":"VariableDeclaration","scope":256,"src":"4004:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:2"},"src":"3976:46:2"},{"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"4028:197:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":261,"name":"ERC721InvalidOperator","nameLocation":"4236:21:2","nodeType":"ErrorDefinition","parameters":{"id":260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"operator","nameLocation":"4266:8:2","nodeType":"VariableDeclaration","scope":261,"src":"4258:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":258,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:2"},"src":"4230:46:2"}],"scope":310,"src":"2186:2092:2","usedErrors":[220,225,234,239,244,251,256,261],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":263,"nodeType":"StructuredDocumentation","src":"4280:143:2","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":309,"linearizedBaseContracts":[309],"name":"IERC1155Errors","nameLocation":"4434:14:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":264,"nodeType":"StructuredDocumentation","src":"4455:361:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":274,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:2","nodeType":"ErrorDefinition","parameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":266,"mutability":"mutable","name":"sender","nameLocation":"4862:6:2","nodeType":"VariableDeclaration","scope":274,"src":"4854:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":268,"mutability":"mutable","name":"balance","nameLocation":"4878:7:2","nodeType":"VariableDeclaration","scope":274,"src":"4870:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":267,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":270,"mutability":"mutable","name":"needed","nameLocation":"4895:6:2","nodeType":"VariableDeclaration","scope":274,"src":"4887:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":269,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":272,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:2","nodeType":"VariableDeclaration","scope":274,"src":"4903:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":271,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:2"},"src":"4821:99:2"},{"documentation":{"id":275,"nodeType":"StructuredDocumentation","src":"4926:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":279,"name":"ERC1155InvalidSender","nameLocation":"5089:20:2","nodeType":"ErrorDefinition","parameters":{"id":278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":277,"mutability":"mutable","name":"sender","nameLocation":"5118:6:2","nodeType":"VariableDeclaration","scope":279,"src":"5110:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":276,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:2"},"src":"5083:43:2"},{"documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"5132:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":284,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:2","nodeType":"ErrorDefinition","parameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:2","nodeType":"VariableDeclaration","scope":284,"src":"5325:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:2"},"src":"5296:47:2"},{"documentation":{"id":285,"nodeType":"StructuredDocumentation","src":"5349:256:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":291,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:2","nodeType":"ErrorDefinition","parameters":{"id":290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":287,"mutability":"mutable","name":"operator","nameLocation":"5653:8:2","nodeType":"VariableDeclaration","scope":291,"src":"5645:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":286,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":289,"mutability":"mutable","name":"owner","nameLocation":"5671:5:2","nodeType":"VariableDeclaration","scope":291,"src":"5663:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:2"},"src":"5610:68:2"},{"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"5684:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":296,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:2","nodeType":"ErrorDefinition","parameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"approver","nameLocation":"5900:8:2","nodeType":"VariableDeclaration","scope":296,"src":"5892:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:2"},"src":"5863:47:2"},{"documentation":{"id":297,"nodeType":"StructuredDocumentation","src":"5916:197:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":301,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:2","nodeType":"ErrorDefinition","parameters":{"id":300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":299,"mutability":"mutable","name":"operator","nameLocation":"6155:8:2","nodeType":"VariableDeclaration","scope":301,"src":"6147:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":298,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:2"},"src":"6118:47:2"},{"documentation":{"id":302,"nodeType":"StructuredDocumentation","src":"6171:280:2","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":308,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:2","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":304,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:2","nodeType":"VariableDeclaration","scope":308,"src":"6488:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":303,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":306,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:2","nodeType":"VariableDeclaration","scope":308,"src":"6507:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":305,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:2"},"src":"6456:73:2"}],"scope":310,"src":"4424:2107:2","usedErrors":[274,279,284,291,296,301,308],"usedEvents":[]}],"src":"112:6420:2"},"id":2},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1148],"ERC20":[824],"IERC20":[902],"IERC20Errors":[214],"IERC20Metadata":[1082]},"id":825,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":311,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":313,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":825,"sourceUnit":903,"src":"131:36:3","symbolAliases":[{"foreign":{"id":312,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"139:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":315,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":825,"sourceUnit":1083,"src":"168:63:3","symbolAliases":[{"foreign":{"id":314,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"176:14:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":317,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":825,"sourceUnit":1149,"src":"232:48:3","symbolAliases":[{"foreign":{"id":316,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"240:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":319,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":825,"sourceUnit":310,"src":"281:65:3","symbolAliases":[{"foreign":{"id":318,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"289:12:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":321,"name":"Context","nameLocations":["1428:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":1148,"src":"1428:7:3"},"id":322,"nodeType":"InheritanceSpecifier","src":"1428:7:3"},{"baseName":{"id":323,"name":"IERC20","nameLocations":["1437:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":902,"src":"1437:6:3"},"id":324,"nodeType":"InheritanceSpecifier","src":"1437:6:3"},{"baseName":{"id":325,"name":"IERC20Metadata","nameLocations":["1445:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":1082,"src":"1445:14:3"},"id":326,"nodeType":"InheritanceSpecifier","src":"1445:14:3"},{"baseName":{"id":327,"name":"IERC20Errors","nameLocations":["1461:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":214,"src":"1461:12:3"},"id":328,"nodeType":"InheritanceSpecifier","src":"1461:12:3"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"348:1052:3","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":824,"linearizedBaseContracts":[824,214,1082,902,1148],"name":"ERC20","nameLocation":"1419:5:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":332,"mutability":"mutable","name":"_balances","nameLocation":"1524:9:3","nodeType":"VariableDeclaration","scope":824,"src":"1480:53:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":331,"keyName":"account","keyNameLocation":"1496:7:3","keyType":{"id":329,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1480:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":330,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":338,"mutability":"mutable","name":"_allowances","nameLocation":"1612:11:3","nodeType":"VariableDeclaration","scope":824,"src":"1540:83:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":337,"keyName":"account","keyNameLocation":"1556:7:3","keyType":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1540:63:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":336,"keyName":"spender","keyNameLocation":"1583:7:3","keyType":{"id":334,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1567:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":335,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":340,"mutability":"mutable","name":"_totalSupply","nameLocation":"1646:12:3","nodeType":"VariableDeclaration","scope":824,"src":"1630:28:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":339,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":342,"mutability":"mutable","name":"_name","nameLocation":"1680:5:3","nodeType":"VariableDeclaration","scope":824,"src":"1665:20:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":341,"name":"string","nodeType":"ElementaryTypeName","src":"1665:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":344,"mutability":"mutable","name":"_symbol","nameLocation":"1706:7:3","nodeType":"VariableDeclaration","scope":824,"src":"1691:22:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":343,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":360,"nodeType":"Block","src":"1952:57:3","statements":[{"expression":{"id":354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":352,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"1962:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":353,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"1970:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1962:13:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":355,"nodeType":"ExpressionStatement","src":"1962:13:3"},{"expression":{"id":358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":356,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"1985:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":357,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"1995:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1985:17:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":359,"nodeType":"ExpressionStatement","src":"1985:17:3"}]},"documentation":{"id":345,"nodeType":"StructuredDocumentation","src":"1720:171:3","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":361,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":347,"mutability":"mutable","name":"name_","nameLocation":"1922:5:3","nodeType":"VariableDeclaration","scope":361,"src":"1908:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":346,"name":"string","nodeType":"ElementaryTypeName","src":"1908:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":349,"mutability":"mutable","name":"symbol_","nameLocation":"1943:7:3","nodeType":"VariableDeclaration","scope":361,"src":"1929:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":348,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1907:44:3"},"returnParameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"1952:0:3"},"scope":824,"src":"1896:113:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1069],"body":{"id":369,"nodeType":"Block","src":"2134:29:3","statements":[{"expression":{"id":367,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"2151:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":366,"id":368,"nodeType":"Return","src":"2144:12:3"}]},"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"2015:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":370,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2083:4:3","nodeType":"FunctionDefinition","parameters":{"id":363,"nodeType":"ParameterList","parameters":[],"src":"2087:2:3"},"returnParameters":{"id":366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":370,"src":"2119:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":364,"name":"string","nodeType":"ElementaryTypeName","src":"2119:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2118:15:3"},"scope":824,"src":"2074:89:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1075],"body":{"id":378,"nodeType":"Block","src":"2338:31:3","statements":[{"expression":{"id":376,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"2355:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":375,"id":377,"nodeType":"Return","src":"2348:14:3"}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"2169:102:3","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":379,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2285:6:3","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"2291:2:3"},"returnParameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":379,"src":"2323:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":373,"name":"string","nodeType":"ElementaryTypeName","src":"2323:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2322:15:3"},"scope":824,"src":"2276:93:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1081],"body":{"id":387,"nodeType":"Block","src":"3058:26:3","statements":[{"expression":{"hexValue":"3138","id":385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3075:2:3","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":384,"id":386,"nodeType":"Return","src":"3068:9:3"}]},"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"2375:622:3","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":388,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3011:8:3","nodeType":"FunctionDefinition","parameters":{"id":381,"nodeType":"ParameterList","parameters":[],"src":"3019:2:3"},"returnParameters":{"id":384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":388,"src":"3051:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":382,"name":"uint8","nodeType":"ElementaryTypeName","src":"3051:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3050:7:3"},"scope":824,"src":"3002:82:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[851],"body":{"id":396,"nodeType":"Block","src":"3205:36:3","statements":[{"expression":{"id":394,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"3222:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":393,"id":395,"nodeType":"Return","src":"3215:19:3"}]},"documentation":{"id":389,"nodeType":"StructuredDocumentation","src":"3090:49:3","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":397,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3153:11:3","nodeType":"FunctionDefinition","parameters":{"id":390,"nodeType":"ParameterList","parameters":[],"src":"3164:2:3"},"returnParameters":{"id":393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":397,"src":"3196:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":391,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3195:9:3"},"scope":824,"src":"3144:97:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[859],"body":{"id":409,"nodeType":"Block","src":"3373:42:3","statements":[{"expression":{"baseExpression":{"id":405,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"3390:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":407,"indexExpression":{"id":406,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"3400:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3390:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":404,"id":408,"nodeType":"Return","src":"3383:25:3"}]},"documentation":{"id":398,"nodeType":"StructuredDocumentation","src":"3247:47:3","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":410,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3308:9:3","nodeType":"FunctionDefinition","parameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"mutability":"mutable","name":"account","nameLocation":"3326:7:3","nodeType":"VariableDeclaration","scope":410,"src":"3318:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"3318:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3317:17:3"},"returnParameters":{"id":404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":403,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":410,"src":"3364:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":402,"name":"uint256","nodeType":"ElementaryTypeName","src":"3364:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3363:9:3"},"scope":824,"src":"3299:116:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[869],"body":{"id":433,"nodeType":"Block","src":"3685:103:3","statements":[{"assignments":[421],"declarations":[{"constant":false,"id":421,"mutability":"mutable","name":"owner","nameLocation":"3703:5:3","nodeType":"VariableDeclaration","scope":433,"src":"3695:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":420,"name":"address","nodeType":"ElementaryTypeName","src":"3695:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":424,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":422,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"3711:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3695:28:3"},{"expression":{"arguments":[{"id":426,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"3743:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":427,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"3750:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"3754:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":425,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"3733:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":430,"nodeType":"ExpressionStatement","src":"3733:27:3"},{"expression":{"hexValue":"74727565","id":431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3777:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":419,"id":432,"nodeType":"Return","src":"3770:11:3"}]},"documentation":{"id":411,"nodeType":"StructuredDocumentation","src":"3421:184:3","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":434,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3619:8:3","nodeType":"FunctionDefinition","parameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":413,"mutability":"mutable","name":"to","nameLocation":"3636:2:3","nodeType":"VariableDeclaration","scope":434,"src":"3628:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":412,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":415,"mutability":"mutable","name":"value","nameLocation":"3648:5:3","nodeType":"VariableDeclaration","scope":434,"src":"3640:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":414,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3627:27:3"},"returnParameters":{"id":419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":434,"src":"3679:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":417,"name":"bool","nodeType":"ElementaryTypeName","src":"3679:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3678:6:3"},"scope":824,"src":"3610:178:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[879],"body":{"id":450,"nodeType":"Block","src":"3935:51:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":444,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"3952:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":446,"indexExpression":{"id":445,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"3964:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":448,"indexExpression":{"id":447,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"3971:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":443,"id":449,"nodeType":"Return","src":"3945:34:3"}]},"documentation":{"id":435,"nodeType":"StructuredDocumentation","src":"3794:47:3","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":451,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3855:9:3","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":437,"mutability":"mutable","name":"owner","nameLocation":"3873:5:3","nodeType":"VariableDeclaration","scope":451,"src":"3865:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"3865:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":439,"mutability":"mutable","name":"spender","nameLocation":"3888:7:3","nodeType":"VariableDeclaration","scope":451,"src":"3880:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":438,"name":"address","nodeType":"ElementaryTypeName","src":"3880:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3864:32:3"},"returnParameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":451,"src":"3926:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":441,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3925:9:3"},"scope":824,"src":"3846:140:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[889],"body":{"id":474,"nodeType":"Block","src":"4372:107:3","statements":[{"assignments":[462],"declarations":[{"constant":false,"id":462,"mutability":"mutable","name":"owner","nameLocation":"4390:5:3","nodeType":"VariableDeclaration","scope":474,"src":"4382:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":461,"name":"address","nodeType":"ElementaryTypeName","src":"4382:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":465,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":463,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"4398:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4398:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4382:28:3"},{"expression":{"arguments":[{"id":467,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"4429:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":468,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"4436:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"4445:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":466,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[715,775],"referencedDeclaration":715,"src":"4420:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":471,"nodeType":"ExpressionStatement","src":"4420:31:3"},{"expression":{"hexValue":"74727565","id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4468:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":460,"id":473,"nodeType":"Return","src":"4461:11:3"}]},"documentation":{"id":452,"nodeType":"StructuredDocumentation","src":"3992:296:3","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":475,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4302:7:3","nodeType":"FunctionDefinition","parameters":{"id":457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":454,"mutability":"mutable","name":"spender","nameLocation":"4318:7:3","nodeType":"VariableDeclaration","scope":475,"src":"4310:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":453,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":456,"mutability":"mutable","name":"value","nameLocation":"4335:5:3","nodeType":"VariableDeclaration","scope":475,"src":"4327:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":455,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4309:32:3"},"returnParameters":{"id":460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":475,"src":"4366:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":458,"name":"bool","nodeType":"ElementaryTypeName","src":"4366:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:6:3"},"scope":824,"src":"4293:186:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[901],"body":{"id":506,"nodeType":"Block","src":"5132:151:3","statements":[{"assignments":[488],"declarations":[{"constant":false,"id":488,"mutability":"mutable","name":"spender","nameLocation":"5150:7:3","nodeType":"VariableDeclaration","scope":506,"src":"5142:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"5142:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":491,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":489,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"5160:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5142:30:3"},{"expression":{"arguments":[{"id":493,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"5198:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":494,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"5204:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"5213:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":492,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"5182:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":497,"nodeType":"ExpressionStatement","src":"5182:37:3"},{"expression":{"arguments":[{"id":499,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"5239:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":500,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"5245:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"5249:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":498,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"5229:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"ExpressionStatement","src":"5229:26:3"},{"expression":{"hexValue":"74727565","id":504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5272:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":486,"id":505,"nodeType":"Return","src":"5265:11:3"}]},"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"4485:549:3","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":507,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5048:12:3","nodeType":"FunctionDefinition","parameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"from","nameLocation":"5069:4:3","nodeType":"VariableDeclaration","scope":507,"src":"5061:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":477,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":480,"mutability":"mutable","name":"to","nameLocation":"5083:2:3","nodeType":"VariableDeclaration","scope":507,"src":"5075:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"5075:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":482,"mutability":"mutable","name":"value","nameLocation":"5095:5:3","nodeType":"VariableDeclaration","scope":507,"src":"5087:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":481,"name":"uint256","nodeType":"ElementaryTypeName","src":"5087:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5060:41:3"},"returnParameters":{"id":486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":507,"src":"5126:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":484,"name":"bool","nodeType":"ElementaryTypeName","src":"5126:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5125:6:3"},"scope":824,"src":"5039:244:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":553,"nodeType":"Block","src":"5725:231:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":517,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"5739:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5755:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5747:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":518,"name":"address","nodeType":"ElementaryTypeName","src":"5747:7:3","typeDescriptions":{}}},"id":521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5739:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":531,"nodeType":"IfStatement","src":"5735:86:3","trueBody":{"id":530,"nodeType":"Block","src":"5759:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5807:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"5799:7:3","typeDescriptions":{}}},"id":527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":523,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"5780:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5780:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":529,"nodeType":"RevertStatement","src":"5773:37:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":532,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"5834:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5848:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5840:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":533,"name":"address","nodeType":"ElementaryTypeName","src":"5840:7:3","typeDescriptions":{}}},"id":536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5834:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":546,"nodeType":"IfStatement","src":"5830:86:3","trueBody":{"id":545,"nodeType":"Block","src":"5852:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5894:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":539,"name":"address","nodeType":"ElementaryTypeName","src":"5894:7:3","typeDescriptions":{}}},"id":542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5894:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":538,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5873:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":544,"nodeType":"RevertStatement","src":"5866:39:3"}]}},{"expression":{"arguments":[{"id":548,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"5933:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":549,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"5939:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"5943:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":547,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5925:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5925:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":552,"nodeType":"ExpressionStatement","src":"5925:24:3"}]},"documentation":{"id":508,"nodeType":"StructuredDocumentation","src":"5289:362:3","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":554,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5665:9:3","nodeType":"FunctionDefinition","parameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"from","nameLocation":"5683:4:3","nodeType":"VariableDeclaration","scope":554,"src":"5675:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":509,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":512,"mutability":"mutable","name":"to","nameLocation":"5697:2:3","nodeType":"VariableDeclaration","scope":554,"src":"5689:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":511,"name":"address","nodeType":"ElementaryTypeName","src":"5689:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":514,"mutability":"mutable","name":"value","nameLocation":"5709:5:3","nodeType":"VariableDeclaration","scope":554,"src":"5701:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":513,"name":"uint256","nodeType":"ElementaryTypeName","src":"5701:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:41:3"},"returnParameters":{"id":516,"nodeType":"ParameterList","parameters":[],"src":"5725:0:3"},"scope":824,"src":"5656:300:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":630,"nodeType":"Block","src":"6346:1032:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":564,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6360:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6376:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6368:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"6368:7:3","typeDescriptions":{}}},"id":568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6368:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6360:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":601,"nodeType":"Block","src":"6534:362:3","statements":[{"assignments":[576],"declarations":[{"constant":false,"id":576,"mutability":"mutable","name":"fromBalance","nameLocation":"6556:11:3","nodeType":"VariableDeclaration","scope":601,"src":"6548:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":575,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":580,"initialValue":{"baseExpression":{"id":577,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"6570:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":579,"indexExpression":{"id":578,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6580:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6570:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6548:37:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":581,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"6603:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6617:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6603:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":591,"nodeType":"IfStatement","src":"6599:115:3","trueBody":{"id":590,"nodeType":"Block","src":"6624:90:3","statements":[{"errorCall":{"arguments":[{"id":585,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6674:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":586,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"6680:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6693:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":584,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"6649:24:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":589,"nodeType":"RevertStatement","src":"6642:57:3"}]}},{"id":600,"nodeType":"UncheckedBlock","src":"6727:159:3","statements":[{"expression":{"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":592,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"6834:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":594,"indexExpression":{"id":593,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6844:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6834:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":595,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"6852:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6866:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6852:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6834:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":599,"nodeType":"ExpressionStatement","src":"6834:37:3"}]}]},"id":602,"nodeType":"IfStatement","src":"6356:540:3","trueBody":{"id":574,"nodeType":"Block","src":"6380:148:3","statements":[{"expression":{"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":570,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"6496:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6512:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6496:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":573,"nodeType":"ExpressionStatement","src":"6496:21:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":603,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"6910:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6924:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:3","typeDescriptions":{}}},"id":607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6910:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":622,"nodeType":"Block","src":"7125:206:3","statements":[{"id":621,"nodeType":"UncheckedBlock","src":"7139:182:3","statements":[{"expression":{"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":615,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"7284:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":617,"indexExpression":{"id":616,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"7294:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7284:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"7301:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":620,"nodeType":"ExpressionStatement","src":"7284:22:3"}]}]},"id":623,"nodeType":"IfStatement","src":"6906:425:3","trueBody":{"id":614,"nodeType":"Block","src":"6928:191:3","statements":[{"id":613,"nodeType":"UncheckedBlock","src":"6942:167:3","statements":[{"expression":{"id":611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":609,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"7073:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"7089:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7073:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":612,"nodeType":"ExpressionStatement","src":"7073:21:3"}]}]}},{"eventCall":{"arguments":[{"id":625,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"7355:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":626,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"7361:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"7365:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":624,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"7346:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7346:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":629,"nodeType":"EmitStatement","src":"7341:30:3"}]},"documentation":{"id":555,"nodeType":"StructuredDocumentation","src":"5962:304:3","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":631,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6280:7:3","nodeType":"FunctionDefinition","parameters":{"id":562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":557,"mutability":"mutable","name":"from","nameLocation":"6296:4:3","nodeType":"VariableDeclaration","scope":631,"src":"6288:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":556,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":559,"mutability":"mutable","name":"to","nameLocation":"6310:2:3","nodeType":"VariableDeclaration","scope":631,"src":"6302:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":558,"name":"address","nodeType":"ElementaryTypeName","src":"6302:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":561,"mutability":"mutable","name":"value","nameLocation":"6322:5:3","nodeType":"VariableDeclaration","scope":631,"src":"6314:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":560,"name":"uint256","nodeType":"ElementaryTypeName","src":"6314:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6287:41:3"},"returnParameters":{"id":563,"nodeType":"ParameterList","parameters":[],"src":"6346:0:3"},"scope":824,"src":"6271:1107:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":663,"nodeType":"Block","src":"7777:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":639,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"7791:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7810:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7802:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":640,"name":"address","nodeType":"ElementaryTypeName","src":"7802:7:3","typeDescriptions":{}}},"id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7802:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7791:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":653,"nodeType":"IfStatement","src":"7787:91:3","trueBody":{"id":652,"nodeType":"Block","src":"7814:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7864:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7856:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":646,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:3","typeDescriptions":{}}},"id":649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7856:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":645,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"7835:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7835:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":651,"nodeType":"RevertStatement","src":"7828:39:3"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7903:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7895:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"7895:7:3","typeDescriptions":{}}},"id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7895:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":659,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"7907:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"7916:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":654,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"7887:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7887:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":662,"nodeType":"ExpressionStatement","src":"7887:35:3"}]},"documentation":{"id":632,"nodeType":"StructuredDocumentation","src":"7384:332:3","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":664,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7730:5:3","nodeType":"FunctionDefinition","parameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":634,"mutability":"mutable","name":"account","nameLocation":"7744:7:3","nodeType":"VariableDeclaration","scope":664,"src":"7736:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":633,"name":"address","nodeType":"ElementaryTypeName","src":"7736:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":636,"mutability":"mutable","name":"value","nameLocation":"7761:5:3","nodeType":"VariableDeclaration","scope":664,"src":"7753:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":635,"name":"uint256","nodeType":"ElementaryTypeName","src":"7753:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7735:32:3"},"returnParameters":{"id":638,"nodeType":"ParameterList","parameters":[],"src":"7777:0:3"},"scope":824,"src":"7721:208:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":696,"nodeType":"Block","src":"8303:150:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":672,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"8317:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8336:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":673,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:3","typeDescriptions":{}}},"id":676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8317:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":686,"nodeType":"IfStatement","src":"8313:89:3","trueBody":{"id":685,"nodeType":"Block","src":"8340:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8388:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8380:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":679,"name":"address","nodeType":"ElementaryTypeName","src":"8380:7:3","typeDescriptions":{}}},"id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8380:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":678,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"8361:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":684,"nodeType":"RevertStatement","src":"8354:37:3"}]}},{"expression":{"arguments":[{"id":688,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"8419:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8436:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8428:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":689,"name":"address","nodeType":"ElementaryTypeName","src":"8428:7:3","typeDescriptions":{}}},"id":692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8428:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"8440:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":687,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"8411:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":695,"nodeType":"ExpressionStatement","src":"8411:35:3"}]},"documentation":{"id":665,"nodeType":"StructuredDocumentation","src":"7935:307:3","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":697,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8256:5:3","nodeType":"FunctionDefinition","parameters":{"id":670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":667,"mutability":"mutable","name":"account","nameLocation":"8270:7:3","nodeType":"VariableDeclaration","scope":697,"src":"8262:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":666,"name":"address","nodeType":"ElementaryTypeName","src":"8262:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":669,"mutability":"mutable","name":"value","nameLocation":"8287:5:3","nodeType":"VariableDeclaration","scope":697,"src":"8279:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":668,"name":"uint256","nodeType":"ElementaryTypeName","src":"8279:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8261:32:3"},"returnParameters":{"id":671,"nodeType":"ParameterList","parameters":[],"src":"8303:0:3"},"scope":824,"src":"8247:206:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":714,"nodeType":"Block","src":"9063:54:3","statements":[{"expression":{"arguments":[{"id":708,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"9082:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":709,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"9089:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"9098:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9105:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":707,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[715,775],"referencedDeclaration":775,"src":"9073:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9073:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":713,"nodeType":"ExpressionStatement","src":"9073:37:3"}]},"documentation":{"id":698,"nodeType":"StructuredDocumentation","src":"8459:525:3","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":715,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8998:8:3","nodeType":"FunctionDefinition","parameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"mutability":"mutable","name":"owner","nameLocation":"9015:5:3","nodeType":"VariableDeclaration","scope":715,"src":"9007:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":699,"name":"address","nodeType":"ElementaryTypeName","src":"9007:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":702,"mutability":"mutable","name":"spender","nameLocation":"9030:7:3","nodeType":"VariableDeclaration","scope":715,"src":"9022:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":701,"name":"address","nodeType":"ElementaryTypeName","src":"9022:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":704,"mutability":"mutable","name":"value","nameLocation":"9047:5:3","nodeType":"VariableDeclaration","scope":715,"src":"9039:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":703,"name":"uint256","nodeType":"ElementaryTypeName","src":"9039:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9006:47:3"},"returnParameters":{"id":706,"nodeType":"ParameterList","parameters":[],"src":"9063:0:3"},"scope":824,"src":"8989:128:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":774,"nodeType":"Block","src":"10047:334:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":727,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"10061:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:3","typeDescriptions":{}}},"id":731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10061:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":741,"nodeType":"IfStatement","src":"10057:89:3","trueBody":{"id":740,"nodeType":"Block","src":"10082:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10124:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":734,"name":"address","nodeType":"ElementaryTypeName","src":"10124:7:3","typeDescriptions":{}}},"id":737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10124:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":733,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"10103:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10103:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":739,"nodeType":"RevertStatement","src":"10096:39:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":742,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"10159:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10178:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10170:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":743,"name":"address","nodeType":"ElementaryTypeName","src":"10170:7:3","typeDescriptions":{}}},"id":746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10159:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":756,"nodeType":"IfStatement","src":"10155:90:3","trueBody":{"id":755,"nodeType":"Block","src":"10182:63:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10231:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10223:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":749,"name":"address","nodeType":"ElementaryTypeName","src":"10223:7:3","typeDescriptions":{}}},"id":752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":748,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"10203:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10203:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":754,"nodeType":"RevertStatement","src":"10196:38:3"}]}},{"expression":{"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":757,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"10254:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":760,"indexExpression":{"id":758,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"10266:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10254:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":761,"indexExpression":{"id":759,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"10273:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10254:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"10284:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10254:35:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":764,"nodeType":"ExpressionStatement","src":"10254:35:3"},{"condition":{"id":765,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"10303:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":773,"nodeType":"IfStatement","src":"10299:76:3","trueBody":{"id":772,"nodeType":"Block","src":"10314:61:3","statements":[{"eventCall":{"arguments":[{"id":767,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"10342:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":768,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"10349:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"10358:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":766,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"10333:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10333:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":771,"nodeType":"EmitStatement","src":"10328:36:3"}]}}]},"documentation":{"id":716,"nodeType":"StructuredDocumentation","src":"9123:821:3","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":775,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9958:8:3","nodeType":"FunctionDefinition","parameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":718,"mutability":"mutable","name":"owner","nameLocation":"9975:5:3","nodeType":"VariableDeclaration","scope":775,"src":"9967:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":717,"name":"address","nodeType":"ElementaryTypeName","src":"9967:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":720,"mutability":"mutable","name":"spender","nameLocation":"9990:7:3","nodeType":"VariableDeclaration","scope":775,"src":"9982:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":719,"name":"address","nodeType":"ElementaryTypeName","src":"9982:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":722,"mutability":"mutable","name":"value","nameLocation":"10007:5:3","nodeType":"VariableDeclaration","scope":775,"src":"9999:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":721,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":724,"mutability":"mutable","name":"emitEvent","nameLocation":"10019:9:3","nodeType":"VariableDeclaration","scope":775,"src":"10014:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":723,"name":"bool","nodeType":"ElementaryTypeName","src":"10014:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9966:63:3"},"returnParameters":{"id":726,"nodeType":"ParameterList","parameters":[],"src":"10047:0:3"},"scope":824,"src":"9949:432:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":822,"nodeType":"Block","src":"10752:388:3","statements":[{"assignments":[786],"declarations":[{"constant":false,"id":786,"mutability":"mutable","name":"currentAllowance","nameLocation":"10770:16:3","nodeType":"VariableDeclaration","scope":822,"src":"10762:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":785,"name":"uint256","nodeType":"ElementaryTypeName","src":"10762:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":791,"initialValue":{"arguments":[{"id":788,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"10799:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":789,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"10806:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":787,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"10789:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10789:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10762:52:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":792,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"10828:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10853:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":794,"name":"uint256","nodeType":"ElementaryTypeName","src":"10853:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":793,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10848:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10862:3:3","memberName":"max","nodeType":"MemberAccess","src":"10848:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":821,"nodeType":"IfStatement","src":"10824:310:3","trueBody":{"id":820,"nodeType":"Block","src":"10867:267:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":799,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"10885:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"10904:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10885:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":809,"nodeType":"IfStatement","src":"10881:130:3","trueBody":{"id":808,"nodeType":"Block","src":"10911:100:3","statements":[{"errorCall":{"arguments":[{"id":803,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"10963:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":804,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"10972:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"10990:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":802,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"10936:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10936:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":807,"nodeType":"RevertStatement","src":"10929:67:3"}]}},{"id":819,"nodeType":"UncheckedBlock","src":"11024:100:3","statements":[{"expression":{"arguments":[{"id":811,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"11061:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":812,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"11068:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":813,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"11077:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"11096:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11077:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11103:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":810,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[715,775],"referencedDeclaration":775,"src":"11052:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11052:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":818,"nodeType":"ExpressionStatement","src":"11052:57:3"}]}]}}]},"documentation":{"id":776,"nodeType":"StructuredDocumentation","src":"10387:271:3","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":823,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10672:15:3","nodeType":"FunctionDefinition","parameters":{"id":783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":778,"mutability":"mutable","name":"owner","nameLocation":"10696:5:3","nodeType":"VariableDeclaration","scope":823,"src":"10688:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":777,"name":"address","nodeType":"ElementaryTypeName","src":"10688:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":780,"mutability":"mutable","name":"spender","nameLocation":"10711:7:3","nodeType":"VariableDeclaration","scope":823,"src":"10703:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"10703:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":782,"mutability":"mutable","name":"value","nameLocation":"10728:5:3","nodeType":"VariableDeclaration","scope":823,"src":"10720:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":781,"name":"uint256","nodeType":"ElementaryTypeName","src":"10720:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10687:47:3"},"returnParameters":{"id":784,"nodeType":"ParameterList","parameters":[],"src":"10752:0:3"},"scope":824,"src":"10663:477:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":825,"src":"1401:9741:3","usedErrors":[184,189,194,203,208,213],"usedEvents":[836,845]}],"src":"105:11038:3"},"id":3},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[902]},"id":903,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":826,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"132:70:4","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":902,"linearizedBaseContracts":[902],"name":"IERC20","nameLocation":"213:6:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":828,"nodeType":"StructuredDocumentation","src":"226:158:4","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":836,"name":"Transfer","nameLocation":"395:8:4","nodeType":"EventDefinition","parameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":830,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:4","nodeType":"VariableDeclaration","scope":836,"src":"404:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":829,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":832,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:4","nodeType":"VariableDeclaration","scope":836,"src":"426:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":831,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":834,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:4","nodeType":"VariableDeclaration","scope":836,"src":"446:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":833,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:4"},"src":"389:72:4"},{"anonymous":false,"documentation":{"id":837,"nodeType":"StructuredDocumentation","src":"467:148:4","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":845,"name":"Approval","nameLocation":"626:8:4","nodeType":"EventDefinition","parameters":{"id":844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":839,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:4","nodeType":"VariableDeclaration","scope":845,"src":"635:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":838,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":841,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:4","nodeType":"VariableDeclaration","scope":845,"src":"658:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":840,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":843,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:4","nodeType":"VariableDeclaration","scope":845,"src":"683:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":842,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:4"},"src":"620:78:4"},{"documentation":{"id":846,"nodeType":"StructuredDocumentation","src":"704:65:4","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":851,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:4","nodeType":"FunctionDefinition","parameters":{"id":847,"nodeType":"ParameterList","parameters":[],"src":"794:2:4"},"returnParameters":{"id":850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":851,"src":"820:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":848,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:4"},"scope":902,"src":"774:55:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":852,"nodeType":"StructuredDocumentation","src":"835:71:4","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":859,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:4","nodeType":"FunctionDefinition","parameters":{"id":855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":854,"mutability":"mutable","name":"account","nameLocation":"938:7:4","nodeType":"VariableDeclaration","scope":859,"src":"930:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:4"},"returnParameters":{"id":858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":859,"src":"970:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":856,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:4"},"scope":902,"src":"911:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":860,"nodeType":"StructuredDocumentation","src":"985:213:4","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":869,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:4","nodeType":"FunctionDefinition","parameters":{"id":865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"to","nameLocation":"1229:2:4","nodeType":"VariableDeclaration","scope":869,"src":"1221:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":861,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":864,"mutability":"mutable","name":"value","nameLocation":"1241:5:4","nodeType":"VariableDeclaration","scope":869,"src":"1233:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":863,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:4"},"returnParameters":{"id":868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":869,"src":"1266:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":866,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:4"},"scope":902,"src":"1203:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":870,"nodeType":"StructuredDocumentation","src":"1278:264:4","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":879,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:4","nodeType":"FunctionDefinition","parameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":872,"mutability":"mutable","name":"owner","nameLocation":"1574:5:4","nodeType":"VariableDeclaration","scope":879,"src":"1566:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":871,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":874,"mutability":"mutable","name":"spender","nameLocation":"1589:7:4","nodeType":"VariableDeclaration","scope":879,"src":"1581:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":873,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:4"},"returnParameters":{"id":878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":879,"src":"1621:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":876,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:4"},"scope":902,"src":"1547:83:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":880,"nodeType":"StructuredDocumentation","src":"1636:667:4","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":889,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:4","nodeType":"FunctionDefinition","parameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":882,"mutability":"mutable","name":"spender","nameLocation":"2333:7:4","nodeType":"VariableDeclaration","scope":889,"src":"2325:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":881,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":884,"mutability":"mutable","name":"value","nameLocation":"2350:5:4","nodeType":"VariableDeclaration","scope":889,"src":"2342:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":883,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:4"},"returnParameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":889,"src":"2375:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":886,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:4"},"scope":902,"src":"2308:73:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":890,"nodeType":"StructuredDocumentation","src":"2387:297:4","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":901,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:4","nodeType":"FunctionDefinition","parameters":{"id":897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":892,"mutability":"mutable","name":"from","nameLocation":"2719:4:4","nodeType":"VariableDeclaration","scope":901,"src":"2711:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":891,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":894,"mutability":"mutable","name":"to","nameLocation":"2733:2:4","nodeType":"VariableDeclaration","scope":901,"src":"2725:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":893,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":896,"mutability":"mutable","name":"value","nameLocation":"2745:5:4","nodeType":"VariableDeclaration","scope":901,"src":"2737:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":895,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:4"},"returnParameters":{"id":900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":901,"src":"2770:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":898,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:4"},"scope":902,"src":"2689:87:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":903,"src":"203:2575:4","usedErrors":[],"usedEvents":[836,845]}],"src":"106:2673:4"},"id":4},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"ECDSA":[2146],"EIP712":[2373],"ERC20":[824],"ERC20Permit":[1056],"IERC20Permit":[1118],"Nonces":[1216]},"id":1057,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":904,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"122:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":906,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1057,"sourceUnit":1119,"src":"148:48:5","symbolAliases":[{"foreign":{"id":905,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"156:12:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":908,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1057,"sourceUnit":825,"src":"197:35:5","symbolAliases":[{"foreign":{"id":907,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"205:5:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":910,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1057,"sourceUnit":2147,"src":"233:60:5","symbolAliases":[{"foreign":{"id":909,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"241:5:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":912,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1057,"sourceUnit":2374,"src":"294:62:5","symbolAliases":[{"foreign":{"id":911,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"302:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../../utils/Nonces.sol","id":914,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1057,"sourceUnit":1217,"src":"357:49:5","symbolAliases":[{"foreign":{"id":913,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"365:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":916,"name":"ERC20","nameLocations":["929:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"929:5:5"},"id":917,"nodeType":"InheritanceSpecifier","src":"929:5:5"},{"baseName":{"id":918,"name":"IERC20Permit","nameLocations":["936:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":1118,"src":"936:12:5"},"id":919,"nodeType":"InheritanceSpecifier","src":"936:12:5"},{"baseName":{"id":920,"name":"EIP712","nameLocations":["950:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":2373,"src":"950:6:5"},"id":921,"nodeType":"InheritanceSpecifier","src":"950:6:5"},{"baseName":{"id":922,"name":"Nonces","nameLocations":["958:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":1216,"src":"958:6:5"},"id":923,"nodeType":"InheritanceSpecifier","src":"958:6:5"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":915,"nodeType":"StructuredDocumentation","src":"408:487:5","text":" @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":true,"id":1056,"linearizedBaseContracts":[1056,1216,2373,172,1118,824,214,1082,902,1148],"name":"ERC20Permit","nameLocation":"914:11:5","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":928,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"996:15:5","nodeType":"VariableDeclaration","scope":1056,"src":"971:146:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":924,"name":"bytes32","nodeType":"ElementaryTypeName","src":"971:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1032:84:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":925,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1022:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1022:95:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":929,"nodeType":"StructuredDocumentation","src":"1124:52:5","text":" @dev Permit deadline has expired."},"errorSelector":"62791302","id":933,"name":"ERC2612ExpiredSignature","nameLocation":"1187:23:5","nodeType":"ErrorDefinition","parameters":{"id":932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":931,"mutability":"mutable","name":"deadline","nameLocation":"1219:8:5","nodeType":"VariableDeclaration","scope":933,"src":"1211:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":930,"name":"uint256","nodeType":"ElementaryTypeName","src":"1211:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:18:5"},"src":"1181:48:5"},{"documentation":{"id":934,"nodeType":"StructuredDocumentation","src":"1235:45:5","text":" @dev Mismatched signature."},"errorSelector":"4b800e46","id":940,"name":"ERC2612InvalidSigner","nameLocation":"1291:20:5","nodeType":"ErrorDefinition","parameters":{"id":939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":936,"mutability":"mutable","name":"signer","nameLocation":"1320:6:5","nodeType":"VariableDeclaration","scope":940,"src":"1312:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":935,"name":"address","nodeType":"ElementaryTypeName","src":"1312:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":938,"mutability":"mutable","name":"owner","nameLocation":"1336:5:5","nodeType":"VariableDeclaration","scope":940,"src":"1328:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":937,"name":"address","nodeType":"ElementaryTypeName","src":"1328:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1311:31:5"},"src":"1285:58:5"},{"body":{"id":950,"nodeType":"Block","src":"1624:2:5","statements":[]},"documentation":{"id":941,"nodeType":"StructuredDocumentation","src":"1349:220:5","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."},"id":951,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":946,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"1613:4:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1619:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":948,"kind":"baseConstructorSpecifier","modifierName":{"id":945,"name":"EIP712","nameLocations":["1606:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":2373,"src":"1606:6:5"},"nodeType":"ModifierInvocation","src":"1606:17:5"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":943,"mutability":"mutable","name":"name","nameLocation":"1600:4:5","nodeType":"VariableDeclaration","scope":951,"src":"1586:18:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":942,"name":"string","nodeType":"ElementaryTypeName","src":"1586:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1585:20:5"},"returnParameters":{"id":949,"nodeType":"ParameterList","parameters":[],"src":"1624:0:5"},"scope":1056,"src":"1574:52:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1103],"body":{"id":1027,"nodeType":"Block","src":"1869:483:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":969,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1883:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1889:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"1883:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":971,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"1901:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1883:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":978,"nodeType":"IfStatement","src":"1879:97:5","trueBody":{"id":977,"nodeType":"Block","src":"1911:65:5","statements":[{"errorCall":{"arguments":[{"id":974,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"1956:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":973,"name":"ERC2612ExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"1932:23:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1932:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":976,"nodeType":"RevertStatement","src":"1925:40:5"}]}},{"assignments":[980],"declarations":[{"constant":false,"id":980,"mutability":"mutable","name":"structHash","nameLocation":"1994:10:5","nodeType":"VariableDeclaration","scope":1027,"src":"1986:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":979,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1986:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":994,"initialValue":{"arguments":[{"arguments":[{"id":984,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"2028:15:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":985,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"2045:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":986,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"2052:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"2061:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":989,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"2078:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":988,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"2068:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2068:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":991,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"2086:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":982,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2017:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2021:6:5","memberName":"encode","nodeType":"MemberAccess","src":"2017:10:5","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2017:78:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":981,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2007:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2007:89:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1986:110:5"},{"assignments":[996],"declarations":[{"constant":false,"id":996,"mutability":"mutable","name":"hash","nameLocation":"2115:4:5","nodeType":"VariableDeclaration","scope":1027,"src":"2107:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":995,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2107:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1000,"initialValue":{"arguments":[{"id":998,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"2139:10:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":997,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"2122:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2122:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2107:43:5"},{"assignments":[1002],"declarations":[{"constant":false,"id":1002,"mutability":"mutable","name":"signer","nameLocation":"2169:6:5","nodeType":"VariableDeclaration","scope":1027,"src":"2161:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1001,"name":"address","nodeType":"ElementaryTypeName","src":"2161:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1010,"initialValue":{"arguments":[{"id":1005,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"2192:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1006,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"2198:1:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1007,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"2201:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1008,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"2204:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1003,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"2178:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$2146_$","typeString":"type(library ECDSA)"}},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2184:7:5","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":2096,"src":"2178:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2161:45:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1011,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"2220:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1012,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"2230:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2220:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1020,"nodeType":"IfStatement","src":"2216:88:5","trueBody":{"id":1019,"nodeType":"Block","src":"2237:67:5","statements":[{"errorCall":{"arguments":[{"id":1015,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"2279:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1016,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"2287:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1014,"name":"ERC2612InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"2258:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2258:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1018,"nodeType":"RevertStatement","src":"2251:42:5"}]}},{"expression":{"arguments":[{"id":1022,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"2323:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1023,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"2330:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"2339:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1021,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[715,775],"referencedDeclaration":715,"src":"2314:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2314:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1026,"nodeType":"ExpressionStatement","src":"2314:31:5"}]},"documentation":{"id":952,"nodeType":"StructuredDocumentation","src":"1632:43:5","text":" @inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":1028,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1689:6:5","nodeType":"FunctionDefinition","parameters":{"id":967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":954,"mutability":"mutable","name":"owner","nameLocation":"1713:5:5","nodeType":"VariableDeclaration","scope":1028,"src":"1705:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":953,"name":"address","nodeType":"ElementaryTypeName","src":"1705:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":956,"mutability":"mutable","name":"spender","nameLocation":"1736:7:5","nodeType":"VariableDeclaration","scope":1028,"src":"1728:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":955,"name":"address","nodeType":"ElementaryTypeName","src":"1728:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":958,"mutability":"mutable","name":"value","nameLocation":"1761:5:5","nodeType":"VariableDeclaration","scope":1028,"src":"1753:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":957,"name":"uint256","nodeType":"ElementaryTypeName","src":"1753:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":960,"mutability":"mutable","name":"deadline","nameLocation":"1784:8:5","nodeType":"VariableDeclaration","scope":1028,"src":"1776:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":959,"name":"uint256","nodeType":"ElementaryTypeName","src":"1776:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":962,"mutability":"mutable","name":"v","nameLocation":"1808:1:5","nodeType":"VariableDeclaration","scope":1028,"src":"1802:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":961,"name":"uint8","nodeType":"ElementaryTypeName","src":"1802:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":964,"mutability":"mutable","name":"r","nameLocation":"1827:1:5","nodeType":"VariableDeclaration","scope":1028,"src":"1819:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":963,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1819:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":966,"mutability":"mutable","name":"s","nameLocation":"1846:1:5","nodeType":"VariableDeclaration","scope":1028,"src":"1838:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":965,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1838:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1695:158:5"},"returnParameters":{"id":968,"nodeType":"ParameterList","parameters":[],"src":"1869:0:5"},"scope":1056,"src":"1680:672:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1111,1175],"body":{"id":1044,"nodeType":"Block","src":"2506:43:5","statements":[{"expression":{"arguments":[{"id":1041,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"2536:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1039,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2523:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Permit_$1056_$","typeString":"type(contract super ERC20Permit)"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2529:6:5","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1175,"src":"2523:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2523:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1038,"id":1043,"nodeType":"Return","src":"2516:26:5"}]},"documentation":{"id":1029,"nodeType":"StructuredDocumentation","src":"2358:43:5","text":" @inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":1045,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2415:6:5","nodeType":"FunctionDefinition","overrides":{"id":1035,"nodeType":"OverrideSpecifier","overrides":[{"id":1033,"name":"IERC20Permit","nameLocations":["2466:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":1118,"src":"2466:12:5"},{"id":1034,"name":"Nonces","nameLocations":["2480:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":1216,"src":"2480:6:5"}],"src":"2457:30:5"},"parameters":{"id":1032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1031,"mutability":"mutable","name":"owner","nameLocation":"2430:5:5","nodeType":"VariableDeclaration","scope":1045,"src":"2422:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1030,"name":"address","nodeType":"ElementaryTypeName","src":"2422:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2421:15:5"},"returnParameters":{"id":1038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1045,"src":"2497:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1036,"name":"uint256","nodeType":"ElementaryTypeName","src":"2497:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2496:9:5"},"scope":1056,"src":"2406:143:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1117],"body":{"id":1054,"nodeType":"Block","src":"2724:44:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1051,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"2741:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2741:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1050,"id":1053,"nodeType":"Return","src":"2734:27:5"}]},"documentation":{"id":1046,"nodeType":"StructuredDocumentation","src":"2555:43:5","text":" @inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":1055,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2665:16:5","nodeType":"FunctionDefinition","parameters":{"id":1047,"nodeType":"ParameterList","parameters":[],"src":"2681:2:5"},"returnParameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1055,"src":"2715:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1048,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2715:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2714:9:5"},"scope":1056,"src":"2656:112:5","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":1057,"src":"896:1874:5","usedErrors":[184,189,194,203,208,213,933,940,1158,1230,1232,1809,1814,1819],"usedEvents":[152,836,845]}],"src":"122:2649:5"},"id":5},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[902],"IERC20Metadata":[1082]},"id":1083,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1058,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1060,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1083,"sourceUnit":903,"src":"151:37:6","symbolAliases":[{"foreign":{"id":1059,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"159:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1062,"name":"IERC20","nameLocations":["305:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":902,"src":"305:6:6"},"id":1063,"nodeType":"InheritanceSpecifier","src":"305:6:6"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1061,"nodeType":"StructuredDocumentation","src":"190:86:6","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":1082,"linearizedBaseContracts":[1082,902],"name":"IERC20Metadata","nameLocation":"287:14:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1064,"nodeType":"StructuredDocumentation","src":"318:54:6","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1069,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:6","nodeType":"FunctionDefinition","parameters":{"id":1065,"nodeType":"ParameterList","parameters":[],"src":"390:2:6"},"returnParameters":{"id":1068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1067,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1069,"src":"416:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1066,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:6"},"scope":1082,"src":"377:54:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1070,"nodeType":"StructuredDocumentation","src":"437:56:6","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1075,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:6","nodeType":"FunctionDefinition","parameters":{"id":1071,"nodeType":"ParameterList","parameters":[],"src":"513:2:6"},"returnParameters":{"id":1074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1075,"src":"539:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1072,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:6"},"scope":1082,"src":"498:56:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1076,"nodeType":"StructuredDocumentation","src":"560:65:6","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1081,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:6","nodeType":"FunctionDefinition","parameters":{"id":1077,"nodeType":"ParameterList","parameters":[],"src":"647:2:6"},"returnParameters":{"id":1080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1079,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1081,"src":"673:5:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1078,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:6"},"scope":1082,"src":"630:50:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1083,"src":"277:405:6","usedErrors":[],"usedEvents":[836,845]}],"src":"125:558:6"},"id":6},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1118]},"id":1119,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1084,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1085,"nodeType":"StructuredDocumentation","src":"149:1963:7","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":1118,"linearizedBaseContracts":[1118],"name":"IERC20Permit","nameLocation":"2123:12:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1086,"nodeType":"StructuredDocumentation","src":"2142:850:7","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":1103,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3006:6:7","nodeType":"FunctionDefinition","parameters":{"id":1101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1088,"mutability":"mutable","name":"owner","nameLocation":"3030:5:7","nodeType":"VariableDeclaration","scope":1103,"src":"3022:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1087,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1090,"mutability":"mutable","name":"spender","nameLocation":"3053:7:7","nodeType":"VariableDeclaration","scope":1103,"src":"3045:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1089,"name":"address","nodeType":"ElementaryTypeName","src":"3045:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1092,"mutability":"mutable","name":"value","nameLocation":"3078:5:7","nodeType":"VariableDeclaration","scope":1103,"src":"3070:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1091,"name":"uint256","nodeType":"ElementaryTypeName","src":"3070:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1094,"mutability":"mutable","name":"deadline","nameLocation":"3101:8:7","nodeType":"VariableDeclaration","scope":1103,"src":"3093:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1093,"name":"uint256","nodeType":"ElementaryTypeName","src":"3093:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1096,"mutability":"mutable","name":"v","nameLocation":"3125:1:7","nodeType":"VariableDeclaration","scope":1103,"src":"3119:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1095,"name":"uint8","nodeType":"ElementaryTypeName","src":"3119:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1098,"mutability":"mutable","name":"r","nameLocation":"3144:1:7","nodeType":"VariableDeclaration","scope":1103,"src":"3136:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1097,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3136:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1100,"mutability":"mutable","name":"s","nameLocation":"3163:1:7","nodeType":"VariableDeclaration","scope":1103,"src":"3155:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1099,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3155:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3012:158:7"},"returnParameters":{"id":1102,"nodeType":"ParameterList","parameters":[],"src":"3179:0:7"},"scope":1118,"src":"2997:183:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1104,"nodeType":"StructuredDocumentation","src":"3186:294:7","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1111,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3494:6:7","nodeType":"FunctionDefinition","parameters":{"id":1107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1106,"mutability":"mutable","name":"owner","nameLocation":"3509:5:7","nodeType":"VariableDeclaration","scope":1111,"src":"3501:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1105,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3500:15:7"},"returnParameters":{"id":1110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1109,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1111,"src":"3539:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1108,"name":"uint256","nodeType":"ElementaryTypeName","src":"3539:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3538:9:7"},"scope":1118,"src":"3485:63:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1112,"nodeType":"StructuredDocumentation","src":"3554:128:7","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1117,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3749:16:7","nodeType":"FunctionDefinition","parameters":{"id":1113,"nodeType":"ParameterList","parameters":[],"src":"3765:2:7"},"returnParameters":{"id":1116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1117,"src":"3791:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1114,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3791:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3790:9:7"},"scope":1118,"src":"3740:60:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1119,"src":"2113:1689:7","usedErrors":[],"usedEvents":[]}],"src":"123:3680:7"},"id":7},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1148]},"id":1149,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1120,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:8"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1121,"nodeType":"StructuredDocumentation","src":"127:496:8","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1148,"linearizedBaseContracts":[1148],"name":"Context","nameLocation":"642:7:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1129,"nodeType":"Block","src":"718:34:8","statements":[{"expression":{"expression":{"id":1126,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:8","memberName":"sender","nodeType":"MemberAccess","src":"735:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1125,"id":1128,"nodeType":"Return","src":"728:17:8"}]},"id":1130,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:8","nodeType":"FunctionDefinition","parameters":{"id":1122,"nodeType":"ParameterList","parameters":[],"src":"675:2:8"},"returnParameters":{"id":1125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1130,"src":"709:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1123,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:8"},"scope":1148,"src":"656:96:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1138,"nodeType":"Block","src":"825:32:8","statements":[{"expression":{"expression":{"id":1135,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:8","memberName":"data","nodeType":"MemberAccess","src":"842:8:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1134,"id":1137,"nodeType":"Return","src":"835:15:8"}]},"id":1139,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:8","nodeType":"FunctionDefinition","parameters":{"id":1131,"nodeType":"ParameterList","parameters":[],"src":"775:2:8"},"returnParameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1139,"src":"809:14:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1132,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:8"},"scope":1148,"src":"758:99:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1146,"nodeType":"Block","src":"935:25:8","statements":[{"expression":{"hexValue":"30","id":1144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1143,"id":1145,"nodeType":"Return","src":"945:8:8"}]},"id":1147,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:8","nodeType":"FunctionDefinition","parameters":{"id":1140,"nodeType":"ParameterList","parameters":[],"src":"892:2:8"},"returnParameters":{"id":1143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1147,"src":"926:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1141,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:8"},"scope":1148,"src":"863:97:8","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1149,"src":"624:338:8","usedErrors":[],"usedEvents":[]}],"src":"101:862:8"},"id":8},"@openzeppelin/contracts/utils/Nonces.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","exportedSymbols":{"Nonces":[1216]},"id":1217,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1150,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:9"},{"abstract":true,"baseContracts":[],"canonicalName":"Nonces","contractDependencies":[],"contractKind":"contract","documentation":{"id":1151,"nodeType":"StructuredDocumentation","src":"125:83:9","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":1216,"linearizedBaseContracts":[1216],"name":"Nonces","nameLocation":"227:6:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1152,"nodeType":"StructuredDocumentation","src":"240:90:9","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":1158,"name":"InvalidAccountNonce","nameLocation":"341:19:9","nodeType":"ErrorDefinition","parameters":{"id":1157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1154,"mutability":"mutable","name":"account","nameLocation":"369:7:9","nodeType":"VariableDeclaration","scope":1158,"src":"361:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1153,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1156,"mutability":"mutable","name":"currentNonce","nameLocation":"386:12:9","nodeType":"VariableDeclaration","scope":1158,"src":"378:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1155,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"360:39:9"},"src":"335:65:9"},{"constant":false,"id":1162,"mutability":"mutable","name":"_nonces","nameLocation":"450:7:9","nodeType":"VariableDeclaration","scope":1216,"src":"406:51:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1161,"keyName":"account","keyNameLocation":"422:7:9","keyType":{"id":1159,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"406:35:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1160,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":1174,"nodeType":"Block","src":"607:38:9","statements":[{"expression":{"baseExpression":{"id":1170,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"624:7:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1172,"indexExpression":{"id":1171,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"632:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"624:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1169,"id":1173,"nodeType":"Return","src":"617:21:9"}]},"documentation":{"id":1163,"nodeType":"StructuredDocumentation","src":"464:69:9","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":1175,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"547:6:9","nodeType":"FunctionDefinition","parameters":{"id":1166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1165,"mutability":"mutable","name":"owner","nameLocation":"562:5:9","nodeType":"VariableDeclaration","scope":1175,"src":"554:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1164,"name":"address","nodeType":"ElementaryTypeName","src":"554:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"553:15:9"},"returnParameters":{"id":1169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1175,"src":"598:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1167,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"597:9:9"},"scope":1216,"src":"538:107:9","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1189,"nodeType":"Block","src":"828:326:9","statements":[{"id":1188,"nodeType":"UncheckedBlock","src":"1031:117:9","statements":[{"expression":{"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1121:16:9","subExpression":{"baseExpression":{"id":1183,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"1121:7:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1185,"indexExpression":{"id":1184,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"1129:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1121:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1182,"id":1187,"nodeType":"Return","src":"1114:23:9"}]}]},"documentation":{"id":1176,"nodeType":"StructuredDocumentation","src":"651:103:9","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":1190,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"768:9:9","nodeType":"FunctionDefinition","parameters":{"id":1179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1178,"mutability":"mutable","name":"owner","nameLocation":"786:5:9","nodeType":"VariableDeclaration","scope":1190,"src":"778:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1177,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:15:9"},"returnParameters":{"id":1182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1181,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1190,"src":"819:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1180,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:9:9"},"scope":1216,"src":"759:395:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1214,"nodeType":"Block","src":"1338:149:9","statements":[{"assignments":[1199],"declarations":[{"constant":false,"id":1199,"mutability":"mutable","name":"current","nameLocation":"1356:7:9","nodeType":"VariableDeclaration","scope":1214,"src":"1348:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1198,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1203,"initialValue":{"arguments":[{"id":1201,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"1376:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1200,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"1366:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1348:34:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1204,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"1396:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1205,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"1405:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1396:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1213,"nodeType":"IfStatement","src":"1392:89:9","trueBody":{"id":1212,"nodeType":"Block","src":"1414:67:9","statements":[{"errorCall":{"arguments":[{"id":1208,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"1455:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1209,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"1462:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1207,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"1435:19:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1435:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1211,"nodeType":"RevertStatement","src":"1428:42:9"}]}}]},"documentation":{"id":1191,"nodeType":"StructuredDocumentation","src":"1160:100:9","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":1215,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"1274:16:9","nodeType":"FunctionDefinition","parameters":{"id":1196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1193,"mutability":"mutable","name":"owner","nameLocation":"1299:5:9","nodeType":"VariableDeclaration","scope":1215,"src":"1291:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1192,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1195,"mutability":"mutable","name":"nonce","nameLocation":"1314:5:9","nodeType":"VariableDeclaration","scope":1215,"src":"1306:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1194,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1290:30:9"},"returnParameters":{"id":1197,"nodeType":"ParameterList","parameters":[],"src":"1338:0:9"},"scope":1216,"src":"1265:222:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1217,"src":"209:1280:9","usedErrors":[1158],"usedEvents":[]}],"src":"99:1391:9"},"id":9},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[1222],"ShortStrings":[1433],"StorageSlot":[1543]},"id":1434,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1218,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:10"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":1220,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1434,"sourceUnit":1544,"src":"132:46:10","symbolAliases":[{"foreign":{"id":1219,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"140:11:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":1222,"name":"ShortString","nameLocation":"353:11:10","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:10","underlyingType":{"id":1221,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":1223,"nodeType":"StructuredDocumentation","src":"378:876:10","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":1433,"linearizedBaseContracts":[1433],"name":"ShortStrings","nameLocation":"1263:12:10","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1226,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:10","nodeType":"VariableDeclaration","scope":1433,"src":"1345:111:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1224,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":1225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:10","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":1230,"name":"StringTooLong","nameLocation":"1469:13:10","nodeType":"ErrorDefinition","parameters":{"id":1229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1228,"mutability":"mutable","name":"str","nameLocation":"1490:3:10","nodeType":"VariableDeclaration","scope":1230,"src":"1483:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1227,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:10"},"src":"1463:32:10"},{"errorSelector":"b3512b0c","id":1232,"name":"InvalidShortString","nameLocation":"1506:18:10","nodeType":"ErrorDefinition","parameters":{"id":1231,"nodeType":"ParameterList","parameters":[],"src":"1524:2:10"},"src":"1500:27:10"},{"body":{"id":1275,"nodeType":"Block","src":"1786:208:10","statements":[{"assignments":[1242],"declarations":[{"constant":false,"id":1242,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:10","nodeType":"VariableDeclaration","scope":1275,"src":"1796:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1241,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1247,"initialValue":{"arguments":[{"id":1245,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"1822:3:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1243,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:10","typeDescriptions":{}}},"id":1246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1248,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"1840:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:10","memberName":"length","nodeType":"MemberAccess","src":"1840:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:10","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1257,"nodeType":"IfStatement","src":"1836:72:10","trueBody":{"id":1256,"nodeType":"Block","src":"1858:50:10","statements":[{"errorCall":{"arguments":[{"id":1253,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"1893:3:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1252,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"1879:13:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1255,"nodeType":"RevertStatement","src":"1872:25:10"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1266,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"1965:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1264,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:10","typeDescriptions":{}}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1262,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:10","typeDescriptions":{}}},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":1269,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"1974:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:10","memberName":"length","nodeType":"MemberAccess","src":"1974:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1260,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:10","typeDescriptions":{}}},"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1258,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"1924:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1222_$","typeString":"type(ShortString)"}},"id":1259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:10","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:10","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1222_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}},"functionReturnParameters":1240,"id":1274,"nodeType":"Return","src":"1917:70:10"}]},"documentation":{"id":1233,"nodeType":"StructuredDocumentation","src":"1533:170:10","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":1276,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:10","nodeType":"FunctionDefinition","parameters":{"id":1236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1235,"mutability":"mutable","name":"str","nameLocation":"1745:3:10","nodeType":"VariableDeclaration","scope":1276,"src":"1731:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1234,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:10"},"returnParameters":{"id":1240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1276,"src":"1773:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"},"typeName":{"id":1238,"nodeType":"UserDefinedTypeName","pathNode":{"id":1237,"name":"ShortString","nameLocations":["1773:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"1773:11:10"},"referencedDeclaration":1222,"src":"1773:11:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:10"},"scope":1433,"src":"1708:286:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1301,"nodeType":"Block","src":"2152:331:10","statements":[{"assignments":[1286],"declarations":[{"constant":false,"id":1286,"mutability":"mutable","name":"len","nameLocation":"2170:3:10","nodeType":"VariableDeclaration","scope":1301,"src":"2162:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1285,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1290,"initialValue":{"arguments":[{"id":1288,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"2187:4:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}],"id":1287,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"2176:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1222_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:10"},{"assignments":[1292],"declarations":[{"constant":false,"id":1292,"mutability":"mutable","name":"str","nameLocation":"2294:3:10","nodeType":"VariableDeclaration","scope":1301,"src":"2280:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1291,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1297,"initialValue":{"arguments":[{"hexValue":"3332","id":1295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":1294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1293,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:10"},{"AST":{"nativeSrc":"2376:81:10","nodeType":"YulBlock","src":"2376:81:10","statements":[{"expression":{"arguments":[{"name":"str","nativeSrc":"2397:3:10","nodeType":"YulIdentifier","src":"2397:3:10"},{"name":"len","nativeSrc":"2402:3:10","nodeType":"YulIdentifier","src":"2402:3:10"}],"functionName":{"name":"mstore","nativeSrc":"2390:6:10","nodeType":"YulIdentifier","src":"2390:6:10"},"nativeSrc":"2390:16:10","nodeType":"YulFunctionCall","src":"2390:16:10"},"nativeSrc":"2390:16:10","nodeType":"YulExpressionStatement","src":"2390:16:10"},{"expression":{"arguments":[{"arguments":[{"name":"str","nativeSrc":"2430:3:10","nodeType":"YulIdentifier","src":"2430:3:10"},{"kind":"number","nativeSrc":"2435:4:10","nodeType":"YulLiteral","src":"2435:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2426:3:10","nodeType":"YulIdentifier","src":"2426:3:10"},"nativeSrc":"2426:14:10","nodeType":"YulFunctionCall","src":"2426:14:10"},{"name":"sstr","nativeSrc":"2442:4:10","nodeType":"YulIdentifier","src":"2442:4:10"}],"functionName":{"name":"mstore","nativeSrc":"2419:6:10","nodeType":"YulIdentifier","src":"2419:6:10"},"nativeSrc":"2419:28:10","nodeType":"YulFunctionCall","src":"2419:28:10"},"nativeSrc":"2419:28:10","nodeType":"YulExpressionStatement","src":"2419:28:10"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1286,"isOffset":false,"isSlot":false,"src":"2402:3:10","valueSize":1},{"declaration":1280,"isOffset":false,"isSlot":false,"src":"2442:4:10","valueSize":1},{"declaration":1292,"isOffset":false,"isSlot":false,"src":"2397:3:10","valueSize":1},{"declaration":1292,"isOffset":false,"isSlot":false,"src":"2430:3:10","valueSize":1}],"id":1298,"nodeType":"InlineAssembly","src":"2367:90:10"},{"expression":{"id":1299,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"2473:3:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1284,"id":1300,"nodeType":"Return","src":"2466:10:10"}]},"documentation":{"id":1277,"nodeType":"StructuredDocumentation","src":"2000:73:10","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":1302,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:10","nodeType":"FunctionDefinition","parameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1280,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:10","nodeType":"VariableDeclaration","scope":1302,"src":"2096:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"},"typeName":{"id":1279,"nodeType":"UserDefinedTypeName","pathNode":{"id":1278,"name":"ShortString","nameLocations":["2096:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"2096:11:10"},"referencedDeclaration":1222,"src":"2096:11:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:10"},"returnParameters":{"id":1284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1302,"src":"2137:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1282,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:10"},"scope":1433,"src":"2078:405:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1333,"nodeType":"Block","src":"2625:175:10","statements":[{"assignments":[1312],"declarations":[{"constant":false,"id":1312,"mutability":"mutable","name":"result","nameLocation":"2643:6:10","nodeType":"VariableDeclaration","scope":1333,"src":"2635:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1311,"name":"uint256","nodeType":"ElementaryTypeName","src":"2635:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1322,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1317,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"2679:4:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}],"expression":{"id":1315,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"2660:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1222_$","typeString":"type(ShortString)"}},"id":1316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2672:6:10","memberName":"unwrap","nodeType":"MemberAccess","src":"2660:18:10","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1222_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2660:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2652:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1313,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:10","typeDescriptions":{}}},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2652:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":1320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:4:10","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2652:40:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2635:57:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1323,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"2706:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2715:2:10","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2706:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1330,"nodeType":"IfStatement","src":"2702:69:10","trueBody":{"id":1329,"nodeType":"Block","src":"2719:52:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1326,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"2740:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2740:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1328,"nodeType":"RevertStatement","src":"2733:27:10"}]}},{"expression":{"id":1331,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"2787:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1310,"id":1332,"nodeType":"Return","src":"2780:13:10"}]},"documentation":{"id":1303,"nodeType":"StructuredDocumentation","src":"2489:61:10","text":" @dev Return the length of a `ShortString`."},"id":1334,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2564:10:10","nodeType":"FunctionDefinition","parameters":{"id":1307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1306,"mutability":"mutable","name":"sstr","nameLocation":"2587:4:10","nodeType":"VariableDeclaration","scope":1334,"src":"2575:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"},"typeName":{"id":1305,"nodeType":"UserDefinedTypeName","pathNode":{"id":1304,"name":"ShortString","nameLocations":["2575:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"2575:11:10"},"referencedDeclaration":1222,"src":"2575:11:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}},"visibility":"internal"}],"src":"2574:18:10"},"returnParameters":{"id":1310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1334,"src":"2616:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1308,"name":"uint256","nodeType":"ElementaryTypeName","src":"2616:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2615:9:10"},"scope":1433,"src":"2555:245:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1373,"nodeType":"Block","src":"3023:231:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"3043:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3037:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1345,"name":"bytes","nodeType":"ElementaryTypeName","src":"3037:5:10","typeDescriptions":{}}},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3037:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3050:6:10","memberName":"length","nodeType":"MemberAccess","src":"3037:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":1350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3059:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3037:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1371,"nodeType":"Block","src":"3121:127:10","statements":[{"expression":{"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1360,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"3161:5:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":1357,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"3135:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1543_$","typeString":"type(library StorageSlot)"}},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3147:13:10","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":1520,"src":"3135:25:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$1451_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3135:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1451_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":1362,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3168:5:10","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1450,"src":"3135:38:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"3176:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3135:46:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1365,"nodeType":"ExpressionStatement","src":"3135:46:10"},{"expression":{"arguments":[{"id":1368,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"3219:17:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1366,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"3202:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1222_$","typeString":"type(ShortString)"}},"id":1367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3214:4:10","memberName":"wrap","nodeType":"MemberAccess","src":"3202:16:10","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1222_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3202:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}},"functionReturnParameters":1344,"id":1370,"nodeType":"Return","src":"3195:42:10"}]},"id":1372,"nodeType":"IfStatement","src":"3033:215:10","trueBody":{"id":1356,"nodeType":"Block","src":"3063:52:10","statements":[{"expression":{"arguments":[{"id":1353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"3098:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1352,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"3084:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$1222_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3084:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}},"functionReturnParameters":1344,"id":1355,"nodeType":"Return","src":"3077:27:10"}]}}]},"documentation":{"id":1335,"nodeType":"StructuredDocumentation","src":"2806:103:10","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":1374,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2923:25:10","nodeType":"FunctionDefinition","parameters":{"id":1340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1337,"mutability":"mutable","name":"value","nameLocation":"2963:5:10","nodeType":"VariableDeclaration","scope":1374,"src":"2949:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1336,"name":"string","nodeType":"ElementaryTypeName","src":"2949:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1339,"mutability":"mutable","name":"store","nameLocation":"2985:5:10","nodeType":"VariableDeclaration","scope":1374,"src":"2970:20:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1338,"name":"string","nodeType":"ElementaryTypeName","src":"2970:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2948:43:10"},"returnParameters":{"id":1344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1374,"src":"3010:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"},"typeName":{"id":1342,"nodeType":"UserDefinedTypeName","pathNode":{"id":1341,"name":"ShortString","nameLocations":["3010:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"3010:11:10"},"referencedDeclaration":1222,"src":"3010:11:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}},"visibility":"internal"}],"src":"3009:13:10"},"scope":1433,"src":"2914:340:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1400,"nodeType":"Block","src":"3494:158:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1387,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"3527:5:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}],"expression":{"id":1385,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"3508:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1222_$","typeString":"type(ShortString)"}},"id":1386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3520:6:10","memberName":"unwrap","nodeType":"MemberAccess","src":"3508:18:10","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1222_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3508:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1389,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"3537:17:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3508:46:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1398,"nodeType":"Block","src":"3609:37:10","statements":[{"expression":{"id":1396,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"3630:5:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":1384,"id":1397,"nodeType":"Return","src":"3623:12:10"}]},"id":1399,"nodeType":"IfStatement","src":"3504:142:10","trueBody":{"id":1395,"nodeType":"Block","src":"3556:47:10","statements":[{"expression":{"arguments":[{"id":1392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"3586:5:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}],"id":1391,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"3577:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1222_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3577:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1384,"id":1394,"nodeType":"Return","src":"3570:22:10"}]}}]},"documentation":{"id":1375,"nodeType":"StructuredDocumentation","src":"3260:120:10","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":1401,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3394:20:10","nodeType":"FunctionDefinition","parameters":{"id":1381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1378,"mutability":"mutable","name":"value","nameLocation":"3427:5:10","nodeType":"VariableDeclaration","scope":1401,"src":"3415:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"},"typeName":{"id":1377,"nodeType":"UserDefinedTypeName","pathNode":{"id":1376,"name":"ShortString","nameLocations":["3415:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"3415:11:10"},"referencedDeclaration":1222,"src":"3415:11:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1380,"mutability":"mutable","name":"store","nameLocation":"3449:5:10","nodeType":"VariableDeclaration","scope":1401,"src":"3434:20:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1379,"name":"string","nodeType":"ElementaryTypeName","src":"3434:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3414:41:10"},"returnParameters":{"id":1384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1401,"src":"3479:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1382,"name":"string","nodeType":"ElementaryTypeName","src":"3479:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3478:15:10"},"scope":1433,"src":"3385:267:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1431,"nodeType":"Block","src":"4132:174:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"4165:5:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}],"expression":{"id":1412,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"4146:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1222_$","typeString":"type(ShortString)"}},"id":1413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4158:6:10","memberName":"unwrap","nodeType":"MemberAccess","src":"4146:18:10","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1222_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4146:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1416,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"4175:17:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4146:46:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1429,"nodeType":"Block","src":"4249:51:10","statements":[{"expression":{"expression":{"arguments":[{"id":1425,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"4276:5:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":1424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1423,"name":"bytes","nodeType":"ElementaryTypeName","src":"4270:5:10","typeDescriptions":{}}},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4283:6:10","memberName":"length","nodeType":"MemberAccess","src":"4270:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1411,"id":1428,"nodeType":"Return","src":"4263:26:10"}]},"id":1430,"nodeType":"IfStatement","src":"4142:158:10","trueBody":{"id":1422,"nodeType":"Block","src":"4194:49:10","statements":[{"expression":{"arguments":[{"id":1419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"4226:5:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}],"id":1418,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"4215:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1222_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4215:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1411,"id":1421,"nodeType":"Return","src":"4208:24:10"}]}}]},"documentation":{"id":1402,"nodeType":"StructuredDocumentation","src":"3658:364:10","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":1432,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4036:22:10","nodeType":"FunctionDefinition","parameters":{"id":1408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1405,"mutability":"mutable","name":"value","nameLocation":"4071:5:10","nodeType":"VariableDeclaration","scope":1432,"src":"4059:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"},"typeName":{"id":1404,"nodeType":"UserDefinedTypeName","pathNode":{"id":1403,"name":"ShortString","nameLocations":["4059:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"4059:11:10"},"referencedDeclaration":1222,"src":"4059:11:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1407,"mutability":"mutable","name":"store","nameLocation":"4093:5:10","nodeType":"VariableDeclaration","scope":1432,"src":"4078:20:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1406,"name":"string","nodeType":"ElementaryTypeName","src":"4078:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4058:41:10"},"returnParameters":{"id":1411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1410,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1432,"src":"4123:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1409,"name":"uint256","nodeType":"ElementaryTypeName","src":"4123:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4122:9:10"},"scope":1433,"src":"4027:279:10","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1434,"src":"1255:3053:10","usedErrors":[1230,1232],"usedEvents":[]}],"src":"106:4203:10"},"id":10},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[1543]},"id":1544,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1435,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1436,"nodeType":"StructuredDocumentation","src":"219:1025:11","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"},"fullyImplemented":true,"id":1543,"linearizedBaseContracts":[1543],"name":"StorageSlot","nameLocation":"1253:11:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1439,"members":[{"constant":false,"id":1438,"mutability":"mutable","name":"value","nameLocation":"1308:5:11","nodeType":"VariableDeclaration","scope":1439,"src":"1300:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1437,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1278:11:11","nodeType":"StructDefinition","scope":1543,"src":"1271:49:11","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1442,"members":[{"constant":false,"id":1441,"mutability":"mutable","name":"value","nameLocation":"1360:5:11","nodeType":"VariableDeclaration","scope":1442,"src":"1355:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1440,"name":"bool","nodeType":"ElementaryTypeName","src":"1355:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1333:11:11","nodeType":"StructDefinition","scope":1543,"src":"1326:46:11","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1445,"members":[{"constant":false,"id":1444,"mutability":"mutable","name":"value","nameLocation":"1415:5:11","nodeType":"VariableDeclaration","scope":1445,"src":"1407:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1443,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1407:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1385:11:11","nodeType":"StructDefinition","scope":1543,"src":"1378:49:11","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1448,"members":[{"constant":false,"id":1447,"mutability":"mutable","name":"value","nameLocation":"1470:5:11","nodeType":"VariableDeclaration","scope":1448,"src":"1462:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1446,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1440:11:11","nodeType":"StructDefinition","scope":1543,"src":"1433:49:11","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":1451,"members":[{"constant":false,"id":1450,"mutability":"mutable","name":"value","nameLocation":"1523:5:11","nodeType":"VariableDeclaration","scope":1451,"src":"1516:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1449,"name":"string","nodeType":"ElementaryTypeName","src":"1516:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1495:10:11","nodeType":"StructDefinition","scope":1543,"src":"1488:47:11","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":1454,"members":[{"constant":false,"id":1453,"mutability":"mutable","name":"value","nameLocation":"1574:5:11","nodeType":"VariableDeclaration","scope":1454,"src":"1568:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1452,"name":"bytes","nodeType":"ElementaryTypeName","src":"1568:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1548:9:11","nodeType":"StructDefinition","scope":1543,"src":"1541:45:11","visibility":"public"},{"body":{"id":1464,"nodeType":"Block","src":"1768:106:11","statements":[{"AST":{"nativeSrc":"1830:38:11","nodeType":"YulBlock","src":"1830:38:11","statements":[{"nativeSrc":"1844:14:11","nodeType":"YulAssignment","src":"1844:14:11","value":{"name":"slot","nativeSrc":"1854:4:11","nodeType":"YulIdentifier","src":"1854:4:11"},"variableNames":[{"name":"r.slot","nativeSrc":"1844:6:11","nodeType":"YulIdentifier","src":"1844:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1461,"isOffset":false,"isSlot":true,"src":"1844:6:11","suffix":"slot","valueSize":1},{"declaration":1457,"isOffset":false,"isSlot":false,"src":"1854:4:11","valueSize":1}],"id":1463,"nodeType":"InlineAssembly","src":"1821:47:11"}]},"documentation":{"id":1455,"nodeType":"StructuredDocumentation","src":"1592:87:11","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1465,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1693:14:11","nodeType":"FunctionDefinition","parameters":{"id":1458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1457,"mutability":"mutable","name":"slot","nameLocation":"1716:4:11","nodeType":"VariableDeclaration","scope":1465,"src":"1708:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1456,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1708:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1707:14:11"},"returnParameters":{"id":1462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1461,"mutability":"mutable","name":"r","nameLocation":"1765:1:11","nodeType":"VariableDeclaration","scope":1465,"src":"1745:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1439_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1460,"nodeType":"UserDefinedTypeName","pathNode":{"id":1459,"name":"AddressSlot","nameLocations":["1745:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1439,"src":"1745:11:11"},"referencedDeclaration":1439,"src":"1745:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1439_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1744:23:11"},"scope":1543,"src":"1684:190:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1475,"nodeType":"Block","src":"2056:106:11","statements":[{"AST":{"nativeSrc":"2118:38:11","nodeType":"YulBlock","src":"2118:38:11","statements":[{"nativeSrc":"2132:14:11","nodeType":"YulAssignment","src":"2132:14:11","value":{"name":"slot","nativeSrc":"2142:4:11","nodeType":"YulIdentifier","src":"2142:4:11"},"variableNames":[{"name":"r.slot","nativeSrc":"2132:6:11","nodeType":"YulIdentifier","src":"2132:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1472,"isOffset":false,"isSlot":true,"src":"2132:6:11","suffix":"slot","valueSize":1},{"declaration":1468,"isOffset":false,"isSlot":false,"src":"2142:4:11","valueSize":1}],"id":1474,"nodeType":"InlineAssembly","src":"2109:47:11"}]},"documentation":{"id":1466,"nodeType":"StructuredDocumentation","src":"1880:87:11","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":1476,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1981:14:11","nodeType":"FunctionDefinition","parameters":{"id":1469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1468,"mutability":"mutable","name":"slot","nameLocation":"2004:4:11","nodeType":"VariableDeclaration","scope":1476,"src":"1996:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1467,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1996:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1995:14:11"},"returnParameters":{"id":1473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1472,"mutability":"mutable","name":"r","nameLocation":"2053:1:11","nodeType":"VariableDeclaration","scope":1476,"src":"2033:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1442_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":1471,"nodeType":"UserDefinedTypeName","pathNode":{"id":1470,"name":"BooleanSlot","nameLocations":["2033:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1442,"src":"2033:11:11"},"referencedDeclaration":1442,"src":"2033:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1442_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2032:23:11"},"scope":1543,"src":"1972:190:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1486,"nodeType":"Block","src":"2344:106:11","statements":[{"AST":{"nativeSrc":"2406:38:11","nodeType":"YulBlock","src":"2406:38:11","statements":[{"nativeSrc":"2420:14:11","nodeType":"YulAssignment","src":"2420:14:11","value":{"name":"slot","nativeSrc":"2430:4:11","nodeType":"YulIdentifier","src":"2430:4:11"},"variableNames":[{"name":"r.slot","nativeSrc":"2420:6:11","nodeType":"YulIdentifier","src":"2420:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1483,"isOffset":false,"isSlot":true,"src":"2420:6:11","suffix":"slot","valueSize":1},{"declaration":1479,"isOffset":false,"isSlot":false,"src":"2430:4:11","valueSize":1}],"id":1485,"nodeType":"InlineAssembly","src":"2397:47:11"}]},"documentation":{"id":1477,"nodeType":"StructuredDocumentation","src":"2168:87:11","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":1487,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2269:14:11","nodeType":"FunctionDefinition","parameters":{"id":1480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1479,"mutability":"mutable","name":"slot","nameLocation":"2292:4:11","nodeType":"VariableDeclaration","scope":1487,"src":"2284:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1478,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2283:14:11"},"returnParameters":{"id":1484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1483,"mutability":"mutable","name":"r","nameLocation":"2341:1:11","nodeType":"VariableDeclaration","scope":1487,"src":"2321:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1445_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1482,"nodeType":"UserDefinedTypeName","pathNode":{"id":1481,"name":"Bytes32Slot","nameLocations":["2321:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1445,"src":"2321:11:11"},"referencedDeclaration":1445,"src":"2321:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1445_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2320:23:11"},"scope":1543,"src":"2260:190:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1497,"nodeType":"Block","src":"2632:106:11","statements":[{"AST":{"nativeSrc":"2694:38:11","nodeType":"YulBlock","src":"2694:38:11","statements":[{"nativeSrc":"2708:14:11","nodeType":"YulAssignment","src":"2708:14:11","value":{"name":"slot","nativeSrc":"2718:4:11","nodeType":"YulIdentifier","src":"2718:4:11"},"variableNames":[{"name":"r.slot","nativeSrc":"2708:6:11","nodeType":"YulIdentifier","src":"2708:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1494,"isOffset":false,"isSlot":true,"src":"2708:6:11","suffix":"slot","valueSize":1},{"declaration":1490,"isOffset":false,"isSlot":false,"src":"2718:4:11","valueSize":1}],"id":1496,"nodeType":"InlineAssembly","src":"2685:47:11"}]},"documentation":{"id":1488,"nodeType":"StructuredDocumentation","src":"2456:87:11","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":1498,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2557:14:11","nodeType":"FunctionDefinition","parameters":{"id":1491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1490,"mutability":"mutable","name":"slot","nameLocation":"2580:4:11","nodeType":"VariableDeclaration","scope":1498,"src":"2572:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1489,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2572:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2571:14:11"},"returnParameters":{"id":1495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1494,"mutability":"mutable","name":"r","nameLocation":"2629:1:11","nodeType":"VariableDeclaration","scope":1498,"src":"2609:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1448_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1493,"nodeType":"UserDefinedTypeName","pathNode":{"id":1492,"name":"Uint256Slot","nameLocations":["2609:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1448,"src":"2609:11:11"},"referencedDeclaration":1448,"src":"2609:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1448_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2608:23:11"},"scope":1543,"src":"2548:190:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1508,"nodeType":"Block","src":"2917:106:11","statements":[{"AST":{"nativeSrc":"2979:38:11","nodeType":"YulBlock","src":"2979:38:11","statements":[{"nativeSrc":"2993:14:11","nodeType":"YulAssignment","src":"2993:14:11","value":{"name":"slot","nativeSrc":"3003:4:11","nodeType":"YulIdentifier","src":"3003:4:11"},"variableNames":[{"name":"r.slot","nativeSrc":"2993:6:11","nodeType":"YulIdentifier","src":"2993:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1505,"isOffset":false,"isSlot":true,"src":"2993:6:11","suffix":"slot","valueSize":1},{"declaration":1501,"isOffset":false,"isSlot":false,"src":"3003:4:11","valueSize":1}],"id":1507,"nodeType":"InlineAssembly","src":"2970:47:11"}]},"documentation":{"id":1499,"nodeType":"StructuredDocumentation","src":"2744:86:11","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":1509,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"2844:13:11","nodeType":"FunctionDefinition","parameters":{"id":1502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1501,"mutability":"mutable","name":"slot","nameLocation":"2866:4:11","nodeType":"VariableDeclaration","scope":1509,"src":"2858:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1500,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2858:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2857:14:11"},"returnParameters":{"id":1506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1505,"mutability":"mutable","name":"r","nameLocation":"2914:1:11","nodeType":"VariableDeclaration","scope":1509,"src":"2895:20:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1451_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1504,"nodeType":"UserDefinedTypeName","pathNode":{"id":1503,"name":"StringSlot","nameLocations":["2895:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":1451,"src":"2895:10:11"},"referencedDeclaration":1451,"src":"2895:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1451_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"2894:22:11"},"scope":1543,"src":"2835:188:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1519,"nodeType":"Block","src":"3225:112:11","statements":[{"AST":{"nativeSrc":"3287:44:11","nodeType":"YulBlock","src":"3287:44:11","statements":[{"nativeSrc":"3301:20:11","nodeType":"YulAssignment","src":"3301:20:11","value":{"name":"store.slot","nativeSrc":"3311:10:11","nodeType":"YulIdentifier","src":"3311:10:11"},"variableNames":[{"name":"r.slot","nativeSrc":"3301:6:11","nodeType":"YulIdentifier","src":"3301:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1516,"isOffset":false,"isSlot":true,"src":"3301:6:11","suffix":"slot","valueSize":1},{"declaration":1512,"isOffset":false,"isSlot":true,"src":"3311:10:11","suffix":"slot","valueSize":1}],"id":1518,"nodeType":"InlineAssembly","src":"3278:53:11"}]},"documentation":{"id":1510,"nodeType":"StructuredDocumentation","src":"3029:101:11","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1520,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3144:13:11","nodeType":"FunctionDefinition","parameters":{"id":1513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1512,"mutability":"mutable","name":"store","nameLocation":"3173:5:11","nodeType":"VariableDeclaration","scope":1520,"src":"3158:20:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1511,"name":"string","nodeType":"ElementaryTypeName","src":"3158:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3157:22:11"},"returnParameters":{"id":1517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1516,"mutability":"mutable","name":"r","nameLocation":"3222:1:11","nodeType":"VariableDeclaration","scope":1520,"src":"3203:20:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1451_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1515,"nodeType":"UserDefinedTypeName","pathNode":{"id":1514,"name":"StringSlot","nameLocations":["3203:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":1451,"src":"3203:10:11"},"referencedDeclaration":1451,"src":"3203:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1451_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3202:22:11"},"scope":1543,"src":"3135:202:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1530,"nodeType":"Block","src":"3513:106:11","statements":[{"AST":{"nativeSrc":"3575:38:11","nodeType":"YulBlock","src":"3575:38:11","statements":[{"nativeSrc":"3589:14:11","nodeType":"YulAssignment","src":"3589:14:11","value":{"name":"slot","nativeSrc":"3599:4:11","nodeType":"YulIdentifier","src":"3599:4:11"},"variableNames":[{"name":"r.slot","nativeSrc":"3589:6:11","nodeType":"YulIdentifier","src":"3589:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1527,"isOffset":false,"isSlot":true,"src":"3589:6:11","suffix":"slot","valueSize":1},{"declaration":1523,"isOffset":false,"isSlot":false,"src":"3599:4:11","valueSize":1}],"id":1529,"nodeType":"InlineAssembly","src":"3566:47:11"}]},"documentation":{"id":1521,"nodeType":"StructuredDocumentation","src":"3343:85:11","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":1531,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3442:12:11","nodeType":"FunctionDefinition","parameters":{"id":1524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1523,"mutability":"mutable","name":"slot","nameLocation":"3463:4:11","nodeType":"VariableDeclaration","scope":1531,"src":"3455:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1522,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3455:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3454:14:11"},"returnParameters":{"id":1528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1527,"mutability":"mutable","name":"r","nameLocation":"3510:1:11","nodeType":"VariableDeclaration","scope":1531,"src":"3492:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1454_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1526,"nodeType":"UserDefinedTypeName","pathNode":{"id":1525,"name":"BytesSlot","nameLocations":["3492:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":1454,"src":"3492:9:11"},"referencedDeclaration":1454,"src":"3492:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1454_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3491:21:11"},"scope":1543,"src":"3433:186:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1541,"nodeType":"Block","src":"3816:112:11","statements":[{"AST":{"nativeSrc":"3878:44:11","nodeType":"YulBlock","src":"3878:44:11","statements":[{"nativeSrc":"3892:20:11","nodeType":"YulAssignment","src":"3892:20:11","value":{"name":"store.slot","nativeSrc":"3902:10:11","nodeType":"YulIdentifier","src":"3902:10:11"},"variableNames":[{"name":"r.slot","nativeSrc":"3892:6:11","nodeType":"YulIdentifier","src":"3892:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1538,"isOffset":false,"isSlot":true,"src":"3892:6:11","suffix":"slot","valueSize":1},{"declaration":1534,"isOffset":false,"isSlot":true,"src":"3902:10:11","suffix":"slot","valueSize":1}],"id":1540,"nodeType":"InlineAssembly","src":"3869:53:11"}]},"documentation":{"id":1532,"nodeType":"StructuredDocumentation","src":"3625:99:11","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1542,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3738:12:11","nodeType":"FunctionDefinition","parameters":{"id":1535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1534,"mutability":"mutable","name":"store","nameLocation":"3765:5:11","nodeType":"VariableDeclaration","scope":1542,"src":"3751:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1533,"name":"bytes","nodeType":"ElementaryTypeName","src":"3751:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3750:21:11"},"returnParameters":{"id":1539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1538,"mutability":"mutable","name":"r","nameLocation":"3813:1:11","nodeType":"VariableDeclaration","scope":1542,"src":"3795:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1454_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1537,"nodeType":"UserDefinedTypeName","pathNode":{"id":1536,"name":"BytesSlot","nameLocations":["3795:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":1454,"src":"3795:9:11"},"referencedDeclaration":1454,"src":"3795:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1454_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3794:21:11"},"scope":1543,"src":"3729:199:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1544,"src":"1245:2685:11","usedErrors":[],"usedEvents":[]}],"src":"193:3738:11"},"id":11},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[3501],"SignedMath":[3606],"Strings":[1798]},"id":1799,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1545,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:12"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1547,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1799,"sourceUnit":3502,"src":"127:37:12","symbolAliases":[{"foreign":{"id":1546,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"135:4:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1549,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1799,"sourceUnit":3607,"src":"165:49:12","symbolAliases":[{"foreign":{"id":1548,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3606,"src":"173:10:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1550,"nodeType":"StructuredDocumentation","src":"216:34:12","text":" @dev String operations."},"fullyImplemented":true,"id":1798,"linearizedBaseContracts":[1798],"name":"Strings","nameLocation":"259:7:12","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1553,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:12","nodeType":"VariableDeclaration","scope":1798,"src":"273:56:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1551,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:12","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1556,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:12","nodeType":"VariableDeclaration","scope":1798,"src":"335:42:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1554,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:12","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":1557,"nodeType":"StructuredDocumentation","src":"384:81:12","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":1563,"name":"StringsInsufficientHexLength","nameLocation":"476:28:12","nodeType":"ErrorDefinition","parameters":{"id":1562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1559,"mutability":"mutable","name":"value","nameLocation":"513:5:12","nodeType":"VariableDeclaration","scope":1563,"src":"505:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1558,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1561,"mutability":"mutable","name":"length","nameLocation":"528:6:12","nodeType":"VariableDeclaration","scope":1563,"src":"520:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1560,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:12"},"src":"470:66:12"},{"body":{"id":1610,"nodeType":"Block","src":"708:627:12","statements":[{"id":1609,"nodeType":"UncheckedBlock","src":"718:611:12","statements":[{"assignments":[1572],"declarations":[{"constant":false,"id":1572,"mutability":"mutable","name":"length","nameLocation":"750:6:12","nodeType":"VariableDeclaration","scope":1609,"src":"742:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1571,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1579,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"770:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1573,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"759:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3501_$","typeString":"type(library Math)"}},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:12","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3321,"src":"759:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:12"},{"assignments":[1581],"declarations":[{"constant":false,"id":1581,"mutability":"mutable","name":"buffer","nameLocation":"808:6:12","nodeType":"VariableDeclaration","scope":1609,"src":"794:20:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1580,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1586,"initialValue":{"arguments":[{"id":1584,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"828:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1582,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:12"},{"assignments":[1588],"declarations":[{"constant":false,"id":1588,"mutability":"mutable","name":"ptr","nameLocation":"857:3:12","nodeType":"VariableDeclaration","scope":1609,"src":"849:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1587,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1589,"nodeType":"VariableDeclarationStatement","src":"849:11:12"},{"AST":{"nativeSrc":"930:67:12","nodeType":"YulBlock","src":"930:67:12","statements":[{"nativeSrc":"948:35:12","nodeType":"YulAssignment","src":"948:35:12","value":{"arguments":[{"name":"buffer","nativeSrc":"959:6:12","nodeType":"YulIdentifier","src":"959:6:12"},{"arguments":[{"kind":"number","nativeSrc":"971:2:12","nodeType":"YulLiteral","src":"971:2:12","type":"","value":"32"},{"name":"length","nativeSrc":"975:6:12","nodeType":"YulIdentifier","src":"975:6:12"}],"functionName":{"name":"add","nativeSrc":"967:3:12","nodeType":"YulIdentifier","src":"967:3:12"},"nativeSrc":"967:15:12","nodeType":"YulFunctionCall","src":"967:15:12"}],"functionName":{"name":"add","nativeSrc":"955:3:12","nodeType":"YulIdentifier","src":"955:3:12"},"nativeSrc":"955:28:12","nodeType":"YulFunctionCall","src":"955:28:12"},"variableNames":[{"name":"ptr","nativeSrc":"948:3:12","nodeType":"YulIdentifier","src":"948:3:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1581,"isOffset":false,"isSlot":false,"src":"959:6:12","valueSize":1},{"declaration":1572,"isOffset":false,"isSlot":false,"src":"975:6:12","valueSize":1},{"declaration":1588,"isOffset":false,"isSlot":false,"src":"948:3:12","valueSize":1}],"id":1590,"nodeType":"InlineAssembly","src":"921:76:12"},{"body":{"id":1605,"nodeType":"Block","src":"1023:269:12","statements":[{"expression":{"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1041:5:12","subExpression":{"id":1592,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"1041:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1594,"nodeType":"ExpressionStatement","src":"1041:5:12"},{"AST":{"nativeSrc":"1124:86:12","nodeType":"YulBlock","src":"1124:86:12","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1154:3:12","nodeType":"YulIdentifier","src":"1154:3:12"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1168:5:12","nodeType":"YulIdentifier","src":"1168:5:12"},{"kind":"number","nativeSrc":"1175:2:12","nodeType":"YulLiteral","src":"1175:2:12","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1164:3:12","nodeType":"YulIdentifier","src":"1164:3:12"},"nativeSrc":"1164:14:12","nodeType":"YulFunctionCall","src":"1164:14:12"},{"name":"HEX_DIGITS","nativeSrc":"1180:10:12","nodeType":"YulIdentifier","src":"1180:10:12"}],"functionName":{"name":"byte","nativeSrc":"1159:4:12","nodeType":"YulIdentifier","src":"1159:4:12"},"nativeSrc":"1159:32:12","nodeType":"YulFunctionCall","src":"1159:32:12"}],"functionName":{"name":"mstore8","nativeSrc":"1146:7:12","nodeType":"YulIdentifier","src":"1146:7:12"},"nativeSrc":"1146:46:12","nodeType":"YulFunctionCall","src":"1146:46:12"},"nativeSrc":"1146:46:12","nodeType":"YulExpressionStatement","src":"1146:46:12"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1553,"isOffset":false,"isSlot":false,"src":"1180:10:12","valueSize":1},{"declaration":1588,"isOffset":false,"isSlot":false,"src":"1154:3:12","valueSize":1},{"declaration":1566,"isOffset":false,"isSlot":false,"src":"1168:5:12","valueSize":1}],"id":1595,"nodeType":"InlineAssembly","src":"1115:95:12"},{"expression":{"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"1227:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1236:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1227:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1599,"nodeType":"ExpressionStatement","src":"1227:11:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"1260:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1269:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1260:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1604,"nodeType":"IfStatement","src":"1256:21:12","trueBody":{"id":1603,"nodeType":"Break","src":"1272:5:12"}}]},"condition":{"hexValue":"74727565","id":1591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1017:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1606,"nodeType":"WhileStatement","src":"1010:282:12"},{"expression":{"id":1607,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"1312:6:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1570,"id":1608,"nodeType":"Return","src":"1305:13:12"}]}]},"documentation":{"id":1564,"nodeType":"StructuredDocumentation","src":"542:90:12","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1611,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:12","nodeType":"FunctionDefinition","parameters":{"id":1567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1566,"mutability":"mutable","name":"value","nameLocation":"663:5:12","nodeType":"VariableDeclaration","scope":1611,"src":"655:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1565,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:12"},"returnParameters":{"id":1570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1611,"src":"693:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1568,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:12"},"scope":1798,"src":"637:698:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1636,"nodeType":"Block","src":"1511:92:12","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"1542:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1550:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1542:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1560:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1542:20:12","trueExpression":{"hexValue":"2d","id":1625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1554:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"1588:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1629,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3606,"src":"1573:10:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$3606_$","typeString":"type(library SignedMath)"}},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1584:3:12","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":3605,"src":"1573:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1573:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1628,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"1564:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1564:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1528:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1619,"name":"string","nodeType":"ElementaryTypeName","src":"1528:6:12","typeDescriptions":{}}},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:6:12","memberName":"concat","nodeType":"MemberAccess","src":"1528:13:12","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1528:68:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1618,"id":1635,"nodeType":"Return","src":"1521:75:12"}]},"documentation":{"id":1612,"nodeType":"StructuredDocumentation","src":"1341:89:12","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1637,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1444:14:12","nodeType":"FunctionDefinition","parameters":{"id":1615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1614,"mutability":"mutable","name":"value","nameLocation":"1466:5:12","nodeType":"VariableDeclaration","scope":1637,"src":"1459:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1613,"name":"int256","nodeType":"ElementaryTypeName","src":"1459:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1458:14:12"},"returnParameters":{"id":1618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1617,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1637,"src":"1496:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1616,"name":"string","nodeType":"ElementaryTypeName","src":"1496:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1495:15:12"},"scope":1798,"src":"1435:168:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1656,"nodeType":"Block","src":"1782:100:12","statements":[{"id":1655,"nodeType":"UncheckedBlock","src":"1792:84:12","statements":[{"expression":{"arguments":[{"id":1646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"1835:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"1854:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1647,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"1842:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3501_$","typeString":"type(library Math)"}},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1847:6:12","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3443,"src":"1842:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1842:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1863:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1842:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1645,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1657,1740,1760],"referencedDeclaration":1740,"src":"1823:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1823:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1644,"id":1654,"nodeType":"Return","src":"1816:49:12"}]}]},"documentation":{"id":1638,"nodeType":"StructuredDocumentation","src":"1609:94:12","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1657,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1717:11:12","nodeType":"FunctionDefinition","parameters":{"id":1641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1640,"mutability":"mutable","name":"value","nameLocation":"1737:5:12","nodeType":"VariableDeclaration","scope":1657,"src":"1729:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1639,"name":"uint256","nodeType":"ElementaryTypeName","src":"1729:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1728:15:12"},"returnParameters":{"id":1644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1657,"src":"1767:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1642,"name":"string","nodeType":"ElementaryTypeName","src":"1767:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1766:15:12"},"scope":1798,"src":"1708:174:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1739,"nodeType":"Block","src":"2095:435:12","statements":[{"assignments":[1668],"declarations":[{"constant":false,"id":1668,"mutability":"mutable","name":"localValue","nameLocation":"2113:10:12","nodeType":"VariableDeclaration","scope":1739,"src":"2105:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1667,"name":"uint256","nodeType":"ElementaryTypeName","src":"2105:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1670,"initialValue":{"id":1669,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"2126:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2105:26:12"},{"assignments":[1672],"declarations":[{"constant":false,"id":1672,"mutability":"mutable","name":"buffer","nameLocation":"2154:6:12","nodeType":"VariableDeclaration","scope":1739,"src":"2141:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1671,"name":"bytes","nodeType":"ElementaryTypeName","src":"2141:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1681,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2173:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1676,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"2177:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2173:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2186:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2173:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2163:9:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1673,"name":"bytes","nodeType":"ElementaryTypeName","src":"2167:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2163:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2141:47:12"},{"expression":{"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1682,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"2198:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1684,"indexExpression":{"hexValue":"30","id":1683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2205:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2198:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2210:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2198:15:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1687,"nodeType":"ExpressionStatement","src":"2198:15:12"},{"expression":{"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1688,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"2223:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1690,"indexExpression":{"hexValue":"31","id":1689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2230:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2223:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2235:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2223:15:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1693,"nodeType":"ExpressionStatement","src":"2223:15:12"},{"body":{"id":1722,"nodeType":"Block","src":"2293:95:12","statements":[{"expression":{"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1708,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"2307:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1710,"indexExpression":{"id":1709,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"2314:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2307:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1711,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"2319:10:12","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1715,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1712,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"2330:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2343:3:12","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2330:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2319:28:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2307:40:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1717,"nodeType":"ExpressionStatement","src":"2307:40:12"},{"expression":{"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1718,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"2361:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2376:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2361:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1721,"nodeType":"ExpressionStatement","src":"2361:16:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1702,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"2281:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2285:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2281:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1723,"initializationExpression":{"assignments":[1695],"declarations":[{"constant":false,"id":1695,"mutability":"mutable","name":"i","nameLocation":"2261:1:12","nodeType":"VariableDeclaration","scope":1723,"src":"2253:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1694,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1701,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2265:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1697,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"2269:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2265:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2278:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2265:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2253:26:12"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2288:3:12","subExpression":{"id":1705,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"2290:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1707,"nodeType":"ExpressionStatement","src":"2288:3:12"},"nodeType":"ForStatement","src":"2248:140:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1724,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"2401:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2415:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2401:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1733,"nodeType":"IfStatement","src":"2397:96:12","trueBody":{"id":1732,"nodeType":"Block","src":"2418:75:12","statements":[{"errorCall":{"arguments":[{"id":1728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"2468:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1729,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"2475:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1727,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"2439:28:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2439:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1731,"nodeType":"RevertStatement","src":"2432:50:12"}]}},{"expression":{"arguments":[{"id":1736,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"2516:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1734,"name":"string","nodeType":"ElementaryTypeName","src":"2509:6:12","typeDescriptions":{}}},"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1666,"id":1738,"nodeType":"Return","src":"2502:21:12"}]},"documentation":{"id":1658,"nodeType":"StructuredDocumentation","src":"1888:112:12","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1740,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2014:11:12","nodeType":"FunctionDefinition","parameters":{"id":1663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1660,"mutability":"mutable","name":"value","nameLocation":"2034:5:12","nodeType":"VariableDeclaration","scope":1740,"src":"2026:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1659,"name":"uint256","nodeType":"ElementaryTypeName","src":"2026:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1662,"mutability":"mutable","name":"length","nameLocation":"2049:6:12","nodeType":"VariableDeclaration","scope":1740,"src":"2041:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1661,"name":"uint256","nodeType":"ElementaryTypeName","src":"2041:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2025:31:12"},"returnParameters":{"id":1666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1665,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1740,"src":"2080:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1664,"name":"string","nodeType":"ElementaryTypeName","src":"2080:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2079:15:12"},"scope":1798,"src":"2005:525:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1759,"nodeType":"Block","src":"2762:75:12","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1753,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"2807:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2799:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1751,"name":"uint160","nodeType":"ElementaryTypeName","src":"2799:7:12","typeDescriptions":{}}},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2791:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1749,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:12","typeDescriptions":{}}},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2791:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1756,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"2815:14:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1748,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1657,1740,1760],"referencedDeclaration":1740,"src":"2779:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2779:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1747,"id":1758,"nodeType":"Return","src":"2772:58:12"}]},"documentation":{"id":1741,"nodeType":"StructuredDocumentation","src":"2536:148:12","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":1760,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2698:11:12","nodeType":"FunctionDefinition","parameters":{"id":1744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1743,"mutability":"mutable","name":"addr","nameLocation":"2718:4:12","nodeType":"VariableDeclaration","scope":1760,"src":"2710:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1742,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2709:14:12"},"returnParameters":{"id":1747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1760,"src":"2747:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1745,"name":"string","nodeType":"ElementaryTypeName","src":"2747:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2746:15:12"},"scope":1798,"src":"2689:148:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1796,"nodeType":"Block","src":"2992:104:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1772,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"3015:1:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3009:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1770,"name":"bytes","nodeType":"ElementaryTypeName","src":"3009:5:12","typeDescriptions":{}}},"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3009:8:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3018:6:12","memberName":"length","nodeType":"MemberAccess","src":"3009:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1777,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"3034:1:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3028:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1775,"name":"bytes","nodeType":"ElementaryTypeName","src":"3028:5:12","typeDescriptions":{}}},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3028:8:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3037:6:12","memberName":"length","nodeType":"MemberAccess","src":"3028:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3009:34:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1784,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"3063:1:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3057:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1782,"name":"bytes","nodeType":"ElementaryTypeName","src":"3057:5:12","typeDescriptions":{}}},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:8:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1781,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3047:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3047:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1790,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"3086:1:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3080:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1788,"name":"bytes","nodeType":"ElementaryTypeName","src":"3080:5:12","typeDescriptions":{}}},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3080:8:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1787,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3070:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3047:42:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3009:80:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1769,"id":1795,"nodeType":"Return","src":"3002:87:12"}]},"documentation":{"id":1761,"nodeType":"StructuredDocumentation","src":"2843:66:12","text":" @dev Returns true if the two strings are equal."},"id":1797,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2923:5:12","nodeType":"FunctionDefinition","parameters":{"id":1766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1763,"mutability":"mutable","name":"a","nameLocation":"2943:1:12","nodeType":"VariableDeclaration","scope":1797,"src":"2929:15:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1762,"name":"string","nodeType":"ElementaryTypeName","src":"2929:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1765,"mutability":"mutable","name":"b","nameLocation":"2960:1:12","nodeType":"VariableDeclaration","scope":1797,"src":"2946:15:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1764,"name":"string","nodeType":"ElementaryTypeName","src":"2946:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2928:34:12"},"returnParameters":{"id":1769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1768,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1797,"src":"2986:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1767,"name":"bool","nodeType":"ElementaryTypeName","src":"2986:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2985:6:12"},"scope":1798,"src":"2914:182:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1799,"src":"251:2847:12","usedErrors":[1563],"usedEvents":[]}],"src":"101:2998:12"},"id":12},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[2146]},"id":2147,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1800,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":1801,"nodeType":"StructuredDocumentation","src":"138:205:13","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":2146,"linearizedBaseContracts":[2146],"name":"ECDSA","nameLocation":"352:5:13","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":1806,"members":[{"id":1802,"name":"NoError","nameLocation":"392:7:13","nodeType":"EnumValue","src":"392:7:13"},{"id":1803,"name":"InvalidSignature","nameLocation":"409:16:13","nodeType":"EnumValue","src":"409:16:13"},{"id":1804,"name":"InvalidSignatureLength","nameLocation":"435:22:13","nodeType":"EnumValue","src":"435:22:13"},{"id":1805,"name":"InvalidSignatureS","nameLocation":"467:17:13","nodeType":"EnumValue","src":"467:17:13"}],"name":"RecoverError","nameLocation":"369:12:13","nodeType":"EnumDefinition","src":"364:126:13"},{"documentation":{"id":1807,"nodeType":"StructuredDocumentation","src":"496:63:13","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":1809,"name":"ECDSAInvalidSignature","nameLocation":"570:21:13","nodeType":"ErrorDefinition","parameters":{"id":1808,"nodeType":"ParameterList","parameters":[],"src":"591:2:13"},"src":"564:30:13"},{"documentation":{"id":1810,"nodeType":"StructuredDocumentation","src":"600:60:13","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":1814,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:13","nodeType":"ErrorDefinition","parameters":{"id":1813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1812,"mutability":"mutable","name":"length","nameLocation":"707:6:13","nodeType":"VariableDeclaration","scope":1814,"src":"699:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1811,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:13"},"src":"665:50:13"},{"documentation":{"id":1815,"nodeType":"StructuredDocumentation","src":"721:85:13","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":1819,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:13","nodeType":"ErrorDefinition","parameters":{"id":1818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1817,"mutability":"mutable","name":"s","nameLocation":"848:1:13","nodeType":"VariableDeclaration","scope":1819,"src":"840:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1816,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:13"},"src":"811:40:13"},{"body":{"id":1871,"nodeType":"Block","src":"2242:653:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1834,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"2256:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2266:6:13","memberName":"length","nodeType":"MemberAccess","src":"2256:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":1836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2276:2:13","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2256:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1869,"nodeType":"Block","src":"2781:108:13","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2811:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2803:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1856,"name":"address","nodeType":"ElementaryTypeName","src":"2803:7:13","typeDescriptions":{}}},"id":1859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2803:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1860,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"2815:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1806_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2828:22:13","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1804,"src":"2815:35:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":1864,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"2860:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2870:6:13","memberName":"length","nodeType":"MemberAccess","src":"2860:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2852:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1862,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2852:7:13","typeDescriptions":{}}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2852:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1867,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2802:76:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1806_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1833,"id":1868,"nodeType":"Return","src":"2795:83:13"}]},"id":1870,"nodeType":"IfStatement","src":"2252:637:13","trueBody":{"id":1855,"nodeType":"Block","src":"2280:495:13","statements":[{"assignments":[1839],"declarations":[{"constant":false,"id":1839,"mutability":"mutable","name":"r","nameLocation":"2302:1:13","nodeType":"VariableDeclaration","scope":1855,"src":"2294:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1838,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2294:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1840,"nodeType":"VariableDeclarationStatement","src":"2294:9:13"},{"assignments":[1842],"declarations":[{"constant":false,"id":1842,"mutability":"mutable","name":"s","nameLocation":"2325:1:13","nodeType":"VariableDeclaration","scope":1855,"src":"2317:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1841,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2317:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1843,"nodeType":"VariableDeclarationStatement","src":"2317:9:13"},{"assignments":[1845],"declarations":[{"constant":false,"id":1845,"mutability":"mutable","name":"v","nameLocation":"2346:1:13","nodeType":"VariableDeclaration","scope":1855,"src":"2340:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1844,"name":"uint8","nodeType":"ElementaryTypeName","src":"2340:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1846,"nodeType":"VariableDeclarationStatement","src":"2340:7:13"},{"AST":{"nativeSrc":"2548:171:13","nodeType":"YulBlock","src":"2548:171:13","statements":[{"nativeSrc":"2566:32:13","nodeType":"YulAssignment","src":"2566:32:13","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2581:9:13","nodeType":"YulIdentifier","src":"2581:9:13"},{"kind":"number","nativeSrc":"2592:4:13","nodeType":"YulLiteral","src":"2592:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2577:3:13","nodeType":"YulIdentifier","src":"2577:3:13"},"nativeSrc":"2577:20:13","nodeType":"YulFunctionCall","src":"2577:20:13"}],"functionName":{"name":"mload","nativeSrc":"2571:5:13","nodeType":"YulIdentifier","src":"2571:5:13"},"nativeSrc":"2571:27:13","nodeType":"YulFunctionCall","src":"2571:27:13"},"variableNames":[{"name":"r","nativeSrc":"2566:1:13","nodeType":"YulIdentifier","src":"2566:1:13"}]},{"nativeSrc":"2615:32:13","nodeType":"YulAssignment","src":"2615:32:13","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2630:9:13","nodeType":"YulIdentifier","src":"2630:9:13"},{"kind":"number","nativeSrc":"2641:4:13","nodeType":"YulLiteral","src":"2641:4:13","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2626:3:13","nodeType":"YulIdentifier","src":"2626:3:13"},"nativeSrc":"2626:20:13","nodeType":"YulFunctionCall","src":"2626:20:13"}],"functionName":{"name":"mload","nativeSrc":"2620:5:13","nodeType":"YulIdentifier","src":"2620:5:13"},"nativeSrc":"2620:27:13","nodeType":"YulFunctionCall","src":"2620:27:13"},"variableNames":[{"name":"s","nativeSrc":"2615:1:13","nodeType":"YulIdentifier","src":"2615:1:13"}]},{"nativeSrc":"2664:41:13","nodeType":"YulAssignment","src":"2664:41:13","value":{"arguments":[{"kind":"number","nativeSrc":"2674:1:13","nodeType":"YulLiteral","src":"2674:1:13","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2687:9:13","nodeType":"YulIdentifier","src":"2687:9:13"},{"kind":"number","nativeSrc":"2698:4:13","nodeType":"YulLiteral","src":"2698:4:13","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2683:3:13","nodeType":"YulIdentifier","src":"2683:3:13"},"nativeSrc":"2683:20:13","nodeType":"YulFunctionCall","src":"2683:20:13"}],"functionName":{"name":"mload","nativeSrc":"2677:5:13","nodeType":"YulIdentifier","src":"2677:5:13"},"nativeSrc":"2677:27:13","nodeType":"YulFunctionCall","src":"2677:27:13"}],"functionName":{"name":"byte","nativeSrc":"2669:4:13","nodeType":"YulIdentifier","src":"2669:4:13"},"nativeSrc":"2669:36:13","nodeType":"YulFunctionCall","src":"2669:36:13"},"variableNames":[{"name":"v","nativeSrc":"2664:1:13","nodeType":"YulIdentifier","src":"2664:1:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1839,"isOffset":false,"isSlot":false,"src":"2566:1:13","valueSize":1},{"declaration":1842,"isOffset":false,"isSlot":false,"src":"2615:1:13","valueSize":1},{"declaration":1824,"isOffset":false,"isSlot":false,"src":"2581:9:13","valueSize":1},{"declaration":1824,"isOffset":false,"isSlot":false,"src":"2630:9:13","valueSize":1},{"declaration":1824,"isOffset":false,"isSlot":false,"src":"2687:9:13","valueSize":1},{"declaration":1845,"isOffset":false,"isSlot":false,"src":"2664:1:13","valueSize":1}],"id":1847,"nodeType":"InlineAssembly","src":"2539:180:13"},{"expression":{"arguments":[{"id":1849,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"2750:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1850,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"2756:1:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1851,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"2759:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1852,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"2762:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1848,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1872,1952,2060],"referencedDeclaration":2060,"src":"2739:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1806_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1806_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1833,"id":1854,"nodeType":"Return","src":"2732:32:13"}]}}]},"documentation":{"id":1820,"nodeType":"StructuredDocumentation","src":"857:1267:13","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":1872,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:13","nodeType":"FunctionDefinition","parameters":{"id":1825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1822,"mutability":"mutable","name":"hash","nameLocation":"2157:4:13","nodeType":"VariableDeclaration","scope":1872,"src":"2149:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1821,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2149:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1824,"mutability":"mutable","name":"signature","nameLocation":"2176:9:13","nodeType":"VariableDeclaration","scope":1872,"src":"2163:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1823,"name":"bytes","nodeType":"ElementaryTypeName","src":"2163:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:38:13"},"returnParameters":{"id":1833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1827,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1872,"src":"2210:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1826,"name":"address","nodeType":"ElementaryTypeName","src":"2210:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1872,"src":"2219:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1829,"nodeType":"UserDefinedTypeName","pathNode":{"id":1828,"name":"RecoverError","nameLocations":["2219:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":1806,"src":"2219:12:13"},"referencedDeclaration":1806,"src":"2219:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1872,"src":"2233:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1831,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2233:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2209:32:13"},"scope":2146,"src":"2129:766:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1901,"nodeType":"Block","src":"3789:168:13","statements":[{"assignments":[1883,1886,1888],"declarations":[{"constant":false,"id":1883,"mutability":"mutable","name":"recovered","nameLocation":"3808:9:13","nodeType":"VariableDeclaration","scope":1901,"src":"3800:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1882,"name":"address","nodeType":"ElementaryTypeName","src":"3800:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1886,"mutability":"mutable","name":"error","nameLocation":"3832:5:13","nodeType":"VariableDeclaration","scope":1901,"src":"3819:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1885,"nodeType":"UserDefinedTypeName","pathNode":{"id":1884,"name":"RecoverError","nameLocations":["3819:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":1806,"src":"3819:12:13"},"referencedDeclaration":1806,"src":"3819:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1888,"mutability":"mutable","name":"errorArg","nameLocation":"3847:8:13","nodeType":"VariableDeclaration","scope":1901,"src":"3839:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1887,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3839:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1893,"initialValue":{"arguments":[{"id":1890,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"3870:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1891,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"3876:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1889,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1872,1952,2060],"referencedDeclaration":1872,"src":"3859:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1806_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3859:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1806_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3799:87:13"},{"expression":{"arguments":[{"id":1895,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"3908:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},{"id":1896,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"3915:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1894,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"3896:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1806_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3896:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1898,"nodeType":"ExpressionStatement","src":"3896:28:13"},{"expression":{"id":1899,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"3941:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1881,"id":1900,"nodeType":"Return","src":"3934:16:13"}]},"documentation":{"id":1873,"nodeType":"StructuredDocumentation","src":"2901:796:13","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":1902,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3711:7:13","nodeType":"FunctionDefinition","parameters":{"id":1878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1875,"mutability":"mutable","name":"hash","nameLocation":"3727:4:13","nodeType":"VariableDeclaration","scope":1902,"src":"3719:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1874,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3719:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1877,"mutability":"mutable","name":"signature","nameLocation":"3746:9:13","nodeType":"VariableDeclaration","scope":1902,"src":"3733:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1876,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3718:38:13"},"returnParameters":{"id":1881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1902,"src":"3780:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1879,"name":"address","nodeType":"ElementaryTypeName","src":"3780:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3779:9:13"},"scope":2146,"src":"3702:255:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1951,"nodeType":"Block","src":"4285:342:13","statements":[{"id":1950,"nodeType":"UncheckedBlock","src":"4295:326:13","statements":[{"assignments":[1920],"declarations":[{"constant":false,"id":1920,"mutability":"mutable","name":"s","nameLocation":"4327:1:13","nodeType":"VariableDeclaration","scope":1950,"src":"4319:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1919,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4319:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1927,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1921,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"4331:2:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":1924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4344:66:13","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":1923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4336:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1922,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4336:7:13","typeDescriptions":{}}},"id":1925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4336:75:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4331:80:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4319:92:13"},{"assignments":[1929],"declarations":[{"constant":false,"id":1929,"mutability":"mutable","name":"v","nameLocation":"4528:1:13","nodeType":"VariableDeclaration","scope":1950,"src":"4522:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1928,"name":"uint8","nodeType":"ElementaryTypeName","src":"4522:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1942,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1934,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"4547:2:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4539:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1932,"name":"uint256","nodeType":"ElementaryTypeName","src":"4539:7:13","typeDescriptions":{}}},"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4539:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":1936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4554:3:13","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4539:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1938,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4538:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":1939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4561:2:13","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4538:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1930,"name":"uint8","nodeType":"ElementaryTypeName","src":"4532:5:13","typeDescriptions":{}}},"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4522:42:13"},{"expression":{"arguments":[{"id":1944,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1905,"src":"4596:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1945,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"4602:1:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1946,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"4605:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1947,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"4608:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1943,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1872,1952,2060],"referencedDeclaration":2060,"src":"4585:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1806_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4585:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1806_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1918,"id":1949,"nodeType":"Return","src":"4578:32:13"}]}]},"documentation":{"id":1903,"nodeType":"StructuredDocumentation","src":"3963:205:13","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"},"id":1952,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4182:10:13","nodeType":"FunctionDefinition","parameters":{"id":1910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1905,"mutability":"mutable","name":"hash","nameLocation":"4201:4:13","nodeType":"VariableDeclaration","scope":1952,"src":"4193:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1904,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4193:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1907,"mutability":"mutable","name":"r","nameLocation":"4215:1:13","nodeType":"VariableDeclaration","scope":1952,"src":"4207:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1906,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4207:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1909,"mutability":"mutable","name":"vs","nameLocation":"4226:2:13","nodeType":"VariableDeclaration","scope":1952,"src":"4218:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1908,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4218:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4192:37:13"},"returnParameters":{"id":1918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1912,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1952,"src":"4253:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1911,"name":"address","nodeType":"ElementaryTypeName","src":"4253:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1915,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1952,"src":"4262:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1914,"nodeType":"UserDefinedTypeName","pathNode":{"id":1913,"name":"RecoverError","nameLocations":["4262:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":1806,"src":"4262:12:13"},"referencedDeclaration":1806,"src":"4262:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1917,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1952,"src":"4276:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1916,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4276:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4252:32:13"},"scope":2146,"src":"4173:454:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1984,"nodeType":"Block","src":"4840:164:13","statements":[{"assignments":[1965,1968,1970],"declarations":[{"constant":false,"id":1965,"mutability":"mutable","name":"recovered","nameLocation":"4859:9:13","nodeType":"VariableDeclaration","scope":1984,"src":"4851:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1964,"name":"address","nodeType":"ElementaryTypeName","src":"4851:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1968,"mutability":"mutable","name":"error","nameLocation":"4883:5:13","nodeType":"VariableDeclaration","scope":1984,"src":"4870:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1967,"nodeType":"UserDefinedTypeName","pathNode":{"id":1966,"name":"RecoverError","nameLocations":["4870:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":1806,"src":"4870:12:13"},"referencedDeclaration":1806,"src":"4870:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1970,"mutability":"mutable","name":"errorArg","nameLocation":"4898:8:13","nodeType":"VariableDeclaration","scope":1984,"src":"4890:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1969,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4890:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1976,"initialValue":{"arguments":[{"id":1972,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"4921:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1973,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"4927:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1974,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"4930:2:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1971,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1872,1952,2060],"referencedDeclaration":1952,"src":"4910:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1806_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4910:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1806_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4850:83:13"},{"expression":{"arguments":[{"id":1978,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"4955:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},{"id":1979,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"4962:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1977,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"4943:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1806_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4943:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1981,"nodeType":"ExpressionStatement","src":"4943:28:13"},{"expression":{"id":1982,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"4988:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1963,"id":1983,"nodeType":"Return","src":"4981:16:13"}]},"documentation":{"id":1953,"nodeType":"StructuredDocumentation","src":"4633:116:13","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":1985,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4763:7:13","nodeType":"FunctionDefinition","parameters":{"id":1960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1955,"mutability":"mutable","name":"hash","nameLocation":"4779:4:13","nodeType":"VariableDeclaration","scope":1985,"src":"4771:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1954,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4771:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1957,"mutability":"mutable","name":"r","nameLocation":"4793:1:13","nodeType":"VariableDeclaration","scope":1985,"src":"4785:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1956,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4785:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1959,"mutability":"mutable","name":"vs","nameLocation":"4804:2:13","nodeType":"VariableDeclaration","scope":1985,"src":"4796:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1958,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4796:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4770:37:13"},"returnParameters":{"id":1963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1962,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1985,"src":"4831:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1961,"name":"address","nodeType":"ElementaryTypeName","src":"4831:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4830:9:13"},"scope":2146,"src":"4754:250:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2059,"nodeType":"Block","src":"5298:1372:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2006,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"6194:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6186:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2004,"name":"uint256","nodeType":"ElementaryTypeName","src":"6186:7:13","typeDescriptions":{}}},"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":2008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6199:66:13","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6186:79:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2020,"nodeType":"IfStatement","src":"6182:164:13","trueBody":{"id":2019,"nodeType":"Block","src":"6267:79:13","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6297:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6289:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2010,"name":"address","nodeType":"ElementaryTypeName","src":"6289:7:13","typeDescriptions":{}}},"id":2013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6289:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2014,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"6301:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1806_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6314:17:13","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1805,"src":"6301:30:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},{"id":2016,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"6333:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2017,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6288:47:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1806_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2003,"id":2018,"nodeType":"Return","src":"6281:54:13"}]}},{"assignments":[2022],"declarations":[{"constant":false,"id":2022,"mutability":"mutable","name":"signer","nameLocation":"6448:6:13","nodeType":"VariableDeclaration","scope":2059,"src":"6440:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2021,"name":"address","nodeType":"ElementaryTypeName","src":"6440:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2029,"initialValue":{"arguments":[{"id":2024,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"6467:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2025,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"6473:1:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2026,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"6476:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2027,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"6479:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2023,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6457:9:13","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6457:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6440:41:13"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2030,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"6495:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6513:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6505:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2031,"name":"address","nodeType":"ElementaryTypeName","src":"6505:7:13","typeDescriptions":{}}},"id":2034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6505:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6495:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2049,"nodeType":"IfStatement","src":"6491:113:13","trueBody":{"id":2048,"nodeType":"Block","src":"6517:87:13","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6547:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6539:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2036,"name":"address","nodeType":"ElementaryTypeName","src":"6539:7:13","typeDescriptions":{}}},"id":2039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6539:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2040,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"6551:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1806_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6564:16:13","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1803,"src":"6551:29:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":2044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6590:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6582:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2042,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6582:7:13","typeDescriptions":{}}},"id":2045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6582:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2046,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6538:55:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1806_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2003,"id":2047,"nodeType":"Return","src":"6531:62:13"}]}},{"expression":{"components":[{"id":2050,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"6622:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2051,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"6630:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1806_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6643:7:13","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1802,"src":"6630:20:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":2055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6652:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2053,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6652:7:13","typeDescriptions":{}}},"id":2056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6652:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2057,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6621:42:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1806_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2003,"id":2058,"nodeType":"Return","src":"6614:49:13"}]},"documentation":{"id":1986,"nodeType":"StructuredDocumentation","src":"5010:125:13","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2060,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5149:10:13","nodeType":"FunctionDefinition","parameters":{"id":1995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1988,"mutability":"mutable","name":"hash","nameLocation":"5177:4:13","nodeType":"VariableDeclaration","scope":2060,"src":"5169:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1987,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5169:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1990,"mutability":"mutable","name":"v","nameLocation":"5197:1:13","nodeType":"VariableDeclaration","scope":2060,"src":"5191:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1989,"name":"uint8","nodeType":"ElementaryTypeName","src":"5191:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1992,"mutability":"mutable","name":"r","nameLocation":"5216:1:13","nodeType":"VariableDeclaration","scope":2060,"src":"5208:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1991,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5208:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1994,"mutability":"mutable","name":"s","nameLocation":"5235:1:13","nodeType":"VariableDeclaration","scope":2060,"src":"5227:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1993,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5227:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5159:83:13"},"returnParameters":{"id":2003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1997,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2060,"src":"5266:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1996,"name":"address","nodeType":"ElementaryTypeName","src":"5266:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2000,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2060,"src":"5275:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1999,"nodeType":"UserDefinedTypeName","pathNode":{"id":1998,"name":"RecoverError","nameLocations":["5275:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":1806,"src":"5275:12:13"},"referencedDeclaration":1806,"src":"5275:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2002,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2060,"src":"5289:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2001,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5289:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5265:32:13"},"scope":2146,"src":"5140:1530:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2095,"nodeType":"Block","src":"6897:166:13","statements":[{"assignments":[2075,2078,2080],"declarations":[{"constant":false,"id":2075,"mutability":"mutable","name":"recovered","nameLocation":"6916:9:13","nodeType":"VariableDeclaration","scope":2095,"src":"6908:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2074,"name":"address","nodeType":"ElementaryTypeName","src":"6908:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2078,"mutability":"mutable","name":"error","nameLocation":"6940:5:13","nodeType":"VariableDeclaration","scope":2095,"src":"6927:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2077,"nodeType":"UserDefinedTypeName","pathNode":{"id":2076,"name":"RecoverError","nameLocations":["6927:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":1806,"src":"6927:12:13"},"referencedDeclaration":1806,"src":"6927:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2080,"mutability":"mutable","name":"errorArg","nameLocation":"6955:8:13","nodeType":"VariableDeclaration","scope":2095,"src":"6947:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2079,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6947:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2087,"initialValue":{"arguments":[{"id":2082,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"6978:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2083,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"6984:1:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2084,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"6987:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2085,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"6990:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2081,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1872,1952,2060],"referencedDeclaration":2060,"src":"6967:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1806_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1806_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6907:85:13"},{"expression":{"arguments":[{"id":2089,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"7014:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},{"id":2090,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"7021:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2088,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"7002:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1806_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7002:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2092,"nodeType":"ExpressionStatement","src":"7002:28:13"},{"expression":{"id":2093,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"7047:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2073,"id":2094,"nodeType":"Return","src":"7040:16:13"}]},"documentation":{"id":2061,"nodeType":"StructuredDocumentation","src":"6676:122:13","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2096,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6812:7:13","nodeType":"FunctionDefinition","parameters":{"id":2070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2063,"mutability":"mutable","name":"hash","nameLocation":"6828:4:13","nodeType":"VariableDeclaration","scope":2096,"src":"6820:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2062,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6820:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2065,"mutability":"mutable","name":"v","nameLocation":"6840:1:13","nodeType":"VariableDeclaration","scope":2096,"src":"6834:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2064,"name":"uint8","nodeType":"ElementaryTypeName","src":"6834:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2067,"mutability":"mutable","name":"r","nameLocation":"6851:1:13","nodeType":"VariableDeclaration","scope":2096,"src":"6843:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2066,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6843:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2069,"mutability":"mutable","name":"s","nameLocation":"6862:1:13","nodeType":"VariableDeclaration","scope":2096,"src":"6854:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2068,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6854:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6819:45:13"},"returnParameters":{"id":2073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2072,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2096,"src":"6888:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2071,"name":"address","nodeType":"ElementaryTypeName","src":"6888:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6887:9:13"},"scope":2146,"src":"6803:260:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2144,"nodeType":"Block","src":"7268:460:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2105,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"7282:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2106,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"7291:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1806_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7304:7:13","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1802,"src":"7291:20:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},"src":"7282:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"},"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2111,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"7378:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2112,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"7387:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1806_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7400:16:13","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1803,"src":"7387:29:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},"src":"7378:38:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"},"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2119,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"7483:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2120,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"7492:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1806_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7505:22:13","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1804,"src":"7492:35:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},"src":"7483:44:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2131,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"7617:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2132,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"7626:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1806_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7639:17:13","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1805,"src":"7626:30:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},"src":"7617:39:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2140,"nodeType":"IfStatement","src":"7613:109:13","trueBody":{"id":2139,"nodeType":"Block","src":"7658:64:13","statements":[{"errorCall":{"arguments":[{"id":2136,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"7702:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2135,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"7679:22:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7679:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2138,"nodeType":"RevertStatement","src":"7672:39:13"}]}},"id":2141,"nodeType":"IfStatement","src":"7479:243:13","trueBody":{"id":2130,"nodeType":"Block","src":"7529:78:13","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2126,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"7586:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7578:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2124,"name":"uint256","nodeType":"ElementaryTypeName","src":"7578:7:13","typeDescriptions":{}}},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7578:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2123,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"7550:27:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7550:46:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2129,"nodeType":"RevertStatement","src":"7543:53:13"}]}},"id":2142,"nodeType":"IfStatement","src":"7374:348:13","trueBody":{"id":2118,"nodeType":"Block","src":"7418:55:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2115,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"7439:21:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7439:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2117,"nodeType":"RevertStatement","src":"7432:30:13"}]}},"id":2143,"nodeType":"IfStatement","src":"7278:444:13","trueBody":{"id":2110,"nodeType":"Block","src":"7313:55:13","statements":[{"functionReturnParameters":2104,"id":2109,"nodeType":"Return","src":"7327:7:13"}]}}]},"documentation":{"id":2097,"nodeType":"StructuredDocumentation","src":"7069:122:13","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":2145,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7205:11:13","nodeType":"FunctionDefinition","parameters":{"id":2103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2100,"mutability":"mutable","name":"error","nameLocation":"7230:5:13","nodeType":"VariableDeclaration","scope":2145,"src":"7217:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2099,"nodeType":"UserDefinedTypeName","pathNode":{"id":2098,"name":"RecoverError","nameLocations":["7217:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":1806,"src":"7217:12:13"},"referencedDeclaration":1806,"src":"7217:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1806","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2102,"mutability":"mutable","name":"errorArg","nameLocation":"7245:8:13","nodeType":"VariableDeclaration","scope":2145,"src":"7237:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2101,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7237:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7216:38:13"},"returnParameters":{"id":2104,"nodeType":"ParameterList","parameters":[],"src":"7268:0:13"},"scope":2146,"src":"7196:532:13","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2147,"src":"344:7386:13","usedErrors":[1809,1814,1819],"usedEvents":[]}],"src":"112:7619:13"},"id":13},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[2373],"IERC5267":[172],"MessageHashUtils":[2447],"ShortString":[1222],"ShortStrings":[1433]},"id":2374,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2148,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":2150,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2374,"sourceUnit":2448,"src":"139:56:14","symbolAliases":[{"foreign":{"id":2149,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"147:16:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":2153,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2374,"sourceUnit":1434,"src":"196:62:14","symbolAliases":[{"foreign":{"id":2151,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"204:12:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2152,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"218:11:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":2155,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2374,"sourceUnit":173,"src":"259:55:14","symbolAliases":[{"foreign":{"id":2154,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"267:8:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2157,"name":"IERC5267","nameLocations":["1988:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":172,"src":"1988:8:14"},"id":2158,"nodeType":"InheritanceSpecifier","src":"1988:8:14"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":2156,"nodeType":"StructuredDocumentation","src":"316:1643:14","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":2373,"linearizedBaseContracts":[2373,172],"name":"EIP712","nameLocation":"1978:6:14","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2160,"libraryName":{"id":2159,"name":"ShortStrings","nameLocations":["2009:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":1433,"src":"2009:12:14"},"nodeType":"UsingForDirective","src":"2003:25:14"},{"constant":true,"id":2165,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:14","nodeType":"VariableDeclaration","scope":2373,"src":"2034:140:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2161,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":2163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":2162,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2167,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:14","nodeType":"VariableDeclaration","scope":2373,"src":"2373:48:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2166,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2169,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:14","nodeType":"VariableDeclaration","scope":2373,"src":"2427:40:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2168,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2171,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:14","nodeType":"VariableDeclaration","scope":2373,"src":"2473:37:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2170,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":2173,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:14","nodeType":"VariableDeclaration","scope":2373,"src":"2517:37:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2172,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2175,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:14","nodeType":"VariableDeclaration","scope":2373,"src":"2560:40:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2174,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2178,"mutability":"immutable","name":"_name","nameLocation":"2637:5:14","nodeType":"VariableDeclaration","scope":2373,"src":"2607:35:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"},"typeName":{"id":2177,"nodeType":"UserDefinedTypeName","pathNode":{"id":2176,"name":"ShortString","nameLocations":["2607:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"2607:11:14"},"referencedDeclaration":1222,"src":"2607:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":2181,"mutability":"immutable","name":"_version","nameLocation":"2678:8:14","nodeType":"VariableDeclaration","scope":2373,"src":"2648:38:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"},"typeName":{"id":2180,"nodeType":"UserDefinedTypeName","pathNode":{"id":2179,"name":"ShortString","nameLocations":["2648:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"2648:11:14"},"referencedDeclaration":1222,"src":"2648:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":2183,"mutability":"mutable","name":"_nameFallback","nameLocation":"2707:13:14","nodeType":"VariableDeclaration","scope":2373,"src":"2692:28:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2182,"name":"string","nodeType":"ElementaryTypeName","src":"2692:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2185,"mutability":"mutable","name":"_versionFallback","nameLocation":"2741:16:14","nodeType":"VariableDeclaration","scope":2373,"src":"2726:31:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2184,"name":"string","nodeType":"ElementaryTypeName","src":"2726:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":2242,"nodeType":"Block","src":"3383:376:14","statements":[{"expression":{"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2193,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"3393:5:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2196,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"3432:13:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2194,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"3401:4:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3406:25:14","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1374,"src":"3401:30:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1222_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3401:45:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}},"src":"3393:53:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}},"id":2199,"nodeType":"ExpressionStatement","src":"3393:53:14"},{"expression":{"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2200,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"3456:8:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2203,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"3501:16:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2201,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"3467:7:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3475:25:14","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1374,"src":"3467:33:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1222_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3467:51:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}},"src":"3456:62:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}},"id":2206,"nodeType":"ExpressionStatement","src":"3456:62:14"},{"expression":{"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2207,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"3528:11:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2211,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"3558:4:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3552:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2209,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:14","typeDescriptions":{}}},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3552:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2208,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3542:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3528:36:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2215,"nodeType":"ExpressionStatement","src":"3528:36:14"},{"expression":{"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2216,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"3574:14:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2220,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"3607:7:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3601:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2218,"name":"bytes","nodeType":"ElementaryTypeName","src":"3601:5:14","typeDescriptions":{}}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3601:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2217,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3591:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3574:42:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2224,"nodeType":"ExpressionStatement","src":"3574:42:14"},{"expression":{"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2225,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"3627:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2226,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3644:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3650:7:14","memberName":"chainid","nodeType":"MemberAccess","src":"3644:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3627:30:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2229,"nodeType":"ExpressionStatement","src":"3627:30:14"},{"expression":{"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2230,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"3667:22:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":2231,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"3692:21:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3692:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3667:48:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2234,"nodeType":"ExpressionStatement","src":"3667:48:14"},{"expression":{"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2235,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"3725:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2238,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3747:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2373","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2373","typeString":"contract EIP712"}],"id":2237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3739:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2236,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:14","typeDescriptions":{}}},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3725:27:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2241,"nodeType":"ExpressionStatement","src":"3725:27:14"}]},"documentation":{"id":2186,"nodeType":"StructuredDocumentation","src":"2764:559:14","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":2243,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2188,"mutability":"mutable","name":"name","nameLocation":"3354:4:14","nodeType":"VariableDeclaration","scope":2243,"src":"3340:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2187,"name":"string","nodeType":"ElementaryTypeName","src":"3340:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2190,"mutability":"mutable","name":"version","nameLocation":"3374:7:14","nodeType":"VariableDeclaration","scope":2243,"src":"3360:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2189,"name":"string","nodeType":"ElementaryTypeName","src":"3360:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3339:43:14"},"returnParameters":{"id":2192,"nodeType":"ParameterList","parameters":[],"src":"3383:0:14"},"scope":2373,"src":"3328:431:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2268,"nodeType":"Block","src":"3907:200:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2251,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3929:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2373","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2373","typeString":"contract EIP712"}],"id":2250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3921:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2249,"name":"address","nodeType":"ElementaryTypeName","src":"3921:7:14","typeDescriptions":{}}},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3921:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2253,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"3938:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3921:28:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2255,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3953:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3959:7:14","memberName":"chainid","nodeType":"MemberAccess","src":"3953:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2257,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"3970:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3953:31:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3921:63:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2266,"nodeType":"Block","src":"4046:55:14","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2263,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"4067:21:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4067:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2248,"id":2265,"nodeType":"Return","src":"4060:30:14"}]},"id":2267,"nodeType":"IfStatement","src":"3917:184:14","trueBody":{"id":2262,"nodeType":"Block","src":"3986:54:14","statements":[{"expression":{"id":2260,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"4007:22:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2248,"id":2261,"nodeType":"Return","src":"4000:29:14"}]}}]},"documentation":{"id":2244,"nodeType":"StructuredDocumentation","src":"3765:75:14","text":" @dev Returns the domain separator for the current chain."},"id":2269,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3854:18:14","nodeType":"FunctionDefinition","parameters":{"id":2245,"nodeType":"ParameterList","parameters":[],"src":"3872:2:14"},"returnParameters":{"id":2248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2269,"src":"3898:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3898:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3897:9:14"},"scope":2373,"src":"3845:262:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2289,"nodeType":"Block","src":"4177:115:14","statements":[{"expression":{"arguments":[{"arguments":[{"id":2277,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"4215:9:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2278,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"4226:11:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2279,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"4239:14:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2280,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4255:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4261:7:14","memberName":"chainid","nodeType":"MemberAccess","src":"4255:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2284,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4278:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2373","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2373","typeString":"contract EIP712"}],"id":2283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2282,"name":"address","nodeType":"ElementaryTypeName","src":"4270:7:14","typeDescriptions":{}}},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2275,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4204:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4208:6:14","memberName":"encode","nodeType":"MemberAccess","src":"4204:10:14","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4204:80:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2274,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4194:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4194:91:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2273,"id":2288,"nodeType":"Return","src":"4187:98:14"}]},"id":2290,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4122:21:14","nodeType":"FunctionDefinition","parameters":{"id":2270,"nodeType":"ParameterList","parameters":[],"src":"4143:2:14"},"returnParameters":{"id":2273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2290,"src":"4168:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2271,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:9:14"},"scope":2373,"src":"4113:179:14","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2305,"nodeType":"Block","src":"5003:90:14","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2300,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"5053:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5053:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2302,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"5075:10:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2298,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"5020:16:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$2447_$","typeString":"type(library MessageHashUtils)"}},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5037:15:14","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":2446,"src":"5020:32:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5020:66:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2297,"id":2304,"nodeType":"Return","src":"5013:73:14"}]},"documentation":{"id":2291,"nodeType":"StructuredDocumentation","src":"4298:614:14","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":2306,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4926:16:14","nodeType":"FunctionDefinition","parameters":{"id":2294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2293,"mutability":"mutable","name":"structHash","nameLocation":"4951:10:14","nodeType":"VariableDeclaration","scope":2306,"src":"4943:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2292,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4943:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4942:20:14"},"returnParameters":{"id":2297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2306,"src":"4994:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2295,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4994:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4993:9:14"},"scope":2373,"src":"4917:176:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[171],"body":{"id":2347,"nodeType":"Block","src":"5472:229:14","statements":[{"expression":{"components":[{"hexValue":"0f","id":2325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5503:7:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":2326,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"5533:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5533:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2328,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2372,"src":"5560:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5560:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":2330,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5590:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5596:7:14","memberName":"chainid","nodeType":"MemberAccess","src":"5590:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2334,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5625:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2373","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2373","typeString":"contract EIP712"}],"id":2333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5617:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2332,"name":"address","nodeType":"ElementaryTypeName","src":"5617:7:14","typeDescriptions":{}}},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5652:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5644:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2336,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5644:7:14","typeDescriptions":{}}},"id":2339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":2343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5682:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5668:13:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2340,"name":"uint256","nodeType":"ElementaryTypeName","src":"5672:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2341,"nodeType":"ArrayTypeName","src":"5672:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5668:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":2345,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5489:205:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":2324,"id":2346,"nodeType":"Return","src":"5482:212:14"}]},"documentation":{"id":2307,"nodeType":"StructuredDocumentation","src":"5099:40:14","text":" @dev See {IERC-5267}."},"functionSelector":"84b0196e","id":2348,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5153:12:14","nodeType":"FunctionDefinition","parameters":{"id":2308,"nodeType":"ParameterList","parameters":[],"src":"5165:2:14"},"returnParameters":{"id":2324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2310,"mutability":"mutable","name":"fields","nameLocation":"5249:6:14","nodeType":"VariableDeclaration","scope":2348,"src":"5242:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2309,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5242:6:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":2312,"mutability":"mutable","name":"name","nameLocation":"5283:4:14","nodeType":"VariableDeclaration","scope":2348,"src":"5269:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2311,"name":"string","nodeType":"ElementaryTypeName","src":"5269:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2314,"mutability":"mutable","name":"version","nameLocation":"5315:7:14","nodeType":"VariableDeclaration","scope":2348,"src":"5301:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2313,"name":"string","nodeType":"ElementaryTypeName","src":"5301:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2316,"mutability":"mutable","name":"chainId","nameLocation":"5344:7:14","nodeType":"VariableDeclaration","scope":2348,"src":"5336:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2315,"name":"uint256","nodeType":"ElementaryTypeName","src":"5336:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2318,"mutability":"mutable","name":"verifyingContract","nameLocation":"5373:17:14","nodeType":"VariableDeclaration","scope":2348,"src":"5365:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2317,"name":"address","nodeType":"ElementaryTypeName","src":"5365:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2320,"mutability":"mutable","name":"salt","nameLocation":"5412:4:14","nodeType":"VariableDeclaration","scope":2348,"src":"5404:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2319,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5404:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2323,"mutability":"mutable","name":"extensions","nameLocation":"5447:10:14","nodeType":"VariableDeclaration","scope":2348,"src":"5430:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2321,"name":"uint256","nodeType":"ElementaryTypeName","src":"5430:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2322,"nodeType":"ArrayTypeName","src":"5430:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5228:239:14"},"scope":2373,"src":"5144:557:14","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2359,"nodeType":"Block","src":"6082:65:14","statements":[{"expression":{"arguments":[{"id":2356,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"6126:13:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2354,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"6099:5:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6105:20:14","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1401,"src":"6099:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1222_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1222_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6099:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2353,"id":2358,"nodeType":"Return","src":"6092:48:14"}]},"documentation":{"id":2349,"nodeType":"StructuredDocumentation","src":"5707:256:14","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":2360,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6030:11:14","nodeType":"FunctionDefinition","parameters":{"id":2350,"nodeType":"ParameterList","parameters":[],"src":"6041:2:14"},"returnParameters":{"id":2353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2360,"src":"6067:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2351,"name":"string","nodeType":"ElementaryTypeName","src":"6067:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6066:15:14"},"scope":2373,"src":"6021:126:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2371,"nodeType":"Block","src":"6537:71:14","statements":[{"expression":{"arguments":[{"id":2368,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"6584:16:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2366,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"6554:8:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1222","typeString":"ShortString"}},"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6563:20:14","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1401,"src":"6554:29:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1222_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1222_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6554:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2365,"id":2370,"nodeType":"Return","src":"6547:54:14"}]},"documentation":{"id":2361,"nodeType":"StructuredDocumentation","src":"6153:262:14","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":2372,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6482:14:14","nodeType":"FunctionDefinition","parameters":{"id":2362,"nodeType":"ParameterList","parameters":[],"src":"6496:2:14"},"returnParameters":{"id":2365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2364,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2372,"src":"6522:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2363,"name":"string","nodeType":"ElementaryTypeName","src":"6522:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6521:15:14"},"scope":2373,"src":"6473:135:14","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2374,"src":"1960:4650:14","usedErrors":[1230,1232],"usedEvents":[152]}],"src":"113:6498:14"},"id":14},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[2447],"Strings":[1798]},"id":2448,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2375,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:15"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":2377,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2448,"sourceUnit":1799,"src":"149:39:15","symbolAliases":[{"foreign":{"id":2376,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"157:7:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":2378,"nodeType":"StructuredDocumentation","src":"190:330:15","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":2447,"linearizedBaseContracts":[2447],"name":"MessageHashUtils","nameLocation":"529:16:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":2387,"nodeType":"Block","src":"1314:368:15","statements":[{"AST":{"nativeSrc":"1376:300:15","nodeType":"YulBlock","src":"1376:300:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1397:4:15","nodeType":"YulLiteral","src":"1397:4:15","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1403:34:15","nodeType":"YulLiteral","src":"1403:34:15","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1390:6:15","nodeType":"YulIdentifier","src":"1390:6:15"},"nativeSrc":"1390:48:15","nodeType":"YulFunctionCall","src":"1390:48:15"},"nativeSrc":"1390:48:15","nodeType":"YulExpressionStatement","src":"1390:48:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1499:4:15","nodeType":"YulLiteral","src":"1499:4:15","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1505:11:15","nodeType":"YulIdentifier","src":"1505:11:15"}],"functionName":{"name":"mstore","nativeSrc":"1492:6:15","nodeType":"YulIdentifier","src":"1492:6:15"},"nativeSrc":"1492:25:15","nodeType":"YulFunctionCall","src":"1492:25:15"},"nativeSrc":"1492:25:15","nodeType":"YulExpressionStatement","src":"1492:25:15"},{"nativeSrc":"1571:31:15","nodeType":"YulAssignment","src":"1571:31:15","value":{"arguments":[{"kind":"number","nativeSrc":"1591:4:15","nodeType":"YulLiteral","src":"1591:4:15","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1597:4:15","nodeType":"YulLiteral","src":"1597:4:15","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1581:9:15","nodeType":"YulIdentifier","src":"1581:9:15"},"nativeSrc":"1581:21:15","nodeType":"YulFunctionCall","src":"1581:21:15"},"variableNames":[{"name":"digest","nativeSrc":"1571:6:15","nodeType":"YulIdentifier","src":"1571:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2384,"isOffset":false,"isSlot":false,"src":"1571:6:15","valueSize":1},{"declaration":2381,"isOffset":false,"isSlot":false,"src":"1505:11:15","valueSize":1}],"id":2386,"nodeType":"InlineAssembly","src":"1367:309:15"}]},"documentation":{"id":2379,"nodeType":"StructuredDocumentation","src":"552:665:15","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":2388,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:15","nodeType":"FunctionDefinition","parameters":{"id":2382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2381,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:15","nodeType":"VariableDeclaration","scope":2388,"src":"1254:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2380,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:15"},"returnParameters":{"id":2385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2384,"mutability":"mutable","name":"digest","nameLocation":"1306:6:15","nodeType":"VariableDeclaration","scope":2388,"src":"1298:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2383,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:15"},"scope":2447,"src":"1222:460:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2413,"nodeType":"Block","src":"2234:143:15","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":2400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2286:32:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":2405,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"2343:7:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2351:6:15","memberName":"length","nodeType":"MemberAccess","src":"2343:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2403,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"2326:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$1798_$","typeString":"type(library Strings)"}},"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2334:8:15","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1611,"src":"2326:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2326:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2320:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2401,"name":"bytes","nodeType":"ElementaryTypeName","src":"2320:5:15","typeDescriptions":{}}},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2409,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"2361:7:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2273:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2397,"name":"bytes","nodeType":"ElementaryTypeName","src":"2273:5:15","typeDescriptions":{}}},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2279:6:15","memberName":"concat","nodeType":"MemberAccess","src":"2273:12:15","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:96:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2396,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2263:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2263:107:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2395,"id":2412,"nodeType":"Return","src":"2244:126:15"}]},"documentation":{"id":2389,"nodeType":"StructuredDocumentation","src":"1688:455:15","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":2414,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2157:22:15","nodeType":"FunctionDefinition","parameters":{"id":2392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2391,"mutability":"mutable","name":"message","nameLocation":"2193:7:15","nodeType":"VariableDeclaration","scope":2414,"src":"2180:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2390,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2179:22:15"},"returnParameters":{"id":2395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2414,"src":"2225:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2393,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2224:9:15"},"scope":2447,"src":"2148:229:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2433,"nodeType":"Block","src":"2831:80:15","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":2427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2875:10:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":2428,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"2887:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2429,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"2898:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2425,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2858:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2862:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"2858:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2858:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2424,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2848:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2848:56:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2423,"id":2432,"nodeType":"Return","src":"2841:63:15"}]},"documentation":{"id":2415,"nodeType":"StructuredDocumentation","src":"2383:332:15","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":2434,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2729:31:15","nodeType":"FunctionDefinition","parameters":{"id":2420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2417,"mutability":"mutable","name":"validator","nameLocation":"2769:9:15","nodeType":"VariableDeclaration","scope":2434,"src":"2761:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2416,"name":"address","nodeType":"ElementaryTypeName","src":"2761:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2419,"mutability":"mutable","name":"data","nameLocation":"2793:4:15","nodeType":"VariableDeclaration","scope":2434,"src":"2780:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2418,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2760:38:15"},"returnParameters":{"id":2423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2422,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2434,"src":"2822:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2421,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2822:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2821:9:15"},"scope":2447,"src":"2720:191:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2445,"nodeType":"Block","src":"3462:292:15","statements":[{"AST":{"nativeSrc":"3524:224:15","nodeType":"YulBlock","src":"3524:224:15","statements":[{"nativeSrc":"3538:22:15","nodeType":"YulVariableDeclaration","src":"3538:22:15","value":{"arguments":[{"kind":"number","nativeSrc":"3555:4:15","nodeType":"YulLiteral","src":"3555:4:15","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3549:5:15","nodeType":"YulIdentifier","src":"3549:5:15"},"nativeSrc":"3549:11:15","nodeType":"YulFunctionCall","src":"3549:11:15"},"variables":[{"name":"ptr","nativeSrc":"3542:3:15","nodeType":"YulTypedName","src":"3542:3:15","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"3580:3:15","nodeType":"YulIdentifier","src":"3580:3:15"},{"hexValue":"1901","kind":"string","nativeSrc":"3585:10:15","nodeType":"YulLiteral","src":"3585:10:15","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"3573:6:15","nodeType":"YulIdentifier","src":"3573:6:15"},"nativeSrc":"3573:23:15","nodeType":"YulFunctionCall","src":"3573:23:15"},"nativeSrc":"3573:23:15","nodeType":"YulExpressionStatement","src":"3573:23:15"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3620:3:15","nodeType":"YulIdentifier","src":"3620:3:15"},{"kind":"number","nativeSrc":"3625:4:15","nodeType":"YulLiteral","src":"3625:4:15","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"3616:3:15","nodeType":"YulIdentifier","src":"3616:3:15"},"nativeSrc":"3616:14:15","nodeType":"YulFunctionCall","src":"3616:14:15"},{"name":"domainSeparator","nativeSrc":"3632:15:15","nodeType":"YulIdentifier","src":"3632:15:15"}],"functionName":{"name":"mstore","nativeSrc":"3609:6:15","nodeType":"YulIdentifier","src":"3609:6:15"},"nativeSrc":"3609:39:15","nodeType":"YulFunctionCall","src":"3609:39:15"},"nativeSrc":"3609:39:15","nodeType":"YulExpressionStatement","src":"3609:39:15"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3672:3:15","nodeType":"YulIdentifier","src":"3672:3:15"},{"kind":"number","nativeSrc":"3677:4:15","nodeType":"YulLiteral","src":"3677:4:15","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3668:3:15","nodeType":"YulIdentifier","src":"3668:3:15"},"nativeSrc":"3668:14:15","nodeType":"YulFunctionCall","src":"3668:14:15"},{"name":"structHash","nativeSrc":"3684:10:15","nodeType":"YulIdentifier","src":"3684:10:15"}],"functionName":{"name":"mstore","nativeSrc":"3661:6:15","nodeType":"YulIdentifier","src":"3661:6:15"},"nativeSrc":"3661:34:15","nodeType":"YulFunctionCall","src":"3661:34:15"},"nativeSrc":"3661:34:15","nodeType":"YulExpressionStatement","src":"3661:34:15"},{"nativeSrc":"3708:30:15","nodeType":"YulAssignment","src":"3708:30:15","value":{"arguments":[{"name":"ptr","nativeSrc":"3728:3:15","nodeType":"YulIdentifier","src":"3728:3:15"},{"kind":"number","nativeSrc":"3733:4:15","nodeType":"YulLiteral","src":"3733:4:15","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"3718:9:15","nodeType":"YulIdentifier","src":"3718:9:15"},"nativeSrc":"3718:20:15","nodeType":"YulFunctionCall","src":"3718:20:15"},"variableNames":[{"name":"digest","nativeSrc":"3708:6:15","nodeType":"YulIdentifier","src":"3708:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2442,"isOffset":false,"isSlot":false,"src":"3708:6:15","valueSize":1},{"declaration":2437,"isOffset":false,"isSlot":false,"src":"3632:15:15","valueSize":1},{"declaration":2439,"isOffset":false,"isSlot":false,"src":"3684:10:15","valueSize":1}],"id":2444,"nodeType":"InlineAssembly","src":"3515:233:15"}]},"documentation":{"id":2435,"nodeType":"StructuredDocumentation","src":"2917:431:15","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":2446,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3362:15:15","nodeType":"FunctionDefinition","parameters":{"id":2440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2437,"mutability":"mutable","name":"domainSeparator","nameLocation":"3386:15:15","nodeType":"VariableDeclaration","scope":2446,"src":"3378:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2436,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3378:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2439,"mutability":"mutable","name":"structHash","nameLocation":"3411:10:15","nodeType":"VariableDeclaration","scope":2446,"src":"3403:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2438,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3403:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3377:45:15"},"returnParameters":{"id":2443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2442,"mutability":"mutable","name":"digest","nameLocation":"3454:6:15","nodeType":"VariableDeclaration","scope":2446,"src":"3446:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2441,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3446:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3445:16:15"},"scope":2447,"src":"3353:401:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2448,"src":"521:3235:15","usedErrors":[],"usedEvents":[]}],"src":"123:3634:15"},"id":15},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3501]},"id":3502,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2449,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2450,"nodeType":"StructuredDocumentation","src":"129:73:16","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3501,"linearizedBaseContracts":[3501],"name":"Math","nameLocation":"211:4:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2451,"nodeType":"StructuredDocumentation","src":"222:50:16","text":" @dev Muldiv operation overflow."},"errorSelector":"227bc153","id":2453,"name":"MathOverflowedMulDiv","nameLocation":"283:20:16","nodeType":"ErrorDefinition","parameters":{"id":2452,"nodeType":"ParameterList","parameters":[],"src":"303:2:16"},"src":"277:29:16"},{"canonicalName":"Math.Rounding","id":2458,"members":[{"id":2454,"name":"Floor","nameLocation":"336:5:16","nodeType":"EnumValue","src":"336:5:16"},{"id":2455,"name":"Ceil","nameLocation":"379:4:16","nodeType":"EnumValue","src":"379:4:16"},{"id":2456,"name":"Trunc","nameLocation":"421:5:16","nodeType":"EnumValue","src":"421:5:16"},{"id":2457,"name":"Expand","nameLocation":"451:6:16","nodeType":"EnumValue","src":"451:6:16"}],"name":"Rounding","nameLocation":"317:8:16","nodeType":"EnumDefinition","src":"312:169:16"},{"body":{"id":2489,"nodeType":"Block","src":"661:140:16","statements":[{"id":2488,"nodeType":"UncheckedBlock","src":"671:124:16","statements":[{"assignments":[2471],"declarations":[{"constant":false,"id":2471,"mutability":"mutable","name":"c","nameLocation":"703:1:16","nodeType":"VariableDeclaration","scope":2488,"src":"695:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2470,"name":"uint256","nodeType":"ElementaryTypeName","src":"695:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2475,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2472,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"707:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2473,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"711:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"707:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"695:17:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2476,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"730:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2477,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"734:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"730:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2483,"nodeType":"IfStatement","src":"726:28:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"745:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"752:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2481,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"744:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2469,"id":2482,"nodeType":"Return","src":"737:17:16"}},{"expression":{"components":[{"hexValue":"74727565","id":2484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"776:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2485,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"782:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2486,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"775:9:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2469,"id":2487,"nodeType":"Return","src":"768:16:16"}]}]},"documentation":{"id":2459,"nodeType":"StructuredDocumentation","src":"487:93:16","text":" @dev Returns the addition of two unsigned integers, with an overflow flag."},"id":2490,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"594:6:16","nodeType":"FunctionDefinition","parameters":{"id":2464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2461,"mutability":"mutable","name":"a","nameLocation":"609:1:16","nodeType":"VariableDeclaration","scope":2490,"src":"601:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2460,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2463,"mutability":"mutable","name":"b","nameLocation":"620:1:16","nodeType":"VariableDeclaration","scope":2490,"src":"612:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2462,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:16"},"returnParameters":{"id":2469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2490,"src":"646:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2465,"name":"bool","nodeType":"ElementaryTypeName","src":"646:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2490,"src":"652:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2467,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:15:16"},"scope":3501,"src":"585:216:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2517,"nodeType":"Block","src":"984:113:16","statements":[{"id":2516,"nodeType":"UncheckedBlock","src":"994:97:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2502,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"1022:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2503,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"1026:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1022:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2509,"nodeType":"IfStatement","src":"1018:28:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1037:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2507,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1036:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2501,"id":2508,"nodeType":"Return","src":"1029:17:16"}},{"expression":{"components":[{"hexValue":"74727565","id":2510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1068:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2511,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"1074:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2512,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"1078:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1074:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2514,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1067:13:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2501,"id":2515,"nodeType":"Return","src":"1060:20:16"}]}]},"documentation":{"id":2491,"nodeType":"StructuredDocumentation","src":"807:96:16","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag."},"id":2518,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"917:6:16","nodeType":"FunctionDefinition","parameters":{"id":2496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2493,"mutability":"mutable","name":"a","nameLocation":"932:1:16","nodeType":"VariableDeclaration","scope":2518,"src":"924:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2492,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2495,"mutability":"mutable","name":"b","nameLocation":"943:1:16","nodeType":"VariableDeclaration","scope":2518,"src":"935:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2494,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:22:16"},"returnParameters":{"id":2501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2518,"src":"969:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2497,"name":"bool","nodeType":"ElementaryTypeName","src":"969:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2518,"src":"975:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2499,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"968:15:16"},"scope":3501,"src":"908:189:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2559,"nodeType":"Block","src":"1283:417:16","statements":[{"id":2558,"nodeType":"UncheckedBlock","src":"1293:401:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2530,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"1551:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1556:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1551:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2537,"nodeType":"IfStatement","src":"1547:28:16","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":2533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1567:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":2534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1573:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2535,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1566:9:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2529,"id":2536,"nodeType":"Return","src":"1559:16:16"}},{"assignments":[2539],"declarations":[{"constant":false,"id":2539,"mutability":"mutable","name":"c","nameLocation":"1597:1:16","nodeType":"VariableDeclaration","scope":2558,"src":"1589:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2538,"name":"uint256","nodeType":"ElementaryTypeName","src":"1589:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2543,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2540,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"1601:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2541,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"1605:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1601:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1589:17:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2544,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"1624:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2545,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"1628:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2547,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"1633:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2553,"nodeType":"IfStatement","src":"1620:33:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1644:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1651:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2551,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1643:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2529,"id":2552,"nodeType":"Return","src":"1636:17:16"}},{"expression":{"components":[{"hexValue":"74727565","id":2554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1675:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2555,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"1681:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2556,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1674:9:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2529,"id":2557,"nodeType":"Return","src":"1667:16:16"}]}]},"documentation":{"id":2519,"nodeType":"StructuredDocumentation","src":"1103:99:16","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag."},"id":2560,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1216:6:16","nodeType":"FunctionDefinition","parameters":{"id":2524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2521,"mutability":"mutable","name":"a","nameLocation":"1231:1:16","nodeType":"VariableDeclaration","scope":2560,"src":"1223:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2520,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2523,"mutability":"mutable","name":"b","nameLocation":"1242:1:16","nodeType":"VariableDeclaration","scope":2560,"src":"1234:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2522,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:22:16"},"returnParameters":{"id":2529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2526,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2560,"src":"1268:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2525,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2528,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2560,"src":"1274:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2527,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:15:16"},"scope":3501,"src":"1207:493:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2587,"nodeType":"Block","src":"1887:114:16","statements":[{"id":2586,"nodeType":"UncheckedBlock","src":"1897:98:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2572,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"1925:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1930:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1925:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2579,"nodeType":"IfStatement","src":"1921:29:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1941:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1948:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2577,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1940:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2571,"id":2578,"nodeType":"Return","src":"1933:17:16"}},{"expression":{"components":[{"hexValue":"74727565","id":2580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1972:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2581,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"1978:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2582,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"1982:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1978:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2584,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1971:13:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2571,"id":2585,"nodeType":"Return","src":"1964:20:16"}]}]},"documentation":{"id":2561,"nodeType":"StructuredDocumentation","src":"1706:100:16","text":" @dev Returns the division of two unsigned integers, with a division by zero flag."},"id":2588,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1820:6:16","nodeType":"FunctionDefinition","parameters":{"id":2566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2563,"mutability":"mutable","name":"a","nameLocation":"1835:1:16","nodeType":"VariableDeclaration","scope":2588,"src":"1827:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2562,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2565,"mutability":"mutable","name":"b","nameLocation":"1846:1:16","nodeType":"VariableDeclaration","scope":2588,"src":"1838:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2564,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1826:22:16"},"returnParameters":{"id":2571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2568,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2588,"src":"1872:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2567,"name":"bool","nodeType":"ElementaryTypeName","src":"1872:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2570,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2588,"src":"1878:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2569,"name":"uint256","nodeType":"ElementaryTypeName","src":"1878:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1871:15:16"},"scope":3501,"src":"1811:190:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2615,"nodeType":"Block","src":"2198:114:16","statements":[{"id":2614,"nodeType":"UncheckedBlock","src":"2208:98:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2600,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"2236:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2607,"nodeType":"IfStatement","src":"2232:29:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2252:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2259:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2605,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2251:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2599,"id":2606,"nodeType":"Return","src":"2244:17:16"}},{"expression":{"components":[{"hexValue":"74727565","id":2608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2283:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2609,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"2289:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2610,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"2293:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2289:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2612,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2282:13:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2599,"id":2613,"nodeType":"Return","src":"2275:20:16"}]}]},"documentation":{"id":2589,"nodeType":"StructuredDocumentation","src":"2007:110:16","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."},"id":2616,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2131:6:16","nodeType":"FunctionDefinition","parameters":{"id":2594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2591,"mutability":"mutable","name":"a","nameLocation":"2146:1:16","nodeType":"VariableDeclaration","scope":2616,"src":"2138:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2590,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2593,"mutability":"mutable","name":"b","nameLocation":"2157:1:16","nodeType":"VariableDeclaration","scope":2616,"src":"2149:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2592,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2137:22:16"},"returnParameters":{"id":2599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2596,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2616,"src":"2183:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2595,"name":"bool","nodeType":"ElementaryTypeName","src":"2183:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2598,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2616,"src":"2189:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2597,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2182:15:16"},"scope":3501,"src":"2122:190:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2633,"nodeType":"Block","src":"2449:37:16","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2626,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"2466:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2627,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"2470:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2466:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2630,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"2478:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2466:13:16","trueExpression":{"id":2629,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"2474:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2625,"id":2632,"nodeType":"Return","src":"2459:20:16"}]},"documentation":{"id":2617,"nodeType":"StructuredDocumentation","src":"2318:59:16","text":" @dev Returns the largest of two numbers."},"id":2634,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"2391:3:16","nodeType":"FunctionDefinition","parameters":{"id":2622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2619,"mutability":"mutable","name":"a","nameLocation":"2403:1:16","nodeType":"VariableDeclaration","scope":2634,"src":"2395:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2618,"name":"uint256","nodeType":"ElementaryTypeName","src":"2395:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2621,"mutability":"mutable","name":"b","nameLocation":"2414:1:16","nodeType":"VariableDeclaration","scope":2634,"src":"2406:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2620,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:22:16"},"returnParameters":{"id":2625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2624,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2634,"src":"2440:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2623,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2439:9:16"},"scope":3501,"src":"2382:104:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2651,"nodeType":"Block","src":"2624:37:16","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2644,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"2641:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2645,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"2645:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2641:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2648,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"2653:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2641:13:16","trueExpression":{"id":2647,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"2649:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2643,"id":2650,"nodeType":"Return","src":"2634:20:16"}]},"documentation":{"id":2635,"nodeType":"StructuredDocumentation","src":"2492:60:16","text":" @dev Returns the smallest of two numbers."},"id":2652,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"2566:3:16","nodeType":"FunctionDefinition","parameters":{"id":2640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2637,"mutability":"mutable","name":"a","nameLocation":"2578:1:16","nodeType":"VariableDeclaration","scope":2652,"src":"2570:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2636,"name":"uint256","nodeType":"ElementaryTypeName","src":"2570:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2639,"mutability":"mutable","name":"b","nameLocation":"2589:1:16","nodeType":"VariableDeclaration","scope":2652,"src":"2581:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2638,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2569:22:16"},"returnParameters":{"id":2643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2642,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2652,"src":"2615:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2641,"name":"uint256","nodeType":"ElementaryTypeName","src":"2615:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2614:9:16"},"scope":3501,"src":"2557:104:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2674,"nodeType":"Block","src":"2845:82:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2662,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"2900:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2663,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"2904:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2900:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2665,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2899:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2666,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"2910:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2667,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"2914:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2910:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2669,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2909:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2919:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2909:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2899:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2661,"id":2673,"nodeType":"Return","src":"2892:28:16"}]},"documentation":{"id":2653,"nodeType":"StructuredDocumentation","src":"2667:102:16","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2675,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"2783:7:16","nodeType":"FunctionDefinition","parameters":{"id":2658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2655,"mutability":"mutable","name":"a","nameLocation":"2799:1:16","nodeType":"VariableDeclaration","scope":2675,"src":"2791:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2654,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2657,"mutability":"mutable","name":"b","nameLocation":"2810:1:16","nodeType":"VariableDeclaration","scope":2675,"src":"2802:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2656,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2790:22:16"},"returnParameters":{"id":2661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2660,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2675,"src":"2836:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2659,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2835:9:16"},"scope":3501,"src":"2774:153:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2708,"nodeType":"Block","src":"3219:260:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2685,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"3233:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3238:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3233:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2693,"nodeType":"IfStatement","src":"3229:127:16","trueBody":{"id":2692,"nodeType":"Block","src":"3241:115:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2688,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"3340:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2689,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"3344:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3340:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2684,"id":2691,"nodeType":"Return","src":"3333:12:16"}]}},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2694,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"3444:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3449:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3444:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2698,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"3458:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3462:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3458:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2701,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3457:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2702,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"3467:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3457:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3471:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3457:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3444:28:16","trueExpression":{"hexValue":"30","id":2697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3453:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2684,"id":2707,"nodeType":"Return","src":"3437:35:16"}]},"documentation":{"id":2676,"nodeType":"StructuredDocumentation","src":"2933:210:16","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":2709,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3157:7:16","nodeType":"FunctionDefinition","parameters":{"id":2681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2678,"mutability":"mutable","name":"a","nameLocation":"3173:1:16","nodeType":"VariableDeclaration","scope":2709,"src":"3165:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2677,"name":"uint256","nodeType":"ElementaryTypeName","src":"3165:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2680,"mutability":"mutable","name":"b","nameLocation":"3184:1:16","nodeType":"VariableDeclaration","scope":2709,"src":"3176:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2679,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3164:22:16"},"returnParameters":{"id":2684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2709,"src":"3210:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2682,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:9:16"},"scope":3501,"src":"3148:331:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2834,"nodeType":"Block","src":"3901:4018:16","statements":[{"id":2833,"nodeType":"UncheckedBlock","src":"3911:4002:16","statements":[{"assignments":[2722],"declarations":[{"constant":false,"id":2722,"mutability":"mutable","name":"prod0","nameLocation":"4240:5:16","nodeType":"VariableDeclaration","scope":2833,"src":"4232:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2721,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2726,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2723,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"4248:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2724,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"4252:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4248:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4232:21:16"},{"assignments":[2728],"declarations":[{"constant":false,"id":2728,"mutability":"mutable","name":"prod1","nameLocation":"4320:5:16","nodeType":"VariableDeclaration","scope":2833,"src":"4312:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2727,"name":"uint256","nodeType":"ElementaryTypeName","src":"4312:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2729,"nodeType":"VariableDeclarationStatement","src":"4312:13:16"},{"AST":{"nativeSrc":"4392:122:16","nodeType":"YulBlock","src":"4392:122:16","statements":[{"nativeSrc":"4410:30:16","nodeType":"YulVariableDeclaration","src":"4410:30:16","value":{"arguments":[{"name":"x","nativeSrc":"4427:1:16","nodeType":"YulIdentifier","src":"4427:1:16"},{"name":"y","nativeSrc":"4430:1:16","nodeType":"YulIdentifier","src":"4430:1:16"},{"arguments":[{"kind":"number","nativeSrc":"4437:1:16","nodeType":"YulLiteral","src":"4437:1:16","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4433:3:16","nodeType":"YulIdentifier","src":"4433:3:16"},"nativeSrc":"4433:6:16","nodeType":"YulFunctionCall","src":"4433:6:16"}],"functionName":{"name":"mulmod","nativeSrc":"4420:6:16","nodeType":"YulIdentifier","src":"4420:6:16"},"nativeSrc":"4420:20:16","nodeType":"YulFunctionCall","src":"4420:20:16"},"variables":[{"name":"mm","nativeSrc":"4414:2:16","nodeType":"YulTypedName","src":"4414:2:16","type":""}]},{"nativeSrc":"4457:43:16","nodeType":"YulAssignment","src":"4457:43:16","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"4474:2:16","nodeType":"YulIdentifier","src":"4474:2:16"},{"name":"prod0","nativeSrc":"4478:5:16","nodeType":"YulIdentifier","src":"4478:5:16"}],"functionName":{"name":"sub","nativeSrc":"4470:3:16","nodeType":"YulIdentifier","src":"4470:3:16"},"nativeSrc":"4470:14:16","nodeType":"YulFunctionCall","src":"4470:14:16"},{"arguments":[{"name":"mm","nativeSrc":"4489:2:16","nodeType":"YulIdentifier","src":"4489:2:16"},{"name":"prod0","nativeSrc":"4493:5:16","nodeType":"YulIdentifier","src":"4493:5:16"}],"functionName":{"name":"lt","nativeSrc":"4486:2:16","nodeType":"YulIdentifier","src":"4486:2:16"},"nativeSrc":"4486:13:16","nodeType":"YulFunctionCall","src":"4486:13:16"}],"functionName":{"name":"sub","nativeSrc":"4466:3:16","nodeType":"YulIdentifier","src":"4466:3:16"},"nativeSrc":"4466:34:16","nodeType":"YulFunctionCall","src":"4466:34:16"},"variableNames":[{"name":"prod1","nativeSrc":"4457:5:16","nodeType":"YulIdentifier","src":"4457:5:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2722,"isOffset":false,"isSlot":false,"src":"4478:5:16","valueSize":1},{"declaration":2722,"isOffset":false,"isSlot":false,"src":"4493:5:16","valueSize":1},{"declaration":2728,"isOffset":false,"isSlot":false,"src":"4457:5:16","valueSize":1},{"declaration":2712,"isOffset":false,"isSlot":false,"src":"4427:1:16","valueSize":1},{"declaration":2714,"isOffset":false,"isSlot":false,"src":"4430:1:16","valueSize":1}],"id":2730,"nodeType":"InlineAssembly","src":"4383:131:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2731,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"4595:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4604:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4595:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2739,"nodeType":"IfStatement","src":"4591:368:16","trueBody":{"id":2738,"nodeType":"Block","src":"4607:352:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2734,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"4925:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2735,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"4933:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2720,"id":2737,"nodeType":"Return","src":"4918:26:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2740,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"5065:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2741,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"5080:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2747,"nodeType":"IfStatement","src":"5061:88:16","trueBody":{"id":2746,"nodeType":"Block","src":"5087:62:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2743,"name":"MathOverflowedMulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"5112:20:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2745,"nodeType":"RevertStatement","src":"5105:29:16"}]}},{"assignments":[2749],"declarations":[{"constant":false,"id":2749,"mutability":"mutable","name":"remainder","nameLocation":"5412:9:16","nodeType":"VariableDeclaration","scope":2833,"src":"5404:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2748,"name":"uint256","nodeType":"ElementaryTypeName","src":"5404:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2750,"nodeType":"VariableDeclarationStatement","src":"5404:17:16"},{"AST":{"nativeSrc":"5444:291:16","nodeType":"YulBlock","src":"5444:291:16","statements":[{"nativeSrc":"5513:38:16","nodeType":"YulAssignment","src":"5513:38:16","value":{"arguments":[{"name":"x","nativeSrc":"5533:1:16","nodeType":"YulIdentifier","src":"5533:1:16"},{"name":"y","nativeSrc":"5536:1:16","nodeType":"YulIdentifier","src":"5536:1:16"},{"name":"denominator","nativeSrc":"5539:11:16","nodeType":"YulIdentifier","src":"5539:11:16"}],"functionName":{"name":"mulmod","nativeSrc":"5526:6:16","nodeType":"YulIdentifier","src":"5526:6:16"},"nativeSrc":"5526:25:16","nodeType":"YulFunctionCall","src":"5526:25:16"},"variableNames":[{"name":"remainder","nativeSrc":"5513:9:16","nodeType":"YulIdentifier","src":"5513:9:16"}]},{"nativeSrc":"5633:41:16","nodeType":"YulAssignment","src":"5633:41:16","value":{"arguments":[{"name":"prod1","nativeSrc":"5646:5:16","nodeType":"YulIdentifier","src":"5646:5:16"},{"arguments":[{"name":"remainder","nativeSrc":"5656:9:16","nodeType":"YulIdentifier","src":"5656:9:16"},{"name":"prod0","nativeSrc":"5667:5:16","nodeType":"YulIdentifier","src":"5667:5:16"}],"functionName":{"name":"gt","nativeSrc":"5653:2:16","nodeType":"YulIdentifier","src":"5653:2:16"},"nativeSrc":"5653:20:16","nodeType":"YulFunctionCall","src":"5653:20:16"}],"functionName":{"name":"sub","nativeSrc":"5642:3:16","nodeType":"YulIdentifier","src":"5642:3:16"},"nativeSrc":"5642:32:16","nodeType":"YulFunctionCall","src":"5642:32:16"},"variableNames":[{"name":"prod1","nativeSrc":"5633:5:16","nodeType":"YulIdentifier","src":"5633:5:16"}]},{"nativeSrc":"5691:30:16","nodeType":"YulAssignment","src":"5691:30:16","value":{"arguments":[{"name":"prod0","nativeSrc":"5704:5:16","nodeType":"YulIdentifier","src":"5704:5:16"},{"name":"remainder","nativeSrc":"5711:9:16","nodeType":"YulIdentifier","src":"5711:9:16"}],"functionName":{"name":"sub","nativeSrc":"5700:3:16","nodeType":"YulIdentifier","src":"5700:3:16"},"nativeSrc":"5700:21:16","nodeType":"YulFunctionCall","src":"5700:21:16"},"variableNames":[{"name":"prod0","nativeSrc":"5691:5:16","nodeType":"YulIdentifier","src":"5691:5:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2716,"isOffset":false,"isSlot":false,"src":"5539:11:16","valueSize":1},{"declaration":2722,"isOffset":false,"isSlot":false,"src":"5667:5:16","valueSize":1},{"declaration":2722,"isOffset":false,"isSlot":false,"src":"5691:5:16","valueSize":1},{"declaration":2722,"isOffset":false,"isSlot":false,"src":"5704:5:16","valueSize":1},{"declaration":2728,"isOffset":false,"isSlot":false,"src":"5633:5:16","valueSize":1},{"declaration":2728,"isOffset":false,"isSlot":false,"src":"5646:5:16","valueSize":1},{"declaration":2749,"isOffset":false,"isSlot":false,"src":"5513:9:16","valueSize":1},{"declaration":2749,"isOffset":false,"isSlot":false,"src":"5656:9:16","valueSize":1},{"declaration":2749,"isOffset":false,"isSlot":false,"src":"5711:9:16","valueSize":1},{"declaration":2712,"isOffset":false,"isSlot":false,"src":"5533:1:16","valueSize":1},{"declaration":2714,"isOffset":false,"isSlot":false,"src":"5536:1:16","valueSize":1}],"id":2751,"nodeType":"InlineAssembly","src":"5435:300:16"},{"assignments":[2753],"declarations":[{"constant":false,"id":2753,"mutability":"mutable","name":"twos","nameLocation":"5947:4:16","nodeType":"VariableDeclaration","scope":2833,"src":"5939:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2752,"name":"uint256","nodeType":"ElementaryTypeName","src":"5939:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2760,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2754,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"5954:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":2755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5969:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2756,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"5973:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5969:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2758,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5968:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5954:31:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5939:46:16"},{"AST":{"nativeSrc":"6008:362:16","nodeType":"YulBlock","src":"6008:362:16","statements":[{"nativeSrc":"6073:37:16","nodeType":"YulAssignment","src":"6073:37:16","value":{"arguments":[{"name":"denominator","nativeSrc":"6092:11:16","nodeType":"YulIdentifier","src":"6092:11:16"},{"name":"twos","nativeSrc":"6105:4:16","nodeType":"YulIdentifier","src":"6105:4:16"}],"functionName":{"name":"div","nativeSrc":"6088:3:16","nodeType":"YulIdentifier","src":"6088:3:16"},"nativeSrc":"6088:22:16","nodeType":"YulFunctionCall","src":"6088:22:16"},"variableNames":[{"name":"denominator","nativeSrc":"6073:11:16","nodeType":"YulIdentifier","src":"6073:11:16"}]},{"nativeSrc":"6177:25:16","nodeType":"YulAssignment","src":"6177:25:16","value":{"arguments":[{"name":"prod0","nativeSrc":"6190:5:16","nodeType":"YulIdentifier","src":"6190:5:16"},{"name":"twos","nativeSrc":"6197:4:16","nodeType":"YulIdentifier","src":"6197:4:16"}],"functionName":{"name":"div","nativeSrc":"6186:3:16","nodeType":"YulIdentifier","src":"6186:3:16"},"nativeSrc":"6186:16:16","nodeType":"YulFunctionCall","src":"6186:16:16"},"variableNames":[{"name":"prod0","nativeSrc":"6177:5:16","nodeType":"YulIdentifier","src":"6177:5:16"}]},{"nativeSrc":"6317:39:16","nodeType":"YulAssignment","src":"6317:39:16","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6337:1:16","nodeType":"YulLiteral","src":"6337:1:16","type":"","value":"0"},{"name":"twos","nativeSrc":"6340:4:16","nodeType":"YulIdentifier","src":"6340:4:16"}],"functionName":{"name":"sub","nativeSrc":"6333:3:16","nodeType":"YulIdentifier","src":"6333:3:16"},"nativeSrc":"6333:12:16","nodeType":"YulFunctionCall","src":"6333:12:16"},{"name":"twos","nativeSrc":"6347:4:16","nodeType":"YulIdentifier","src":"6347:4:16"}],"functionName":{"name":"div","nativeSrc":"6329:3:16","nodeType":"YulIdentifier","src":"6329:3:16"},"nativeSrc":"6329:23:16","nodeType":"YulFunctionCall","src":"6329:23:16"},{"kind":"number","nativeSrc":"6354:1:16","nodeType":"YulLiteral","src":"6354:1:16","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6325:3:16","nodeType":"YulIdentifier","src":"6325:3:16"},"nativeSrc":"6325:31:16","nodeType":"YulFunctionCall","src":"6325:31:16"},"variableNames":[{"name":"twos","nativeSrc":"6317:4:16","nodeType":"YulIdentifier","src":"6317:4:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2716,"isOffset":false,"isSlot":false,"src":"6073:11:16","valueSize":1},{"declaration":2716,"isOffset":false,"isSlot":false,"src":"6092:11:16","valueSize":1},{"declaration":2722,"isOffset":false,"isSlot":false,"src":"6177:5:16","valueSize":1},{"declaration":2722,"isOffset":false,"isSlot":false,"src":"6190:5:16","valueSize":1},{"declaration":2753,"isOffset":false,"isSlot":false,"src":"6105:4:16","valueSize":1},{"declaration":2753,"isOffset":false,"isSlot":false,"src":"6197:4:16","valueSize":1},{"declaration":2753,"isOffset":false,"isSlot":false,"src":"6317:4:16","valueSize":1},{"declaration":2753,"isOffset":false,"isSlot":false,"src":"6340:4:16","valueSize":1},{"declaration":2753,"isOffset":false,"isSlot":false,"src":"6347:4:16","valueSize":1}],"id":2761,"nodeType":"InlineAssembly","src":"5999:371:16"},{"expression":{"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2762,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"6436:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2763,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"6445:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2764,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"6453:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6445:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6436:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2767,"nodeType":"ExpressionStatement","src":"6436:21:16"},{"assignments":[2769],"declarations":[{"constant":false,"id":2769,"mutability":"mutable","name":"inverse","nameLocation":"6783:7:16","nodeType":"VariableDeclaration","scope":2833,"src":"6775:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2768,"name":"uint256","nodeType":"ElementaryTypeName","src":"6775:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2776,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6794:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2771,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"6798:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6794:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2773,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6793:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6813:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6793:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6775:39:16"},{"expression":{"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2777,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"7031:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7042:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2779,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"7046:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2780,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"7060:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7046:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7042:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7031:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2784,"nodeType":"ExpressionStatement","src":"7031:36:16"},{"expression":{"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2785,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"7100:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7111:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2787,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"7115:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2788,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"7129:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7115:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7111:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7100:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2792,"nodeType":"ExpressionStatement","src":"7100:36:16"},{"expression":{"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2793,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"7170:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7181:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2795,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"7185:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2796,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"7199:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7185:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7181:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7170:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2800,"nodeType":"ExpressionStatement","src":"7170:36:16"},{"expression":{"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2801,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"7240:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2803,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"7255:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2804,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"7269:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7255:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7251:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7240:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2808,"nodeType":"ExpressionStatement","src":"7240:36:16"},{"expression":{"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2809,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"7310:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7321:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2811,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"7325:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2812,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"7339:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7325:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7321:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7310:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2816,"nodeType":"ExpressionStatement","src":"7310:36:16"},{"expression":{"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2817,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"7381:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7392:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2819,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"7396:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2820,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"7410:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7396:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7392:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7381:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2824,"nodeType":"ExpressionStatement","src":"7381:36:16"},{"expression":{"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2825,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"7851:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2826,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"7860:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2827,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"7868:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7860:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7851:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2830,"nodeType":"ExpressionStatement","src":"7851:24:16"},{"expression":{"id":2831,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"7896:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2720,"id":2832,"nodeType":"Return","src":"7889:13:16"}]}]},"documentation":{"id":2710,"nodeType":"StructuredDocumentation","src":"3485:313:16","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":2835,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"3812:6:16","nodeType":"FunctionDefinition","parameters":{"id":2717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2712,"mutability":"mutable","name":"x","nameLocation":"3827:1:16","nodeType":"VariableDeclaration","scope":2835,"src":"3819:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2711,"name":"uint256","nodeType":"ElementaryTypeName","src":"3819:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2714,"mutability":"mutable","name":"y","nameLocation":"3838:1:16","nodeType":"VariableDeclaration","scope":2835,"src":"3830:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2713,"name":"uint256","nodeType":"ElementaryTypeName","src":"3830:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2716,"mutability":"mutable","name":"denominator","nameLocation":"3849:11:16","nodeType":"VariableDeclaration","scope":2835,"src":"3841:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2715,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3818:43:16"},"returnParameters":{"id":2720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2719,"mutability":"mutable","name":"result","nameLocation":"3893:6:16","nodeType":"VariableDeclaration","scope":2835,"src":"3885:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2718,"name":"uint256","nodeType":"ElementaryTypeName","src":"3885:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3884:16:16"},"scope":3501,"src":"3803:4116:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2877,"nodeType":"Block","src":"8161:192:16","statements":[{"assignments":[2851],"declarations":[{"constant":false,"id":2851,"mutability":"mutable","name":"result","nameLocation":"8179:6:16","nodeType":"VariableDeclaration","scope":2877,"src":"8171:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2850,"name":"uint256","nodeType":"ElementaryTypeName","src":"8171:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2857,"initialValue":{"arguments":[{"id":2853,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"8195:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2854,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"8198:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2855,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"8201:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2852,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2835,2878],"referencedDeclaration":2835,"src":"8188:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8188:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8171:42:16"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2859,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"8244:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"}],"id":2858,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"8227:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2458_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2862,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"8264:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2863,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"8267:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2864,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"8270:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2861,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"8257:6:16","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8257:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8285:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8257:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8227:59:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2874,"nodeType":"IfStatement","src":"8223:101:16","trueBody":{"id":2873,"nodeType":"Block","src":"8288:36:16","statements":[{"expression":{"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2869,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2851,"src":"8302:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8312:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8302:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2872,"nodeType":"ExpressionStatement","src":"8302:11:16"}]}},{"expression":{"id":2875,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2851,"src":"8340:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2849,"id":2876,"nodeType":"Return","src":"8333:13:16"}]},"documentation":{"id":2836,"nodeType":"StructuredDocumentation","src":"7925:121:16","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2878,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"8060:6:16","nodeType":"FunctionDefinition","parameters":{"id":2846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2838,"mutability":"mutable","name":"x","nameLocation":"8075:1:16","nodeType":"VariableDeclaration","scope":2878,"src":"8067:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2837,"name":"uint256","nodeType":"ElementaryTypeName","src":"8067:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2840,"mutability":"mutable","name":"y","nameLocation":"8086:1:16","nodeType":"VariableDeclaration","scope":2878,"src":"8078:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2839,"name":"uint256","nodeType":"ElementaryTypeName","src":"8078:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2842,"mutability":"mutable","name":"denominator","nameLocation":"8097:11:16","nodeType":"VariableDeclaration","scope":2878,"src":"8089:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2841,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2845,"mutability":"mutable","name":"rounding","nameLocation":"8119:8:16","nodeType":"VariableDeclaration","scope":2878,"src":"8110:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"},"typeName":{"id":2844,"nodeType":"UserDefinedTypeName","pathNode":{"id":2843,"name":"Rounding","nameLocations":["8110:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":2458,"src":"8110:8:16"},"referencedDeclaration":2458,"src":"8110:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8066:62:16"},"returnParameters":{"id":2849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2878,"src":"8152:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2847,"name":"uint256","nodeType":"ElementaryTypeName","src":"8152:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8151:9:16"},"scope":3501,"src":"8051:302:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2989,"nodeType":"Block","src":"8644:1585:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2886,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"8658:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8658:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2892,"nodeType":"IfStatement","src":"8654:45:16","trueBody":{"id":2891,"nodeType":"Block","src":"8666:33:16","statements":[{"expression":{"hexValue":"30","id":2889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8687:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2885,"id":2890,"nodeType":"Return","src":"8680:8:16"}]}},{"assignments":[2894],"declarations":[{"constant":false,"id":2894,"mutability":"mutable","name":"result","nameLocation":"9386:6:16","nodeType":"VariableDeclaration","scope":2989,"src":"9378:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2893,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2903,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9395:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2897,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"9406:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2896,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3157,3192],"referencedDeclaration":3157,"src":"9401:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9401:7:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9401:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2901,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9400:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9395:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9378:36:16"},{"id":2988,"nodeType":"UncheckedBlock","src":"9815:408:16","statements":[{"expression":{"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2904,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"9839:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2905,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"9849:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2906,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"9858:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2907,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"9862:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9858:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9849:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2910,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9848:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9873:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9848:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2914,"nodeType":"ExpressionStatement","src":"9839:35:16"},{"expression":{"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2915,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"9888:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2916,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"9898:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2917,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"9907:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2918,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"9911:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9907:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9898:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2921,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9897:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9922:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9897:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9888:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2925,"nodeType":"ExpressionStatement","src":"9888:35:16"},{"expression":{"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2926,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"9937:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2927,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"9947:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2928,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"9956:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2929,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"9960:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9956:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9947:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2932,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9946:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9971:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9937:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2936,"nodeType":"ExpressionStatement","src":"9937:35:16"},{"expression":{"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2937,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"9986:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2938,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"9996:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2939,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"10005:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2940,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"10009:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10005:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9996:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2943,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9995:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10020:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9995:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9986:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2947,"nodeType":"ExpressionStatement","src":"9986:35:16"},{"expression":{"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2948,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"10035:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2949,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"10045:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2950,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"10054:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2951,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"10058:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10054:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10045:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2954,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10044:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10069:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10044:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10035:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2958,"nodeType":"ExpressionStatement","src":"10035:35:16"},{"expression":{"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2959,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"10084:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2960,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"10094:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2961,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"10103:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2962,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"10107:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10094:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2965,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10093:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10118:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10093:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10084:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2969,"nodeType":"ExpressionStatement","src":"10084:35:16"},{"expression":{"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2970,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"10133:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2971,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"10143:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2972,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"10152:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2973,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"10156:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10152:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10143:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2976,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10142:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10142:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10133:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2980,"nodeType":"ExpressionStatement","src":"10133:35:16"},{"expression":{"arguments":[{"id":2982,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"10193:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2983,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"10201:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2984,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"10205:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10201:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2981,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"10189:3:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10189:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2885,"id":2987,"nodeType":"Return","src":"10182:30:16"}]}]},"documentation":{"id":2879,"nodeType":"StructuredDocumentation","src":"8359:223:16","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":2990,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8596:4:16","nodeType":"FunctionDefinition","parameters":{"id":2882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2881,"mutability":"mutable","name":"a","nameLocation":"8609:1:16","nodeType":"VariableDeclaration","scope":2990,"src":"8601:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2880,"name":"uint256","nodeType":"ElementaryTypeName","src":"8601:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8600:11:16"},"returnParameters":{"id":2885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2990,"src":"8635:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2883,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8634:9:16"},"scope":3501,"src":"8587:1642:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3024,"nodeType":"Block","src":"10405:164:16","statements":[{"id":3023,"nodeType":"UncheckedBlock","src":"10415:148:16","statements":[{"assignments":[3002],"declarations":[{"constant":false,"id":3002,"mutability":"mutable","name":"result","nameLocation":"10447:6:16","nodeType":"VariableDeclaration","scope":3023,"src":"10439:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3001,"name":"uint256","nodeType":"ElementaryTypeName","src":"10439:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3006,"initialValue":{"arguments":[{"id":3004,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"10461:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3003,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2990,3025],"referencedDeclaration":2990,"src":"10456:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10456:7:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10439:24:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3007,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"10484:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3009,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"10511:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"}],"id":3008,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"10494:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2458_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10494:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3011,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"10524:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3012,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"10533:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3014,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"10542:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10494:49:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10550:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10494:57:16","trueExpression":{"hexValue":"31","id":3017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10546:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3020,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10493:59:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10484:68:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3000,"id":3022,"nodeType":"Return","src":"10477:75:16"}]}]},"documentation":{"id":2991,"nodeType":"StructuredDocumentation","src":"10235:89:16","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":3025,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"10338:4:16","nodeType":"FunctionDefinition","parameters":{"id":2997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2993,"mutability":"mutable","name":"a","nameLocation":"10351:1:16","nodeType":"VariableDeclaration","scope":3025,"src":"10343:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2992,"name":"uint256","nodeType":"ElementaryTypeName","src":"10343:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2996,"mutability":"mutable","name":"rounding","nameLocation":"10363:8:16","nodeType":"VariableDeclaration","scope":3025,"src":"10354:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"},"typeName":{"id":2995,"nodeType":"UserDefinedTypeName","pathNode":{"id":2994,"name":"Rounding","nameLocations":["10354:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":2458,"src":"10354:8:16"},"referencedDeclaration":2458,"src":"10354:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10342:30:16"},"returnParameters":{"id":3000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3025,"src":"10396:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2998,"name":"uint256","nodeType":"ElementaryTypeName","src":"10396:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10395:9:16"},"scope":3501,"src":"10329:240:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3156,"nodeType":"Block","src":"10760:922:16","statements":[{"assignments":[3034],"declarations":[{"constant":false,"id":3034,"mutability":"mutable","name":"result","nameLocation":"10778:6:16","nodeType":"VariableDeclaration","scope":3156,"src":"10770:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3033,"name":"uint256","nodeType":"ElementaryTypeName","src":"10770:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3036,"initialValue":{"hexValue":"30","id":3035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10787:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10770:18:16"},{"id":3153,"nodeType":"UncheckedBlock","src":"10798:855:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3037,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"10826:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10835:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10826:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10826:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3051,"nodeType":"IfStatement","src":"10822:99:16","trueBody":{"id":3050,"nodeType":"Block","src":"10844:77:16","statements":[{"expression":{"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"10862:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10872:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10862:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3045,"nodeType":"ExpressionStatement","src":"10862:13:16"},{"expression":{"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3046,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"10893:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":3047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10893:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3049,"nodeType":"ExpressionStatement","src":"10893:13:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"10938:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10947:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10938:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10952:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10938:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3066,"nodeType":"IfStatement","src":"10934:96:16","trueBody":{"id":3065,"nodeType":"Block","src":"10955:75:16","statements":[{"expression":{"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"10973:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10983:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10973:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3060,"nodeType":"ExpressionStatement","src":"10973:12:16"},{"expression":{"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3061,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"11003:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11013:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11003:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3064,"nodeType":"ExpressionStatement","src":"11003:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"11047:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11056:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11047:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11061:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11047:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3081,"nodeType":"IfStatement","src":"11043:96:16","trueBody":{"id":3080,"nodeType":"Block","src":"11064:75:16","statements":[{"expression":{"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"11082:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11092:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11082:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3075,"nodeType":"ExpressionStatement","src":"11082:12:16"},{"expression":{"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3076,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"11112:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11122:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11112:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3079,"nodeType":"ExpressionStatement","src":"11112:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"11156:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11165:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11156:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11170:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11156:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3096,"nodeType":"IfStatement","src":"11152:96:16","trueBody":{"id":3095,"nodeType":"Block","src":"11173:75:16","statements":[{"expression":{"id":3089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"11191:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11201:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11191:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3090,"nodeType":"ExpressionStatement","src":"11191:12:16"},{"expression":{"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3091,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"11221:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11231:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11221:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3094,"nodeType":"ExpressionStatement","src":"11221:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3097,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"11265:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11274:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11265:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11278:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11265:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3111,"nodeType":"IfStatement","src":"11261:93:16","trueBody":{"id":3110,"nodeType":"Block","src":"11281:73:16","statements":[{"expression":{"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"11299:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11309:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11299:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3105,"nodeType":"ExpressionStatement","src":"11299:11:16"},{"expression":{"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3106,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"11328:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11338:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11328:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3109,"nodeType":"ExpressionStatement","src":"11328:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3112,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"11371:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":3113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11380:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11371:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11384:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11371:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3126,"nodeType":"IfStatement","src":"11367:93:16","trueBody":{"id":3125,"nodeType":"Block","src":"11387:73:16","statements":[{"expression":{"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"11405:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11415:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11405:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3120,"nodeType":"ExpressionStatement","src":"11405:11:16"},{"expression":{"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3121,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"11434:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11444:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11434:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3124,"nodeType":"ExpressionStatement","src":"11434:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"11477:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":3128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11486:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11477:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11490:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11477:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3141,"nodeType":"IfStatement","src":"11473:93:16","trueBody":{"id":3140,"nodeType":"Block","src":"11493:73:16","statements":[{"expression":{"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"11511:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":3133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11521:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11511:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3135,"nodeType":"ExpressionStatement","src":"11511:11:16"},{"expression":{"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3136,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"11540:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11550:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11540:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3139,"nodeType":"ExpressionStatement","src":"11540:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"11583:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11592:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11583:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11596:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11583:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3152,"nodeType":"IfStatement","src":"11579:64:16","trueBody":{"id":3151,"nodeType":"Block","src":"11599:44:16","statements":[{"expression":{"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3147,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"11617:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11627:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11617:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3150,"nodeType":"ExpressionStatement","src":"11617:11:16"}]}}]},{"expression":{"id":3154,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"11669:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3032,"id":3155,"nodeType":"Return","src":"11662:13:16"}]},"documentation":{"id":3026,"nodeType":"StructuredDocumentation","src":"10575:119:16","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3157,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"10708:4:16","nodeType":"FunctionDefinition","parameters":{"id":3029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3028,"mutability":"mutable","name":"value","nameLocation":"10721:5:16","nodeType":"VariableDeclaration","scope":3157,"src":"10713:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3027,"name":"uint256","nodeType":"ElementaryTypeName","src":"10713:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10712:15:16"},"returnParameters":{"id":3032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3031,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3157,"src":"10751:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3030,"name":"uint256","nodeType":"ElementaryTypeName","src":"10751:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10750:9:16"},"scope":3501,"src":"10699:983:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3191,"nodeType":"Block","src":"11915:168:16","statements":[{"id":3190,"nodeType":"UncheckedBlock","src":"11925:152:16","statements":[{"assignments":[3169],"declarations":[{"constant":false,"id":3169,"mutability":"mutable","name":"result","nameLocation":"11957:6:16","nodeType":"VariableDeclaration","scope":3190,"src":"11949:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3168,"name":"uint256","nodeType":"ElementaryTypeName","src":"11949:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3173,"initialValue":{"arguments":[{"id":3171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"11971:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3170,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3157,3192],"referencedDeclaration":3157,"src":"11966:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11966:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11949:28:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3174,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"11998:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3176,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"12025:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"}],"id":3175,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"12008:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2458_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12008:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3179,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"12043:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"12052:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12008:49:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12008:57:16","trueExpression":{"hexValue":"31","id":3184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12060:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3187,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12007:59:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11998:68:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3167,"id":3189,"nodeType":"Return","src":"11991:75:16"}]}]},"documentation":{"id":3158,"nodeType":"StructuredDocumentation","src":"11688:142:16","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3192,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"11844:4:16","nodeType":"FunctionDefinition","parameters":{"id":3164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3160,"mutability":"mutable","name":"value","nameLocation":"11857:5:16","nodeType":"VariableDeclaration","scope":3192,"src":"11849:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3159,"name":"uint256","nodeType":"ElementaryTypeName","src":"11849:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3163,"mutability":"mutable","name":"rounding","nameLocation":"11873:8:16","nodeType":"VariableDeclaration","scope":3192,"src":"11864:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"},"typeName":{"id":3162,"nodeType":"UserDefinedTypeName","pathNode":{"id":3161,"name":"Rounding","nameLocations":["11864:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":2458,"src":"11864:8:16"},"referencedDeclaration":2458,"src":"11864:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11848:34:16"},"returnParameters":{"id":3167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3192,"src":"11906:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3165,"name":"uint256","nodeType":"ElementaryTypeName","src":"11906:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11905:9:16"},"scope":3501,"src":"11835:248:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3320,"nodeType":"Block","src":"12276:854:16","statements":[{"assignments":[3201],"declarations":[{"constant":false,"id":3201,"mutability":"mutable","name":"result","nameLocation":"12294:6:16","nodeType":"VariableDeclaration","scope":3320,"src":"12286:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3200,"name":"uint256","nodeType":"ElementaryTypeName","src":"12286:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3203,"initialValue":{"hexValue":"30","id":3202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12303:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12286:18:16"},{"id":3317,"nodeType":"UncheckedBlock","src":"12314:787:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"12342:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12351:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12351:8:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12342:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3220,"nodeType":"IfStatement","src":"12338:103:16","trueBody":{"id":3219,"nodeType":"Block","src":"12361:80:16","statements":[{"expression":{"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3209,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"12379:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12388:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12394:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12388:8:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12379:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3214,"nodeType":"ExpressionStatement","src":"12379:17:16"},{"expression":{"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3215,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"12414:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12424:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12414:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3218,"nodeType":"ExpressionStatement","src":"12414:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"12458:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12467:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12473:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12467:8:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12458:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3237,"nodeType":"IfStatement","src":"12454:103:16","trueBody":{"id":3236,"nodeType":"Block","src":"12477:80:16","statements":[{"expression":{"id":3230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"12495:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12504:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12510:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12504:8:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12495:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3231,"nodeType":"ExpressionStatement","src":"12495:17:16"},{"expression":{"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3232,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"12530:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12540:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12530:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3235,"nodeType":"ExpressionStatement","src":"12530:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"12574:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12583:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12589:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12583:8:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12574:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3254,"nodeType":"IfStatement","src":"12570:103:16","trueBody":{"id":3253,"nodeType":"Block","src":"12593:80:16","statements":[{"expression":{"id":3247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"12611:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12620:8:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12611:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3248,"nodeType":"ExpressionStatement","src":"12611:17:16"},{"expression":{"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3249,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"12646:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12656:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12646:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3252,"nodeType":"ExpressionStatement","src":"12646:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"12690:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12699:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12705:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12699:7:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12690:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3271,"nodeType":"IfStatement","src":"12686:100:16","trueBody":{"id":3270,"nodeType":"Block","src":"12708:78:16","statements":[{"expression":{"id":3264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"12726:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12735:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12735:7:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12726:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3265,"nodeType":"ExpressionStatement","src":"12726:16:16"},{"expression":{"id":3268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3266,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"12760:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12760:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3269,"nodeType":"ExpressionStatement","src":"12760:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"12803:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12812:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12818:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12812:7:16","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12803:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3288,"nodeType":"IfStatement","src":"12799:100:16","trueBody":{"id":3287,"nodeType":"Block","src":"12821:78:16","statements":[{"expression":{"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3277,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"12839:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12848:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12854:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12848:7:16","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12839:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3282,"nodeType":"ExpressionStatement","src":"12839:16:16"},{"expression":{"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3283,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"12873:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12883:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12873:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3286,"nodeType":"ExpressionStatement","src":"12873:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3289,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"12916:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12925:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12931:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12925:7:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12916:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3305,"nodeType":"IfStatement","src":"12912:100:16","trueBody":{"id":3304,"nodeType":"Block","src":"12934:78:16","statements":[{"expression":{"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3294,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"12952:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12961:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12967:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12961:7:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12952:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3299,"nodeType":"ExpressionStatement","src":"12952:16:16"},{"expression":{"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3300,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"12986:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12996:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12986:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3303,"nodeType":"ExpressionStatement","src":"12986:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"13029:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13038:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13044:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13038:7:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"13029:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3316,"nodeType":"IfStatement","src":"13025:66:16","trueBody":{"id":3315,"nodeType":"Block","src":"13047:44:16","statements":[{"expression":{"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3311,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"13065:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13075:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13065:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3314,"nodeType":"ExpressionStatement","src":"13065:11:16"}]}}]},{"expression":{"id":3318,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"13117:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3199,"id":3319,"nodeType":"Return","src":"13110:13:16"}]},"documentation":{"id":3193,"nodeType":"StructuredDocumentation","src":"12089:120:16","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3321,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"12223:5:16","nodeType":"FunctionDefinition","parameters":{"id":3196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3195,"mutability":"mutable","name":"value","nameLocation":"12237:5:16","nodeType":"VariableDeclaration","scope":3321,"src":"12229:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3194,"name":"uint256","nodeType":"ElementaryTypeName","src":"12229:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12228:15:16"},"returnParameters":{"id":3199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3321,"src":"12267:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3197,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12266:9:16"},"scope":3501,"src":"12214:916:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3355,"nodeType":"Block","src":"13365:170:16","statements":[{"id":3354,"nodeType":"UncheckedBlock","src":"13375:154:16","statements":[{"assignments":[3333],"declarations":[{"constant":false,"id":3333,"mutability":"mutable","name":"result","nameLocation":"13407:6:16","nodeType":"VariableDeclaration","scope":3354,"src":"13399:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3332,"name":"uint256","nodeType":"ElementaryTypeName","src":"13399:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3337,"initialValue":{"arguments":[{"id":3335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"13422:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3334,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3321,3356],"referencedDeclaration":3321,"src":"13416:5:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13399:29:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3338,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"13449:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3340,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"13476:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"}],"id":3339,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"13459:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2458_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13459:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13489:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3343,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"13495:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"13504:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13459:50:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13516:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13459:58:16","trueExpression":{"hexValue":"31","id":3348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13512:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3351,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13458:60:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13449:69:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3331,"id":3353,"nodeType":"Return","src":"13442:76:16"}]}]},"documentation":{"id":3322,"nodeType":"StructuredDocumentation","src":"13136:143:16","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3356,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"13293:5:16","nodeType":"FunctionDefinition","parameters":{"id":3328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3324,"mutability":"mutable","name":"value","nameLocation":"13307:5:16","nodeType":"VariableDeclaration","scope":3356,"src":"13299:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3323,"name":"uint256","nodeType":"ElementaryTypeName","src":"13299:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3327,"mutability":"mutable","name":"rounding","nameLocation":"13323:8:16","nodeType":"VariableDeclaration","scope":3356,"src":"13314:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"},"typeName":{"id":3326,"nodeType":"UserDefinedTypeName","pathNode":{"id":3325,"name":"Rounding","nameLocations":["13314:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":2458,"src":"13314:8:16"},"referencedDeclaration":2458,"src":"13314:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"13298:34:16"},"returnParameters":{"id":3331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3356,"src":"13356:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3329,"name":"uint256","nodeType":"ElementaryTypeName","src":"13356:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13355:9:16"},"scope":3501,"src":"13284:251:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3442,"nodeType":"Block","src":"13855:600:16","statements":[{"assignments":[3365],"declarations":[{"constant":false,"id":3365,"mutability":"mutable","name":"result","nameLocation":"13873:6:16","nodeType":"VariableDeclaration","scope":3442,"src":"13865:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3364,"name":"uint256","nodeType":"ElementaryTypeName","src":"13865:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3367,"initialValue":{"hexValue":"30","id":3366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13882:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13865:18:16"},{"id":3439,"nodeType":"UncheckedBlock","src":"13893:533:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"13921:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13930:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13921:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13936:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13921:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3382,"nodeType":"IfStatement","src":"13917:98:16","trueBody":{"id":3381,"nodeType":"Block","src":"13939:76:16","statements":[{"expression":{"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"13957:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13967:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13957:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3376,"nodeType":"ExpressionStatement","src":"13957:13:16"},{"expression":{"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3377,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"13988:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13998:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13988:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3380,"nodeType":"ExpressionStatement","src":"13988:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"14032:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14041:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14032:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14046:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14032:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3397,"nodeType":"IfStatement","src":"14028:95:16","trueBody":{"id":3396,"nodeType":"Block","src":"14049:74:16","statements":[{"expression":{"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"14067:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14077:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14067:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3391,"nodeType":"ExpressionStatement","src":"14067:12:16"},{"expression":{"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3392,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"14097:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14107:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14097:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3395,"nodeType":"ExpressionStatement","src":"14097:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"14140:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14149:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14140:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14154:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14140:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3412,"nodeType":"IfStatement","src":"14136:95:16","trueBody":{"id":3411,"nodeType":"Block","src":"14157:74:16","statements":[{"expression":{"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"14175:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14185:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14175:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3406,"nodeType":"ExpressionStatement","src":"14175:12:16"},{"expression":{"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3407,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"14205:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14215:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14205:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3410,"nodeType":"ExpressionStatement","src":"14205:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"14248:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14257:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14248:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14262:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14248:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3427,"nodeType":"IfStatement","src":"14244:95:16","trueBody":{"id":3426,"nodeType":"Block","src":"14265:74:16","statements":[{"expression":{"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"14283:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14293:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14283:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3421,"nodeType":"ExpressionStatement","src":"14283:12:16"},{"expression":{"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3422,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"14313:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14323:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14313:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3425,"nodeType":"ExpressionStatement","src":"14313:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"14356:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14365:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14356:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14369:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14356:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3438,"nodeType":"IfStatement","src":"14352:64:16","trueBody":{"id":3437,"nodeType":"Block","src":"14372:44:16","statements":[{"expression":{"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3433,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"14390:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14400:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14390:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3436,"nodeType":"ExpressionStatement","src":"14390:11:16"}]}}]},{"expression":{"id":3440,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"14442:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3363,"id":3441,"nodeType":"Return","src":"14435:13:16"}]},"documentation":{"id":3357,"nodeType":"StructuredDocumentation","src":"13541:246:16","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3443,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"13801:6:16","nodeType":"FunctionDefinition","parameters":{"id":3360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3359,"mutability":"mutable","name":"value","nameLocation":"13816:5:16","nodeType":"VariableDeclaration","scope":3443,"src":"13808:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3358,"name":"uint256","nodeType":"ElementaryTypeName","src":"13808:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13807:15:16"},"returnParameters":{"id":3363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3362,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3443,"src":"13846:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3361,"name":"uint256","nodeType":"ElementaryTypeName","src":"13846:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13845:9:16"},"scope":3501,"src":"13792:663:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3480,"nodeType":"Block","src":"14692:177:16","statements":[{"id":3479,"nodeType":"UncheckedBlock","src":"14702:161:16","statements":[{"assignments":[3455],"declarations":[{"constant":false,"id":3455,"mutability":"mutable","name":"result","nameLocation":"14734:6:16","nodeType":"VariableDeclaration","scope":3479,"src":"14726:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3454,"name":"uint256","nodeType":"ElementaryTypeName","src":"14726:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3459,"initialValue":{"arguments":[{"id":3457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"14750:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3456,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3443,3481],"referencedDeclaration":3443,"src":"14743:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14743:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14726:30:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3460,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3455,"src":"14777:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3462,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"14804:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"}],"id":3461,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"14787:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2458_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14787:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14817:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3465,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3455,"src":"14823:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14833:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"14823:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3468,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14822:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"14838:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14787:56:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14850:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14787:64:16","trueExpression":{"hexValue":"31","id":3473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14846:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3476,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14786:66:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14777:75:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3453,"id":3478,"nodeType":"Return","src":"14770:82:16"}]}]},"documentation":{"id":3444,"nodeType":"StructuredDocumentation","src":"14461:144:16","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3481,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"14619:6:16","nodeType":"FunctionDefinition","parameters":{"id":3450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3446,"mutability":"mutable","name":"value","nameLocation":"14634:5:16","nodeType":"VariableDeclaration","scope":3481,"src":"14626:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3445,"name":"uint256","nodeType":"ElementaryTypeName","src":"14626:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3449,"mutability":"mutable","name":"rounding","nameLocation":"14650:8:16","nodeType":"VariableDeclaration","scope":3481,"src":"14641:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"},"typeName":{"id":3448,"nodeType":"UserDefinedTypeName","pathNode":{"id":3447,"name":"Rounding","nameLocations":["14641:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":2458,"src":"14641:8:16"},"referencedDeclaration":2458,"src":"14641:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"14625:34:16"},"returnParameters":{"id":3453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3452,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3481,"src":"14683:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3451,"name":"uint256","nodeType":"ElementaryTypeName","src":"14683:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14682:9:16"},"scope":3501,"src":"14610:259:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3499,"nodeType":"Block","src":"15067:48:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3492,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"15090:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"}],"id":3491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15084:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3490,"name":"uint8","nodeType":"ElementaryTypeName","src":"15084:5:16","typeDescriptions":{}}},"id":3493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15084:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":3494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15102:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15084:19:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":3496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15107:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15084:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3489,"id":3498,"nodeType":"Return","src":"15077:31:16"}]},"documentation":{"id":3482,"nodeType":"StructuredDocumentation","src":"14875:113:16","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":3500,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"15002:16:16","nodeType":"FunctionDefinition","parameters":{"id":3486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3485,"mutability":"mutable","name":"rounding","nameLocation":"15028:8:16","nodeType":"VariableDeclaration","scope":3500,"src":"15019:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"},"typeName":{"id":3484,"nodeType":"UserDefinedTypeName","pathNode":{"id":3483,"name":"Rounding","nameLocations":["15019:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":2458,"src":"15019:8:16"},"referencedDeclaration":2458,"src":"15019:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2458","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"15018:19:16"},"returnParameters":{"id":3489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3500,"src":"15061:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3487,"name":"bool","nodeType":"ElementaryTypeName","src":"15061:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15060:6:16"},"scope":3501,"src":"14993:122:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3502,"src":"203:14914:16","usedErrors":[2453],"usedEvents":[]}],"src":"103:15015:16"},"id":16},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[3606]},"id":3607,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3503,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":3504,"nodeType":"StructuredDocumentation","src":"135:80:17","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3606,"linearizedBaseContracts":[3606],"name":"SignedMath","nameLocation":"224:10:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":3521,"nodeType":"Block","src":"376:37:17","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3514,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"393:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3515,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"397:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"393:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3518,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"405:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"393:13:17","trueExpression":{"id":3517,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"401:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3513,"id":3520,"nodeType":"Return","src":"386:20:17"}]},"documentation":{"id":3505,"nodeType":"StructuredDocumentation","src":"241:66:17","text":" @dev Returns the largest of two signed numbers."},"id":3522,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"321:3:17","nodeType":"FunctionDefinition","parameters":{"id":3510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3507,"mutability":"mutable","name":"a","nameLocation":"332:1:17","nodeType":"VariableDeclaration","scope":3522,"src":"325:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3506,"name":"int256","nodeType":"ElementaryTypeName","src":"325:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3509,"mutability":"mutable","name":"b","nameLocation":"342:1:17","nodeType":"VariableDeclaration","scope":3522,"src":"335:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3508,"name":"int256","nodeType":"ElementaryTypeName","src":"335:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"324:20:17"},"returnParameters":{"id":3513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3512,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3522,"src":"368:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3511,"name":"int256","nodeType":"ElementaryTypeName","src":"368:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"367:8:17"},"scope":3606,"src":"312:101:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3539,"nodeType":"Block","src":"555:37:17","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3532,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"572:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3533,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"576:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"572:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3536,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"584:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"572:13:17","trueExpression":{"id":3535,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"580:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3531,"id":3538,"nodeType":"Return","src":"565:20:17"}]},"documentation":{"id":3523,"nodeType":"StructuredDocumentation","src":"419:67:17","text":" @dev Returns the smallest of two signed numbers."},"id":3540,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"500:3:17","nodeType":"FunctionDefinition","parameters":{"id":3528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3525,"mutability":"mutable","name":"a","nameLocation":"511:1:17","nodeType":"VariableDeclaration","scope":3540,"src":"504:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3524,"name":"int256","nodeType":"ElementaryTypeName","src":"504:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3527,"mutability":"mutable","name":"b","nameLocation":"521:1:17","nodeType":"VariableDeclaration","scope":3540,"src":"514:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3526,"name":"int256","nodeType":"ElementaryTypeName","src":"514:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"503:20:17"},"returnParameters":{"id":3531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3540,"src":"547:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3529,"name":"int256","nodeType":"ElementaryTypeName","src":"547:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"546:8:17"},"scope":3606,"src":"491:101:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3583,"nodeType":"Block","src":"797:162:17","statements":[{"assignments":[3551],"declarations":[{"constant":false,"id":3551,"mutability":"mutable","name":"x","nameLocation":"866:1:17","nodeType":"VariableDeclaration","scope":3583,"src":"859:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3550,"name":"int256","nodeType":"ElementaryTypeName","src":"859:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3564,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3552,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3543,"src":"871:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3553,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"875:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"871:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3555,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"870:7:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3556,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3543,"src":"882:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3557,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"886:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"882:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3559,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"881:7:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"892:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"881:12:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3562,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:14:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:24:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"859:35:17"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3565,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3551,"src":"911:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3570,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3551,"src":"931:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"923:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3568,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:17","typeDescriptions":{}}},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"923:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"937:3:17","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"923:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"916:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3566,"name":"int256","nodeType":"ElementaryTypeName","src":"916:6:17","typeDescriptions":{}}},"id":3574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3575,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3543,"src":"945:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3576,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"949:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"945:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3578,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"944:7:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"916:35:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3580,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"915:37:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"911:41:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3549,"id":3582,"nodeType":"Return","src":"904:48:17"}]},"documentation":{"id":3541,"nodeType":"StructuredDocumentation","src":"598:126:17","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":3584,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"738:7:17","nodeType":"FunctionDefinition","parameters":{"id":3546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3543,"mutability":"mutable","name":"a","nameLocation":"753:1:17","nodeType":"VariableDeclaration","scope":3584,"src":"746:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3542,"name":"int256","nodeType":"ElementaryTypeName","src":"746:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3545,"mutability":"mutable","name":"b","nameLocation":"763:1:17","nodeType":"VariableDeclaration","scope":3584,"src":"756:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3544,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"745:20:17"},"returnParameters":{"id":3549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3584,"src":"789:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3547,"name":"int256","nodeType":"ElementaryTypeName","src":"789:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"788:8:17"},"scope":3606,"src":"729:230:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3604,"nodeType":"Block","src":"1103:158:17","statements":[{"id":3603,"nodeType":"UncheckedBlock","src":"1113:142:17","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3594,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"1228:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":3595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1233:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1228:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1241:2:17","subExpression":{"id":3598,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"1242:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1228:15:17","trueExpression":{"id":3597,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"1237:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1220:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3592,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:17","typeDescriptions":{}}},"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1220:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3591,"id":3602,"nodeType":"Return","src":"1213:31:17"}]}]},"documentation":{"id":3585,"nodeType":"StructuredDocumentation","src":"965:78:17","text":" @dev Returns the absolute unsigned value of a signed value."},"id":3605,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1057:3:17","nodeType":"FunctionDefinition","parameters":{"id":3588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3587,"mutability":"mutable","name":"n","nameLocation":"1068:1:17","nodeType":"VariableDeclaration","scope":3605,"src":"1061:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3586,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1060:10:17"},"returnParameters":{"id":3591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3605,"src":"1094:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3589,"name":"uint256","nodeType":"ElementaryTypeName","src":"1094:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1093:9:17"},"scope":3606,"src":"1048:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3607,"src":"216:1047:17","usedErrors":[],"usedEvents":[]}],"src":"109:1155:17"},"id":17},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[4219]},"id":4220,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3608,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"205:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSet","contractDependencies":[],"contractKind":"library","documentation":{"id":3609,"nodeType":"StructuredDocumentation","src":"231:1098:18","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":4219,"linearizedBaseContracts":[4219],"name":"EnumerableSet","nameLocation":"1338:13:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":3617,"members":[{"constant":false,"id":3612,"mutability":"mutable","name":"_values","nameLocation":"1862:7:18","nodeType":"VariableDeclaration","scope":3617,"src":"1852:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3610,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1852:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3611,"nodeType":"ArrayTypeName","src":"1852:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3616,"mutability":"mutable","name":"_positions","nameLocation":"2054:10:18","nodeType":"VariableDeclaration","scope":3617,"src":"2020:44:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":3615,"keyName":"value","keyNameLocation":"2036:5:18","keyType":{"id":3613,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2028:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2020:33:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3614,"name":"uint256","nodeType":"ElementaryTypeName","src":"2045:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1805:3:18","nodeType":"StructDefinition","scope":4219,"src":"1798:273:18","visibility":"public"},{"body":{"id":3658,"nodeType":"Block","src":"2310:337:18","statements":[{"condition":{"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2324:22:18","subExpression":{"arguments":[{"id":3629,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"2335:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":3630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"2340:5:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3628,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"2325:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3617_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2325:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3656,"nodeType":"Block","src":"2604:37:18","statements":[{"expression":{"hexValue":"66616c7365","id":3654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2625:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3627,"id":3655,"nodeType":"Return","src":"2618:12:18"}]},"id":3657,"nodeType":"IfStatement","src":"2320:321:18","trueBody":{"id":3653,"nodeType":"Block","src":"2348:250:18","statements":[{"expression":{"arguments":[{"id":3638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"2379:5:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":3633,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"2362:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3636,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2366:7:18","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3612,"src":"2362:11:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:4:18","memberName":"push","nodeType":"MemberAccess","src":"2362:16:18","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2362:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3640,"nodeType":"ExpressionStatement","src":"2362:23:18"},{"expression":{"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3641,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"2520:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3644,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2524:10:18","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":3616,"src":"2520:14:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3645,"indexExpression":{"id":3643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"2535:5:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2520:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":3646,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"2544:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3647,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2548:7:18","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3612,"src":"2544:11:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2556:6:18","memberName":"length","nodeType":"MemberAccess","src":"2544:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2520:42:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3650,"nodeType":"ExpressionStatement","src":"2520:42:18"},{"expression":{"hexValue":"74727565","id":3651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2583:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3627,"id":3652,"nodeType":"Return","src":"2576:11:18"}]}}]},"documentation":{"id":3618,"nodeType":"StructuredDocumentation","src":"2077:159:18","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":3659,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2250:4:18","nodeType":"FunctionDefinition","parameters":{"id":3624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3621,"mutability":"mutable","name":"set","nameLocation":"2267:3:18","nodeType":"VariableDeclaration","scope":3659,"src":"2255:15:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3620,"nodeType":"UserDefinedTypeName","pathNode":{"id":3619,"name":"Set","nameLocations":["2255:3:18"],"nodeType":"IdentifierPath","referencedDeclaration":3617,"src":"2255:3:18"},"referencedDeclaration":3617,"src":"2255:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":3623,"mutability":"mutable","name":"value","nameLocation":"2280:5:18","nodeType":"VariableDeclaration","scope":3659,"src":"2272:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3622,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2272:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2254:32:18"},"returnParameters":{"id":3627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3626,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3659,"src":"2304:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3625,"name":"bool","nodeType":"ElementaryTypeName","src":"2304:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2303:6:18"},"scope":4219,"src":"2241:406:18","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3742,"nodeType":"Block","src":"2887:1296:18","statements":[{"assignments":[3671],"declarations":[{"constant":false,"id":3671,"mutability":"mutable","name":"position","nameLocation":"2999:8:18","nodeType":"VariableDeclaration","scope":3742,"src":"2991:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3670,"name":"uint256","nodeType":"ElementaryTypeName","src":"2991:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3676,"initialValue":{"baseExpression":{"expression":{"id":3672,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"3010:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3673,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3014:10:18","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":3616,"src":"3010:14:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3675,"indexExpression":{"id":3674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"3025:5:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3010:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2991:40:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3677,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"3046:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3058:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3046:13:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3740,"nodeType":"Block","src":"4140:37:18","statements":[{"expression":{"hexValue":"66616c7365","id":3738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4161:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3669,"id":3739,"nodeType":"Return","src":"4154:12:18"}]},"id":3741,"nodeType":"IfStatement","src":"3042:1135:18","trueBody":{"id":3737,"nodeType":"Block","src":"3061:1073:18","statements":[{"assignments":[3681],"declarations":[{"constant":false,"id":3681,"mutability":"mutable","name":"valueIndex","nameLocation":"3421:10:18","nodeType":"VariableDeclaration","scope":3737,"src":"3413:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3680,"name":"uint256","nodeType":"ElementaryTypeName","src":"3413:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3685,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3682,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"3434:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3445:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3434:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3413:33:18"},{"assignments":[3687],"declarations":[{"constant":false,"id":3687,"mutability":"mutable","name":"lastIndex","nameLocation":"3468:9:18","nodeType":"VariableDeclaration","scope":3737,"src":"3460:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3686,"name":"uint256","nodeType":"ElementaryTypeName","src":"3460:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3693,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3688,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"3480:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3689,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3484:7:18","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3612,"src":"3480:11:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3492:6:18","memberName":"length","nodeType":"MemberAccess","src":"3480:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3501:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3480:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3460:42:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3694,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"3521:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3695,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"3535:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3521:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3721,"nodeType":"IfStatement","src":"3517:378:18","trueBody":{"id":3720,"nodeType":"Block","src":"3546:349:18","statements":[{"assignments":[3698],"declarations":[{"constant":false,"id":3698,"mutability":"mutable","name":"lastValue","nameLocation":"3572:9:18","nodeType":"VariableDeclaration","scope":3720,"src":"3564:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3697,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3564:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3703,"initialValue":{"baseExpression":{"expression":{"id":3699,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"3584:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3700,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3588:7:18","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3612,"src":"3584:11:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3702,"indexExpression":{"id":3701,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"3596:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3584:22:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3564:42:18"},{"expression":{"id":3710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3704,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"3705:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3707,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3709:7:18","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3612,"src":"3705:11:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3708,"indexExpression":{"id":3706,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"3717:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3705:23:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3709,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"3731:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3705:35:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3711,"nodeType":"ExpressionStatement","src":"3705:35:18"},{"expression":{"id":3718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3712,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"3844:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3715,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3848:10:18","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":3616,"src":"3844:14:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3716,"indexExpression":{"id":3714,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"3859:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3844:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3717,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"3872:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3844:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3719,"nodeType":"ExpressionStatement","src":"3844:36:18"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":3722,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"3973:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3725,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3977:7:18","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3612,"src":"3973:11:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3985:3:18","memberName":"pop","nodeType":"MemberAccess","src":"3973:15:18","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":3727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3973:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3728,"nodeType":"ExpressionStatement","src":"3973:17:18"},{"expression":{"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4069:28:18","subExpression":{"baseExpression":{"expression":{"id":3729,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"4076:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3730,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4080:10:18","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":3616,"src":"4076:14:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3732,"indexExpression":{"id":3731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"4091:5:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4076:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3734,"nodeType":"ExpressionStatement","src":"4069:28:18"},{"expression":{"hexValue":"74727565","id":3735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4119:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3669,"id":3736,"nodeType":"Return","src":"4112:11:18"}]}}]},"documentation":{"id":3660,"nodeType":"StructuredDocumentation","src":"2653:157:18","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":3743,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2824:7:18","nodeType":"FunctionDefinition","parameters":{"id":3666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3663,"mutability":"mutable","name":"set","nameLocation":"2844:3:18","nodeType":"VariableDeclaration","scope":3743,"src":"2832:15:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3662,"nodeType":"UserDefinedTypeName","pathNode":{"id":3661,"name":"Set","nameLocations":["2832:3:18"],"nodeType":"IdentifierPath","referencedDeclaration":3617,"src":"2832:3:18"},"referencedDeclaration":3617,"src":"2832:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":3665,"mutability":"mutable","name":"value","nameLocation":"2857:5:18","nodeType":"VariableDeclaration","scope":3743,"src":"2849:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3664,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2849:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2831:32:18"},"returnParameters":{"id":3669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3743,"src":"2881:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3667,"name":"bool","nodeType":"ElementaryTypeName","src":"2881:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2880:6:18"},"scope":4219,"src":"2815:1368:18","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3761,"nodeType":"Block","src":"4343:50:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":3754,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"4360:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3755,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4364:10:18","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":3616,"src":"4360:14:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3757,"indexExpression":{"id":3756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3749,"src":"4375:5:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4360:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4385:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4360:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3753,"id":3760,"nodeType":"Return","src":"4353:33:18"}]},"documentation":{"id":3744,"nodeType":"StructuredDocumentation","src":"4189:70:18","text":" @dev Returns true if the value is in the set. O(1)."},"id":3762,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4273:9:18","nodeType":"FunctionDefinition","parameters":{"id":3750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3747,"mutability":"mutable","name":"set","nameLocation":"4295:3:18","nodeType":"VariableDeclaration","scope":3762,"src":"4283:15:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3746,"nodeType":"UserDefinedTypeName","pathNode":{"id":3745,"name":"Set","nameLocations":["4283:3:18"],"nodeType":"IdentifierPath","referencedDeclaration":3617,"src":"4283:3:18"},"referencedDeclaration":3617,"src":"4283:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":3749,"mutability":"mutable","name":"value","nameLocation":"4308:5:18","nodeType":"VariableDeclaration","scope":3762,"src":"4300:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3748,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4300:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4282:32:18"},"returnParameters":{"id":3753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3762,"src":"4337:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3751,"name":"bool","nodeType":"ElementaryTypeName","src":"4337:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4336:6:18"},"scope":4219,"src":"4264:129:18","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3775,"nodeType":"Block","src":"4539:42:18","statements":[{"expression":{"expression":{"expression":{"id":3771,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3766,"src":"4556:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3772,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4560:7:18","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3612,"src":"4556:11:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4568:6:18","memberName":"length","nodeType":"MemberAccess","src":"4556:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3770,"id":3774,"nodeType":"Return","src":"4549:25:18"}]},"documentation":{"id":3763,"nodeType":"StructuredDocumentation","src":"4399:70:18","text":" @dev Returns the number of values on the set. O(1)."},"id":3776,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4483:7:18","nodeType":"FunctionDefinition","parameters":{"id":3767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3766,"mutability":"mutable","name":"set","nameLocation":"4503:3:18","nodeType":"VariableDeclaration","scope":3776,"src":"4491:15:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3765,"nodeType":"UserDefinedTypeName","pathNode":{"id":3764,"name":"Set","nameLocations":["4491:3:18"],"nodeType":"IdentifierPath","referencedDeclaration":3617,"src":"4491:3:18"},"referencedDeclaration":3617,"src":"4491:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4490:17:18"},"returnParameters":{"id":3770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3776,"src":"4530:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3768,"name":"uint256","nodeType":"ElementaryTypeName","src":"4530:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4529:9:18"},"scope":4219,"src":"4474:107:18","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3792,"nodeType":"Block","src":"4999:42:18","statements":[{"expression":{"baseExpression":{"expression":{"id":3787,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"5016:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3788,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5020:7:18","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3612,"src":"5016:11:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3790,"indexExpression":{"id":3789,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"5028:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5016:18:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3786,"id":3791,"nodeType":"Return","src":"5009:25:18"}]},"documentation":{"id":3777,"nodeType":"StructuredDocumentation","src":"4587:331:18","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3793,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4932:3:18","nodeType":"FunctionDefinition","parameters":{"id":3783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3780,"mutability":"mutable","name":"set","nameLocation":"4948:3:18","nodeType":"VariableDeclaration","scope":3793,"src":"4936:15:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3779,"nodeType":"UserDefinedTypeName","pathNode":{"id":3778,"name":"Set","nameLocations":["4936:3:18"],"nodeType":"IdentifierPath","referencedDeclaration":3617,"src":"4936:3:18"},"referencedDeclaration":3617,"src":"4936:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":3782,"mutability":"mutable","name":"index","nameLocation":"4961:5:18","nodeType":"VariableDeclaration","scope":3793,"src":"4953:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3781,"name":"uint256","nodeType":"ElementaryTypeName","src":"4953:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4935:32:18"},"returnParameters":{"id":3786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3793,"src":"4990:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3784,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4990:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4989:9:18"},"scope":4219,"src":"4923:118:18","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3806,"nodeType":"Block","src":"5655:35:18","statements":[{"expression":{"expression":{"id":3803,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"5672:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3804,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5676:7:18","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3612,"src":"5672:11:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":3802,"id":3805,"nodeType":"Return","src":"5665:18:18"}]},"documentation":{"id":3794,"nodeType":"StructuredDocumentation","src":"5047:529:18","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":3807,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5590:7:18","nodeType":"FunctionDefinition","parameters":{"id":3798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3797,"mutability":"mutable","name":"set","nameLocation":"5610:3:18","nodeType":"VariableDeclaration","scope":3807,"src":"5598:15:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3796,"nodeType":"UserDefinedTypeName","pathNode":{"id":3795,"name":"Set","nameLocations":["5598:3:18"],"nodeType":"IdentifierPath","referencedDeclaration":3617,"src":"5598:3:18"},"referencedDeclaration":3617,"src":"5598:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5597:17:18"},"returnParameters":{"id":3802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3801,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3807,"src":"5637:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3799,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5637:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3800,"nodeType":"ArrayTypeName","src":"5637:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5636:18:18"},"scope":4219,"src":"5581:109:18","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":3811,"members":[{"constant":false,"id":3810,"mutability":"mutable","name":"_inner","nameLocation":"5747:6:18","nodeType":"VariableDeclaration","scope":3811,"src":"5743:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3809,"nodeType":"UserDefinedTypeName","pathNode":{"id":3808,"name":"Set","nameLocations":["5743:3:18"],"nodeType":"IdentifierPath","referencedDeclaration":3617,"src":"5743:3:18"},"referencedDeclaration":3617,"src":"5743:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5722:10:18","nodeType":"StructDefinition","scope":4219,"src":"5715:45:18","visibility":"public"},{"body":{"id":3828,"nodeType":"Block","src":"6006:47:18","statements":[{"expression":{"arguments":[{"expression":{"id":3823,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"6028:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3811_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3824,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6032:6:18","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3810,"src":"6028:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3817,"src":"6040:5:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3822,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"6023:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3617_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6023:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3821,"id":3827,"nodeType":"Return","src":"6016:30:18"}]},"documentation":{"id":3812,"nodeType":"StructuredDocumentation","src":"5766:159:18","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":3829,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5939:3:18","nodeType":"FunctionDefinition","parameters":{"id":3818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3815,"mutability":"mutable","name":"set","nameLocation":"5962:3:18","nodeType":"VariableDeclaration","scope":3829,"src":"5943:22:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3811_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3814,"nodeType":"UserDefinedTypeName","pathNode":{"id":3813,"name":"Bytes32Set","nameLocations":["5943:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":3811,"src":"5943:10:18"},"referencedDeclaration":3811,"src":"5943:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3811_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3817,"mutability":"mutable","name":"value","nameLocation":"5975:5:18","nodeType":"VariableDeclaration","scope":3829,"src":"5967:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3816,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5967:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5942:39:18"},"returnParameters":{"id":3821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3829,"src":"6000:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3819,"name":"bool","nodeType":"ElementaryTypeName","src":"6000:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5999:6:18"},"scope":4219,"src":"5930:123:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3846,"nodeType":"Block","src":"6300:50:18","statements":[{"expression":{"arguments":[{"expression":{"id":3841,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3833,"src":"6325:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3811_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3842,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6329:6:18","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3810,"src":"6325:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"6337:5:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3840,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"6317:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3617_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6317:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3839,"id":3845,"nodeType":"Return","src":"6310:33:18"}]},"documentation":{"id":3830,"nodeType":"StructuredDocumentation","src":"6059:157:18","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":3847,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6230:6:18","nodeType":"FunctionDefinition","parameters":{"id":3836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3833,"mutability":"mutable","name":"set","nameLocation":"6256:3:18","nodeType":"VariableDeclaration","scope":3847,"src":"6237:22:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3811_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3832,"nodeType":"UserDefinedTypeName","pathNode":{"id":3831,"name":"Bytes32Set","nameLocations":["6237:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":3811,"src":"6237:10:18"},"referencedDeclaration":3811,"src":"6237:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3811_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3835,"mutability":"mutable","name":"value","nameLocation":"6269:5:18","nodeType":"VariableDeclaration","scope":3847,"src":"6261:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3834,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6261:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6236:39:18"},"returnParameters":{"id":3839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3838,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3847,"src":"6294:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3837,"name":"bool","nodeType":"ElementaryTypeName","src":"6294:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6293:6:18"},"scope":4219,"src":"6221:129:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3864,"nodeType":"Block","src":"6517:52:18","statements":[{"expression":{"arguments":[{"expression":{"id":3859,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"6544:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3811_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3860,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6548:6:18","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3810,"src":"6544:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"6556:5:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3858,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"6534:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3617_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":3862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6534:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3857,"id":3863,"nodeType":"Return","src":"6527:35:18"}]},"documentation":{"id":3848,"nodeType":"StructuredDocumentation","src":"6356:70:18","text":" @dev Returns true if the value is in the set. O(1)."},"id":3865,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6440:8:18","nodeType":"FunctionDefinition","parameters":{"id":3854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3851,"mutability":"mutable","name":"set","nameLocation":"6468:3:18","nodeType":"VariableDeclaration","scope":3865,"src":"6449:22:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3811_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3850,"nodeType":"UserDefinedTypeName","pathNode":{"id":3849,"name":"Bytes32Set","nameLocations":["6449:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":3811,"src":"6449:10:18"},"referencedDeclaration":3811,"src":"6449:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3811_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3853,"mutability":"mutable","name":"value","nameLocation":"6481:5:18","nodeType":"VariableDeclaration","scope":3865,"src":"6473:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3852,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6473:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6448:39:18"},"returnParameters":{"id":3857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3865,"src":"6511:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3855,"name":"bool","nodeType":"ElementaryTypeName","src":"6511:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6510:6:18"},"scope":4219,"src":"6431:138:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3879,"nodeType":"Block","src":"6722:43:18","statements":[{"expression":{"arguments":[{"expression":{"id":3875,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"6747:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3811_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3876,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6751:6:18","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3810,"src":"6747:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":3874,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3776,"src":"6739:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3617_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":3877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6739:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3873,"id":3878,"nodeType":"Return","src":"6732:26:18"}]},"documentation":{"id":3866,"nodeType":"StructuredDocumentation","src":"6575:70:18","text":" @dev Returns the number of values in the set. O(1)."},"id":3880,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6659:6:18","nodeType":"FunctionDefinition","parameters":{"id":3870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3869,"mutability":"mutable","name":"set","nameLocation":"6685:3:18","nodeType":"VariableDeclaration","scope":3880,"src":"6666:22:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3811_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3868,"nodeType":"UserDefinedTypeName","pathNode":{"id":3867,"name":"Bytes32Set","nameLocations":["6666:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":3811,"src":"6666:10:18"},"referencedDeclaration":3811,"src":"6666:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3811_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"6665:24:18"},"returnParameters":{"id":3873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3872,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3880,"src":"6713:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3871,"name":"uint256","nodeType":"ElementaryTypeName","src":"6713:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6712:9:18"},"scope":4219,"src":"6650:115:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3897,"nodeType":"Block","src":"7190:46:18","statements":[{"expression":{"arguments":[{"expression":{"id":3892,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"7211:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3811_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3893,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7215:6:18","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3810,"src":"7211:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3894,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"7223:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3891,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3793,"src":"7207:3:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3617_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":3895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7207:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3890,"id":3896,"nodeType":"Return","src":"7200:29:18"}]},"documentation":{"id":3881,"nodeType":"StructuredDocumentation","src":"6771:331:18","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3898,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7116:2:18","nodeType":"FunctionDefinition","parameters":{"id":3887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3884,"mutability":"mutable","name":"set","nameLocation":"7138:3:18","nodeType":"VariableDeclaration","scope":3898,"src":"7119:22:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3811_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3883,"nodeType":"UserDefinedTypeName","pathNode":{"id":3882,"name":"Bytes32Set","nameLocations":["7119:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":3811,"src":"7119:10:18"},"referencedDeclaration":3811,"src":"7119:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3811_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3886,"mutability":"mutable","name":"index","nameLocation":"7151:5:18","nodeType":"VariableDeclaration","scope":3898,"src":"7143:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3885,"name":"uint256","nodeType":"ElementaryTypeName","src":"7143:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7118:39:18"},"returnParameters":{"id":3890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3889,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3898,"src":"7181:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3888,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7181:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7180:9:18"},"scope":4219,"src":"7107:129:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3927,"nodeType":"Block","src":"7857:219:18","statements":[{"assignments":[3912],"declarations":[{"constant":false,"id":3912,"mutability":"mutable","name":"store","nameLocation":"7884:5:18","nodeType":"VariableDeclaration","scope":3927,"src":"7867:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3910,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7867:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3911,"nodeType":"ArrayTypeName","src":"7867:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3917,"initialValue":{"arguments":[{"expression":{"id":3914,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"7900:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3811_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3915,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7904:6:18","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3810,"src":"7900:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":3913,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"7892:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3617_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7892:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7867:44:18"},{"assignments":[3922],"declarations":[{"constant":false,"id":3922,"mutability":"mutable","name":"result","nameLocation":"7938:6:18","nodeType":"VariableDeclaration","scope":3927,"src":"7921:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3920,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7921:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3921,"nodeType":"ArrayTypeName","src":"7921:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3923,"nodeType":"VariableDeclarationStatement","src":"7921:23:18"},{"AST":{"nativeSrc":"8007:39:18","nodeType":"YulBlock","src":"8007:39:18","statements":[{"nativeSrc":"8021:15:18","nodeType":"YulAssignment","src":"8021:15:18","value":{"name":"store","nativeSrc":"8031:5:18","nodeType":"YulIdentifier","src":"8031:5:18"},"variableNames":[{"name":"result","nativeSrc":"8021:6:18","nodeType":"YulIdentifier","src":"8021:6:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3922,"isOffset":false,"isSlot":false,"src":"8021:6:18","valueSize":1},{"declaration":3912,"isOffset":false,"isSlot":false,"src":"8031:5:18","valueSize":1}],"id":3924,"nodeType":"InlineAssembly","src":"7998:48:18"},{"expression":{"id":3925,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"8063:6:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":3907,"id":3926,"nodeType":"Return","src":"8056:13:18"}]},"documentation":{"id":3899,"nodeType":"StructuredDocumentation","src":"7242:529:18","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":3928,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7785:6:18","nodeType":"FunctionDefinition","parameters":{"id":3903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3902,"mutability":"mutable","name":"set","nameLocation":"7811:3:18","nodeType":"VariableDeclaration","scope":3928,"src":"7792:22:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3811_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3901,"nodeType":"UserDefinedTypeName","pathNode":{"id":3900,"name":"Bytes32Set","nameLocations":["7792:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":3811,"src":"7792:10:18"},"referencedDeclaration":3811,"src":"7792:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3811_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7791:24:18"},"returnParameters":{"id":3907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3928,"src":"7839:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3904,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7839:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3905,"nodeType":"ArrayTypeName","src":"7839:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7838:18:18"},"scope":4219,"src":"7776:300:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":3932,"members":[{"constant":false,"id":3931,"mutability":"mutable","name":"_inner","nameLocation":"8133:6:18","nodeType":"VariableDeclaration","scope":3932,"src":"8129:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3930,"nodeType":"UserDefinedTypeName","pathNode":{"id":3929,"name":"Set","nameLocations":["8129:3:18"],"nodeType":"IdentifierPath","referencedDeclaration":3617,"src":"8129:3:18"},"referencedDeclaration":3617,"src":"8129:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8108:10:18","nodeType":"StructDefinition","scope":4219,"src":"8101:45:18","visibility":"public"},{"body":{"id":3958,"nodeType":"Block","src":"8392:74:18","statements":[{"expression":{"arguments":[{"expression":{"id":3944,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"8414:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3945,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8418:6:18","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3931,"src":"8414:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":3952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"8450:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8442:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3950,"name":"uint160","nodeType":"ElementaryTypeName","src":"8442:7:18","typeDescriptions":{}}},"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8442:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8434:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3948,"name":"uint256","nodeType":"ElementaryTypeName","src":"8434:7:18","typeDescriptions":{}}},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8434:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8426:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3946,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8426:7:18","typeDescriptions":{}}},"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8426:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3943,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"8409:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3617_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8409:50:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3942,"id":3957,"nodeType":"Return","src":"8402:57:18"}]},"documentation":{"id":3933,"nodeType":"StructuredDocumentation","src":"8152:159:18","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":3959,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8325:3:18","nodeType":"FunctionDefinition","parameters":{"id":3939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3936,"mutability":"mutable","name":"set","nameLocation":"8348:3:18","nodeType":"VariableDeclaration","scope":3959,"src":"8329:22:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3935,"nodeType":"UserDefinedTypeName","pathNode":{"id":3934,"name":"AddressSet","nameLocations":["8329:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":3932,"src":"8329:10:18"},"referencedDeclaration":3932,"src":"8329:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":3938,"mutability":"mutable","name":"value","nameLocation":"8361:5:18","nodeType":"VariableDeclaration","scope":3959,"src":"8353:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3937,"name":"address","nodeType":"ElementaryTypeName","src":"8353:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8328:39:18"},"returnParameters":{"id":3942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3959,"src":"8386:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3940,"name":"bool","nodeType":"ElementaryTypeName","src":"8386:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8385:6:18"},"scope":4219,"src":"8316:150:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3985,"nodeType":"Block","src":"8713:77:18","statements":[{"expression":{"arguments":[{"expression":{"id":3971,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"8738:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3972,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8742:6:18","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3931,"src":"8738:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":3979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"8774:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8766:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3977,"name":"uint160","nodeType":"ElementaryTypeName","src":"8766:7:18","typeDescriptions":{}}},"id":3980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8766:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8758:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3975,"name":"uint256","nodeType":"ElementaryTypeName","src":"8758:7:18","typeDescriptions":{}}},"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8758:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8750:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3973,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8750:7:18","typeDescriptions":{}}},"id":3982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8750:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3970,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"8730:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3617_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8730:53:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3969,"id":3984,"nodeType":"Return","src":"8723:60:18"}]},"documentation":{"id":3960,"nodeType":"StructuredDocumentation","src":"8472:157:18","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":3986,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8643:6:18","nodeType":"FunctionDefinition","parameters":{"id":3966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3963,"mutability":"mutable","name":"set","nameLocation":"8669:3:18","nodeType":"VariableDeclaration","scope":3986,"src":"8650:22:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3962,"nodeType":"UserDefinedTypeName","pathNode":{"id":3961,"name":"AddressSet","nameLocations":["8650:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":3932,"src":"8650:10:18"},"referencedDeclaration":3932,"src":"8650:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":3965,"mutability":"mutable","name":"value","nameLocation":"8682:5:18","nodeType":"VariableDeclaration","scope":3986,"src":"8674:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3964,"name":"address","nodeType":"ElementaryTypeName","src":"8674:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8649:39:18"},"returnParameters":{"id":3969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3968,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3986,"src":"8707:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3967,"name":"bool","nodeType":"ElementaryTypeName","src":"8707:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8706:6:18"},"scope":4219,"src":"8634:156:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4012,"nodeType":"Block","src":"8957:79:18","statements":[{"expression":{"arguments":[{"expression":{"id":3998,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3990,"src":"8984:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3999,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8988:6:18","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3931,"src":"8984:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":4006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3992,"src":"9020:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9012:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4004,"name":"uint160","nodeType":"ElementaryTypeName","src":"9012:7:18","typeDescriptions":{}}},"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9012:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9004:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4002,"name":"uint256","nodeType":"ElementaryTypeName","src":"9004:7:18","typeDescriptions":{}}},"id":4008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9004:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8996:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4000,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8996:7:18","typeDescriptions":{}}},"id":4009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8996:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3997,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"8974:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3617_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8974:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3996,"id":4011,"nodeType":"Return","src":"8967:62:18"}]},"documentation":{"id":3987,"nodeType":"StructuredDocumentation","src":"8796:70:18","text":" @dev Returns true if the value is in the set. O(1)."},"id":4013,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8880:8:18","nodeType":"FunctionDefinition","parameters":{"id":3993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3990,"mutability":"mutable","name":"set","nameLocation":"8908:3:18","nodeType":"VariableDeclaration","scope":4013,"src":"8889:22:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3989,"nodeType":"UserDefinedTypeName","pathNode":{"id":3988,"name":"AddressSet","nameLocations":["8889:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":3932,"src":"8889:10:18"},"referencedDeclaration":3932,"src":"8889:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":3992,"mutability":"mutable","name":"value","nameLocation":"8921:5:18","nodeType":"VariableDeclaration","scope":4013,"src":"8913:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3991,"name":"address","nodeType":"ElementaryTypeName","src":"8913:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8888:39:18"},"returnParameters":{"id":3996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3995,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4013,"src":"8951:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3994,"name":"bool","nodeType":"ElementaryTypeName","src":"8951:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8950:6:18"},"scope":4219,"src":"8871:165:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4027,"nodeType":"Block","src":"9189:43:18","statements":[{"expression":{"arguments":[{"expression":{"id":4023,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"9214:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":4024,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9218:6:18","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3931,"src":"9214:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4022,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3776,"src":"9206:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3617_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":4025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9206:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4021,"id":4026,"nodeType":"Return","src":"9199:26:18"}]},"documentation":{"id":4014,"nodeType":"StructuredDocumentation","src":"9042:70:18","text":" @dev Returns the number of values in the set. O(1)."},"id":4028,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9126:6:18","nodeType":"FunctionDefinition","parameters":{"id":4018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4017,"mutability":"mutable","name":"set","nameLocation":"9152:3:18","nodeType":"VariableDeclaration","scope":4028,"src":"9133:22:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":4016,"nodeType":"UserDefinedTypeName","pathNode":{"id":4015,"name":"AddressSet","nameLocations":["9133:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":3932,"src":"9133:10:18"},"referencedDeclaration":3932,"src":"9133:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"9132:24:18"},"returnParameters":{"id":4021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4020,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4028,"src":"9180:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4019,"name":"uint256","nodeType":"ElementaryTypeName","src":"9180:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9179:9:18"},"scope":4219,"src":"9117:115:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4054,"nodeType":"Block","src":"9657:73:18","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":4046,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"9702:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":4047,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9706:6:18","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3931,"src":"9702:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":4048,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4034,"src":"9714:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4045,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3793,"src":"9698:3:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3617_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9698:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9690:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4043,"name":"uint256","nodeType":"ElementaryTypeName","src":"9690:7:18","typeDescriptions":{}}},"id":4050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9690:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9682:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4041,"name":"uint160","nodeType":"ElementaryTypeName","src":"9682:7:18","typeDescriptions":{}}},"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9682:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9674:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4039,"name":"address","nodeType":"ElementaryTypeName","src":"9674:7:18","typeDescriptions":{}}},"id":4052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9674:49:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4038,"id":4053,"nodeType":"Return","src":"9667:56:18"}]},"documentation":{"id":4029,"nodeType":"StructuredDocumentation","src":"9238:331:18","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":4055,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9583:2:18","nodeType":"FunctionDefinition","parameters":{"id":4035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4032,"mutability":"mutable","name":"set","nameLocation":"9605:3:18","nodeType":"VariableDeclaration","scope":4055,"src":"9586:22:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":4031,"nodeType":"UserDefinedTypeName","pathNode":{"id":4030,"name":"AddressSet","nameLocations":["9586:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":3932,"src":"9586:10:18"},"referencedDeclaration":3932,"src":"9586:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":4034,"mutability":"mutable","name":"index","nameLocation":"9618:5:18","nodeType":"VariableDeclaration","scope":4055,"src":"9610:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4033,"name":"uint256","nodeType":"ElementaryTypeName","src":"9610:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9585:39:18"},"returnParameters":{"id":4038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4055,"src":"9648:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4036,"name":"address","nodeType":"ElementaryTypeName","src":"9648:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9647:9:18"},"scope":4219,"src":"9574:156:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4084,"nodeType":"Block","src":"10351:219:18","statements":[{"assignments":[4069],"declarations":[{"constant":false,"id":4069,"mutability":"mutable","name":"store","nameLocation":"10378:5:18","nodeType":"VariableDeclaration","scope":4084,"src":"10361:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4067,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10361:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4068,"nodeType":"ArrayTypeName","src":"10361:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":4074,"initialValue":{"arguments":[{"expression":{"id":4071,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"10394:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":4072,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10398:6:18","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3931,"src":"10394:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4070,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"10386:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3617_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":4073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10386:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10361:44:18"},{"assignments":[4079],"declarations":[{"constant":false,"id":4079,"mutability":"mutable","name":"result","nameLocation":"10432:6:18","nodeType":"VariableDeclaration","scope":4084,"src":"10415:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4077,"name":"address","nodeType":"ElementaryTypeName","src":"10415:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4078,"nodeType":"ArrayTypeName","src":"10415:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4080,"nodeType":"VariableDeclarationStatement","src":"10415:23:18"},{"AST":{"nativeSrc":"10501:39:18","nodeType":"YulBlock","src":"10501:39:18","statements":[{"nativeSrc":"10515:15:18","nodeType":"YulAssignment","src":"10515:15:18","value":{"name":"store","nativeSrc":"10525:5:18","nodeType":"YulIdentifier","src":"10525:5:18"},"variableNames":[{"name":"result","nativeSrc":"10515:6:18","nodeType":"YulIdentifier","src":"10515:6:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":4079,"isOffset":false,"isSlot":false,"src":"10515:6:18","valueSize":1},{"declaration":4069,"isOffset":false,"isSlot":false,"src":"10525:5:18","valueSize":1}],"id":4081,"nodeType":"InlineAssembly","src":"10492:48:18"},{"expression":{"id":4082,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4079,"src":"10557:6:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":4064,"id":4083,"nodeType":"Return","src":"10550:13:18"}]},"documentation":{"id":4056,"nodeType":"StructuredDocumentation","src":"9736:529:18","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":4085,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10279:6:18","nodeType":"FunctionDefinition","parameters":{"id":4060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4059,"mutability":"mutable","name":"set","nameLocation":"10305:3:18","nodeType":"VariableDeclaration","scope":4085,"src":"10286:22:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":4058,"nodeType":"UserDefinedTypeName","pathNode":{"id":4057,"name":"AddressSet","nameLocations":["10286:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":3932,"src":"10286:10:18"},"referencedDeclaration":3932,"src":"10286:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10285:24:18"},"returnParameters":{"id":4064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4063,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4085,"src":"10333:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4061,"name":"address","nodeType":"ElementaryTypeName","src":"10333:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4062,"nodeType":"ArrayTypeName","src":"10333:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10332:18:18"},"scope":4219,"src":"10270:300:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":4089,"members":[{"constant":false,"id":4088,"mutability":"mutable","name":"_inner","nameLocation":"10621:6:18","nodeType":"VariableDeclaration","scope":4089,"src":"10617:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4087,"nodeType":"UserDefinedTypeName","pathNode":{"id":4086,"name":"Set","nameLocations":["10617:3:18"],"nodeType":"IdentifierPath","referencedDeclaration":3617,"src":"10617:3:18"},"referencedDeclaration":3617,"src":"10617:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10599:7:18","nodeType":"StructDefinition","scope":4219,"src":"10592:42:18","visibility":"public"},{"body":{"id":4109,"nodeType":"Block","src":"10877:56:18","statements":[{"expression":{"arguments":[{"expression":{"id":4101,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"10899:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4089_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10903:6:18","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4088,"src":"10899:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":4105,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"10919:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10911:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4103,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10911:7:18","typeDescriptions":{}}},"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10911:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4100,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"10894:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3617_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10894:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4099,"id":4108,"nodeType":"Return","src":"10887:39:18"}]},"documentation":{"id":4090,"nodeType":"StructuredDocumentation","src":"10640:159:18","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":4110,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10813:3:18","nodeType":"FunctionDefinition","parameters":{"id":4096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4093,"mutability":"mutable","name":"set","nameLocation":"10833:3:18","nodeType":"VariableDeclaration","scope":4110,"src":"10817:19:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4089_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4092,"nodeType":"UserDefinedTypeName","pathNode":{"id":4091,"name":"UintSet","nameLocations":["10817:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":4089,"src":"10817:7:18"},"referencedDeclaration":4089,"src":"10817:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4089_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":4095,"mutability":"mutable","name":"value","nameLocation":"10846:5:18","nodeType":"VariableDeclaration","scope":4110,"src":"10838:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4094,"name":"uint256","nodeType":"ElementaryTypeName","src":"10838:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10816:36:18"},"returnParameters":{"id":4099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4098,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4110,"src":"10871:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4097,"name":"bool","nodeType":"ElementaryTypeName","src":"10871:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10870:6:18"},"scope":4219,"src":"10804:129:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4130,"nodeType":"Block","src":"11177:59:18","statements":[{"expression":{"arguments":[{"expression":{"id":4122,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"11202:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4089_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4123,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11206:6:18","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4088,"src":"11202:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":4126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4116,"src":"11222:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11214:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4124,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11214:7:18","typeDescriptions":{}}},"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11214:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4121,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"11194:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3617_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":4128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11194:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4120,"id":4129,"nodeType":"Return","src":"11187:42:18"}]},"documentation":{"id":4111,"nodeType":"StructuredDocumentation","src":"10939:157:18","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":4131,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11110:6:18","nodeType":"FunctionDefinition","parameters":{"id":4117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4114,"mutability":"mutable","name":"set","nameLocation":"11133:3:18","nodeType":"VariableDeclaration","scope":4131,"src":"11117:19:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4089_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4113,"nodeType":"UserDefinedTypeName","pathNode":{"id":4112,"name":"UintSet","nameLocations":["11117:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":4089,"src":"11117:7:18"},"referencedDeclaration":4089,"src":"11117:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4089_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":4116,"mutability":"mutable","name":"value","nameLocation":"11146:5:18","nodeType":"VariableDeclaration","scope":4131,"src":"11138:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4115,"name":"uint256","nodeType":"ElementaryTypeName","src":"11138:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11116:36:18"},"returnParameters":{"id":4120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4131,"src":"11171:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4118,"name":"bool","nodeType":"ElementaryTypeName","src":"11171:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11170:6:18"},"scope":4219,"src":"11101:135:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4151,"nodeType":"Block","src":"11400:61:18","statements":[{"expression":{"arguments":[{"expression":{"id":4143,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"11427:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4089_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4144,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11431:6:18","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4088,"src":"11427:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":4147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4137,"src":"11447:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11439:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4145,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11439:7:18","typeDescriptions":{}}},"id":4148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11439:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4142,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"11417:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3617_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":4149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11417:37:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4141,"id":4150,"nodeType":"Return","src":"11410:44:18"}]},"documentation":{"id":4132,"nodeType":"StructuredDocumentation","src":"11242:70:18","text":" @dev Returns true if the value is in the set. O(1)."},"id":4152,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11326:8:18","nodeType":"FunctionDefinition","parameters":{"id":4138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4135,"mutability":"mutable","name":"set","nameLocation":"11351:3:18","nodeType":"VariableDeclaration","scope":4152,"src":"11335:19:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4089_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4134,"nodeType":"UserDefinedTypeName","pathNode":{"id":4133,"name":"UintSet","nameLocations":["11335:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":4089,"src":"11335:7:18"},"referencedDeclaration":4089,"src":"11335:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4089_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":4137,"mutability":"mutable","name":"value","nameLocation":"11364:5:18","nodeType":"VariableDeclaration","scope":4152,"src":"11356:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4136,"name":"uint256","nodeType":"ElementaryTypeName","src":"11356:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11334:36:18"},"returnParameters":{"id":4141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4152,"src":"11394:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4139,"name":"bool","nodeType":"ElementaryTypeName","src":"11394:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11393:6:18"},"scope":4219,"src":"11317:144:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4166,"nodeType":"Block","src":"11611:43:18","statements":[{"expression":{"arguments":[{"expression":{"id":4162,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4156,"src":"11636:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4089_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4163,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11640:6:18","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4088,"src":"11636:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4161,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3776,"src":"11628:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3617_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":4164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4160,"id":4165,"nodeType":"Return","src":"11621:26:18"}]},"documentation":{"id":4153,"nodeType":"StructuredDocumentation","src":"11467:70:18","text":" @dev Returns the number of values in the set. O(1)."},"id":4167,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11551:6:18","nodeType":"FunctionDefinition","parameters":{"id":4157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4156,"mutability":"mutable","name":"set","nameLocation":"11574:3:18","nodeType":"VariableDeclaration","scope":4167,"src":"11558:19:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4089_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4155,"nodeType":"UserDefinedTypeName","pathNode":{"id":4154,"name":"UintSet","nameLocations":["11558:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":4089,"src":"11558:7:18"},"referencedDeclaration":4089,"src":"11558:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4089_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"11557:21:18"},"returnParameters":{"id":4160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4167,"src":"11602:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4158,"name":"uint256","nodeType":"ElementaryTypeName","src":"11602:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11601:9:18"},"scope":4219,"src":"11542:112:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4187,"nodeType":"Block","src":"12076:55:18","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":4181,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"12105:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4089_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4182,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12109:6:18","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4088,"src":"12105:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":4183,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4173,"src":"12117:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4180,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3793,"src":"12101:3:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3617_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12101:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12093:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4178,"name":"uint256","nodeType":"ElementaryTypeName","src":"12093:7:18","typeDescriptions":{}}},"id":4185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12093:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4177,"id":4186,"nodeType":"Return","src":"12086:38:18"}]},"documentation":{"id":4168,"nodeType":"StructuredDocumentation","src":"11660:331:18","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":4188,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"12005:2:18","nodeType":"FunctionDefinition","parameters":{"id":4174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4171,"mutability":"mutable","name":"set","nameLocation":"12024:3:18","nodeType":"VariableDeclaration","scope":4188,"src":"12008:19:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4089_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4170,"nodeType":"UserDefinedTypeName","pathNode":{"id":4169,"name":"UintSet","nameLocations":["12008:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":4089,"src":"12008:7:18"},"referencedDeclaration":4089,"src":"12008:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4089_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":4173,"mutability":"mutable","name":"index","nameLocation":"12037:5:18","nodeType":"VariableDeclaration","scope":4188,"src":"12029:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4172,"name":"uint256","nodeType":"ElementaryTypeName","src":"12029:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12007:36:18"},"returnParameters":{"id":4177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4176,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4188,"src":"12067:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4175,"name":"uint256","nodeType":"ElementaryTypeName","src":"12067:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12066:9:18"},"scope":4219,"src":"11996:135:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4217,"nodeType":"Block","src":"12749:219:18","statements":[{"assignments":[4202],"declarations":[{"constant":false,"id":4202,"mutability":"mutable","name":"store","nameLocation":"12776:5:18","nodeType":"VariableDeclaration","scope":4217,"src":"12759:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4200,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12759:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4201,"nodeType":"ArrayTypeName","src":"12759:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":4207,"initialValue":{"arguments":[{"expression":{"id":4204,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"12792:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4089_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4205,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12796:6:18","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4088,"src":"12792:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3617_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4203,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"12784:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3617_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":4206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12784:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12759:44:18"},{"assignments":[4212],"declarations":[{"constant":false,"id":4212,"mutability":"mutable","name":"result","nameLocation":"12830:6:18","nodeType":"VariableDeclaration","scope":4217,"src":"12813:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4210,"name":"uint256","nodeType":"ElementaryTypeName","src":"12813:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4211,"nodeType":"ArrayTypeName","src":"12813:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4213,"nodeType":"VariableDeclarationStatement","src":"12813:23:18"},{"AST":{"nativeSrc":"12899:39:18","nodeType":"YulBlock","src":"12899:39:18","statements":[{"nativeSrc":"12913:15:18","nodeType":"YulAssignment","src":"12913:15:18","value":{"name":"store","nativeSrc":"12923:5:18","nodeType":"YulIdentifier","src":"12923:5:18"},"variableNames":[{"name":"result","nativeSrc":"12913:6:18","nodeType":"YulIdentifier","src":"12913:6:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":4212,"isOffset":false,"isSlot":false,"src":"12913:6:18","valueSize":1},{"declaration":4202,"isOffset":false,"isSlot":false,"src":"12923:5:18","valueSize":1}],"id":4214,"nodeType":"InlineAssembly","src":"12890:48:18"},{"expression":{"id":4215,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"12955:6:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":4197,"id":4216,"nodeType":"Return","src":"12948:13:18"}]},"documentation":{"id":4189,"nodeType":"StructuredDocumentation","src":"12137:529:18","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":4218,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12680:6:18","nodeType":"FunctionDefinition","parameters":{"id":4193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4192,"mutability":"mutable","name":"set","nameLocation":"12703:3:18","nodeType":"VariableDeclaration","scope":4218,"src":"12687:19:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4089_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4191,"nodeType":"UserDefinedTypeName","pathNode":{"id":4190,"name":"UintSet","nameLocations":["12687:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":4089,"src":"12687:7:18"},"referencedDeclaration":4089,"src":"12687:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4089_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12686:21:18"},"returnParameters":{"id":4197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4196,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4218,"src":"12731:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4194,"name":"uint256","nodeType":"ElementaryTypeName","src":"12731:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4195,"nodeType":"ArrayTypeName","src":"12731:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12730:18:18"},"scope":4219,"src":"12671:297:18","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4220,"src":"1330:11640:18","usedErrors":[],"usedEvents":[]}],"src":"205:12766:18"},"id":18},"contracts/AraraCoin.sol":{"ast":{"absolutePath":"contracts/AraraCoin.sol","exportedSymbols":{"AraraCoin":[4654],"Context":[1148],"ECDSA":[2146],"EIP712":[2373],"ERC20":[824],"ERC20Permit":[1056],"EnumerableSet":[4219],"IERC20":[902],"IERC20Errors":[214],"IERC20Metadata":[1082],"IERC20Permit":[1118],"ITaxHandler":[4670],"Nonces":[1216],"Ownable":[147]},"id":4655,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4221,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:19"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":4222,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4655,"sourceUnit":825,"src":"218:55:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":4223,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4655,"sourceUnit":1057,"src":"274:72:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":4224,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4655,"sourceUnit":148,"src":"347:52:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","id":4225,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4655,"sourceUnit":4220,"src":"400:65:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/tax/ITaxHandler.sol","file":"./tax/ITaxHandler.sol","id":4226,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4655,"sourceUnit":4671,"src":"530:31:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4227,"name":"ERC20","nameLocations":["630:5:19"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"630:5:19"},"id":4228,"nodeType":"InheritanceSpecifier","src":"630:5:19"},{"baseName":{"id":4229,"name":"ERC20Permit","nameLocations":["637:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":1056,"src":"637:11:19"},"id":4230,"nodeType":"InheritanceSpecifier","src":"637:11:19"},{"baseName":{"id":4231,"name":"Ownable","nameLocations":["650:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"650:7:19"},"id":4232,"nodeType":"InheritanceSpecifier","src":"650:7:19"}],"canonicalName":"AraraCoin","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4654,"linearizedBaseContracts":[4654,147,1056,1216,2373,172,1118,824,214,1082,902,1148],"name":"AraraCoin","nameLocation":"617:9:19","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"75f0a874","id":4235,"mutability":"mutable","name":"marketingWallet","nameLocation":"737:15:19","nodeType":"VariableDeclaration","scope":4654,"src":"722:75:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4233,"name":"address","nodeType":"ElementaryTypeName","src":"722:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307832333631386538314533663563644637663534433364363566374642633061426635423231453866","id":4234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"755:42:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x23618e81E3f5cdF7f54C3d65f7FBc0aBf5B21E8f"},"visibility":"public"},{"constant":false,"functionSelector":"6409f534","id":4238,"mutability":"mutable","name":"consultingWallet","nameLocation":"818:16:19","nodeType":"VariableDeclaration","scope":4654,"src":"803:76:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4236,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307861304565374131343264323637433166333637313445346138463735363132463230613739373230","id":4237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"837:42:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xa0Ee7A142d267C1f36714E4a8F75612F20a79720"},"visibility":"public"},{"constant":false,"functionSelector":"1798fb80","id":4241,"mutability":"mutable","name":"auditWallet","nameLocation":"900:11:19","nodeType":"VariableDeclaration","scope":4654,"src":"885:71:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4239,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307837303939373937304335313831326463334130313043376430316235306530643137646337394338","id":4240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"914:42:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x70997970C51812dc3A010C7d01b50e0d17dc79C8"},"visibility":"public"},{"constant":false,"functionSelector":"1fc75e41","id":4244,"mutability":"mutable","name":"preSaleWallet","nameLocation":"977:13:19","nodeType":"VariableDeclaration","scope":4654,"src":"962:73:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4242,"name":"address","nodeType":"ElementaryTypeName","src":"962:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307833433434436444644236613930306661326235383564643239396530336431324641343239334243","id":4243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"993:42:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC"},"visibility":"public"},{"constant":false,"functionSelector":"77ba8280","id":4247,"mutability":"mutable","name":"launchWallet","nameLocation":"1056:12:19","nodeType":"VariableDeclaration","scope":4654,"src":"1041:72:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4245,"name":"address","nodeType":"ElementaryTypeName","src":"1041:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307839304637396266364542326334663837303336354537383539383245316631303145393362393036","id":4246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1071:42:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x90F79bf6EB2c4f870365E785982E1f101E93b906"},"visibility":"public"},{"constant":false,"functionSelector":"01089b92","id":4250,"mutability":"mutable","name":"investorsWallet","nameLocation":"1134:15:19","nodeType":"VariableDeclaration","scope":4654,"src":"1119:75:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4248,"name":"address","nodeType":"ElementaryTypeName","src":"1119:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307831356433344141663534323637444237443763333637383339414166373141303061324336413635","id":4249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1152:42:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x15d34AAf54267DB7D7c367839AAf71A00a2C6A65"},"visibility":"public"},{"constant":false,"functionSelector":"a781c954","id":4253,"mutability":"mutable","name":"investorsYearOneVestingWallet","nameLocation":"1215:29:19","nodeType":"VariableDeclaration","scope":4654,"src":"1200:89:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4251,"name":"address","nodeType":"ElementaryTypeName","src":"1200:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307837316245363366333338346635666239383939353839384138364230324662323432366335373838","id":4252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1247:42:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x71bE63f3384f5fb98995898A86B02Fb2426c5788"},"visibility":"public"},{"constant":false,"functionSelector":"16942450","id":4256,"mutability":"mutable","name":"investorsYearTwoVestingWallet","nameLocation":"1310:29:19","nodeType":"VariableDeclaration","scope":4654,"src":"1295:89:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4254,"name":"address","nodeType":"ElementaryTypeName","src":"1295:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307846414242306163396436384230423434356642373335373237324666323032433536353136393461","id":4255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1342:42:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xFABB0ac9d68B0B445fB7357272Ff202C5651694a"},"visibility":"public"},{"constant":false,"functionSelector":"fb3d924a","id":4259,"mutability":"mutable","name":"teamVestingWallet","nameLocation":"1405:17:19","nodeType":"VariableDeclaration","scope":4654,"src":"1390:77:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4257,"name":"address","nodeType":"ElementaryTypeName","src":"1390:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307839393635353037443161353562634332363935433538626131364642333764383139423041346463","id":4258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1425:42:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x9965507D1a55bcC2695C58ba16FB37d819B0A4dc"},"visibility":"public"},{"constant":false,"functionSelector":"1f640ed8","id":4262,"mutability":"mutable","name":"foundersVestingWallet","nameLocation":"1488:21:19","nodeType":"VariableDeclaration","scope":4654,"src":"1473:81:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4260,"name":"address","nodeType":"ElementaryTypeName","src":"1473:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307831434264336232373730393039443465313066313537634142433834433732363430373343394563","id":4261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1512:42:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x1CBd3b2770909D4e10f157cABC84C7264073C9Ec"},"visibility":"public"},{"constant":false,"functionSelector":"a4771ea4","id":4265,"mutability":"mutable","name":"companyVestingWallet","nameLocation":"1575:20:19","nodeType":"VariableDeclaration","scope":4654,"src":"1560:80:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4263,"name":"address","nodeType":"ElementaryTypeName","src":"1560:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307864463365313864363442433641393833663637334162333139434361453466316135374337303937","id":4264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1598:42:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xdF3e18d64BC6A983f673Ab319CCaE4f1a57C7097"},"visibility":"public"},{"constant":false,"functionSelector":"4a3084eb","id":4268,"mutability":"mutable","name":"preservationProjectsVestingWallet","nameLocation":"1661:33:19","nodeType":"VariableDeclaration","scope":4654,"src":"1646:93:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4266,"name":"address","nodeType":"ElementaryTypeName","src":"1646:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307839373645413734303236453732363535346442363537664135343736336162643043336130616139","id":4267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1697:42:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x976EA74026E726554dB657fA54763abd0C3a0aa9"},"visibility":"public"},{"constant":true,"id":4275,"mutability":"constant","name":"TOTAL_SUPPLY","nameLocation":"1853:12:19","nodeType":"VariableDeclaration","scope":4654,"src":"1828:66:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4269,"name":"uint256","nodeType":"ElementaryTypeName","src":"1828:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000_by_1","typeString":"int_const 100000000000000000000000000000"},"id":4274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130305f3030305f3030305f303030","id":4270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1868:15:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000000_by_1","typeString":"int_const 100000000000"},"value":"100_000_000_000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":4273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1886:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":4272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1892:2:19","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"1886:8:19","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"1868:26:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000_by_1","typeString":"int_const 100000000000000000000000000000"}},"visibility":"private"},{"constant":false,"functionSelector":"2dc0562d","id":4278,"mutability":"mutable","name":"taxWallet","nameLocation":"1964:9:19","nodeType":"VariableDeclaration","scope":4654,"src":"1949:69:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4276,"name":"address","nodeType":"ElementaryTypeName","src":"1949:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307862444135373437624644363546303864656235346362343635654238374434306535314231393745","id":4277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1976:42:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xbDA5747bFD65F08deb54cb465eB87D40e51B197E"},"visibility":"public"},{"constant":false,"functionSelector":"12280ba8","id":4281,"mutability":"mutable","name":"taxHandler","nameLocation":"2121:10:19","nodeType":"VariableDeclaration","scope":4654,"src":"2102:29:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ITaxHandler_$4670","typeString":"contract ITaxHandler"},"typeName":{"id":4280,"nodeType":"UserDefinedTypeName","pathNode":{"id":4279,"name":"ITaxHandler","nameLocations":["2102:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":4670,"src":"2102:11:19"},"referencedDeclaration":4670,"src":"2102:11:19","typeDescriptions":{"typeIdentifier":"t_contract$_ITaxHandler_$4670","typeString":"contract ITaxHandler"}},"visibility":"public"},{"constant":false,"functionSelector":"4ada218b","id":4283,"mutability":"mutable","name":"tradingEnabled","nameLocation":"2215:14:19","nodeType":"VariableDeclaration","scope":4654,"src":"2203:26:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4282,"name":"bool","nodeType":"ElementaryTypeName","src":"2203:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"global":false,"id":4287,"libraryName":{"id":4284,"name":"EnumerableSet","nameLocations":["2335:13:19"],"nodeType":"IdentifierPath","referencedDeclaration":4219,"src":"2335:13:19"},"nodeType":"UsingForDirective","src":"2329:49:19","typeName":{"id":4286,"nodeType":"UserDefinedTypeName","pathNode":{"id":4285,"name":"EnumerableSet.AddressSet","nameLocations":["2353:13:19","2367:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":3932,"src":"2353:24:19"},"referencedDeclaration":3932,"src":"2353:24:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"constant":false,"id":4290,"mutability":"mutable","name":"_canTrade","nameLocation":"2416:9:19","nodeType":"VariableDeclaration","scope":4654,"src":"2383:42:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":4289,"nodeType":"UserDefinedTypeName","pathNode":{"id":4288,"name":"EnumerableSet.AddressSet","nameLocations":["2383:13:19","2397:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":3932,"src":"2383:24:19"},"referencedDeclaration":3932,"src":"2383:24:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"private"},{"anonymous":false,"eventSelector":"799663458a5ef2936f7fa0c99b3336c69c25890f82974f04e811e5bb359186c7","id":4292,"name":"TradingEnabled","nameLocation":"2483:14:19","nodeType":"EventDefinition","parameters":{"id":4291,"nodeType":"ParameterList","parameters":[],"src":"2497:2:19"},"src":"2477:23:19"},{"anonymous":false,"eventSelector":"00d910c9481701ba32afe0c247572aaece27072f230c8ec769bf245fc0b38de6","id":4298,"name":"TaxHandlerChanged","nameLocation":"2565:17:19","nodeType":"EventDefinition","parameters":{"id":4297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4294,"indexed":false,"mutability":"mutable","name":"oldAddress","nameLocation":"2591:10:19","nodeType":"VariableDeclaration","scope":4298,"src":"2583:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4293,"name":"address","nodeType":"ElementaryTypeName","src":"2583:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4296,"indexed":false,"mutability":"mutable","name":"newAddress","nameLocation":"2611:10:19","nodeType":"VariableDeclaration","scope":4298,"src":"2603:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4295,"name":"address","nodeType":"ElementaryTypeName","src":"2603:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2582:40:19"},"src":"2559:64:19"},{"anonymous":false,"eventSelector":"0a3568000da48cc6e5e2c8e7a94d1bfa3607d1734c7dbd7b04ac9d77316b471a","id":4304,"name":"TaxWalletChanged","nameLocation":"2687:16:19","nodeType":"EventDefinition","parameters":{"id":4303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4300,"indexed":false,"mutability":"mutable","name":"oldAddress","nameLocation":"2712:10:19","nodeType":"VariableDeclaration","scope":4304,"src":"2704:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4299,"name":"address","nodeType":"ElementaryTypeName","src":"2704:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4302,"indexed":false,"mutability":"mutable","name":"newAddress","nameLocation":"2732:10:19","nodeType":"VariableDeclaration","scope":4304,"src":"2724:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4301,"name":"address","nodeType":"ElementaryTypeName","src":"2724:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2703:40:19"},"src":"2681:63:19"},{"body":{"id":4482,"nodeType":"Block","src":"3217:1809:19","statements":[{"expression":{"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4323,"name":"taxHandler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"3291:10:19","typeDescriptions":{"typeIdentifier":"t_contract$_ITaxHandler_$4670","typeString":"contract ITaxHandler"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4325,"name":"taxHandlerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"3316:17:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4324,"name":"ITaxHandler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"3304:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ITaxHandler_$4670_$","typeString":"type(contract ITaxHandler)"}},"id":4326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3304:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ITaxHandler_$4670","typeString":"contract ITaxHandler"}},"src":"3291:43:19","typeDescriptions":{"typeIdentifier":"t_contract$_ITaxHandler_$4670","typeString":"contract ITaxHandler"}},"id":4328,"nodeType":"ExpressionStatement","src":"3291:43:19"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":4334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3486:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3478:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4332,"name":"address","nodeType":"ElementaryTypeName","src":"3478:7:19","typeDescriptions":{}}},"id":4335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3478:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4329,"name":"_canTrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4290,"src":"3464:9:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":4331,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3474:3:19","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":3959,"src":"3464:13:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$3932_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$3932_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3464:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4337,"nodeType":"ExpressionStatement","src":"3464:25:19"},{"expression":{"arguments":[{"id":4341,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4306,"src":"3514:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4338,"name":"_canTrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4290,"src":"3500:9:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":4340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3510:3:19","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":3959,"src":"3500:13:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$3932_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$3932_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":4342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3500:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4343,"nodeType":"ExpressionStatement","src":"3500:27:19"},{"expression":{"arguments":[{"expression":{"id":4345,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3609:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3613:6:19","memberName":"sender","nodeType":"MemberAccess","src":"3609:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4347,"name":"TOTAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"3621:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4344,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"3603:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3603:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4349,"nodeType":"ExpressionStatement","src":"3603:31:19"},{"expression":{"arguments":[{"expression":{"id":4351,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3735:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3739:6:19","memberName":"sender","nodeType":"MemberAccess","src":"3735:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4353,"name":"marketingWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"3747:15:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_rational_3000000000000000000000000000_by_1","typeString":"int_const 3000000000000000000000000000"},"id":4358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"335f3030305f3030305f303030","id":4354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3764:13:19","typeDescriptions":{"typeIdentifier":"t_rational_3000000000_by_1","typeString":"int_const 3000000000"},"value":"3_000_000_000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":4357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3780:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":4356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3786:2:19","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"3780:8:19","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"3764:24:19","typeDescriptions":{"typeIdentifier":"t_rational_3000000000000000000000000000_by_1","typeString":"int_const 3000000000000000000000000000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_3000000000000000000000000000_by_1","typeString":"int_const 3000000000000000000000000000"}],"id":4350,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"3725:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3725:64:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4360,"nodeType":"ExpressionStatement","src":"3725:64:19"},{"expression":{"arguments":[{"expression":{"id":4362,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3838:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3842:6:19","memberName":"sender","nodeType":"MemberAccess","src":"3838:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4364,"name":"consultingWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4238,"src":"3850:16:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_rational_1250000000000000000000000000_by_1","typeString":"int_const 1250000000000000000000000000"},"id":4369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"315f3235305f3030305f303030","id":4365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3868:13:19","typeDescriptions":{"typeIdentifier":"t_rational_1250000000_by_1","typeString":"int_const 1250000000"},"value":"1_250_000_000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":4368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3884:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":4367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3890:2:19","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"3884:8:19","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"3868:24:19","typeDescriptions":{"typeIdentifier":"t_rational_1250000000000000000000000000_by_1","typeString":"int_const 1250000000000000000000000000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1250000000000000000000000000_by_1","typeString":"int_const 1250000000000000000000000000"}],"id":4361,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"3828:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3828:65:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4371,"nodeType":"ExpressionStatement","src":"3828:65:19"},{"expression":{"arguments":[{"expression":{"id":4373,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3946:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3950:6:19","memberName":"sender","nodeType":"MemberAccess","src":"3946:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4375,"name":"auditWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4241,"src":"3958:11:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_rational_750000000000000000000000000_by_1","typeString":"int_const 750000000000000000000000000"},"id":4380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3735305f3030305f303030","id":4376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3971:11:19","typeDescriptions":{"typeIdentifier":"t_rational_750000000_by_1","typeString":"int_const 750000000"},"value":"750_000_000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":4379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3985:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":4378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3991:2:19","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"3985:8:19","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"3971:22:19","typeDescriptions":{"typeIdentifier":"t_rational_750000000000000000000000000_by_1","typeString":"int_const 750000000000000000000000000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_750000000000000000000000000_by_1","typeString":"int_const 750000000000000000000000000"}],"id":4372,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"3936:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3936:58:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4382,"nodeType":"ExpressionStatement","src":"3936:58:19"},{"expression":{"arguments":[{"expression":{"id":4384,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4041:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4045:6:19","memberName":"sender","nodeType":"MemberAccess","src":"4041:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4386,"name":"preSaleWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"4053:13:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":4387,"name":"TOTAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"4068:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130","id":4388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4083:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"4068:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":4390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4088:3:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"4068:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4383,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4031:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4031:61:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4393,"nodeType":"ExpressionStatement","src":"4031:61:19"},{"expression":{"arguments":[{"expression":{"id":4395,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4131:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4135:6:19","memberName":"sender","nodeType":"MemberAccess","src":"4131:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4397,"name":"launchWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"4143:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":4398,"name":"TOTAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"4157:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3230","id":4399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4172:2:19","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"4157:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":4401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4177:3:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"4157:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4394,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4121:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4121:60:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4404,"nodeType":"ExpressionStatement","src":"4121:60:19"},{"expression":{"arguments":[{"expression":{"id":4406,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4218:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4222:6:19","memberName":"sender","nodeType":"MemberAccess","src":"4218:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4408,"name":"investorsWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"4230:15:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_rational_6250000000000000000000000000_by_1","typeString":"int_const 6250000000000000000000000000"},"id":4413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"365f3235305f3030305f303030","id":4409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4247:13:19","typeDescriptions":{"typeIdentifier":"t_rational_6250000000_by_1","typeString":"int_const 6250000000"},"value":"6_250_000_000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":4412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4263:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":4411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4269:2:19","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"4263:8:19","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"4247:24:19","typeDescriptions":{"typeIdentifier":"t_rational_6250000000000000000000000000_by_1","typeString":"int_const 6250000000000000000000000000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_6250000000000000000000000000_by_1","typeString":"int_const 6250000000000000000000000000"}],"id":4405,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4208:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4208:64:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4415,"nodeType":"ExpressionStatement","src":"4208:64:19"},{"expression":{"arguments":[{"expression":{"id":4417,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4323:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4327:6:19","memberName":"sender","nodeType":"MemberAccess","src":"4323:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4419,"name":"investorsYearOneVestingWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4253,"src":"4335:29:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_rational_6250000000000000000000000000_by_1","typeString":"int_const 6250000000000000000000000000"},"id":4424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"365f3235305f3030305f303030","id":4420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4366:13:19","typeDescriptions":{"typeIdentifier":"t_rational_6250000000_by_1","typeString":"int_const 6250000000"},"value":"6_250_000_000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":4423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4382:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":4422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4388:2:19","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"4382:8:19","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"4366:24:19","typeDescriptions":{"typeIdentifier":"t_rational_6250000000000000000000000000_by_1","typeString":"int_const 6250000000000000000000000000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_6250000000000000000000000000_by_1","typeString":"int_const 6250000000000000000000000000"}],"id":4416,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4313:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4313:78:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4426,"nodeType":"ExpressionStatement","src":"4313:78:19"},{"expression":{"arguments":[{"expression":{"id":4428,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4460:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4464:6:19","memberName":"sender","nodeType":"MemberAccess","src":"4460:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4430,"name":"investorsYearTwoVestingWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"4472:29:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_rational_12500000000000000000000000000_by_1","typeString":"int_const 12500000000000000000000000000"},"id":4435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31325f3530305f3030305f303030","id":4431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4503:14:19","typeDescriptions":{"typeIdentifier":"t_rational_12500000000_by_1","typeString":"int_const 12500000000"},"value":"12_500_000_000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":4434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4520:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":4433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4526:2:19","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"4520:8:19","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"4503:25:19","typeDescriptions":{"typeIdentifier":"t_rational_12500000000000000000000000000_by_1","typeString":"int_const 12500000000000000000000000000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_12500000000000000000000000000_by_1","typeString":"int_const 12500000000000000000000000000"}],"id":4427,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4450:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4450:79:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4437,"nodeType":"ExpressionStatement","src":"4450:79:19"},{"expression":{"arguments":[{"expression":{"id":4439,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4598:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4602:6:19","memberName":"sender","nodeType":"MemberAccess","src":"4598:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4441,"name":"companyVestingWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"4610:20:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_rational_9600000000000000000000000000_by_1","typeString":"int_const 9600000000000000000000000000"},"id":4446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"395f3630305f3030305f303030","id":4442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4632:13:19","typeDescriptions":{"typeIdentifier":"t_rational_9600000000_by_1","typeString":"int_const 9600000000"},"value":"9_600_000_000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":4445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4648:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":4444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:2:19","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"4648:8:19","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"4632:24:19","typeDescriptions":{"typeIdentifier":"t_rational_9600000000000000000000000000_by_1","typeString":"int_const 9600000000000000000000000000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_9600000000000000000000000000_by_1","typeString":"int_const 9600000000000000000000000000"}],"id":4438,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4588:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4588:69:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4448,"nodeType":"ExpressionStatement","src":"4588:69:19"},{"expression":{"arguments":[{"expression":{"id":4450,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4705:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4709:6:19","memberName":"sender","nodeType":"MemberAccess","src":"4705:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4452,"name":"foundersVestingWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4262,"src":"4717:21:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_rational_5600000000000000000000000000_by_1","typeString":"int_const 5600000000000000000000000000"},"id":4457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"355f3630305f3030305f303030","id":4453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4740:13:19","typeDescriptions":{"typeIdentifier":"t_rational_5600000000_by_1","typeString":"int_const 5600000000"},"value":"5_600_000_000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":4456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4756:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":4455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4762:2:19","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"4756:8:19","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"4740:24:19","typeDescriptions":{"typeIdentifier":"t_rational_5600000000000000000000000000_by_1","typeString":"int_const 5600000000000000000000000000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_5600000000000000000000000000_by_1","typeString":"int_const 5600000000000000000000000000"}],"id":4449,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4695:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4695:70:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4459,"nodeType":"ExpressionStatement","src":"4695:70:19"},{"expression":{"arguments":[{"expression":{"id":4461,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4813:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4817:6:19","memberName":"sender","nodeType":"MemberAccess","src":"4813:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4463,"name":"teamVestingWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"4825:17:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_rational_4800000000000000000000000000_by_1","typeString":"int_const 4800000000000000000000000000"},"id":4468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"345f3830305f3030305f303030","id":4464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4844:13:19","typeDescriptions":{"typeIdentifier":"t_rational_4800000000_by_1","typeString":"int_const 4800000000"},"value":"4_800_000_000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":4467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4860:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":4466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4866:2:19","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"4860:8:19","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"4844:24:19","typeDescriptions":{"typeIdentifier":"t_rational_4800000000000000000000000000_by_1","typeString":"int_const 4800000000000000000000000000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_4800000000000000000000000000_by_1","typeString":"int_const 4800000000000000000000000000"}],"id":4460,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4803:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4803:66:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4470,"nodeType":"ExpressionStatement","src":"4803:66:19"},{"expression":{"arguments":[{"expression":{"id":4472,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4914:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4918:6:19","memberName":"sender","nodeType":"MemberAccess","src":"4914:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4474,"name":"preservationProjectsVestingContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"4926:35:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":4475,"name":"TOTAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"4963:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3230","id":4476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4978:2:19","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"4963:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":4478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4983:3:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"4963:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4471,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4904:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4904:83:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4481,"nodeType":"ExpressionStatement","src":"4904:83:19"}]},"id":4483,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4172617261636f696e","id":4313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2991:11:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_41526a4d9c160f61cf87b2cc71406a3fbddfce00df1163f1c54f14e429f8567d","typeString":"literal_string \"Araracoin\""},"value":"Araracoin"},{"hexValue":"4152415241","id":4314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3004:7:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_6fbf0df9669579bc041acad852827b4fd3e60d7c49ffc02601612dc0ae75d22f","typeString":"literal_string \"ARARA\""},"value":"ARARA"}],"id":4315,"kind":"baseConstructorSpecifier","modifierName":{"id":4312,"name":"ERC20","nameLocations":["2985:5:19"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"2985:5:19"},"nodeType":"ModifierInvocation","src":"2985:27:19"},{"arguments":[{"hexValue":"4172617261636f696e","id":4317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3086:11:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_41526a4d9c160f61cf87b2cc71406a3fbddfce00df1163f1c54f14e429f8567d","typeString":"literal_string \"Araracoin\""},"value":"Araracoin"}],"id":4318,"kind":"baseConstructorSpecifier","modifierName":{"id":4316,"name":"ERC20Permit","nameLocations":["3074:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":1056,"src":"3074:11:19"},"nodeType":"ModifierInvocation","src":"3074:24:19"},{"arguments":[{"id":4320,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4306,"src":"3166:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4321,"kind":"baseConstructorSpecifier","modifierName":{"id":4319,"name":"Ownable","nameLocations":["3158:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"3158:7:19"},"nodeType":"ModifierInvocation","src":"3158:21:19"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4306,"mutability":"mutable","name":"initialOwner","nameLocation":"2891:12:19","nodeType":"VariableDeclaration","scope":4483,"src":"2883:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4305,"name":"address","nodeType":"ElementaryTypeName","src":"2883:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4308,"mutability":"mutable","name":"taxHandlerAddress","nameLocation":"2913:17:19","nodeType":"VariableDeclaration","scope":4483,"src":"2905:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4307,"name":"address","nodeType":"ElementaryTypeName","src":"2905:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4310,"mutability":"mutable","name":"preservationProjectsVestingContract","nameLocation":"2940:35:19","nodeType":"VariableDeclaration","scope":4483,"src":"2932:43:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4309,"name":"address","nodeType":"ElementaryTypeName","src":"2932:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2882:94:19"},"returnParameters":{"id":4322,"nodeType":"ParameterList","parameters":[],"src":"3217:0:19"},"scope":4654,"src":"2871:2155:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4501,"nodeType":"Block","src":"5138:252:19","statements":[{"expression":{"arguments":[{"id":4490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5156:15:19","subExpression":{"id":4489,"name":"tradingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"5157:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4172617261436f696e2074726164696e6720616c726561647920656e61626c6564","id":4491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5173:35:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4","typeString":"literal_string \"AraraCoin trading already enabled\""},"value":"AraraCoin trading already enabled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4","typeString":"literal_string \"AraraCoin trading already enabled\""}],"id":4488,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5148:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5148:61:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4493,"nodeType":"ExpressionStatement","src":"5148:61:19"},{"expression":{"id":4496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4494,"name":"tradingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"5261:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5278:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5261:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4497,"nodeType":"ExpressionStatement","src":"5261:21:19"},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4498,"name":"TradingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4292,"src":"5323:14:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5323:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4500,"nodeType":"EmitStatement","src":"5318:21:19"}]},"functionSelector":"8a8c523c","id":4502,"implemented":true,"kind":"function","modifiers":[{"id":4486,"kind":"modifierInvocation","modifierName":{"id":4485,"name":"onlyOwner","nameLocations":["5128:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"5128:9:19"},"nodeType":"ModifierInvocation","src":"5128:9:19"}],"name":"enableTrading","nameLocation":"5103:13:19","nodeType":"FunctionDefinition","parameters":{"id":4484,"nodeType":"ParameterList","parameters":[],"src":"5116:2:19"},"returnParameters":{"id":4487,"nodeType":"ParameterList","parameters":[],"src":"5138:0:19"},"scope":4654,"src":"5094:296:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4527,"nodeType":"Block","src":"5544:323:19","statements":[{"assignments":[4510],"declarations":[{"constant":false,"id":4510,"mutability":"mutable","name":"oldTaxHandlerAddress","nameLocation":"5562:20:19","nodeType":"VariableDeclaration","scope":4527,"src":"5554:28:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4509,"name":"address","nodeType":"ElementaryTypeName","src":"5554:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4515,"initialValue":{"arguments":[{"id":4513,"name":"taxHandler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"5593:10:19","typeDescriptions":{"typeIdentifier":"t_contract$_ITaxHandler_$4670","typeString":"contract ITaxHandler"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ITaxHandler_$4670","typeString":"contract ITaxHandler"}],"id":4512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5585:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4511,"name":"address","nodeType":"ElementaryTypeName","src":"5585:7:19","typeDescriptions":{}}},"id":4514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5585:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5554:50:19"},{"expression":{"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4516,"name":"taxHandler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"5655:10:19","typeDescriptions":{"typeIdentifier":"t_contract$_ITaxHandler_$4670","typeString":"contract ITaxHandler"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4518,"name":"taxHandlerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4504,"src":"5680:17:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4517,"name":"ITaxHandler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"5668:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ITaxHandler_$4670_$","typeString":"type(contract ITaxHandler)"}},"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5668:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ITaxHandler_$4670","typeString":"contract ITaxHandler"}},"src":"5655:43:19","typeDescriptions":{"typeIdentifier":"t_contract$_ITaxHandler_$4670","typeString":"contract ITaxHandler"}},"id":4521,"nodeType":"ExpressionStatement","src":"5655:43:19"},{"eventCall":{"arguments":[{"id":4523,"name":"oldTaxHandlerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4510,"src":"5767:20:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4524,"name":"taxHandlerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4504,"src":"5789:17:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4522,"name":"TaxHandlerChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"5749:17:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":4525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5749:58:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4526,"nodeType":"EmitStatement","src":"5744:63:19"}]},"functionSelector":"488d4a51","id":4528,"implemented":true,"kind":"function","modifiers":[{"id":4507,"kind":"modifierInvocation","modifierName":{"id":4506,"name":"onlyOwner","nameLocations":["5534:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"5534:9:19"},"nodeType":"ModifierInvocation","src":"5534:9:19"}],"name":"setTaxHandler","nameLocation":"5484:13:19","nodeType":"FunctionDefinition","parameters":{"id":4505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4504,"mutability":"mutable","name":"taxHandlerAddress","nameLocation":"5506:17:19","nodeType":"VariableDeclaration","scope":4528,"src":"5498:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4503,"name":"address","nodeType":"ElementaryTypeName","src":"5498:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5497:27:19"},"returnParameters":{"id":4508,"nodeType":"ParameterList","parameters":[],"src":"5544:0:19"},"scope":4654,"src":"5475:392:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4548,"nodeType":"Block","src":"6017:284:19","statements":[{"assignments":[4536],"declarations":[{"constant":false,"id":4536,"mutability":"mutable","name":"oldTaxWalletAddress","nameLocation":"6035:19:19","nodeType":"VariableDeclaration","scope":4548,"src":"6027:27:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4535,"name":"address","nodeType":"ElementaryTypeName","src":"6027:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4538,"initialValue":{"id":4537,"name":"taxWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"6057:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6027:39:19"},{"expression":{"id":4541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4539,"name":"taxWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"6116:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4540,"name":"taxWalletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"6128:16:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6116:28:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4542,"nodeType":"ExpressionStatement","src":"6116:28:19"},{"eventCall":{"arguments":[{"id":4544,"name":"oldTaxWalletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"6211:19:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4545,"name":"taxWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"6232:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4543,"name":"TaxWalletChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"6194:16:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":4546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6194:48:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4547,"nodeType":"EmitStatement","src":"6189:53:19"}]},"functionSelector":"ea414b28","id":4549,"implemented":true,"kind":"function","modifiers":[{"id":4533,"kind":"modifierInvocation","modifierName":{"id":4532,"name":"onlyOwner","nameLocations":["6007:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"6007:9:19"},"nodeType":"ModifierInvocation","src":"6007:9:19"}],"name":"setTaxWallet","nameLocation":"5959:12:19","nodeType":"FunctionDefinition","parameters":{"id":4531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4530,"mutability":"mutable","name":"taxWalletAddress","nameLocation":"5980:16:19","nodeType":"VariableDeclaration","scope":4549,"src":"5972:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4529,"name":"address","nodeType":"ElementaryTypeName","src":"5972:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5971:26:19"},"returnParameters":{"id":4534,"nodeType":"ParameterList","parameters":[],"src":"6017:0:19"},"scope":4654,"src":"5950:351:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4592,"nodeType":"Block","src":"6511:443:19","statements":[{"expression":{"arguments":[{"id":4559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6529:15:19","subExpression":{"id":4558,"name":"tradingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"6530:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4172617261436f696e2074726164696e6720616c726561647920656e61626c6564","id":4560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6546:35:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4","typeString":"literal_string \"AraraCoin trading already enabled\""},"value":"AraraCoin trading already enabled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4","typeString":"literal_string \"AraraCoin trading already enabled\""}],"id":4557,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6521:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6521:61:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4562,"nodeType":"ExpressionStatement","src":"6521:61:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4564,"name":"allowedAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"6636:16:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6653:6:19","memberName":"length","nodeType":"MemberAccess","src":"6636:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6663:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6636:28:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4172617261436f696e20696e76616c696420706172616d6574657273","id":4568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6666:30:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_21ef6b7918317f335757be4f30c7408f457723a97602be12bce7361115dd17f9","typeString":"literal_string \"AraraCoin invalid parameters\""},"value":"AraraCoin invalid parameters"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_21ef6b7918317f335757be4f30c7408f457723a97602be12bce7361115dd17f9","typeString":"literal_string \"AraraCoin invalid parameters\""}],"id":4563,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6628:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6628:69:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4570,"nodeType":"ExpressionStatement","src":"6628:69:19"},{"body":{"id":4590,"nodeType":"Block","src":"6889:59:19","statements":[{"expression":{"arguments":[{"baseExpression":{"id":4585,"name":"allowedAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"6917:16:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4587,"indexExpression":{"id":4586,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"6934:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6917:19:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4582,"name":"_canTrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4290,"src":"6903:9:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":4584,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6913:3:19","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":3959,"src":"6903:13:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$3932_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$3932_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6903:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4589,"nodeType":"ExpressionStatement","src":"6903:34:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4575,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"6855:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4576,"name":"allowedAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"6859:16:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6876:6:19","memberName":"length","nodeType":"MemberAccess","src":"6859:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6855:27:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4591,"initializationExpression":{"assignments":[4572],"declarations":[{"constant":false,"id":4572,"mutability":"mutable","name":"i","nameLocation":"6848:1:19","nodeType":"VariableDeclaration","scope":4591,"src":"6840:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4571,"name":"uint256","nodeType":"ElementaryTypeName","src":"6840:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4574,"initialValue":{"hexValue":"30","id":4573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6852:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6840:13:19"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6884:3:19","subExpression":{"id":4579,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"6884:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4581,"nodeType":"ExpressionStatement","src":"6884:3:19"},"nodeType":"ForStatement","src":"6835:113:19"}]},"functionSelector":"ca40f1c4","id":4593,"implemented":true,"kind":"function","modifiers":[{"id":4555,"kind":"modifierInvocation","modifierName":{"id":4554,"name":"onlyOwner","nameLocations":["6501:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"6501:9:19"},"nodeType":"ModifierInvocation","src":"6501:9:19"}],"name":"addCanTrade","nameLocation":"6429:11:19","nodeType":"FunctionDefinition","parameters":{"id":4553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4552,"mutability":"mutable","name":"allowedAddresses","nameLocation":"6469:16:19","nodeType":"VariableDeclaration","scope":4593,"src":"6450:35:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4550,"name":"address","nodeType":"ElementaryTypeName","src":"6450:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4551,"nodeType":"ArrayTypeName","src":"6450:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"6440:51:19"},"returnParameters":{"id":4556,"nodeType":"ParameterList","parameters":[],"src":"6511:0:19"},"scope":4654,"src":"6420:534:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[631],"body":{"id":4652,"nodeType":"Block","src":"7133:638:19","statements":[{"condition":{"id":4605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7227:15:19","subExpression":{"id":4604,"name":"tradingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"7228:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4615,"nodeType":"IfStatement","src":"7223:110:19","trueBody":{"id":4614,"nodeType":"Block","src":"7244:89:19","statements":[{"expression":{"arguments":[{"arguments":[{"id":4609,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"7285:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4607,"name":"_canTrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4290,"src":"7266:9:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3932_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":4608,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7276:8:19","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":4013,"src":"7266:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$3932_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$3932_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"}},"id":4610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7266:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4172617261436f696e2074726164652069732064697361626c6564","id":4611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7292:29:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7","typeString":"literal_string \"AraraCoin trade is disabled\""},"value":"AraraCoin trade is disabled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7","typeString":"literal_string \"AraraCoin trade is disabled\""}],"id":4606,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7258:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7258:64:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4613,"nodeType":"ExpressionStatement","src":"7258:64:19"}]}},{"assignments":[4617],"declarations":[{"constant":false,"id":4617,"mutability":"mutable","name":"tax","nameLocation":"7422:3:19","nodeType":"VariableDeclaration","scope":4652,"src":"7414:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4616,"name":"uint256","nodeType":"ElementaryTypeName","src":"7414:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4624,"initialValue":{"arguments":[{"id":4620,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"7446:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4621,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"7452:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"7456:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4618,"name":"taxHandler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"7428:10:19","typeDescriptions":{"typeIdentifier":"t_contract$_ITaxHandler_$4670","typeString":"contract ITaxHandler"}},"id":4619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7439:6:19","memberName":"getTax","nodeType":"MemberAccess","referencedDeclaration":4669,"src":"7428:17:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view external returns (uint256)"}},"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7428:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7414:48:19"},{"assignments":[4626],"declarations":[{"constant":false,"id":4626,"mutability":"mutable","name":"taxedAmount","nameLocation":"7480:11:19","nodeType":"VariableDeclaration","scope":4652,"src":"7472:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4625,"name":"uint256","nodeType":"ElementaryTypeName","src":"7472:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4630,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"7494:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4628,"name":"tax","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4617,"src":"7502:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7494:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7472:33:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4631,"name":"tax","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4617,"src":"7592:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7598:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7592:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4643,"nodeType":"IfStatement","src":"7588:73:19","trueBody":{"id":4642,"nodeType":"Block","src":"7601:60:19","statements":[{"expression":{"arguments":[{"id":4637,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"7629:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4638,"name":"taxWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"7635:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4639,"name":"tax","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4617,"src":"7646:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4634,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7615:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AraraCoin_$4654_$","typeString":"type(contract super AraraCoin)"}},"id":4636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7621:7:19","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":631,"src":"7615:13:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7615:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4641,"nodeType":"ExpressionStatement","src":"7615:35:19"}]}},{"expression":{"arguments":[{"id":4647,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"7742:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4648,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"7748:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4649,"name":"taxedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4626,"src":"7752:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4644,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7728:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AraraCoin_$4654_$","typeString":"type(contract super AraraCoin)"}},"id":4646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7734:7:19","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":631,"src":"7728:13:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7728:36:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4651,"nodeType":"ExpressionStatement","src":"7728:36:19"}]},"id":4653,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"7037:7:19","nodeType":"FunctionDefinition","overrides":{"id":4602,"nodeType":"OverrideSpecifier","overrides":[{"id":4601,"name":"ERC20","nameLocations":["7121:5:19"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"7121:5:19"}],"src":"7112:15:19"},"parameters":{"id":4600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4595,"mutability":"mutable","name":"from","nameLocation":"7053:4:19","nodeType":"VariableDeclaration","scope":4653,"src":"7045:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4594,"name":"address","nodeType":"ElementaryTypeName","src":"7045:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4597,"mutability":"mutable","name":"to","nameLocation":"7067:2:19","nodeType":"VariableDeclaration","scope":4653,"src":"7059:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4596,"name":"address","nodeType":"ElementaryTypeName","src":"7059:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4599,"mutability":"mutable","name":"value","nameLocation":"7079:5:19","nodeType":"VariableDeclaration","scope":4653,"src":"7071:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4598,"name":"uint256","nodeType":"ElementaryTypeName","src":"7071:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7044:41:19"},"returnParameters":{"id":4603,"nodeType":"ParameterList","parameters":[],"src":"7133:0:19"},"scope":4654,"src":"7028:743:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":4655,"src":"608:7165:19","usedErrors":[13,18,184,189,194,203,208,213,933,940,1158,1230,1232,1809,1814,1819],"usedEvents":[24,152,836,845,4292,4298,4304]}],"src":"106:7668:19"},"id":19},"contracts/tax/ITaxHandler.sol":{"ast":{"absolutePath":"contracts/tax/ITaxHandler.sol","exportedSymbols":{"ITaxHandler":[4670]},"id":4671,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4656,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"ITaxHandler","contractDependencies":[],"contractKind":"interface","documentation":{"id":4657,"nodeType":"StructuredDocumentation","src":"58:140:20","text":" @title Tax handler interface\n @dev Any class that implements this interface can be used for protocol-specific tax calculations."},"fullyImplemented":false,"id":4670,"linearizedBaseContracts":[4670],"name":"ITaxHandler","nameLocation":"209:11:20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4658,"nodeType":"StructuredDocumentation","src":"227:270:20","text":" @notice Get number of tokens to pay as tax.\n @param benefactor Address of the benefactor.\n @param beneficiary Address of the beneficiary.\n @param amount Number of tokens in the transfer.\n @return Number of tokens to pay as tax."},"functionSelector":"d7ad21ac","id":4669,"implemented":false,"kind":"function","modifiers":[],"name":"getTax","nameLocation":"511:6:20","nodeType":"FunctionDefinition","parameters":{"id":4665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4660,"mutability":"mutable","name":"benefactor","nameLocation":"535:10:20","nodeType":"VariableDeclaration","scope":4669,"src":"527:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4659,"name":"address","nodeType":"ElementaryTypeName","src":"527:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4662,"mutability":"mutable","name":"beneficiary","nameLocation":"563:11:20","nodeType":"VariableDeclaration","scope":4669,"src":"555:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4661,"name":"address","nodeType":"ElementaryTypeName","src":"555:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4664,"mutability":"mutable","name":"amount","nameLocation":"592:6:20","nodeType":"VariableDeclaration","scope":4669,"src":"584:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4663,"name":"uint256","nodeType":"ElementaryTypeName","src":"584:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"517:87:20"},"returnParameters":{"id":4668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4667,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4669,"src":"628:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4666,"name":"uint256","nodeType":"ElementaryTypeName","src":"628:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"627:9:20"},"scope":4670,"src":"502:135:20","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4671,"src":"199:440:20","usedErrors":[],"usedEvents":[]}],"src":"32:607:20"},"id":20}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Nonces.sol":{"Nonces":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cfec0fdf9ffd764137a8d2e0ca2307a36b05be155fbb680fced6c37e5277843964736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF 0xEC 0xF 0xDF SWAP16 REVERT PUSH23 0x4137A8D2E0CA2307A36B05BE155FBB680FCED6C37E5277 DUP5 CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1255:3053:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cfec0fdf9ffd764137a8d2e0ca2307a36b05be155fbb680fced6c37e5277843964736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF 0xEC 0xF 0xDF SWAP16 REVERT PUSH23 0x4137A8D2E0CA2307A36B05BE155FBB680FCED6C37E5277 DUP5 CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1255:3053:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200d9d594500b0633db8c36b486b2e5bd19779e3026132b93582c791873a3dee9064736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD SWAP14 MSIZE GASLIMIT STOP 0xB0 PUSH4 0x3DB8C36B BASEFEE PUSH12 0x2E5BD19779E3026132B93582 0xC7 SWAP2 DUP8 GASPRICE RETURNDATASIZE 0xEE SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1245:2685:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200d9d594500b0633db8c36b486b2e5bd19779e3026132b93582c791873a3dee9064736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD SWAP14 MSIZE GASLIMIT STOP 0xB0 PUSH4 0x3DB8C36B BASEFEE PUSH12 0x2E5BD19779E3026132B93582 0xC7 SWAP2 DUP8 GASPRICE RETURNDATASIZE 0xEE SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1245:2685:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122022ea8e82b761ff0f2c8fae5d36bcca20db5176a1081cc893147086b57be5cf8f64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xEA DUP15 DUP3 0xB7 PUSH2 0xFF0F 0x2C DUP16 0xAE TSTORE CALLDATASIZE 0xBC 0xCA KECCAK256 0xDB MLOAD PUSH23 0xA1081CC893147086B57BE5CF8F64736F6C634300081800 CALLER ","sourceMap":"251:2847:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122022ea8e82b761ff0f2c8fae5d36bcca20db5176a1081cc893147086b57be5cf8f64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xEA DUP15 DUP3 0xB7 PUSH2 0xFF0F 0x2C DUP16 0xAE TSTORE CALLDATASIZE 0xBC 0xCA KECCAK256 0xDB MLOAD PUSH23 0xA1081CC893147086B57BE5CF8F64736F6C634300081800 CALLER ","sourceMap":"251:2847:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a0f0af1e89f3ddbdff57fa81e414c48e503c1b1d880410ba3858747441326c1664736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 CREATE 0xAF 0x1E DUP10 RETURN 0xDD 0xBD SELFDESTRUCT JUMPI STATICCALL DUP2 0xE4 EQ 0xC4 DUP15 POP EXTCODECOPY SHL SAR DUP9 DIV LT 0xBA CODESIZE PC PUSH21 0x7441326C1664736F6C634300081800330000000000 ","sourceMap":"344:7386:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a0f0af1e89f3ddbdff57fa81e414c48e503c1b1d880410ba3858747441326c1664736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 CREATE 0xAF 0x1E DUP10 RETURN 0xDD 0xBD SELFDESTRUCT JUMPI STATICCALL DUP2 0xE4 EQ 0xC4 DUP15 POP EXTCODECOPY SHL SAR DUP9 DIV LT 0xBA CODESIZE PC PUSH21 0x7441326C1664736F6C634300081800330000000000 ","sourceMap":"344:7386:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bdf6ac08341bc2c8c72c89b479b09c45d1cc23f4b55e7965962b8679a082214a64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0xF6 0xAC ADDMOD CALLVALUE SHL 0xC2 0xC8 0xC7 0x2C DUP10 0xB4 PUSH26 0xB09C45D1CC23F4B55E7965962B8679A082214A64736F6C634300 ADDMOD XOR STOP CALLER ","sourceMap":"521:3235:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bdf6ac08341bc2c8c72c89b479b09c45d1cc23f4b55e7965962b8679a082214a64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0xF6 0xAC ADDMOD CALLVALUE SHL 0xC2 0xC8 0xC7 0x2C DUP10 0xB4 PUSH26 0xB09C45D1CC23F4B55E7965962B8679A082214A64736F6C634300 ADDMOD XOR STOP CALLER ","sourceMap":"521:3235:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205f1847e716d326528b8b9324e0228d1e4971145e5ba1173b4269248a23a4838564736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH0 XOR SELFBALANCE 0xE7 AND 0xD3 0x26 MSTORE DUP12 DUP12 SWAP4 0x24 0xE0 0x22 DUP14 0x1E BLOBHASH PUSH18 0x145E5BA1173B4269248A23A4838564736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"203:14914:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205f1847e716d326528b8b9324e0228d1e4971145e5ba1173b4269248a23a4838564736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH0 XOR SELFBALANCE 0xE7 AND 0xD3 0x26 MSTORE DUP12 DUP12 SWAP4 0x24 0xE0 0x22 DUP14 0x1E BLOBHASH PUSH18 0x145E5BA1173B4269248A23A4838564736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"203:14914:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209275fb1eb703f1ada4f4ce7bacc8dfe6c85df9651d82c9adda1c7e92c94ddc8464736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 PUSH22 0xFB1EB703F1ADA4F4CE7BACC8DFE6C85DF9651D82C9AD 0xDA SHR PUSH31 0x92C94DDC8464736F6C63430008180033000000000000000000000000000000 ","sourceMap":"216:1047:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209275fb1eb703f1ada4f4ce7bacc8dfe6c85df9651d82c9adda1c7e92c94ddc8464736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 PUSH22 0xFB1EB703F1ADA4F4CE7BACC8DFE6C85DF9651D82C9AD 0xDA SHR PUSH31 0x92C94DDC8464736F6C63430008180033000000000000000000000000000000 ","sourceMap":"216:1047:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fc5d1723b91d94412ddf31a27681e58d7fea5f8cde80092c9e6170733b5de0ff64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC TSTORE OR 0x23 0xB9 SAR SWAP5 COINBASE 0x2D 0xDF BALANCE LOG2 PUSH23 0x81E58D7FEA5F8CDE80092C9E6170733B5DE0FF64736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"1330:11640:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fc5d1723b91d94412ddf31a27681e58d7fea5f8cde80092c9e6170733b5de0ff64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC TSTORE OR 0x23 0xB9 SAR SWAP5 COINBASE 0x2D 0xDF BALANCE LOG2 PUSH23 0x81E58D7FEA5F8CDE80092C9E6170733B5DE0FF64736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"1330:11640:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]}},\"version\":1}"}},"contracts/AraraCoin.sol":{"AraraCoin":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"},{"internalType":"address","name":"taxHandlerAddress","type":"address"},{"internalType":"address","name":"preservationProjectsVestingContract","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":false,"internalType":"address","name":"newAddress","type":"address"}],"name":"TaxHandlerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":false,"internalType":"address","name":"newAddress","type":"address"}],"name":"TaxWalletChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"TradingEnabled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"allowedAddresses","type":"address[]"}],"name":"addCanTrade","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"auditWallet","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"companyVestingWallet","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"consultingWallet","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"enableTrading","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"foundersVestingWallet","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"investorsWallet","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"investorsYearOneVestingWallet","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"investorsYearTwoVestingWallet","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"launchWallet","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"marketingWallet","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"preSaleWallet","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"preservationProjectsVestingWallet","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"taxHandlerAddress","type":"address"}],"name":"setTaxHandler","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"taxWalletAddress","type":"address"}],"name":"setTaxWallet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"taxHandler","outputs":[{"internalType":"contract ITaxHandler","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"taxWallet","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"teamVestingWallet","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tradingEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_2243":{"entryPoint":null,"id":2243,"parameterSlots":2,"returnSlots":0},"@_361":{"entryPoint":null,"id":361,"parameterSlots":2,"returnSlots":0},"@_4483":{"entryPoint":null,"id":4483,"parameterSlots":3,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_951":{"entryPoint":null,"id":951,"parameterSlots":1,"returnSlots":0},"@_add_3659":{"entryPoint":3667,"id":3659,"parameterSlots":2,"returnSlots":1},"@_buildDomainSeparator_2290":{"entryPoint":2802,"id":2290,"parameterSlots":0,"returnSlots":1},"@_contains_3762":{"entryPoint":4176,"id":3762,"parameterSlots":2,"returnSlots":1},"@_mint_664":{"entryPoint":3149,"id":664,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":2895,"id":146,"parameterSlots":1,"returnSlots":0},"@_transfer_554":{"entryPoint":3290,"id":554,"parameterSlots":3,"returnSlots":0},"@_update_4653":{"entryPoint":3789,"id":4653,"parameterSlots":3,"returnSlots":0},"@_update_631":{"entryPoint":4267,"id":631,"parameterSlots":3,"returnSlots":0},"@add_3959":{"entryPoint":3093,"id":3959,"parameterSlots":2,"returnSlots":1},"@contains_4013":{"entryPoint":4211,"id":4013,"parameterSlots":2,"returnSlots":1},"@getStringSlot_1520":{"entryPoint":3657,"id":1520,"parameterSlots":1,"returnSlots":1},"@toShortStringWithFallback_1374":{"entryPoint":2714,"id":1374,"parameterSlots":2,"returnSlots":1},"@toShortString_1276":{"entryPoint":3548,"id":1276,"parameterSlots":1,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":4910,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":6840,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_address_fromMemory":{"entryPoint":4933,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":6863,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5890,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":6171,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":6376,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7_to_t_string_memory_ptr_fromStack":{"entryPoint":6680,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6188,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5907,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":6753,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":7031,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":6205,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6441,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6719,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":7092,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_bytes_memory_ptr":{"entryPoint":6488,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":5183,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":6477,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":5025,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6298,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":6972,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":6105,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":5983,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":6913,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":5504,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":4864,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":6161,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":4832,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5319,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":5465,"id":null,"parameterSlots":2,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":6527,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":5339,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":5659,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":6315,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":5204,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":5130,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":5629,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":5329,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":5597,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":5936,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":6058,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":5083,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5036,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":5379,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":6504,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":4827,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":6359,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":5220,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":5584,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":5437,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7":{"entryPoint":6639,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":5233,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":5389,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":4884,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":6814,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":5432,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:14428:21","nodeType":"YulBlock","src":"0:14428:21","statements":[{"body":{"nativeSrc":"47:35:21","nodeType":"YulBlock","src":"47:35:21","statements":[{"nativeSrc":"57:19:21","nodeType":"YulAssignment","src":"57:19:21","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:21","nodeType":"YulLiteral","src":"73:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:21","nodeType":"YulIdentifier","src":"67:5:21"},"nativeSrc":"67:9:21","nodeType":"YulFunctionCall","src":"67:9:21"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:21","nodeType":"YulIdentifier","src":"57:6:21"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:21","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:21","nodeType":"YulTypedName","src":"40:6:21","type":""}],"src":"7:75:21"},{"body":{"nativeSrc":"177:28:21","nodeType":"YulBlock","src":"177:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:21","nodeType":"YulLiteral","src":"194:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:21","nodeType":"YulLiteral","src":"197:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:21","nodeType":"YulIdentifier","src":"187:6:21"},"nativeSrc":"187:12:21","nodeType":"YulFunctionCall","src":"187:12:21"},"nativeSrc":"187:12:21","nodeType":"YulExpressionStatement","src":"187:12:21"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:21","nodeType":"YulFunctionDefinition","src":"88:117:21"},{"body":{"nativeSrc":"300:28:21","nodeType":"YulBlock","src":"300:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:21","nodeType":"YulLiteral","src":"317:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:21","nodeType":"YulLiteral","src":"320:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:21","nodeType":"YulIdentifier","src":"310:6:21"},"nativeSrc":"310:12:21","nodeType":"YulFunctionCall","src":"310:12:21"},"nativeSrc":"310:12:21","nodeType":"YulExpressionStatement","src":"310:12:21"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:21","nodeType":"YulFunctionDefinition","src":"211:117:21"},{"body":{"nativeSrc":"379:81:21","nodeType":"YulBlock","src":"379:81:21","statements":[{"nativeSrc":"389:65:21","nodeType":"YulAssignment","src":"389:65:21","value":{"arguments":[{"name":"value","nativeSrc":"404:5:21","nodeType":"YulIdentifier","src":"404:5:21"},{"kind":"number","nativeSrc":"411:42:21","nodeType":"YulLiteral","src":"411:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:21","nodeType":"YulIdentifier","src":"400:3:21"},"nativeSrc":"400:54:21","nodeType":"YulFunctionCall","src":"400:54:21"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:21","nodeType":"YulIdentifier","src":"389:7:21"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:21","nodeType":"YulTypedName","src":"361:5:21","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:21","nodeType":"YulTypedName","src":"371:7:21","type":""}],"src":"334:126:21"},{"body":{"nativeSrc":"511:51:21","nodeType":"YulBlock","src":"511:51:21","statements":[{"nativeSrc":"521:35:21","nodeType":"YulAssignment","src":"521:35:21","value":{"arguments":[{"name":"value","nativeSrc":"550:5:21","nodeType":"YulIdentifier","src":"550:5:21"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:21","nodeType":"YulIdentifier","src":"532:17:21"},"nativeSrc":"532:24:21","nodeType":"YulFunctionCall","src":"532:24:21"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:21","nodeType":"YulIdentifier","src":"521:7:21"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:21","nodeType":"YulTypedName","src":"493:5:21","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:21","nodeType":"YulTypedName","src":"503:7:21","type":""}],"src":"466:96:21"},{"body":{"nativeSrc":"611:79:21","nodeType":"YulBlock","src":"611:79:21","statements":[{"body":{"nativeSrc":"668:16:21","nodeType":"YulBlock","src":"668:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:21","nodeType":"YulLiteral","src":"677:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:21","nodeType":"YulLiteral","src":"680:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:21","nodeType":"YulIdentifier","src":"670:6:21"},"nativeSrc":"670:12:21","nodeType":"YulFunctionCall","src":"670:12:21"},"nativeSrc":"670:12:21","nodeType":"YulExpressionStatement","src":"670:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:21","nodeType":"YulIdentifier","src":"634:5:21"},{"arguments":[{"name":"value","nativeSrc":"659:5:21","nodeType":"YulIdentifier","src":"659:5:21"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:21","nodeType":"YulIdentifier","src":"641:17:21"},"nativeSrc":"641:24:21","nodeType":"YulFunctionCall","src":"641:24:21"}],"functionName":{"name":"eq","nativeSrc":"631:2:21","nodeType":"YulIdentifier","src":"631:2:21"},"nativeSrc":"631:35:21","nodeType":"YulFunctionCall","src":"631:35:21"}],"functionName":{"name":"iszero","nativeSrc":"624:6:21","nodeType":"YulIdentifier","src":"624:6:21"},"nativeSrc":"624:43:21","nodeType":"YulFunctionCall","src":"624:43:21"},"nativeSrc":"621:63:21","nodeType":"YulIf","src":"621:63:21"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:21","nodeType":"YulTypedName","src":"604:5:21","type":""}],"src":"568:122:21"},{"body":{"nativeSrc":"759:80:21","nodeType":"YulBlock","src":"759:80:21","statements":[{"nativeSrc":"769:22:21","nodeType":"YulAssignment","src":"769:22:21","value":{"arguments":[{"name":"offset","nativeSrc":"784:6:21","nodeType":"YulIdentifier","src":"784:6:21"}],"functionName":{"name":"mload","nativeSrc":"778:5:21","nodeType":"YulIdentifier","src":"778:5:21"},"nativeSrc":"778:13:21","nodeType":"YulFunctionCall","src":"778:13:21"},"variableNames":[{"name":"value","nativeSrc":"769:5:21","nodeType":"YulIdentifier","src":"769:5:21"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"827:5:21","nodeType":"YulIdentifier","src":"827:5:21"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"800:26:21","nodeType":"YulIdentifier","src":"800:26:21"},"nativeSrc":"800:33:21","nodeType":"YulFunctionCall","src":"800:33:21"},"nativeSrc":"800:33:21","nodeType":"YulExpressionStatement","src":"800:33:21"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"696:143:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"737:6:21","nodeType":"YulTypedName","src":"737:6:21","type":""},{"name":"end","nativeSrc":"745:3:21","nodeType":"YulTypedName","src":"745:3:21","type":""}],"returnVariables":[{"name":"value","nativeSrc":"753:5:21","nodeType":"YulTypedName","src":"753:5:21","type":""}],"src":"696:143:21"},{"body":{"nativeSrc":"956:552:21","nodeType":"YulBlock","src":"956:552:21","statements":[{"body":{"nativeSrc":"1002:83:21","nodeType":"YulBlock","src":"1002:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1004:77:21","nodeType":"YulIdentifier","src":"1004:77:21"},"nativeSrc":"1004:79:21","nodeType":"YulFunctionCall","src":"1004:79:21"},"nativeSrc":"1004:79:21","nodeType":"YulExpressionStatement","src":"1004:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"977:7:21","nodeType":"YulIdentifier","src":"977:7:21"},{"name":"headStart","nativeSrc":"986:9:21","nodeType":"YulIdentifier","src":"986:9:21"}],"functionName":{"name":"sub","nativeSrc":"973:3:21","nodeType":"YulIdentifier","src":"973:3:21"},"nativeSrc":"973:23:21","nodeType":"YulFunctionCall","src":"973:23:21"},{"kind":"number","nativeSrc":"998:2:21","nodeType":"YulLiteral","src":"998:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"969:3:21","nodeType":"YulIdentifier","src":"969:3:21"},"nativeSrc":"969:32:21","nodeType":"YulFunctionCall","src":"969:32:21"},"nativeSrc":"966:119:21","nodeType":"YulIf","src":"966:119:21"},{"nativeSrc":"1095:128:21","nodeType":"YulBlock","src":"1095:128:21","statements":[{"nativeSrc":"1110:15:21","nodeType":"YulVariableDeclaration","src":"1110:15:21","value":{"kind":"number","nativeSrc":"1124:1:21","nodeType":"YulLiteral","src":"1124:1:21","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1114:6:21","nodeType":"YulTypedName","src":"1114:6:21","type":""}]},{"nativeSrc":"1139:74:21","nodeType":"YulAssignment","src":"1139:74:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1185:9:21","nodeType":"YulIdentifier","src":"1185:9:21"},{"name":"offset","nativeSrc":"1196:6:21","nodeType":"YulIdentifier","src":"1196:6:21"}],"functionName":{"name":"add","nativeSrc":"1181:3:21","nodeType":"YulIdentifier","src":"1181:3:21"},"nativeSrc":"1181:22:21","nodeType":"YulFunctionCall","src":"1181:22:21"},{"name":"dataEnd","nativeSrc":"1205:7:21","nodeType":"YulIdentifier","src":"1205:7:21"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1149:31:21","nodeType":"YulIdentifier","src":"1149:31:21"},"nativeSrc":"1149:64:21","nodeType":"YulFunctionCall","src":"1149:64:21"},"variableNames":[{"name":"value0","nativeSrc":"1139:6:21","nodeType":"YulIdentifier","src":"1139:6:21"}]}]},{"nativeSrc":"1233:129:21","nodeType":"YulBlock","src":"1233:129:21","statements":[{"nativeSrc":"1248:16:21","nodeType":"YulVariableDeclaration","src":"1248:16:21","value":{"kind":"number","nativeSrc":"1262:2:21","nodeType":"YulLiteral","src":"1262:2:21","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1252:6:21","nodeType":"YulTypedName","src":"1252:6:21","type":""}]},{"nativeSrc":"1278:74:21","nodeType":"YulAssignment","src":"1278:74:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1324:9:21","nodeType":"YulIdentifier","src":"1324:9:21"},{"name":"offset","nativeSrc":"1335:6:21","nodeType":"YulIdentifier","src":"1335:6:21"}],"functionName":{"name":"add","nativeSrc":"1320:3:21","nodeType":"YulIdentifier","src":"1320:3:21"},"nativeSrc":"1320:22:21","nodeType":"YulFunctionCall","src":"1320:22:21"},{"name":"dataEnd","nativeSrc":"1344:7:21","nodeType":"YulIdentifier","src":"1344:7:21"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1288:31:21","nodeType":"YulIdentifier","src":"1288:31:21"},"nativeSrc":"1288:64:21","nodeType":"YulFunctionCall","src":"1288:64:21"},"variableNames":[{"name":"value1","nativeSrc":"1278:6:21","nodeType":"YulIdentifier","src":"1278:6:21"}]}]},{"nativeSrc":"1372:129:21","nodeType":"YulBlock","src":"1372:129:21","statements":[{"nativeSrc":"1387:16:21","nodeType":"YulVariableDeclaration","src":"1387:16:21","value":{"kind":"number","nativeSrc":"1401:2:21","nodeType":"YulLiteral","src":"1401:2:21","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"1391:6:21","nodeType":"YulTypedName","src":"1391:6:21","type":""}]},{"nativeSrc":"1417:74:21","nodeType":"YulAssignment","src":"1417:74:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1463:9:21","nodeType":"YulIdentifier","src":"1463:9:21"},{"name":"offset","nativeSrc":"1474:6:21","nodeType":"YulIdentifier","src":"1474:6:21"}],"functionName":{"name":"add","nativeSrc":"1459:3:21","nodeType":"YulIdentifier","src":"1459:3:21"},"nativeSrc":"1459:22:21","nodeType":"YulFunctionCall","src":"1459:22:21"},{"name":"dataEnd","nativeSrc":"1483:7:21","nodeType":"YulIdentifier","src":"1483:7:21"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1427:31:21","nodeType":"YulIdentifier","src":"1427:31:21"},"nativeSrc":"1427:64:21","nodeType":"YulFunctionCall","src":"1427:64:21"},"variableNames":[{"name":"value2","nativeSrc":"1417:6:21","nodeType":"YulIdentifier","src":"1417:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_address_fromMemory","nativeSrc":"845:663:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"910:9:21","nodeType":"YulTypedName","src":"910:9:21","type":""},{"name":"dataEnd","nativeSrc":"921:7:21","nodeType":"YulTypedName","src":"921:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"933:6:21","nodeType":"YulTypedName","src":"933:6:21","type":""},{"name":"value1","nativeSrc":"941:6:21","nodeType":"YulTypedName","src":"941:6:21","type":""},{"name":"value2","nativeSrc":"949:6:21","nodeType":"YulTypedName","src":"949:6:21","type":""}],"src":"845:663:21"},{"body":{"nativeSrc":"1573:40:21","nodeType":"YulBlock","src":"1573:40:21","statements":[{"nativeSrc":"1584:22:21","nodeType":"YulAssignment","src":"1584:22:21","value":{"arguments":[{"name":"value","nativeSrc":"1600:5:21","nodeType":"YulIdentifier","src":"1600:5:21"}],"functionName":{"name":"mload","nativeSrc":"1594:5:21","nodeType":"YulIdentifier","src":"1594:5:21"},"nativeSrc":"1594:12:21","nodeType":"YulFunctionCall","src":"1594:12:21"},"variableNames":[{"name":"length","nativeSrc":"1584:6:21","nodeType":"YulIdentifier","src":"1584:6:21"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"1514:99:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1556:5:21","nodeType":"YulTypedName","src":"1556:5:21","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1566:6:21","nodeType":"YulTypedName","src":"1566:6:21","type":""}],"src":"1514:99:21"},{"body":{"nativeSrc":"1647:152:21","nodeType":"YulBlock","src":"1647:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1664:1:21","nodeType":"YulLiteral","src":"1664:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1667:77:21","nodeType":"YulLiteral","src":"1667:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1657:6:21","nodeType":"YulIdentifier","src":"1657:6:21"},"nativeSrc":"1657:88:21","nodeType":"YulFunctionCall","src":"1657:88:21"},"nativeSrc":"1657:88:21","nodeType":"YulExpressionStatement","src":"1657:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1761:1:21","nodeType":"YulLiteral","src":"1761:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"1764:4:21","nodeType":"YulLiteral","src":"1764:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"1754:6:21","nodeType":"YulIdentifier","src":"1754:6:21"},"nativeSrc":"1754:15:21","nodeType":"YulFunctionCall","src":"1754:15:21"},"nativeSrc":"1754:15:21","nodeType":"YulExpressionStatement","src":"1754:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1785:1:21","nodeType":"YulLiteral","src":"1785:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1788:4:21","nodeType":"YulLiteral","src":"1788:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1778:6:21","nodeType":"YulIdentifier","src":"1778:6:21"},"nativeSrc":"1778:15:21","nodeType":"YulFunctionCall","src":"1778:15:21"},"nativeSrc":"1778:15:21","nodeType":"YulExpressionStatement","src":"1778:15:21"}]},"name":"panic_error_0x41","nativeSrc":"1619:180:21","nodeType":"YulFunctionDefinition","src":"1619:180:21"},{"body":{"nativeSrc":"1833:152:21","nodeType":"YulBlock","src":"1833:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1850:1:21","nodeType":"YulLiteral","src":"1850:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1853:77:21","nodeType":"YulLiteral","src":"1853:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1843:6:21","nodeType":"YulIdentifier","src":"1843:6:21"},"nativeSrc":"1843:88:21","nodeType":"YulFunctionCall","src":"1843:88:21"},"nativeSrc":"1843:88:21","nodeType":"YulExpressionStatement","src":"1843:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1947:1:21","nodeType":"YulLiteral","src":"1947:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"1950:4:21","nodeType":"YulLiteral","src":"1950:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"1940:6:21","nodeType":"YulIdentifier","src":"1940:6:21"},"nativeSrc":"1940:15:21","nodeType":"YulFunctionCall","src":"1940:15:21"},"nativeSrc":"1940:15:21","nodeType":"YulExpressionStatement","src":"1940:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1971:1:21","nodeType":"YulLiteral","src":"1971:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1974:4:21","nodeType":"YulLiteral","src":"1974:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1964:6:21","nodeType":"YulIdentifier","src":"1964:6:21"},"nativeSrc":"1964:15:21","nodeType":"YulFunctionCall","src":"1964:15:21"},"nativeSrc":"1964:15:21","nodeType":"YulExpressionStatement","src":"1964:15:21"}]},"name":"panic_error_0x22","nativeSrc":"1805:180:21","nodeType":"YulFunctionDefinition","src":"1805:180:21"},{"body":{"nativeSrc":"2042:269:21","nodeType":"YulBlock","src":"2042:269:21","statements":[{"nativeSrc":"2052:22:21","nodeType":"YulAssignment","src":"2052:22:21","value":{"arguments":[{"name":"data","nativeSrc":"2066:4:21","nodeType":"YulIdentifier","src":"2066:4:21"},{"kind":"number","nativeSrc":"2072:1:21","nodeType":"YulLiteral","src":"2072:1:21","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"2062:3:21","nodeType":"YulIdentifier","src":"2062:3:21"},"nativeSrc":"2062:12:21","nodeType":"YulFunctionCall","src":"2062:12:21"},"variableNames":[{"name":"length","nativeSrc":"2052:6:21","nodeType":"YulIdentifier","src":"2052:6:21"}]},{"nativeSrc":"2083:38:21","nodeType":"YulVariableDeclaration","src":"2083:38:21","value":{"arguments":[{"name":"data","nativeSrc":"2113:4:21","nodeType":"YulIdentifier","src":"2113:4:21"},{"kind":"number","nativeSrc":"2119:1:21","nodeType":"YulLiteral","src":"2119:1:21","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"2109:3:21","nodeType":"YulIdentifier","src":"2109:3:21"},"nativeSrc":"2109:12:21","nodeType":"YulFunctionCall","src":"2109:12:21"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"2087:18:21","nodeType":"YulTypedName","src":"2087:18:21","type":""}]},{"body":{"nativeSrc":"2160:51:21","nodeType":"YulBlock","src":"2160:51:21","statements":[{"nativeSrc":"2174:27:21","nodeType":"YulAssignment","src":"2174:27:21","value":{"arguments":[{"name":"length","nativeSrc":"2188:6:21","nodeType":"YulIdentifier","src":"2188:6:21"},{"kind":"number","nativeSrc":"2196:4:21","nodeType":"YulLiteral","src":"2196:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"2184:3:21","nodeType":"YulIdentifier","src":"2184:3:21"},"nativeSrc":"2184:17:21","nodeType":"YulFunctionCall","src":"2184:17:21"},"variableNames":[{"name":"length","nativeSrc":"2174:6:21","nodeType":"YulIdentifier","src":"2174:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"2140:18:21","nodeType":"YulIdentifier","src":"2140:18:21"}],"functionName":{"name":"iszero","nativeSrc":"2133:6:21","nodeType":"YulIdentifier","src":"2133:6:21"},"nativeSrc":"2133:26:21","nodeType":"YulFunctionCall","src":"2133:26:21"},"nativeSrc":"2130:81:21","nodeType":"YulIf","src":"2130:81:21"},{"body":{"nativeSrc":"2263:42:21","nodeType":"YulBlock","src":"2263:42:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"2277:16:21","nodeType":"YulIdentifier","src":"2277:16:21"},"nativeSrc":"2277:18:21","nodeType":"YulFunctionCall","src":"2277:18:21"},"nativeSrc":"2277:18:21","nodeType":"YulExpressionStatement","src":"2277:18:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"2227:18:21","nodeType":"YulIdentifier","src":"2227:18:21"},{"arguments":[{"name":"length","nativeSrc":"2250:6:21","nodeType":"YulIdentifier","src":"2250:6:21"},{"kind":"number","nativeSrc":"2258:2:21","nodeType":"YulLiteral","src":"2258:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"2247:2:21","nodeType":"YulIdentifier","src":"2247:2:21"},"nativeSrc":"2247:14:21","nodeType":"YulFunctionCall","src":"2247:14:21"}],"functionName":{"name":"eq","nativeSrc":"2224:2:21","nodeType":"YulIdentifier","src":"2224:2:21"},"nativeSrc":"2224:38:21","nodeType":"YulFunctionCall","src":"2224:38:21"},"nativeSrc":"2221:84:21","nodeType":"YulIf","src":"2221:84:21"}]},"name":"extract_byte_array_length","nativeSrc":"1991:320:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"2026:4:21","nodeType":"YulTypedName","src":"2026:4:21","type":""}],"returnVariables":[{"name":"length","nativeSrc":"2035:6:21","nodeType":"YulTypedName","src":"2035:6:21","type":""}],"src":"1991:320:21"},{"body":{"nativeSrc":"2371:87:21","nodeType":"YulBlock","src":"2371:87:21","statements":[{"nativeSrc":"2381:11:21","nodeType":"YulAssignment","src":"2381:11:21","value":{"name":"ptr","nativeSrc":"2389:3:21","nodeType":"YulIdentifier","src":"2389:3:21"},"variableNames":[{"name":"data","nativeSrc":"2381:4:21","nodeType":"YulIdentifier","src":"2381:4:21"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2409:1:21","nodeType":"YulLiteral","src":"2409:1:21","type":"","value":"0"},{"name":"ptr","nativeSrc":"2412:3:21","nodeType":"YulIdentifier","src":"2412:3:21"}],"functionName":{"name":"mstore","nativeSrc":"2402:6:21","nodeType":"YulIdentifier","src":"2402:6:21"},"nativeSrc":"2402:14:21","nodeType":"YulFunctionCall","src":"2402:14:21"},"nativeSrc":"2402:14:21","nodeType":"YulExpressionStatement","src":"2402:14:21"},{"nativeSrc":"2425:26:21","nodeType":"YulAssignment","src":"2425:26:21","value":{"arguments":[{"kind":"number","nativeSrc":"2443:1:21","nodeType":"YulLiteral","src":"2443:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"2446:4:21","nodeType":"YulLiteral","src":"2446:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2433:9:21","nodeType":"YulIdentifier","src":"2433:9:21"},"nativeSrc":"2433:18:21","nodeType":"YulFunctionCall","src":"2433:18:21"},"variableNames":[{"name":"data","nativeSrc":"2425:4:21","nodeType":"YulIdentifier","src":"2425:4:21"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"2317:141:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"2358:3:21","nodeType":"YulTypedName","src":"2358:3:21","type":""}],"returnVariables":[{"name":"data","nativeSrc":"2366:4:21","nodeType":"YulTypedName","src":"2366:4:21","type":""}],"src":"2317:141:21"},{"body":{"nativeSrc":"2508:49:21","nodeType":"YulBlock","src":"2508:49:21","statements":[{"nativeSrc":"2518:33:21","nodeType":"YulAssignment","src":"2518:33:21","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2536:5:21","nodeType":"YulIdentifier","src":"2536:5:21"},{"kind":"number","nativeSrc":"2543:2:21","nodeType":"YulLiteral","src":"2543:2:21","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2532:3:21","nodeType":"YulIdentifier","src":"2532:3:21"},"nativeSrc":"2532:14:21","nodeType":"YulFunctionCall","src":"2532:14:21"},{"kind":"number","nativeSrc":"2548:2:21","nodeType":"YulLiteral","src":"2548:2:21","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"2528:3:21","nodeType":"YulIdentifier","src":"2528:3:21"},"nativeSrc":"2528:23:21","nodeType":"YulFunctionCall","src":"2528:23:21"},"variableNames":[{"name":"result","nativeSrc":"2518:6:21","nodeType":"YulIdentifier","src":"2518:6:21"}]}]},"name":"divide_by_32_ceil","nativeSrc":"2464:93:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2491:5:21","nodeType":"YulTypedName","src":"2491:5:21","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2501:6:21","nodeType":"YulTypedName","src":"2501:6:21","type":""}],"src":"2464:93:21"},{"body":{"nativeSrc":"2616:54:21","nodeType":"YulBlock","src":"2616:54:21","statements":[{"nativeSrc":"2626:37:21","nodeType":"YulAssignment","src":"2626:37:21","value":{"arguments":[{"name":"bits","nativeSrc":"2651:4:21","nodeType":"YulIdentifier","src":"2651:4:21"},{"name":"value","nativeSrc":"2657:5:21","nodeType":"YulIdentifier","src":"2657:5:21"}],"functionName":{"name":"shl","nativeSrc":"2647:3:21","nodeType":"YulIdentifier","src":"2647:3:21"},"nativeSrc":"2647:16:21","nodeType":"YulFunctionCall","src":"2647:16:21"},"variableNames":[{"name":"newValue","nativeSrc":"2626:8:21","nodeType":"YulIdentifier","src":"2626:8:21"}]}]},"name":"shift_left_dynamic","nativeSrc":"2563:107:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"2591:4:21","nodeType":"YulTypedName","src":"2591:4:21","type":""},{"name":"value","nativeSrc":"2597:5:21","nodeType":"YulTypedName","src":"2597:5:21","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"2607:8:21","nodeType":"YulTypedName","src":"2607:8:21","type":""}],"src":"2563:107:21"},{"body":{"nativeSrc":"2752:317:21","nodeType":"YulBlock","src":"2752:317:21","statements":[{"nativeSrc":"2762:35:21","nodeType":"YulVariableDeclaration","src":"2762:35:21","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"2783:10:21","nodeType":"YulIdentifier","src":"2783:10:21"},{"kind":"number","nativeSrc":"2795:1:21","nodeType":"YulLiteral","src":"2795:1:21","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"2779:3:21","nodeType":"YulIdentifier","src":"2779:3:21"},"nativeSrc":"2779:18:21","nodeType":"YulFunctionCall","src":"2779:18:21"},"variables":[{"name":"shiftBits","nativeSrc":"2766:9:21","nodeType":"YulTypedName","src":"2766:9:21","type":""}]},{"nativeSrc":"2806:109:21","nodeType":"YulVariableDeclaration","src":"2806:109:21","value":{"arguments":[{"name":"shiftBits","nativeSrc":"2837:9:21","nodeType":"YulIdentifier","src":"2837:9:21"},{"kind":"number","nativeSrc":"2848:66:21","nodeType":"YulLiteral","src":"2848:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"2818:18:21","nodeType":"YulIdentifier","src":"2818:18:21"},"nativeSrc":"2818:97:21","nodeType":"YulFunctionCall","src":"2818:97:21"},"variables":[{"name":"mask","nativeSrc":"2810:4:21","nodeType":"YulTypedName","src":"2810:4:21","type":""}]},{"nativeSrc":"2924:51:21","nodeType":"YulAssignment","src":"2924:51:21","value":{"arguments":[{"name":"shiftBits","nativeSrc":"2955:9:21","nodeType":"YulIdentifier","src":"2955:9:21"},{"name":"toInsert","nativeSrc":"2966:8:21","nodeType":"YulIdentifier","src":"2966:8:21"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"2936:18:21","nodeType":"YulIdentifier","src":"2936:18:21"},"nativeSrc":"2936:39:21","nodeType":"YulFunctionCall","src":"2936:39:21"},"variableNames":[{"name":"toInsert","nativeSrc":"2924:8:21","nodeType":"YulIdentifier","src":"2924:8:21"}]},{"nativeSrc":"2984:30:21","nodeType":"YulAssignment","src":"2984:30:21","value":{"arguments":[{"name":"value","nativeSrc":"2997:5:21","nodeType":"YulIdentifier","src":"2997:5:21"},{"arguments":[{"name":"mask","nativeSrc":"3008:4:21","nodeType":"YulIdentifier","src":"3008:4:21"}],"functionName":{"name":"not","nativeSrc":"3004:3:21","nodeType":"YulIdentifier","src":"3004:3:21"},"nativeSrc":"3004:9:21","nodeType":"YulFunctionCall","src":"3004:9:21"}],"functionName":{"name":"and","nativeSrc":"2993:3:21","nodeType":"YulIdentifier","src":"2993:3:21"},"nativeSrc":"2993:21:21","nodeType":"YulFunctionCall","src":"2993:21:21"},"variableNames":[{"name":"value","nativeSrc":"2984:5:21","nodeType":"YulIdentifier","src":"2984:5:21"}]},{"nativeSrc":"3023:40:21","nodeType":"YulAssignment","src":"3023:40:21","value":{"arguments":[{"name":"value","nativeSrc":"3036:5:21","nodeType":"YulIdentifier","src":"3036:5:21"},{"arguments":[{"name":"toInsert","nativeSrc":"3047:8:21","nodeType":"YulIdentifier","src":"3047:8:21"},{"name":"mask","nativeSrc":"3057:4:21","nodeType":"YulIdentifier","src":"3057:4:21"}],"functionName":{"name":"and","nativeSrc":"3043:3:21","nodeType":"YulIdentifier","src":"3043:3:21"},"nativeSrc":"3043:19:21","nodeType":"YulFunctionCall","src":"3043:19:21"}],"functionName":{"name":"or","nativeSrc":"3033:2:21","nodeType":"YulIdentifier","src":"3033:2:21"},"nativeSrc":"3033:30:21","nodeType":"YulFunctionCall","src":"3033:30:21"},"variableNames":[{"name":"result","nativeSrc":"3023:6:21","nodeType":"YulIdentifier","src":"3023:6:21"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"2676:393:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2713:5:21","nodeType":"YulTypedName","src":"2713:5:21","type":""},{"name":"shiftBytes","nativeSrc":"2720:10:21","nodeType":"YulTypedName","src":"2720:10:21","type":""},{"name":"toInsert","nativeSrc":"2732:8:21","nodeType":"YulTypedName","src":"2732:8:21","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2745:6:21","nodeType":"YulTypedName","src":"2745:6:21","type":""}],"src":"2676:393:21"},{"body":{"nativeSrc":"3120:32:21","nodeType":"YulBlock","src":"3120:32:21","statements":[{"nativeSrc":"3130:16:21","nodeType":"YulAssignment","src":"3130:16:21","value":{"name":"value","nativeSrc":"3141:5:21","nodeType":"YulIdentifier","src":"3141:5:21"},"variableNames":[{"name":"cleaned","nativeSrc":"3130:7:21","nodeType":"YulIdentifier","src":"3130:7:21"}]}]},"name":"cleanup_t_uint256","nativeSrc":"3075:77:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3102:5:21","nodeType":"YulTypedName","src":"3102:5:21","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3112:7:21","nodeType":"YulTypedName","src":"3112:7:21","type":""}],"src":"3075:77:21"},{"body":{"nativeSrc":"3190:28:21","nodeType":"YulBlock","src":"3190:28:21","statements":[{"nativeSrc":"3200:12:21","nodeType":"YulAssignment","src":"3200:12:21","value":{"name":"value","nativeSrc":"3207:5:21","nodeType":"YulIdentifier","src":"3207:5:21"},"variableNames":[{"name":"ret","nativeSrc":"3200:3:21","nodeType":"YulIdentifier","src":"3200:3:21"}]}]},"name":"identity","nativeSrc":"3158:60:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3176:5:21","nodeType":"YulTypedName","src":"3176:5:21","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"3186:3:21","nodeType":"YulTypedName","src":"3186:3:21","type":""}],"src":"3158:60:21"},{"body":{"nativeSrc":"3284:82:21","nodeType":"YulBlock","src":"3284:82:21","statements":[{"nativeSrc":"3294:66:21","nodeType":"YulAssignment","src":"3294:66:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3352:5:21","nodeType":"YulIdentifier","src":"3352:5:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3334:17:21","nodeType":"YulIdentifier","src":"3334:17:21"},"nativeSrc":"3334:24:21","nodeType":"YulFunctionCall","src":"3334:24:21"}],"functionName":{"name":"identity","nativeSrc":"3325:8:21","nodeType":"YulIdentifier","src":"3325:8:21"},"nativeSrc":"3325:34:21","nodeType":"YulFunctionCall","src":"3325:34:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3307:17:21","nodeType":"YulIdentifier","src":"3307:17:21"},"nativeSrc":"3307:53:21","nodeType":"YulFunctionCall","src":"3307:53:21"},"variableNames":[{"name":"converted","nativeSrc":"3294:9:21","nodeType":"YulIdentifier","src":"3294:9:21"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"3224:142:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3264:5:21","nodeType":"YulTypedName","src":"3264:5:21","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"3274:9:21","nodeType":"YulTypedName","src":"3274:9:21","type":""}],"src":"3224:142:21"},{"body":{"nativeSrc":"3419:28:21","nodeType":"YulBlock","src":"3419:28:21","statements":[{"nativeSrc":"3429:12:21","nodeType":"YulAssignment","src":"3429:12:21","value":{"name":"value","nativeSrc":"3436:5:21","nodeType":"YulIdentifier","src":"3436:5:21"},"variableNames":[{"name":"ret","nativeSrc":"3429:3:21","nodeType":"YulIdentifier","src":"3429:3:21"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"3372:75:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3405:5:21","nodeType":"YulTypedName","src":"3405:5:21","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"3415:3:21","nodeType":"YulTypedName","src":"3415:3:21","type":""}],"src":"3372:75:21"},{"body":{"nativeSrc":"3529:193:21","nodeType":"YulBlock","src":"3529:193:21","statements":[{"nativeSrc":"3539:63:21","nodeType":"YulVariableDeclaration","src":"3539:63:21","value":{"arguments":[{"name":"value_0","nativeSrc":"3594:7:21","nodeType":"YulIdentifier","src":"3594:7:21"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"3563:30:21","nodeType":"YulIdentifier","src":"3563:30:21"},"nativeSrc":"3563:39:21","nodeType":"YulFunctionCall","src":"3563:39:21"},"variables":[{"name":"convertedValue_0","nativeSrc":"3543:16:21","nodeType":"YulTypedName","src":"3543:16:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3618:4:21","nodeType":"YulIdentifier","src":"3618:4:21"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"3658:4:21","nodeType":"YulIdentifier","src":"3658:4:21"}],"functionName":{"name":"sload","nativeSrc":"3652:5:21","nodeType":"YulIdentifier","src":"3652:5:21"},"nativeSrc":"3652:11:21","nodeType":"YulFunctionCall","src":"3652:11:21"},{"name":"offset","nativeSrc":"3665:6:21","nodeType":"YulIdentifier","src":"3665:6:21"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"3697:16:21","nodeType":"YulIdentifier","src":"3697:16:21"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"3673:23:21","nodeType":"YulIdentifier","src":"3673:23:21"},"nativeSrc":"3673:41:21","nodeType":"YulFunctionCall","src":"3673:41:21"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"3624:27:21","nodeType":"YulIdentifier","src":"3624:27:21"},"nativeSrc":"3624:91:21","nodeType":"YulFunctionCall","src":"3624:91:21"}],"functionName":{"name":"sstore","nativeSrc":"3611:6:21","nodeType":"YulIdentifier","src":"3611:6:21"},"nativeSrc":"3611:105:21","nodeType":"YulFunctionCall","src":"3611:105:21"},"nativeSrc":"3611:105:21","nodeType":"YulExpressionStatement","src":"3611:105:21"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"3453:269:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3506:4:21","nodeType":"YulTypedName","src":"3506:4:21","type":""},{"name":"offset","nativeSrc":"3512:6:21","nodeType":"YulTypedName","src":"3512:6:21","type":""},{"name":"value_0","nativeSrc":"3520:7:21","nodeType":"YulTypedName","src":"3520:7:21","type":""}],"src":"3453:269:21"},{"body":{"nativeSrc":"3777:24:21","nodeType":"YulBlock","src":"3777:24:21","statements":[{"nativeSrc":"3787:8:21","nodeType":"YulAssignment","src":"3787:8:21","value":{"kind":"number","nativeSrc":"3794:1:21","nodeType":"YulLiteral","src":"3794:1:21","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"3787:3:21","nodeType":"YulIdentifier","src":"3787:3:21"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"3728:73:21","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"3773:3:21","nodeType":"YulTypedName","src":"3773:3:21","type":""}],"src":"3728:73:21"},{"body":{"nativeSrc":"3860:136:21","nodeType":"YulBlock","src":"3860:136:21","statements":[{"nativeSrc":"3870:46:21","nodeType":"YulVariableDeclaration","src":"3870:46:21","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"3884:30:21","nodeType":"YulIdentifier","src":"3884:30:21"},"nativeSrc":"3884:32:21","nodeType":"YulFunctionCall","src":"3884:32:21"},"variables":[{"name":"zero_0","nativeSrc":"3874:6:21","nodeType":"YulTypedName","src":"3874:6:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3969:4:21","nodeType":"YulIdentifier","src":"3969:4:21"},{"name":"offset","nativeSrc":"3975:6:21","nodeType":"YulIdentifier","src":"3975:6:21"},{"name":"zero_0","nativeSrc":"3983:6:21","nodeType":"YulIdentifier","src":"3983:6:21"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"3925:43:21","nodeType":"YulIdentifier","src":"3925:43:21"},"nativeSrc":"3925:65:21","nodeType":"YulFunctionCall","src":"3925:65:21"},"nativeSrc":"3925:65:21","nodeType":"YulExpressionStatement","src":"3925:65:21"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"3807:189:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3846:4:21","nodeType":"YulTypedName","src":"3846:4:21","type":""},{"name":"offset","nativeSrc":"3852:6:21","nodeType":"YulTypedName","src":"3852:6:21","type":""}],"src":"3807:189:21"},{"body":{"nativeSrc":"4052:136:21","nodeType":"YulBlock","src":"4052:136:21","statements":[{"body":{"nativeSrc":"4119:63:21","nodeType":"YulBlock","src":"4119:63:21","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"4163:5:21","nodeType":"YulIdentifier","src":"4163:5:21"},{"kind":"number","nativeSrc":"4170:1:21","nodeType":"YulLiteral","src":"4170:1:21","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"4133:29:21","nodeType":"YulIdentifier","src":"4133:29:21"},"nativeSrc":"4133:39:21","nodeType":"YulFunctionCall","src":"4133:39:21"},"nativeSrc":"4133:39:21","nodeType":"YulExpressionStatement","src":"4133:39:21"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"4072:5:21","nodeType":"YulIdentifier","src":"4072:5:21"},{"name":"end","nativeSrc":"4079:3:21","nodeType":"YulIdentifier","src":"4079:3:21"}],"functionName":{"name":"lt","nativeSrc":"4069:2:21","nodeType":"YulIdentifier","src":"4069:2:21"},"nativeSrc":"4069:14:21","nodeType":"YulFunctionCall","src":"4069:14:21"},"nativeSrc":"4062:120:21","nodeType":"YulForLoop","post":{"nativeSrc":"4084:26:21","nodeType":"YulBlock","src":"4084:26:21","statements":[{"nativeSrc":"4086:22:21","nodeType":"YulAssignment","src":"4086:22:21","value":{"arguments":[{"name":"start","nativeSrc":"4099:5:21","nodeType":"YulIdentifier","src":"4099:5:21"},{"kind":"number","nativeSrc":"4106:1:21","nodeType":"YulLiteral","src":"4106:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4095:3:21","nodeType":"YulIdentifier","src":"4095:3:21"},"nativeSrc":"4095:13:21","nodeType":"YulFunctionCall","src":"4095:13:21"},"variableNames":[{"name":"start","nativeSrc":"4086:5:21","nodeType":"YulIdentifier","src":"4086:5:21"}]}]},"pre":{"nativeSrc":"4066:2:21","nodeType":"YulBlock","src":"4066:2:21","statements":[]},"src":"4062:120:21"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"4002:186:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"4040:5:21","nodeType":"YulTypedName","src":"4040:5:21","type":""},{"name":"end","nativeSrc":"4047:3:21","nodeType":"YulTypedName","src":"4047:3:21","type":""}],"src":"4002:186:21"},{"body":{"nativeSrc":"4273:464:21","nodeType":"YulBlock","src":"4273:464:21","statements":[{"body":{"nativeSrc":"4299:431:21","nodeType":"YulBlock","src":"4299:431:21","statements":[{"nativeSrc":"4313:54:21","nodeType":"YulVariableDeclaration","src":"4313:54:21","value":{"arguments":[{"name":"array","nativeSrc":"4361:5:21","nodeType":"YulIdentifier","src":"4361:5:21"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"4329:31:21","nodeType":"YulIdentifier","src":"4329:31:21"},"nativeSrc":"4329:38:21","nodeType":"YulFunctionCall","src":"4329:38:21"},"variables":[{"name":"dataArea","nativeSrc":"4317:8:21","nodeType":"YulTypedName","src":"4317:8:21","type":""}]},{"nativeSrc":"4380:63:21","nodeType":"YulVariableDeclaration","src":"4380:63:21","value":{"arguments":[{"name":"dataArea","nativeSrc":"4403:8:21","nodeType":"YulIdentifier","src":"4403:8:21"},{"arguments":[{"name":"startIndex","nativeSrc":"4431:10:21","nodeType":"YulIdentifier","src":"4431:10:21"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"4413:17:21","nodeType":"YulIdentifier","src":"4413:17:21"},"nativeSrc":"4413:29:21","nodeType":"YulFunctionCall","src":"4413:29:21"}],"functionName":{"name":"add","nativeSrc":"4399:3:21","nodeType":"YulIdentifier","src":"4399:3:21"},"nativeSrc":"4399:44:21","nodeType":"YulFunctionCall","src":"4399:44:21"},"variables":[{"name":"deleteStart","nativeSrc":"4384:11:21","nodeType":"YulTypedName","src":"4384:11:21","type":""}]},{"body":{"nativeSrc":"4600:27:21","nodeType":"YulBlock","src":"4600:27:21","statements":[{"nativeSrc":"4602:23:21","nodeType":"YulAssignment","src":"4602:23:21","value":{"name":"dataArea","nativeSrc":"4617:8:21","nodeType":"YulIdentifier","src":"4617:8:21"},"variableNames":[{"name":"deleteStart","nativeSrc":"4602:11:21","nodeType":"YulIdentifier","src":"4602:11:21"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"4584:10:21","nodeType":"YulIdentifier","src":"4584:10:21"},{"kind":"number","nativeSrc":"4596:2:21","nodeType":"YulLiteral","src":"4596:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"4581:2:21","nodeType":"YulIdentifier","src":"4581:2:21"},"nativeSrc":"4581:18:21","nodeType":"YulFunctionCall","src":"4581:18:21"},"nativeSrc":"4578:49:21","nodeType":"YulIf","src":"4578:49:21"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"4669:11:21","nodeType":"YulIdentifier","src":"4669:11:21"},{"arguments":[{"name":"dataArea","nativeSrc":"4686:8:21","nodeType":"YulIdentifier","src":"4686:8:21"},{"arguments":[{"name":"len","nativeSrc":"4714:3:21","nodeType":"YulIdentifier","src":"4714:3:21"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"4696:17:21","nodeType":"YulIdentifier","src":"4696:17:21"},"nativeSrc":"4696:22:21","nodeType":"YulFunctionCall","src":"4696:22:21"}],"functionName":{"name":"add","nativeSrc":"4682:3:21","nodeType":"YulIdentifier","src":"4682:3:21"},"nativeSrc":"4682:37:21","nodeType":"YulFunctionCall","src":"4682:37:21"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"4640:28:21","nodeType":"YulIdentifier","src":"4640:28:21"},"nativeSrc":"4640:80:21","nodeType":"YulFunctionCall","src":"4640:80:21"},"nativeSrc":"4640:80:21","nodeType":"YulExpressionStatement","src":"4640:80:21"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"4290:3:21","nodeType":"YulIdentifier","src":"4290:3:21"},{"kind":"number","nativeSrc":"4295:2:21","nodeType":"YulLiteral","src":"4295:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"4287:2:21","nodeType":"YulIdentifier","src":"4287:2:21"},"nativeSrc":"4287:11:21","nodeType":"YulFunctionCall","src":"4287:11:21"},"nativeSrc":"4284:446:21","nodeType":"YulIf","src":"4284:446:21"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"4194:543:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"4249:5:21","nodeType":"YulTypedName","src":"4249:5:21","type":""},{"name":"len","nativeSrc":"4256:3:21","nodeType":"YulTypedName","src":"4256:3:21","type":""},{"name":"startIndex","nativeSrc":"4261:10:21","nodeType":"YulTypedName","src":"4261:10:21","type":""}],"src":"4194:543:21"},{"body":{"nativeSrc":"4806:54:21","nodeType":"YulBlock","src":"4806:54:21","statements":[{"nativeSrc":"4816:37:21","nodeType":"YulAssignment","src":"4816:37:21","value":{"arguments":[{"name":"bits","nativeSrc":"4841:4:21","nodeType":"YulIdentifier","src":"4841:4:21"},{"name":"value","nativeSrc":"4847:5:21","nodeType":"YulIdentifier","src":"4847:5:21"}],"functionName":{"name":"shr","nativeSrc":"4837:3:21","nodeType":"YulIdentifier","src":"4837:3:21"},"nativeSrc":"4837:16:21","nodeType":"YulFunctionCall","src":"4837:16:21"},"variableNames":[{"name":"newValue","nativeSrc":"4816:8:21","nodeType":"YulIdentifier","src":"4816:8:21"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"4743:117:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"4781:4:21","nodeType":"YulTypedName","src":"4781:4:21","type":""},{"name":"value","nativeSrc":"4787:5:21","nodeType":"YulTypedName","src":"4787:5:21","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"4797:8:21","nodeType":"YulTypedName","src":"4797:8:21","type":""}],"src":"4743:117:21"},{"body":{"nativeSrc":"4917:118:21","nodeType":"YulBlock","src":"4917:118:21","statements":[{"nativeSrc":"4927:68:21","nodeType":"YulVariableDeclaration","src":"4927:68:21","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4976:1:21","nodeType":"YulLiteral","src":"4976:1:21","type":"","value":"8"},{"name":"bytes","nativeSrc":"4979:5:21","nodeType":"YulIdentifier","src":"4979:5:21"}],"functionName":{"name":"mul","nativeSrc":"4972:3:21","nodeType":"YulIdentifier","src":"4972:3:21"},"nativeSrc":"4972:13:21","nodeType":"YulFunctionCall","src":"4972:13:21"},{"arguments":[{"kind":"number","nativeSrc":"4991:1:21","nodeType":"YulLiteral","src":"4991:1:21","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4987:3:21","nodeType":"YulIdentifier","src":"4987:3:21"},"nativeSrc":"4987:6:21","nodeType":"YulFunctionCall","src":"4987:6:21"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"4943:28:21","nodeType":"YulIdentifier","src":"4943:28:21"},"nativeSrc":"4943:51:21","nodeType":"YulFunctionCall","src":"4943:51:21"}],"functionName":{"name":"not","nativeSrc":"4939:3:21","nodeType":"YulIdentifier","src":"4939:3:21"},"nativeSrc":"4939:56:21","nodeType":"YulFunctionCall","src":"4939:56:21"},"variables":[{"name":"mask","nativeSrc":"4931:4:21","nodeType":"YulTypedName","src":"4931:4:21","type":""}]},{"nativeSrc":"5004:25:21","nodeType":"YulAssignment","src":"5004:25:21","value":{"arguments":[{"name":"data","nativeSrc":"5018:4:21","nodeType":"YulIdentifier","src":"5018:4:21"},{"name":"mask","nativeSrc":"5024:4:21","nodeType":"YulIdentifier","src":"5024:4:21"}],"functionName":{"name":"and","nativeSrc":"5014:3:21","nodeType":"YulIdentifier","src":"5014:3:21"},"nativeSrc":"5014:15:21","nodeType":"YulFunctionCall","src":"5014:15:21"},"variableNames":[{"name":"result","nativeSrc":"5004:6:21","nodeType":"YulIdentifier","src":"5004:6:21"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"4866:169:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4894:4:21","nodeType":"YulTypedName","src":"4894:4:21","type":""},{"name":"bytes","nativeSrc":"4900:5:21","nodeType":"YulTypedName","src":"4900:5:21","type":""}],"returnVariables":[{"name":"result","nativeSrc":"4910:6:21","nodeType":"YulTypedName","src":"4910:6:21","type":""}],"src":"4866:169:21"},{"body":{"nativeSrc":"5121:214:21","nodeType":"YulBlock","src":"5121:214:21","statements":[{"nativeSrc":"5254:37:21","nodeType":"YulAssignment","src":"5254:37:21","value":{"arguments":[{"name":"data","nativeSrc":"5281:4:21","nodeType":"YulIdentifier","src":"5281:4:21"},{"name":"len","nativeSrc":"5287:3:21","nodeType":"YulIdentifier","src":"5287:3:21"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"5262:18:21","nodeType":"YulIdentifier","src":"5262:18:21"},"nativeSrc":"5262:29:21","nodeType":"YulFunctionCall","src":"5262:29:21"},"variableNames":[{"name":"data","nativeSrc":"5254:4:21","nodeType":"YulIdentifier","src":"5254:4:21"}]},{"nativeSrc":"5300:29:21","nodeType":"YulAssignment","src":"5300:29:21","value":{"arguments":[{"name":"data","nativeSrc":"5311:4:21","nodeType":"YulIdentifier","src":"5311:4:21"},{"arguments":[{"kind":"number","nativeSrc":"5321:1:21","nodeType":"YulLiteral","src":"5321:1:21","type":"","value":"2"},{"name":"len","nativeSrc":"5324:3:21","nodeType":"YulIdentifier","src":"5324:3:21"}],"functionName":{"name":"mul","nativeSrc":"5317:3:21","nodeType":"YulIdentifier","src":"5317:3:21"},"nativeSrc":"5317:11:21","nodeType":"YulFunctionCall","src":"5317:11:21"}],"functionName":{"name":"or","nativeSrc":"5308:2:21","nodeType":"YulIdentifier","src":"5308:2:21"},"nativeSrc":"5308:21:21","nodeType":"YulFunctionCall","src":"5308:21:21"},"variableNames":[{"name":"used","nativeSrc":"5300:4:21","nodeType":"YulIdentifier","src":"5300:4:21"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"5040:295:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"5102:4:21","nodeType":"YulTypedName","src":"5102:4:21","type":""},{"name":"len","nativeSrc":"5108:3:21","nodeType":"YulTypedName","src":"5108:3:21","type":""}],"returnVariables":[{"name":"used","nativeSrc":"5116:4:21","nodeType":"YulTypedName","src":"5116:4:21","type":""}],"src":"5040:295:21"},{"body":{"nativeSrc":"5432:1303:21","nodeType":"YulBlock","src":"5432:1303:21","statements":[{"nativeSrc":"5443:51:21","nodeType":"YulVariableDeclaration","src":"5443:51:21","value":{"arguments":[{"name":"src","nativeSrc":"5490:3:21","nodeType":"YulIdentifier","src":"5490:3:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"5457:32:21","nodeType":"YulIdentifier","src":"5457:32:21"},"nativeSrc":"5457:37:21","nodeType":"YulFunctionCall","src":"5457:37:21"},"variables":[{"name":"newLen","nativeSrc":"5447:6:21","nodeType":"YulTypedName","src":"5447:6:21","type":""}]},{"body":{"nativeSrc":"5579:22:21","nodeType":"YulBlock","src":"5579:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"5581:16:21","nodeType":"YulIdentifier","src":"5581:16:21"},"nativeSrc":"5581:18:21","nodeType":"YulFunctionCall","src":"5581:18:21"},"nativeSrc":"5581:18:21","nodeType":"YulExpressionStatement","src":"5581:18:21"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"5551:6:21","nodeType":"YulIdentifier","src":"5551:6:21"},{"kind":"number","nativeSrc":"5559:18:21","nodeType":"YulLiteral","src":"5559:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5548:2:21","nodeType":"YulIdentifier","src":"5548:2:21"},"nativeSrc":"5548:30:21","nodeType":"YulFunctionCall","src":"5548:30:21"},"nativeSrc":"5545:56:21","nodeType":"YulIf","src":"5545:56:21"},{"nativeSrc":"5611:52:21","nodeType":"YulVariableDeclaration","src":"5611:52:21","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"5657:4:21","nodeType":"YulIdentifier","src":"5657:4:21"}],"functionName":{"name":"sload","nativeSrc":"5651:5:21","nodeType":"YulIdentifier","src":"5651:5:21"},"nativeSrc":"5651:11:21","nodeType":"YulFunctionCall","src":"5651:11:21"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"5625:25:21","nodeType":"YulIdentifier","src":"5625:25:21"},"nativeSrc":"5625:38:21","nodeType":"YulFunctionCall","src":"5625:38:21"},"variables":[{"name":"oldLen","nativeSrc":"5615:6:21","nodeType":"YulTypedName","src":"5615:6:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5756:4:21","nodeType":"YulIdentifier","src":"5756:4:21"},{"name":"oldLen","nativeSrc":"5762:6:21","nodeType":"YulIdentifier","src":"5762:6:21"},{"name":"newLen","nativeSrc":"5770:6:21","nodeType":"YulIdentifier","src":"5770:6:21"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"5710:45:21","nodeType":"YulIdentifier","src":"5710:45:21"},"nativeSrc":"5710:67:21","nodeType":"YulFunctionCall","src":"5710:67:21"},"nativeSrc":"5710:67:21","nodeType":"YulExpressionStatement","src":"5710:67:21"},{"nativeSrc":"5787:18:21","nodeType":"YulVariableDeclaration","src":"5787:18:21","value":{"kind":"number","nativeSrc":"5804:1:21","nodeType":"YulLiteral","src":"5804:1:21","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"5791:9:21","nodeType":"YulTypedName","src":"5791:9:21","type":""}]},{"nativeSrc":"5815:17:21","nodeType":"YulAssignment","src":"5815:17:21","value":{"kind":"number","nativeSrc":"5828:4:21","nodeType":"YulLiteral","src":"5828:4:21","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"5815:9:21","nodeType":"YulIdentifier","src":"5815:9:21"}]},{"cases":[{"body":{"nativeSrc":"5879:611:21","nodeType":"YulBlock","src":"5879:611:21","statements":[{"nativeSrc":"5893:37:21","nodeType":"YulVariableDeclaration","src":"5893:37:21","value":{"arguments":[{"name":"newLen","nativeSrc":"5912:6:21","nodeType":"YulIdentifier","src":"5912:6:21"},{"arguments":[{"kind":"number","nativeSrc":"5924:4:21","nodeType":"YulLiteral","src":"5924:4:21","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"5920:3:21","nodeType":"YulIdentifier","src":"5920:3:21"},"nativeSrc":"5920:9:21","nodeType":"YulFunctionCall","src":"5920:9:21"}],"functionName":{"name":"and","nativeSrc":"5908:3:21","nodeType":"YulIdentifier","src":"5908:3:21"},"nativeSrc":"5908:22:21","nodeType":"YulFunctionCall","src":"5908:22:21"},"variables":[{"name":"loopEnd","nativeSrc":"5897:7:21","nodeType":"YulTypedName","src":"5897:7:21","type":""}]},{"nativeSrc":"5944:51:21","nodeType":"YulVariableDeclaration","src":"5944:51:21","value":{"arguments":[{"name":"slot","nativeSrc":"5990:4:21","nodeType":"YulIdentifier","src":"5990:4:21"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"5958:31:21","nodeType":"YulIdentifier","src":"5958:31:21"},"nativeSrc":"5958:37:21","nodeType":"YulFunctionCall","src":"5958:37:21"},"variables":[{"name":"dstPtr","nativeSrc":"5948:6:21","nodeType":"YulTypedName","src":"5948:6:21","type":""}]},{"nativeSrc":"6008:10:21","nodeType":"YulVariableDeclaration","src":"6008:10:21","value":{"kind":"number","nativeSrc":"6017:1:21","nodeType":"YulLiteral","src":"6017:1:21","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"6012:1:21","nodeType":"YulTypedName","src":"6012:1:21","type":""}]},{"body":{"nativeSrc":"6076:163:21","nodeType":"YulBlock","src":"6076:163:21","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"6101:6:21","nodeType":"YulIdentifier","src":"6101:6:21"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6119:3:21","nodeType":"YulIdentifier","src":"6119:3:21"},{"name":"srcOffset","nativeSrc":"6124:9:21","nodeType":"YulIdentifier","src":"6124:9:21"}],"functionName":{"name":"add","nativeSrc":"6115:3:21","nodeType":"YulIdentifier","src":"6115:3:21"},"nativeSrc":"6115:19:21","nodeType":"YulFunctionCall","src":"6115:19:21"}],"functionName":{"name":"mload","nativeSrc":"6109:5:21","nodeType":"YulIdentifier","src":"6109:5:21"},"nativeSrc":"6109:26:21","nodeType":"YulFunctionCall","src":"6109:26:21"}],"functionName":{"name":"sstore","nativeSrc":"6094:6:21","nodeType":"YulIdentifier","src":"6094:6:21"},"nativeSrc":"6094:42:21","nodeType":"YulFunctionCall","src":"6094:42:21"},"nativeSrc":"6094:42:21","nodeType":"YulExpressionStatement","src":"6094:42:21"},{"nativeSrc":"6153:24:21","nodeType":"YulAssignment","src":"6153:24:21","value":{"arguments":[{"name":"dstPtr","nativeSrc":"6167:6:21","nodeType":"YulIdentifier","src":"6167:6:21"},{"kind":"number","nativeSrc":"6175:1:21","nodeType":"YulLiteral","src":"6175:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6163:3:21","nodeType":"YulIdentifier","src":"6163:3:21"},"nativeSrc":"6163:14:21","nodeType":"YulFunctionCall","src":"6163:14:21"},"variableNames":[{"name":"dstPtr","nativeSrc":"6153:6:21","nodeType":"YulIdentifier","src":"6153:6:21"}]},{"nativeSrc":"6194:31:21","nodeType":"YulAssignment","src":"6194:31:21","value":{"arguments":[{"name":"srcOffset","nativeSrc":"6211:9:21","nodeType":"YulIdentifier","src":"6211:9:21"},{"kind":"number","nativeSrc":"6222:2:21","nodeType":"YulLiteral","src":"6222:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6207:3:21","nodeType":"YulIdentifier","src":"6207:3:21"},"nativeSrc":"6207:18:21","nodeType":"YulFunctionCall","src":"6207:18:21"},"variableNames":[{"name":"srcOffset","nativeSrc":"6194:9:21","nodeType":"YulIdentifier","src":"6194:9:21"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"6042:1:21","nodeType":"YulIdentifier","src":"6042:1:21"},{"name":"loopEnd","nativeSrc":"6045:7:21","nodeType":"YulIdentifier","src":"6045:7:21"}],"functionName":{"name":"lt","nativeSrc":"6039:2:21","nodeType":"YulIdentifier","src":"6039:2:21"},"nativeSrc":"6039:14:21","nodeType":"YulFunctionCall","src":"6039:14:21"},"nativeSrc":"6031:208:21","nodeType":"YulForLoop","post":{"nativeSrc":"6054:21:21","nodeType":"YulBlock","src":"6054:21:21","statements":[{"nativeSrc":"6056:17:21","nodeType":"YulAssignment","src":"6056:17:21","value":{"arguments":[{"name":"i","nativeSrc":"6065:1:21","nodeType":"YulIdentifier","src":"6065:1:21"},{"kind":"number","nativeSrc":"6068:4:21","nodeType":"YulLiteral","src":"6068:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6061:3:21","nodeType":"YulIdentifier","src":"6061:3:21"},"nativeSrc":"6061:12:21","nodeType":"YulFunctionCall","src":"6061:12:21"},"variableNames":[{"name":"i","nativeSrc":"6056:1:21","nodeType":"YulIdentifier","src":"6056:1:21"}]}]},"pre":{"nativeSrc":"6035:3:21","nodeType":"YulBlock","src":"6035:3:21","statements":[]},"src":"6031:208:21"},{"body":{"nativeSrc":"6275:156:21","nodeType":"YulBlock","src":"6275:156:21","statements":[{"nativeSrc":"6293:43:21","nodeType":"YulVariableDeclaration","src":"6293:43:21","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6320:3:21","nodeType":"YulIdentifier","src":"6320:3:21"},{"name":"srcOffset","nativeSrc":"6325:9:21","nodeType":"YulIdentifier","src":"6325:9:21"}],"functionName":{"name":"add","nativeSrc":"6316:3:21","nodeType":"YulIdentifier","src":"6316:3:21"},"nativeSrc":"6316:19:21","nodeType":"YulFunctionCall","src":"6316:19:21"}],"functionName":{"name":"mload","nativeSrc":"6310:5:21","nodeType":"YulIdentifier","src":"6310:5:21"},"nativeSrc":"6310:26:21","nodeType":"YulFunctionCall","src":"6310:26:21"},"variables":[{"name":"lastValue","nativeSrc":"6297:9:21","nodeType":"YulTypedName","src":"6297:9:21","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"6360:6:21","nodeType":"YulIdentifier","src":"6360:6:21"},{"arguments":[{"name":"lastValue","nativeSrc":"6387:9:21","nodeType":"YulIdentifier","src":"6387:9:21"},{"arguments":[{"name":"newLen","nativeSrc":"6402:6:21","nodeType":"YulIdentifier","src":"6402:6:21"},{"kind":"number","nativeSrc":"6410:4:21","nodeType":"YulLiteral","src":"6410:4:21","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"6398:3:21","nodeType":"YulIdentifier","src":"6398:3:21"},"nativeSrc":"6398:17:21","nodeType":"YulFunctionCall","src":"6398:17:21"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"6368:18:21","nodeType":"YulIdentifier","src":"6368:18:21"},"nativeSrc":"6368:48:21","nodeType":"YulFunctionCall","src":"6368:48:21"}],"functionName":{"name":"sstore","nativeSrc":"6353:6:21","nodeType":"YulIdentifier","src":"6353:6:21"},"nativeSrc":"6353:64:21","nodeType":"YulFunctionCall","src":"6353:64:21"},"nativeSrc":"6353:64:21","nodeType":"YulExpressionStatement","src":"6353:64:21"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"6258:7:21","nodeType":"YulIdentifier","src":"6258:7:21"},{"name":"newLen","nativeSrc":"6267:6:21","nodeType":"YulIdentifier","src":"6267:6:21"}],"functionName":{"name":"lt","nativeSrc":"6255:2:21","nodeType":"YulIdentifier","src":"6255:2:21"},"nativeSrc":"6255:19:21","nodeType":"YulFunctionCall","src":"6255:19:21"},"nativeSrc":"6252:179:21","nodeType":"YulIf","src":"6252:179:21"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6451:4:21","nodeType":"YulIdentifier","src":"6451:4:21"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"6465:6:21","nodeType":"YulIdentifier","src":"6465:6:21"},{"kind":"number","nativeSrc":"6473:1:21","nodeType":"YulLiteral","src":"6473:1:21","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"6461:3:21","nodeType":"YulIdentifier","src":"6461:3:21"},"nativeSrc":"6461:14:21","nodeType":"YulFunctionCall","src":"6461:14:21"},{"kind":"number","nativeSrc":"6477:1:21","nodeType":"YulLiteral","src":"6477:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6457:3:21","nodeType":"YulIdentifier","src":"6457:3:21"},"nativeSrc":"6457:22:21","nodeType":"YulFunctionCall","src":"6457:22:21"}],"functionName":{"name":"sstore","nativeSrc":"6444:6:21","nodeType":"YulIdentifier","src":"6444:6:21"},"nativeSrc":"6444:36:21","nodeType":"YulFunctionCall","src":"6444:36:21"},"nativeSrc":"6444:36:21","nodeType":"YulExpressionStatement","src":"6444:36:21"}]},"nativeSrc":"5872:618:21","nodeType":"YulCase","src":"5872:618:21","value":{"kind":"number","nativeSrc":"5877:1:21","nodeType":"YulLiteral","src":"5877:1:21","type":"","value":"1"}},{"body":{"nativeSrc":"6507:222:21","nodeType":"YulBlock","src":"6507:222:21","statements":[{"nativeSrc":"6521:14:21","nodeType":"YulVariableDeclaration","src":"6521:14:21","value":{"kind":"number","nativeSrc":"6534:1:21","nodeType":"YulLiteral","src":"6534:1:21","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"6525:5:21","nodeType":"YulTypedName","src":"6525:5:21","type":""}]},{"body":{"nativeSrc":"6558:67:21","nodeType":"YulBlock","src":"6558:67:21","statements":[{"nativeSrc":"6576:35:21","nodeType":"YulAssignment","src":"6576:35:21","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6595:3:21","nodeType":"YulIdentifier","src":"6595:3:21"},{"name":"srcOffset","nativeSrc":"6600:9:21","nodeType":"YulIdentifier","src":"6600:9:21"}],"functionName":{"name":"add","nativeSrc":"6591:3:21","nodeType":"YulIdentifier","src":"6591:3:21"},"nativeSrc":"6591:19:21","nodeType":"YulFunctionCall","src":"6591:19:21"}],"functionName":{"name":"mload","nativeSrc":"6585:5:21","nodeType":"YulIdentifier","src":"6585:5:21"},"nativeSrc":"6585:26:21","nodeType":"YulFunctionCall","src":"6585:26:21"},"variableNames":[{"name":"value","nativeSrc":"6576:5:21","nodeType":"YulIdentifier","src":"6576:5:21"}]}]},"condition":{"name":"newLen","nativeSrc":"6551:6:21","nodeType":"YulIdentifier","src":"6551:6:21"},"nativeSrc":"6548:77:21","nodeType":"YulIf","src":"6548:77:21"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6645:4:21","nodeType":"YulIdentifier","src":"6645:4:21"},{"arguments":[{"name":"value","nativeSrc":"6704:5:21","nodeType":"YulIdentifier","src":"6704:5:21"},{"name":"newLen","nativeSrc":"6711:6:21","nodeType":"YulIdentifier","src":"6711:6:21"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"6651:52:21","nodeType":"YulIdentifier","src":"6651:52:21"},"nativeSrc":"6651:67:21","nodeType":"YulFunctionCall","src":"6651:67:21"}],"functionName":{"name":"sstore","nativeSrc":"6638:6:21","nodeType":"YulIdentifier","src":"6638:6:21"},"nativeSrc":"6638:81:21","nodeType":"YulFunctionCall","src":"6638:81:21"},"nativeSrc":"6638:81:21","nodeType":"YulExpressionStatement","src":"6638:81:21"}]},"nativeSrc":"6499:230:21","nodeType":"YulCase","src":"6499:230:21","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"5852:6:21","nodeType":"YulIdentifier","src":"5852:6:21"},{"kind":"number","nativeSrc":"5860:2:21","nodeType":"YulLiteral","src":"5860:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"5849:2:21","nodeType":"YulIdentifier","src":"5849:2:21"},"nativeSrc":"5849:14:21","nodeType":"YulFunctionCall","src":"5849:14:21"},"nativeSrc":"5842:887:21","nodeType":"YulSwitch","src":"5842:887:21"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"5340:1395:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"5421:4:21","nodeType":"YulTypedName","src":"5421:4:21","type":""},{"name":"src","nativeSrc":"5427:3:21","nodeType":"YulTypedName","src":"5427:3:21","type":""}],"src":"5340:1395:21"},{"body":{"nativeSrc":"6806:53:21","nodeType":"YulBlock","src":"6806:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6823:3:21","nodeType":"YulIdentifier","src":"6823:3:21"},{"arguments":[{"name":"value","nativeSrc":"6846:5:21","nodeType":"YulIdentifier","src":"6846:5:21"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"6828:17:21","nodeType":"YulIdentifier","src":"6828:17:21"},"nativeSrc":"6828:24:21","nodeType":"YulFunctionCall","src":"6828:24:21"}],"functionName":{"name":"mstore","nativeSrc":"6816:6:21","nodeType":"YulIdentifier","src":"6816:6:21"},"nativeSrc":"6816:37:21","nodeType":"YulFunctionCall","src":"6816:37:21"},"nativeSrc":"6816:37:21","nodeType":"YulExpressionStatement","src":"6816:37:21"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6741:118:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6794:5:21","nodeType":"YulTypedName","src":"6794:5:21","type":""},{"name":"pos","nativeSrc":"6801:3:21","nodeType":"YulTypedName","src":"6801:3:21","type":""}],"src":"6741:118:21"},{"body":{"nativeSrc":"6963:124:21","nodeType":"YulBlock","src":"6963:124:21","statements":[{"nativeSrc":"6973:26:21","nodeType":"YulAssignment","src":"6973:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"6985:9:21","nodeType":"YulIdentifier","src":"6985:9:21"},{"kind":"number","nativeSrc":"6996:2:21","nodeType":"YulLiteral","src":"6996:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6981:3:21","nodeType":"YulIdentifier","src":"6981:3:21"},"nativeSrc":"6981:18:21","nodeType":"YulFunctionCall","src":"6981:18:21"},"variableNames":[{"name":"tail","nativeSrc":"6973:4:21","nodeType":"YulIdentifier","src":"6973:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"7053:6:21","nodeType":"YulIdentifier","src":"7053:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"7066:9:21","nodeType":"YulIdentifier","src":"7066:9:21"},{"kind":"number","nativeSrc":"7077:1:21","nodeType":"YulLiteral","src":"7077:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7062:3:21","nodeType":"YulIdentifier","src":"7062:3:21"},"nativeSrc":"7062:17:21","nodeType":"YulFunctionCall","src":"7062:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"7009:43:21","nodeType":"YulIdentifier","src":"7009:43:21"},"nativeSrc":"7009:71:21","nodeType":"YulFunctionCall","src":"7009:71:21"},"nativeSrc":"7009:71:21","nodeType":"YulExpressionStatement","src":"7009:71:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"6865:222:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6935:9:21","nodeType":"YulTypedName","src":"6935:9:21","type":""},{"name":"value0","nativeSrc":"6947:6:21","nodeType":"YulTypedName","src":"6947:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6958:4:21","nodeType":"YulTypedName","src":"6958:4:21","type":""}],"src":"6865:222:21"},{"body":{"nativeSrc":"7121:152:21","nodeType":"YulBlock","src":"7121:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7138:1:21","nodeType":"YulLiteral","src":"7138:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"7141:77:21","nodeType":"YulLiteral","src":"7141:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"7131:6:21","nodeType":"YulIdentifier","src":"7131:6:21"},"nativeSrc":"7131:88:21","nodeType":"YulFunctionCall","src":"7131:88:21"},"nativeSrc":"7131:88:21","nodeType":"YulExpressionStatement","src":"7131:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7235:1:21","nodeType":"YulLiteral","src":"7235:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"7238:4:21","nodeType":"YulLiteral","src":"7238:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"7228:6:21","nodeType":"YulIdentifier","src":"7228:6:21"},"nativeSrc":"7228:15:21","nodeType":"YulFunctionCall","src":"7228:15:21"},"nativeSrc":"7228:15:21","nodeType":"YulExpressionStatement","src":"7228:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7259:1:21","nodeType":"YulLiteral","src":"7259:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"7262:4:21","nodeType":"YulLiteral","src":"7262:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7252:6:21","nodeType":"YulIdentifier","src":"7252:6:21"},"nativeSrc":"7252:15:21","nodeType":"YulFunctionCall","src":"7252:15:21"},"nativeSrc":"7252:15:21","nodeType":"YulExpressionStatement","src":"7252:15:21"}]},"name":"panic_error_0x11","nativeSrc":"7093:180:21","nodeType":"YulFunctionDefinition","src":"7093:180:21"},{"body":{"nativeSrc":"7327:362:21","nodeType":"YulBlock","src":"7327:362:21","statements":[{"nativeSrc":"7337:25:21","nodeType":"YulAssignment","src":"7337:25:21","value":{"arguments":[{"name":"x","nativeSrc":"7360:1:21","nodeType":"YulIdentifier","src":"7360:1:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7342:17:21","nodeType":"YulIdentifier","src":"7342:17:21"},"nativeSrc":"7342:20:21","nodeType":"YulFunctionCall","src":"7342:20:21"},"variableNames":[{"name":"x","nativeSrc":"7337:1:21","nodeType":"YulIdentifier","src":"7337:1:21"}]},{"nativeSrc":"7371:25:21","nodeType":"YulAssignment","src":"7371:25:21","value":{"arguments":[{"name":"y","nativeSrc":"7394:1:21","nodeType":"YulIdentifier","src":"7394:1:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7376:17:21","nodeType":"YulIdentifier","src":"7376:17:21"},"nativeSrc":"7376:20:21","nodeType":"YulFunctionCall","src":"7376:20:21"},"variableNames":[{"name":"y","nativeSrc":"7371:1:21","nodeType":"YulIdentifier","src":"7371:1:21"}]},{"nativeSrc":"7405:28:21","nodeType":"YulVariableDeclaration","src":"7405:28:21","value":{"arguments":[{"name":"x","nativeSrc":"7428:1:21","nodeType":"YulIdentifier","src":"7428:1:21"},{"name":"y","nativeSrc":"7431:1:21","nodeType":"YulIdentifier","src":"7431:1:21"}],"functionName":{"name":"mul","nativeSrc":"7424:3:21","nodeType":"YulIdentifier","src":"7424:3:21"},"nativeSrc":"7424:9:21","nodeType":"YulFunctionCall","src":"7424:9:21"},"variables":[{"name":"product_raw","nativeSrc":"7409:11:21","nodeType":"YulTypedName","src":"7409:11:21","type":""}]},{"nativeSrc":"7442:41:21","nodeType":"YulAssignment","src":"7442:41:21","value":{"arguments":[{"name":"product_raw","nativeSrc":"7471:11:21","nodeType":"YulIdentifier","src":"7471:11:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7453:17:21","nodeType":"YulIdentifier","src":"7453:17:21"},"nativeSrc":"7453:30:21","nodeType":"YulFunctionCall","src":"7453:30:21"},"variableNames":[{"name":"product","nativeSrc":"7442:7:21","nodeType":"YulIdentifier","src":"7442:7:21"}]},{"body":{"nativeSrc":"7660:22:21","nodeType":"YulBlock","src":"7660:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7662:16:21","nodeType":"YulIdentifier","src":"7662:16:21"},"nativeSrc":"7662:18:21","nodeType":"YulFunctionCall","src":"7662:18:21"},"nativeSrc":"7662:18:21","nodeType":"YulExpressionStatement","src":"7662:18:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"7593:1:21","nodeType":"YulIdentifier","src":"7593:1:21"}],"functionName":{"name":"iszero","nativeSrc":"7586:6:21","nodeType":"YulIdentifier","src":"7586:6:21"},"nativeSrc":"7586:9:21","nodeType":"YulFunctionCall","src":"7586:9:21"},{"arguments":[{"name":"y","nativeSrc":"7616:1:21","nodeType":"YulIdentifier","src":"7616:1:21"},{"arguments":[{"name":"product","nativeSrc":"7623:7:21","nodeType":"YulIdentifier","src":"7623:7:21"},{"name":"x","nativeSrc":"7632:1:21","nodeType":"YulIdentifier","src":"7632:1:21"}],"functionName":{"name":"div","nativeSrc":"7619:3:21","nodeType":"YulIdentifier","src":"7619:3:21"},"nativeSrc":"7619:15:21","nodeType":"YulFunctionCall","src":"7619:15:21"}],"functionName":{"name":"eq","nativeSrc":"7613:2:21","nodeType":"YulIdentifier","src":"7613:2:21"},"nativeSrc":"7613:22:21","nodeType":"YulFunctionCall","src":"7613:22:21"}],"functionName":{"name":"or","nativeSrc":"7566:2:21","nodeType":"YulIdentifier","src":"7566:2:21"},"nativeSrc":"7566:83:21","nodeType":"YulFunctionCall","src":"7566:83:21"}],"functionName":{"name":"iszero","nativeSrc":"7546:6:21","nodeType":"YulIdentifier","src":"7546:6:21"},"nativeSrc":"7546:113:21","nodeType":"YulFunctionCall","src":"7546:113:21"},"nativeSrc":"7543:139:21","nodeType":"YulIf","src":"7543:139:21"}]},"name":"checked_mul_t_uint256","nativeSrc":"7279:410:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"7310:1:21","nodeType":"YulTypedName","src":"7310:1:21","type":""},{"name":"y","nativeSrc":"7313:1:21","nodeType":"YulTypedName","src":"7313:1:21","type":""}],"returnVariables":[{"name":"product","nativeSrc":"7319:7:21","nodeType":"YulTypedName","src":"7319:7:21","type":""}],"src":"7279:410:21"},{"body":{"nativeSrc":"7723:152:21","nodeType":"YulBlock","src":"7723:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7740:1:21","nodeType":"YulLiteral","src":"7740:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"7743:77:21","nodeType":"YulLiteral","src":"7743:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"7733:6:21","nodeType":"YulIdentifier","src":"7733:6:21"},"nativeSrc":"7733:88:21","nodeType":"YulFunctionCall","src":"7733:88:21"},"nativeSrc":"7733:88:21","nodeType":"YulExpressionStatement","src":"7733:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7837:1:21","nodeType":"YulLiteral","src":"7837:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"7840:4:21","nodeType":"YulLiteral","src":"7840:4:21","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"7830:6:21","nodeType":"YulIdentifier","src":"7830:6:21"},"nativeSrc":"7830:15:21","nodeType":"YulFunctionCall","src":"7830:15:21"},"nativeSrc":"7830:15:21","nodeType":"YulExpressionStatement","src":"7830:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7861:1:21","nodeType":"YulLiteral","src":"7861:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"7864:4:21","nodeType":"YulLiteral","src":"7864:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7854:6:21","nodeType":"YulIdentifier","src":"7854:6:21"},"nativeSrc":"7854:15:21","nodeType":"YulFunctionCall","src":"7854:15:21"},"nativeSrc":"7854:15:21","nodeType":"YulExpressionStatement","src":"7854:15:21"}]},"name":"panic_error_0x12","nativeSrc":"7695:180:21","nodeType":"YulFunctionDefinition","src":"7695:180:21"},{"body":{"nativeSrc":"7923:143:21","nodeType":"YulBlock","src":"7923:143:21","statements":[{"nativeSrc":"7933:25:21","nodeType":"YulAssignment","src":"7933:25:21","value":{"arguments":[{"name":"x","nativeSrc":"7956:1:21","nodeType":"YulIdentifier","src":"7956:1:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7938:17:21","nodeType":"YulIdentifier","src":"7938:17:21"},"nativeSrc":"7938:20:21","nodeType":"YulFunctionCall","src":"7938:20:21"},"variableNames":[{"name":"x","nativeSrc":"7933:1:21","nodeType":"YulIdentifier","src":"7933:1:21"}]},{"nativeSrc":"7967:25:21","nodeType":"YulAssignment","src":"7967:25:21","value":{"arguments":[{"name":"y","nativeSrc":"7990:1:21","nodeType":"YulIdentifier","src":"7990:1:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7972:17:21","nodeType":"YulIdentifier","src":"7972:17:21"},"nativeSrc":"7972:20:21","nodeType":"YulFunctionCall","src":"7972:20:21"},"variableNames":[{"name":"y","nativeSrc":"7967:1:21","nodeType":"YulIdentifier","src":"7967:1:21"}]},{"body":{"nativeSrc":"8014:22:21","nodeType":"YulBlock","src":"8014:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"8016:16:21","nodeType":"YulIdentifier","src":"8016:16:21"},"nativeSrc":"8016:18:21","nodeType":"YulFunctionCall","src":"8016:18:21"},"nativeSrc":"8016:18:21","nodeType":"YulExpressionStatement","src":"8016:18:21"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"8011:1:21","nodeType":"YulIdentifier","src":"8011:1:21"}],"functionName":{"name":"iszero","nativeSrc":"8004:6:21","nodeType":"YulIdentifier","src":"8004:6:21"},"nativeSrc":"8004:9:21","nodeType":"YulFunctionCall","src":"8004:9:21"},"nativeSrc":"8001:35:21","nodeType":"YulIf","src":"8001:35:21"},{"nativeSrc":"8046:14:21","nodeType":"YulAssignment","src":"8046:14:21","value":{"arguments":[{"name":"x","nativeSrc":"8055:1:21","nodeType":"YulIdentifier","src":"8055:1:21"},{"name":"y","nativeSrc":"8058:1:21","nodeType":"YulIdentifier","src":"8058:1:21"}],"functionName":{"name":"div","nativeSrc":"8051:3:21","nodeType":"YulIdentifier","src":"8051:3:21"},"nativeSrc":"8051:9:21","nodeType":"YulFunctionCall","src":"8051:9:21"},"variableNames":[{"name":"r","nativeSrc":"8046:1:21","nodeType":"YulIdentifier","src":"8046:1:21"}]}]},"name":"checked_div_t_uint256","nativeSrc":"7881:185:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"7912:1:21","nodeType":"YulTypedName","src":"7912:1:21","type":""},{"name":"y","nativeSrc":"7915:1:21","nodeType":"YulTypedName","src":"7915:1:21","type":""}],"returnVariables":[{"name":"r","nativeSrc":"7921:1:21","nodeType":"YulTypedName","src":"7921:1:21","type":""}],"src":"7881:185:21"},{"body":{"nativeSrc":"8117:32:21","nodeType":"YulBlock","src":"8117:32:21","statements":[{"nativeSrc":"8127:16:21","nodeType":"YulAssignment","src":"8127:16:21","value":{"name":"value","nativeSrc":"8138:5:21","nodeType":"YulIdentifier","src":"8138:5:21"},"variableNames":[{"name":"cleaned","nativeSrc":"8127:7:21","nodeType":"YulIdentifier","src":"8127:7:21"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"8072:77:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8099:5:21","nodeType":"YulTypedName","src":"8099:5:21","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"8109:7:21","nodeType":"YulTypedName","src":"8109:7:21","type":""}],"src":"8072:77:21"},{"body":{"nativeSrc":"8220:53:21","nodeType":"YulBlock","src":"8220:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8237:3:21","nodeType":"YulIdentifier","src":"8237:3:21"},{"arguments":[{"name":"value","nativeSrc":"8260:5:21","nodeType":"YulIdentifier","src":"8260:5:21"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"8242:17:21","nodeType":"YulIdentifier","src":"8242:17:21"},"nativeSrc":"8242:24:21","nodeType":"YulFunctionCall","src":"8242:24:21"}],"functionName":{"name":"mstore","nativeSrc":"8230:6:21","nodeType":"YulIdentifier","src":"8230:6:21"},"nativeSrc":"8230:37:21","nodeType":"YulFunctionCall","src":"8230:37:21"},"nativeSrc":"8230:37:21","nodeType":"YulExpressionStatement","src":"8230:37:21"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"8155:118:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8208:5:21","nodeType":"YulTypedName","src":"8208:5:21","type":""},{"name":"pos","nativeSrc":"8215:3:21","nodeType":"YulTypedName","src":"8215:3:21","type":""}],"src":"8155:118:21"},{"body":{"nativeSrc":"8344:53:21","nodeType":"YulBlock","src":"8344:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8361:3:21","nodeType":"YulIdentifier","src":"8361:3:21"},{"arguments":[{"name":"value","nativeSrc":"8384:5:21","nodeType":"YulIdentifier","src":"8384:5:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"8366:17:21","nodeType":"YulIdentifier","src":"8366:17:21"},"nativeSrc":"8366:24:21","nodeType":"YulFunctionCall","src":"8366:24:21"}],"functionName":{"name":"mstore","nativeSrc":"8354:6:21","nodeType":"YulIdentifier","src":"8354:6:21"},"nativeSrc":"8354:37:21","nodeType":"YulFunctionCall","src":"8354:37:21"},"nativeSrc":"8354:37:21","nodeType":"YulExpressionStatement","src":"8354:37:21"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"8279:118:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8332:5:21","nodeType":"YulTypedName","src":"8332:5:21","type":""},{"name":"pos","nativeSrc":"8339:3:21","nodeType":"YulTypedName","src":"8339:3:21","type":""}],"src":"8279:118:21"},{"body":{"nativeSrc":"8613:454:21","nodeType":"YulBlock","src":"8613:454:21","statements":[{"nativeSrc":"8623:27:21","nodeType":"YulAssignment","src":"8623:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"8635:9:21","nodeType":"YulIdentifier","src":"8635:9:21"},{"kind":"number","nativeSrc":"8646:3:21","nodeType":"YulLiteral","src":"8646:3:21","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"8631:3:21","nodeType":"YulIdentifier","src":"8631:3:21"},"nativeSrc":"8631:19:21","nodeType":"YulFunctionCall","src":"8631:19:21"},"variableNames":[{"name":"tail","nativeSrc":"8623:4:21","nodeType":"YulIdentifier","src":"8623:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"8704:6:21","nodeType":"YulIdentifier","src":"8704:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"8717:9:21","nodeType":"YulIdentifier","src":"8717:9:21"},{"kind":"number","nativeSrc":"8728:1:21","nodeType":"YulLiteral","src":"8728:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8713:3:21","nodeType":"YulIdentifier","src":"8713:3:21"},"nativeSrc":"8713:17:21","nodeType":"YulFunctionCall","src":"8713:17:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"8660:43:21","nodeType":"YulIdentifier","src":"8660:43:21"},"nativeSrc":"8660:71:21","nodeType":"YulFunctionCall","src":"8660:71:21"},"nativeSrc":"8660:71:21","nodeType":"YulExpressionStatement","src":"8660:71:21"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"8785:6:21","nodeType":"YulIdentifier","src":"8785:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"8798:9:21","nodeType":"YulIdentifier","src":"8798:9:21"},{"kind":"number","nativeSrc":"8809:2:21","nodeType":"YulLiteral","src":"8809:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8794:3:21","nodeType":"YulIdentifier","src":"8794:3:21"},"nativeSrc":"8794:18:21","nodeType":"YulFunctionCall","src":"8794:18:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"8741:43:21","nodeType":"YulIdentifier","src":"8741:43:21"},"nativeSrc":"8741:72:21","nodeType":"YulFunctionCall","src":"8741:72:21"},"nativeSrc":"8741:72:21","nodeType":"YulExpressionStatement","src":"8741:72:21"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"8867:6:21","nodeType":"YulIdentifier","src":"8867:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"8880:9:21","nodeType":"YulIdentifier","src":"8880:9:21"},{"kind":"number","nativeSrc":"8891:2:21","nodeType":"YulLiteral","src":"8891:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8876:3:21","nodeType":"YulIdentifier","src":"8876:3:21"},"nativeSrc":"8876:18:21","nodeType":"YulFunctionCall","src":"8876:18:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"8823:43:21","nodeType":"YulIdentifier","src":"8823:43:21"},"nativeSrc":"8823:72:21","nodeType":"YulFunctionCall","src":"8823:72:21"},"nativeSrc":"8823:72:21","nodeType":"YulExpressionStatement","src":"8823:72:21"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"8949:6:21","nodeType":"YulIdentifier","src":"8949:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"8962:9:21","nodeType":"YulIdentifier","src":"8962:9:21"},{"kind":"number","nativeSrc":"8973:2:21","nodeType":"YulLiteral","src":"8973:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8958:3:21","nodeType":"YulIdentifier","src":"8958:3:21"},"nativeSrc":"8958:18:21","nodeType":"YulFunctionCall","src":"8958:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"8905:43:21","nodeType":"YulIdentifier","src":"8905:43:21"},"nativeSrc":"8905:72:21","nodeType":"YulFunctionCall","src":"8905:72:21"},"nativeSrc":"8905:72:21","nodeType":"YulExpressionStatement","src":"8905:72:21"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"9031:6:21","nodeType":"YulIdentifier","src":"9031:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"9044:9:21","nodeType":"YulIdentifier","src":"9044:9:21"},{"kind":"number","nativeSrc":"9055:3:21","nodeType":"YulLiteral","src":"9055:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"9040:3:21","nodeType":"YulIdentifier","src":"9040:3:21"},"nativeSrc":"9040:19:21","nodeType":"YulFunctionCall","src":"9040:19:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"8987:43:21","nodeType":"YulIdentifier","src":"8987:43:21"},"nativeSrc":"8987:73:21","nodeType":"YulFunctionCall","src":"8987:73:21"},"nativeSrc":"8987:73:21","nodeType":"YulExpressionStatement","src":"8987:73:21"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"8403:664:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8553:9:21","nodeType":"YulTypedName","src":"8553:9:21","type":""},{"name":"value4","nativeSrc":"8565:6:21","nodeType":"YulTypedName","src":"8565:6:21","type":""},{"name":"value3","nativeSrc":"8573:6:21","nodeType":"YulTypedName","src":"8573:6:21","type":""},{"name":"value2","nativeSrc":"8581:6:21","nodeType":"YulTypedName","src":"8581:6:21","type":""},{"name":"value1","nativeSrc":"8589:6:21","nodeType":"YulTypedName","src":"8589:6:21","type":""},{"name":"value0","nativeSrc":"8597:6:21","nodeType":"YulTypedName","src":"8597:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8608:4:21","nodeType":"YulTypedName","src":"8608:4:21","type":""}],"src":"8403:664:21"},{"body":{"nativeSrc":"9169:73:21","nodeType":"YulBlock","src":"9169:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9186:3:21","nodeType":"YulIdentifier","src":"9186:3:21"},{"name":"length","nativeSrc":"9191:6:21","nodeType":"YulIdentifier","src":"9191:6:21"}],"functionName":{"name":"mstore","nativeSrc":"9179:6:21","nodeType":"YulIdentifier","src":"9179:6:21"},"nativeSrc":"9179:19:21","nodeType":"YulFunctionCall","src":"9179:19:21"},"nativeSrc":"9179:19:21","nodeType":"YulExpressionStatement","src":"9179:19:21"},{"nativeSrc":"9207:29:21","nodeType":"YulAssignment","src":"9207:29:21","value":{"arguments":[{"name":"pos","nativeSrc":"9226:3:21","nodeType":"YulIdentifier","src":"9226:3:21"},{"kind":"number","nativeSrc":"9231:4:21","nodeType":"YulLiteral","src":"9231:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9222:3:21","nodeType":"YulIdentifier","src":"9222:3:21"},"nativeSrc":"9222:14:21","nodeType":"YulFunctionCall","src":"9222:14:21"},"variableNames":[{"name":"updated_pos","nativeSrc":"9207:11:21","nodeType":"YulIdentifier","src":"9207:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"9073:169:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"9141:3:21","nodeType":"YulTypedName","src":"9141:3:21","type":""},{"name":"length","nativeSrc":"9146:6:21","nodeType":"YulTypedName","src":"9146:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"9157:11:21","nodeType":"YulTypedName","src":"9157:11:21","type":""}],"src":"9073:169:21"},{"body":{"nativeSrc":"9310:184:21","nodeType":"YulBlock","src":"9310:184:21","statements":[{"nativeSrc":"9320:10:21","nodeType":"YulVariableDeclaration","src":"9320:10:21","value":{"kind":"number","nativeSrc":"9329:1:21","nodeType":"YulLiteral","src":"9329:1:21","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"9324:1:21","nodeType":"YulTypedName","src":"9324:1:21","type":""}]},{"body":{"nativeSrc":"9389:63:21","nodeType":"YulBlock","src":"9389:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"9414:3:21","nodeType":"YulIdentifier","src":"9414:3:21"},{"name":"i","nativeSrc":"9419:1:21","nodeType":"YulIdentifier","src":"9419:1:21"}],"functionName":{"name":"add","nativeSrc":"9410:3:21","nodeType":"YulIdentifier","src":"9410:3:21"},"nativeSrc":"9410:11:21","nodeType":"YulFunctionCall","src":"9410:11:21"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"9433:3:21","nodeType":"YulIdentifier","src":"9433:3:21"},{"name":"i","nativeSrc":"9438:1:21","nodeType":"YulIdentifier","src":"9438:1:21"}],"functionName":{"name":"add","nativeSrc":"9429:3:21","nodeType":"YulIdentifier","src":"9429:3:21"},"nativeSrc":"9429:11:21","nodeType":"YulFunctionCall","src":"9429:11:21"}],"functionName":{"name":"mload","nativeSrc":"9423:5:21","nodeType":"YulIdentifier","src":"9423:5:21"},"nativeSrc":"9423:18:21","nodeType":"YulFunctionCall","src":"9423:18:21"}],"functionName":{"name":"mstore","nativeSrc":"9403:6:21","nodeType":"YulIdentifier","src":"9403:6:21"},"nativeSrc":"9403:39:21","nodeType":"YulFunctionCall","src":"9403:39:21"},"nativeSrc":"9403:39:21","nodeType":"YulExpressionStatement","src":"9403:39:21"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"9350:1:21","nodeType":"YulIdentifier","src":"9350:1:21"},{"name":"length","nativeSrc":"9353:6:21","nodeType":"YulIdentifier","src":"9353:6:21"}],"functionName":{"name":"lt","nativeSrc":"9347:2:21","nodeType":"YulIdentifier","src":"9347:2:21"},"nativeSrc":"9347:13:21","nodeType":"YulFunctionCall","src":"9347:13:21"},"nativeSrc":"9339:113:21","nodeType":"YulForLoop","post":{"nativeSrc":"9361:19:21","nodeType":"YulBlock","src":"9361:19:21","statements":[{"nativeSrc":"9363:15:21","nodeType":"YulAssignment","src":"9363:15:21","value":{"arguments":[{"name":"i","nativeSrc":"9372:1:21","nodeType":"YulIdentifier","src":"9372:1:21"},{"kind":"number","nativeSrc":"9375:2:21","nodeType":"YulLiteral","src":"9375:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9368:3:21","nodeType":"YulIdentifier","src":"9368:3:21"},"nativeSrc":"9368:10:21","nodeType":"YulFunctionCall","src":"9368:10:21"},"variableNames":[{"name":"i","nativeSrc":"9363:1:21","nodeType":"YulIdentifier","src":"9363:1:21"}]}]},"pre":{"nativeSrc":"9343:3:21","nodeType":"YulBlock","src":"9343:3:21","statements":[]},"src":"9339:113:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"9472:3:21","nodeType":"YulIdentifier","src":"9472:3:21"},{"name":"length","nativeSrc":"9477:6:21","nodeType":"YulIdentifier","src":"9477:6:21"}],"functionName":{"name":"add","nativeSrc":"9468:3:21","nodeType":"YulIdentifier","src":"9468:3:21"},"nativeSrc":"9468:16:21","nodeType":"YulFunctionCall","src":"9468:16:21"},{"kind":"number","nativeSrc":"9486:1:21","nodeType":"YulLiteral","src":"9486:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"9461:6:21","nodeType":"YulIdentifier","src":"9461:6:21"},"nativeSrc":"9461:27:21","nodeType":"YulFunctionCall","src":"9461:27:21"},"nativeSrc":"9461:27:21","nodeType":"YulExpressionStatement","src":"9461:27:21"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"9248:246:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"9292:3:21","nodeType":"YulTypedName","src":"9292:3:21","type":""},{"name":"dst","nativeSrc":"9297:3:21","nodeType":"YulTypedName","src":"9297:3:21","type":""},{"name":"length","nativeSrc":"9302:6:21","nodeType":"YulTypedName","src":"9302:6:21","type":""}],"src":"9248:246:21"},{"body":{"nativeSrc":"9548:54:21","nodeType":"YulBlock","src":"9548:54:21","statements":[{"nativeSrc":"9558:38:21","nodeType":"YulAssignment","src":"9558:38:21","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"9576:5:21","nodeType":"YulIdentifier","src":"9576:5:21"},{"kind":"number","nativeSrc":"9583:2:21","nodeType":"YulLiteral","src":"9583:2:21","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"9572:3:21","nodeType":"YulIdentifier","src":"9572:3:21"},"nativeSrc":"9572:14:21","nodeType":"YulFunctionCall","src":"9572:14:21"},{"arguments":[{"kind":"number","nativeSrc":"9592:2:21","nodeType":"YulLiteral","src":"9592:2:21","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"9588:3:21","nodeType":"YulIdentifier","src":"9588:3:21"},"nativeSrc":"9588:7:21","nodeType":"YulFunctionCall","src":"9588:7:21"}],"functionName":{"name":"and","nativeSrc":"9568:3:21","nodeType":"YulIdentifier","src":"9568:3:21"},"nativeSrc":"9568:28:21","nodeType":"YulFunctionCall","src":"9568:28:21"},"variableNames":[{"name":"result","nativeSrc":"9558:6:21","nodeType":"YulIdentifier","src":"9558:6:21"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"9500:102:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9531:5:21","nodeType":"YulTypedName","src":"9531:5:21","type":""}],"returnVariables":[{"name":"result","nativeSrc":"9541:6:21","nodeType":"YulTypedName","src":"9541:6:21","type":""}],"src":"9500:102:21"},{"body":{"nativeSrc":"9700:285:21","nodeType":"YulBlock","src":"9700:285:21","statements":[{"nativeSrc":"9710:53:21","nodeType":"YulVariableDeclaration","src":"9710:53:21","value":{"arguments":[{"name":"value","nativeSrc":"9757:5:21","nodeType":"YulIdentifier","src":"9757:5:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"9724:32:21","nodeType":"YulIdentifier","src":"9724:32:21"},"nativeSrc":"9724:39:21","nodeType":"YulFunctionCall","src":"9724:39:21"},"variables":[{"name":"length","nativeSrc":"9714:6:21","nodeType":"YulTypedName","src":"9714:6:21","type":""}]},{"nativeSrc":"9772:78:21","nodeType":"YulAssignment","src":"9772:78:21","value":{"arguments":[{"name":"pos","nativeSrc":"9838:3:21","nodeType":"YulIdentifier","src":"9838:3:21"},{"name":"length","nativeSrc":"9843:6:21","nodeType":"YulIdentifier","src":"9843:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"9779:58:21","nodeType":"YulIdentifier","src":"9779:58:21"},"nativeSrc":"9779:71:21","nodeType":"YulFunctionCall","src":"9779:71:21"},"variableNames":[{"name":"pos","nativeSrc":"9772:3:21","nodeType":"YulIdentifier","src":"9772:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"9898:5:21","nodeType":"YulIdentifier","src":"9898:5:21"},{"kind":"number","nativeSrc":"9905:4:21","nodeType":"YulLiteral","src":"9905:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9894:3:21","nodeType":"YulIdentifier","src":"9894:3:21"},"nativeSrc":"9894:16:21","nodeType":"YulFunctionCall","src":"9894:16:21"},{"name":"pos","nativeSrc":"9912:3:21","nodeType":"YulIdentifier","src":"9912:3:21"},{"name":"length","nativeSrc":"9917:6:21","nodeType":"YulIdentifier","src":"9917:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"9859:34:21","nodeType":"YulIdentifier","src":"9859:34:21"},"nativeSrc":"9859:65:21","nodeType":"YulFunctionCall","src":"9859:65:21"},"nativeSrc":"9859:65:21","nodeType":"YulExpressionStatement","src":"9859:65:21"},{"nativeSrc":"9933:46:21","nodeType":"YulAssignment","src":"9933:46:21","value":{"arguments":[{"name":"pos","nativeSrc":"9944:3:21","nodeType":"YulIdentifier","src":"9944:3:21"},{"arguments":[{"name":"length","nativeSrc":"9971:6:21","nodeType":"YulIdentifier","src":"9971:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"9949:21:21","nodeType":"YulIdentifier","src":"9949:21:21"},"nativeSrc":"9949:29:21","nodeType":"YulFunctionCall","src":"9949:29:21"}],"functionName":{"name":"add","nativeSrc":"9940:3:21","nodeType":"YulIdentifier","src":"9940:3:21"},"nativeSrc":"9940:39:21","nodeType":"YulFunctionCall","src":"9940:39:21"},"variableNames":[{"name":"end","nativeSrc":"9933:3:21","nodeType":"YulIdentifier","src":"9933:3:21"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"9608:377:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9681:5:21","nodeType":"YulTypedName","src":"9681:5:21","type":""},{"name":"pos","nativeSrc":"9688:3:21","nodeType":"YulTypedName","src":"9688:3:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"9696:3:21","nodeType":"YulTypedName","src":"9696:3:21","type":""}],"src":"9608:377:21"},{"body":{"nativeSrc":"10109:195:21","nodeType":"YulBlock","src":"10109:195:21","statements":[{"nativeSrc":"10119:26:21","nodeType":"YulAssignment","src":"10119:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"10131:9:21","nodeType":"YulIdentifier","src":"10131:9:21"},{"kind":"number","nativeSrc":"10142:2:21","nodeType":"YulLiteral","src":"10142:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10127:3:21","nodeType":"YulIdentifier","src":"10127:3:21"},"nativeSrc":"10127:18:21","nodeType":"YulFunctionCall","src":"10127:18:21"},"variableNames":[{"name":"tail","nativeSrc":"10119:4:21","nodeType":"YulIdentifier","src":"10119:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10166:9:21","nodeType":"YulIdentifier","src":"10166:9:21"},{"kind":"number","nativeSrc":"10177:1:21","nodeType":"YulLiteral","src":"10177:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10162:3:21","nodeType":"YulIdentifier","src":"10162:3:21"},"nativeSrc":"10162:17:21","nodeType":"YulFunctionCall","src":"10162:17:21"},{"arguments":[{"name":"tail","nativeSrc":"10185:4:21","nodeType":"YulIdentifier","src":"10185:4:21"},{"name":"headStart","nativeSrc":"10191:9:21","nodeType":"YulIdentifier","src":"10191:9:21"}],"functionName":{"name":"sub","nativeSrc":"10181:3:21","nodeType":"YulIdentifier","src":"10181:3:21"},"nativeSrc":"10181:20:21","nodeType":"YulFunctionCall","src":"10181:20:21"}],"functionName":{"name":"mstore","nativeSrc":"10155:6:21","nodeType":"YulIdentifier","src":"10155:6:21"},"nativeSrc":"10155:47:21","nodeType":"YulFunctionCall","src":"10155:47:21"},"nativeSrc":"10155:47:21","nodeType":"YulExpressionStatement","src":"10155:47:21"},{"nativeSrc":"10211:86:21","nodeType":"YulAssignment","src":"10211:86:21","value":{"arguments":[{"name":"value0","nativeSrc":"10283:6:21","nodeType":"YulIdentifier","src":"10283:6:21"},{"name":"tail","nativeSrc":"10292:4:21","nodeType":"YulIdentifier","src":"10292:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"10219:63:21","nodeType":"YulIdentifier","src":"10219:63:21"},"nativeSrc":"10219:78:21","nodeType":"YulFunctionCall","src":"10219:78:21"},"variableNames":[{"name":"tail","nativeSrc":"10211:4:21","nodeType":"YulIdentifier","src":"10211:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"9991:313:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10081:9:21","nodeType":"YulTypedName","src":"10081:9:21","type":""},{"name":"value0","nativeSrc":"10093:6:21","nodeType":"YulTypedName","src":"10093:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10104:4:21","nodeType":"YulTypedName","src":"10104:4:21","type":""}],"src":"9991:313:21"},{"body":{"nativeSrc":"10368:40:21","nodeType":"YulBlock","src":"10368:40:21","statements":[{"nativeSrc":"10379:22:21","nodeType":"YulAssignment","src":"10379:22:21","value":{"arguments":[{"name":"value","nativeSrc":"10395:5:21","nodeType":"YulIdentifier","src":"10395:5:21"}],"functionName":{"name":"mload","nativeSrc":"10389:5:21","nodeType":"YulIdentifier","src":"10389:5:21"},"nativeSrc":"10389:12:21","nodeType":"YulFunctionCall","src":"10389:12:21"},"variableNames":[{"name":"length","nativeSrc":"10379:6:21","nodeType":"YulIdentifier","src":"10379:6:21"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"10310:98:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10351:5:21","nodeType":"YulTypedName","src":"10351:5:21","type":""}],"returnVariables":[{"name":"length","nativeSrc":"10361:6:21","nodeType":"YulTypedName","src":"10361:6:21","type":""}],"src":"10310:98:21"},{"body":{"nativeSrc":"10470:60:21","nodeType":"YulBlock","src":"10470:60:21","statements":[{"nativeSrc":"10480:11:21","nodeType":"YulAssignment","src":"10480:11:21","value":{"name":"ptr","nativeSrc":"10488:3:21","nodeType":"YulIdentifier","src":"10488:3:21"},"variableNames":[{"name":"data","nativeSrc":"10480:4:21","nodeType":"YulIdentifier","src":"10480:4:21"}]},{"nativeSrc":"10501:22:21","nodeType":"YulAssignment","src":"10501:22:21","value":{"arguments":[{"name":"ptr","nativeSrc":"10513:3:21","nodeType":"YulIdentifier","src":"10513:3:21"},{"kind":"number","nativeSrc":"10518:4:21","nodeType":"YulLiteral","src":"10518:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10509:3:21","nodeType":"YulIdentifier","src":"10509:3:21"},"nativeSrc":"10509:14:21","nodeType":"YulFunctionCall","src":"10509:14:21"},"variableNames":[{"name":"data","nativeSrc":"10501:4:21","nodeType":"YulIdentifier","src":"10501:4:21"}]}]},"name":"array_dataslot_t_bytes_memory_ptr","nativeSrc":"10414:116:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"10457:3:21","nodeType":"YulTypedName","src":"10457:3:21","type":""}],"returnVariables":[{"name":"data","nativeSrc":"10465:4:21","nodeType":"YulTypedName","src":"10465:4:21","type":""}],"src":"10414:116:21"},{"body":{"nativeSrc":"10591:99:21","nodeType":"YulBlock","src":"10591:99:21","statements":[{"nativeSrc":"10602:42:21","nodeType":"YulVariableDeclaration","src":"10602:42:21","value":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"10639:3:21","nodeType":"YulIdentifier","src":"10639:3:21"}],"functionName":{"name":"mload","nativeSrc":"10633:5:21","nodeType":"YulIdentifier","src":"10633:5:21"},"nativeSrc":"10633:10:21","nodeType":"YulFunctionCall","src":"10633:10:21"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"10615:17:21","nodeType":"YulIdentifier","src":"10615:17:21"},"nativeSrc":"10615:29:21","nodeType":"YulFunctionCall","src":"10615:29:21"},"variables":[{"name":"value","nativeSrc":"10606:5:21","nodeType":"YulTypedName","src":"10606:5:21","type":""}]},{"nativeSrc":"10654:29:21","nodeType":"YulAssignment","src":"10654:29:21","value":{"name":"value","nativeSrc":"10678:5:21","nodeType":"YulIdentifier","src":"10678:5:21"},"variableNames":[{"name":"returnValue","nativeSrc":"10654:11:21","nodeType":"YulIdentifier","src":"10654:11:21"}]}]},"name":"read_from_memoryt_bytes32","nativeSrc":"10536:154:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"10571:3:21","nodeType":"YulTypedName","src":"10571:3:21","type":""}],"returnVariables":[{"name":"returnValue","nativeSrc":"10579:11:21","nodeType":"YulTypedName","src":"10579:11:21","type":""}],"src":"10536:154:21"},{"body":{"nativeSrc":"10786:504:21","nodeType":"YulBlock","src":"10786:504:21","statements":[{"nativeSrc":"10797:52:21","nodeType":"YulVariableDeclaration","src":"10797:52:21","value":{"arguments":[{"name":"array","nativeSrc":"10843:5:21","nodeType":"YulIdentifier","src":"10843:5:21"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"10811:31:21","nodeType":"YulIdentifier","src":"10811:31:21"},"nativeSrc":"10811:38:21","nodeType":"YulFunctionCall","src":"10811:38:21"},"variables":[{"name":"length","nativeSrc":"10801:6:21","nodeType":"YulTypedName","src":"10801:6:21","type":""}]},{"nativeSrc":"10858:21:21","nodeType":"YulVariableDeclaration","src":"10858:21:21","value":{"name":"array","nativeSrc":"10874:5:21","nodeType":"YulIdentifier","src":"10874:5:21"},"variables":[{"name":"dataArea","nativeSrc":"10862:8:21","nodeType":"YulTypedName","src":"10862:8:21","type":""}]},{"nativeSrc":"10889:52:21","nodeType":"YulAssignment","src":"10889:52:21","value":{"arguments":[{"name":"array","nativeSrc":"10935:5:21","nodeType":"YulIdentifier","src":"10935:5:21"}],"functionName":{"name":"array_dataslot_t_bytes_memory_ptr","nativeSrc":"10901:33:21","nodeType":"YulIdentifier","src":"10901:33:21"},"nativeSrc":"10901:40:21","nodeType":"YulFunctionCall","src":"10901:40:21"},"variableNames":[{"name":"dataArea","nativeSrc":"10889:8:21","nodeType":"YulIdentifier","src":"10889:8:21"}]},{"nativeSrc":"10951:44:21","nodeType":"YulAssignment","src":"10951:44:21","value":{"arguments":[{"name":"dataArea","nativeSrc":"10986:8:21","nodeType":"YulIdentifier","src":"10986:8:21"}],"functionName":{"name":"read_from_memoryt_bytes32","nativeSrc":"10960:25:21","nodeType":"YulIdentifier","src":"10960:25:21"},"nativeSrc":"10960:35:21","nodeType":"YulFunctionCall","src":"10960:35:21"},"variableNames":[{"name":"value","nativeSrc":"10951:5:21","nodeType":"YulIdentifier","src":"10951:5:21"}]},{"body":{"nativeSrc":"11023:260:21","nodeType":"YulBlock","src":"11023:260:21","statements":[{"nativeSrc":"11037:236:21","nodeType":"YulAssignment","src":"11037:236:21","value":{"arguments":[{"name":"value","nativeSrc":"11067:5:21","nodeType":"YulIdentifier","src":"11067:5:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"11134:1:21","nodeType":"YulLiteral","src":"11134:1:21","type":"","value":"8"},{"arguments":[{"kind":"number","nativeSrc":"11141:2:21","nodeType":"YulLiteral","src":"11141:2:21","type":"","value":"32"},{"name":"length","nativeSrc":"11145:6:21","nodeType":"YulIdentifier","src":"11145:6:21"}],"functionName":{"name":"sub","nativeSrc":"11137:3:21","nodeType":"YulIdentifier","src":"11137:3:21"},"nativeSrc":"11137:15:21","nodeType":"YulFunctionCall","src":"11137:15:21"}],"functionName":{"name":"mul","nativeSrc":"11130:3:21","nodeType":"YulIdentifier","src":"11130:3:21"},"nativeSrc":"11130:23:21","nodeType":"YulFunctionCall","src":"11130:23:21"},{"kind":"number","nativeSrc":"11175:66:21","nodeType":"YulLiteral","src":"11175:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"11090:18:21","nodeType":"YulIdentifier","src":"11090:18:21"},"nativeSrc":"11090:169:21","nodeType":"YulFunctionCall","src":"11090:169:21"}],"functionName":{"name":"and","nativeSrc":"11046:3:21","nodeType":"YulIdentifier","src":"11046:3:21"},"nativeSrc":"11046:227:21","nodeType":"YulFunctionCall","src":"11046:227:21"},"variableNames":[{"name":"value","nativeSrc":"11037:5:21","nodeType":"YulIdentifier","src":"11037:5:21"}]}]},"condition":{"arguments":[{"name":"length","nativeSrc":"11011:6:21","nodeType":"YulIdentifier","src":"11011:6:21"},{"kind":"number","nativeSrc":"11019:2:21","nodeType":"YulLiteral","src":"11019:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"11008:2:21","nodeType":"YulIdentifier","src":"11008:2:21"},"nativeSrc":"11008:14:21","nodeType":"YulFunctionCall","src":"11008:14:21"},"nativeSrc":"11005:278:21","nodeType":"YulIf","src":"11005:278:21"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nativeSrc":"10696:594:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"10770:5:21","nodeType":"YulTypedName","src":"10770:5:21","type":""}],"returnVariables":[{"name":"value","nativeSrc":"10780:5:21","nodeType":"YulTypedName","src":"10780:5:21","type":""}],"src":"10696:594:21"},{"body":{"nativeSrc":"11402:71:21","nodeType":"YulBlock","src":"11402:71:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"11424:6:21","nodeType":"YulIdentifier","src":"11424:6:21"},{"kind":"number","nativeSrc":"11432:1:21","nodeType":"YulLiteral","src":"11432:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11420:3:21","nodeType":"YulIdentifier","src":"11420:3:21"},"nativeSrc":"11420:14:21","nodeType":"YulFunctionCall","src":"11420:14:21"},{"hexValue":"4172617261436f696e2074726164652069732064697361626c6564","kind":"string","nativeSrc":"11436:29:21","nodeType":"YulLiteral","src":"11436:29:21","type":"","value":"AraraCoin trade is disabled"}],"functionName":{"name":"mstore","nativeSrc":"11413:6:21","nodeType":"YulIdentifier","src":"11413:6:21"},"nativeSrc":"11413:53:21","nodeType":"YulFunctionCall","src":"11413:53:21"},"nativeSrc":"11413:53:21","nodeType":"YulExpressionStatement","src":"11413:53:21"}]},"name":"store_literal_in_memory_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7","nativeSrc":"11296:177:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"11394:6:21","nodeType":"YulTypedName","src":"11394:6:21","type":""}],"src":"11296:177:21"},{"body":{"nativeSrc":"11625:220:21","nodeType":"YulBlock","src":"11625:220:21","statements":[{"nativeSrc":"11635:74:21","nodeType":"YulAssignment","src":"11635:74:21","value":{"arguments":[{"name":"pos","nativeSrc":"11701:3:21","nodeType":"YulIdentifier","src":"11701:3:21"},{"kind":"number","nativeSrc":"11706:2:21","nodeType":"YulLiteral","src":"11706:2:21","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"11642:58:21","nodeType":"YulIdentifier","src":"11642:58:21"},"nativeSrc":"11642:67:21","nodeType":"YulFunctionCall","src":"11642:67:21"},"variableNames":[{"name":"pos","nativeSrc":"11635:3:21","nodeType":"YulIdentifier","src":"11635:3:21"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"11807:3:21","nodeType":"YulIdentifier","src":"11807:3:21"}],"functionName":{"name":"store_literal_in_memory_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7","nativeSrc":"11718:88:21","nodeType":"YulIdentifier","src":"11718:88:21"},"nativeSrc":"11718:93:21","nodeType":"YulFunctionCall","src":"11718:93:21"},"nativeSrc":"11718:93:21","nodeType":"YulExpressionStatement","src":"11718:93:21"},{"nativeSrc":"11820:19:21","nodeType":"YulAssignment","src":"11820:19:21","value":{"arguments":[{"name":"pos","nativeSrc":"11831:3:21","nodeType":"YulIdentifier","src":"11831:3:21"},{"kind":"number","nativeSrc":"11836:2:21","nodeType":"YulLiteral","src":"11836:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11827:3:21","nodeType":"YulIdentifier","src":"11827:3:21"},"nativeSrc":"11827:12:21","nodeType":"YulFunctionCall","src":"11827:12:21"},"variableNames":[{"name":"end","nativeSrc":"11820:3:21","nodeType":"YulIdentifier","src":"11820:3:21"}]}]},"name":"abi_encode_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7_to_t_string_memory_ptr_fromStack","nativeSrc":"11479:366:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"11613:3:21","nodeType":"YulTypedName","src":"11613:3:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"11621:3:21","nodeType":"YulTypedName","src":"11621:3:21","type":""}],"src":"11479:366:21"},{"body":{"nativeSrc":"12022:248:21","nodeType":"YulBlock","src":"12022:248:21","statements":[{"nativeSrc":"12032:26:21","nodeType":"YulAssignment","src":"12032:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"12044:9:21","nodeType":"YulIdentifier","src":"12044:9:21"},{"kind":"number","nativeSrc":"12055:2:21","nodeType":"YulLiteral","src":"12055:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12040:3:21","nodeType":"YulIdentifier","src":"12040:3:21"},"nativeSrc":"12040:18:21","nodeType":"YulFunctionCall","src":"12040:18:21"},"variableNames":[{"name":"tail","nativeSrc":"12032:4:21","nodeType":"YulIdentifier","src":"12032:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12079:9:21","nodeType":"YulIdentifier","src":"12079:9:21"},{"kind":"number","nativeSrc":"12090:1:21","nodeType":"YulLiteral","src":"12090:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12075:3:21","nodeType":"YulIdentifier","src":"12075:3:21"},"nativeSrc":"12075:17:21","nodeType":"YulFunctionCall","src":"12075:17:21"},{"arguments":[{"name":"tail","nativeSrc":"12098:4:21","nodeType":"YulIdentifier","src":"12098:4:21"},{"name":"headStart","nativeSrc":"12104:9:21","nodeType":"YulIdentifier","src":"12104:9:21"}],"functionName":{"name":"sub","nativeSrc":"12094:3:21","nodeType":"YulIdentifier","src":"12094:3:21"},"nativeSrc":"12094:20:21","nodeType":"YulFunctionCall","src":"12094:20:21"}],"functionName":{"name":"mstore","nativeSrc":"12068:6:21","nodeType":"YulIdentifier","src":"12068:6:21"},"nativeSrc":"12068:47:21","nodeType":"YulFunctionCall","src":"12068:47:21"},"nativeSrc":"12068:47:21","nodeType":"YulExpressionStatement","src":"12068:47:21"},{"nativeSrc":"12124:139:21","nodeType":"YulAssignment","src":"12124:139:21","value":{"arguments":[{"name":"tail","nativeSrc":"12258:4:21","nodeType":"YulIdentifier","src":"12258:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7_to_t_string_memory_ptr_fromStack","nativeSrc":"12132:124:21","nodeType":"YulIdentifier","src":"12132:124:21"},"nativeSrc":"12132:131:21","nodeType":"YulFunctionCall","src":"12132:131:21"},"variableNames":[{"name":"tail","nativeSrc":"12124:4:21","nodeType":"YulIdentifier","src":"12124:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"11851:419:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12002:9:21","nodeType":"YulTypedName","src":"12002:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12017:4:21","nodeType":"YulTypedName","src":"12017:4:21","type":""}],"src":"11851:419:21"},{"body":{"nativeSrc":"12430:288:21","nodeType":"YulBlock","src":"12430:288:21","statements":[{"nativeSrc":"12440:26:21","nodeType":"YulAssignment","src":"12440:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"12452:9:21","nodeType":"YulIdentifier","src":"12452:9:21"},{"kind":"number","nativeSrc":"12463:2:21","nodeType":"YulLiteral","src":"12463:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12448:3:21","nodeType":"YulIdentifier","src":"12448:3:21"},"nativeSrc":"12448:18:21","nodeType":"YulFunctionCall","src":"12448:18:21"},"variableNames":[{"name":"tail","nativeSrc":"12440:4:21","nodeType":"YulIdentifier","src":"12440:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12520:6:21","nodeType":"YulIdentifier","src":"12520:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"12533:9:21","nodeType":"YulIdentifier","src":"12533:9:21"},{"kind":"number","nativeSrc":"12544:1:21","nodeType":"YulLiteral","src":"12544:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12529:3:21","nodeType":"YulIdentifier","src":"12529:3:21"},"nativeSrc":"12529:17:21","nodeType":"YulFunctionCall","src":"12529:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12476:43:21","nodeType":"YulIdentifier","src":"12476:43:21"},"nativeSrc":"12476:71:21","nodeType":"YulFunctionCall","src":"12476:71:21"},"nativeSrc":"12476:71:21","nodeType":"YulExpressionStatement","src":"12476:71:21"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"12601:6:21","nodeType":"YulIdentifier","src":"12601:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"12614:9:21","nodeType":"YulIdentifier","src":"12614:9:21"},{"kind":"number","nativeSrc":"12625:2:21","nodeType":"YulLiteral","src":"12625:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12610:3:21","nodeType":"YulIdentifier","src":"12610:3:21"},"nativeSrc":"12610:18:21","nodeType":"YulFunctionCall","src":"12610:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12557:43:21","nodeType":"YulIdentifier","src":"12557:43:21"},"nativeSrc":"12557:72:21","nodeType":"YulFunctionCall","src":"12557:72:21"},"nativeSrc":"12557:72:21","nodeType":"YulExpressionStatement","src":"12557:72:21"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"12683:6:21","nodeType":"YulIdentifier","src":"12683:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"12696:9:21","nodeType":"YulIdentifier","src":"12696:9:21"},{"kind":"number","nativeSrc":"12707:2:21","nodeType":"YulLiteral","src":"12707:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12692:3:21","nodeType":"YulIdentifier","src":"12692:3:21"},"nativeSrc":"12692:18:21","nodeType":"YulFunctionCall","src":"12692:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12639:43:21","nodeType":"YulIdentifier","src":"12639:43:21"},"nativeSrc":"12639:72:21","nodeType":"YulFunctionCall","src":"12639:72:21"},"nativeSrc":"12639:72:21","nodeType":"YulExpressionStatement","src":"12639:72:21"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"12276:442:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12386:9:21","nodeType":"YulTypedName","src":"12386:9:21","type":""},{"name":"value2","nativeSrc":"12398:6:21","nodeType":"YulTypedName","src":"12398:6:21","type":""},{"name":"value1","nativeSrc":"12406:6:21","nodeType":"YulTypedName","src":"12406:6:21","type":""},{"name":"value0","nativeSrc":"12414:6:21","nodeType":"YulTypedName","src":"12414:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12425:4:21","nodeType":"YulTypedName","src":"12425:4:21","type":""}],"src":"12276:442:21"},{"body":{"nativeSrc":"12767:79:21","nodeType":"YulBlock","src":"12767:79:21","statements":[{"body":{"nativeSrc":"12824:16:21","nodeType":"YulBlock","src":"12824:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12833:1:21","nodeType":"YulLiteral","src":"12833:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"12836:1:21","nodeType":"YulLiteral","src":"12836:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"12826:6:21","nodeType":"YulIdentifier","src":"12826:6:21"},"nativeSrc":"12826:12:21","nodeType":"YulFunctionCall","src":"12826:12:21"},"nativeSrc":"12826:12:21","nodeType":"YulExpressionStatement","src":"12826:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"12790:5:21","nodeType":"YulIdentifier","src":"12790:5:21"},{"arguments":[{"name":"value","nativeSrc":"12815:5:21","nodeType":"YulIdentifier","src":"12815:5:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"12797:17:21","nodeType":"YulIdentifier","src":"12797:17:21"},"nativeSrc":"12797:24:21","nodeType":"YulFunctionCall","src":"12797:24:21"}],"functionName":{"name":"eq","nativeSrc":"12787:2:21","nodeType":"YulIdentifier","src":"12787:2:21"},"nativeSrc":"12787:35:21","nodeType":"YulFunctionCall","src":"12787:35:21"}],"functionName":{"name":"iszero","nativeSrc":"12780:6:21","nodeType":"YulIdentifier","src":"12780:6:21"},"nativeSrc":"12780:43:21","nodeType":"YulFunctionCall","src":"12780:43:21"},"nativeSrc":"12777:63:21","nodeType":"YulIf","src":"12777:63:21"}]},"name":"validator_revert_t_uint256","nativeSrc":"12724:122:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12760:5:21","nodeType":"YulTypedName","src":"12760:5:21","type":""}],"src":"12724:122:21"},{"body":{"nativeSrc":"12915:80:21","nodeType":"YulBlock","src":"12915:80:21","statements":[{"nativeSrc":"12925:22:21","nodeType":"YulAssignment","src":"12925:22:21","value":{"arguments":[{"name":"offset","nativeSrc":"12940:6:21","nodeType":"YulIdentifier","src":"12940:6:21"}],"functionName":{"name":"mload","nativeSrc":"12934:5:21","nodeType":"YulIdentifier","src":"12934:5:21"},"nativeSrc":"12934:13:21","nodeType":"YulFunctionCall","src":"12934:13:21"},"variableNames":[{"name":"value","nativeSrc":"12925:5:21","nodeType":"YulIdentifier","src":"12925:5:21"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"12983:5:21","nodeType":"YulIdentifier","src":"12983:5:21"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"12956:26:21","nodeType":"YulIdentifier","src":"12956:26:21"},"nativeSrc":"12956:33:21","nodeType":"YulFunctionCall","src":"12956:33:21"},"nativeSrc":"12956:33:21","nodeType":"YulExpressionStatement","src":"12956:33:21"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"12852:143:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"12893:6:21","nodeType":"YulTypedName","src":"12893:6:21","type":""},{"name":"end","nativeSrc":"12901:3:21","nodeType":"YulTypedName","src":"12901:3:21","type":""}],"returnVariables":[{"name":"value","nativeSrc":"12909:5:21","nodeType":"YulTypedName","src":"12909:5:21","type":""}],"src":"12852:143:21"},{"body":{"nativeSrc":"13078:274:21","nodeType":"YulBlock","src":"13078:274:21","statements":[{"body":{"nativeSrc":"13124:83:21","nodeType":"YulBlock","src":"13124:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"13126:77:21","nodeType":"YulIdentifier","src":"13126:77:21"},"nativeSrc":"13126:79:21","nodeType":"YulFunctionCall","src":"13126:79:21"},"nativeSrc":"13126:79:21","nodeType":"YulExpressionStatement","src":"13126:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"13099:7:21","nodeType":"YulIdentifier","src":"13099:7:21"},{"name":"headStart","nativeSrc":"13108:9:21","nodeType":"YulIdentifier","src":"13108:9:21"}],"functionName":{"name":"sub","nativeSrc":"13095:3:21","nodeType":"YulIdentifier","src":"13095:3:21"},"nativeSrc":"13095:23:21","nodeType":"YulFunctionCall","src":"13095:23:21"},{"kind":"number","nativeSrc":"13120:2:21","nodeType":"YulLiteral","src":"13120:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"13091:3:21","nodeType":"YulIdentifier","src":"13091:3:21"},"nativeSrc":"13091:32:21","nodeType":"YulFunctionCall","src":"13091:32:21"},"nativeSrc":"13088:119:21","nodeType":"YulIf","src":"13088:119:21"},{"nativeSrc":"13217:128:21","nodeType":"YulBlock","src":"13217:128:21","statements":[{"nativeSrc":"13232:15:21","nodeType":"YulVariableDeclaration","src":"13232:15:21","value":{"kind":"number","nativeSrc":"13246:1:21","nodeType":"YulLiteral","src":"13246:1:21","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"13236:6:21","nodeType":"YulTypedName","src":"13236:6:21","type":""}]},{"nativeSrc":"13261:74:21","nodeType":"YulAssignment","src":"13261:74:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13307:9:21","nodeType":"YulIdentifier","src":"13307:9:21"},{"name":"offset","nativeSrc":"13318:6:21","nodeType":"YulIdentifier","src":"13318:6:21"}],"functionName":{"name":"add","nativeSrc":"13303:3:21","nodeType":"YulIdentifier","src":"13303:3:21"},"nativeSrc":"13303:22:21","nodeType":"YulFunctionCall","src":"13303:22:21"},{"name":"dataEnd","nativeSrc":"13327:7:21","nodeType":"YulIdentifier","src":"13327:7:21"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"13271:31:21","nodeType":"YulIdentifier","src":"13271:31:21"},"nativeSrc":"13271:64:21","nodeType":"YulFunctionCall","src":"13271:64:21"},"variableNames":[{"name":"value0","nativeSrc":"13261:6:21","nodeType":"YulIdentifier","src":"13261:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"13001:351:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13048:9:21","nodeType":"YulTypedName","src":"13048:9:21","type":""},{"name":"dataEnd","nativeSrc":"13059:7:21","nodeType":"YulTypedName","src":"13059:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"13071:6:21","nodeType":"YulTypedName","src":"13071:6:21","type":""}],"src":"13001:351:21"},{"body":{"nativeSrc":"13403:149:21","nodeType":"YulBlock","src":"13403:149:21","statements":[{"nativeSrc":"13413:25:21","nodeType":"YulAssignment","src":"13413:25:21","value":{"arguments":[{"name":"x","nativeSrc":"13436:1:21","nodeType":"YulIdentifier","src":"13436:1:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"13418:17:21","nodeType":"YulIdentifier","src":"13418:17:21"},"nativeSrc":"13418:20:21","nodeType":"YulFunctionCall","src":"13418:20:21"},"variableNames":[{"name":"x","nativeSrc":"13413:1:21","nodeType":"YulIdentifier","src":"13413:1:21"}]},{"nativeSrc":"13447:25:21","nodeType":"YulAssignment","src":"13447:25:21","value":{"arguments":[{"name":"y","nativeSrc":"13470:1:21","nodeType":"YulIdentifier","src":"13470:1:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"13452:17:21","nodeType":"YulIdentifier","src":"13452:17:21"},"nativeSrc":"13452:20:21","nodeType":"YulFunctionCall","src":"13452:20:21"},"variableNames":[{"name":"y","nativeSrc":"13447:1:21","nodeType":"YulIdentifier","src":"13447:1:21"}]},{"nativeSrc":"13481:17:21","nodeType":"YulAssignment","src":"13481:17:21","value":{"arguments":[{"name":"x","nativeSrc":"13493:1:21","nodeType":"YulIdentifier","src":"13493:1:21"},{"name":"y","nativeSrc":"13496:1:21","nodeType":"YulIdentifier","src":"13496:1:21"}],"functionName":{"name":"sub","nativeSrc":"13489:3:21","nodeType":"YulIdentifier","src":"13489:3:21"},"nativeSrc":"13489:9:21","nodeType":"YulFunctionCall","src":"13489:9:21"},"variableNames":[{"name":"diff","nativeSrc":"13481:4:21","nodeType":"YulIdentifier","src":"13481:4:21"}]},{"body":{"nativeSrc":"13523:22:21","nodeType":"YulBlock","src":"13523:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"13525:16:21","nodeType":"YulIdentifier","src":"13525:16:21"},"nativeSrc":"13525:18:21","nodeType":"YulFunctionCall","src":"13525:18:21"},"nativeSrc":"13525:18:21","nodeType":"YulExpressionStatement","src":"13525:18:21"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"13514:4:21","nodeType":"YulIdentifier","src":"13514:4:21"},{"name":"x","nativeSrc":"13520:1:21","nodeType":"YulIdentifier","src":"13520:1:21"}],"functionName":{"name":"gt","nativeSrc":"13511:2:21","nodeType":"YulIdentifier","src":"13511:2:21"},"nativeSrc":"13511:11:21","nodeType":"YulFunctionCall","src":"13511:11:21"},"nativeSrc":"13508:37:21","nodeType":"YulIf","src":"13508:37:21"}]},"name":"checked_sub_t_uint256","nativeSrc":"13358:194:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"13389:1:21","nodeType":"YulTypedName","src":"13389:1:21","type":""},{"name":"y","nativeSrc":"13392:1:21","nodeType":"YulTypedName","src":"13392:1:21","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"13398:4:21","nodeType":"YulTypedName","src":"13398:4:21","type":""}],"src":"13358:194:21"},{"body":{"nativeSrc":"13602:147:21","nodeType":"YulBlock","src":"13602:147:21","statements":[{"nativeSrc":"13612:25:21","nodeType":"YulAssignment","src":"13612:25:21","value":{"arguments":[{"name":"x","nativeSrc":"13635:1:21","nodeType":"YulIdentifier","src":"13635:1:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"13617:17:21","nodeType":"YulIdentifier","src":"13617:17:21"},"nativeSrc":"13617:20:21","nodeType":"YulFunctionCall","src":"13617:20:21"},"variableNames":[{"name":"x","nativeSrc":"13612:1:21","nodeType":"YulIdentifier","src":"13612:1:21"}]},{"nativeSrc":"13646:25:21","nodeType":"YulAssignment","src":"13646:25:21","value":{"arguments":[{"name":"y","nativeSrc":"13669:1:21","nodeType":"YulIdentifier","src":"13669:1:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"13651:17:21","nodeType":"YulIdentifier","src":"13651:17:21"},"nativeSrc":"13651:20:21","nodeType":"YulFunctionCall","src":"13651:20:21"},"variableNames":[{"name":"y","nativeSrc":"13646:1:21","nodeType":"YulIdentifier","src":"13646:1:21"}]},{"nativeSrc":"13680:16:21","nodeType":"YulAssignment","src":"13680:16:21","value":{"arguments":[{"name":"x","nativeSrc":"13691:1:21","nodeType":"YulIdentifier","src":"13691:1:21"},{"name":"y","nativeSrc":"13694:1:21","nodeType":"YulIdentifier","src":"13694:1:21"}],"functionName":{"name":"add","nativeSrc":"13687:3:21","nodeType":"YulIdentifier","src":"13687:3:21"},"nativeSrc":"13687:9:21","nodeType":"YulFunctionCall","src":"13687:9:21"},"variableNames":[{"name":"sum","nativeSrc":"13680:3:21","nodeType":"YulIdentifier","src":"13680:3:21"}]},{"body":{"nativeSrc":"13720:22:21","nodeType":"YulBlock","src":"13720:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"13722:16:21","nodeType":"YulIdentifier","src":"13722:16:21"},"nativeSrc":"13722:18:21","nodeType":"YulFunctionCall","src":"13722:18:21"},"nativeSrc":"13722:18:21","nodeType":"YulExpressionStatement","src":"13722:18:21"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"13712:1:21","nodeType":"YulIdentifier","src":"13712:1:21"},{"name":"sum","nativeSrc":"13715:3:21","nodeType":"YulIdentifier","src":"13715:3:21"}],"functionName":{"name":"gt","nativeSrc":"13709:2:21","nodeType":"YulIdentifier","src":"13709:2:21"},"nativeSrc":"13709:10:21","nodeType":"YulFunctionCall","src":"13709:10:21"},"nativeSrc":"13706:36:21","nodeType":"YulIf","src":"13706:36:21"}]},"name":"checked_add_t_uint256","nativeSrc":"13558:191:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"13589:1:21","nodeType":"YulTypedName","src":"13589:1:21","type":""},{"name":"y","nativeSrc":"13592:1:21","nodeType":"YulTypedName","src":"13592:1:21","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"13598:3:21","nodeType":"YulTypedName","src":"13598:3:21","type":""}],"src":"13558:191:21"},{"body":{"nativeSrc":"13909:288:21","nodeType":"YulBlock","src":"13909:288:21","statements":[{"nativeSrc":"13919:26:21","nodeType":"YulAssignment","src":"13919:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"13931:9:21","nodeType":"YulIdentifier","src":"13931:9:21"},{"kind":"number","nativeSrc":"13942:2:21","nodeType":"YulLiteral","src":"13942:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"13927:3:21","nodeType":"YulIdentifier","src":"13927:3:21"},"nativeSrc":"13927:18:21","nodeType":"YulFunctionCall","src":"13927:18:21"},"variableNames":[{"name":"tail","nativeSrc":"13919:4:21","nodeType":"YulIdentifier","src":"13919:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13999:6:21","nodeType":"YulIdentifier","src":"13999:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"14012:9:21","nodeType":"YulIdentifier","src":"14012:9:21"},{"kind":"number","nativeSrc":"14023:1:21","nodeType":"YulLiteral","src":"14023:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14008:3:21","nodeType":"YulIdentifier","src":"14008:3:21"},"nativeSrc":"14008:17:21","nodeType":"YulFunctionCall","src":"14008:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"13955:43:21","nodeType":"YulIdentifier","src":"13955:43:21"},"nativeSrc":"13955:71:21","nodeType":"YulFunctionCall","src":"13955:71:21"},"nativeSrc":"13955:71:21","nodeType":"YulExpressionStatement","src":"13955:71:21"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"14080:6:21","nodeType":"YulIdentifier","src":"14080:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"14093:9:21","nodeType":"YulIdentifier","src":"14093:9:21"},{"kind":"number","nativeSrc":"14104:2:21","nodeType":"YulLiteral","src":"14104:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14089:3:21","nodeType":"YulIdentifier","src":"14089:3:21"},"nativeSrc":"14089:18:21","nodeType":"YulFunctionCall","src":"14089:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"14036:43:21","nodeType":"YulIdentifier","src":"14036:43:21"},"nativeSrc":"14036:72:21","nodeType":"YulFunctionCall","src":"14036:72:21"},"nativeSrc":"14036:72:21","nodeType":"YulExpressionStatement","src":"14036:72:21"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"14162:6:21","nodeType":"YulIdentifier","src":"14162:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"14175:9:21","nodeType":"YulIdentifier","src":"14175:9:21"},{"kind":"number","nativeSrc":"14186:2:21","nodeType":"YulLiteral","src":"14186:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14171:3:21","nodeType":"YulIdentifier","src":"14171:3:21"},"nativeSrc":"14171:18:21","nodeType":"YulFunctionCall","src":"14171:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"14118:43:21","nodeType":"YulIdentifier","src":"14118:43:21"},"nativeSrc":"14118:72:21","nodeType":"YulFunctionCall","src":"14118:72:21"},"nativeSrc":"14118:72:21","nodeType":"YulExpressionStatement","src":"14118:72:21"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"13755:442:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13865:9:21","nodeType":"YulTypedName","src":"13865:9:21","type":""},{"name":"value2","nativeSrc":"13877:6:21","nodeType":"YulTypedName","src":"13877:6:21","type":""},{"name":"value1","nativeSrc":"13885:6:21","nodeType":"YulTypedName","src":"13885:6:21","type":""},{"name":"value0","nativeSrc":"13893:6:21","nodeType":"YulTypedName","src":"13893:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13904:4:21","nodeType":"YulTypedName","src":"13904:4:21","type":""}],"src":"13755:442:21"},{"body":{"nativeSrc":"14301:124:21","nodeType":"YulBlock","src":"14301:124:21","statements":[{"nativeSrc":"14311:26:21","nodeType":"YulAssignment","src":"14311:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"14323:9:21","nodeType":"YulIdentifier","src":"14323:9:21"},{"kind":"number","nativeSrc":"14334:2:21","nodeType":"YulLiteral","src":"14334:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14319:3:21","nodeType":"YulIdentifier","src":"14319:3:21"},"nativeSrc":"14319:18:21","nodeType":"YulFunctionCall","src":"14319:18:21"},"variableNames":[{"name":"tail","nativeSrc":"14311:4:21","nodeType":"YulIdentifier","src":"14311:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"14391:6:21","nodeType":"YulIdentifier","src":"14391:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"14404:9:21","nodeType":"YulIdentifier","src":"14404:9:21"},{"kind":"number","nativeSrc":"14415:1:21","nodeType":"YulLiteral","src":"14415:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14400:3:21","nodeType":"YulIdentifier","src":"14400:3:21"},"nativeSrc":"14400:17:21","nodeType":"YulFunctionCall","src":"14400:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"14347:43:21","nodeType":"YulIdentifier","src":"14347:43:21"},"nativeSrc":"14347:71:21","nodeType":"YulFunctionCall","src":"14347:71:21"},"nativeSrc":"14347:71:21","nodeType":"YulExpressionStatement","src":"14347:71:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"14203:222:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14273:9:21","nodeType":"YulTypedName","src":"14273:9:21","type":""},{"name":"value0","nativeSrc":"14285:6:21","nodeType":"YulTypedName","src":"14285:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14296:4:21","nodeType":"YulTypedName","src":"14296:4:21","type":""}],"src":"14203:222:21"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n    function store_literal_in_memory_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7(memPtr) {\n\n        mstore(add(memPtr, 0), \"AraraCoin trade is disabled\")\n\n    }\n\n    function abi_encode_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6101606040527323618e81e3f5cdf7f54c3d65f7fbc0abf5b21e8f600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073a0ee7a142d267c1f36714e4a8f75612f20a79720600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507370997970c51812dc3a010c7d01b50e0d17dc79c8600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550733c44cdddb6a900fa2b585dd299e03d12fa4293bc600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507390f79bf6eb2c4f870365e785982e1f101e93b906600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507315d34aaf54267db7d7c367839aaf71a00a2c6a65600e60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507371be63f3384f5fb98995898a86b02fb2426c5788600f60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073fabb0ac9d68b0b445fb7357272ff202c5651694a601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550739965507d1a55bcc2695c58ba16fb37d819b0a4dc601160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550731cbd3b2770909d4e10f157cabc84c7264073c9ec601260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073df3e18d64bc6a983f673ab319ccae4f1a57c7097601360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073976ea74026e726554db657fa54763abd0c3a0aa9601460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073bda5747bfd65f08deb54cb465eb87d40e51b197e601560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156200046357600080fd5b506040516200490638038062004906833981810160405281019062000489919062001345565b826040518060400160405280600981526020017f4172617261636f696e0000000000000000000000000000000000000000000000815250806040518060400160405280600181526020017f31000000000000000000000000000000000000000000000000000000000000008152506040518060400160405280600981526020017f4172617261636f696e00000000000000000000000000000000000000000000008152506040518060400160405280600581526020017f415241524100000000000000000000000000000000000000000000000000000081525081600390816200057491906200161b565b5080600490816200058691906200161b565b5050506200059f60058362000a9a60201b90919060201c565b6101208181525050620005bd60068262000a9a60201b90919060201c565b6101408181525050818051906020012060e08181525050808051906020012061010081815250504660a08181525050620005fc62000af260201b60201c565b608081815250503073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1681525050505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620006af5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620006a6919062001713565b60405180910390fd5b620006c08162000b4f60201b60201c565b5081601660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620007196000601762000c1560201b90919060201c565b506200073083601762000c1560201b90919060201c565b5062000750336c01431e0fae6d7217caa000000062000c4d60201b60201c565b6200079133600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166b09b18ab5df7180b6b800000062000cda60201b60201c565b620007d233600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166b0409f9cbc7c4a04c2200000062000cda60201b60201c565b6200081333600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166b026c62ad77dc602dae00000062000cda60201b60201c565b6200087133600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166064600a6c01431e0fae6d7217caa00000006200085991906200175f565b620008659190620017d9565b62000cda60201b60201c565b620008cf33600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16606460146c01431e0fae6d7217caa0000000620008b791906200175f565b620008c39190620017d9565b62000cda60201b60201c565b6200091033600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166b1431e0fae6d7217caa00000062000cda60201b60201c565b6200095133600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166b1431e0fae6d7217caa00000062000cda60201b60201c565b6200099233601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166b2863c1f5cdae42f95400000062000cda60201b60201c565b620009d333601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166b1f04ef12cb04cf158000000062000cda60201b60201c565b62000a1433601260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166b121836204bc2ce21e000000062000cda60201b60201c565b62000a5533601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166b0f8277896582678ac000000062000cda60201b60201c565b62000a913382606460146c01431e0fae6d7217caa000000062000a7991906200175f565b62000a859190620017d9565b62000cda60201b60201c565b50505062001bd1565b600060208351101562000ac05762000ab88362000ddc60201b60201c565b905062000aec565b8262000ad28362000e4960201b60201c565b600001908162000ae391906200161b565b5060ff60001b90505b92915050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60e05161010051463060405160200162000b349594939291906200183d565b60405160208183030381529060405280519060200120905090565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600062000c45836000018373ffffffffffffffffffffffffffffffffffffffff1660001b62000e5360201b60201c565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000cc25760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040162000cb9919062001713565b60405180910390fd5b62000cd66000838362000ecd60201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160362000d4f5760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040162000d46919062001713565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000dc45760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040162000dbb919062001713565b60405180910390fd5b62000dd783838362000ecd60201b60201c565b505050565b600080829050601f8151111562000e2c57826040517f305a27a900000000000000000000000000000000000000000000000000000000815260040162000e23919062001929565b60405180910390fd5b80518162000e3a906200197f565b60001c1760001b915050919050565b6000819050919050565b600062000e6783836200105060201b60201c565b62000ec257826000018290806001815401808255809150506001900390600052602060002001600090919091909150558260000180549050836001016000848152602001908152602001600020819055506001905062000ec7565b600090505b92915050565b601660149054906101000a900460ff1662000f3b5762000ef88360176200107360201b90919060201c565b62000f3a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000f319062001a3f565b60405180910390fd5b5b6000601660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d7ad21ac8585856040518463ffffffff1660e01b815260040162000f9e9392919062001a61565b602060405180830381865afa15801562000fbc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000fe2919062001acf565b90506000818362000ff4919062001b01565b9050600082111562001036576200103585601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684620010ab60201b60201c565b5b62001049858583620010ab60201b60201c565b5050505050565b600080836001016000848152602001908152602001600020541415905092915050565b6000620010a3836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6200105060201b60201c565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160362001101578060026000828254620010f4919062001b3c565b92505081905550620011d7565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101562001190578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401620011879392919062001b77565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200122257806002600082825403925050819055506200126f565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620012ce919062001bb4565b60405180910390a3505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200130d82620012e0565b9050919050565b6200131f8162001300565b81146200132b57600080fd5b50565b6000815190506200133f8162001314565b92915050565b600080600060608486031215620013615762001360620012db565b5b600062001371868287016200132e565b935050602062001384868287016200132e565b925050604062001397868287016200132e565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200142357607f821691505b602082108103620014395762001438620013db565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620014a37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262001464565b620014af868362001464565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620014fc620014f6620014f084620014c7565b620014d1565b620014c7565b9050919050565b6000819050919050565b6200151883620014db565b62001530620015278262001503565b84845462001471565b825550505050565b600090565b6200154762001538565b620015548184846200150d565b505050565b5b818110156200157c57620015706000826200153d565b6001810190506200155a565b5050565b601f821115620015cb5762001595816200143f565b620015a08462001454565b81016020851015620015b0578190505b620015c8620015bf8562001454565b83018262001559565b50505b505050565b600082821c905092915050565b6000620015f060001984600802620015d0565b1980831691505092915050565b60006200160b8383620015dd565b9150826002028217905092915050565b6200162682620013a1565b67ffffffffffffffff811115620016425762001641620013ac565b5b6200164e82546200140a565b6200165b82828562001580565b600060209050601f8311600181146200169357600084156200167e578287015190505b6200168a8582620015fd565b865550620016fa565b601f198416620016a3866200143f565b60005b82811015620016cd57848901518255600182019150602085019450602081019050620016a6565b86831015620016ed5784890151620016e9601f891682620015dd565b8355505b6001600288020188555050505b505050505050565b6200170d8162001300565b82525050565b60006020820190506200172a600083018462001702565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200176c82620014c7565b91506200177983620014c7565b92508282026200178981620014c7565b91508282048414831517620017a357620017a262001730565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000620017e682620014c7565b9150620017f383620014c7565b925082620018065762001805620017aa565b5b828204905092915050565b6000819050919050565b620018268162001811565b82525050565b6200183781620014c7565b82525050565b600060a0820190506200185460008301886200181b565b6200186360208301876200181b565b6200187260408301866200181b565b6200188160608301856200182c565b62001890608083018462001702565b9695505050505050565b600082825260208201905092915050565b60005b83811015620018cb578082015181840152602081019050620018ae565b60008484015250505050565b6000601f19601f8301169050919050565b6000620018f582620013a1565b6200190181856200189a565b935062001913818560208601620018ab565b6200191e81620018d7565b840191505092915050565b60006020820190508181036000830152620019458184620018e8565b905092915050565b600081519050919050565b6000819050602082019050919050565b600062001976825162001811565b80915050919050565b60006200198c826200194d565b82620019988462001958565b9050620019a58162001968565b92506020821015620019e857620019e37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8360200360080262001464565b831692505b5050919050565b7f4172617261436f696e2074726164652069732064697361626c65640000000000600082015250565b600062001a27601b836200189a565b915062001a3482620019ef565b602082019050919050565b6000602082019050818103600083015262001a5a8162001a18565b9050919050565b600060608201905062001a78600083018662001702565b62001a87602083018562001702565b62001a9660408301846200182c565b949350505050565b62001aa981620014c7565b811462001ab557600080fd5b50565b60008151905062001ac98162001a9e565b92915050565b60006020828403121562001ae85762001ae7620012db565b5b600062001af88482850162001ab8565b91505092915050565b600062001b0e82620014c7565b915062001b1b83620014c7565b925082820390508181111562001b365762001b3562001730565b5b92915050565b600062001b4982620014c7565b915062001b5683620014c7565b925082820190508082111562001b715762001b7062001730565b5b92915050565b600060608201905062001b8e600083018662001702565b62001b9d60208301856200182c565b62001bac60408301846200182c565b949350505050565b600060208201905062001bcb60008301846200182c565b92915050565b60805160a05160c05160e051610100516101205161014051612cda62001c2c6000396000611532015260006114f7015260006119b701526000611996015260006112a5015260006112fb015260006113240152612cda6000f3fe608060405234801561001057600080fd5b50600436106102115760003560e01c806370a0823111610125578063a4771ea4116100ad578063d505accf1161007c578063d505accf146105ce578063dd62ed3e146105ea578063ea414b281461061a578063f2fde38b14610636578063fb3d924a1461065257610211565b8063a4771ea414610546578063a781c95414610564578063a9059cbb14610582578063ca40f1c4146105b257610211565b80637ecebe00116100f45780637ecebe00146104ac57806384b0196e146104dc5780638a8c523c146105005780638da5cb5b1461050a57806395d89b411461052857610211565b806370a0823114610436578063715018a61461046657806375f0a8741461047057806377ba82801461048e57610211565b80631fc75e41116101a85780633644e515116101775780633644e515146103a2578063488d4a51146103c05780634a3084eb146103dc5780634ada218b146103fa5780636409f5341461041857610211565b80631fc75e411461031857806323b872dd146103365780632dc0562d14610366578063313ce5671461038457610211565b806316942450116101e457806316942450146102a05780631798fb80146102be57806318160ddd146102dc5780631f640ed8146102fa57610211565b806301089b921461021657806306fdde0314610234578063095ea7b31461025257806312280ba814610282575b600080fd5b61021e610670565b60405161022b919061213d565b60405180910390f35b61023c610696565b60405161024991906121e8565b60405180910390f35b61026c60048036038101906102679190612276565b610728565b60405161027991906122d1565b60405180910390f35b61028a61074b565b604051610297919061234b565b60405180910390f35b6102a8610771565b6040516102b5919061213d565b60405180910390f35b6102c6610797565b6040516102d3919061213d565b60405180910390f35b6102e46107bd565b6040516102f19190612375565b60405180910390f35b6103026107c7565b60405161030f919061213d565b60405180910390f35b6103206107ed565b60405161032d919061213d565b60405180910390f35b610350600480360381019061034b9190612390565b610813565b60405161035d91906122d1565b60405180910390f35b61036e610842565b60405161037b919061213d565b60405180910390f35b61038c610868565b60405161039991906123ff565b60405180910390f35b6103aa610871565b6040516103b79190612433565b60405180910390f35b6103da60048036038101906103d5919061244e565b610880565b005b6103e461092c565b6040516103f1919061213d565b60405180910390f35b610402610952565b60405161040f91906122d1565b60405180910390f35b610420610965565b60405161042d919061213d565b60405180910390f35b610450600480360381019061044b919061244e565b61098b565b60405161045d9190612375565b60405180910390f35b61046e6109d3565b005b6104786109e7565b604051610485919061213d565b60405180910390f35b610496610a0d565b6040516104a3919061213d565b60405180910390f35b6104c660048036038101906104c1919061244e565b610a33565b6040516104d39190612375565b60405180910390f35b6104e4610a45565b6040516104f79796959493929190612574565b60405180910390f35b610508610aef565b005b610512610b90565b60405161051f919061213d565b60405180910390f35b610530610bba565b60405161053d91906121e8565b60405180910390f35b61054e610c4c565b60405161055b919061213d565b60405180910390f35b61056c610c72565b604051610579919061213d565b60405180910390f35b61059c60048036038101906105979190612276565b610c98565b6040516105a991906122d1565b60405180910390f35b6105cc60048036038101906105c7919061265d565b610cbb565b005b6105e860048036038101906105e39190612702565b610db5565b005b61060460048036038101906105ff91906127a4565b610efd565b6040516106119190612375565b60405180910390f35b610634600480360381019061062f919061244e565b610f84565b005b610650600480360381019061064b919061244e565b611053565b005b61065a6110d9565b604051610667919061213d565b60405180910390f35b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600380546106a590612813565b80601f01602080910402602001604051908101604052809291908181526020018280546106d190612813565b801561071e5780601f106106f35761010080835404028352916020019161071e565b820191906000526020600020905b81548152906001019060200180831161070157829003601f168201915b5050505050905090565b6000806107336110ff565b9050610740818585611107565b600191505092915050565b601660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600254905090565b601260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061081e6110ff565b905061082b858285611119565b6108368585856111ad565b60019150509392505050565b601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006012905090565b600061087b6112a1565b905090565b610888611358565b6000601660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081601660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ed910c9481701ba32afe0c247572aaece27072f230c8ec769bf245fc0b38de68183604051610920929190612844565b60405180910390a15050565b601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b601660149054906101000a900460ff1681565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6109db611358565b6109e560006113df565b565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610a3e826114a5565b9050919050565b600060608060008060006060610a596114ee565b610a61611529565b46306000801b600067ffffffffffffffff811115610a8257610a8161286d565b5b604051908082528060200260200182016040528015610ab05781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b610af7611358565b601660149054906101000a900460ff1615610b47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3e9061290e565b60405180910390fd5b6001601660146101000a81548160ff0219169083151502179055507f799663458a5ef2936f7fa0c99b3336c69c25890f82974f04e811e5bb359186c760405160405180910390a1565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610bc990612813565b80601f0160208091040260200160405190810160405280929190818152602001828054610bf590612813565b8015610c425780601f10610c1757610100808354040283529160200191610c42565b820191906000526020600020905b815481529060010190602001808311610c2557829003601f168201915b5050505050905090565b601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080610ca36110ff565b9050610cb08185856111ad565b600191505092915050565b610cc3611358565b601660149054906101000a900460ff1615610d13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0a9061290e565b60405180910390fd5b60008282905003610d59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d509061297a565b60405180910390fd5b60005b82829050811015610db057610da2838383818110610d7d57610d7c61299a565b5b9050602002016020810190610d92919061244e565b601761156490919063ffffffff16565b508080600101915050610d5c565b505050565b83421115610dfa57836040517f62791302000000000000000000000000000000000000000000000000000000008152600401610df19190612375565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610e298c611594565b89604051602001610e3f969594939291906129c9565b6040516020818303038152906040528051906020012090506000610e62826115eb565b90506000610e7282878787611605565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ee657808a6040517f4b800e46000000000000000000000000000000000000000000000000000000008152600401610edd929190612844565b60405180910390fd5b610ef18a8a8a611107565b50505050505050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610f8c611358565b6000601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081601560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f0a3568000da48cc6e5e2c8e7a94d1bfa3607d1734c7dbd7b04ac9d77316b471a81601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051611047929190612844565b60405180910390a15050565b61105b611358565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036110cd5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016110c4919061213d565b60405180910390fd5b6110d6816113df565b50565b601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b6111148383836001611635565b505050565b60006111258484610efd565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146111a75781811015611197578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161118e93929190612a2a565b60405180910390fd5b6111a684848484036000611635565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361121f5760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611216919061213d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112915760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611288919061213d565b60405180910390fd5b61129c83838361180c565b505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614801561131d57507f000000000000000000000000000000000000000000000000000000000000000046145b1561134a577f00000000000000000000000000000000000000000000000000000000000000009050611355565b611352611971565b90505b90565b6113606110ff565b73ffffffffffffffffffffffffffffffffffffffff1661137e610b90565b73ffffffffffffffffffffffffffffffffffffffff16146113dd576113a16110ff565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016113d4919061213d565b60405180910390fd5b565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606061152460057f0000000000000000000000000000000000000000000000000000000000000000611a0790919063ffffffff16565b905090565b606061155f60067f0000000000000000000000000000000000000000000000000000000000000000611a0790919063ffffffff16565b905090565b600061158c836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611ab7565b905092915050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050559050919050565b60006115fe6115f86112a1565b83611b27565b9050919050565b60008060008061161788888888611b68565b9250925092506116278282611c5c565b829350505050949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036116a75760006040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161169e919061213d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036117195760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611710919061213d565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015611806578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516117fd9190612375565b60405180910390a35b50505050565b601660149054906101000a900460ff1661187457611834836017611dc090919063ffffffff16565b611873576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161186a90612aad565b60405180910390fd5b5b6000601660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d7ad21ac8585856040518463ffffffff1660e01b81526004016118d593929190612acd565b602060405180830381865afa1580156118f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119169190612b19565b9050600081836119269190612b75565b9050600082111561195f5761195e85601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684611df0565b5b61196a858583611df0565b5050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000046306040516020016119ec959493929190612ba9565b60405160208183030381529060405280519060200120905090565b606060ff60001b8314611a2457611a1d83612015565b9050611ab1565b818054611a3090612813565b80601f0160208091040260200160405190810160405280929190818152602001828054611a5c90612813565b8015611aa95780601f10611a7e57610100808354040283529160200191611aa9565b820191906000526020600020905b815481529060010190602001808311611a8c57829003601f168201915b505050505090505b92915050565b6000611ac38383612089565b611b1c578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050611b21565b600090505b92915050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c1115611ba8576000600385925092509250611c52565b600060018888888860405160008152602001604052604051611bcd9493929190612bfc565b6020604051602081039080840390855afa158015611bef573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611c4357600060016000801b93509350935050611c52565b8060008060001b935093509350505b9450945094915050565b60006003811115611c7057611c6f612c41565b5b826003811115611c8357611c82612c41565b5b0315611dbc5760016003811115611c9d57611c9c612c41565b5b826003811115611cb057611caf612c41565b5b03611ce7576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026003811115611cfb57611cfa612c41565b5b826003811115611d0e57611d0d612c41565b5b03611d53578060001c6040517ffce698f7000000000000000000000000000000000000000000000000000000008152600401611d4a9190612375565b60405180910390fd5b600380811115611d6657611d65612c41565b5b826003811115611d7957611d78612c41565b5b03611dbb57806040517fd78bce0c000000000000000000000000000000000000000000000000000000008152600401611db29190612433565b60405180910390fd5b5b5050565b6000611de8836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612089565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611e42578060026000828254611e369190612c70565b92505081905550611f15565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611ece578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611ec593929190612a2a565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611f5e5780600260008282540392505081905550611fab565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516120089190612375565b60405180910390a3505050565b60606000612022836120ac565b90506000602067ffffffffffffffff8111156120415761204061286d565b5b6040519080825280601f01601f1916602001820160405280156120735781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b600080836001016000848152602001908152602001600020541415905092915050565b60008060ff8360001c169050601f8111156120f3576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612127826120fc565b9050919050565b6121378161211c565b82525050565b6000602082019050612152600083018461212e565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612192578082015181840152602081019050612177565b60008484015250505050565b6000601f19601f8301169050919050565b60006121ba82612158565b6121c48185612163565b93506121d4818560208601612174565b6121dd8161219e565b840191505092915050565b6000602082019050818103600083015261220281846121af565b905092915050565b600080fd5b600080fd5b61221d8161211c565b811461222857600080fd5b50565b60008135905061223a81612214565b92915050565b6000819050919050565b61225381612240565b811461225e57600080fd5b50565b6000813590506122708161224a565b92915050565b6000806040838503121561228d5761228c61220a565b5b600061229b8582860161222b565b92505060206122ac85828601612261565b9150509250929050565b60008115159050919050565b6122cb816122b6565b82525050565b60006020820190506122e660008301846122c2565b92915050565b6000819050919050565b600061231161230c612307846120fc565b6122ec565b6120fc565b9050919050565b6000612323826122f6565b9050919050565b600061233582612318565b9050919050565b6123458161232a565b82525050565b6000602082019050612360600083018461233c565b92915050565b61236f81612240565b82525050565b600060208201905061238a6000830184612366565b92915050565b6000806000606084860312156123a9576123a861220a565b5b60006123b78682870161222b565b93505060206123c88682870161222b565b92505060406123d986828701612261565b9150509250925092565b600060ff82169050919050565b6123f9816123e3565b82525050565b600060208201905061241460008301846123f0565b92915050565b6000819050919050565b61242d8161241a565b82525050565b60006020820190506124486000830184612424565b92915050565b6000602082840312156124645761246361220a565b5b60006124728482850161222b565b91505092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6124b08161247b565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6124eb81612240565b82525050565b60006124fd83836124e2565b60208301905092915050565b6000602082019050919050565b6000612521826124b6565b61252b81856124c1565b9350612536836124d2565b8060005b8381101561256757815161254e88826124f1565b975061255983612509565b92505060018101905061253a565b5085935050505092915050565b600060e082019050612589600083018a6124a7565b818103602083015261259b81896121af565b905081810360408301526125af81886121af565b90506125be6060830187612366565b6125cb608083018661212e565b6125d860a0830185612424565b81810360c08301526125ea8184612516565b905098975050505050505050565b600080fd5b600080fd5b600080fd5b60008083601f84011261261d5761261c6125f8565b5b8235905067ffffffffffffffff81111561263a576126396125fd565b5b60208301915083602082028301111561265657612655612602565b5b9250929050565b600080602083850312156126745761267361220a565b5b600083013567ffffffffffffffff8111156126925761269161220f565b5b61269e85828601612607565b92509250509250929050565b6126b3816123e3565b81146126be57600080fd5b50565b6000813590506126d0816126aa565b92915050565b6126df8161241a565b81146126ea57600080fd5b50565b6000813590506126fc816126d6565b92915050565b600080600080600080600060e0888a0312156127215761272061220a565b5b600061272f8a828b0161222b565b97505060206127408a828b0161222b565b96505060406127518a828b01612261565b95505060606127628a828b01612261565b94505060806127738a828b016126c1565b93505060a06127848a828b016126ed565b92505060c06127958a828b016126ed565b91505092959891949750929550565b600080604083850312156127bb576127ba61220a565b5b60006127c98582860161222b565b92505060206127da8582860161222b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061282b57607f821691505b60208210810361283e5761283d6127e4565b5b50919050565b6000604082019050612859600083018561212e565b612866602083018461212e565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4172617261436f696e2074726164696e6720616c726561647920656e61626c6560008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b60006128f8602183612163565b91506129038261289c565b604082019050919050565b60006020820190508181036000830152612927816128eb565b9050919050565b7f4172617261436f696e20696e76616c696420706172616d657465727300000000600082015250565b6000612964601c83612163565b915061296f8261292e565b602082019050919050565b6000602082019050818103600083015261299381612957565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060c0820190506129de6000830189612424565b6129eb602083018861212e565b6129f8604083018761212e565b612a056060830186612366565b612a126080830185612366565b612a1f60a0830184612366565b979650505050505050565b6000606082019050612a3f600083018661212e565b612a4c6020830185612366565b612a596040830184612366565b949350505050565b7f4172617261436f696e2074726164652069732064697361626c65640000000000600082015250565b6000612a97601b83612163565b9150612aa282612a61565b602082019050919050565b60006020820190508181036000830152612ac681612a8a565b9050919050565b6000606082019050612ae2600083018661212e565b612aef602083018561212e565b612afc6040830184612366565b949350505050565b600081519050612b138161224a565b92915050565b600060208284031215612b2f57612b2e61220a565b5b6000612b3d84828501612b04565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612b8082612240565b9150612b8b83612240565b9250828203905081811115612ba357612ba2612b46565b5b92915050565b600060a082019050612bbe6000830188612424565b612bcb6020830187612424565b612bd86040830186612424565b612be56060830185612366565b612bf2608083018461212e565b9695505050505050565b6000608082019050612c116000830187612424565b612c1e60208301866123f0565b612c2b6040830185612424565b612c386060830184612424565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000612c7b82612240565b9150612c8683612240565b9250828201905080821115612c9e57612c9d612b46565b5b9291505056fea2646970667358221220c71d70f4a2736b86862cc7998d68fb4e15af7cccbacb6f9761950e23c17848e364736f6c63430008180033","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE PUSH20 0x23618E81E3F5CDF7F54C3D65F7FBC0ABF5B21E8F PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xA0EE7A142D267C1F36714E4A8F75612F20A79720 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x70997970C51812DC3A010C7D01B50E0D17DC79C8 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x3C44CDDDB6A900FA2B585DD299E03D12FA4293BC PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x90F79BF6EB2C4F870365E785982E1F101E93B906 PUSH1 0xD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x15D34AAF54267DB7D7C367839AAF71A00A2C6A65 PUSH1 0xE PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x71BE63F3384F5FB98995898A86B02FB2426C5788 PUSH1 0xF PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xFABB0AC9D68B0B445FB7357272FF202C5651694A PUSH1 0x10 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x9965507D1A55BCC2695C58BA16FB37D819B0A4DC PUSH1 0x11 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x1CBD3B2770909D4E10F157CABC84C7264073C9EC PUSH1 0x12 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xDF3E18D64BC6A983F673AB319CCAE4F1A57C7097 PUSH1 0x13 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x976EA74026E726554DB657FA54763ABD0C3A0AA9 PUSH1 0x14 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xBDA5747BFD65F08DEB54CB465EB87D40E51B197E PUSH1 0x15 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x4906 CODESIZE SUB DUP1 PUSH3 0x4906 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x489 SWAP2 SWAP1 PUSH3 0x1345 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4172617261636F696E0000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4172617261636F696E0000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4152415241000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x574 SWAP2 SWAP1 PUSH3 0x161B JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x586 SWAP2 SWAP1 PUSH3 0x161B JUMP JUMPDEST POP POP POP PUSH3 0x59F PUSH1 0x5 DUP4 PUSH3 0xA9A PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH3 0x5BD PUSH1 0x6 DUP3 PUSH3 0xA9A PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH3 0x5FC PUSH3 0xAF2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x6AF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x6A6 SWAP2 SWAP1 PUSH3 0x1713 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x6C0 DUP2 PUSH3 0xB4F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH1 0x16 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x719 PUSH1 0x0 PUSH1 0x17 PUSH3 0xC15 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x730 DUP4 PUSH1 0x17 PUSH3 0xC15 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x750 CALLER PUSH13 0x1431E0FAE6D7217CAA0000000 PUSH3 0xC4D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x791 CALLER PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0x9B18AB5DF7180B6B8000000 PUSH3 0xCDA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x7D2 CALLER PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0x409F9CBC7C4A04C22000000 PUSH3 0xCDA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x813 CALLER PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0x26C62AD77DC602DAE000000 PUSH3 0xCDA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x871 CALLER PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x64 PUSH1 0xA PUSH13 0x1431E0FAE6D7217CAA0000000 PUSH3 0x859 SWAP2 SWAP1 PUSH3 0x175F JUMP JUMPDEST PUSH3 0x865 SWAP2 SWAP1 PUSH3 0x17D9 JUMP JUMPDEST PUSH3 0xCDA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x8CF CALLER PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x64 PUSH1 0x14 PUSH13 0x1431E0FAE6D7217CAA0000000 PUSH3 0x8B7 SWAP2 SWAP1 PUSH3 0x175F JUMP JUMPDEST PUSH3 0x8C3 SWAP2 SWAP1 PUSH3 0x17D9 JUMP JUMPDEST PUSH3 0xCDA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x910 CALLER PUSH1 0xE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0x1431E0FAE6D7217CAA000000 PUSH3 0xCDA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x951 CALLER PUSH1 0xF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0x1431E0FAE6D7217CAA000000 PUSH3 0xCDA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x992 CALLER PUSH1 0x10 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0x2863C1F5CDAE42F954000000 PUSH3 0xCDA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x9D3 CALLER PUSH1 0x13 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0x1F04EF12CB04CF1580000000 PUSH3 0xCDA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xA14 CALLER PUSH1 0x12 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0x121836204BC2CE21E0000000 PUSH3 0xCDA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xA55 CALLER PUSH1 0x11 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xF8277896582678AC0000000 PUSH3 0xCDA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xA91 CALLER DUP3 PUSH1 0x64 PUSH1 0x14 PUSH13 0x1431E0FAE6D7217CAA0000000 PUSH3 0xA79 SWAP2 SWAP1 PUSH3 0x175F JUMP JUMPDEST PUSH3 0xA85 SWAP2 SWAP1 PUSH3 0x17D9 JUMP JUMPDEST PUSH3 0xCDA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH3 0x1BD1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0xAC0 JUMPI PUSH3 0xAB8 DUP4 PUSH3 0xDDC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH3 0xAEC JUMP JUMPDEST DUP3 PUSH3 0xAD2 DUP4 PUSH3 0xE49 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 DUP2 PUSH3 0xAE3 SWAP2 SWAP1 PUSH3 0x161B JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0xB34 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x183D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xC45 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH3 0xE53 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xCC2 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xCB9 SWAP2 SWAP1 PUSH3 0x1713 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xCD6 PUSH1 0x0 DUP4 DUP4 PUSH3 0xECD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xD4F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xD46 SWAP2 SWAP1 PUSH3 0x1713 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xDC4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xDBB SWAP2 SWAP1 PUSH3 0x1713 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xDD7 DUP4 DUP4 DUP4 PUSH3 0xECD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0xE2C JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xE23 SWAP2 SWAP1 PUSH3 0x1929 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH3 0xE3A SWAP1 PUSH3 0x197F JUMP JUMPDEST PUSH1 0x0 SHR OR PUSH1 0x0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xE67 DUP4 DUP4 PUSH3 0x1050 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xEC2 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH3 0xEC7 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x16 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH3 0xF3B JUMPI PUSH3 0xEF8 DUP4 PUSH1 0x17 PUSH3 0x1073 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xF3A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xF31 SWAP1 PUSH3 0x1A3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x16 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD7AD21AC DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xF9E SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x1A61 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xFBC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xFE2 SWAP2 SWAP1 PUSH3 0x1ACF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 PUSH3 0xFF4 SWAP2 SWAP1 PUSH3 0x1B01 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT ISZERO PUSH3 0x1036 JUMPI PUSH3 0x1035 DUP6 PUSH1 0x15 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH3 0x10AB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST PUSH3 0x1049 DUP6 DUP6 DUP4 PUSH3 0x10AB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x10A3 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH3 0x1050 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x1101 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x10F4 SWAP2 SWAP1 PUSH3 0x1B3C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x11D7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x1190 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1187 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x1B77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x1222 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x126F JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x12CE SWAP2 SWAP1 PUSH3 0x1BB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x130D DUP3 PUSH3 0x12E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x131F DUP2 PUSH3 0x1300 JUMP JUMPDEST DUP2 EQ PUSH3 0x132B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x133F DUP2 PUSH3 0x1314 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x1361 JUMPI PUSH3 0x1360 PUSH3 0x12DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x1371 DUP7 DUP3 DUP8 ADD PUSH3 0x132E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x1384 DUP7 DUP3 DUP8 ADD PUSH3 0x132E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x1397 DUP7 DUP3 DUP8 ADD PUSH3 0x132E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x1423 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1439 JUMPI PUSH3 0x1438 PUSH3 0x13DB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x14A3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x1464 JUMP JUMPDEST PUSH3 0x14AF DUP7 DUP4 PUSH3 0x1464 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x14FC PUSH3 0x14F6 PUSH3 0x14F0 DUP5 PUSH3 0x14C7 JUMP JUMPDEST PUSH3 0x14D1 JUMP JUMPDEST PUSH3 0x14C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1518 DUP4 PUSH3 0x14DB JUMP JUMPDEST PUSH3 0x1530 PUSH3 0x1527 DUP3 PUSH3 0x1503 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x1471 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x1547 PUSH3 0x1538 JUMP JUMPDEST PUSH3 0x1554 DUP2 DUP5 DUP5 PUSH3 0x150D JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x157C JUMPI PUSH3 0x1570 PUSH1 0x0 DUP3 PUSH3 0x153D JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x155A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x15CB JUMPI PUSH3 0x1595 DUP2 PUSH3 0x143F JUMP JUMPDEST PUSH3 0x15A0 DUP5 PUSH3 0x1454 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x15B0 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x15C8 PUSH3 0x15BF DUP6 PUSH3 0x1454 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x1559 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x15F0 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x15D0 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x160B DUP4 DUP4 PUSH3 0x15DD JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x1626 DUP3 PUSH3 0x13A1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1642 JUMPI PUSH3 0x1641 PUSH3 0x13AC JUMP JUMPDEST JUMPDEST PUSH3 0x164E DUP3 SLOAD PUSH3 0x140A JUMP JUMPDEST PUSH3 0x165B DUP3 DUP3 DUP6 PUSH3 0x1580 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x1693 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x167E JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x168A DUP6 DUP3 PUSH3 0x15FD JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x16FA JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x16A3 DUP7 PUSH3 0x143F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x16CD JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x16A6 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x16ED JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x16E9 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x15DD JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x170D DUP2 PUSH3 0x1300 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x172A PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1702 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x176C DUP3 PUSH3 0x14C7 JUMP JUMPDEST SWAP2 POP PUSH3 0x1779 DUP4 PUSH3 0x14C7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0x1789 DUP2 PUSH3 0x14C7 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0x17A3 JUMPI PUSH3 0x17A2 PUSH3 0x1730 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x17E6 DUP3 PUSH3 0x14C7 JUMP JUMPDEST SWAP2 POP PUSH3 0x17F3 DUP4 PUSH3 0x14C7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH3 0x1806 JUMPI PUSH3 0x1805 PUSH3 0x17AA JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1826 DUP2 PUSH3 0x1811 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x1837 DUP2 PUSH3 0x14C7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x1854 PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0x181B JUMP JUMPDEST PUSH3 0x1863 PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0x181B JUMP JUMPDEST PUSH3 0x1872 PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0x181B JUMP JUMPDEST PUSH3 0x1881 PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0x182C JUMP JUMPDEST PUSH3 0x1890 PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0x1702 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x18CB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x18AE JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x18F5 DUP3 PUSH3 0x13A1 JUMP JUMPDEST PUSH3 0x1901 DUP2 DUP6 PUSH3 0x189A JUMP JUMPDEST SWAP4 POP PUSH3 0x1913 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x18AB JUMP JUMPDEST PUSH3 0x191E DUP2 PUSH3 0x18D7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1945 DUP2 DUP5 PUSH3 0x18E8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1976 DUP3 MLOAD PUSH3 0x1811 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x198C DUP3 PUSH3 0x194D JUMP JUMPDEST DUP3 PUSH3 0x1998 DUP5 PUSH3 0x1958 JUMP JUMPDEST SWAP1 POP PUSH3 0x19A5 DUP2 PUSH3 0x1968 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH3 0x19E8 JUMPI PUSH3 0x19E3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH3 0x1464 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4172617261436F696E2074726164652069732064697361626C65640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1A27 PUSH1 0x1B DUP4 PUSH3 0x189A JUMP JUMPDEST SWAP2 POP PUSH3 0x1A34 DUP3 PUSH3 0x19EF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1A5A DUP2 PUSH3 0x1A18 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x1A78 PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x1702 JUMP JUMPDEST PUSH3 0x1A87 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x1702 JUMP JUMPDEST PUSH3 0x1A96 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x182C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH3 0x1AA9 DUP2 PUSH3 0x14C7 JUMP JUMPDEST DUP2 EQ PUSH3 0x1AB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1AC9 DUP2 PUSH3 0x1A9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1AE8 JUMPI PUSH3 0x1AE7 PUSH3 0x12DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x1AF8 DUP5 DUP3 DUP6 ADD PUSH3 0x1AB8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1B0E DUP3 PUSH3 0x14C7 JUMP JUMPDEST SWAP2 POP PUSH3 0x1B1B DUP4 PUSH3 0x14C7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH3 0x1B36 JUMPI PUSH3 0x1B35 PUSH3 0x1730 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1B49 DUP3 PUSH3 0x14C7 JUMP JUMPDEST SWAP2 POP PUSH3 0x1B56 DUP4 PUSH3 0x14C7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x1B71 JUMPI PUSH3 0x1B70 PUSH3 0x1730 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x1B8E PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x1702 JUMP JUMPDEST PUSH3 0x1B9D PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x182C JUMP JUMPDEST PUSH3 0x1BAC PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x182C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1BCB PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x182C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x2CDA PUSH3 0x1C2C PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x1532 ADD MSTORE PUSH1 0x0 PUSH2 0x14F7 ADD MSTORE PUSH1 0x0 PUSH2 0x19B7 ADD MSTORE PUSH1 0x0 PUSH2 0x1996 ADD MSTORE PUSH1 0x0 PUSH2 0x12A5 ADD MSTORE PUSH1 0x0 PUSH2 0x12FB ADD MSTORE PUSH1 0x0 PUSH2 0x1324 ADD MSTORE PUSH2 0x2CDA PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x211 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xA4771EA4 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x5CE JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5EA JUMPI DUP1 PUSH4 0xEA414B28 EQ PUSH2 0x61A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x636 JUMPI DUP1 PUSH4 0xFB3D924A EQ PUSH2 0x652 JUMPI PUSH2 0x211 JUMP JUMPDEST DUP1 PUSH4 0xA4771EA4 EQ PUSH2 0x546 JUMPI DUP1 PUSH4 0xA781C954 EQ PUSH2 0x564 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x582 JUMPI DUP1 PUSH4 0xCA40F1C4 EQ PUSH2 0x5B2 JUMPI PUSH2 0x211 JUMP JUMPDEST DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x4AC JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x4DC JUMPI DUP1 PUSH4 0x8A8C523C EQ PUSH2 0x500 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x528 JUMPI PUSH2 0x211 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0x75F0A874 EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0x77BA8280 EQ PUSH2 0x48E JUMPI PUSH2 0x211 JUMP JUMPDEST DUP1 PUSH4 0x1FC75E41 GT PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x3644E515 GT PUSH2 0x177 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0x488D4A51 EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0x4A3084EB EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0x4ADA218B EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0x6409F534 EQ PUSH2 0x418 JUMPI PUSH2 0x211 JUMP JUMPDEST DUP1 PUSH4 0x1FC75E41 EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x2DC0562D EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x384 JUMPI PUSH2 0x211 JUMP JUMPDEST DUP1 PUSH4 0x16942450 GT PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x16942450 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x1798FB80 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x1F640ED8 EQ PUSH2 0x2FA JUMPI PUSH2 0x211 JUMP JUMPDEST DUP1 PUSH4 0x1089B92 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x12280BA8 EQ PUSH2 0x282 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21E PUSH2 0x670 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23C PUSH2 0x696 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x21E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x2276 JUMP JUMPDEST PUSH2 0x728 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x22D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28A PUSH2 0x74B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x234B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A8 PUSH2 0x771 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C6 PUSH2 0x797 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E4 PUSH2 0x7BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F1 SWAP2 SWAP1 PUSH2 0x2375 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x302 PUSH2 0x7C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x320 PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x350 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x2390 JUMP JUMPDEST PUSH2 0x813 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x22D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36E PUSH2 0x842 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38C PUSH2 0x868 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x399 SWAP2 SWAP1 PUSH2 0x23FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AA PUSH2 0x871 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0x2433 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D5 SWAP2 SWAP1 PUSH2 0x244E JUMP JUMPDEST PUSH2 0x880 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E4 PUSH2 0x92C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x402 PUSH2 0x952 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40F SWAP2 SWAP1 PUSH2 0x22D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x420 PUSH2 0x965 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x450 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44B SWAP2 SWAP1 PUSH2 0x244E JUMP JUMPDEST PUSH2 0x98B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45D SWAP2 SWAP1 PUSH2 0x2375 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x46E PUSH2 0x9D3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x478 PUSH2 0x9E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x485 SWAP2 SWAP1 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x496 PUSH2 0xA0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A3 SWAP2 SWAP1 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0x244E JUMP JUMPDEST PUSH2 0xA33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D3 SWAP2 SWAP1 PUSH2 0x2375 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E4 PUSH2 0xA45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F7 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x508 PUSH2 0xAEF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x512 PUSH2 0xB90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51F SWAP2 SWAP1 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x530 PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53D SWAP2 SWAP1 PUSH2 0x21E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54E PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55B SWAP2 SWAP1 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56C PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x579 SWAP2 SWAP1 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x597 SWAP2 SWAP1 PUSH2 0x2276 JUMP JUMPDEST PUSH2 0xC98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A9 SWAP2 SWAP1 PUSH2 0x22D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0x265D JUMP JUMPDEST PUSH2 0xCBB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E3 SWAP2 SWAP1 PUSH2 0x2702 JUMP JUMPDEST PUSH2 0xDB5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x604 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5FF SWAP2 SWAP1 PUSH2 0x27A4 JUMP JUMPDEST PUSH2 0xEFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x611 SWAP2 SWAP1 PUSH2 0x2375 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x634 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x62F SWAP2 SWAP1 PUSH2 0x244E JUMP JUMPDEST PUSH2 0xF84 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x650 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x64B SWAP2 SWAP1 PUSH2 0x244E JUMP JUMPDEST PUSH2 0x1053 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x65A PUSH2 0x10D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x667 SWAP2 SWAP1 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0xE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x6A5 SWAP1 PUSH2 0x2813 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6D1 SWAP1 PUSH2 0x2813 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x71E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6F3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x71E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x701 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x733 PUSH2 0x10FF JUMP JUMPDEST SWAP1 POP PUSH2 0x740 DUP2 DUP6 DUP6 PUSH2 0x1107 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x16 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x81E PUSH2 0x10FF JUMP JUMPDEST SWAP1 POP PUSH2 0x82B DUP6 DUP3 DUP6 PUSH2 0x1119 JUMP JUMPDEST PUSH2 0x836 DUP6 DUP6 DUP6 PUSH2 0x11AD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x15 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87B PUSH2 0x12A1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x888 PUSH2 0x1358 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x16 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x16 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH31 0xD910C9481701BA32AFE0C247572AAECE27072F230C8EC769BF245FC0B38DE6 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x920 SWAP3 SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x14 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x16 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9DB PUSH2 0x1358 JUMP JUMPDEST PUSH2 0x9E5 PUSH1 0x0 PUSH2 0x13DF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA3E DUP3 PUSH2 0x14A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0xA59 PUSH2 0x14EE JUMP JUMPDEST PUSH2 0xA61 PUSH2 0x1529 JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA82 JUMPI PUSH2 0xA81 PUSH2 0x286D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAB0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH2 0xAF7 PUSH2 0x1358 JUMP JUMPDEST PUSH1 0x16 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB47 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3E SWAP1 PUSH2 0x290E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x16 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x799663458A5EF2936F7FA0C99B3336C69C25890F82974F04E811E5BB359186C7 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xBC9 SWAP1 PUSH2 0x2813 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBF5 SWAP1 PUSH2 0x2813 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC42 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC17 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC42 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC25 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x13 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xCA3 PUSH2 0x10FF JUMP JUMPDEST SWAP1 POP PUSH2 0xCB0 DUP2 DUP6 DUP6 PUSH2 0x11AD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCC3 PUSH2 0x1358 JUMP JUMPDEST PUSH1 0x16 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD13 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0A SWAP1 PUSH2 0x290E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 SWAP1 POP SUB PUSH2 0xD59 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD50 SWAP1 PUSH2 0x297A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP3 SWAP1 POP DUP2 LT ISZERO PUSH2 0xDB0 JUMPI PUSH2 0xDA2 DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0xD7D JUMPI PUSH2 0xD7C PUSH2 0x299A JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xD92 SWAP2 SWAP1 PUSH2 0x244E JUMP JUMPDEST PUSH1 0x17 PUSH2 0x1564 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xD5C JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xDFA JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF1 SWAP2 SWAP1 PUSH2 0x2375 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xE29 DUP13 PUSH2 0x1594 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE3F SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xE62 DUP3 PUSH2 0x15EB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE72 DUP3 DUP8 DUP8 DUP8 PUSH2 0x1605 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEE6 JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEDD SWAP3 SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEF1 DUP11 DUP11 DUP11 PUSH2 0x1107 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF8C PUSH2 0x1358 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x15 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x15 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xA3568000DA48CC6E5E2C8E7A94D1BFA3607D1734C7DBD7B04AC9D77316B471A DUP2 PUSH1 0x15 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x1047 SWAP3 SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x105B PUSH2 0x1358 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10CD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C4 SWAP2 SWAP1 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10D6 DUP2 PUSH2 0x13DF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x11 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1114 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1635 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1125 DUP5 DUP5 PUSH2 0xEFD JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x11A7 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1197 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11A6 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1635 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x121F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1216 SWAP2 SWAP1 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1291 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1288 SWAP2 SWAP1 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x129C DUP4 DUP4 DUP4 PUSH2 0x180C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x131D JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x134A JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x1355 JUMP JUMPDEST PUSH2 0x1352 PUSH2 0x1971 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1360 PUSH2 0x10FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x137E PUSH2 0xB90 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13DD JUMPI PUSH2 0x13A1 PUSH2 0x10FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D4 SWAP2 SWAP1 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1524 PUSH1 0x5 PUSH32 0x0 PUSH2 0x1A07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x155F PUSH1 0x6 PUSH32 0x0 PUSH2 0x1A07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x158C DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x1AB7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15FE PUSH2 0x15F8 PUSH2 0x12A1 JUMP JUMPDEST DUP4 PUSH2 0x1B27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1617 DUP9 DUP9 DUP9 DUP9 PUSH2 0x1B68 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1627 DUP3 DUP3 PUSH2 0x1C5C JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16A7 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x169E SWAP2 SWAP1 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1719 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1710 SWAP2 SWAP1 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1806 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x17FD SWAP2 SWAP1 PUSH2 0x2375 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x16 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1874 JUMPI PUSH2 0x1834 DUP4 PUSH1 0x17 PUSH2 0x1DC0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1873 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x186A SWAP1 PUSH2 0x2AAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x16 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD7AD21AC DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18D5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2ACD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1916 SWAP2 SWAP1 PUSH2 0x2B19 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 PUSH2 0x1926 SWAP2 SWAP1 PUSH2 0x2B75 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT ISZERO PUSH2 0x195F JUMPI PUSH2 0x195E DUP6 PUSH1 0x15 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x1DF0 JUMP JUMPDEST JUMPDEST PUSH2 0x196A DUP6 DUP6 DUP4 PUSH2 0x1DF0 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x19EC SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2BA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x1A24 JUMPI PUSH2 0x1A1D DUP4 PUSH2 0x2015 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AB1 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1A30 SWAP1 PUSH2 0x2813 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1A5C SWAP1 PUSH2 0x2813 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1AA9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1A7E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1AA9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1A8C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AC3 DUP4 DUP4 PUSH2 0x2089 JUMP JUMPDEST PUSH2 0x1B1C JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x1B21 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1BA8 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1C52 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1BCD SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BEF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C43 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1C52 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1C70 JUMPI PUSH2 0x1C6F PUSH2 0x2C41 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1C83 JUMPI PUSH2 0x1C82 PUSH2 0x2C41 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x1DBC JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1C9D JUMPI PUSH2 0x1C9C PUSH2 0x2C41 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1CB0 JUMPI PUSH2 0x1CAF PUSH2 0x2C41 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1CE7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1CFB JUMPI PUSH2 0x1CFA PUSH2 0x2C41 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1D0E JUMPI PUSH2 0x1D0D PUSH2 0x2C41 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1D53 JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D4A SWAP2 SWAP1 PUSH2 0x2375 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1D66 JUMPI PUSH2 0x1D65 PUSH2 0x2C41 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1D79 JUMPI PUSH2 0x1D78 PUSH2 0x2C41 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1DBB JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DB2 SWAP2 SWAP1 PUSH2 0x2433 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DE8 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x2089 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E42 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1E36 SWAP2 SWAP1 PUSH2 0x2C70 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1F15 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1ECE JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EC5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F5E JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1FAB JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x2008 SWAP2 SWAP1 PUSH2 0x2375 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2022 DUP4 PUSH2 0x20AC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2041 JUMPI PUSH2 0x2040 PUSH2 0x286D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2073 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x20F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2127 DUP3 PUSH2 0x20FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2137 DUP2 PUSH2 0x211C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2152 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x212E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2192 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2177 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21BA DUP3 PUSH2 0x2158 JUMP JUMPDEST PUSH2 0x21C4 DUP2 DUP6 PUSH2 0x2163 JUMP JUMPDEST SWAP4 POP PUSH2 0x21D4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2174 JUMP JUMPDEST PUSH2 0x21DD DUP2 PUSH2 0x219E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2202 DUP2 DUP5 PUSH2 0x21AF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x221D DUP2 PUSH2 0x211C JUMP JUMPDEST DUP2 EQ PUSH2 0x2228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x223A DUP2 PUSH2 0x2214 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2253 DUP2 PUSH2 0x2240 JUMP JUMPDEST DUP2 EQ PUSH2 0x225E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2270 DUP2 PUSH2 0x224A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x228D JUMPI PUSH2 0x228C PUSH2 0x220A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x229B DUP6 DUP3 DUP7 ADD PUSH2 0x222B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22AC DUP6 DUP3 DUP7 ADD PUSH2 0x2261 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22CB DUP2 PUSH2 0x22B6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22E6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2311 PUSH2 0x230C PUSH2 0x2307 DUP5 PUSH2 0x20FC JUMP JUMPDEST PUSH2 0x22EC JUMP JUMPDEST PUSH2 0x20FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2323 DUP3 PUSH2 0x22F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2335 DUP3 PUSH2 0x2318 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2345 DUP2 PUSH2 0x232A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2360 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x233C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x236F DUP2 PUSH2 0x2240 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x238A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2366 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x23A9 JUMPI PUSH2 0x23A8 PUSH2 0x220A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23B7 DUP7 DUP3 DUP8 ADD PUSH2 0x222B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x23C8 DUP7 DUP3 DUP8 ADD PUSH2 0x222B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x23D9 DUP7 DUP3 DUP8 ADD PUSH2 0x2261 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23F9 DUP2 PUSH2 0x23E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2414 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x23F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x242D DUP2 PUSH2 0x241A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2448 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2424 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2464 JUMPI PUSH2 0x2463 PUSH2 0x220A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2472 DUP5 DUP3 DUP6 ADD PUSH2 0x222B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24B0 DUP2 PUSH2 0x247B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24EB DUP2 PUSH2 0x2240 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24FD DUP4 DUP4 PUSH2 0x24E2 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2521 DUP3 PUSH2 0x24B6 JUMP JUMPDEST PUSH2 0x252B DUP2 DUP6 PUSH2 0x24C1 JUMP JUMPDEST SWAP4 POP PUSH2 0x2536 DUP4 PUSH2 0x24D2 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2567 JUMPI DUP2 MLOAD PUSH2 0x254E DUP9 DUP3 PUSH2 0x24F1 JUMP JUMPDEST SWAP8 POP PUSH2 0x2559 DUP4 PUSH2 0x2509 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x253A JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x2589 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x24A7 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x259B DUP2 DUP10 PUSH2 0x21AF JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x25AF DUP2 DUP9 PUSH2 0x21AF JUMP JUMPDEST SWAP1 POP PUSH2 0x25BE PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x2366 JUMP JUMPDEST PUSH2 0x25CB PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x212E JUMP JUMPDEST PUSH2 0x25D8 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x2424 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x25EA DUP2 DUP5 PUSH2 0x2516 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x261D JUMPI PUSH2 0x261C PUSH2 0x25F8 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x263A JUMPI PUSH2 0x2639 PUSH2 0x25FD JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2656 JUMPI PUSH2 0x2655 PUSH2 0x2602 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2674 JUMPI PUSH2 0x2673 PUSH2 0x220A JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2692 JUMPI PUSH2 0x2691 PUSH2 0x220F JUMP JUMPDEST JUMPDEST PUSH2 0x269E DUP6 DUP3 DUP7 ADD PUSH2 0x2607 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x26B3 DUP2 PUSH2 0x23E3 JUMP JUMPDEST DUP2 EQ PUSH2 0x26BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x26D0 DUP2 PUSH2 0x26AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x26DF DUP2 PUSH2 0x241A JUMP JUMPDEST DUP2 EQ PUSH2 0x26EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x26FC DUP2 PUSH2 0x26D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2721 JUMPI PUSH2 0x2720 PUSH2 0x220A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x272F DUP11 DUP3 DUP12 ADD PUSH2 0x222B JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x2740 DUP11 DUP3 DUP12 ADD PUSH2 0x222B JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x2751 DUP11 DUP3 DUP12 ADD PUSH2 0x2261 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x2762 DUP11 DUP3 DUP12 ADD PUSH2 0x2261 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x2773 DUP11 DUP3 DUP12 ADD PUSH2 0x26C1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x2784 DUP11 DUP3 DUP12 ADD PUSH2 0x26ED JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x2795 DUP11 DUP3 DUP12 ADD PUSH2 0x26ED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27BB JUMPI PUSH2 0x27BA PUSH2 0x220A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27C9 DUP6 DUP3 DUP7 ADD PUSH2 0x222B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x27DA DUP6 DUP3 DUP7 ADD PUSH2 0x222B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x282B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x283E JUMPI PUSH2 0x283D PUSH2 0x27E4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2859 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x212E JUMP JUMPDEST PUSH2 0x2866 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x212E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4172617261436F696E2074726164696E6720616C726561647920656E61626C65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28F8 PUSH1 0x21 DUP4 PUSH2 0x2163 JUMP JUMPDEST SWAP2 POP PUSH2 0x2903 DUP3 PUSH2 0x289C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2927 DUP2 PUSH2 0x28EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4172617261436F696E20696E76616C696420706172616D657465727300000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2964 PUSH1 0x1C DUP4 PUSH2 0x2163 JUMP JUMPDEST SWAP2 POP PUSH2 0x296F DUP3 PUSH2 0x292E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2993 DUP2 PUSH2 0x2957 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x29DE PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x2424 JUMP JUMPDEST PUSH2 0x29EB PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x212E JUMP JUMPDEST PUSH2 0x29F8 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x212E JUMP JUMPDEST PUSH2 0x2A05 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x2366 JUMP JUMPDEST PUSH2 0x2A12 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x2366 JUMP JUMPDEST PUSH2 0x2A1F PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x2366 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2A3F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x212E JUMP JUMPDEST PUSH2 0x2A4C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2366 JUMP JUMPDEST PUSH2 0x2A59 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2366 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4172617261436F696E2074726164652069732064697361626C65640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A97 PUSH1 0x1B DUP4 PUSH2 0x2163 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AA2 DUP3 PUSH2 0x2A61 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2AC6 DUP2 PUSH2 0x2A8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2AE2 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x212E JUMP JUMPDEST PUSH2 0x2AEF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x212E JUMP JUMPDEST PUSH2 0x2AFC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2366 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B13 DUP2 PUSH2 0x224A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B2F JUMPI PUSH2 0x2B2E PUSH2 0x220A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B3D DUP5 DUP3 DUP6 ADD PUSH2 0x2B04 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2B80 DUP3 PUSH2 0x2240 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B8B DUP4 PUSH2 0x2240 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2BA3 JUMPI PUSH2 0x2BA2 PUSH2 0x2B46 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2BBE PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2424 JUMP JUMPDEST PUSH2 0x2BCB PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2424 JUMP JUMPDEST PUSH2 0x2BD8 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x2424 JUMP JUMPDEST PUSH2 0x2BE5 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2366 JUMP JUMPDEST PUSH2 0x2BF2 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x212E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2C11 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2424 JUMP JUMPDEST PUSH2 0x2C1E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x23F0 JUMP JUMPDEST PUSH2 0x2C2B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2424 JUMP JUMPDEST PUSH2 0x2C38 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2424 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2C7B DUP3 PUSH2 0x2240 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C86 DUP4 PUSH2 0x2240 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2C9E JUMPI PUSH2 0x2C9D PUSH2 0x2B46 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 SAR PUSH17 0xF4A2736B86862CC7998D68FB4E15AF7CCC 0xBA 0xCB PUSH16 0x9761950E23C17848E364736F6C634300 ADDMOD XOR STOP CALLER ","sourceMap":"608:7165:19:-:0;;;755:42;722:75;;;;;;;;;;;;;;;;;;;;837:42;803:76;;;;;;;;;;;;;;;;;;;;914:42;885:71;;;;;;;;;;;;;;;;;;;;993:42;962:73;;;;;;;;;;;;;;;;;;;;1071:42;1041:72;;;;;;;;;;;;;;;;;;;;1152:42;1119:75;;;;;;;;;;;;;;;;;;;;1247:42;1200:89;;;;;;;;;;;;;;;;;;;;1342:42;1295:89;;;;;;;;;;;;;;;;;;;;1425:42;1390:77;;;;;;;;;;;;;;;;;;;;1512:42;1473:81;;;;;;;;;;;;;;;;;;;;1598:42;1560:80;;;;;;;;;;;;;;;;;;;;1697:42;1646:93;;;;;;;;;;;;;;;;;;;;1976:42;1949:69;;;;;;;;;;;;;;;;;;;;2871:2155;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3166:12;1574:52:5;;;;;;;;;;;;;;;;;1613:4;3328:431:14;;;;;;;;;;;;;;;;;1896:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;3401:45:14;3432:13;3401:4;:30;;;;:45;;;;:::i;:::-;3393:53;;;;;;3467:51;3501:16;3467:7;:33;;;;:51;;;;:::i;:::-;3456:62;;;;;;3558:4;3542:22;;;;;;3528:36;;;;;;3607:7;3591:25;;;;;;3574:42;;;;;;3644:13;3627:30;;;;;;3692:23;:21;;;:23;;:::i;:::-;3667:48;;;;;;3747:4;3725:27;;;;;;;;;;3328:431;;1574:52:5;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;3316:17:19::3;3291:10;;:43;;;;;;;;;;;;;;;;;;3464:25;3486:1;3464:9;:13;;;;:25;;;;:::i;:::-;;3500:27;3514:12;3500:9;:13;;;;:27;;;;:::i;:::-;;3603:31;3609:10;1868:26;3603:5;;;:31;;:::i;:::-;3725:64;3735:10;3747:15;;;;;;;;;;;3764:24;3725:9;;;:64;;:::i;:::-;3828:65;3838:10;3850:16;;;;;;;;;;;3868:24;3828:9;;;:65;;:::i;:::-;3936:58;3946:10;3958:11;;;;;;;;;;;3971:22;3936:9;;;:58;;:::i;:::-;4031:61;4041:10;4053:13;;;;;;;;;;;4088:3;4083:2;1868:26;4068:17;;;;:::i;:::-;:23;;;;:::i;:::-;4031:9;;;:61;;:::i;:::-;4121:60;4131:10;4143:12;;;;;;;;;;;4177:3;4172:2;1868:26;4157:17;;;;:::i;:::-;:23;;;;:::i;:::-;4121:9;;;:60;;:::i;:::-;4208:64;4218:10;4230:15;;;;;;;;;;;4247:24;4208:9;;;:64;;:::i;:::-;4313:78;4323:10;4335:29;;;;;;;;;;;4366:24;4313:9;;;:78;;:::i;:::-;4450:79;4460:10;4472:29;;;;;;;;;;;4503:25;4450:9;;;:79;;:::i;:::-;4588:69;4598:10;4610:20;;;;;;;;;;;4632:24;4588:9;;;:69;;:::i;:::-;4695:70;4705:10;4717:21;;;;;;;;;;;4740:24;4695:9;;;:70;;:::i;:::-;4803:66;4813:10;4825:17;;;;;;;;;;;4844:24;4803:9;;;:66;;:::i;:::-;4904:83;4914:10;4926:35;4983:3;4978:2;1868:26;4963:17;;;;:::i;:::-;:23;;;;:::i;:::-;4904:9;;;:83;;:::i;:::-;2871:2155:::0;;;608:7165;;2914:340:10;3010:11;3059:2;3043:5;3037:19;:24;3033:215;;;3084:20;3098:5;3084:13;;;:20;;:::i;:::-;3077:27;;;;3033:215;3176:5;3135:32;3161:5;3135:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;1390:66;3219:17;;3195:42;;2914:340;;;;;:::o;4113:179:14:-;4168:7;2079:95;4226:11;;4239:14;;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;8316:150:18:-;8386:4;8409:50;8414:3;:10;;8450:5;8434:23;;8426:32;;8409:4;;;:50;;:::i;:::-;8402:57;;8316:150;;;;:::o;7721:208:3:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;;;:24;;:::i;:::-;5656:300;;;:::o;1708:286:10:-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;;;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:4;:11;1965:4;1957:13;;;:::i;:::-;1949:22;;:36;1941:45;;1917:70;;;1708:286;;;:::o;3135:202:11:-;3203:20;3311:10;3301:20;;3135:202;;;:::o;2241:406:18:-;2304:4;2325:21;2335:3;2340:5;2325:9;;;:21;;:::i;:::-;2320:321;;2362:3;:11;;2379:5;2362:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2544:3;:11;;:18;;;;2520:3;:14;;:21;2535:5;2520:21;;;;;;;;;;;:42;;;;2583:4;2576:11;;;;2320:321;2625:5;2618:12;;2241:406;;;;;:::o;7028:743:19:-;7228:14;;;;;;;;;;;7223:110;;7266:24;7285:4;7266:9;:18;;;;:24;;;;:::i;:::-;7258:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7223:110;7414:11;7428:10;;;;;;;;;;;:17;;;7446:4;7452:2;7456:5;7428:34;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7414:48;;7472:19;7502:3;7494:5;:11;;;;:::i;:::-;7472:33;;7598:1;7592:3;:7;7588:73;;;7615:35;7629:4;7635:9;;;;;;;;;;;7646:3;7615:13;;;:35;;:::i;:::-;7588:73;7728:36;7742:4;7748:2;7752:11;7728:13;;;:36;;:::i;:::-;7133:638;;7028:743;;;:::o;4264:129:18:-;4337:4;4385:1;4360:3;:14;;:21;4375:5;4360:21;;;;;;;;;;;;:26;;4353:33;;4264:129;;;;:::o;8871:165::-;8951:4;8974:55;8984:3;:10;;9020:5;9004:23;;8996:32;;8974:9;;;:55;;:::i;:::-;8967:62;;8871:165;;;;:::o;6271:1107:3:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;88:117:21:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:663::-;933:6;941;949;998:2;986:9;977:7;973:23;969:32;966:119;;;1004:79;;:::i;:::-;966:119;1124:1;1149:64;1205:7;1196:6;1185:9;1181:22;1149:64;:::i;:::-;1139:74;;1095:128;1262:2;1288:64;1344:7;1335:6;1324:9;1320:22;1288:64;:::i;:::-;1278:74;;1233:129;1401:2;1427:64;1483:7;1474:6;1463:9;1459:22;1427:64;:::i;:::-;1417:74;;1372:129;845:663;;;;;:::o;1514:99::-;1566:6;1600:5;1594:12;1584:22;;1514:99;;;:::o;1619:180::-;1667:77;1664:1;1657:88;1764:4;1761:1;1754:15;1788:4;1785:1;1778:15;1805:180;1853:77;1850:1;1843:88;1950:4;1947:1;1940:15;1974:4;1971:1;1964:15;1991:320;2035:6;2072:1;2066:4;2062:12;2052:22;;2119:1;2113:4;2109:12;2140:18;2130:81;;2196:4;2188:6;2184:17;2174:27;;2130:81;2258:2;2250:6;2247:14;2227:18;2224:38;2221:84;;2277:18;;:::i;:::-;2221:84;2042:269;1991:320;;;:::o;2317:141::-;2366:4;2389:3;2381:11;;2412:3;2409:1;2402:14;2446:4;2443:1;2433:18;2425:26;;2317:141;;;:::o;2464:93::-;2501:6;2548:2;2543;2536:5;2532:14;2528:23;2518:33;;2464:93;;;:::o;2563:107::-;2607:8;2657:5;2651:4;2647:16;2626:37;;2563:107;;;;:::o;2676:393::-;2745:6;2795:1;2783:10;2779:18;2818:97;2848:66;2837:9;2818:97;:::i;:::-;2936:39;2966:8;2955:9;2936:39;:::i;:::-;2924:51;;3008:4;3004:9;2997:5;2993:21;2984:30;;3057:4;3047:8;3043:19;3036:5;3033:30;3023:40;;2752:317;;2676:393;;;;;:::o;3075:77::-;3112:7;3141:5;3130:16;;3075:77;;;:::o;3158:60::-;3186:3;3207:5;3200:12;;3158:60;;;:::o;3224:142::-;3274:9;3307:53;3325:34;3334:24;3352:5;3334:24;:::i;:::-;3325:34;:::i;:::-;3307:53;:::i;:::-;3294:66;;3224:142;;;:::o;3372:75::-;3415:3;3436:5;3429:12;;3372:75;;;:::o;3453:269::-;3563:39;3594:7;3563:39;:::i;:::-;3624:91;3673:41;3697:16;3673:41;:::i;:::-;3665:6;3658:4;3652:11;3624:91;:::i;:::-;3618:4;3611:105;3529:193;3453:269;;;:::o;3728:73::-;3773:3;3728:73;:::o;3807:189::-;3884:32;;:::i;:::-;3925:65;3983:6;3975;3969:4;3925:65;:::i;:::-;3860:136;3807:189;;:::o;4002:186::-;4062:120;4079:3;4072:5;4069:14;4062:120;;;4133:39;4170:1;4163:5;4133:39;:::i;:::-;4106:1;4099:5;4095:13;4086:22;;4062:120;;;4002:186;;:::o;4194:543::-;4295:2;4290:3;4287:11;4284:446;;;4329:38;4361:5;4329:38;:::i;:::-;4413:29;4431:10;4413:29;:::i;:::-;4403:8;4399:44;4596:2;4584:10;4581:18;4578:49;;;4617:8;4602:23;;4578:49;4640:80;4696:22;4714:3;4696:22;:::i;:::-;4686:8;4682:37;4669:11;4640:80;:::i;:::-;4299:431;;4284:446;4194:543;;;:::o;4743:117::-;4797:8;4847:5;4841:4;4837:16;4816:37;;4743:117;;;;:::o;4866:169::-;4910:6;4943:51;4991:1;4987:6;4979:5;4976:1;4972:13;4943:51;:::i;:::-;4939:56;5024:4;5018;5014:15;5004:25;;4917:118;4866:169;;;;:::o;5040:295::-;5116:4;5262:29;5287:3;5281:4;5262:29;:::i;:::-;5254:37;;5324:3;5321:1;5317:11;5311:4;5308:21;5300:29;;5040:295;;;;:::o;5340:1395::-;5457:37;5490:3;5457:37;:::i;:::-;5559:18;5551:6;5548:30;5545:56;;;5581:18;;:::i;:::-;5545:56;5625:38;5657:4;5651:11;5625:38;:::i;:::-;5710:67;5770:6;5762;5756:4;5710:67;:::i;:::-;5804:1;5828:4;5815:17;;5860:2;5852:6;5849:14;5877:1;5872:618;;;;6534:1;6551:6;6548:77;;;6600:9;6595:3;6591:19;6585:26;6576:35;;6548:77;6651:67;6711:6;6704:5;6651:67;:::i;:::-;6645:4;6638:81;6507:222;5842:887;;5872:618;5924:4;5920:9;5912:6;5908:22;5958:37;5990:4;5958:37;:::i;:::-;6017:1;6031:208;6045:7;6042:1;6039:14;6031:208;;;6124:9;6119:3;6115:19;6109:26;6101:6;6094:42;6175:1;6167:6;6163:14;6153:24;;6222:2;6211:9;6207:18;6194:31;;6068:4;6065:1;6061:12;6056:17;;6031:208;;;6267:6;6258:7;6255:19;6252:179;;;6325:9;6320:3;6316:19;6310:26;6368:48;6410:4;6402:6;6398:17;6387:9;6368:48;:::i;:::-;6360:6;6353:64;6275:156;6252:179;6477:1;6473;6465:6;6461:14;6457:22;6451:4;6444:36;5879:611;;;5842:887;;5432:1303;;;5340:1395;;:::o;6741:118::-;6828:24;6846:5;6828:24;:::i;:::-;6823:3;6816:37;6741:118;;:::o;6865:222::-;6958:4;6996:2;6985:9;6981:18;6973:26;;7009:71;7077:1;7066:9;7062:17;7053:6;7009:71;:::i;:::-;6865:222;;;;:::o;7093:180::-;7141:77;7138:1;7131:88;7238:4;7235:1;7228:15;7262:4;7259:1;7252:15;7279:410;7319:7;7342:20;7360:1;7342:20;:::i;:::-;7337:25;;7376:20;7394:1;7376:20;:::i;:::-;7371:25;;7431:1;7428;7424:9;7453:30;7471:11;7453:30;:::i;:::-;7442:41;;7632:1;7623:7;7619:15;7616:1;7613:22;7593:1;7586:9;7566:83;7543:139;;7662:18;;:::i;:::-;7543:139;7327:362;7279:410;;;;:::o;7695:180::-;7743:77;7740:1;7733:88;7840:4;7837:1;7830:15;7864:4;7861:1;7854:15;7881:185;7921:1;7938:20;7956:1;7938:20;:::i;:::-;7933:25;;7972:20;7990:1;7972:20;:::i;:::-;7967:25;;8011:1;8001:35;;8016:18;;:::i;:::-;8001:35;8058:1;8055;8051:9;8046:14;;7881:185;;;;:::o;8072:77::-;8109:7;8138:5;8127:16;;8072:77;;;:::o;8155:118::-;8242:24;8260:5;8242:24;:::i;:::-;8237:3;8230:37;8155:118;;:::o;8279:::-;8366:24;8384:5;8366:24;:::i;:::-;8361:3;8354:37;8279:118;;:::o;8403:664::-;8608:4;8646:3;8635:9;8631:19;8623:27;;8660:71;8728:1;8717:9;8713:17;8704:6;8660:71;:::i;:::-;8741:72;8809:2;8798:9;8794:18;8785:6;8741:72;:::i;:::-;8823;8891:2;8880:9;8876:18;8867:6;8823:72;:::i;:::-;8905;8973:2;8962:9;8958:18;8949:6;8905:72;:::i;:::-;8987:73;9055:3;9044:9;9040:19;9031:6;8987:73;:::i;:::-;8403:664;;;;;;;;:::o;9073:169::-;9157:11;9191:6;9186:3;9179:19;9231:4;9226:3;9222:14;9207:29;;9073:169;;;;:::o;9248:246::-;9329:1;9339:113;9353:6;9350:1;9347:13;9339:113;;;9438:1;9433:3;9429:11;9423:18;9419:1;9414:3;9410:11;9403:39;9375:2;9372:1;9368:10;9363:15;;9339:113;;;9486:1;9477:6;9472:3;9468:16;9461:27;9310:184;9248:246;;;:::o;9500:102::-;9541:6;9592:2;9588:7;9583:2;9576:5;9572:14;9568:28;9558:38;;9500:102;;;:::o;9608:377::-;9696:3;9724:39;9757:5;9724:39;:::i;:::-;9779:71;9843:6;9838:3;9779:71;:::i;:::-;9772:78;;9859:65;9917:6;9912:3;9905:4;9898:5;9894:16;9859:65;:::i;:::-;9949:29;9971:6;9949:29;:::i;:::-;9944:3;9940:39;9933:46;;9700:285;9608:377;;;;:::o;9991:313::-;10104:4;10142:2;10131:9;10127:18;10119:26;;10191:9;10185:4;10181:20;10177:1;10166:9;10162:17;10155:47;10219:78;10292:4;10283:6;10219:78;:::i;:::-;10211:86;;9991:313;;;;:::o;10310:98::-;10361:6;10395:5;10389:12;10379:22;;10310:98;;;:::o;10414:116::-;10465:4;10488:3;10480:11;;10518:4;10513:3;10509:14;10501:22;;10414:116;;;:::o;10536:154::-;10579:11;10615:29;10639:3;10633:10;10615:29;:::i;:::-;10678:5;10654:29;;10591:99;10536:154;;;:::o;10696:594::-;10780:5;10811:38;10843:5;10811:38;:::i;:::-;10874:5;10901:40;10935:5;10901:40;:::i;:::-;10889:52;;10960:35;10986:8;10960:35;:::i;:::-;10951:44;;11019:2;11011:6;11008:14;11005:278;;;11090:169;11175:66;11145:6;11141:2;11137:15;11134:1;11130:23;11090:169;:::i;:::-;11067:5;11046:227;11037:236;;11005:278;10786:504;;10696:594;;;:::o;11296:177::-;11436:29;11432:1;11424:6;11420:14;11413:53;11296:177;:::o;11479:366::-;11621:3;11642:67;11706:2;11701:3;11642:67;:::i;:::-;11635:74;;11718:93;11807:3;11718:93;:::i;:::-;11836:2;11831:3;11827:12;11820:19;;11479:366;;;:::o;11851:419::-;12017:4;12055:2;12044:9;12040:18;12032:26;;12104:9;12098:4;12094:20;12090:1;12079:9;12075:17;12068:47;12132:131;12258:4;12132:131;:::i;:::-;12124:139;;11851:419;;;:::o;12276:442::-;12425:4;12463:2;12452:9;12448:18;12440:26;;12476:71;12544:1;12533:9;12529:17;12520:6;12476:71;:::i;:::-;12557:72;12625:2;12614:9;12610:18;12601:6;12557:72;:::i;:::-;12639;12707:2;12696:9;12692:18;12683:6;12639:72;:::i;:::-;12276:442;;;;;;:::o;12724:122::-;12797:24;12815:5;12797:24;:::i;:::-;12790:5;12787:35;12777:63;;12836:1;12833;12826:12;12777:63;12724:122;:::o;12852:143::-;12909:5;12940:6;12934:13;12925:22;;12956:33;12983:5;12956:33;:::i;:::-;12852:143;;;;:::o;13001:351::-;13071:6;13120:2;13108:9;13099:7;13095:23;13091:32;13088:119;;;13126:79;;:::i;:::-;13088:119;13246:1;13271:64;13327:7;13318:6;13307:9;13303:22;13271:64;:::i;:::-;13261:74;;13217:128;13001:351;;;;:::o;13358:194::-;13398:4;13418:20;13436:1;13418:20;:::i;:::-;13413:25;;13452:20;13470:1;13452:20;:::i;:::-;13447:25;;13496:1;13493;13489:9;13481:17;;13520:1;13514:4;13511:11;13508:37;;;13525:18;;:::i;:::-;13508:37;13358:194;;;;:::o;13558:191::-;13598:3;13617:20;13635:1;13617:20;:::i;:::-;13612:25;;13651:20;13669:1;13651:20;:::i;:::-;13646:25;;13694:1;13691;13687:9;13680:16;;13715:3;13712:1;13709:10;13706:36;;;13722:18;;:::i;:::-;13706:36;13558:191;;;;:::o;13755:442::-;13904:4;13942:2;13931:9;13927:18;13919:26;;13955:71;14023:1;14012:9;14008:17;13999:6;13955:71;:::i;:::-;14036:72;14104:2;14093:9;14089:18;14080:6;14036:72;:::i;:::-;14118;14186:2;14175:9;14171:18;14162:6;14118:72;:::i;:::-;13755:442;;;;;;:::o;14203:222::-;14296:4;14334:2;14323:9;14319:18;14311:26;;14347:71;14415:1;14404:9;14400:17;14391:6;14347:71;:::i;:::-;14203:222;;;;:::o;608:7165:19:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DOMAIN_SEPARATOR_1055":{"entryPoint":2161,"id":1055,"parameterSlots":0,"returnSlots":1},"@_EIP712Name_2360":{"entryPoint":5358,"id":2360,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_2372":{"entryPoint":5417,"id":2372,"parameterSlots":0,"returnSlots":1},"@_add_3659":{"entryPoint":6839,"id":3659,"parameterSlots":2,"returnSlots":1},"@_approve_715":{"entryPoint":4359,"id":715,"parameterSlots":3,"returnSlots":0},"@_approve_775":{"entryPoint":5685,"id":775,"parameterSlots":4,"returnSlots":0},"@_buildDomainSeparator_2290":{"entryPoint":6513,"id":2290,"parameterSlots":0,"returnSlots":1},"@_checkOwner_84":{"entryPoint":4952,"id":84,"parameterSlots":0,"returnSlots":0},"@_contains_3762":{"entryPoint":8329,"id":3762,"parameterSlots":2,"returnSlots":1},"@_domainSeparatorV4_2269":{"entryPoint":4769,"id":2269,"parameterSlots":0,"returnSlots":1},"@_hashTypedDataV4_2306":{"entryPoint":5611,"id":2306,"parameterSlots":1,"returnSlots":1},"@_msgSender_1130":{"entryPoint":4351,"id":1130,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_823":{"entryPoint":4377,"id":823,"parameterSlots":3,"returnSlots":0},"@_throwError_2145":{"entryPoint":7260,"id":2145,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":5087,"id":146,"parameterSlots":1,"returnSlots":0},"@_transfer_554":{"entryPoint":4525,"id":554,"parameterSlots":3,"returnSlots":0},"@_update_4653":{"entryPoint":6156,"id":4653,"parameterSlots":3,"returnSlots":0},"@_update_631":{"entryPoint":7664,"id":631,"parameterSlots":3,"returnSlots":0},"@_useNonce_1190":{"entryPoint":5524,"id":1190,"parameterSlots":1,"returnSlots":1},"@addCanTrade_4593":{"entryPoint":3259,"id":4593,"parameterSlots":2,"returnSlots":0},"@add_3959":{"entryPoint":5476,"id":3959,"parameterSlots":2,"returnSlots":1},"@allowance_451":{"entryPoint":3837,"id":451,"parameterSlots":2,"returnSlots":1},"@approve_475":{"entryPoint":1832,"id":475,"parameterSlots":2,"returnSlots":1},"@auditWallet_4241":{"entryPoint":1943,"id":4241,"parameterSlots":0,"returnSlots":0},"@balanceOf_410":{"entryPoint":2443,"id":410,"parameterSlots":1,"returnSlots":1},"@byteLength_1334":{"entryPoint":8364,"id":1334,"parameterSlots":1,"returnSlots":1},"@companyVestingWallet_4265":{"entryPoint":3148,"id":4265,"parameterSlots":0,"returnSlots":0},"@consultingWallet_4238":{"entryPoint":2405,"id":4238,"parameterSlots":0,"returnSlots":0},"@contains_4013":{"entryPoint":7616,"id":4013,"parameterSlots":2,"returnSlots":1},"@decimals_388":{"entryPoint":2152,"id":388,"parameterSlots":0,"returnSlots":1},"@eip712Domain_2348":{"entryPoint":2629,"id":2348,"parameterSlots":0,"returnSlots":7},"@enableTrading_4502":{"entryPoint":2799,"id":4502,"parameterSlots":0,"returnSlots":0},"@foundersVestingWallet_4262":{"entryPoint":1991,"id":4262,"parameterSlots":0,"returnSlots":0},"@investorsWallet_4250":{"entryPoint":1648,"id":4250,"parameterSlots":0,"returnSlots":0},"@investorsYearOneVestingWallet_4253":{"entryPoint":3186,"id":4253,"parameterSlots":0,"returnSlots":0},"@investorsYearTwoVestingWallet_4256":{"entryPoint":1905,"id":4256,"parameterSlots":0,"returnSlots":0},"@launchWallet_4247":{"entryPoint":2573,"id":4247,"parameterSlots":0,"returnSlots":0},"@marketingWallet_4235":{"entryPoint":2535,"id":4235,"parameterSlots":0,"returnSlots":0},"@name_370":{"entryPoint":1686,"id":370,"parameterSlots":0,"returnSlots":1},"@nonces_1045":{"entryPoint":2611,"id":1045,"parameterSlots":1,"returnSlots":1},"@nonces_1175":{"entryPoint":5285,"id":1175,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":2960,"id":67,"parameterSlots":0,"returnSlots":1},"@permit_1028":{"entryPoint":3509,"id":1028,"parameterSlots":7,"returnSlots":0},"@preSaleWallet_4244":{"entryPoint":2029,"id":4244,"parameterSlots":0,"returnSlots":0},"@preservationProjectsVestingWallet_4268":{"entryPoint":2348,"id":4268,"parameterSlots":0,"returnSlots":0},"@recover_2096":{"entryPoint":5637,"id":2096,"parameterSlots":4,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":2515,"id":98,"parameterSlots":0,"returnSlots":0},"@setTaxHandler_4528":{"entryPoint":2176,"id":4528,"parameterSlots":1,"returnSlots":0},"@setTaxWallet_4549":{"entryPoint":3972,"id":4549,"parameterSlots":1,"returnSlots":0},"@symbol_379":{"entryPoint":3002,"id":379,"parameterSlots":0,"returnSlots":1},"@taxHandler_4281":{"entryPoint":1867,"id":4281,"parameterSlots":0,"returnSlots":0},"@taxWallet_4278":{"entryPoint":2114,"id":4278,"parameterSlots":0,"returnSlots":0},"@teamVestingWallet_4259":{"entryPoint":4313,"id":4259,"parameterSlots":0,"returnSlots":0},"@toStringWithFallback_1401":{"entryPoint":6663,"id":1401,"parameterSlots":2,"returnSlots":1},"@toString_1302":{"entryPoint":8213,"id":1302,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_2446":{"entryPoint":6951,"id":2446,"parameterSlots":2,"returnSlots":1},"@totalSupply_397":{"entryPoint":1981,"id":397,"parameterSlots":0,"returnSlots":1},"@tradingEnabled_4283":{"entryPoint":2386,"id":4283,"parameterSlots":0,"returnSlots":0},"@transferFrom_507":{"entryPoint":2067,"id":507,"parameterSlots":3,"returnSlots":1},"@transferOwnership_126":{"entryPoint":4179,"id":126,"parameterSlots":1,"returnSlots":0},"@transfer_434":{"entryPoint":3224,"id":434,"parameterSlots":2,"returnSlots":1},"@tryRecover_2060":{"entryPoint":7016,"id":2060,"parameterSlots":4,"returnSlots":3},"abi_decode_t_address":{"entryPoint":8747,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_calldata_ptr":{"entryPoint":9735,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bytes32":{"entryPoint":9965,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":8801,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":11012,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":9921,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":9294,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":10148,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":9104,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":9986,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":8822,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr":{"entryPoint":9821,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":11033,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":9457,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":8494,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":9494,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":8898,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes1_to_t_bytes1_fromStack":{"entryPoint":9383,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":9252,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_ITaxHandler_$4670_to_t_address_fromStack":{"entryPoint":9020,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":8623,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_21ef6b7918317f335757be4f30c7408f457723a97602be12bce7361115dd17f9_to_t_string_memory_ptr_fromStack":{"entryPoint":10583,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7_to_t_string_memory_ptr_fromStack":{"entryPoint":10890,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4_to_t_string_memory_ptr_fromStack":{"entryPoint":10475,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":9442,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":9062,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":9200,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":8509,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":10308,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":10957,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":10794,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":8913,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":9588,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":9267,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":10697,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":11177,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":11260,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_contract$_ITaxHandler_$4670__to_t_address__fromStack_reversed":{"entryPoint":9035,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8680,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_21ef6b7918317f335757be4f30c7408f457723a97602be12bce7361115dd17f9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10618,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10925,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10510,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":9077,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":9215,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":9426,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":9398,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":8536,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":9481,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":9409,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":8547,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":11376,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":11125,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":8476,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":8886,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes1":{"entryPoint":9339,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":9242,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":8444,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":8768,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":9187,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_ITaxHandler_$4670_to_t_address":{"entryPoint":9002,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":8984,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":8950,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":8564,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":10259,"id":null,"parameterSlots":1,"returnSlots":1},"identity":{"entryPoint":8940,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":11078,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":11329,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":10212,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":10650,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":10349,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":9725,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":9720,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":9730,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":8719,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":8714,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":8606,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_21ef6b7918317f335757be4f30c7408f457723a97602be12bce7361115dd17f9":{"entryPoint":10542,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7":{"entryPoint":10849,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4":{"entryPoint":10396,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":8724,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":9942,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":8778,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":9898,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:22173:21","nodeType":"YulBlock","src":"0:22173:21","statements":[{"body":{"nativeSrc":"52:81:21","nodeType":"YulBlock","src":"52:81:21","statements":[{"nativeSrc":"62:65:21","nodeType":"YulAssignment","src":"62:65:21","value":{"arguments":[{"name":"value","nativeSrc":"77:5:21","nodeType":"YulIdentifier","src":"77:5:21"},{"kind":"number","nativeSrc":"84:42:21","nodeType":"YulLiteral","src":"84:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"73:3:21","nodeType":"YulIdentifier","src":"73:3:21"},"nativeSrc":"73:54:21","nodeType":"YulFunctionCall","src":"73:54:21"},"variableNames":[{"name":"cleaned","nativeSrc":"62:7:21","nodeType":"YulIdentifier","src":"62:7:21"}]}]},"name":"cleanup_t_uint160","nativeSrc":"7:126:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"34:5:21","nodeType":"YulTypedName","src":"34:5:21","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"44:7:21","nodeType":"YulTypedName","src":"44:7:21","type":""}],"src":"7:126:21"},{"body":{"nativeSrc":"184:51:21","nodeType":"YulBlock","src":"184:51:21","statements":[{"nativeSrc":"194:35:21","nodeType":"YulAssignment","src":"194:35:21","value":{"arguments":[{"name":"value","nativeSrc":"223:5:21","nodeType":"YulIdentifier","src":"223:5:21"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"205:17:21","nodeType":"YulIdentifier","src":"205:17:21"},"nativeSrc":"205:24:21","nodeType":"YulFunctionCall","src":"205:24:21"},"variableNames":[{"name":"cleaned","nativeSrc":"194:7:21","nodeType":"YulIdentifier","src":"194:7:21"}]}]},"name":"cleanup_t_address","nativeSrc":"139:96:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"166:5:21","nodeType":"YulTypedName","src":"166:5:21","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"176:7:21","nodeType":"YulTypedName","src":"176:7:21","type":""}],"src":"139:96:21"},{"body":{"nativeSrc":"306:53:21","nodeType":"YulBlock","src":"306:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"323:3:21","nodeType":"YulIdentifier","src":"323:3:21"},{"arguments":[{"name":"value","nativeSrc":"346:5:21","nodeType":"YulIdentifier","src":"346:5:21"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"328:17:21","nodeType":"YulIdentifier","src":"328:17:21"},"nativeSrc":"328:24:21","nodeType":"YulFunctionCall","src":"328:24:21"}],"functionName":{"name":"mstore","nativeSrc":"316:6:21","nodeType":"YulIdentifier","src":"316:6:21"},"nativeSrc":"316:37:21","nodeType":"YulFunctionCall","src":"316:37:21"},"nativeSrc":"316:37:21","nodeType":"YulExpressionStatement","src":"316:37:21"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"241:118:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"294:5:21","nodeType":"YulTypedName","src":"294:5:21","type":""},{"name":"pos","nativeSrc":"301:3:21","nodeType":"YulTypedName","src":"301:3:21","type":""}],"src":"241:118:21"},{"body":{"nativeSrc":"463:124:21","nodeType":"YulBlock","src":"463:124:21","statements":[{"nativeSrc":"473:26:21","nodeType":"YulAssignment","src":"473:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"485:9:21","nodeType":"YulIdentifier","src":"485:9:21"},{"kind":"number","nativeSrc":"496:2:21","nodeType":"YulLiteral","src":"496:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"481:3:21","nodeType":"YulIdentifier","src":"481:3:21"},"nativeSrc":"481:18:21","nodeType":"YulFunctionCall","src":"481:18:21"},"variableNames":[{"name":"tail","nativeSrc":"473:4:21","nodeType":"YulIdentifier","src":"473:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"553:6:21","nodeType":"YulIdentifier","src":"553:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"566:9:21","nodeType":"YulIdentifier","src":"566:9:21"},{"kind":"number","nativeSrc":"577:1:21","nodeType":"YulLiteral","src":"577:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"562:3:21","nodeType":"YulIdentifier","src":"562:3:21"},"nativeSrc":"562:17:21","nodeType":"YulFunctionCall","src":"562:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"509:43:21","nodeType":"YulIdentifier","src":"509:43:21"},"nativeSrc":"509:71:21","nodeType":"YulFunctionCall","src":"509:71:21"},"nativeSrc":"509:71:21","nodeType":"YulExpressionStatement","src":"509:71:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"365:222:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"435:9:21","nodeType":"YulTypedName","src":"435:9:21","type":""},{"name":"value0","nativeSrc":"447:6:21","nodeType":"YulTypedName","src":"447:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"458:4:21","nodeType":"YulTypedName","src":"458:4:21","type":""}],"src":"365:222:21"},{"body":{"nativeSrc":"652:40:21","nodeType":"YulBlock","src":"652:40:21","statements":[{"nativeSrc":"663:22:21","nodeType":"YulAssignment","src":"663:22:21","value":{"arguments":[{"name":"value","nativeSrc":"679:5:21","nodeType":"YulIdentifier","src":"679:5:21"}],"functionName":{"name":"mload","nativeSrc":"673:5:21","nodeType":"YulIdentifier","src":"673:5:21"},"nativeSrc":"673:12:21","nodeType":"YulFunctionCall","src":"673:12:21"},"variableNames":[{"name":"length","nativeSrc":"663:6:21","nodeType":"YulIdentifier","src":"663:6:21"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"593:99:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"635:5:21","nodeType":"YulTypedName","src":"635:5:21","type":""}],"returnVariables":[{"name":"length","nativeSrc":"645:6:21","nodeType":"YulTypedName","src":"645:6:21","type":""}],"src":"593:99:21"},{"body":{"nativeSrc":"794:73:21","nodeType":"YulBlock","src":"794:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"811:3:21","nodeType":"YulIdentifier","src":"811:3:21"},{"name":"length","nativeSrc":"816:6:21","nodeType":"YulIdentifier","src":"816:6:21"}],"functionName":{"name":"mstore","nativeSrc":"804:6:21","nodeType":"YulIdentifier","src":"804:6:21"},"nativeSrc":"804:19:21","nodeType":"YulFunctionCall","src":"804:19:21"},"nativeSrc":"804:19:21","nodeType":"YulExpressionStatement","src":"804:19:21"},{"nativeSrc":"832:29:21","nodeType":"YulAssignment","src":"832:29:21","value":{"arguments":[{"name":"pos","nativeSrc":"851:3:21","nodeType":"YulIdentifier","src":"851:3:21"},{"kind":"number","nativeSrc":"856:4:21","nodeType":"YulLiteral","src":"856:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"847:3:21","nodeType":"YulIdentifier","src":"847:3:21"},"nativeSrc":"847:14:21","nodeType":"YulFunctionCall","src":"847:14:21"},"variableNames":[{"name":"updated_pos","nativeSrc":"832:11:21","nodeType":"YulIdentifier","src":"832:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"698:169:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"766:3:21","nodeType":"YulTypedName","src":"766:3:21","type":""},{"name":"length","nativeSrc":"771:6:21","nodeType":"YulTypedName","src":"771:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"782:11:21","nodeType":"YulTypedName","src":"782:11:21","type":""}],"src":"698:169:21"},{"body":{"nativeSrc":"935:184:21","nodeType":"YulBlock","src":"935:184:21","statements":[{"nativeSrc":"945:10:21","nodeType":"YulVariableDeclaration","src":"945:10:21","value":{"kind":"number","nativeSrc":"954:1:21","nodeType":"YulLiteral","src":"954:1:21","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"949:1:21","nodeType":"YulTypedName","src":"949:1:21","type":""}]},{"body":{"nativeSrc":"1014:63:21","nodeType":"YulBlock","src":"1014:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1039:3:21","nodeType":"YulIdentifier","src":"1039:3:21"},{"name":"i","nativeSrc":"1044:1:21","nodeType":"YulIdentifier","src":"1044:1:21"}],"functionName":{"name":"add","nativeSrc":"1035:3:21","nodeType":"YulIdentifier","src":"1035:3:21"},"nativeSrc":"1035:11:21","nodeType":"YulFunctionCall","src":"1035:11:21"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"1058:3:21","nodeType":"YulIdentifier","src":"1058:3:21"},{"name":"i","nativeSrc":"1063:1:21","nodeType":"YulIdentifier","src":"1063:1:21"}],"functionName":{"name":"add","nativeSrc":"1054:3:21","nodeType":"YulIdentifier","src":"1054:3:21"},"nativeSrc":"1054:11:21","nodeType":"YulFunctionCall","src":"1054:11:21"}],"functionName":{"name":"mload","nativeSrc":"1048:5:21","nodeType":"YulIdentifier","src":"1048:5:21"},"nativeSrc":"1048:18:21","nodeType":"YulFunctionCall","src":"1048:18:21"}],"functionName":{"name":"mstore","nativeSrc":"1028:6:21","nodeType":"YulIdentifier","src":"1028:6:21"},"nativeSrc":"1028:39:21","nodeType":"YulFunctionCall","src":"1028:39:21"},"nativeSrc":"1028:39:21","nodeType":"YulExpressionStatement","src":"1028:39:21"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"975:1:21","nodeType":"YulIdentifier","src":"975:1:21"},{"name":"length","nativeSrc":"978:6:21","nodeType":"YulIdentifier","src":"978:6:21"}],"functionName":{"name":"lt","nativeSrc":"972:2:21","nodeType":"YulIdentifier","src":"972:2:21"},"nativeSrc":"972:13:21","nodeType":"YulFunctionCall","src":"972:13:21"},"nativeSrc":"964:113:21","nodeType":"YulForLoop","post":{"nativeSrc":"986:19:21","nodeType":"YulBlock","src":"986:19:21","statements":[{"nativeSrc":"988:15:21","nodeType":"YulAssignment","src":"988:15:21","value":{"arguments":[{"name":"i","nativeSrc":"997:1:21","nodeType":"YulIdentifier","src":"997:1:21"},{"kind":"number","nativeSrc":"1000:2:21","nodeType":"YulLiteral","src":"1000:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"993:3:21","nodeType":"YulIdentifier","src":"993:3:21"},"nativeSrc":"993:10:21","nodeType":"YulFunctionCall","src":"993:10:21"},"variableNames":[{"name":"i","nativeSrc":"988:1:21","nodeType":"YulIdentifier","src":"988:1:21"}]}]},"pre":{"nativeSrc":"968:3:21","nodeType":"YulBlock","src":"968:3:21","statements":[]},"src":"964:113:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1097:3:21","nodeType":"YulIdentifier","src":"1097:3:21"},{"name":"length","nativeSrc":"1102:6:21","nodeType":"YulIdentifier","src":"1102:6:21"}],"functionName":{"name":"add","nativeSrc":"1093:3:21","nodeType":"YulIdentifier","src":"1093:3:21"},"nativeSrc":"1093:16:21","nodeType":"YulFunctionCall","src":"1093:16:21"},{"kind":"number","nativeSrc":"1111:1:21","nodeType":"YulLiteral","src":"1111:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"1086:6:21","nodeType":"YulIdentifier","src":"1086:6:21"},"nativeSrc":"1086:27:21","nodeType":"YulFunctionCall","src":"1086:27:21"},"nativeSrc":"1086:27:21","nodeType":"YulExpressionStatement","src":"1086:27:21"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"873:246:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"917:3:21","nodeType":"YulTypedName","src":"917:3:21","type":""},{"name":"dst","nativeSrc":"922:3:21","nodeType":"YulTypedName","src":"922:3:21","type":""},{"name":"length","nativeSrc":"927:6:21","nodeType":"YulTypedName","src":"927:6:21","type":""}],"src":"873:246:21"},{"body":{"nativeSrc":"1173:54:21","nodeType":"YulBlock","src":"1173:54:21","statements":[{"nativeSrc":"1183:38:21","nodeType":"YulAssignment","src":"1183:38:21","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1201:5:21","nodeType":"YulIdentifier","src":"1201:5:21"},{"kind":"number","nativeSrc":"1208:2:21","nodeType":"YulLiteral","src":"1208:2:21","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1197:3:21","nodeType":"YulIdentifier","src":"1197:3:21"},"nativeSrc":"1197:14:21","nodeType":"YulFunctionCall","src":"1197:14:21"},{"arguments":[{"kind":"number","nativeSrc":"1217:2:21","nodeType":"YulLiteral","src":"1217:2:21","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1213:3:21","nodeType":"YulIdentifier","src":"1213:3:21"},"nativeSrc":"1213:7:21","nodeType":"YulFunctionCall","src":"1213:7:21"}],"functionName":{"name":"and","nativeSrc":"1193:3:21","nodeType":"YulIdentifier","src":"1193:3:21"},"nativeSrc":"1193:28:21","nodeType":"YulFunctionCall","src":"1193:28:21"},"variableNames":[{"name":"result","nativeSrc":"1183:6:21","nodeType":"YulIdentifier","src":"1183:6:21"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"1125:102:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1156:5:21","nodeType":"YulTypedName","src":"1156:5:21","type":""}],"returnVariables":[{"name":"result","nativeSrc":"1166:6:21","nodeType":"YulTypedName","src":"1166:6:21","type":""}],"src":"1125:102:21"},{"body":{"nativeSrc":"1325:285:21","nodeType":"YulBlock","src":"1325:285:21","statements":[{"nativeSrc":"1335:53:21","nodeType":"YulVariableDeclaration","src":"1335:53:21","value":{"arguments":[{"name":"value","nativeSrc":"1382:5:21","nodeType":"YulIdentifier","src":"1382:5:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"1349:32:21","nodeType":"YulIdentifier","src":"1349:32:21"},"nativeSrc":"1349:39:21","nodeType":"YulFunctionCall","src":"1349:39:21"},"variables":[{"name":"length","nativeSrc":"1339:6:21","nodeType":"YulTypedName","src":"1339:6:21","type":""}]},{"nativeSrc":"1397:78:21","nodeType":"YulAssignment","src":"1397:78:21","value":{"arguments":[{"name":"pos","nativeSrc":"1463:3:21","nodeType":"YulIdentifier","src":"1463:3:21"},{"name":"length","nativeSrc":"1468:6:21","nodeType":"YulIdentifier","src":"1468:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"1404:58:21","nodeType":"YulIdentifier","src":"1404:58:21"},"nativeSrc":"1404:71:21","nodeType":"YulFunctionCall","src":"1404:71:21"},"variableNames":[{"name":"pos","nativeSrc":"1397:3:21","nodeType":"YulIdentifier","src":"1397:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1523:5:21","nodeType":"YulIdentifier","src":"1523:5:21"},{"kind":"number","nativeSrc":"1530:4:21","nodeType":"YulLiteral","src":"1530:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1519:3:21","nodeType":"YulIdentifier","src":"1519:3:21"},"nativeSrc":"1519:16:21","nodeType":"YulFunctionCall","src":"1519:16:21"},{"name":"pos","nativeSrc":"1537:3:21","nodeType":"YulIdentifier","src":"1537:3:21"},{"name":"length","nativeSrc":"1542:6:21","nodeType":"YulIdentifier","src":"1542:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1484:34:21","nodeType":"YulIdentifier","src":"1484:34:21"},"nativeSrc":"1484:65:21","nodeType":"YulFunctionCall","src":"1484:65:21"},"nativeSrc":"1484:65:21","nodeType":"YulExpressionStatement","src":"1484:65:21"},{"nativeSrc":"1558:46:21","nodeType":"YulAssignment","src":"1558:46:21","value":{"arguments":[{"name":"pos","nativeSrc":"1569:3:21","nodeType":"YulIdentifier","src":"1569:3:21"},{"arguments":[{"name":"length","nativeSrc":"1596:6:21","nodeType":"YulIdentifier","src":"1596:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"1574:21:21","nodeType":"YulIdentifier","src":"1574:21:21"},"nativeSrc":"1574:29:21","nodeType":"YulFunctionCall","src":"1574:29:21"}],"functionName":{"name":"add","nativeSrc":"1565:3:21","nodeType":"YulIdentifier","src":"1565:3:21"},"nativeSrc":"1565:39:21","nodeType":"YulFunctionCall","src":"1565:39:21"},"variableNames":[{"name":"end","nativeSrc":"1558:3:21","nodeType":"YulIdentifier","src":"1558:3:21"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"1233:377:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1306:5:21","nodeType":"YulTypedName","src":"1306:5:21","type":""},{"name":"pos","nativeSrc":"1313:3:21","nodeType":"YulTypedName","src":"1313:3:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"1321:3:21","nodeType":"YulTypedName","src":"1321:3:21","type":""}],"src":"1233:377:21"},{"body":{"nativeSrc":"1734:195:21","nodeType":"YulBlock","src":"1734:195:21","statements":[{"nativeSrc":"1744:26:21","nodeType":"YulAssignment","src":"1744:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1756:9:21","nodeType":"YulIdentifier","src":"1756:9:21"},{"kind":"number","nativeSrc":"1767:2:21","nodeType":"YulLiteral","src":"1767:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1752:3:21","nodeType":"YulIdentifier","src":"1752:3:21"},"nativeSrc":"1752:18:21","nodeType":"YulFunctionCall","src":"1752:18:21"},"variableNames":[{"name":"tail","nativeSrc":"1744:4:21","nodeType":"YulIdentifier","src":"1744:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1791:9:21","nodeType":"YulIdentifier","src":"1791:9:21"},{"kind":"number","nativeSrc":"1802:1:21","nodeType":"YulLiteral","src":"1802:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1787:3:21","nodeType":"YulIdentifier","src":"1787:3:21"},"nativeSrc":"1787:17:21","nodeType":"YulFunctionCall","src":"1787:17:21"},{"arguments":[{"name":"tail","nativeSrc":"1810:4:21","nodeType":"YulIdentifier","src":"1810:4:21"},{"name":"headStart","nativeSrc":"1816:9:21","nodeType":"YulIdentifier","src":"1816:9:21"}],"functionName":{"name":"sub","nativeSrc":"1806:3:21","nodeType":"YulIdentifier","src":"1806:3:21"},"nativeSrc":"1806:20:21","nodeType":"YulFunctionCall","src":"1806:20:21"}],"functionName":{"name":"mstore","nativeSrc":"1780:6:21","nodeType":"YulIdentifier","src":"1780:6:21"},"nativeSrc":"1780:47:21","nodeType":"YulFunctionCall","src":"1780:47:21"},"nativeSrc":"1780:47:21","nodeType":"YulExpressionStatement","src":"1780:47:21"},{"nativeSrc":"1836:86:21","nodeType":"YulAssignment","src":"1836:86:21","value":{"arguments":[{"name":"value0","nativeSrc":"1908:6:21","nodeType":"YulIdentifier","src":"1908:6:21"},{"name":"tail","nativeSrc":"1917:4:21","nodeType":"YulIdentifier","src":"1917:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"1844:63:21","nodeType":"YulIdentifier","src":"1844:63:21"},"nativeSrc":"1844:78:21","nodeType":"YulFunctionCall","src":"1844:78:21"},"variableNames":[{"name":"tail","nativeSrc":"1836:4:21","nodeType":"YulIdentifier","src":"1836:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1616:313:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1706:9:21","nodeType":"YulTypedName","src":"1706:9:21","type":""},{"name":"value0","nativeSrc":"1718:6:21","nodeType":"YulTypedName","src":"1718:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1729:4:21","nodeType":"YulTypedName","src":"1729:4:21","type":""}],"src":"1616:313:21"},{"body":{"nativeSrc":"1975:35:21","nodeType":"YulBlock","src":"1975:35:21","statements":[{"nativeSrc":"1985:19:21","nodeType":"YulAssignment","src":"1985:19:21","value":{"arguments":[{"kind":"number","nativeSrc":"2001:2:21","nodeType":"YulLiteral","src":"2001:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1995:5:21","nodeType":"YulIdentifier","src":"1995:5:21"},"nativeSrc":"1995:9:21","nodeType":"YulFunctionCall","src":"1995:9:21"},"variableNames":[{"name":"memPtr","nativeSrc":"1985:6:21","nodeType":"YulIdentifier","src":"1985:6:21"}]}]},"name":"allocate_unbounded","nativeSrc":"1935:75:21","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"1968:6:21","nodeType":"YulTypedName","src":"1968:6:21","type":""}],"src":"1935:75:21"},{"body":{"nativeSrc":"2105:28:21","nodeType":"YulBlock","src":"2105:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2122:1:21","nodeType":"YulLiteral","src":"2122:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"2125:1:21","nodeType":"YulLiteral","src":"2125:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2115:6:21","nodeType":"YulIdentifier","src":"2115:6:21"},"nativeSrc":"2115:12:21","nodeType":"YulFunctionCall","src":"2115:12:21"},"nativeSrc":"2115:12:21","nodeType":"YulExpressionStatement","src":"2115:12:21"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2016:117:21","nodeType":"YulFunctionDefinition","src":"2016:117:21"},{"body":{"nativeSrc":"2228:28:21","nodeType":"YulBlock","src":"2228:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2245:1:21","nodeType":"YulLiteral","src":"2245:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"2248:1:21","nodeType":"YulLiteral","src":"2248:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2238:6:21","nodeType":"YulIdentifier","src":"2238:6:21"},"nativeSrc":"2238:12:21","nodeType":"YulFunctionCall","src":"2238:12:21"},"nativeSrc":"2238:12:21","nodeType":"YulExpressionStatement","src":"2238:12:21"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"2139:117:21","nodeType":"YulFunctionDefinition","src":"2139:117:21"},{"body":{"nativeSrc":"2305:79:21","nodeType":"YulBlock","src":"2305:79:21","statements":[{"body":{"nativeSrc":"2362:16:21","nodeType":"YulBlock","src":"2362:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2371:1:21","nodeType":"YulLiteral","src":"2371:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"2374:1:21","nodeType":"YulLiteral","src":"2374:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2364:6:21","nodeType":"YulIdentifier","src":"2364:6:21"},"nativeSrc":"2364:12:21","nodeType":"YulFunctionCall","src":"2364:12:21"},"nativeSrc":"2364:12:21","nodeType":"YulExpressionStatement","src":"2364:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2328:5:21","nodeType":"YulIdentifier","src":"2328:5:21"},{"arguments":[{"name":"value","nativeSrc":"2353:5:21","nodeType":"YulIdentifier","src":"2353:5:21"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"2335:17:21","nodeType":"YulIdentifier","src":"2335:17:21"},"nativeSrc":"2335:24:21","nodeType":"YulFunctionCall","src":"2335:24:21"}],"functionName":{"name":"eq","nativeSrc":"2325:2:21","nodeType":"YulIdentifier","src":"2325:2:21"},"nativeSrc":"2325:35:21","nodeType":"YulFunctionCall","src":"2325:35:21"}],"functionName":{"name":"iszero","nativeSrc":"2318:6:21","nodeType":"YulIdentifier","src":"2318:6:21"},"nativeSrc":"2318:43:21","nodeType":"YulFunctionCall","src":"2318:43:21"},"nativeSrc":"2315:63:21","nodeType":"YulIf","src":"2315:63:21"}]},"name":"validator_revert_t_address","nativeSrc":"2262:122:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2298:5:21","nodeType":"YulTypedName","src":"2298:5:21","type":""}],"src":"2262:122:21"},{"body":{"nativeSrc":"2442:87:21","nodeType":"YulBlock","src":"2442:87:21","statements":[{"nativeSrc":"2452:29:21","nodeType":"YulAssignment","src":"2452:29:21","value":{"arguments":[{"name":"offset","nativeSrc":"2474:6:21","nodeType":"YulIdentifier","src":"2474:6:21"}],"functionName":{"name":"calldataload","nativeSrc":"2461:12:21","nodeType":"YulIdentifier","src":"2461:12:21"},"nativeSrc":"2461:20:21","nodeType":"YulFunctionCall","src":"2461:20:21"},"variableNames":[{"name":"value","nativeSrc":"2452:5:21","nodeType":"YulIdentifier","src":"2452:5:21"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2517:5:21","nodeType":"YulIdentifier","src":"2517:5:21"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"2490:26:21","nodeType":"YulIdentifier","src":"2490:26:21"},"nativeSrc":"2490:33:21","nodeType":"YulFunctionCall","src":"2490:33:21"},"nativeSrc":"2490:33:21","nodeType":"YulExpressionStatement","src":"2490:33:21"}]},"name":"abi_decode_t_address","nativeSrc":"2390:139:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2420:6:21","nodeType":"YulTypedName","src":"2420:6:21","type":""},{"name":"end","nativeSrc":"2428:3:21","nodeType":"YulTypedName","src":"2428:3:21","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2436:5:21","nodeType":"YulTypedName","src":"2436:5:21","type":""}],"src":"2390:139:21"},{"body":{"nativeSrc":"2580:32:21","nodeType":"YulBlock","src":"2580:32:21","statements":[{"nativeSrc":"2590:16:21","nodeType":"YulAssignment","src":"2590:16:21","value":{"name":"value","nativeSrc":"2601:5:21","nodeType":"YulIdentifier","src":"2601:5:21"},"variableNames":[{"name":"cleaned","nativeSrc":"2590:7:21","nodeType":"YulIdentifier","src":"2590:7:21"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2535:77:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2562:5:21","nodeType":"YulTypedName","src":"2562:5:21","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2572:7:21","nodeType":"YulTypedName","src":"2572:7:21","type":""}],"src":"2535:77:21"},{"body":{"nativeSrc":"2661:79:21","nodeType":"YulBlock","src":"2661:79:21","statements":[{"body":{"nativeSrc":"2718:16:21","nodeType":"YulBlock","src":"2718:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2727:1:21","nodeType":"YulLiteral","src":"2727:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"2730:1:21","nodeType":"YulLiteral","src":"2730:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2720:6:21","nodeType":"YulIdentifier","src":"2720:6:21"},"nativeSrc":"2720:12:21","nodeType":"YulFunctionCall","src":"2720:12:21"},"nativeSrc":"2720:12:21","nodeType":"YulExpressionStatement","src":"2720:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2684:5:21","nodeType":"YulIdentifier","src":"2684:5:21"},{"arguments":[{"name":"value","nativeSrc":"2709:5:21","nodeType":"YulIdentifier","src":"2709:5:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2691:17:21","nodeType":"YulIdentifier","src":"2691:17:21"},"nativeSrc":"2691:24:21","nodeType":"YulFunctionCall","src":"2691:24:21"}],"functionName":{"name":"eq","nativeSrc":"2681:2:21","nodeType":"YulIdentifier","src":"2681:2:21"},"nativeSrc":"2681:35:21","nodeType":"YulFunctionCall","src":"2681:35:21"}],"functionName":{"name":"iszero","nativeSrc":"2674:6:21","nodeType":"YulIdentifier","src":"2674:6:21"},"nativeSrc":"2674:43:21","nodeType":"YulFunctionCall","src":"2674:43:21"},"nativeSrc":"2671:63:21","nodeType":"YulIf","src":"2671:63:21"}]},"name":"validator_revert_t_uint256","nativeSrc":"2618:122:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2654:5:21","nodeType":"YulTypedName","src":"2654:5:21","type":""}],"src":"2618:122:21"},{"body":{"nativeSrc":"2798:87:21","nodeType":"YulBlock","src":"2798:87:21","statements":[{"nativeSrc":"2808:29:21","nodeType":"YulAssignment","src":"2808:29:21","value":{"arguments":[{"name":"offset","nativeSrc":"2830:6:21","nodeType":"YulIdentifier","src":"2830:6:21"}],"functionName":{"name":"calldataload","nativeSrc":"2817:12:21","nodeType":"YulIdentifier","src":"2817:12:21"},"nativeSrc":"2817:20:21","nodeType":"YulFunctionCall","src":"2817:20:21"},"variableNames":[{"name":"value","nativeSrc":"2808:5:21","nodeType":"YulIdentifier","src":"2808:5:21"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2873:5:21","nodeType":"YulIdentifier","src":"2873:5:21"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"2846:26:21","nodeType":"YulIdentifier","src":"2846:26:21"},"nativeSrc":"2846:33:21","nodeType":"YulFunctionCall","src":"2846:33:21"},"nativeSrc":"2846:33:21","nodeType":"YulExpressionStatement","src":"2846:33:21"}]},"name":"abi_decode_t_uint256","nativeSrc":"2746:139:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2776:6:21","nodeType":"YulTypedName","src":"2776:6:21","type":""},{"name":"end","nativeSrc":"2784:3:21","nodeType":"YulTypedName","src":"2784:3:21","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2792:5:21","nodeType":"YulTypedName","src":"2792:5:21","type":""}],"src":"2746:139:21"},{"body":{"nativeSrc":"2974:391:21","nodeType":"YulBlock","src":"2974:391:21","statements":[{"body":{"nativeSrc":"3020:83:21","nodeType":"YulBlock","src":"3020:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3022:77:21","nodeType":"YulIdentifier","src":"3022:77:21"},"nativeSrc":"3022:79:21","nodeType":"YulFunctionCall","src":"3022:79:21"},"nativeSrc":"3022:79:21","nodeType":"YulExpressionStatement","src":"3022:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2995:7:21","nodeType":"YulIdentifier","src":"2995:7:21"},{"name":"headStart","nativeSrc":"3004:9:21","nodeType":"YulIdentifier","src":"3004:9:21"}],"functionName":{"name":"sub","nativeSrc":"2991:3:21","nodeType":"YulIdentifier","src":"2991:3:21"},"nativeSrc":"2991:23:21","nodeType":"YulFunctionCall","src":"2991:23:21"},{"kind":"number","nativeSrc":"3016:2:21","nodeType":"YulLiteral","src":"3016:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2987:3:21","nodeType":"YulIdentifier","src":"2987:3:21"},"nativeSrc":"2987:32:21","nodeType":"YulFunctionCall","src":"2987:32:21"},"nativeSrc":"2984:119:21","nodeType":"YulIf","src":"2984:119:21"},{"nativeSrc":"3113:117:21","nodeType":"YulBlock","src":"3113:117:21","statements":[{"nativeSrc":"3128:15:21","nodeType":"YulVariableDeclaration","src":"3128:15:21","value":{"kind":"number","nativeSrc":"3142:1:21","nodeType":"YulLiteral","src":"3142:1:21","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3132:6:21","nodeType":"YulTypedName","src":"3132:6:21","type":""}]},{"nativeSrc":"3157:63:21","nodeType":"YulAssignment","src":"3157:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3192:9:21","nodeType":"YulIdentifier","src":"3192:9:21"},{"name":"offset","nativeSrc":"3203:6:21","nodeType":"YulIdentifier","src":"3203:6:21"}],"functionName":{"name":"add","nativeSrc":"3188:3:21","nodeType":"YulIdentifier","src":"3188:3:21"},"nativeSrc":"3188:22:21","nodeType":"YulFunctionCall","src":"3188:22:21"},{"name":"dataEnd","nativeSrc":"3212:7:21","nodeType":"YulIdentifier","src":"3212:7:21"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"3167:20:21","nodeType":"YulIdentifier","src":"3167:20:21"},"nativeSrc":"3167:53:21","nodeType":"YulFunctionCall","src":"3167:53:21"},"variableNames":[{"name":"value0","nativeSrc":"3157:6:21","nodeType":"YulIdentifier","src":"3157:6:21"}]}]},{"nativeSrc":"3240:118:21","nodeType":"YulBlock","src":"3240:118:21","statements":[{"nativeSrc":"3255:16:21","nodeType":"YulVariableDeclaration","src":"3255:16:21","value":{"kind":"number","nativeSrc":"3269:2:21","nodeType":"YulLiteral","src":"3269:2:21","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"3259:6:21","nodeType":"YulTypedName","src":"3259:6:21","type":""}]},{"nativeSrc":"3285:63:21","nodeType":"YulAssignment","src":"3285:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3320:9:21","nodeType":"YulIdentifier","src":"3320:9:21"},{"name":"offset","nativeSrc":"3331:6:21","nodeType":"YulIdentifier","src":"3331:6:21"}],"functionName":{"name":"add","nativeSrc":"3316:3:21","nodeType":"YulIdentifier","src":"3316:3:21"},"nativeSrc":"3316:22:21","nodeType":"YulFunctionCall","src":"3316:22:21"},{"name":"dataEnd","nativeSrc":"3340:7:21","nodeType":"YulIdentifier","src":"3340:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"3295:20:21","nodeType":"YulIdentifier","src":"3295:20:21"},"nativeSrc":"3295:53:21","nodeType":"YulFunctionCall","src":"3295:53:21"},"variableNames":[{"name":"value1","nativeSrc":"3285:6:21","nodeType":"YulIdentifier","src":"3285:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"2891:474:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2936:9:21","nodeType":"YulTypedName","src":"2936:9:21","type":""},{"name":"dataEnd","nativeSrc":"2947:7:21","nodeType":"YulTypedName","src":"2947:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2959:6:21","nodeType":"YulTypedName","src":"2959:6:21","type":""},{"name":"value1","nativeSrc":"2967:6:21","nodeType":"YulTypedName","src":"2967:6:21","type":""}],"src":"2891:474:21"},{"body":{"nativeSrc":"3413:48:21","nodeType":"YulBlock","src":"3413:48:21","statements":[{"nativeSrc":"3423:32:21","nodeType":"YulAssignment","src":"3423:32:21","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3448:5:21","nodeType":"YulIdentifier","src":"3448:5:21"}],"functionName":{"name":"iszero","nativeSrc":"3441:6:21","nodeType":"YulIdentifier","src":"3441:6:21"},"nativeSrc":"3441:13:21","nodeType":"YulFunctionCall","src":"3441:13:21"}],"functionName":{"name":"iszero","nativeSrc":"3434:6:21","nodeType":"YulIdentifier","src":"3434:6:21"},"nativeSrc":"3434:21:21","nodeType":"YulFunctionCall","src":"3434:21:21"},"variableNames":[{"name":"cleaned","nativeSrc":"3423:7:21","nodeType":"YulIdentifier","src":"3423:7:21"}]}]},"name":"cleanup_t_bool","nativeSrc":"3371:90:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3395:5:21","nodeType":"YulTypedName","src":"3395:5:21","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3405:7:21","nodeType":"YulTypedName","src":"3405:7:21","type":""}],"src":"3371:90:21"},{"body":{"nativeSrc":"3526:50:21","nodeType":"YulBlock","src":"3526:50:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3543:3:21","nodeType":"YulIdentifier","src":"3543:3:21"},{"arguments":[{"name":"value","nativeSrc":"3563:5:21","nodeType":"YulIdentifier","src":"3563:5:21"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"3548:14:21","nodeType":"YulIdentifier","src":"3548:14:21"},"nativeSrc":"3548:21:21","nodeType":"YulFunctionCall","src":"3548:21:21"}],"functionName":{"name":"mstore","nativeSrc":"3536:6:21","nodeType":"YulIdentifier","src":"3536:6:21"},"nativeSrc":"3536:34:21","nodeType":"YulFunctionCall","src":"3536:34:21"},"nativeSrc":"3536:34:21","nodeType":"YulExpressionStatement","src":"3536:34:21"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3467:109:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3514:5:21","nodeType":"YulTypedName","src":"3514:5:21","type":""},{"name":"pos","nativeSrc":"3521:3:21","nodeType":"YulTypedName","src":"3521:3:21","type":""}],"src":"3467:109:21"},{"body":{"nativeSrc":"3674:118:21","nodeType":"YulBlock","src":"3674:118:21","statements":[{"nativeSrc":"3684:26:21","nodeType":"YulAssignment","src":"3684:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"3696:9:21","nodeType":"YulIdentifier","src":"3696:9:21"},{"kind":"number","nativeSrc":"3707:2:21","nodeType":"YulLiteral","src":"3707:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3692:3:21","nodeType":"YulIdentifier","src":"3692:3:21"},"nativeSrc":"3692:18:21","nodeType":"YulFunctionCall","src":"3692:18:21"},"variableNames":[{"name":"tail","nativeSrc":"3684:4:21","nodeType":"YulIdentifier","src":"3684:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3758:6:21","nodeType":"YulIdentifier","src":"3758:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"3771:9:21","nodeType":"YulIdentifier","src":"3771:9:21"},{"kind":"number","nativeSrc":"3782:1:21","nodeType":"YulLiteral","src":"3782:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3767:3:21","nodeType":"YulIdentifier","src":"3767:3:21"},"nativeSrc":"3767:17:21","nodeType":"YulFunctionCall","src":"3767:17:21"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3720:37:21","nodeType":"YulIdentifier","src":"3720:37:21"},"nativeSrc":"3720:65:21","nodeType":"YulFunctionCall","src":"3720:65:21"},"nativeSrc":"3720:65:21","nodeType":"YulExpressionStatement","src":"3720:65:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"3582:210:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3646:9:21","nodeType":"YulTypedName","src":"3646:9:21","type":""},{"name":"value0","nativeSrc":"3658:6:21","nodeType":"YulTypedName","src":"3658:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3669:4:21","nodeType":"YulTypedName","src":"3669:4:21","type":""}],"src":"3582:210:21"},{"body":{"nativeSrc":"3830:28:21","nodeType":"YulBlock","src":"3830:28:21","statements":[{"nativeSrc":"3840:12:21","nodeType":"YulAssignment","src":"3840:12:21","value":{"name":"value","nativeSrc":"3847:5:21","nodeType":"YulIdentifier","src":"3847:5:21"},"variableNames":[{"name":"ret","nativeSrc":"3840:3:21","nodeType":"YulIdentifier","src":"3840:3:21"}]}]},"name":"identity","nativeSrc":"3798:60:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3816:5:21","nodeType":"YulTypedName","src":"3816:5:21","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"3826:3:21","nodeType":"YulTypedName","src":"3826:3:21","type":""}],"src":"3798:60:21"},{"body":{"nativeSrc":"3924:82:21","nodeType":"YulBlock","src":"3924:82:21","statements":[{"nativeSrc":"3934:66:21","nodeType":"YulAssignment","src":"3934:66:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3992:5:21","nodeType":"YulIdentifier","src":"3992:5:21"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"3974:17:21","nodeType":"YulIdentifier","src":"3974:17:21"},"nativeSrc":"3974:24:21","nodeType":"YulFunctionCall","src":"3974:24:21"}],"functionName":{"name":"identity","nativeSrc":"3965:8:21","nodeType":"YulIdentifier","src":"3965:8:21"},"nativeSrc":"3965:34:21","nodeType":"YulFunctionCall","src":"3965:34:21"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"3947:17:21","nodeType":"YulIdentifier","src":"3947:17:21"},"nativeSrc":"3947:53:21","nodeType":"YulFunctionCall","src":"3947:53:21"},"variableNames":[{"name":"converted","nativeSrc":"3934:9:21","nodeType":"YulIdentifier","src":"3934:9:21"}]}]},"name":"convert_t_uint160_to_t_uint160","nativeSrc":"3864:142:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3904:5:21","nodeType":"YulTypedName","src":"3904:5:21","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"3914:9:21","nodeType":"YulTypedName","src":"3914:9:21","type":""}],"src":"3864:142:21"},{"body":{"nativeSrc":"4072:66:21","nodeType":"YulBlock","src":"4072:66:21","statements":[{"nativeSrc":"4082:50:21","nodeType":"YulAssignment","src":"4082:50:21","value":{"arguments":[{"name":"value","nativeSrc":"4126:5:21","nodeType":"YulIdentifier","src":"4126:5:21"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nativeSrc":"4095:30:21","nodeType":"YulIdentifier","src":"4095:30:21"},"nativeSrc":"4095:37:21","nodeType":"YulFunctionCall","src":"4095:37:21"},"variableNames":[{"name":"converted","nativeSrc":"4082:9:21","nodeType":"YulIdentifier","src":"4082:9:21"}]}]},"name":"convert_t_uint160_to_t_address","nativeSrc":"4012:126:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4052:5:21","nodeType":"YulTypedName","src":"4052:5:21","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"4062:9:21","nodeType":"YulTypedName","src":"4062:9:21","type":""}],"src":"4012:126:21"},{"body":{"nativeSrc":"4224:66:21","nodeType":"YulBlock","src":"4224:66:21","statements":[{"nativeSrc":"4234:50:21","nodeType":"YulAssignment","src":"4234:50:21","value":{"arguments":[{"name":"value","nativeSrc":"4278:5:21","nodeType":"YulIdentifier","src":"4278:5:21"}],"functionName":{"name":"convert_t_uint160_to_t_address","nativeSrc":"4247:30:21","nodeType":"YulIdentifier","src":"4247:30:21"},"nativeSrc":"4247:37:21","nodeType":"YulFunctionCall","src":"4247:37:21"},"variableNames":[{"name":"converted","nativeSrc":"4234:9:21","nodeType":"YulIdentifier","src":"4234:9:21"}]}]},"name":"convert_t_contract$_ITaxHandler_$4670_to_t_address","nativeSrc":"4144:146:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4204:5:21","nodeType":"YulTypedName","src":"4204:5:21","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"4214:9:21","nodeType":"YulTypedName","src":"4214:9:21","type":""}],"src":"4144:146:21"},{"body":{"nativeSrc":"4381:86:21","nodeType":"YulBlock","src":"4381:86:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4398:3:21","nodeType":"YulIdentifier","src":"4398:3:21"},{"arguments":[{"name":"value","nativeSrc":"4454:5:21","nodeType":"YulIdentifier","src":"4454:5:21"}],"functionName":{"name":"convert_t_contract$_ITaxHandler_$4670_to_t_address","nativeSrc":"4403:50:21","nodeType":"YulIdentifier","src":"4403:50:21"},"nativeSrc":"4403:57:21","nodeType":"YulFunctionCall","src":"4403:57:21"}],"functionName":{"name":"mstore","nativeSrc":"4391:6:21","nodeType":"YulIdentifier","src":"4391:6:21"},"nativeSrc":"4391:70:21","nodeType":"YulFunctionCall","src":"4391:70:21"},"nativeSrc":"4391:70:21","nodeType":"YulExpressionStatement","src":"4391:70:21"}]},"name":"abi_encode_t_contract$_ITaxHandler_$4670_to_t_address_fromStack","nativeSrc":"4296:171:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4369:5:21","nodeType":"YulTypedName","src":"4369:5:21","type":""},{"name":"pos","nativeSrc":"4376:3:21","nodeType":"YulTypedName","src":"4376:3:21","type":""}],"src":"4296:171:21"},{"body":{"nativeSrc":"4591:144:21","nodeType":"YulBlock","src":"4591:144:21","statements":[{"nativeSrc":"4601:26:21","nodeType":"YulAssignment","src":"4601:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"4613:9:21","nodeType":"YulIdentifier","src":"4613:9:21"},{"kind":"number","nativeSrc":"4624:2:21","nodeType":"YulLiteral","src":"4624:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4609:3:21","nodeType":"YulIdentifier","src":"4609:3:21"},"nativeSrc":"4609:18:21","nodeType":"YulFunctionCall","src":"4609:18:21"},"variableNames":[{"name":"tail","nativeSrc":"4601:4:21","nodeType":"YulIdentifier","src":"4601:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4701:6:21","nodeType":"YulIdentifier","src":"4701:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"4714:9:21","nodeType":"YulIdentifier","src":"4714:9:21"},{"kind":"number","nativeSrc":"4725:1:21","nodeType":"YulLiteral","src":"4725:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4710:3:21","nodeType":"YulIdentifier","src":"4710:3:21"},"nativeSrc":"4710:17:21","nodeType":"YulFunctionCall","src":"4710:17:21"}],"functionName":{"name":"abi_encode_t_contract$_ITaxHandler_$4670_to_t_address_fromStack","nativeSrc":"4637:63:21","nodeType":"YulIdentifier","src":"4637:63:21"},"nativeSrc":"4637:91:21","nodeType":"YulFunctionCall","src":"4637:91:21"},"nativeSrc":"4637:91:21","nodeType":"YulExpressionStatement","src":"4637:91:21"}]},"name":"abi_encode_tuple_t_contract$_ITaxHandler_$4670__to_t_address__fromStack_reversed","nativeSrc":"4473:262:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4563:9:21","nodeType":"YulTypedName","src":"4563:9:21","type":""},{"name":"value0","nativeSrc":"4575:6:21","nodeType":"YulTypedName","src":"4575:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4586:4:21","nodeType":"YulTypedName","src":"4586:4:21","type":""}],"src":"4473:262:21"},{"body":{"nativeSrc":"4806:53:21","nodeType":"YulBlock","src":"4806:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4823:3:21","nodeType":"YulIdentifier","src":"4823:3:21"},{"arguments":[{"name":"value","nativeSrc":"4846:5:21","nodeType":"YulIdentifier","src":"4846:5:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"4828:17:21","nodeType":"YulIdentifier","src":"4828:17:21"},"nativeSrc":"4828:24:21","nodeType":"YulFunctionCall","src":"4828:24:21"}],"functionName":{"name":"mstore","nativeSrc":"4816:6:21","nodeType":"YulIdentifier","src":"4816:6:21"},"nativeSrc":"4816:37:21","nodeType":"YulFunctionCall","src":"4816:37:21"},"nativeSrc":"4816:37:21","nodeType":"YulExpressionStatement","src":"4816:37:21"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"4741:118:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4794:5:21","nodeType":"YulTypedName","src":"4794:5:21","type":""},{"name":"pos","nativeSrc":"4801:3:21","nodeType":"YulTypedName","src":"4801:3:21","type":""}],"src":"4741:118:21"},{"body":{"nativeSrc":"4963:124:21","nodeType":"YulBlock","src":"4963:124:21","statements":[{"nativeSrc":"4973:26:21","nodeType":"YulAssignment","src":"4973:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"4985:9:21","nodeType":"YulIdentifier","src":"4985:9:21"},{"kind":"number","nativeSrc":"4996:2:21","nodeType":"YulLiteral","src":"4996:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4981:3:21","nodeType":"YulIdentifier","src":"4981:3:21"},"nativeSrc":"4981:18:21","nodeType":"YulFunctionCall","src":"4981:18:21"},"variableNames":[{"name":"tail","nativeSrc":"4973:4:21","nodeType":"YulIdentifier","src":"4973:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5053:6:21","nodeType":"YulIdentifier","src":"5053:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"5066:9:21","nodeType":"YulIdentifier","src":"5066:9:21"},{"kind":"number","nativeSrc":"5077:1:21","nodeType":"YulLiteral","src":"5077:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5062:3:21","nodeType":"YulIdentifier","src":"5062:3:21"},"nativeSrc":"5062:17:21","nodeType":"YulFunctionCall","src":"5062:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"5009:43:21","nodeType":"YulIdentifier","src":"5009:43:21"},"nativeSrc":"5009:71:21","nodeType":"YulFunctionCall","src":"5009:71:21"},"nativeSrc":"5009:71:21","nodeType":"YulExpressionStatement","src":"5009:71:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"4865:222:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4935:9:21","nodeType":"YulTypedName","src":"4935:9:21","type":""},{"name":"value0","nativeSrc":"4947:6:21","nodeType":"YulTypedName","src":"4947:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4958:4:21","nodeType":"YulTypedName","src":"4958:4:21","type":""}],"src":"4865:222:21"},{"body":{"nativeSrc":"5193:519:21","nodeType":"YulBlock","src":"5193:519:21","statements":[{"body":{"nativeSrc":"5239:83:21","nodeType":"YulBlock","src":"5239:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5241:77:21","nodeType":"YulIdentifier","src":"5241:77:21"},"nativeSrc":"5241:79:21","nodeType":"YulFunctionCall","src":"5241:79:21"},"nativeSrc":"5241:79:21","nodeType":"YulExpressionStatement","src":"5241:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5214:7:21","nodeType":"YulIdentifier","src":"5214:7:21"},{"name":"headStart","nativeSrc":"5223:9:21","nodeType":"YulIdentifier","src":"5223:9:21"}],"functionName":{"name":"sub","nativeSrc":"5210:3:21","nodeType":"YulIdentifier","src":"5210:3:21"},"nativeSrc":"5210:23:21","nodeType":"YulFunctionCall","src":"5210:23:21"},{"kind":"number","nativeSrc":"5235:2:21","nodeType":"YulLiteral","src":"5235:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"5206:3:21","nodeType":"YulIdentifier","src":"5206:3:21"},"nativeSrc":"5206:32:21","nodeType":"YulFunctionCall","src":"5206:32:21"},"nativeSrc":"5203:119:21","nodeType":"YulIf","src":"5203:119:21"},{"nativeSrc":"5332:117:21","nodeType":"YulBlock","src":"5332:117:21","statements":[{"nativeSrc":"5347:15:21","nodeType":"YulVariableDeclaration","src":"5347:15:21","value":{"kind":"number","nativeSrc":"5361:1:21","nodeType":"YulLiteral","src":"5361:1:21","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5351:6:21","nodeType":"YulTypedName","src":"5351:6:21","type":""}]},{"nativeSrc":"5376:63:21","nodeType":"YulAssignment","src":"5376:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5411:9:21","nodeType":"YulIdentifier","src":"5411:9:21"},{"name":"offset","nativeSrc":"5422:6:21","nodeType":"YulIdentifier","src":"5422:6:21"}],"functionName":{"name":"add","nativeSrc":"5407:3:21","nodeType":"YulIdentifier","src":"5407:3:21"},"nativeSrc":"5407:22:21","nodeType":"YulFunctionCall","src":"5407:22:21"},{"name":"dataEnd","nativeSrc":"5431:7:21","nodeType":"YulIdentifier","src":"5431:7:21"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5386:20:21","nodeType":"YulIdentifier","src":"5386:20:21"},"nativeSrc":"5386:53:21","nodeType":"YulFunctionCall","src":"5386:53:21"},"variableNames":[{"name":"value0","nativeSrc":"5376:6:21","nodeType":"YulIdentifier","src":"5376:6:21"}]}]},{"nativeSrc":"5459:118:21","nodeType":"YulBlock","src":"5459:118:21","statements":[{"nativeSrc":"5474:16:21","nodeType":"YulVariableDeclaration","src":"5474:16:21","value":{"kind":"number","nativeSrc":"5488:2:21","nodeType":"YulLiteral","src":"5488:2:21","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"5478:6:21","nodeType":"YulTypedName","src":"5478:6:21","type":""}]},{"nativeSrc":"5504:63:21","nodeType":"YulAssignment","src":"5504:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5539:9:21","nodeType":"YulIdentifier","src":"5539:9:21"},{"name":"offset","nativeSrc":"5550:6:21","nodeType":"YulIdentifier","src":"5550:6:21"}],"functionName":{"name":"add","nativeSrc":"5535:3:21","nodeType":"YulIdentifier","src":"5535:3:21"},"nativeSrc":"5535:22:21","nodeType":"YulFunctionCall","src":"5535:22:21"},{"name":"dataEnd","nativeSrc":"5559:7:21","nodeType":"YulIdentifier","src":"5559:7:21"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5514:20:21","nodeType":"YulIdentifier","src":"5514:20:21"},"nativeSrc":"5514:53:21","nodeType":"YulFunctionCall","src":"5514:53:21"},"variableNames":[{"name":"value1","nativeSrc":"5504:6:21","nodeType":"YulIdentifier","src":"5504:6:21"}]}]},{"nativeSrc":"5587:118:21","nodeType":"YulBlock","src":"5587:118:21","statements":[{"nativeSrc":"5602:16:21","nodeType":"YulVariableDeclaration","src":"5602:16:21","value":{"kind":"number","nativeSrc":"5616:2:21","nodeType":"YulLiteral","src":"5616:2:21","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"5606:6:21","nodeType":"YulTypedName","src":"5606:6:21","type":""}]},{"nativeSrc":"5632:63:21","nodeType":"YulAssignment","src":"5632:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5667:9:21","nodeType":"YulIdentifier","src":"5667:9:21"},{"name":"offset","nativeSrc":"5678:6:21","nodeType":"YulIdentifier","src":"5678:6:21"}],"functionName":{"name":"add","nativeSrc":"5663:3:21","nodeType":"YulIdentifier","src":"5663:3:21"},"nativeSrc":"5663:22:21","nodeType":"YulFunctionCall","src":"5663:22:21"},{"name":"dataEnd","nativeSrc":"5687:7:21","nodeType":"YulIdentifier","src":"5687:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"5642:20:21","nodeType":"YulIdentifier","src":"5642:20:21"},"nativeSrc":"5642:53:21","nodeType":"YulFunctionCall","src":"5642:53:21"},"variableNames":[{"name":"value2","nativeSrc":"5632:6:21","nodeType":"YulIdentifier","src":"5632:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"5093:619:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5147:9:21","nodeType":"YulTypedName","src":"5147:9:21","type":""},{"name":"dataEnd","nativeSrc":"5158:7:21","nodeType":"YulTypedName","src":"5158:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5170:6:21","nodeType":"YulTypedName","src":"5170:6:21","type":""},{"name":"value1","nativeSrc":"5178:6:21","nodeType":"YulTypedName","src":"5178:6:21","type":""},{"name":"value2","nativeSrc":"5186:6:21","nodeType":"YulTypedName","src":"5186:6:21","type":""}],"src":"5093:619:21"},{"body":{"nativeSrc":"5761:43:21","nodeType":"YulBlock","src":"5761:43:21","statements":[{"nativeSrc":"5771:27:21","nodeType":"YulAssignment","src":"5771:27:21","value":{"arguments":[{"name":"value","nativeSrc":"5786:5:21","nodeType":"YulIdentifier","src":"5786:5:21"},{"kind":"number","nativeSrc":"5793:4:21","nodeType":"YulLiteral","src":"5793:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"5782:3:21","nodeType":"YulIdentifier","src":"5782:3:21"},"nativeSrc":"5782:16:21","nodeType":"YulFunctionCall","src":"5782:16:21"},"variableNames":[{"name":"cleaned","nativeSrc":"5771:7:21","nodeType":"YulIdentifier","src":"5771:7:21"}]}]},"name":"cleanup_t_uint8","nativeSrc":"5718:86:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5743:5:21","nodeType":"YulTypedName","src":"5743:5:21","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5753:7:21","nodeType":"YulTypedName","src":"5753:7:21","type":""}],"src":"5718:86:21"},{"body":{"nativeSrc":"5871:51:21","nodeType":"YulBlock","src":"5871:51:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5888:3:21","nodeType":"YulIdentifier","src":"5888:3:21"},{"arguments":[{"name":"value","nativeSrc":"5909:5:21","nodeType":"YulIdentifier","src":"5909:5:21"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"5893:15:21","nodeType":"YulIdentifier","src":"5893:15:21"},"nativeSrc":"5893:22:21","nodeType":"YulFunctionCall","src":"5893:22:21"}],"functionName":{"name":"mstore","nativeSrc":"5881:6:21","nodeType":"YulIdentifier","src":"5881:6:21"},"nativeSrc":"5881:35:21","nodeType":"YulFunctionCall","src":"5881:35:21"},"nativeSrc":"5881:35:21","nodeType":"YulExpressionStatement","src":"5881:35:21"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"5810:112:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5859:5:21","nodeType":"YulTypedName","src":"5859:5:21","type":""},{"name":"pos","nativeSrc":"5866:3:21","nodeType":"YulTypedName","src":"5866:3:21","type":""}],"src":"5810:112:21"},{"body":{"nativeSrc":"6022:120:21","nodeType":"YulBlock","src":"6022:120:21","statements":[{"nativeSrc":"6032:26:21","nodeType":"YulAssignment","src":"6032:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"6044:9:21","nodeType":"YulIdentifier","src":"6044:9:21"},{"kind":"number","nativeSrc":"6055:2:21","nodeType":"YulLiteral","src":"6055:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6040:3:21","nodeType":"YulIdentifier","src":"6040:3:21"},"nativeSrc":"6040:18:21","nodeType":"YulFunctionCall","src":"6040:18:21"},"variableNames":[{"name":"tail","nativeSrc":"6032:4:21","nodeType":"YulIdentifier","src":"6032:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6108:6:21","nodeType":"YulIdentifier","src":"6108:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"6121:9:21","nodeType":"YulIdentifier","src":"6121:9:21"},{"kind":"number","nativeSrc":"6132:1:21","nodeType":"YulLiteral","src":"6132:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6117:3:21","nodeType":"YulIdentifier","src":"6117:3:21"},"nativeSrc":"6117:17:21","nodeType":"YulFunctionCall","src":"6117:17:21"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"6068:39:21","nodeType":"YulIdentifier","src":"6068:39:21"},"nativeSrc":"6068:67:21","nodeType":"YulFunctionCall","src":"6068:67:21"},"nativeSrc":"6068:67:21","nodeType":"YulExpressionStatement","src":"6068:67:21"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"5928:214:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5994:9:21","nodeType":"YulTypedName","src":"5994:9:21","type":""},{"name":"value0","nativeSrc":"6006:6:21","nodeType":"YulTypedName","src":"6006:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6017:4:21","nodeType":"YulTypedName","src":"6017:4:21","type":""}],"src":"5928:214:21"},{"body":{"nativeSrc":"6193:32:21","nodeType":"YulBlock","src":"6193:32:21","statements":[{"nativeSrc":"6203:16:21","nodeType":"YulAssignment","src":"6203:16:21","value":{"name":"value","nativeSrc":"6214:5:21","nodeType":"YulIdentifier","src":"6214:5:21"},"variableNames":[{"name":"cleaned","nativeSrc":"6203:7:21","nodeType":"YulIdentifier","src":"6203:7:21"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"6148:77:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6175:5:21","nodeType":"YulTypedName","src":"6175:5:21","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"6185:7:21","nodeType":"YulTypedName","src":"6185:7:21","type":""}],"src":"6148:77:21"},{"body":{"nativeSrc":"6296:53:21","nodeType":"YulBlock","src":"6296:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6313:3:21","nodeType":"YulIdentifier","src":"6313:3:21"},{"arguments":[{"name":"value","nativeSrc":"6336:5:21","nodeType":"YulIdentifier","src":"6336:5:21"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"6318:17:21","nodeType":"YulIdentifier","src":"6318:17:21"},"nativeSrc":"6318:24:21","nodeType":"YulFunctionCall","src":"6318:24:21"}],"functionName":{"name":"mstore","nativeSrc":"6306:6:21","nodeType":"YulIdentifier","src":"6306:6:21"},"nativeSrc":"6306:37:21","nodeType":"YulFunctionCall","src":"6306:37:21"},"nativeSrc":"6306:37:21","nodeType":"YulExpressionStatement","src":"6306:37:21"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"6231:118:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6284:5:21","nodeType":"YulTypedName","src":"6284:5:21","type":""},{"name":"pos","nativeSrc":"6291:3:21","nodeType":"YulTypedName","src":"6291:3:21","type":""}],"src":"6231:118:21"},{"body":{"nativeSrc":"6453:124:21","nodeType":"YulBlock","src":"6453:124:21","statements":[{"nativeSrc":"6463:26:21","nodeType":"YulAssignment","src":"6463:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"6475:9:21","nodeType":"YulIdentifier","src":"6475:9:21"},{"kind":"number","nativeSrc":"6486:2:21","nodeType":"YulLiteral","src":"6486:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6471:3:21","nodeType":"YulIdentifier","src":"6471:3:21"},"nativeSrc":"6471:18:21","nodeType":"YulFunctionCall","src":"6471:18:21"},"variableNames":[{"name":"tail","nativeSrc":"6463:4:21","nodeType":"YulIdentifier","src":"6463:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6543:6:21","nodeType":"YulIdentifier","src":"6543:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"6556:9:21","nodeType":"YulIdentifier","src":"6556:9:21"},{"kind":"number","nativeSrc":"6567:1:21","nodeType":"YulLiteral","src":"6567:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6552:3:21","nodeType":"YulIdentifier","src":"6552:3:21"},"nativeSrc":"6552:17:21","nodeType":"YulFunctionCall","src":"6552:17:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"6499:43:21","nodeType":"YulIdentifier","src":"6499:43:21"},"nativeSrc":"6499:71:21","nodeType":"YulFunctionCall","src":"6499:71:21"},"nativeSrc":"6499:71:21","nodeType":"YulExpressionStatement","src":"6499:71:21"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"6355:222:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6425:9:21","nodeType":"YulTypedName","src":"6425:9:21","type":""},{"name":"value0","nativeSrc":"6437:6:21","nodeType":"YulTypedName","src":"6437:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6448:4:21","nodeType":"YulTypedName","src":"6448:4:21","type":""}],"src":"6355:222:21"},{"body":{"nativeSrc":"6649:263:21","nodeType":"YulBlock","src":"6649:263:21","statements":[{"body":{"nativeSrc":"6695:83:21","nodeType":"YulBlock","src":"6695:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"6697:77:21","nodeType":"YulIdentifier","src":"6697:77:21"},"nativeSrc":"6697:79:21","nodeType":"YulFunctionCall","src":"6697:79:21"},"nativeSrc":"6697:79:21","nodeType":"YulExpressionStatement","src":"6697:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6670:7:21","nodeType":"YulIdentifier","src":"6670:7:21"},{"name":"headStart","nativeSrc":"6679:9:21","nodeType":"YulIdentifier","src":"6679:9:21"}],"functionName":{"name":"sub","nativeSrc":"6666:3:21","nodeType":"YulIdentifier","src":"6666:3:21"},"nativeSrc":"6666:23:21","nodeType":"YulFunctionCall","src":"6666:23:21"},{"kind":"number","nativeSrc":"6691:2:21","nodeType":"YulLiteral","src":"6691:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"6662:3:21","nodeType":"YulIdentifier","src":"6662:3:21"},"nativeSrc":"6662:32:21","nodeType":"YulFunctionCall","src":"6662:32:21"},"nativeSrc":"6659:119:21","nodeType":"YulIf","src":"6659:119:21"},{"nativeSrc":"6788:117:21","nodeType":"YulBlock","src":"6788:117:21","statements":[{"nativeSrc":"6803:15:21","nodeType":"YulVariableDeclaration","src":"6803:15:21","value":{"kind":"number","nativeSrc":"6817:1:21","nodeType":"YulLiteral","src":"6817:1:21","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"6807:6:21","nodeType":"YulTypedName","src":"6807:6:21","type":""}]},{"nativeSrc":"6832:63:21","nodeType":"YulAssignment","src":"6832:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6867:9:21","nodeType":"YulIdentifier","src":"6867:9:21"},{"name":"offset","nativeSrc":"6878:6:21","nodeType":"YulIdentifier","src":"6878:6:21"}],"functionName":{"name":"add","nativeSrc":"6863:3:21","nodeType":"YulIdentifier","src":"6863:3:21"},"nativeSrc":"6863:22:21","nodeType":"YulFunctionCall","src":"6863:22:21"},{"name":"dataEnd","nativeSrc":"6887:7:21","nodeType":"YulIdentifier","src":"6887:7:21"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"6842:20:21","nodeType":"YulIdentifier","src":"6842:20:21"},"nativeSrc":"6842:53:21","nodeType":"YulFunctionCall","src":"6842:53:21"},"variableNames":[{"name":"value0","nativeSrc":"6832:6:21","nodeType":"YulIdentifier","src":"6832:6:21"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"6583:329:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6619:9:21","nodeType":"YulTypedName","src":"6619:9:21","type":""},{"name":"dataEnd","nativeSrc":"6630:7:21","nodeType":"YulTypedName","src":"6630:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6642:6:21","nodeType":"YulTypedName","src":"6642:6:21","type":""}],"src":"6583:329:21"},{"body":{"nativeSrc":"6962:105:21","nodeType":"YulBlock","src":"6962:105:21","statements":[{"nativeSrc":"6972:89:21","nodeType":"YulAssignment","src":"6972:89:21","value":{"arguments":[{"name":"value","nativeSrc":"6987:5:21","nodeType":"YulIdentifier","src":"6987:5:21"},{"kind":"number","nativeSrc":"6994:66:21","nodeType":"YulLiteral","src":"6994:66:21","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"6983:3:21","nodeType":"YulIdentifier","src":"6983:3:21"},"nativeSrc":"6983:78:21","nodeType":"YulFunctionCall","src":"6983:78:21"},"variableNames":[{"name":"cleaned","nativeSrc":"6972:7:21","nodeType":"YulIdentifier","src":"6972:7:21"}]}]},"name":"cleanup_t_bytes1","nativeSrc":"6918:149:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6944:5:21","nodeType":"YulTypedName","src":"6944:5:21","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"6954:7:21","nodeType":"YulTypedName","src":"6954:7:21","type":""}],"src":"6918:149:21"},{"body":{"nativeSrc":"7136:52:21","nodeType":"YulBlock","src":"7136:52:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"7153:3:21","nodeType":"YulIdentifier","src":"7153:3:21"},{"arguments":[{"name":"value","nativeSrc":"7175:5:21","nodeType":"YulIdentifier","src":"7175:5:21"}],"functionName":{"name":"cleanup_t_bytes1","nativeSrc":"7158:16:21","nodeType":"YulIdentifier","src":"7158:16:21"},"nativeSrc":"7158:23:21","nodeType":"YulFunctionCall","src":"7158:23:21"}],"functionName":{"name":"mstore","nativeSrc":"7146:6:21","nodeType":"YulIdentifier","src":"7146:6:21"},"nativeSrc":"7146:36:21","nodeType":"YulFunctionCall","src":"7146:36:21"},"nativeSrc":"7146:36:21","nodeType":"YulExpressionStatement","src":"7146:36:21"}]},"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nativeSrc":"7073:115:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7124:5:21","nodeType":"YulTypedName","src":"7124:5:21","type":""},{"name":"pos","nativeSrc":"7131:3:21","nodeType":"YulTypedName","src":"7131:3:21","type":""}],"src":"7073:115:21"},{"body":{"nativeSrc":"7268:40:21","nodeType":"YulBlock","src":"7268:40:21","statements":[{"nativeSrc":"7279:22:21","nodeType":"YulAssignment","src":"7279:22:21","value":{"arguments":[{"name":"value","nativeSrc":"7295:5:21","nodeType":"YulIdentifier","src":"7295:5:21"}],"functionName":{"name":"mload","nativeSrc":"7289:5:21","nodeType":"YulIdentifier","src":"7289:5:21"},"nativeSrc":"7289:12:21","nodeType":"YulFunctionCall","src":"7289:12:21"},"variableNames":[{"name":"length","nativeSrc":"7279:6:21","nodeType":"YulIdentifier","src":"7279:6:21"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7194:114:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7251:5:21","nodeType":"YulTypedName","src":"7251:5:21","type":""}],"returnVariables":[{"name":"length","nativeSrc":"7261:6:21","nodeType":"YulTypedName","src":"7261:6:21","type":""}],"src":"7194:114:21"},{"body":{"nativeSrc":"7425:73:21","nodeType":"YulBlock","src":"7425:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"7442:3:21","nodeType":"YulIdentifier","src":"7442:3:21"},{"name":"length","nativeSrc":"7447:6:21","nodeType":"YulIdentifier","src":"7447:6:21"}],"functionName":{"name":"mstore","nativeSrc":"7435:6:21","nodeType":"YulIdentifier","src":"7435:6:21"},"nativeSrc":"7435:19:21","nodeType":"YulFunctionCall","src":"7435:19:21"},"nativeSrc":"7435:19:21","nodeType":"YulExpressionStatement","src":"7435:19:21"},{"nativeSrc":"7463:29:21","nodeType":"YulAssignment","src":"7463:29:21","value":{"arguments":[{"name":"pos","nativeSrc":"7482:3:21","nodeType":"YulIdentifier","src":"7482:3:21"},{"kind":"number","nativeSrc":"7487:4:21","nodeType":"YulLiteral","src":"7487:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7478:3:21","nodeType":"YulIdentifier","src":"7478:3:21"},"nativeSrc":"7478:14:21","nodeType":"YulFunctionCall","src":"7478:14:21"},"variableNames":[{"name":"updated_pos","nativeSrc":"7463:11:21","nodeType":"YulIdentifier","src":"7463:11:21"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"7314:184:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"7397:3:21","nodeType":"YulTypedName","src":"7397:3:21","type":""},{"name":"length","nativeSrc":"7402:6:21","nodeType":"YulTypedName","src":"7402:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"7413:11:21","nodeType":"YulTypedName","src":"7413:11:21","type":""}],"src":"7314:184:21"},{"body":{"nativeSrc":"7576:60:21","nodeType":"YulBlock","src":"7576:60:21","statements":[{"nativeSrc":"7586:11:21","nodeType":"YulAssignment","src":"7586:11:21","value":{"name":"ptr","nativeSrc":"7594:3:21","nodeType":"YulIdentifier","src":"7594:3:21"},"variableNames":[{"name":"data","nativeSrc":"7586:4:21","nodeType":"YulIdentifier","src":"7586:4:21"}]},{"nativeSrc":"7607:22:21","nodeType":"YulAssignment","src":"7607:22:21","value":{"arguments":[{"name":"ptr","nativeSrc":"7619:3:21","nodeType":"YulIdentifier","src":"7619:3:21"},{"kind":"number","nativeSrc":"7624:4:21","nodeType":"YulLiteral","src":"7624:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7615:3:21","nodeType":"YulIdentifier","src":"7615:3:21"},"nativeSrc":"7615:14:21","nodeType":"YulFunctionCall","src":"7615:14:21"},"variableNames":[{"name":"data","nativeSrc":"7607:4:21","nodeType":"YulIdentifier","src":"7607:4:21"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7504:132:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"7563:3:21","nodeType":"YulTypedName","src":"7563:3:21","type":""}],"returnVariables":[{"name":"data","nativeSrc":"7571:4:21","nodeType":"YulTypedName","src":"7571:4:21","type":""}],"src":"7504:132:21"},{"body":{"nativeSrc":"7697:53:21","nodeType":"YulBlock","src":"7697:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"7714:3:21","nodeType":"YulIdentifier","src":"7714:3:21"},{"arguments":[{"name":"value","nativeSrc":"7737:5:21","nodeType":"YulIdentifier","src":"7737:5:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7719:17:21","nodeType":"YulIdentifier","src":"7719:17:21"},"nativeSrc":"7719:24:21","nodeType":"YulFunctionCall","src":"7719:24:21"}],"functionName":{"name":"mstore","nativeSrc":"7707:6:21","nodeType":"YulIdentifier","src":"7707:6:21"},"nativeSrc":"7707:37:21","nodeType":"YulFunctionCall","src":"7707:37:21"},"nativeSrc":"7707:37:21","nodeType":"YulExpressionStatement","src":"7707:37:21"}]},"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"7642:108:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7685:5:21","nodeType":"YulTypedName","src":"7685:5:21","type":""},{"name":"pos","nativeSrc":"7692:3:21","nodeType":"YulTypedName","src":"7692:3:21","type":""}],"src":"7642:108:21"},{"body":{"nativeSrc":"7836:99:21","nodeType":"YulBlock","src":"7836:99:21","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"7880:6:21","nodeType":"YulIdentifier","src":"7880:6:21"},{"name":"pos","nativeSrc":"7888:3:21","nodeType":"YulIdentifier","src":"7888:3:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"7846:33:21","nodeType":"YulIdentifier","src":"7846:33:21"},"nativeSrc":"7846:46:21","nodeType":"YulFunctionCall","src":"7846:46:21"},"nativeSrc":"7846:46:21","nodeType":"YulExpressionStatement","src":"7846:46:21"},{"nativeSrc":"7901:28:21","nodeType":"YulAssignment","src":"7901:28:21","value":{"arguments":[{"name":"pos","nativeSrc":"7919:3:21","nodeType":"YulIdentifier","src":"7919:3:21"},{"kind":"number","nativeSrc":"7924:4:21","nodeType":"YulLiteral","src":"7924:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7915:3:21","nodeType":"YulIdentifier","src":"7915:3:21"},"nativeSrc":"7915:14:21","nodeType":"YulFunctionCall","src":"7915:14:21"},"variableNames":[{"name":"updatedPos","nativeSrc":"7901:10:21","nodeType":"YulIdentifier","src":"7901:10:21"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"7756:179:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nativeSrc":"7809:6:21","nodeType":"YulTypedName","src":"7809:6:21","type":""},{"name":"pos","nativeSrc":"7817:3:21","nodeType":"YulTypedName","src":"7817:3:21","type":""}],"returnVariables":[{"name":"updatedPos","nativeSrc":"7825:10:21","nodeType":"YulTypedName","src":"7825:10:21","type":""}],"src":"7756:179:21"},{"body":{"nativeSrc":"8016:38:21","nodeType":"YulBlock","src":"8016:38:21","statements":[{"nativeSrc":"8026:22:21","nodeType":"YulAssignment","src":"8026:22:21","value":{"arguments":[{"name":"ptr","nativeSrc":"8038:3:21","nodeType":"YulIdentifier","src":"8038:3:21"},{"kind":"number","nativeSrc":"8043:4:21","nodeType":"YulLiteral","src":"8043:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8034:3:21","nodeType":"YulIdentifier","src":"8034:3:21"},"nativeSrc":"8034:14:21","nodeType":"YulFunctionCall","src":"8034:14:21"},"variableNames":[{"name":"next","nativeSrc":"8026:4:21","nodeType":"YulIdentifier","src":"8026:4:21"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7941:113:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"8003:3:21","nodeType":"YulTypedName","src":"8003:3:21","type":""}],"returnVariables":[{"name":"next","nativeSrc":"8011:4:21","nodeType":"YulTypedName","src":"8011:4:21","type":""}],"src":"7941:113:21"},{"body":{"nativeSrc":"8214:608:21","nodeType":"YulBlock","src":"8214:608:21","statements":[{"nativeSrc":"8224:68:21","nodeType":"YulVariableDeclaration","src":"8224:68:21","value":{"arguments":[{"name":"value","nativeSrc":"8286:5:21","nodeType":"YulIdentifier","src":"8286:5:21"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"8238:47:21","nodeType":"YulIdentifier","src":"8238:47:21"},"nativeSrc":"8238:54:21","nodeType":"YulFunctionCall","src":"8238:54:21"},"variables":[{"name":"length","nativeSrc":"8228:6:21","nodeType":"YulTypedName","src":"8228:6:21","type":""}]},{"nativeSrc":"8301:93:21","nodeType":"YulAssignment","src":"8301:93:21","value":{"arguments":[{"name":"pos","nativeSrc":"8382:3:21","nodeType":"YulIdentifier","src":"8382:3:21"},{"name":"length","nativeSrc":"8387:6:21","nodeType":"YulIdentifier","src":"8387:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"8308:73:21","nodeType":"YulIdentifier","src":"8308:73:21"},"nativeSrc":"8308:86:21","nodeType":"YulFunctionCall","src":"8308:86:21"},"variableNames":[{"name":"pos","nativeSrc":"8301:3:21","nodeType":"YulIdentifier","src":"8301:3:21"}]},{"nativeSrc":"8403:71:21","nodeType":"YulVariableDeclaration","src":"8403:71:21","value":{"arguments":[{"name":"value","nativeSrc":"8468:5:21","nodeType":"YulIdentifier","src":"8468:5:21"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"8418:49:21","nodeType":"YulIdentifier","src":"8418:49:21"},"nativeSrc":"8418:56:21","nodeType":"YulFunctionCall","src":"8418:56:21"},"variables":[{"name":"baseRef","nativeSrc":"8407:7:21","nodeType":"YulTypedName","src":"8407:7:21","type":""}]},{"nativeSrc":"8483:21:21","nodeType":"YulVariableDeclaration","src":"8483:21:21","value":{"name":"baseRef","nativeSrc":"8497:7:21","nodeType":"YulIdentifier","src":"8497:7:21"},"variables":[{"name":"srcPtr","nativeSrc":"8487:6:21","nodeType":"YulTypedName","src":"8487:6:21","type":""}]},{"body":{"nativeSrc":"8573:224:21","nodeType":"YulBlock","src":"8573:224:21","statements":[{"nativeSrc":"8587:34:21","nodeType":"YulVariableDeclaration","src":"8587:34:21","value":{"arguments":[{"name":"srcPtr","nativeSrc":"8614:6:21","nodeType":"YulIdentifier","src":"8614:6:21"}],"functionName":{"name":"mload","nativeSrc":"8608:5:21","nodeType":"YulIdentifier","src":"8608:5:21"},"nativeSrc":"8608:13:21","nodeType":"YulFunctionCall","src":"8608:13:21"},"variables":[{"name":"elementValue0","nativeSrc":"8591:13:21","nodeType":"YulTypedName","src":"8591:13:21","type":""}]},{"nativeSrc":"8634:70:21","nodeType":"YulAssignment","src":"8634:70:21","value":{"arguments":[{"name":"elementValue0","nativeSrc":"8685:13:21","nodeType":"YulIdentifier","src":"8685:13:21"},{"name":"pos","nativeSrc":"8700:3:21","nodeType":"YulIdentifier","src":"8700:3:21"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"8641:43:21","nodeType":"YulIdentifier","src":"8641:43:21"},"nativeSrc":"8641:63:21","nodeType":"YulFunctionCall","src":"8641:63:21"},"variableNames":[{"name":"pos","nativeSrc":"8634:3:21","nodeType":"YulIdentifier","src":"8634:3:21"}]},{"nativeSrc":"8717:70:21","nodeType":"YulAssignment","src":"8717:70:21","value":{"arguments":[{"name":"srcPtr","nativeSrc":"8780:6:21","nodeType":"YulIdentifier","src":"8780:6:21"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"8727:52:21","nodeType":"YulIdentifier","src":"8727:52:21"},"nativeSrc":"8727:60:21","nodeType":"YulFunctionCall","src":"8727:60:21"},"variableNames":[{"name":"srcPtr","nativeSrc":"8717:6:21","nodeType":"YulIdentifier","src":"8717:6:21"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"8535:1:21","nodeType":"YulIdentifier","src":"8535:1:21"},{"name":"length","nativeSrc":"8538:6:21","nodeType":"YulIdentifier","src":"8538:6:21"}],"functionName":{"name":"lt","nativeSrc":"8532:2:21","nodeType":"YulIdentifier","src":"8532:2:21"},"nativeSrc":"8532:13:21","nodeType":"YulFunctionCall","src":"8532:13:21"},"nativeSrc":"8513:284:21","nodeType":"YulForLoop","post":{"nativeSrc":"8546:18:21","nodeType":"YulBlock","src":"8546:18:21","statements":[{"nativeSrc":"8548:14:21","nodeType":"YulAssignment","src":"8548:14:21","value":{"arguments":[{"name":"i","nativeSrc":"8557:1:21","nodeType":"YulIdentifier","src":"8557:1:21"},{"kind":"number","nativeSrc":"8560:1:21","nodeType":"YulLiteral","src":"8560:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"8553:3:21","nodeType":"YulIdentifier","src":"8553:3:21"},"nativeSrc":"8553:9:21","nodeType":"YulFunctionCall","src":"8553:9:21"},"variableNames":[{"name":"i","nativeSrc":"8548:1:21","nodeType":"YulIdentifier","src":"8548:1:21"}]}]},"pre":{"nativeSrc":"8517:14:21","nodeType":"YulBlock","src":"8517:14:21","statements":[{"nativeSrc":"8519:10:21","nodeType":"YulVariableDeclaration","src":"8519:10:21","value":{"kind":"number","nativeSrc":"8528:1:21","nodeType":"YulLiteral","src":"8528:1:21","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"8523:1:21","nodeType":"YulTypedName","src":"8523:1:21","type":""}]}]},"src":"8513:284:21"},{"nativeSrc":"8806:10:21","nodeType":"YulAssignment","src":"8806:10:21","value":{"name":"pos","nativeSrc":"8813:3:21","nodeType":"YulIdentifier","src":"8813:3:21"},"variableNames":[{"name":"end","nativeSrc":"8806:3:21","nodeType":"YulIdentifier","src":"8806:3:21"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"8090:732:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8193:5:21","nodeType":"YulTypedName","src":"8193:5:21","type":""},{"name":"pos","nativeSrc":"8200:3:21","nodeType":"YulTypedName","src":"8200:3:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"8209:3:21","nodeType":"YulTypedName","src":"8209:3:21","type":""}],"src":"8090:732:21"},{"body":{"nativeSrc":"9182:861:21","nodeType":"YulBlock","src":"9182:861:21","statements":[{"nativeSrc":"9192:27:21","nodeType":"YulAssignment","src":"9192:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"9204:9:21","nodeType":"YulIdentifier","src":"9204:9:21"},{"kind":"number","nativeSrc":"9215:3:21","nodeType":"YulLiteral","src":"9215:3:21","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"9200:3:21","nodeType":"YulIdentifier","src":"9200:3:21"},"nativeSrc":"9200:19:21","nodeType":"YulFunctionCall","src":"9200:19:21"},"variableNames":[{"name":"tail","nativeSrc":"9192:4:21","nodeType":"YulIdentifier","src":"9192:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9271:6:21","nodeType":"YulIdentifier","src":"9271:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"9284:9:21","nodeType":"YulIdentifier","src":"9284:9:21"},{"kind":"number","nativeSrc":"9295:1:21","nodeType":"YulLiteral","src":"9295:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9280:3:21","nodeType":"YulIdentifier","src":"9280:3:21"},"nativeSrc":"9280:17:21","nodeType":"YulFunctionCall","src":"9280:17:21"}],"functionName":{"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nativeSrc":"9229:41:21","nodeType":"YulIdentifier","src":"9229:41:21"},"nativeSrc":"9229:69:21","nodeType":"YulFunctionCall","src":"9229:69:21"},"nativeSrc":"9229:69:21","nodeType":"YulExpressionStatement","src":"9229:69:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9319:9:21","nodeType":"YulIdentifier","src":"9319:9:21"},{"kind":"number","nativeSrc":"9330:2:21","nodeType":"YulLiteral","src":"9330:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9315:3:21","nodeType":"YulIdentifier","src":"9315:3:21"},"nativeSrc":"9315:18:21","nodeType":"YulFunctionCall","src":"9315:18:21"},{"arguments":[{"name":"tail","nativeSrc":"9339:4:21","nodeType":"YulIdentifier","src":"9339:4:21"},{"name":"headStart","nativeSrc":"9345:9:21","nodeType":"YulIdentifier","src":"9345:9:21"}],"functionName":{"name":"sub","nativeSrc":"9335:3:21","nodeType":"YulIdentifier","src":"9335:3:21"},"nativeSrc":"9335:20:21","nodeType":"YulFunctionCall","src":"9335:20:21"}],"functionName":{"name":"mstore","nativeSrc":"9308:6:21","nodeType":"YulIdentifier","src":"9308:6:21"},"nativeSrc":"9308:48:21","nodeType":"YulFunctionCall","src":"9308:48:21"},"nativeSrc":"9308:48:21","nodeType":"YulExpressionStatement","src":"9308:48:21"},{"nativeSrc":"9365:86:21","nodeType":"YulAssignment","src":"9365:86:21","value":{"arguments":[{"name":"value1","nativeSrc":"9437:6:21","nodeType":"YulIdentifier","src":"9437:6:21"},{"name":"tail","nativeSrc":"9446:4:21","nodeType":"YulIdentifier","src":"9446:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"9373:63:21","nodeType":"YulIdentifier","src":"9373:63:21"},"nativeSrc":"9373:78:21","nodeType":"YulFunctionCall","src":"9373:78:21"},"variableNames":[{"name":"tail","nativeSrc":"9365:4:21","nodeType":"YulIdentifier","src":"9365:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9472:9:21","nodeType":"YulIdentifier","src":"9472:9:21"},{"kind":"number","nativeSrc":"9483:2:21","nodeType":"YulLiteral","src":"9483:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9468:3:21","nodeType":"YulIdentifier","src":"9468:3:21"},"nativeSrc":"9468:18:21","nodeType":"YulFunctionCall","src":"9468:18:21"},{"arguments":[{"name":"tail","nativeSrc":"9492:4:21","nodeType":"YulIdentifier","src":"9492:4:21"},{"name":"headStart","nativeSrc":"9498:9:21","nodeType":"YulIdentifier","src":"9498:9:21"}],"functionName":{"name":"sub","nativeSrc":"9488:3:21","nodeType":"YulIdentifier","src":"9488:3:21"},"nativeSrc":"9488:20:21","nodeType":"YulFunctionCall","src":"9488:20:21"}],"functionName":{"name":"mstore","nativeSrc":"9461:6:21","nodeType":"YulIdentifier","src":"9461:6:21"},"nativeSrc":"9461:48:21","nodeType":"YulFunctionCall","src":"9461:48:21"},"nativeSrc":"9461:48:21","nodeType":"YulExpressionStatement","src":"9461:48:21"},{"nativeSrc":"9518:86:21","nodeType":"YulAssignment","src":"9518:86:21","value":{"arguments":[{"name":"value2","nativeSrc":"9590:6:21","nodeType":"YulIdentifier","src":"9590:6:21"},{"name":"tail","nativeSrc":"9599:4:21","nodeType":"YulIdentifier","src":"9599:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"9526:63:21","nodeType":"YulIdentifier","src":"9526:63:21"},"nativeSrc":"9526:78:21","nodeType":"YulFunctionCall","src":"9526:78:21"},"variableNames":[{"name":"tail","nativeSrc":"9518:4:21","nodeType":"YulIdentifier","src":"9518:4:21"}]},{"expression":{"arguments":[{"name":"value3","nativeSrc":"9658:6:21","nodeType":"YulIdentifier","src":"9658:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"9671:9:21","nodeType":"YulIdentifier","src":"9671:9:21"},{"kind":"number","nativeSrc":"9682:2:21","nodeType":"YulLiteral","src":"9682:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9667:3:21","nodeType":"YulIdentifier","src":"9667:3:21"},"nativeSrc":"9667:18:21","nodeType":"YulFunctionCall","src":"9667:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"9614:43:21","nodeType":"YulIdentifier","src":"9614:43:21"},"nativeSrc":"9614:72:21","nodeType":"YulFunctionCall","src":"9614:72:21"},"nativeSrc":"9614:72:21","nodeType":"YulExpressionStatement","src":"9614:72:21"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"9740:6:21","nodeType":"YulIdentifier","src":"9740:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"9753:9:21","nodeType":"YulIdentifier","src":"9753:9:21"},{"kind":"number","nativeSrc":"9764:3:21","nodeType":"YulLiteral","src":"9764:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"9749:3:21","nodeType":"YulIdentifier","src":"9749:3:21"},"nativeSrc":"9749:19:21","nodeType":"YulFunctionCall","src":"9749:19:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9696:43:21","nodeType":"YulIdentifier","src":"9696:43:21"},"nativeSrc":"9696:73:21","nodeType":"YulFunctionCall","src":"9696:73:21"},"nativeSrc":"9696:73:21","nodeType":"YulExpressionStatement","src":"9696:73:21"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"9823:6:21","nodeType":"YulIdentifier","src":"9823:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"9836:9:21","nodeType":"YulIdentifier","src":"9836:9:21"},{"kind":"number","nativeSrc":"9847:3:21","nodeType":"YulLiteral","src":"9847:3:21","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"9832:3:21","nodeType":"YulIdentifier","src":"9832:3:21"},"nativeSrc":"9832:19:21","nodeType":"YulFunctionCall","src":"9832:19:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"9779:43:21","nodeType":"YulIdentifier","src":"9779:43:21"},"nativeSrc":"9779:73:21","nodeType":"YulFunctionCall","src":"9779:73:21"},"nativeSrc":"9779:73:21","nodeType":"YulExpressionStatement","src":"9779:73:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9873:9:21","nodeType":"YulIdentifier","src":"9873:9:21"},{"kind":"number","nativeSrc":"9884:3:21","nodeType":"YulLiteral","src":"9884:3:21","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"9869:3:21","nodeType":"YulIdentifier","src":"9869:3:21"},"nativeSrc":"9869:19:21","nodeType":"YulFunctionCall","src":"9869:19:21"},{"arguments":[{"name":"tail","nativeSrc":"9894:4:21","nodeType":"YulIdentifier","src":"9894:4:21"},{"name":"headStart","nativeSrc":"9900:9:21","nodeType":"YulIdentifier","src":"9900:9:21"}],"functionName":{"name":"sub","nativeSrc":"9890:3:21","nodeType":"YulIdentifier","src":"9890:3:21"},"nativeSrc":"9890:20:21","nodeType":"YulFunctionCall","src":"9890:20:21"}],"functionName":{"name":"mstore","nativeSrc":"9862:6:21","nodeType":"YulIdentifier","src":"9862:6:21"},"nativeSrc":"9862:49:21","nodeType":"YulFunctionCall","src":"9862:49:21"},"nativeSrc":"9862:49:21","nodeType":"YulExpressionStatement","src":"9862:49:21"},{"nativeSrc":"9920:116:21","nodeType":"YulAssignment","src":"9920:116:21","value":{"arguments":[{"name":"value6","nativeSrc":"10022:6:21","nodeType":"YulIdentifier","src":"10022:6:21"},{"name":"tail","nativeSrc":"10031:4:21","nodeType":"YulIdentifier","src":"10031:4:21"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"9928:93:21","nodeType":"YulIdentifier","src":"9928:93:21"},"nativeSrc":"9928:108:21","nodeType":"YulFunctionCall","src":"9928:108:21"},"variableNames":[{"name":"tail","nativeSrc":"9920:4:21","nodeType":"YulIdentifier","src":"9920:4:21"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"8828:1215:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9106:9:21","nodeType":"YulTypedName","src":"9106:9:21","type":""},{"name":"value6","nativeSrc":"9118:6:21","nodeType":"YulTypedName","src":"9118:6:21","type":""},{"name":"value5","nativeSrc":"9126:6:21","nodeType":"YulTypedName","src":"9126:6:21","type":""},{"name":"value4","nativeSrc":"9134:6:21","nodeType":"YulTypedName","src":"9134:6:21","type":""},{"name":"value3","nativeSrc":"9142:6:21","nodeType":"YulTypedName","src":"9142:6:21","type":""},{"name":"value2","nativeSrc":"9150:6:21","nodeType":"YulTypedName","src":"9150:6:21","type":""},{"name":"value1","nativeSrc":"9158:6:21","nodeType":"YulTypedName","src":"9158:6:21","type":""},{"name":"value0","nativeSrc":"9166:6:21","nodeType":"YulTypedName","src":"9166:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9177:4:21","nodeType":"YulTypedName","src":"9177:4:21","type":""}],"src":"8828:1215:21"},{"body":{"nativeSrc":"10138:28:21","nodeType":"YulBlock","src":"10138:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10155:1:21","nodeType":"YulLiteral","src":"10155:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"10158:1:21","nodeType":"YulLiteral","src":"10158:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10148:6:21","nodeType":"YulIdentifier","src":"10148:6:21"},"nativeSrc":"10148:12:21","nodeType":"YulFunctionCall","src":"10148:12:21"},"nativeSrc":"10148:12:21","nodeType":"YulExpressionStatement","src":"10148:12:21"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"10049:117:21","nodeType":"YulFunctionDefinition","src":"10049:117:21"},{"body":{"nativeSrc":"10261:28:21","nodeType":"YulBlock","src":"10261:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10278:1:21","nodeType":"YulLiteral","src":"10278:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"10281:1:21","nodeType":"YulLiteral","src":"10281:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10271:6:21","nodeType":"YulIdentifier","src":"10271:6:21"},"nativeSrc":"10271:12:21","nodeType":"YulFunctionCall","src":"10271:12:21"},"nativeSrc":"10271:12:21","nodeType":"YulExpressionStatement","src":"10271:12:21"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"10172:117:21","nodeType":"YulFunctionDefinition","src":"10172:117:21"},{"body":{"nativeSrc":"10384:28:21","nodeType":"YulBlock","src":"10384:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10401:1:21","nodeType":"YulLiteral","src":"10401:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"10404:1:21","nodeType":"YulLiteral","src":"10404:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10394:6:21","nodeType":"YulIdentifier","src":"10394:6:21"},"nativeSrc":"10394:12:21","nodeType":"YulFunctionCall","src":"10394:12:21"},"nativeSrc":"10394:12:21","nodeType":"YulExpressionStatement","src":"10394:12:21"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"10295:117:21","nodeType":"YulFunctionDefinition","src":"10295:117:21"},{"body":{"nativeSrc":"10525:478:21","nodeType":"YulBlock","src":"10525:478:21","statements":[{"body":{"nativeSrc":"10574:83:21","nodeType":"YulBlock","src":"10574:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"10576:77:21","nodeType":"YulIdentifier","src":"10576:77:21"},"nativeSrc":"10576:79:21","nodeType":"YulFunctionCall","src":"10576:79:21"},"nativeSrc":"10576:79:21","nodeType":"YulExpressionStatement","src":"10576:79:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"10553:6:21","nodeType":"YulIdentifier","src":"10553:6:21"},{"kind":"number","nativeSrc":"10561:4:21","nodeType":"YulLiteral","src":"10561:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"10549:3:21","nodeType":"YulIdentifier","src":"10549:3:21"},"nativeSrc":"10549:17:21","nodeType":"YulFunctionCall","src":"10549:17:21"},{"name":"end","nativeSrc":"10568:3:21","nodeType":"YulIdentifier","src":"10568:3:21"}],"functionName":{"name":"slt","nativeSrc":"10545:3:21","nodeType":"YulIdentifier","src":"10545:3:21"},"nativeSrc":"10545:27:21","nodeType":"YulFunctionCall","src":"10545:27:21"}],"functionName":{"name":"iszero","nativeSrc":"10538:6:21","nodeType":"YulIdentifier","src":"10538:6:21"},"nativeSrc":"10538:35:21","nodeType":"YulFunctionCall","src":"10538:35:21"},"nativeSrc":"10535:122:21","nodeType":"YulIf","src":"10535:122:21"},{"nativeSrc":"10666:30:21","nodeType":"YulAssignment","src":"10666:30:21","value":{"arguments":[{"name":"offset","nativeSrc":"10689:6:21","nodeType":"YulIdentifier","src":"10689:6:21"}],"functionName":{"name":"calldataload","nativeSrc":"10676:12:21","nodeType":"YulIdentifier","src":"10676:12:21"},"nativeSrc":"10676:20:21","nodeType":"YulFunctionCall","src":"10676:20:21"},"variableNames":[{"name":"length","nativeSrc":"10666:6:21","nodeType":"YulIdentifier","src":"10666:6:21"}]},{"body":{"nativeSrc":"10739:83:21","nodeType":"YulBlock","src":"10739:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"10741:77:21","nodeType":"YulIdentifier","src":"10741:77:21"},"nativeSrc":"10741:79:21","nodeType":"YulFunctionCall","src":"10741:79:21"},"nativeSrc":"10741:79:21","nodeType":"YulExpressionStatement","src":"10741:79:21"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"10711:6:21","nodeType":"YulIdentifier","src":"10711:6:21"},{"kind":"number","nativeSrc":"10719:18:21","nodeType":"YulLiteral","src":"10719:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"10708:2:21","nodeType":"YulIdentifier","src":"10708:2:21"},"nativeSrc":"10708:30:21","nodeType":"YulFunctionCall","src":"10708:30:21"},"nativeSrc":"10705:117:21","nodeType":"YulIf","src":"10705:117:21"},{"nativeSrc":"10831:29:21","nodeType":"YulAssignment","src":"10831:29:21","value":{"arguments":[{"name":"offset","nativeSrc":"10847:6:21","nodeType":"YulIdentifier","src":"10847:6:21"},{"kind":"number","nativeSrc":"10855:4:21","nodeType":"YulLiteral","src":"10855:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10843:3:21","nodeType":"YulIdentifier","src":"10843:3:21"},"nativeSrc":"10843:17:21","nodeType":"YulFunctionCall","src":"10843:17:21"},"variableNames":[{"name":"arrayPos","nativeSrc":"10831:8:21","nodeType":"YulIdentifier","src":"10831:8:21"}]},{"body":{"nativeSrc":"10914:83:21","nodeType":"YulBlock","src":"10914:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"10916:77:21","nodeType":"YulIdentifier","src":"10916:77:21"},"nativeSrc":"10916:79:21","nodeType":"YulFunctionCall","src":"10916:79:21"},"nativeSrc":"10916:79:21","nodeType":"YulExpressionStatement","src":"10916:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nativeSrc":"10879:8:21","nodeType":"YulIdentifier","src":"10879:8:21"},{"arguments":[{"name":"length","nativeSrc":"10893:6:21","nodeType":"YulIdentifier","src":"10893:6:21"},{"kind":"number","nativeSrc":"10901:4:21","nodeType":"YulLiteral","src":"10901:4:21","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"10889:3:21","nodeType":"YulIdentifier","src":"10889:3:21"},"nativeSrc":"10889:17:21","nodeType":"YulFunctionCall","src":"10889:17:21"}],"functionName":{"name":"add","nativeSrc":"10875:3:21","nodeType":"YulIdentifier","src":"10875:3:21"},"nativeSrc":"10875:32:21","nodeType":"YulFunctionCall","src":"10875:32:21"},{"name":"end","nativeSrc":"10909:3:21","nodeType":"YulIdentifier","src":"10909:3:21"}],"functionName":{"name":"gt","nativeSrc":"10872:2:21","nodeType":"YulIdentifier","src":"10872:2:21"},"nativeSrc":"10872:41:21","nodeType":"YulFunctionCall","src":"10872:41:21"},"nativeSrc":"10869:128:21","nodeType":"YulIf","src":"10869:128:21"}]},"name":"abi_decode_t_array$_t_address_$dyn_calldata_ptr","nativeSrc":"10435:568:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"10492:6:21","nodeType":"YulTypedName","src":"10492:6:21","type":""},{"name":"end","nativeSrc":"10500:3:21","nodeType":"YulTypedName","src":"10500:3:21","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"10508:8:21","nodeType":"YulTypedName","src":"10508:8:21","type":""},{"name":"length","nativeSrc":"10518:6:21","nodeType":"YulTypedName","src":"10518:6:21","type":""}],"src":"10435:568:21"},{"body":{"nativeSrc":"11110:458:21","nodeType":"YulBlock","src":"11110:458:21","statements":[{"body":{"nativeSrc":"11156:83:21","nodeType":"YulBlock","src":"11156:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"11158:77:21","nodeType":"YulIdentifier","src":"11158:77:21"},"nativeSrc":"11158:79:21","nodeType":"YulFunctionCall","src":"11158:79:21"},"nativeSrc":"11158:79:21","nodeType":"YulExpressionStatement","src":"11158:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"11131:7:21","nodeType":"YulIdentifier","src":"11131:7:21"},{"name":"headStart","nativeSrc":"11140:9:21","nodeType":"YulIdentifier","src":"11140:9:21"}],"functionName":{"name":"sub","nativeSrc":"11127:3:21","nodeType":"YulIdentifier","src":"11127:3:21"},"nativeSrc":"11127:23:21","nodeType":"YulFunctionCall","src":"11127:23:21"},{"kind":"number","nativeSrc":"11152:2:21","nodeType":"YulLiteral","src":"11152:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"11123:3:21","nodeType":"YulIdentifier","src":"11123:3:21"},"nativeSrc":"11123:32:21","nodeType":"YulFunctionCall","src":"11123:32:21"},"nativeSrc":"11120:119:21","nodeType":"YulIf","src":"11120:119:21"},{"nativeSrc":"11249:312:21","nodeType":"YulBlock","src":"11249:312:21","statements":[{"nativeSrc":"11264:45:21","nodeType":"YulVariableDeclaration","src":"11264:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11295:9:21","nodeType":"YulIdentifier","src":"11295:9:21"},{"kind":"number","nativeSrc":"11306:1:21","nodeType":"YulLiteral","src":"11306:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11291:3:21","nodeType":"YulIdentifier","src":"11291:3:21"},"nativeSrc":"11291:17:21","nodeType":"YulFunctionCall","src":"11291:17:21"}],"functionName":{"name":"calldataload","nativeSrc":"11278:12:21","nodeType":"YulIdentifier","src":"11278:12:21"},"nativeSrc":"11278:31:21","nodeType":"YulFunctionCall","src":"11278:31:21"},"variables":[{"name":"offset","nativeSrc":"11268:6:21","nodeType":"YulTypedName","src":"11268:6:21","type":""}]},{"body":{"nativeSrc":"11356:83:21","nodeType":"YulBlock","src":"11356:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"11358:77:21","nodeType":"YulIdentifier","src":"11358:77:21"},"nativeSrc":"11358:79:21","nodeType":"YulFunctionCall","src":"11358:79:21"},"nativeSrc":"11358:79:21","nodeType":"YulExpressionStatement","src":"11358:79:21"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"11328:6:21","nodeType":"YulIdentifier","src":"11328:6:21"},{"kind":"number","nativeSrc":"11336:18:21","nodeType":"YulLiteral","src":"11336:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"11325:2:21","nodeType":"YulIdentifier","src":"11325:2:21"},"nativeSrc":"11325:30:21","nodeType":"YulFunctionCall","src":"11325:30:21"},"nativeSrc":"11322:117:21","nodeType":"YulIf","src":"11322:117:21"},{"nativeSrc":"11453:98:21","nodeType":"YulAssignment","src":"11453:98:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11523:9:21","nodeType":"YulIdentifier","src":"11523:9:21"},{"name":"offset","nativeSrc":"11534:6:21","nodeType":"YulIdentifier","src":"11534:6:21"}],"functionName":{"name":"add","nativeSrc":"11519:3:21","nodeType":"YulIdentifier","src":"11519:3:21"},"nativeSrc":"11519:22:21","nodeType":"YulFunctionCall","src":"11519:22:21"},{"name":"dataEnd","nativeSrc":"11543:7:21","nodeType":"YulIdentifier","src":"11543:7:21"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_calldata_ptr","nativeSrc":"11471:47:21","nodeType":"YulIdentifier","src":"11471:47:21"},"nativeSrc":"11471:80:21","nodeType":"YulFunctionCall","src":"11471:80:21"},"variableNames":[{"name":"value0","nativeSrc":"11453:6:21","nodeType":"YulIdentifier","src":"11453:6:21"},{"name":"value1","nativeSrc":"11461:6:21","nodeType":"YulIdentifier","src":"11461:6:21"}]}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr","nativeSrc":"11009:559:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11072:9:21","nodeType":"YulTypedName","src":"11072:9:21","type":""},{"name":"dataEnd","nativeSrc":"11083:7:21","nodeType":"YulTypedName","src":"11083:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"11095:6:21","nodeType":"YulTypedName","src":"11095:6:21","type":""},{"name":"value1","nativeSrc":"11103:6:21","nodeType":"YulTypedName","src":"11103:6:21","type":""}],"src":"11009:559:21"},{"body":{"nativeSrc":"11615:77:21","nodeType":"YulBlock","src":"11615:77:21","statements":[{"body":{"nativeSrc":"11670:16:21","nodeType":"YulBlock","src":"11670:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11679:1:21","nodeType":"YulLiteral","src":"11679:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"11682:1:21","nodeType":"YulLiteral","src":"11682:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"11672:6:21","nodeType":"YulIdentifier","src":"11672:6:21"},"nativeSrc":"11672:12:21","nodeType":"YulFunctionCall","src":"11672:12:21"},"nativeSrc":"11672:12:21","nodeType":"YulExpressionStatement","src":"11672:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"11638:5:21","nodeType":"YulIdentifier","src":"11638:5:21"},{"arguments":[{"name":"value","nativeSrc":"11661:5:21","nodeType":"YulIdentifier","src":"11661:5:21"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"11645:15:21","nodeType":"YulIdentifier","src":"11645:15:21"},"nativeSrc":"11645:22:21","nodeType":"YulFunctionCall","src":"11645:22:21"}],"functionName":{"name":"eq","nativeSrc":"11635:2:21","nodeType":"YulIdentifier","src":"11635:2:21"},"nativeSrc":"11635:33:21","nodeType":"YulFunctionCall","src":"11635:33:21"}],"functionName":{"name":"iszero","nativeSrc":"11628:6:21","nodeType":"YulIdentifier","src":"11628:6:21"},"nativeSrc":"11628:41:21","nodeType":"YulFunctionCall","src":"11628:41:21"},"nativeSrc":"11625:61:21","nodeType":"YulIf","src":"11625:61:21"}]},"name":"validator_revert_t_uint8","nativeSrc":"11574:118:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11608:5:21","nodeType":"YulTypedName","src":"11608:5:21","type":""}],"src":"11574:118:21"},{"body":{"nativeSrc":"11748:85:21","nodeType":"YulBlock","src":"11748:85:21","statements":[{"nativeSrc":"11758:29:21","nodeType":"YulAssignment","src":"11758:29:21","value":{"arguments":[{"name":"offset","nativeSrc":"11780:6:21","nodeType":"YulIdentifier","src":"11780:6:21"}],"functionName":{"name":"calldataload","nativeSrc":"11767:12:21","nodeType":"YulIdentifier","src":"11767:12:21"},"nativeSrc":"11767:20:21","nodeType":"YulFunctionCall","src":"11767:20:21"},"variableNames":[{"name":"value","nativeSrc":"11758:5:21","nodeType":"YulIdentifier","src":"11758:5:21"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"11821:5:21","nodeType":"YulIdentifier","src":"11821:5:21"}],"functionName":{"name":"validator_revert_t_uint8","nativeSrc":"11796:24:21","nodeType":"YulIdentifier","src":"11796:24:21"},"nativeSrc":"11796:31:21","nodeType":"YulFunctionCall","src":"11796:31:21"},"nativeSrc":"11796:31:21","nodeType":"YulExpressionStatement","src":"11796:31:21"}]},"name":"abi_decode_t_uint8","nativeSrc":"11698:135:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"11726:6:21","nodeType":"YulTypedName","src":"11726:6:21","type":""},{"name":"end","nativeSrc":"11734:3:21","nodeType":"YulTypedName","src":"11734:3:21","type":""}],"returnVariables":[{"name":"value","nativeSrc":"11742:5:21","nodeType":"YulTypedName","src":"11742:5:21","type":""}],"src":"11698:135:21"},{"body":{"nativeSrc":"11882:79:21","nodeType":"YulBlock","src":"11882:79:21","statements":[{"body":{"nativeSrc":"11939:16:21","nodeType":"YulBlock","src":"11939:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11948:1:21","nodeType":"YulLiteral","src":"11948:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"11951:1:21","nodeType":"YulLiteral","src":"11951:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"11941:6:21","nodeType":"YulIdentifier","src":"11941:6:21"},"nativeSrc":"11941:12:21","nodeType":"YulFunctionCall","src":"11941:12:21"},"nativeSrc":"11941:12:21","nodeType":"YulExpressionStatement","src":"11941:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"11905:5:21","nodeType":"YulIdentifier","src":"11905:5:21"},{"arguments":[{"name":"value","nativeSrc":"11930:5:21","nodeType":"YulIdentifier","src":"11930:5:21"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"11912:17:21","nodeType":"YulIdentifier","src":"11912:17:21"},"nativeSrc":"11912:24:21","nodeType":"YulFunctionCall","src":"11912:24:21"}],"functionName":{"name":"eq","nativeSrc":"11902:2:21","nodeType":"YulIdentifier","src":"11902:2:21"},"nativeSrc":"11902:35:21","nodeType":"YulFunctionCall","src":"11902:35:21"}],"functionName":{"name":"iszero","nativeSrc":"11895:6:21","nodeType":"YulIdentifier","src":"11895:6:21"},"nativeSrc":"11895:43:21","nodeType":"YulFunctionCall","src":"11895:43:21"},"nativeSrc":"11892:63:21","nodeType":"YulIf","src":"11892:63:21"}]},"name":"validator_revert_t_bytes32","nativeSrc":"11839:122:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11875:5:21","nodeType":"YulTypedName","src":"11875:5:21","type":""}],"src":"11839:122:21"},{"body":{"nativeSrc":"12019:87:21","nodeType":"YulBlock","src":"12019:87:21","statements":[{"nativeSrc":"12029:29:21","nodeType":"YulAssignment","src":"12029:29:21","value":{"arguments":[{"name":"offset","nativeSrc":"12051:6:21","nodeType":"YulIdentifier","src":"12051:6:21"}],"functionName":{"name":"calldataload","nativeSrc":"12038:12:21","nodeType":"YulIdentifier","src":"12038:12:21"},"nativeSrc":"12038:20:21","nodeType":"YulFunctionCall","src":"12038:20:21"},"variableNames":[{"name":"value","nativeSrc":"12029:5:21","nodeType":"YulIdentifier","src":"12029:5:21"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"12094:5:21","nodeType":"YulIdentifier","src":"12094:5:21"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"12067:26:21","nodeType":"YulIdentifier","src":"12067:26:21"},"nativeSrc":"12067:33:21","nodeType":"YulFunctionCall","src":"12067:33:21"},"nativeSrc":"12067:33:21","nodeType":"YulExpressionStatement","src":"12067:33:21"}]},"name":"abi_decode_t_bytes32","nativeSrc":"11967:139:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"11997:6:21","nodeType":"YulTypedName","src":"11997:6:21","type":""},{"name":"end","nativeSrc":"12005:3:21","nodeType":"YulTypedName","src":"12005:3:21","type":""}],"returnVariables":[{"name":"value","nativeSrc":"12013:5:21","nodeType":"YulTypedName","src":"12013:5:21","type":""}],"src":"11967:139:21"},{"body":{"nativeSrc":"12278:1033:21","nodeType":"YulBlock","src":"12278:1033:21","statements":[{"body":{"nativeSrc":"12325:83:21","nodeType":"YulBlock","src":"12325:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"12327:77:21","nodeType":"YulIdentifier","src":"12327:77:21"},"nativeSrc":"12327:79:21","nodeType":"YulFunctionCall","src":"12327:79:21"},"nativeSrc":"12327:79:21","nodeType":"YulExpressionStatement","src":"12327:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"12299:7:21","nodeType":"YulIdentifier","src":"12299:7:21"},{"name":"headStart","nativeSrc":"12308:9:21","nodeType":"YulIdentifier","src":"12308:9:21"}],"functionName":{"name":"sub","nativeSrc":"12295:3:21","nodeType":"YulIdentifier","src":"12295:3:21"},"nativeSrc":"12295:23:21","nodeType":"YulFunctionCall","src":"12295:23:21"},{"kind":"number","nativeSrc":"12320:3:21","nodeType":"YulLiteral","src":"12320:3:21","type":"","value":"224"}],"functionName":{"name":"slt","nativeSrc":"12291:3:21","nodeType":"YulIdentifier","src":"12291:3:21"},"nativeSrc":"12291:33:21","nodeType":"YulFunctionCall","src":"12291:33:21"},"nativeSrc":"12288:120:21","nodeType":"YulIf","src":"12288:120:21"},{"nativeSrc":"12418:117:21","nodeType":"YulBlock","src":"12418:117:21","statements":[{"nativeSrc":"12433:15:21","nodeType":"YulVariableDeclaration","src":"12433:15:21","value":{"kind":"number","nativeSrc":"12447:1:21","nodeType":"YulLiteral","src":"12447:1:21","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"12437:6:21","nodeType":"YulTypedName","src":"12437:6:21","type":""}]},{"nativeSrc":"12462:63:21","nodeType":"YulAssignment","src":"12462:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12497:9:21","nodeType":"YulIdentifier","src":"12497:9:21"},{"name":"offset","nativeSrc":"12508:6:21","nodeType":"YulIdentifier","src":"12508:6:21"}],"functionName":{"name":"add","nativeSrc":"12493:3:21","nodeType":"YulIdentifier","src":"12493:3:21"},"nativeSrc":"12493:22:21","nodeType":"YulFunctionCall","src":"12493:22:21"},{"name":"dataEnd","nativeSrc":"12517:7:21","nodeType":"YulIdentifier","src":"12517:7:21"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"12472:20:21","nodeType":"YulIdentifier","src":"12472:20:21"},"nativeSrc":"12472:53:21","nodeType":"YulFunctionCall","src":"12472:53:21"},"variableNames":[{"name":"value0","nativeSrc":"12462:6:21","nodeType":"YulIdentifier","src":"12462:6:21"}]}]},{"nativeSrc":"12545:118:21","nodeType":"YulBlock","src":"12545:118:21","statements":[{"nativeSrc":"12560:16:21","nodeType":"YulVariableDeclaration","src":"12560:16:21","value":{"kind":"number","nativeSrc":"12574:2:21","nodeType":"YulLiteral","src":"12574:2:21","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"12564:6:21","nodeType":"YulTypedName","src":"12564:6:21","type":""}]},{"nativeSrc":"12590:63:21","nodeType":"YulAssignment","src":"12590:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12625:9:21","nodeType":"YulIdentifier","src":"12625:9:21"},{"name":"offset","nativeSrc":"12636:6:21","nodeType":"YulIdentifier","src":"12636:6:21"}],"functionName":{"name":"add","nativeSrc":"12621:3:21","nodeType":"YulIdentifier","src":"12621:3:21"},"nativeSrc":"12621:22:21","nodeType":"YulFunctionCall","src":"12621:22:21"},{"name":"dataEnd","nativeSrc":"12645:7:21","nodeType":"YulIdentifier","src":"12645:7:21"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"12600:20:21","nodeType":"YulIdentifier","src":"12600:20:21"},"nativeSrc":"12600:53:21","nodeType":"YulFunctionCall","src":"12600:53:21"},"variableNames":[{"name":"value1","nativeSrc":"12590:6:21","nodeType":"YulIdentifier","src":"12590:6:21"}]}]},{"nativeSrc":"12673:118:21","nodeType":"YulBlock","src":"12673:118:21","statements":[{"nativeSrc":"12688:16:21","nodeType":"YulVariableDeclaration","src":"12688:16:21","value":{"kind":"number","nativeSrc":"12702:2:21","nodeType":"YulLiteral","src":"12702:2:21","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"12692:6:21","nodeType":"YulTypedName","src":"12692:6:21","type":""}]},{"nativeSrc":"12718:63:21","nodeType":"YulAssignment","src":"12718:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12753:9:21","nodeType":"YulIdentifier","src":"12753:9:21"},{"name":"offset","nativeSrc":"12764:6:21","nodeType":"YulIdentifier","src":"12764:6:21"}],"functionName":{"name":"add","nativeSrc":"12749:3:21","nodeType":"YulIdentifier","src":"12749:3:21"},"nativeSrc":"12749:22:21","nodeType":"YulFunctionCall","src":"12749:22:21"},{"name":"dataEnd","nativeSrc":"12773:7:21","nodeType":"YulIdentifier","src":"12773:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"12728:20:21","nodeType":"YulIdentifier","src":"12728:20:21"},"nativeSrc":"12728:53:21","nodeType":"YulFunctionCall","src":"12728:53:21"},"variableNames":[{"name":"value2","nativeSrc":"12718:6:21","nodeType":"YulIdentifier","src":"12718:6:21"}]}]},{"nativeSrc":"12801:118:21","nodeType":"YulBlock","src":"12801:118:21","statements":[{"nativeSrc":"12816:16:21","nodeType":"YulVariableDeclaration","src":"12816:16:21","value":{"kind":"number","nativeSrc":"12830:2:21","nodeType":"YulLiteral","src":"12830:2:21","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"12820:6:21","nodeType":"YulTypedName","src":"12820:6:21","type":""}]},{"nativeSrc":"12846:63:21","nodeType":"YulAssignment","src":"12846:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12881:9:21","nodeType":"YulIdentifier","src":"12881:9:21"},{"name":"offset","nativeSrc":"12892:6:21","nodeType":"YulIdentifier","src":"12892:6:21"}],"functionName":{"name":"add","nativeSrc":"12877:3:21","nodeType":"YulIdentifier","src":"12877:3:21"},"nativeSrc":"12877:22:21","nodeType":"YulFunctionCall","src":"12877:22:21"},{"name":"dataEnd","nativeSrc":"12901:7:21","nodeType":"YulIdentifier","src":"12901:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"12856:20:21","nodeType":"YulIdentifier","src":"12856:20:21"},"nativeSrc":"12856:53:21","nodeType":"YulFunctionCall","src":"12856:53:21"},"variableNames":[{"name":"value3","nativeSrc":"12846:6:21","nodeType":"YulIdentifier","src":"12846:6:21"}]}]},{"nativeSrc":"12929:117:21","nodeType":"YulBlock","src":"12929:117:21","statements":[{"nativeSrc":"12944:17:21","nodeType":"YulVariableDeclaration","src":"12944:17:21","value":{"kind":"number","nativeSrc":"12958:3:21","nodeType":"YulLiteral","src":"12958:3:21","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"12948:6:21","nodeType":"YulTypedName","src":"12948:6:21","type":""}]},{"nativeSrc":"12975:61:21","nodeType":"YulAssignment","src":"12975:61:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13008:9:21","nodeType":"YulIdentifier","src":"13008:9:21"},{"name":"offset","nativeSrc":"13019:6:21","nodeType":"YulIdentifier","src":"13019:6:21"}],"functionName":{"name":"add","nativeSrc":"13004:3:21","nodeType":"YulIdentifier","src":"13004:3:21"},"nativeSrc":"13004:22:21","nodeType":"YulFunctionCall","src":"13004:22:21"},{"name":"dataEnd","nativeSrc":"13028:7:21","nodeType":"YulIdentifier","src":"13028:7:21"}],"functionName":{"name":"abi_decode_t_uint8","nativeSrc":"12985:18:21","nodeType":"YulIdentifier","src":"12985:18:21"},"nativeSrc":"12985:51:21","nodeType":"YulFunctionCall","src":"12985:51:21"},"variableNames":[{"name":"value4","nativeSrc":"12975:6:21","nodeType":"YulIdentifier","src":"12975:6:21"}]}]},{"nativeSrc":"13056:119:21","nodeType":"YulBlock","src":"13056:119:21","statements":[{"nativeSrc":"13071:17:21","nodeType":"YulVariableDeclaration","src":"13071:17:21","value":{"kind":"number","nativeSrc":"13085:3:21","nodeType":"YulLiteral","src":"13085:3:21","type":"","value":"160"},"variables":[{"name":"offset","nativeSrc":"13075:6:21","nodeType":"YulTypedName","src":"13075:6:21","type":""}]},{"nativeSrc":"13102:63:21","nodeType":"YulAssignment","src":"13102:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13137:9:21","nodeType":"YulIdentifier","src":"13137:9:21"},{"name":"offset","nativeSrc":"13148:6:21","nodeType":"YulIdentifier","src":"13148:6:21"}],"functionName":{"name":"add","nativeSrc":"13133:3:21","nodeType":"YulIdentifier","src":"13133:3:21"},"nativeSrc":"13133:22:21","nodeType":"YulFunctionCall","src":"13133:22:21"},{"name":"dataEnd","nativeSrc":"13157:7:21","nodeType":"YulIdentifier","src":"13157:7:21"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"13112:20:21","nodeType":"YulIdentifier","src":"13112:20:21"},"nativeSrc":"13112:53:21","nodeType":"YulFunctionCall","src":"13112:53:21"},"variableNames":[{"name":"value5","nativeSrc":"13102:6:21","nodeType":"YulIdentifier","src":"13102:6:21"}]}]},{"nativeSrc":"13185:119:21","nodeType":"YulBlock","src":"13185:119:21","statements":[{"nativeSrc":"13200:17:21","nodeType":"YulVariableDeclaration","src":"13200:17:21","value":{"kind":"number","nativeSrc":"13214:3:21","nodeType":"YulLiteral","src":"13214:3:21","type":"","value":"192"},"variables":[{"name":"offset","nativeSrc":"13204:6:21","nodeType":"YulTypedName","src":"13204:6:21","type":""}]},{"nativeSrc":"13231:63:21","nodeType":"YulAssignment","src":"13231:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13266:9:21","nodeType":"YulIdentifier","src":"13266:9:21"},{"name":"offset","nativeSrc":"13277:6:21","nodeType":"YulIdentifier","src":"13277:6:21"}],"functionName":{"name":"add","nativeSrc":"13262:3:21","nodeType":"YulIdentifier","src":"13262:3:21"},"nativeSrc":"13262:22:21","nodeType":"YulFunctionCall","src":"13262:22:21"},{"name":"dataEnd","nativeSrc":"13286:7:21","nodeType":"YulIdentifier","src":"13286:7:21"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"13241:20:21","nodeType":"YulIdentifier","src":"13241:20:21"},"nativeSrc":"13241:53:21","nodeType":"YulFunctionCall","src":"13241:53:21"},"variableNames":[{"name":"value6","nativeSrc":"13231:6:21","nodeType":"YulIdentifier","src":"13231:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nativeSrc":"12112:1199:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12200:9:21","nodeType":"YulTypedName","src":"12200:9:21","type":""},{"name":"dataEnd","nativeSrc":"12211:7:21","nodeType":"YulTypedName","src":"12211:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"12223:6:21","nodeType":"YulTypedName","src":"12223:6:21","type":""},{"name":"value1","nativeSrc":"12231:6:21","nodeType":"YulTypedName","src":"12231:6:21","type":""},{"name":"value2","nativeSrc":"12239:6:21","nodeType":"YulTypedName","src":"12239:6:21","type":""},{"name":"value3","nativeSrc":"12247:6:21","nodeType":"YulTypedName","src":"12247:6:21","type":""},{"name":"value4","nativeSrc":"12255:6:21","nodeType":"YulTypedName","src":"12255:6:21","type":""},{"name":"value5","nativeSrc":"12263:6:21","nodeType":"YulTypedName","src":"12263:6:21","type":""},{"name":"value6","nativeSrc":"12271:6:21","nodeType":"YulTypedName","src":"12271:6:21","type":""}],"src":"12112:1199:21"},{"body":{"nativeSrc":"13400:391:21","nodeType":"YulBlock","src":"13400:391:21","statements":[{"body":{"nativeSrc":"13446:83:21","nodeType":"YulBlock","src":"13446:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"13448:77:21","nodeType":"YulIdentifier","src":"13448:77:21"},"nativeSrc":"13448:79:21","nodeType":"YulFunctionCall","src":"13448:79:21"},"nativeSrc":"13448:79:21","nodeType":"YulExpressionStatement","src":"13448:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"13421:7:21","nodeType":"YulIdentifier","src":"13421:7:21"},{"name":"headStart","nativeSrc":"13430:9:21","nodeType":"YulIdentifier","src":"13430:9:21"}],"functionName":{"name":"sub","nativeSrc":"13417:3:21","nodeType":"YulIdentifier","src":"13417:3:21"},"nativeSrc":"13417:23:21","nodeType":"YulFunctionCall","src":"13417:23:21"},{"kind":"number","nativeSrc":"13442:2:21","nodeType":"YulLiteral","src":"13442:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"13413:3:21","nodeType":"YulIdentifier","src":"13413:3:21"},"nativeSrc":"13413:32:21","nodeType":"YulFunctionCall","src":"13413:32:21"},"nativeSrc":"13410:119:21","nodeType":"YulIf","src":"13410:119:21"},{"nativeSrc":"13539:117:21","nodeType":"YulBlock","src":"13539:117:21","statements":[{"nativeSrc":"13554:15:21","nodeType":"YulVariableDeclaration","src":"13554:15:21","value":{"kind":"number","nativeSrc":"13568:1:21","nodeType":"YulLiteral","src":"13568:1:21","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"13558:6:21","nodeType":"YulTypedName","src":"13558:6:21","type":""}]},{"nativeSrc":"13583:63:21","nodeType":"YulAssignment","src":"13583:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13618:9:21","nodeType":"YulIdentifier","src":"13618:9:21"},{"name":"offset","nativeSrc":"13629:6:21","nodeType":"YulIdentifier","src":"13629:6:21"}],"functionName":{"name":"add","nativeSrc":"13614:3:21","nodeType":"YulIdentifier","src":"13614:3:21"},"nativeSrc":"13614:22:21","nodeType":"YulFunctionCall","src":"13614:22:21"},{"name":"dataEnd","nativeSrc":"13638:7:21","nodeType":"YulIdentifier","src":"13638:7:21"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"13593:20:21","nodeType":"YulIdentifier","src":"13593:20:21"},"nativeSrc":"13593:53:21","nodeType":"YulFunctionCall","src":"13593:53:21"},"variableNames":[{"name":"value0","nativeSrc":"13583:6:21","nodeType":"YulIdentifier","src":"13583:6:21"}]}]},{"nativeSrc":"13666:118:21","nodeType":"YulBlock","src":"13666:118:21","statements":[{"nativeSrc":"13681:16:21","nodeType":"YulVariableDeclaration","src":"13681:16:21","value":{"kind":"number","nativeSrc":"13695:2:21","nodeType":"YulLiteral","src":"13695:2:21","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"13685:6:21","nodeType":"YulTypedName","src":"13685:6:21","type":""}]},{"nativeSrc":"13711:63:21","nodeType":"YulAssignment","src":"13711:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13746:9:21","nodeType":"YulIdentifier","src":"13746:9:21"},{"name":"offset","nativeSrc":"13757:6:21","nodeType":"YulIdentifier","src":"13757:6:21"}],"functionName":{"name":"add","nativeSrc":"13742:3:21","nodeType":"YulIdentifier","src":"13742:3:21"},"nativeSrc":"13742:22:21","nodeType":"YulFunctionCall","src":"13742:22:21"},{"name":"dataEnd","nativeSrc":"13766:7:21","nodeType":"YulIdentifier","src":"13766:7:21"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"13721:20:21","nodeType":"YulIdentifier","src":"13721:20:21"},"nativeSrc":"13721:53:21","nodeType":"YulFunctionCall","src":"13721:53:21"},"variableNames":[{"name":"value1","nativeSrc":"13711:6:21","nodeType":"YulIdentifier","src":"13711:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"13317:474:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13362:9:21","nodeType":"YulTypedName","src":"13362:9:21","type":""},{"name":"dataEnd","nativeSrc":"13373:7:21","nodeType":"YulTypedName","src":"13373:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"13385:6:21","nodeType":"YulTypedName","src":"13385:6:21","type":""},{"name":"value1","nativeSrc":"13393:6:21","nodeType":"YulTypedName","src":"13393:6:21","type":""}],"src":"13317:474:21"},{"body":{"nativeSrc":"13825:152:21","nodeType":"YulBlock","src":"13825:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13842:1:21","nodeType":"YulLiteral","src":"13842:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"13845:77:21","nodeType":"YulLiteral","src":"13845:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"13835:6:21","nodeType":"YulIdentifier","src":"13835:6:21"},"nativeSrc":"13835:88:21","nodeType":"YulFunctionCall","src":"13835:88:21"},"nativeSrc":"13835:88:21","nodeType":"YulExpressionStatement","src":"13835:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13939:1:21","nodeType":"YulLiteral","src":"13939:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"13942:4:21","nodeType":"YulLiteral","src":"13942:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"13932:6:21","nodeType":"YulIdentifier","src":"13932:6:21"},"nativeSrc":"13932:15:21","nodeType":"YulFunctionCall","src":"13932:15:21"},"nativeSrc":"13932:15:21","nodeType":"YulExpressionStatement","src":"13932:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13963:1:21","nodeType":"YulLiteral","src":"13963:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"13966:4:21","nodeType":"YulLiteral","src":"13966:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"13956:6:21","nodeType":"YulIdentifier","src":"13956:6:21"},"nativeSrc":"13956:15:21","nodeType":"YulFunctionCall","src":"13956:15:21"},"nativeSrc":"13956:15:21","nodeType":"YulExpressionStatement","src":"13956:15:21"}]},"name":"panic_error_0x22","nativeSrc":"13797:180:21","nodeType":"YulFunctionDefinition","src":"13797:180:21"},{"body":{"nativeSrc":"14034:269:21","nodeType":"YulBlock","src":"14034:269:21","statements":[{"nativeSrc":"14044:22:21","nodeType":"YulAssignment","src":"14044:22:21","value":{"arguments":[{"name":"data","nativeSrc":"14058:4:21","nodeType":"YulIdentifier","src":"14058:4:21"},{"kind":"number","nativeSrc":"14064:1:21","nodeType":"YulLiteral","src":"14064:1:21","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"14054:3:21","nodeType":"YulIdentifier","src":"14054:3:21"},"nativeSrc":"14054:12:21","nodeType":"YulFunctionCall","src":"14054:12:21"},"variableNames":[{"name":"length","nativeSrc":"14044:6:21","nodeType":"YulIdentifier","src":"14044:6:21"}]},{"nativeSrc":"14075:38:21","nodeType":"YulVariableDeclaration","src":"14075:38:21","value":{"arguments":[{"name":"data","nativeSrc":"14105:4:21","nodeType":"YulIdentifier","src":"14105:4:21"},{"kind":"number","nativeSrc":"14111:1:21","nodeType":"YulLiteral","src":"14111:1:21","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"14101:3:21","nodeType":"YulIdentifier","src":"14101:3:21"},"nativeSrc":"14101:12:21","nodeType":"YulFunctionCall","src":"14101:12:21"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"14079:18:21","nodeType":"YulTypedName","src":"14079:18:21","type":""}]},{"body":{"nativeSrc":"14152:51:21","nodeType":"YulBlock","src":"14152:51:21","statements":[{"nativeSrc":"14166:27:21","nodeType":"YulAssignment","src":"14166:27:21","value":{"arguments":[{"name":"length","nativeSrc":"14180:6:21","nodeType":"YulIdentifier","src":"14180:6:21"},{"kind":"number","nativeSrc":"14188:4:21","nodeType":"YulLiteral","src":"14188:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"14176:3:21","nodeType":"YulIdentifier","src":"14176:3:21"},"nativeSrc":"14176:17:21","nodeType":"YulFunctionCall","src":"14176:17:21"},"variableNames":[{"name":"length","nativeSrc":"14166:6:21","nodeType":"YulIdentifier","src":"14166:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"14132:18:21","nodeType":"YulIdentifier","src":"14132:18:21"}],"functionName":{"name":"iszero","nativeSrc":"14125:6:21","nodeType":"YulIdentifier","src":"14125:6:21"},"nativeSrc":"14125:26:21","nodeType":"YulFunctionCall","src":"14125:26:21"},"nativeSrc":"14122:81:21","nodeType":"YulIf","src":"14122:81:21"},{"body":{"nativeSrc":"14255:42:21","nodeType":"YulBlock","src":"14255:42:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"14269:16:21","nodeType":"YulIdentifier","src":"14269:16:21"},"nativeSrc":"14269:18:21","nodeType":"YulFunctionCall","src":"14269:18:21"},"nativeSrc":"14269:18:21","nodeType":"YulExpressionStatement","src":"14269:18:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"14219:18:21","nodeType":"YulIdentifier","src":"14219:18:21"},{"arguments":[{"name":"length","nativeSrc":"14242:6:21","nodeType":"YulIdentifier","src":"14242:6:21"},{"kind":"number","nativeSrc":"14250:2:21","nodeType":"YulLiteral","src":"14250:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"14239:2:21","nodeType":"YulIdentifier","src":"14239:2:21"},"nativeSrc":"14239:14:21","nodeType":"YulFunctionCall","src":"14239:14:21"}],"functionName":{"name":"eq","nativeSrc":"14216:2:21","nodeType":"YulIdentifier","src":"14216:2:21"},"nativeSrc":"14216:38:21","nodeType":"YulFunctionCall","src":"14216:38:21"},"nativeSrc":"14213:84:21","nodeType":"YulIf","src":"14213:84:21"}]},"name":"extract_byte_array_length","nativeSrc":"13983:320:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"14018:4:21","nodeType":"YulTypedName","src":"14018:4:21","type":""}],"returnVariables":[{"name":"length","nativeSrc":"14027:6:21","nodeType":"YulTypedName","src":"14027:6:21","type":""}],"src":"13983:320:21"},{"body":{"nativeSrc":"14435:206:21","nodeType":"YulBlock","src":"14435:206:21","statements":[{"nativeSrc":"14445:26:21","nodeType":"YulAssignment","src":"14445:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"14457:9:21","nodeType":"YulIdentifier","src":"14457:9:21"},{"kind":"number","nativeSrc":"14468:2:21","nodeType":"YulLiteral","src":"14468:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14453:3:21","nodeType":"YulIdentifier","src":"14453:3:21"},"nativeSrc":"14453:18:21","nodeType":"YulFunctionCall","src":"14453:18:21"},"variableNames":[{"name":"tail","nativeSrc":"14445:4:21","nodeType":"YulIdentifier","src":"14445:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"14525:6:21","nodeType":"YulIdentifier","src":"14525:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"14538:9:21","nodeType":"YulIdentifier","src":"14538:9:21"},{"kind":"number","nativeSrc":"14549:1:21","nodeType":"YulLiteral","src":"14549:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14534:3:21","nodeType":"YulIdentifier","src":"14534:3:21"},"nativeSrc":"14534:17:21","nodeType":"YulFunctionCall","src":"14534:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"14481:43:21","nodeType":"YulIdentifier","src":"14481:43:21"},"nativeSrc":"14481:71:21","nodeType":"YulFunctionCall","src":"14481:71:21"},"nativeSrc":"14481:71:21","nodeType":"YulExpressionStatement","src":"14481:71:21"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"14606:6:21","nodeType":"YulIdentifier","src":"14606:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"14619:9:21","nodeType":"YulIdentifier","src":"14619:9:21"},{"kind":"number","nativeSrc":"14630:2:21","nodeType":"YulLiteral","src":"14630:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14615:3:21","nodeType":"YulIdentifier","src":"14615:3:21"},"nativeSrc":"14615:18:21","nodeType":"YulFunctionCall","src":"14615:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"14562:43:21","nodeType":"YulIdentifier","src":"14562:43:21"},"nativeSrc":"14562:72:21","nodeType":"YulFunctionCall","src":"14562:72:21"},"nativeSrc":"14562:72:21","nodeType":"YulExpressionStatement","src":"14562:72:21"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"14309:332:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14399:9:21","nodeType":"YulTypedName","src":"14399:9:21","type":""},{"name":"value1","nativeSrc":"14411:6:21","nodeType":"YulTypedName","src":"14411:6:21","type":""},{"name":"value0","nativeSrc":"14419:6:21","nodeType":"YulTypedName","src":"14419:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14430:4:21","nodeType":"YulTypedName","src":"14430:4:21","type":""}],"src":"14309:332:21"},{"body":{"nativeSrc":"14675:152:21","nodeType":"YulBlock","src":"14675:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"14692:1:21","nodeType":"YulLiteral","src":"14692:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"14695:77:21","nodeType":"YulLiteral","src":"14695:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"14685:6:21","nodeType":"YulIdentifier","src":"14685:6:21"},"nativeSrc":"14685:88:21","nodeType":"YulFunctionCall","src":"14685:88:21"},"nativeSrc":"14685:88:21","nodeType":"YulExpressionStatement","src":"14685:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14789:1:21","nodeType":"YulLiteral","src":"14789:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"14792:4:21","nodeType":"YulLiteral","src":"14792:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"14782:6:21","nodeType":"YulIdentifier","src":"14782:6:21"},"nativeSrc":"14782:15:21","nodeType":"YulFunctionCall","src":"14782:15:21"},"nativeSrc":"14782:15:21","nodeType":"YulExpressionStatement","src":"14782:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14813:1:21","nodeType":"YulLiteral","src":"14813:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"14816:4:21","nodeType":"YulLiteral","src":"14816:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"14806:6:21","nodeType":"YulIdentifier","src":"14806:6:21"},"nativeSrc":"14806:15:21","nodeType":"YulFunctionCall","src":"14806:15:21"},"nativeSrc":"14806:15:21","nodeType":"YulExpressionStatement","src":"14806:15:21"}]},"name":"panic_error_0x41","nativeSrc":"14647:180:21","nodeType":"YulFunctionDefinition","src":"14647:180:21"},{"body":{"nativeSrc":"14939:114:21","nodeType":"YulBlock","src":"14939:114:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"14961:6:21","nodeType":"YulIdentifier","src":"14961:6:21"},{"kind":"number","nativeSrc":"14969:1:21","nodeType":"YulLiteral","src":"14969:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14957:3:21","nodeType":"YulIdentifier","src":"14957:3:21"},"nativeSrc":"14957:14:21","nodeType":"YulFunctionCall","src":"14957:14:21"},{"hexValue":"4172617261436f696e2074726164696e6720616c726561647920656e61626c65","kind":"string","nativeSrc":"14973:34:21","nodeType":"YulLiteral","src":"14973:34:21","type":"","value":"AraraCoin trading already enable"}],"functionName":{"name":"mstore","nativeSrc":"14950:6:21","nodeType":"YulIdentifier","src":"14950:6:21"},"nativeSrc":"14950:58:21","nodeType":"YulFunctionCall","src":"14950:58:21"},"nativeSrc":"14950:58:21","nodeType":"YulExpressionStatement","src":"14950:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"15029:6:21","nodeType":"YulIdentifier","src":"15029:6:21"},{"kind":"number","nativeSrc":"15037:2:21","nodeType":"YulLiteral","src":"15037:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15025:3:21","nodeType":"YulIdentifier","src":"15025:3:21"},"nativeSrc":"15025:15:21","nodeType":"YulFunctionCall","src":"15025:15:21"},{"hexValue":"64","kind":"string","nativeSrc":"15042:3:21","nodeType":"YulLiteral","src":"15042:3:21","type":"","value":"d"}],"functionName":{"name":"mstore","nativeSrc":"15018:6:21","nodeType":"YulIdentifier","src":"15018:6:21"},"nativeSrc":"15018:28:21","nodeType":"YulFunctionCall","src":"15018:28:21"},"nativeSrc":"15018:28:21","nodeType":"YulExpressionStatement","src":"15018:28:21"}]},"name":"store_literal_in_memory_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4","nativeSrc":"14833:220:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"14931:6:21","nodeType":"YulTypedName","src":"14931:6:21","type":""}],"src":"14833:220:21"},{"body":{"nativeSrc":"15205:220:21","nodeType":"YulBlock","src":"15205:220:21","statements":[{"nativeSrc":"15215:74:21","nodeType":"YulAssignment","src":"15215:74:21","value":{"arguments":[{"name":"pos","nativeSrc":"15281:3:21","nodeType":"YulIdentifier","src":"15281:3:21"},{"kind":"number","nativeSrc":"15286:2:21","nodeType":"YulLiteral","src":"15286:2:21","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"15222:58:21","nodeType":"YulIdentifier","src":"15222:58:21"},"nativeSrc":"15222:67:21","nodeType":"YulFunctionCall","src":"15222:67:21"},"variableNames":[{"name":"pos","nativeSrc":"15215:3:21","nodeType":"YulIdentifier","src":"15215:3:21"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"15387:3:21","nodeType":"YulIdentifier","src":"15387:3:21"}],"functionName":{"name":"store_literal_in_memory_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4","nativeSrc":"15298:88:21","nodeType":"YulIdentifier","src":"15298:88:21"},"nativeSrc":"15298:93:21","nodeType":"YulFunctionCall","src":"15298:93:21"},"nativeSrc":"15298:93:21","nodeType":"YulExpressionStatement","src":"15298:93:21"},{"nativeSrc":"15400:19:21","nodeType":"YulAssignment","src":"15400:19:21","value":{"arguments":[{"name":"pos","nativeSrc":"15411:3:21","nodeType":"YulIdentifier","src":"15411:3:21"},{"kind":"number","nativeSrc":"15416:2:21","nodeType":"YulLiteral","src":"15416:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15407:3:21","nodeType":"YulIdentifier","src":"15407:3:21"},"nativeSrc":"15407:12:21","nodeType":"YulFunctionCall","src":"15407:12:21"},"variableNames":[{"name":"end","nativeSrc":"15400:3:21","nodeType":"YulIdentifier","src":"15400:3:21"}]}]},"name":"abi_encode_t_stringliteral_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4_to_t_string_memory_ptr_fromStack","nativeSrc":"15059:366:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"15193:3:21","nodeType":"YulTypedName","src":"15193:3:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"15201:3:21","nodeType":"YulTypedName","src":"15201:3:21","type":""}],"src":"15059:366:21"},{"body":{"nativeSrc":"15602:248:21","nodeType":"YulBlock","src":"15602:248:21","statements":[{"nativeSrc":"15612:26:21","nodeType":"YulAssignment","src":"15612:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"15624:9:21","nodeType":"YulIdentifier","src":"15624:9:21"},{"kind":"number","nativeSrc":"15635:2:21","nodeType":"YulLiteral","src":"15635:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15620:3:21","nodeType":"YulIdentifier","src":"15620:3:21"},"nativeSrc":"15620:18:21","nodeType":"YulFunctionCall","src":"15620:18:21"},"variableNames":[{"name":"tail","nativeSrc":"15612:4:21","nodeType":"YulIdentifier","src":"15612:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15659:9:21","nodeType":"YulIdentifier","src":"15659:9:21"},{"kind":"number","nativeSrc":"15670:1:21","nodeType":"YulLiteral","src":"15670:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15655:3:21","nodeType":"YulIdentifier","src":"15655:3:21"},"nativeSrc":"15655:17:21","nodeType":"YulFunctionCall","src":"15655:17:21"},{"arguments":[{"name":"tail","nativeSrc":"15678:4:21","nodeType":"YulIdentifier","src":"15678:4:21"},{"name":"headStart","nativeSrc":"15684:9:21","nodeType":"YulIdentifier","src":"15684:9:21"}],"functionName":{"name":"sub","nativeSrc":"15674:3:21","nodeType":"YulIdentifier","src":"15674:3:21"},"nativeSrc":"15674:20:21","nodeType":"YulFunctionCall","src":"15674:20:21"}],"functionName":{"name":"mstore","nativeSrc":"15648:6:21","nodeType":"YulIdentifier","src":"15648:6:21"},"nativeSrc":"15648:47:21","nodeType":"YulFunctionCall","src":"15648:47:21"},"nativeSrc":"15648:47:21","nodeType":"YulExpressionStatement","src":"15648:47:21"},{"nativeSrc":"15704:139:21","nodeType":"YulAssignment","src":"15704:139:21","value":{"arguments":[{"name":"tail","nativeSrc":"15838:4:21","nodeType":"YulIdentifier","src":"15838:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4_to_t_string_memory_ptr_fromStack","nativeSrc":"15712:124:21","nodeType":"YulIdentifier","src":"15712:124:21"},"nativeSrc":"15712:131:21","nodeType":"YulFunctionCall","src":"15712:131:21"},"variableNames":[{"name":"tail","nativeSrc":"15704:4:21","nodeType":"YulIdentifier","src":"15704:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"15431:419:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15582:9:21","nodeType":"YulTypedName","src":"15582:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15597:4:21","nodeType":"YulTypedName","src":"15597:4:21","type":""}],"src":"15431:419:21"},{"body":{"nativeSrc":"15962:72:21","nodeType":"YulBlock","src":"15962:72:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"15984:6:21","nodeType":"YulIdentifier","src":"15984:6:21"},{"kind":"number","nativeSrc":"15992:1:21","nodeType":"YulLiteral","src":"15992:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15980:3:21","nodeType":"YulIdentifier","src":"15980:3:21"},"nativeSrc":"15980:14:21","nodeType":"YulFunctionCall","src":"15980:14:21"},{"hexValue":"4172617261436f696e20696e76616c696420706172616d6574657273","kind":"string","nativeSrc":"15996:30:21","nodeType":"YulLiteral","src":"15996:30:21","type":"","value":"AraraCoin invalid parameters"}],"functionName":{"name":"mstore","nativeSrc":"15973:6:21","nodeType":"YulIdentifier","src":"15973:6:21"},"nativeSrc":"15973:54:21","nodeType":"YulFunctionCall","src":"15973:54:21"},"nativeSrc":"15973:54:21","nodeType":"YulExpressionStatement","src":"15973:54:21"}]},"name":"store_literal_in_memory_21ef6b7918317f335757be4f30c7408f457723a97602be12bce7361115dd17f9","nativeSrc":"15856:178:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"15954:6:21","nodeType":"YulTypedName","src":"15954:6:21","type":""}],"src":"15856:178:21"},{"body":{"nativeSrc":"16186:220:21","nodeType":"YulBlock","src":"16186:220:21","statements":[{"nativeSrc":"16196:74:21","nodeType":"YulAssignment","src":"16196:74:21","value":{"arguments":[{"name":"pos","nativeSrc":"16262:3:21","nodeType":"YulIdentifier","src":"16262:3:21"},{"kind":"number","nativeSrc":"16267:2:21","nodeType":"YulLiteral","src":"16267:2:21","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"16203:58:21","nodeType":"YulIdentifier","src":"16203:58:21"},"nativeSrc":"16203:67:21","nodeType":"YulFunctionCall","src":"16203:67:21"},"variableNames":[{"name":"pos","nativeSrc":"16196:3:21","nodeType":"YulIdentifier","src":"16196:3:21"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"16368:3:21","nodeType":"YulIdentifier","src":"16368:3:21"}],"functionName":{"name":"store_literal_in_memory_21ef6b7918317f335757be4f30c7408f457723a97602be12bce7361115dd17f9","nativeSrc":"16279:88:21","nodeType":"YulIdentifier","src":"16279:88:21"},"nativeSrc":"16279:93:21","nodeType":"YulFunctionCall","src":"16279:93:21"},"nativeSrc":"16279:93:21","nodeType":"YulExpressionStatement","src":"16279:93:21"},{"nativeSrc":"16381:19:21","nodeType":"YulAssignment","src":"16381:19:21","value":{"arguments":[{"name":"pos","nativeSrc":"16392:3:21","nodeType":"YulIdentifier","src":"16392:3:21"},{"kind":"number","nativeSrc":"16397:2:21","nodeType":"YulLiteral","src":"16397:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16388:3:21","nodeType":"YulIdentifier","src":"16388:3:21"},"nativeSrc":"16388:12:21","nodeType":"YulFunctionCall","src":"16388:12:21"},"variableNames":[{"name":"end","nativeSrc":"16381:3:21","nodeType":"YulIdentifier","src":"16381:3:21"}]}]},"name":"abi_encode_t_stringliteral_21ef6b7918317f335757be4f30c7408f457723a97602be12bce7361115dd17f9_to_t_string_memory_ptr_fromStack","nativeSrc":"16040:366:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"16174:3:21","nodeType":"YulTypedName","src":"16174:3:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"16182:3:21","nodeType":"YulTypedName","src":"16182:3:21","type":""}],"src":"16040:366:21"},{"body":{"nativeSrc":"16583:248:21","nodeType":"YulBlock","src":"16583:248:21","statements":[{"nativeSrc":"16593:26:21","nodeType":"YulAssignment","src":"16593:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"16605:9:21","nodeType":"YulIdentifier","src":"16605:9:21"},{"kind":"number","nativeSrc":"16616:2:21","nodeType":"YulLiteral","src":"16616:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16601:3:21","nodeType":"YulIdentifier","src":"16601:3:21"},"nativeSrc":"16601:18:21","nodeType":"YulFunctionCall","src":"16601:18:21"},"variableNames":[{"name":"tail","nativeSrc":"16593:4:21","nodeType":"YulIdentifier","src":"16593:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16640:9:21","nodeType":"YulIdentifier","src":"16640:9:21"},{"kind":"number","nativeSrc":"16651:1:21","nodeType":"YulLiteral","src":"16651:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"16636:3:21","nodeType":"YulIdentifier","src":"16636:3:21"},"nativeSrc":"16636:17:21","nodeType":"YulFunctionCall","src":"16636:17:21"},{"arguments":[{"name":"tail","nativeSrc":"16659:4:21","nodeType":"YulIdentifier","src":"16659:4:21"},{"name":"headStart","nativeSrc":"16665:9:21","nodeType":"YulIdentifier","src":"16665:9:21"}],"functionName":{"name":"sub","nativeSrc":"16655:3:21","nodeType":"YulIdentifier","src":"16655:3:21"},"nativeSrc":"16655:20:21","nodeType":"YulFunctionCall","src":"16655:20:21"}],"functionName":{"name":"mstore","nativeSrc":"16629:6:21","nodeType":"YulIdentifier","src":"16629:6:21"},"nativeSrc":"16629:47:21","nodeType":"YulFunctionCall","src":"16629:47:21"},"nativeSrc":"16629:47:21","nodeType":"YulExpressionStatement","src":"16629:47:21"},{"nativeSrc":"16685:139:21","nodeType":"YulAssignment","src":"16685:139:21","value":{"arguments":[{"name":"tail","nativeSrc":"16819:4:21","nodeType":"YulIdentifier","src":"16819:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_21ef6b7918317f335757be4f30c7408f457723a97602be12bce7361115dd17f9_to_t_string_memory_ptr_fromStack","nativeSrc":"16693:124:21","nodeType":"YulIdentifier","src":"16693:124:21"},"nativeSrc":"16693:131:21","nodeType":"YulFunctionCall","src":"16693:131:21"},"variableNames":[{"name":"tail","nativeSrc":"16685:4:21","nodeType":"YulIdentifier","src":"16685:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_21ef6b7918317f335757be4f30c7408f457723a97602be12bce7361115dd17f9__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"16412:419:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16563:9:21","nodeType":"YulTypedName","src":"16563:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16578:4:21","nodeType":"YulTypedName","src":"16578:4:21","type":""}],"src":"16412:419:21"},{"body":{"nativeSrc":"16865:152:21","nodeType":"YulBlock","src":"16865:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"16882:1:21","nodeType":"YulLiteral","src":"16882:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"16885:77:21","nodeType":"YulLiteral","src":"16885:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"16875:6:21","nodeType":"YulIdentifier","src":"16875:6:21"},"nativeSrc":"16875:88:21","nodeType":"YulFunctionCall","src":"16875:88:21"},"nativeSrc":"16875:88:21","nodeType":"YulExpressionStatement","src":"16875:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"16979:1:21","nodeType":"YulLiteral","src":"16979:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"16982:4:21","nodeType":"YulLiteral","src":"16982:4:21","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"16972:6:21","nodeType":"YulIdentifier","src":"16972:6:21"},"nativeSrc":"16972:15:21","nodeType":"YulFunctionCall","src":"16972:15:21"},"nativeSrc":"16972:15:21","nodeType":"YulExpressionStatement","src":"16972:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17003:1:21","nodeType":"YulLiteral","src":"17003:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"17006:4:21","nodeType":"YulLiteral","src":"17006:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"16996:6:21","nodeType":"YulIdentifier","src":"16996:6:21"},"nativeSrc":"16996:15:21","nodeType":"YulFunctionCall","src":"16996:15:21"},"nativeSrc":"16996:15:21","nodeType":"YulExpressionStatement","src":"16996:15:21"}]},"name":"panic_error_0x32","nativeSrc":"16837:180:21","nodeType":"YulFunctionDefinition","src":"16837:180:21"},{"body":{"nativeSrc":"17261:537:21","nodeType":"YulBlock","src":"17261:537:21","statements":[{"nativeSrc":"17271:27:21","nodeType":"YulAssignment","src":"17271:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"17283:9:21","nodeType":"YulIdentifier","src":"17283:9:21"},{"kind":"number","nativeSrc":"17294:3:21","nodeType":"YulLiteral","src":"17294:3:21","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"17279:3:21","nodeType":"YulIdentifier","src":"17279:3:21"},"nativeSrc":"17279:19:21","nodeType":"YulFunctionCall","src":"17279:19:21"},"variableNames":[{"name":"tail","nativeSrc":"17271:4:21","nodeType":"YulIdentifier","src":"17271:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"17352:6:21","nodeType":"YulIdentifier","src":"17352:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"17365:9:21","nodeType":"YulIdentifier","src":"17365:9:21"},{"kind":"number","nativeSrc":"17376:1:21","nodeType":"YulLiteral","src":"17376:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"17361:3:21","nodeType":"YulIdentifier","src":"17361:3:21"},"nativeSrc":"17361:17:21","nodeType":"YulFunctionCall","src":"17361:17:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"17308:43:21","nodeType":"YulIdentifier","src":"17308:43:21"},"nativeSrc":"17308:71:21","nodeType":"YulFunctionCall","src":"17308:71:21"},"nativeSrc":"17308:71:21","nodeType":"YulExpressionStatement","src":"17308:71:21"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"17433:6:21","nodeType":"YulIdentifier","src":"17433:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"17446:9:21","nodeType":"YulIdentifier","src":"17446:9:21"},{"kind":"number","nativeSrc":"17457:2:21","nodeType":"YulLiteral","src":"17457:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17442:3:21","nodeType":"YulIdentifier","src":"17442:3:21"},"nativeSrc":"17442:18:21","nodeType":"YulFunctionCall","src":"17442:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"17389:43:21","nodeType":"YulIdentifier","src":"17389:43:21"},"nativeSrc":"17389:72:21","nodeType":"YulFunctionCall","src":"17389:72:21"},"nativeSrc":"17389:72:21","nodeType":"YulExpressionStatement","src":"17389:72:21"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"17515:6:21","nodeType":"YulIdentifier","src":"17515:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"17528:9:21","nodeType":"YulIdentifier","src":"17528:9:21"},{"kind":"number","nativeSrc":"17539:2:21","nodeType":"YulLiteral","src":"17539:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17524:3:21","nodeType":"YulIdentifier","src":"17524:3:21"},"nativeSrc":"17524:18:21","nodeType":"YulFunctionCall","src":"17524:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"17471:43:21","nodeType":"YulIdentifier","src":"17471:43:21"},"nativeSrc":"17471:72:21","nodeType":"YulFunctionCall","src":"17471:72:21"},"nativeSrc":"17471:72:21","nodeType":"YulExpressionStatement","src":"17471:72:21"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"17597:6:21","nodeType":"YulIdentifier","src":"17597:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"17610:9:21","nodeType":"YulIdentifier","src":"17610:9:21"},{"kind":"number","nativeSrc":"17621:2:21","nodeType":"YulLiteral","src":"17621:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"17606:3:21","nodeType":"YulIdentifier","src":"17606:3:21"},"nativeSrc":"17606:18:21","nodeType":"YulFunctionCall","src":"17606:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"17553:43:21","nodeType":"YulIdentifier","src":"17553:43:21"},"nativeSrc":"17553:72:21","nodeType":"YulFunctionCall","src":"17553:72:21"},"nativeSrc":"17553:72:21","nodeType":"YulExpressionStatement","src":"17553:72:21"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"17679:6:21","nodeType":"YulIdentifier","src":"17679:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"17692:9:21","nodeType":"YulIdentifier","src":"17692:9:21"},{"kind":"number","nativeSrc":"17703:3:21","nodeType":"YulLiteral","src":"17703:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"17688:3:21","nodeType":"YulIdentifier","src":"17688:3:21"},"nativeSrc":"17688:19:21","nodeType":"YulFunctionCall","src":"17688:19:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"17635:43:21","nodeType":"YulIdentifier","src":"17635:43:21"},"nativeSrc":"17635:73:21","nodeType":"YulFunctionCall","src":"17635:73:21"},"nativeSrc":"17635:73:21","nodeType":"YulExpressionStatement","src":"17635:73:21"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"17762:6:21","nodeType":"YulIdentifier","src":"17762:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"17775:9:21","nodeType":"YulIdentifier","src":"17775:9:21"},{"kind":"number","nativeSrc":"17786:3:21","nodeType":"YulLiteral","src":"17786:3:21","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"17771:3:21","nodeType":"YulIdentifier","src":"17771:3:21"},"nativeSrc":"17771:19:21","nodeType":"YulFunctionCall","src":"17771:19:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"17718:43:21","nodeType":"YulIdentifier","src":"17718:43:21"},"nativeSrc":"17718:73:21","nodeType":"YulFunctionCall","src":"17718:73:21"},"nativeSrc":"17718:73:21","nodeType":"YulExpressionStatement","src":"17718:73:21"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"17023:775:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17193:9:21","nodeType":"YulTypedName","src":"17193:9:21","type":""},{"name":"value5","nativeSrc":"17205:6:21","nodeType":"YulTypedName","src":"17205:6:21","type":""},{"name":"value4","nativeSrc":"17213:6:21","nodeType":"YulTypedName","src":"17213:6:21","type":""},{"name":"value3","nativeSrc":"17221:6:21","nodeType":"YulTypedName","src":"17221:6:21","type":""},{"name":"value2","nativeSrc":"17229:6:21","nodeType":"YulTypedName","src":"17229:6:21","type":""},{"name":"value1","nativeSrc":"17237:6:21","nodeType":"YulTypedName","src":"17237:6:21","type":""},{"name":"value0","nativeSrc":"17245:6:21","nodeType":"YulTypedName","src":"17245:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17256:4:21","nodeType":"YulTypedName","src":"17256:4:21","type":""}],"src":"17023:775:21"},{"body":{"nativeSrc":"17958:288:21","nodeType":"YulBlock","src":"17958:288:21","statements":[{"nativeSrc":"17968:26:21","nodeType":"YulAssignment","src":"17968:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"17980:9:21","nodeType":"YulIdentifier","src":"17980:9:21"},{"kind":"number","nativeSrc":"17991:2:21","nodeType":"YulLiteral","src":"17991:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"17976:3:21","nodeType":"YulIdentifier","src":"17976:3:21"},"nativeSrc":"17976:18:21","nodeType":"YulFunctionCall","src":"17976:18:21"},"variableNames":[{"name":"tail","nativeSrc":"17968:4:21","nodeType":"YulIdentifier","src":"17968:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"18048:6:21","nodeType":"YulIdentifier","src":"18048:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"18061:9:21","nodeType":"YulIdentifier","src":"18061:9:21"},{"kind":"number","nativeSrc":"18072:1:21","nodeType":"YulLiteral","src":"18072:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"18057:3:21","nodeType":"YulIdentifier","src":"18057:3:21"},"nativeSrc":"18057:17:21","nodeType":"YulFunctionCall","src":"18057:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"18004:43:21","nodeType":"YulIdentifier","src":"18004:43:21"},"nativeSrc":"18004:71:21","nodeType":"YulFunctionCall","src":"18004:71:21"},"nativeSrc":"18004:71:21","nodeType":"YulExpressionStatement","src":"18004:71:21"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"18129:6:21","nodeType":"YulIdentifier","src":"18129:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"18142:9:21","nodeType":"YulIdentifier","src":"18142:9:21"},{"kind":"number","nativeSrc":"18153:2:21","nodeType":"YulLiteral","src":"18153:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18138:3:21","nodeType":"YulIdentifier","src":"18138:3:21"},"nativeSrc":"18138:18:21","nodeType":"YulFunctionCall","src":"18138:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"18085:43:21","nodeType":"YulIdentifier","src":"18085:43:21"},"nativeSrc":"18085:72:21","nodeType":"YulFunctionCall","src":"18085:72:21"},"nativeSrc":"18085:72:21","nodeType":"YulExpressionStatement","src":"18085:72:21"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"18211:6:21","nodeType":"YulIdentifier","src":"18211:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"18224:9:21","nodeType":"YulIdentifier","src":"18224:9:21"},{"kind":"number","nativeSrc":"18235:2:21","nodeType":"YulLiteral","src":"18235:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"18220:3:21","nodeType":"YulIdentifier","src":"18220:3:21"},"nativeSrc":"18220:18:21","nodeType":"YulFunctionCall","src":"18220:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"18167:43:21","nodeType":"YulIdentifier","src":"18167:43:21"},"nativeSrc":"18167:72:21","nodeType":"YulFunctionCall","src":"18167:72:21"},"nativeSrc":"18167:72:21","nodeType":"YulExpressionStatement","src":"18167:72:21"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"17804:442:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17914:9:21","nodeType":"YulTypedName","src":"17914:9:21","type":""},{"name":"value2","nativeSrc":"17926:6:21","nodeType":"YulTypedName","src":"17926:6:21","type":""},{"name":"value1","nativeSrc":"17934:6:21","nodeType":"YulTypedName","src":"17934:6:21","type":""},{"name":"value0","nativeSrc":"17942:6:21","nodeType":"YulTypedName","src":"17942:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17953:4:21","nodeType":"YulTypedName","src":"17953:4:21","type":""}],"src":"17804:442:21"},{"body":{"nativeSrc":"18358:71:21","nodeType":"YulBlock","src":"18358:71:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"18380:6:21","nodeType":"YulIdentifier","src":"18380:6:21"},{"kind":"number","nativeSrc":"18388:1:21","nodeType":"YulLiteral","src":"18388:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"18376:3:21","nodeType":"YulIdentifier","src":"18376:3:21"},"nativeSrc":"18376:14:21","nodeType":"YulFunctionCall","src":"18376:14:21"},{"hexValue":"4172617261436f696e2074726164652069732064697361626c6564","kind":"string","nativeSrc":"18392:29:21","nodeType":"YulLiteral","src":"18392:29:21","type":"","value":"AraraCoin trade is disabled"}],"functionName":{"name":"mstore","nativeSrc":"18369:6:21","nodeType":"YulIdentifier","src":"18369:6:21"},"nativeSrc":"18369:53:21","nodeType":"YulFunctionCall","src":"18369:53:21"},"nativeSrc":"18369:53:21","nodeType":"YulExpressionStatement","src":"18369:53:21"}]},"name":"store_literal_in_memory_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7","nativeSrc":"18252:177:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"18350:6:21","nodeType":"YulTypedName","src":"18350:6:21","type":""}],"src":"18252:177:21"},{"body":{"nativeSrc":"18581:220:21","nodeType":"YulBlock","src":"18581:220:21","statements":[{"nativeSrc":"18591:74:21","nodeType":"YulAssignment","src":"18591:74:21","value":{"arguments":[{"name":"pos","nativeSrc":"18657:3:21","nodeType":"YulIdentifier","src":"18657:3:21"},{"kind":"number","nativeSrc":"18662:2:21","nodeType":"YulLiteral","src":"18662:2:21","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"18598:58:21","nodeType":"YulIdentifier","src":"18598:58:21"},"nativeSrc":"18598:67:21","nodeType":"YulFunctionCall","src":"18598:67:21"},"variableNames":[{"name":"pos","nativeSrc":"18591:3:21","nodeType":"YulIdentifier","src":"18591:3:21"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"18763:3:21","nodeType":"YulIdentifier","src":"18763:3:21"}],"functionName":{"name":"store_literal_in_memory_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7","nativeSrc":"18674:88:21","nodeType":"YulIdentifier","src":"18674:88:21"},"nativeSrc":"18674:93:21","nodeType":"YulFunctionCall","src":"18674:93:21"},"nativeSrc":"18674:93:21","nodeType":"YulExpressionStatement","src":"18674:93:21"},{"nativeSrc":"18776:19:21","nodeType":"YulAssignment","src":"18776:19:21","value":{"arguments":[{"name":"pos","nativeSrc":"18787:3:21","nodeType":"YulIdentifier","src":"18787:3:21"},{"kind":"number","nativeSrc":"18792:2:21","nodeType":"YulLiteral","src":"18792:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18783:3:21","nodeType":"YulIdentifier","src":"18783:3:21"},"nativeSrc":"18783:12:21","nodeType":"YulFunctionCall","src":"18783:12:21"},"variableNames":[{"name":"end","nativeSrc":"18776:3:21","nodeType":"YulIdentifier","src":"18776:3:21"}]}]},"name":"abi_encode_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7_to_t_string_memory_ptr_fromStack","nativeSrc":"18435:366:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"18569:3:21","nodeType":"YulTypedName","src":"18569:3:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"18577:3:21","nodeType":"YulTypedName","src":"18577:3:21","type":""}],"src":"18435:366:21"},{"body":{"nativeSrc":"18978:248:21","nodeType":"YulBlock","src":"18978:248:21","statements":[{"nativeSrc":"18988:26:21","nodeType":"YulAssignment","src":"18988:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"19000:9:21","nodeType":"YulIdentifier","src":"19000:9:21"},{"kind":"number","nativeSrc":"19011:2:21","nodeType":"YulLiteral","src":"19011:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18996:3:21","nodeType":"YulIdentifier","src":"18996:3:21"},"nativeSrc":"18996:18:21","nodeType":"YulFunctionCall","src":"18996:18:21"},"variableNames":[{"name":"tail","nativeSrc":"18988:4:21","nodeType":"YulIdentifier","src":"18988:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19035:9:21","nodeType":"YulIdentifier","src":"19035:9:21"},{"kind":"number","nativeSrc":"19046:1:21","nodeType":"YulLiteral","src":"19046:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"19031:3:21","nodeType":"YulIdentifier","src":"19031:3:21"},"nativeSrc":"19031:17:21","nodeType":"YulFunctionCall","src":"19031:17:21"},{"arguments":[{"name":"tail","nativeSrc":"19054:4:21","nodeType":"YulIdentifier","src":"19054:4:21"},{"name":"headStart","nativeSrc":"19060:9:21","nodeType":"YulIdentifier","src":"19060:9:21"}],"functionName":{"name":"sub","nativeSrc":"19050:3:21","nodeType":"YulIdentifier","src":"19050:3:21"},"nativeSrc":"19050:20:21","nodeType":"YulFunctionCall","src":"19050:20:21"}],"functionName":{"name":"mstore","nativeSrc":"19024:6:21","nodeType":"YulIdentifier","src":"19024:6:21"},"nativeSrc":"19024:47:21","nodeType":"YulFunctionCall","src":"19024:47:21"},"nativeSrc":"19024:47:21","nodeType":"YulExpressionStatement","src":"19024:47:21"},{"nativeSrc":"19080:139:21","nodeType":"YulAssignment","src":"19080:139:21","value":{"arguments":[{"name":"tail","nativeSrc":"19214:4:21","nodeType":"YulIdentifier","src":"19214:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7_to_t_string_memory_ptr_fromStack","nativeSrc":"19088:124:21","nodeType":"YulIdentifier","src":"19088:124:21"},"nativeSrc":"19088:131:21","nodeType":"YulFunctionCall","src":"19088:131:21"},"variableNames":[{"name":"tail","nativeSrc":"19080:4:21","nodeType":"YulIdentifier","src":"19080:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"18807:419:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18958:9:21","nodeType":"YulTypedName","src":"18958:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18973:4:21","nodeType":"YulTypedName","src":"18973:4:21","type":""}],"src":"18807:419:21"},{"body":{"nativeSrc":"19386:288:21","nodeType":"YulBlock","src":"19386:288:21","statements":[{"nativeSrc":"19396:26:21","nodeType":"YulAssignment","src":"19396:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"19408:9:21","nodeType":"YulIdentifier","src":"19408:9:21"},{"kind":"number","nativeSrc":"19419:2:21","nodeType":"YulLiteral","src":"19419:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"19404:3:21","nodeType":"YulIdentifier","src":"19404:3:21"},"nativeSrc":"19404:18:21","nodeType":"YulFunctionCall","src":"19404:18:21"},"variableNames":[{"name":"tail","nativeSrc":"19396:4:21","nodeType":"YulIdentifier","src":"19396:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"19476:6:21","nodeType":"YulIdentifier","src":"19476:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"19489:9:21","nodeType":"YulIdentifier","src":"19489:9:21"},{"kind":"number","nativeSrc":"19500:1:21","nodeType":"YulLiteral","src":"19500:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"19485:3:21","nodeType":"YulIdentifier","src":"19485:3:21"},"nativeSrc":"19485:17:21","nodeType":"YulFunctionCall","src":"19485:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"19432:43:21","nodeType":"YulIdentifier","src":"19432:43:21"},"nativeSrc":"19432:71:21","nodeType":"YulFunctionCall","src":"19432:71:21"},"nativeSrc":"19432:71:21","nodeType":"YulExpressionStatement","src":"19432:71:21"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"19557:6:21","nodeType":"YulIdentifier","src":"19557:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"19570:9:21","nodeType":"YulIdentifier","src":"19570:9:21"},{"kind":"number","nativeSrc":"19581:2:21","nodeType":"YulLiteral","src":"19581:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19566:3:21","nodeType":"YulIdentifier","src":"19566:3:21"},"nativeSrc":"19566:18:21","nodeType":"YulFunctionCall","src":"19566:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"19513:43:21","nodeType":"YulIdentifier","src":"19513:43:21"},"nativeSrc":"19513:72:21","nodeType":"YulFunctionCall","src":"19513:72:21"},"nativeSrc":"19513:72:21","nodeType":"YulExpressionStatement","src":"19513:72:21"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"19639:6:21","nodeType":"YulIdentifier","src":"19639:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"19652:9:21","nodeType":"YulIdentifier","src":"19652:9:21"},{"kind":"number","nativeSrc":"19663:2:21","nodeType":"YulLiteral","src":"19663:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"19648:3:21","nodeType":"YulIdentifier","src":"19648:3:21"},"nativeSrc":"19648:18:21","nodeType":"YulFunctionCall","src":"19648:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"19595:43:21","nodeType":"YulIdentifier","src":"19595:43:21"},"nativeSrc":"19595:72:21","nodeType":"YulFunctionCall","src":"19595:72:21"},"nativeSrc":"19595:72:21","nodeType":"YulExpressionStatement","src":"19595:72:21"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"19232:442:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19342:9:21","nodeType":"YulTypedName","src":"19342:9:21","type":""},{"name":"value2","nativeSrc":"19354:6:21","nodeType":"YulTypedName","src":"19354:6:21","type":""},{"name":"value1","nativeSrc":"19362:6:21","nodeType":"YulTypedName","src":"19362:6:21","type":""},{"name":"value0","nativeSrc":"19370:6:21","nodeType":"YulTypedName","src":"19370:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"19381:4:21","nodeType":"YulTypedName","src":"19381:4:21","type":""}],"src":"19232:442:21"},{"body":{"nativeSrc":"19743:80:21","nodeType":"YulBlock","src":"19743:80:21","statements":[{"nativeSrc":"19753:22:21","nodeType":"YulAssignment","src":"19753:22:21","value":{"arguments":[{"name":"offset","nativeSrc":"19768:6:21","nodeType":"YulIdentifier","src":"19768:6:21"}],"functionName":{"name":"mload","nativeSrc":"19762:5:21","nodeType":"YulIdentifier","src":"19762:5:21"},"nativeSrc":"19762:13:21","nodeType":"YulFunctionCall","src":"19762:13:21"},"variableNames":[{"name":"value","nativeSrc":"19753:5:21","nodeType":"YulIdentifier","src":"19753:5:21"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"19811:5:21","nodeType":"YulIdentifier","src":"19811:5:21"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"19784:26:21","nodeType":"YulIdentifier","src":"19784:26:21"},"nativeSrc":"19784:33:21","nodeType":"YulFunctionCall","src":"19784:33:21"},"nativeSrc":"19784:33:21","nodeType":"YulExpressionStatement","src":"19784:33:21"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"19680:143:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"19721:6:21","nodeType":"YulTypedName","src":"19721:6:21","type":""},{"name":"end","nativeSrc":"19729:3:21","nodeType":"YulTypedName","src":"19729:3:21","type":""}],"returnVariables":[{"name":"value","nativeSrc":"19737:5:21","nodeType":"YulTypedName","src":"19737:5:21","type":""}],"src":"19680:143:21"},{"body":{"nativeSrc":"19906:274:21","nodeType":"YulBlock","src":"19906:274:21","statements":[{"body":{"nativeSrc":"19952:83:21","nodeType":"YulBlock","src":"19952:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"19954:77:21","nodeType":"YulIdentifier","src":"19954:77:21"},"nativeSrc":"19954:79:21","nodeType":"YulFunctionCall","src":"19954:79:21"},"nativeSrc":"19954:79:21","nodeType":"YulExpressionStatement","src":"19954:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"19927:7:21","nodeType":"YulIdentifier","src":"19927:7:21"},{"name":"headStart","nativeSrc":"19936:9:21","nodeType":"YulIdentifier","src":"19936:9:21"}],"functionName":{"name":"sub","nativeSrc":"19923:3:21","nodeType":"YulIdentifier","src":"19923:3:21"},"nativeSrc":"19923:23:21","nodeType":"YulFunctionCall","src":"19923:23:21"},{"kind":"number","nativeSrc":"19948:2:21","nodeType":"YulLiteral","src":"19948:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"19919:3:21","nodeType":"YulIdentifier","src":"19919:3:21"},"nativeSrc":"19919:32:21","nodeType":"YulFunctionCall","src":"19919:32:21"},"nativeSrc":"19916:119:21","nodeType":"YulIf","src":"19916:119:21"},{"nativeSrc":"20045:128:21","nodeType":"YulBlock","src":"20045:128:21","statements":[{"nativeSrc":"20060:15:21","nodeType":"YulVariableDeclaration","src":"20060:15:21","value":{"kind":"number","nativeSrc":"20074:1:21","nodeType":"YulLiteral","src":"20074:1:21","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"20064:6:21","nodeType":"YulTypedName","src":"20064:6:21","type":""}]},{"nativeSrc":"20089:74:21","nodeType":"YulAssignment","src":"20089:74:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20135:9:21","nodeType":"YulIdentifier","src":"20135:9:21"},{"name":"offset","nativeSrc":"20146:6:21","nodeType":"YulIdentifier","src":"20146:6:21"}],"functionName":{"name":"add","nativeSrc":"20131:3:21","nodeType":"YulIdentifier","src":"20131:3:21"},"nativeSrc":"20131:22:21","nodeType":"YulFunctionCall","src":"20131:22:21"},{"name":"dataEnd","nativeSrc":"20155:7:21","nodeType":"YulIdentifier","src":"20155:7:21"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"20099:31:21","nodeType":"YulIdentifier","src":"20099:31:21"},"nativeSrc":"20099:64:21","nodeType":"YulFunctionCall","src":"20099:64:21"},"variableNames":[{"name":"value0","nativeSrc":"20089:6:21","nodeType":"YulIdentifier","src":"20089:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"19829:351:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19876:9:21","nodeType":"YulTypedName","src":"19876:9:21","type":""},{"name":"dataEnd","nativeSrc":"19887:7:21","nodeType":"YulTypedName","src":"19887:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"19899:6:21","nodeType":"YulTypedName","src":"19899:6:21","type":""}],"src":"19829:351:21"},{"body":{"nativeSrc":"20214:152:21","nodeType":"YulBlock","src":"20214:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"20231:1:21","nodeType":"YulLiteral","src":"20231:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"20234:77:21","nodeType":"YulLiteral","src":"20234:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"20224:6:21","nodeType":"YulIdentifier","src":"20224:6:21"},"nativeSrc":"20224:88:21","nodeType":"YulFunctionCall","src":"20224:88:21"},"nativeSrc":"20224:88:21","nodeType":"YulExpressionStatement","src":"20224:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"20328:1:21","nodeType":"YulLiteral","src":"20328:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"20331:4:21","nodeType":"YulLiteral","src":"20331:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"20321:6:21","nodeType":"YulIdentifier","src":"20321:6:21"},"nativeSrc":"20321:15:21","nodeType":"YulFunctionCall","src":"20321:15:21"},"nativeSrc":"20321:15:21","nodeType":"YulExpressionStatement","src":"20321:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"20352:1:21","nodeType":"YulLiteral","src":"20352:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"20355:4:21","nodeType":"YulLiteral","src":"20355:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"20345:6:21","nodeType":"YulIdentifier","src":"20345:6:21"},"nativeSrc":"20345:15:21","nodeType":"YulFunctionCall","src":"20345:15:21"},"nativeSrc":"20345:15:21","nodeType":"YulExpressionStatement","src":"20345:15:21"}]},"name":"panic_error_0x11","nativeSrc":"20186:180:21","nodeType":"YulFunctionDefinition","src":"20186:180:21"},{"body":{"nativeSrc":"20417:149:21","nodeType":"YulBlock","src":"20417:149:21","statements":[{"nativeSrc":"20427:25:21","nodeType":"YulAssignment","src":"20427:25:21","value":{"arguments":[{"name":"x","nativeSrc":"20450:1:21","nodeType":"YulIdentifier","src":"20450:1:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"20432:17:21","nodeType":"YulIdentifier","src":"20432:17:21"},"nativeSrc":"20432:20:21","nodeType":"YulFunctionCall","src":"20432:20:21"},"variableNames":[{"name":"x","nativeSrc":"20427:1:21","nodeType":"YulIdentifier","src":"20427:1:21"}]},{"nativeSrc":"20461:25:21","nodeType":"YulAssignment","src":"20461:25:21","value":{"arguments":[{"name":"y","nativeSrc":"20484:1:21","nodeType":"YulIdentifier","src":"20484:1:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"20466:17:21","nodeType":"YulIdentifier","src":"20466:17:21"},"nativeSrc":"20466:20:21","nodeType":"YulFunctionCall","src":"20466:20:21"},"variableNames":[{"name":"y","nativeSrc":"20461:1:21","nodeType":"YulIdentifier","src":"20461:1:21"}]},{"nativeSrc":"20495:17:21","nodeType":"YulAssignment","src":"20495:17:21","value":{"arguments":[{"name":"x","nativeSrc":"20507:1:21","nodeType":"YulIdentifier","src":"20507:1:21"},{"name":"y","nativeSrc":"20510:1:21","nodeType":"YulIdentifier","src":"20510:1:21"}],"functionName":{"name":"sub","nativeSrc":"20503:3:21","nodeType":"YulIdentifier","src":"20503:3:21"},"nativeSrc":"20503:9:21","nodeType":"YulFunctionCall","src":"20503:9:21"},"variableNames":[{"name":"diff","nativeSrc":"20495:4:21","nodeType":"YulIdentifier","src":"20495:4:21"}]},{"body":{"nativeSrc":"20537:22:21","nodeType":"YulBlock","src":"20537:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"20539:16:21","nodeType":"YulIdentifier","src":"20539:16:21"},"nativeSrc":"20539:18:21","nodeType":"YulFunctionCall","src":"20539:18:21"},"nativeSrc":"20539:18:21","nodeType":"YulExpressionStatement","src":"20539:18:21"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"20528:4:21","nodeType":"YulIdentifier","src":"20528:4:21"},{"name":"x","nativeSrc":"20534:1:21","nodeType":"YulIdentifier","src":"20534:1:21"}],"functionName":{"name":"gt","nativeSrc":"20525:2:21","nodeType":"YulIdentifier","src":"20525:2:21"},"nativeSrc":"20525:11:21","nodeType":"YulFunctionCall","src":"20525:11:21"},"nativeSrc":"20522:37:21","nodeType":"YulIf","src":"20522:37:21"}]},"name":"checked_sub_t_uint256","nativeSrc":"20372:194:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"20403:1:21","nodeType":"YulTypedName","src":"20403:1:21","type":""},{"name":"y","nativeSrc":"20406:1:21","nodeType":"YulTypedName","src":"20406:1:21","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"20412:4:21","nodeType":"YulTypedName","src":"20412:4:21","type":""}],"src":"20372:194:21"},{"body":{"nativeSrc":"20782:454:21","nodeType":"YulBlock","src":"20782:454:21","statements":[{"nativeSrc":"20792:27:21","nodeType":"YulAssignment","src":"20792:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"20804:9:21","nodeType":"YulIdentifier","src":"20804:9:21"},{"kind":"number","nativeSrc":"20815:3:21","nodeType":"YulLiteral","src":"20815:3:21","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"20800:3:21","nodeType":"YulIdentifier","src":"20800:3:21"},"nativeSrc":"20800:19:21","nodeType":"YulFunctionCall","src":"20800:19:21"},"variableNames":[{"name":"tail","nativeSrc":"20792:4:21","nodeType":"YulIdentifier","src":"20792:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"20873:6:21","nodeType":"YulIdentifier","src":"20873:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"20886:9:21","nodeType":"YulIdentifier","src":"20886:9:21"},{"kind":"number","nativeSrc":"20897:1:21","nodeType":"YulLiteral","src":"20897:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"20882:3:21","nodeType":"YulIdentifier","src":"20882:3:21"},"nativeSrc":"20882:17:21","nodeType":"YulFunctionCall","src":"20882:17:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"20829:43:21","nodeType":"YulIdentifier","src":"20829:43:21"},"nativeSrc":"20829:71:21","nodeType":"YulFunctionCall","src":"20829:71:21"},"nativeSrc":"20829:71:21","nodeType":"YulExpressionStatement","src":"20829:71:21"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"20954:6:21","nodeType":"YulIdentifier","src":"20954:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"20967:9:21","nodeType":"YulIdentifier","src":"20967:9:21"},{"kind":"number","nativeSrc":"20978:2:21","nodeType":"YulLiteral","src":"20978:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20963:3:21","nodeType":"YulIdentifier","src":"20963:3:21"},"nativeSrc":"20963:18:21","nodeType":"YulFunctionCall","src":"20963:18:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"20910:43:21","nodeType":"YulIdentifier","src":"20910:43:21"},"nativeSrc":"20910:72:21","nodeType":"YulFunctionCall","src":"20910:72:21"},"nativeSrc":"20910:72:21","nodeType":"YulExpressionStatement","src":"20910:72:21"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"21036:6:21","nodeType":"YulIdentifier","src":"21036:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"21049:9:21","nodeType":"YulIdentifier","src":"21049:9:21"},{"kind":"number","nativeSrc":"21060:2:21","nodeType":"YulLiteral","src":"21060:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"21045:3:21","nodeType":"YulIdentifier","src":"21045:3:21"},"nativeSrc":"21045:18:21","nodeType":"YulFunctionCall","src":"21045:18:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"20992:43:21","nodeType":"YulIdentifier","src":"20992:43:21"},"nativeSrc":"20992:72:21","nodeType":"YulFunctionCall","src":"20992:72:21"},"nativeSrc":"20992:72:21","nodeType":"YulExpressionStatement","src":"20992:72:21"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"21118:6:21","nodeType":"YulIdentifier","src":"21118:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"21131:9:21","nodeType":"YulIdentifier","src":"21131:9:21"},{"kind":"number","nativeSrc":"21142:2:21","nodeType":"YulLiteral","src":"21142:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"21127:3:21","nodeType":"YulIdentifier","src":"21127:3:21"},"nativeSrc":"21127:18:21","nodeType":"YulFunctionCall","src":"21127:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"21074:43:21","nodeType":"YulIdentifier","src":"21074:43:21"},"nativeSrc":"21074:72:21","nodeType":"YulFunctionCall","src":"21074:72:21"},"nativeSrc":"21074:72:21","nodeType":"YulExpressionStatement","src":"21074:72:21"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"21200:6:21","nodeType":"YulIdentifier","src":"21200:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"21213:9:21","nodeType":"YulIdentifier","src":"21213:9:21"},{"kind":"number","nativeSrc":"21224:3:21","nodeType":"YulLiteral","src":"21224:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"21209:3:21","nodeType":"YulIdentifier","src":"21209:3:21"},"nativeSrc":"21209:19:21","nodeType":"YulFunctionCall","src":"21209:19:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"21156:43:21","nodeType":"YulIdentifier","src":"21156:43:21"},"nativeSrc":"21156:73:21","nodeType":"YulFunctionCall","src":"21156:73:21"},"nativeSrc":"21156:73:21","nodeType":"YulExpressionStatement","src":"21156:73:21"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"20572:664:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20722:9:21","nodeType":"YulTypedName","src":"20722:9:21","type":""},{"name":"value4","nativeSrc":"20734:6:21","nodeType":"YulTypedName","src":"20734:6:21","type":""},{"name":"value3","nativeSrc":"20742:6:21","nodeType":"YulTypedName","src":"20742:6:21","type":""},{"name":"value2","nativeSrc":"20750:6:21","nodeType":"YulTypedName","src":"20750:6:21","type":""},{"name":"value1","nativeSrc":"20758:6:21","nodeType":"YulTypedName","src":"20758:6:21","type":""},{"name":"value0","nativeSrc":"20766:6:21","nodeType":"YulTypedName","src":"20766:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"20777:4:21","nodeType":"YulTypedName","src":"20777:4:21","type":""}],"src":"20572:664:21"},{"body":{"nativeSrc":"21420:367:21","nodeType":"YulBlock","src":"21420:367:21","statements":[{"nativeSrc":"21430:27:21","nodeType":"YulAssignment","src":"21430:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"21442:9:21","nodeType":"YulIdentifier","src":"21442:9:21"},{"kind":"number","nativeSrc":"21453:3:21","nodeType":"YulLiteral","src":"21453:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"21438:3:21","nodeType":"YulIdentifier","src":"21438:3:21"},"nativeSrc":"21438:19:21","nodeType":"YulFunctionCall","src":"21438:19:21"},"variableNames":[{"name":"tail","nativeSrc":"21430:4:21","nodeType":"YulIdentifier","src":"21430:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"21511:6:21","nodeType":"YulIdentifier","src":"21511:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"21524:9:21","nodeType":"YulIdentifier","src":"21524:9:21"},{"kind":"number","nativeSrc":"21535:1:21","nodeType":"YulLiteral","src":"21535:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"21520:3:21","nodeType":"YulIdentifier","src":"21520:3:21"},"nativeSrc":"21520:17:21","nodeType":"YulFunctionCall","src":"21520:17:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"21467:43:21","nodeType":"YulIdentifier","src":"21467:43:21"},"nativeSrc":"21467:71:21","nodeType":"YulFunctionCall","src":"21467:71:21"},"nativeSrc":"21467:71:21","nodeType":"YulExpressionStatement","src":"21467:71:21"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"21588:6:21","nodeType":"YulIdentifier","src":"21588:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"21601:9:21","nodeType":"YulIdentifier","src":"21601:9:21"},{"kind":"number","nativeSrc":"21612:2:21","nodeType":"YulLiteral","src":"21612:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21597:3:21","nodeType":"YulIdentifier","src":"21597:3:21"},"nativeSrc":"21597:18:21","nodeType":"YulFunctionCall","src":"21597:18:21"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"21548:39:21","nodeType":"YulIdentifier","src":"21548:39:21"},"nativeSrc":"21548:68:21","nodeType":"YulFunctionCall","src":"21548:68:21"},"nativeSrc":"21548:68:21","nodeType":"YulExpressionStatement","src":"21548:68:21"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"21670:6:21","nodeType":"YulIdentifier","src":"21670:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"21683:9:21","nodeType":"YulIdentifier","src":"21683:9:21"},{"kind":"number","nativeSrc":"21694:2:21","nodeType":"YulLiteral","src":"21694:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"21679:3:21","nodeType":"YulIdentifier","src":"21679:3:21"},"nativeSrc":"21679:18:21","nodeType":"YulFunctionCall","src":"21679:18:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"21626:43:21","nodeType":"YulIdentifier","src":"21626:43:21"},"nativeSrc":"21626:72:21","nodeType":"YulFunctionCall","src":"21626:72:21"},"nativeSrc":"21626:72:21","nodeType":"YulExpressionStatement","src":"21626:72:21"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"21752:6:21","nodeType":"YulIdentifier","src":"21752:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"21765:9:21","nodeType":"YulIdentifier","src":"21765:9:21"},{"kind":"number","nativeSrc":"21776:2:21","nodeType":"YulLiteral","src":"21776:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"21761:3:21","nodeType":"YulIdentifier","src":"21761:3:21"},"nativeSrc":"21761:18:21","nodeType":"YulFunctionCall","src":"21761:18:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"21708:43:21","nodeType":"YulIdentifier","src":"21708:43:21"},"nativeSrc":"21708:72:21","nodeType":"YulFunctionCall","src":"21708:72:21"},"nativeSrc":"21708:72:21","nodeType":"YulExpressionStatement","src":"21708:72:21"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"21242:545:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21368:9:21","nodeType":"YulTypedName","src":"21368:9:21","type":""},{"name":"value3","nativeSrc":"21380:6:21","nodeType":"YulTypedName","src":"21380:6:21","type":""},{"name":"value2","nativeSrc":"21388:6:21","nodeType":"YulTypedName","src":"21388:6:21","type":""},{"name":"value1","nativeSrc":"21396:6:21","nodeType":"YulTypedName","src":"21396:6:21","type":""},{"name":"value0","nativeSrc":"21404:6:21","nodeType":"YulTypedName","src":"21404:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21415:4:21","nodeType":"YulTypedName","src":"21415:4:21","type":""}],"src":"21242:545:21"},{"body":{"nativeSrc":"21821:152:21","nodeType":"YulBlock","src":"21821:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"21838:1:21","nodeType":"YulLiteral","src":"21838:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"21841:77:21","nodeType":"YulLiteral","src":"21841:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"21831:6:21","nodeType":"YulIdentifier","src":"21831:6:21"},"nativeSrc":"21831:88:21","nodeType":"YulFunctionCall","src":"21831:88:21"},"nativeSrc":"21831:88:21","nodeType":"YulExpressionStatement","src":"21831:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"21935:1:21","nodeType":"YulLiteral","src":"21935:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"21938:4:21","nodeType":"YulLiteral","src":"21938:4:21","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"21928:6:21","nodeType":"YulIdentifier","src":"21928:6:21"},"nativeSrc":"21928:15:21","nodeType":"YulFunctionCall","src":"21928:15:21"},"nativeSrc":"21928:15:21","nodeType":"YulExpressionStatement","src":"21928:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"21959:1:21","nodeType":"YulLiteral","src":"21959:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"21962:4:21","nodeType":"YulLiteral","src":"21962:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"21952:6:21","nodeType":"YulIdentifier","src":"21952:6:21"},"nativeSrc":"21952:15:21","nodeType":"YulFunctionCall","src":"21952:15:21"},"nativeSrc":"21952:15:21","nodeType":"YulExpressionStatement","src":"21952:15:21"}]},"name":"panic_error_0x21","nativeSrc":"21793:180:21","nodeType":"YulFunctionDefinition","src":"21793:180:21"},{"body":{"nativeSrc":"22023:147:21","nodeType":"YulBlock","src":"22023:147:21","statements":[{"nativeSrc":"22033:25:21","nodeType":"YulAssignment","src":"22033:25:21","value":{"arguments":[{"name":"x","nativeSrc":"22056:1:21","nodeType":"YulIdentifier","src":"22056:1:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"22038:17:21","nodeType":"YulIdentifier","src":"22038:17:21"},"nativeSrc":"22038:20:21","nodeType":"YulFunctionCall","src":"22038:20:21"},"variableNames":[{"name":"x","nativeSrc":"22033:1:21","nodeType":"YulIdentifier","src":"22033:1:21"}]},{"nativeSrc":"22067:25:21","nodeType":"YulAssignment","src":"22067:25:21","value":{"arguments":[{"name":"y","nativeSrc":"22090:1:21","nodeType":"YulIdentifier","src":"22090:1:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"22072:17:21","nodeType":"YulIdentifier","src":"22072:17:21"},"nativeSrc":"22072:20:21","nodeType":"YulFunctionCall","src":"22072:20:21"},"variableNames":[{"name":"y","nativeSrc":"22067:1:21","nodeType":"YulIdentifier","src":"22067:1:21"}]},{"nativeSrc":"22101:16:21","nodeType":"YulAssignment","src":"22101:16:21","value":{"arguments":[{"name":"x","nativeSrc":"22112:1:21","nodeType":"YulIdentifier","src":"22112:1:21"},{"name":"y","nativeSrc":"22115:1:21","nodeType":"YulIdentifier","src":"22115:1:21"}],"functionName":{"name":"add","nativeSrc":"22108:3:21","nodeType":"YulIdentifier","src":"22108:3:21"},"nativeSrc":"22108:9:21","nodeType":"YulFunctionCall","src":"22108:9:21"},"variableNames":[{"name":"sum","nativeSrc":"22101:3:21","nodeType":"YulIdentifier","src":"22101:3:21"}]},{"body":{"nativeSrc":"22141:22:21","nodeType":"YulBlock","src":"22141:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"22143:16:21","nodeType":"YulIdentifier","src":"22143:16:21"},"nativeSrc":"22143:18:21","nodeType":"YulFunctionCall","src":"22143:18:21"},"nativeSrc":"22143:18:21","nodeType":"YulExpressionStatement","src":"22143:18:21"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"22133:1:21","nodeType":"YulIdentifier","src":"22133:1:21"},{"name":"sum","nativeSrc":"22136:3:21","nodeType":"YulIdentifier","src":"22136:3:21"}],"functionName":{"name":"gt","nativeSrc":"22130:2:21","nodeType":"YulIdentifier","src":"22130:2:21"},"nativeSrc":"22130:10:21","nodeType":"YulFunctionCall","src":"22130:10:21"},"nativeSrc":"22127:36:21","nodeType":"YulIf","src":"22127:36:21"}]},"name":"checked_add_t_uint256","nativeSrc":"21979:191:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"22010:1:21","nodeType":"YulTypedName","src":"22010:1:21","type":""},{"name":"y","nativeSrc":"22013:1:21","nodeType":"YulTypedName","src":"22013:1:21","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"22019:3:21","nodeType":"YulTypedName","src":"22019:3:21","type":""}],"src":"21979:191:21"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ITaxHandler_$4670_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ITaxHandler_$4670_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ITaxHandler_$4670_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ITaxHandler_$4670__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ITaxHandler_$4670_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4(memPtr) {\n\n        mstore(add(memPtr, 0), \"AraraCoin trading already enable\")\n\n        mstore(add(memPtr, 32), \"d\")\n\n    }\n\n    function abi_encode_t_stringliteral_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9687f3901e79b4019fdb9d894f654926caa3e034f8885f50baafda2248920cd4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_21ef6b7918317f335757be4f30c7408f457723a97602be12bce7361115dd17f9(memPtr) {\n\n        mstore(add(memPtr, 0), \"AraraCoin invalid parameters\")\n\n    }\n\n    function abi_encode_t_stringliteral_21ef6b7918317f335757be4f30c7408f457723a97602be12bce7361115dd17f9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_21ef6b7918317f335757be4f30c7408f457723a97602be12bce7361115dd17f9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_21ef6b7918317f335757be4f30c7408f457723a97602be12bce7361115dd17f9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_21ef6b7918317f335757be4f30c7408f457723a97602be12bce7361115dd17f9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7(memPtr) {\n\n        mstore(add(memPtr, 0), \"AraraCoin trade is disabled\")\n\n    }\n\n    function abi_encode_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3228f29c5fa4d36d0f9fff934d466e2bb24e33c7e7e414c5703256339e17f0c7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2167":[{"length":32,"start":4900}],"2169":[{"length":32,"start":4859}],"2171":[{"length":32,"start":4773}],"2173":[{"length":32,"start":6550}],"2175":[{"length":32,"start":6583}],"2178":[{"length":32,"start":5367}],"2181":[{"length":32,"start":5426}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x211 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xA4771EA4 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x5CE JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5EA JUMPI DUP1 PUSH4 0xEA414B28 EQ PUSH2 0x61A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x636 JUMPI DUP1 PUSH4 0xFB3D924A EQ PUSH2 0x652 JUMPI PUSH2 0x211 JUMP JUMPDEST DUP1 PUSH4 0xA4771EA4 EQ PUSH2 0x546 JUMPI DUP1 PUSH4 0xA781C954 EQ PUSH2 0x564 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x582 JUMPI DUP1 PUSH4 0xCA40F1C4 EQ PUSH2 0x5B2 JUMPI PUSH2 0x211 JUMP JUMPDEST DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x4AC JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x4DC JUMPI DUP1 PUSH4 0x8A8C523C EQ PUSH2 0x500 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x528 JUMPI PUSH2 0x211 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0x75F0A874 EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0x77BA8280 EQ PUSH2 0x48E JUMPI PUSH2 0x211 JUMP JUMPDEST DUP1 PUSH4 0x1FC75E41 GT PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x3644E515 GT PUSH2 0x177 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0x488D4A51 EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0x4A3084EB EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0x4ADA218B EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0x6409F534 EQ PUSH2 0x418 JUMPI PUSH2 0x211 JUMP JUMPDEST DUP1 PUSH4 0x1FC75E41 EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x2DC0562D EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x384 JUMPI PUSH2 0x211 JUMP JUMPDEST DUP1 PUSH4 0x16942450 GT PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x16942450 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x1798FB80 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x1F640ED8 EQ PUSH2 0x2FA JUMPI PUSH2 0x211 JUMP JUMPDEST DUP1 PUSH4 0x1089B92 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x12280BA8 EQ PUSH2 0x282 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21E PUSH2 0x670 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23C PUSH2 0x696 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x21E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x2276 JUMP JUMPDEST PUSH2 0x728 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x22D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28A PUSH2 0x74B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x234B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A8 PUSH2 0x771 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C6 PUSH2 0x797 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E4 PUSH2 0x7BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F1 SWAP2 SWAP1 PUSH2 0x2375 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x302 PUSH2 0x7C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x320 PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x350 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x2390 JUMP JUMPDEST PUSH2 0x813 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x22D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36E PUSH2 0x842 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38C PUSH2 0x868 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x399 SWAP2 SWAP1 PUSH2 0x23FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AA PUSH2 0x871 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0x2433 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D5 SWAP2 SWAP1 PUSH2 0x244E JUMP JUMPDEST PUSH2 0x880 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E4 PUSH2 0x92C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x402 PUSH2 0x952 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40F SWAP2 SWAP1 PUSH2 0x22D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x420 PUSH2 0x965 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x450 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44B SWAP2 SWAP1 PUSH2 0x244E JUMP JUMPDEST PUSH2 0x98B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45D SWAP2 SWAP1 PUSH2 0x2375 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x46E PUSH2 0x9D3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x478 PUSH2 0x9E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x485 SWAP2 SWAP1 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x496 PUSH2 0xA0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A3 SWAP2 SWAP1 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0x244E JUMP JUMPDEST PUSH2 0xA33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D3 SWAP2 SWAP1 PUSH2 0x2375 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E4 PUSH2 0xA45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F7 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x508 PUSH2 0xAEF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x512 PUSH2 0xB90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51F SWAP2 SWAP1 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x530 PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53D SWAP2 SWAP1 PUSH2 0x21E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54E PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55B SWAP2 SWAP1 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56C PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x579 SWAP2 SWAP1 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x597 SWAP2 SWAP1 PUSH2 0x2276 JUMP JUMPDEST PUSH2 0xC98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A9 SWAP2 SWAP1 PUSH2 0x22D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0x265D JUMP JUMPDEST PUSH2 0xCBB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E3 SWAP2 SWAP1 PUSH2 0x2702 JUMP JUMPDEST PUSH2 0xDB5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x604 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5FF SWAP2 SWAP1 PUSH2 0x27A4 JUMP JUMPDEST PUSH2 0xEFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x611 SWAP2 SWAP1 PUSH2 0x2375 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x634 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x62F SWAP2 SWAP1 PUSH2 0x244E JUMP JUMPDEST PUSH2 0xF84 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x650 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x64B SWAP2 SWAP1 PUSH2 0x244E JUMP JUMPDEST PUSH2 0x1053 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x65A PUSH2 0x10D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x667 SWAP2 SWAP1 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0xE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x6A5 SWAP1 PUSH2 0x2813 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6D1 SWAP1 PUSH2 0x2813 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x71E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6F3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x71E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x701 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x733 PUSH2 0x10FF JUMP JUMPDEST SWAP1 POP PUSH2 0x740 DUP2 DUP6 DUP6 PUSH2 0x1107 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x16 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x81E PUSH2 0x10FF JUMP JUMPDEST SWAP1 POP PUSH2 0x82B DUP6 DUP3 DUP6 PUSH2 0x1119 JUMP JUMPDEST PUSH2 0x836 DUP6 DUP6 DUP6 PUSH2 0x11AD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x15 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87B PUSH2 0x12A1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x888 PUSH2 0x1358 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x16 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x16 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH31 0xD910C9481701BA32AFE0C247572AAECE27072F230C8EC769BF245FC0B38DE6 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x920 SWAP3 SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x14 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x16 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9DB PUSH2 0x1358 JUMP JUMPDEST PUSH2 0x9E5 PUSH1 0x0 PUSH2 0x13DF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA3E DUP3 PUSH2 0x14A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0xA59 PUSH2 0x14EE JUMP JUMPDEST PUSH2 0xA61 PUSH2 0x1529 JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA82 JUMPI PUSH2 0xA81 PUSH2 0x286D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAB0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH2 0xAF7 PUSH2 0x1358 JUMP JUMPDEST PUSH1 0x16 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB47 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3E SWAP1 PUSH2 0x290E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x16 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x799663458A5EF2936F7FA0C99B3336C69C25890F82974F04E811E5BB359186C7 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xBC9 SWAP1 PUSH2 0x2813 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBF5 SWAP1 PUSH2 0x2813 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC42 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC17 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC42 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC25 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x13 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xCA3 PUSH2 0x10FF JUMP JUMPDEST SWAP1 POP PUSH2 0xCB0 DUP2 DUP6 DUP6 PUSH2 0x11AD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCC3 PUSH2 0x1358 JUMP JUMPDEST PUSH1 0x16 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD13 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0A SWAP1 PUSH2 0x290E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 SWAP1 POP SUB PUSH2 0xD59 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD50 SWAP1 PUSH2 0x297A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP3 SWAP1 POP DUP2 LT ISZERO PUSH2 0xDB0 JUMPI PUSH2 0xDA2 DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0xD7D JUMPI PUSH2 0xD7C PUSH2 0x299A JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xD92 SWAP2 SWAP1 PUSH2 0x244E JUMP JUMPDEST PUSH1 0x17 PUSH2 0x1564 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xD5C JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xDFA JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF1 SWAP2 SWAP1 PUSH2 0x2375 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xE29 DUP13 PUSH2 0x1594 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE3F SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xE62 DUP3 PUSH2 0x15EB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE72 DUP3 DUP8 DUP8 DUP8 PUSH2 0x1605 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEE6 JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEDD SWAP3 SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEF1 DUP11 DUP11 DUP11 PUSH2 0x1107 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF8C PUSH2 0x1358 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x15 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x15 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xA3568000DA48CC6E5E2C8E7A94D1BFA3607D1734C7DBD7B04AC9D77316B471A DUP2 PUSH1 0x15 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x1047 SWAP3 SWAP2 SWAP1 PUSH2 0x2844 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x105B PUSH2 0x1358 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10CD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C4 SWAP2 SWAP1 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10D6 DUP2 PUSH2 0x13DF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x11 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1114 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1635 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1125 DUP5 DUP5 PUSH2 0xEFD JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x11A7 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1197 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11A6 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1635 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x121F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1216 SWAP2 SWAP1 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1291 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1288 SWAP2 SWAP1 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x129C DUP4 DUP4 DUP4 PUSH2 0x180C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x131D JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x134A JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x1355 JUMP JUMPDEST PUSH2 0x1352 PUSH2 0x1971 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1360 PUSH2 0x10FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x137E PUSH2 0xB90 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13DD JUMPI PUSH2 0x13A1 PUSH2 0x10FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D4 SWAP2 SWAP1 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1524 PUSH1 0x5 PUSH32 0x0 PUSH2 0x1A07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x155F PUSH1 0x6 PUSH32 0x0 PUSH2 0x1A07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x158C DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x1AB7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15FE PUSH2 0x15F8 PUSH2 0x12A1 JUMP JUMPDEST DUP4 PUSH2 0x1B27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1617 DUP9 DUP9 DUP9 DUP9 PUSH2 0x1B68 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1627 DUP3 DUP3 PUSH2 0x1C5C JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16A7 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x169E SWAP2 SWAP1 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1719 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1710 SWAP2 SWAP1 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1806 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x17FD SWAP2 SWAP1 PUSH2 0x2375 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x16 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1874 JUMPI PUSH2 0x1834 DUP4 PUSH1 0x17 PUSH2 0x1DC0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1873 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x186A SWAP1 PUSH2 0x2AAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x16 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD7AD21AC DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18D5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2ACD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1916 SWAP2 SWAP1 PUSH2 0x2B19 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 PUSH2 0x1926 SWAP2 SWAP1 PUSH2 0x2B75 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT ISZERO PUSH2 0x195F JUMPI PUSH2 0x195E DUP6 PUSH1 0x15 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x1DF0 JUMP JUMPDEST JUMPDEST PUSH2 0x196A DUP6 DUP6 DUP4 PUSH2 0x1DF0 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x19EC SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2BA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x1A24 JUMPI PUSH2 0x1A1D DUP4 PUSH2 0x2015 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AB1 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1A30 SWAP1 PUSH2 0x2813 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1A5C SWAP1 PUSH2 0x2813 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1AA9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1A7E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1AA9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1A8C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AC3 DUP4 DUP4 PUSH2 0x2089 JUMP JUMPDEST PUSH2 0x1B1C JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x1B21 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1BA8 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1C52 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1BCD SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BEF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C43 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1C52 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1C70 JUMPI PUSH2 0x1C6F PUSH2 0x2C41 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1C83 JUMPI PUSH2 0x1C82 PUSH2 0x2C41 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x1DBC JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1C9D JUMPI PUSH2 0x1C9C PUSH2 0x2C41 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1CB0 JUMPI PUSH2 0x1CAF PUSH2 0x2C41 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1CE7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1CFB JUMPI PUSH2 0x1CFA PUSH2 0x2C41 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1D0E JUMPI PUSH2 0x1D0D PUSH2 0x2C41 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1D53 JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D4A SWAP2 SWAP1 PUSH2 0x2375 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1D66 JUMPI PUSH2 0x1D65 PUSH2 0x2C41 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1D79 JUMPI PUSH2 0x1D78 PUSH2 0x2C41 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1DBB JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DB2 SWAP2 SWAP1 PUSH2 0x2433 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DE8 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x2089 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E42 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1E36 SWAP2 SWAP1 PUSH2 0x2C70 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1F15 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1ECE JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EC5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F5E JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1FAB JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x2008 SWAP2 SWAP1 PUSH2 0x2375 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2022 DUP4 PUSH2 0x20AC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2041 JUMPI PUSH2 0x2040 PUSH2 0x286D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2073 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x20F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2127 DUP3 PUSH2 0x20FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2137 DUP2 PUSH2 0x211C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2152 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x212E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2192 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2177 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21BA DUP3 PUSH2 0x2158 JUMP JUMPDEST PUSH2 0x21C4 DUP2 DUP6 PUSH2 0x2163 JUMP JUMPDEST SWAP4 POP PUSH2 0x21D4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2174 JUMP JUMPDEST PUSH2 0x21DD DUP2 PUSH2 0x219E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2202 DUP2 DUP5 PUSH2 0x21AF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x221D DUP2 PUSH2 0x211C JUMP JUMPDEST DUP2 EQ PUSH2 0x2228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x223A DUP2 PUSH2 0x2214 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2253 DUP2 PUSH2 0x2240 JUMP JUMPDEST DUP2 EQ PUSH2 0x225E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2270 DUP2 PUSH2 0x224A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x228D JUMPI PUSH2 0x228C PUSH2 0x220A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x229B DUP6 DUP3 DUP7 ADD PUSH2 0x222B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22AC DUP6 DUP3 DUP7 ADD PUSH2 0x2261 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22CB DUP2 PUSH2 0x22B6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22E6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2311 PUSH2 0x230C PUSH2 0x2307 DUP5 PUSH2 0x20FC JUMP JUMPDEST PUSH2 0x22EC JUMP JUMPDEST PUSH2 0x20FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2323 DUP3 PUSH2 0x22F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2335 DUP3 PUSH2 0x2318 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2345 DUP2 PUSH2 0x232A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2360 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x233C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x236F DUP2 PUSH2 0x2240 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x238A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2366 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x23A9 JUMPI PUSH2 0x23A8 PUSH2 0x220A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23B7 DUP7 DUP3 DUP8 ADD PUSH2 0x222B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x23C8 DUP7 DUP3 DUP8 ADD PUSH2 0x222B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x23D9 DUP7 DUP3 DUP8 ADD PUSH2 0x2261 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23F9 DUP2 PUSH2 0x23E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2414 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x23F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x242D DUP2 PUSH2 0x241A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2448 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2424 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2464 JUMPI PUSH2 0x2463 PUSH2 0x220A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2472 DUP5 DUP3 DUP6 ADD PUSH2 0x222B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24B0 DUP2 PUSH2 0x247B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24EB DUP2 PUSH2 0x2240 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24FD DUP4 DUP4 PUSH2 0x24E2 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2521 DUP3 PUSH2 0x24B6 JUMP JUMPDEST PUSH2 0x252B DUP2 DUP6 PUSH2 0x24C1 JUMP JUMPDEST SWAP4 POP PUSH2 0x2536 DUP4 PUSH2 0x24D2 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2567 JUMPI DUP2 MLOAD PUSH2 0x254E DUP9 DUP3 PUSH2 0x24F1 JUMP JUMPDEST SWAP8 POP PUSH2 0x2559 DUP4 PUSH2 0x2509 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x253A JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x2589 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x24A7 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x259B DUP2 DUP10 PUSH2 0x21AF JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x25AF DUP2 DUP9 PUSH2 0x21AF JUMP JUMPDEST SWAP1 POP PUSH2 0x25BE PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x2366 JUMP JUMPDEST PUSH2 0x25CB PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x212E JUMP JUMPDEST PUSH2 0x25D8 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x2424 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x25EA DUP2 DUP5 PUSH2 0x2516 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x261D JUMPI PUSH2 0x261C PUSH2 0x25F8 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x263A JUMPI PUSH2 0x2639 PUSH2 0x25FD JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2656 JUMPI PUSH2 0x2655 PUSH2 0x2602 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2674 JUMPI PUSH2 0x2673 PUSH2 0x220A JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2692 JUMPI PUSH2 0x2691 PUSH2 0x220F JUMP JUMPDEST JUMPDEST PUSH2 0x269E DUP6 DUP3 DUP7 ADD PUSH2 0x2607 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x26B3 DUP2 PUSH2 0x23E3 JUMP JUMPDEST DUP2 EQ PUSH2 0x26BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x26D0 DUP2 PUSH2 0x26AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x26DF DUP2 PUSH2 0x241A JUMP JUMPDEST DUP2 EQ PUSH2 0x26EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x26FC DUP2 PUSH2 0x26D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2721 JUMPI PUSH2 0x2720 PUSH2 0x220A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x272F DUP11 DUP3 DUP12 ADD PUSH2 0x222B JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x2740 DUP11 DUP3 DUP12 ADD PUSH2 0x222B JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x2751 DUP11 DUP3 DUP12 ADD PUSH2 0x2261 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x2762 DUP11 DUP3 DUP12 ADD PUSH2 0x2261 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x2773 DUP11 DUP3 DUP12 ADD PUSH2 0x26C1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x2784 DUP11 DUP3 DUP12 ADD PUSH2 0x26ED JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x2795 DUP11 DUP3 DUP12 ADD PUSH2 0x26ED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27BB JUMPI PUSH2 0x27BA PUSH2 0x220A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27C9 DUP6 DUP3 DUP7 ADD PUSH2 0x222B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x27DA DUP6 DUP3 DUP7 ADD PUSH2 0x222B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x282B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x283E JUMPI PUSH2 0x283D PUSH2 0x27E4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2859 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x212E JUMP JUMPDEST PUSH2 0x2866 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x212E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4172617261436F696E2074726164696E6720616C726561647920656E61626C65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28F8 PUSH1 0x21 DUP4 PUSH2 0x2163 JUMP JUMPDEST SWAP2 POP PUSH2 0x2903 DUP3 PUSH2 0x289C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2927 DUP2 PUSH2 0x28EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4172617261436F696E20696E76616C696420706172616D657465727300000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2964 PUSH1 0x1C DUP4 PUSH2 0x2163 JUMP JUMPDEST SWAP2 POP PUSH2 0x296F DUP3 PUSH2 0x292E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2993 DUP2 PUSH2 0x2957 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x29DE PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x2424 JUMP JUMPDEST PUSH2 0x29EB PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x212E JUMP JUMPDEST PUSH2 0x29F8 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x212E JUMP JUMPDEST PUSH2 0x2A05 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x2366 JUMP JUMPDEST PUSH2 0x2A12 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x2366 JUMP JUMPDEST PUSH2 0x2A1F PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x2366 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2A3F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x212E JUMP JUMPDEST PUSH2 0x2A4C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2366 JUMP JUMPDEST PUSH2 0x2A59 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2366 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4172617261436F696E2074726164652069732064697361626C65640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A97 PUSH1 0x1B DUP4 PUSH2 0x2163 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AA2 DUP3 PUSH2 0x2A61 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2AC6 DUP2 PUSH2 0x2A8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2AE2 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x212E JUMP JUMPDEST PUSH2 0x2AEF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x212E JUMP JUMPDEST PUSH2 0x2AFC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2366 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B13 DUP2 PUSH2 0x224A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B2F JUMPI PUSH2 0x2B2E PUSH2 0x220A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B3D DUP5 DUP3 DUP6 ADD PUSH2 0x2B04 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2B80 DUP3 PUSH2 0x2240 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B8B DUP4 PUSH2 0x2240 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2BA3 JUMPI PUSH2 0x2BA2 PUSH2 0x2B46 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2BBE PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2424 JUMP JUMPDEST PUSH2 0x2BCB PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2424 JUMP JUMPDEST PUSH2 0x2BD8 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x2424 JUMP JUMPDEST PUSH2 0x2BE5 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2366 JUMP JUMPDEST PUSH2 0x2BF2 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x212E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2C11 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2424 JUMP JUMPDEST PUSH2 0x2C1E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x23F0 JUMP JUMPDEST PUSH2 0x2C2B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2424 JUMP JUMPDEST PUSH2 0x2C38 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2424 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2C7B DUP3 PUSH2 0x2240 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C86 DUP4 PUSH2 0x2240 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2C9E JUMPI PUSH2 0x2C9D PUSH2 0x2B46 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 SAR PUSH17 0xF4A2736B86862CC7998D68FB4E15AF7CCC 0xBA 0xCB PUSH16 0x9761950E23C17848E364736F6C634300 ADDMOD XOR STOP CALLER ","sourceMap":"608:7165:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1119:75;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2102:29:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1295:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;885:71;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1473:81:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;962:73;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1949:69:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2656:112:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5475:392:19;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1646:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2203:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;803:76;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;722:75:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1041:72;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2406:143:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5144:557:14;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;5094:296:19;;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1560:80:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1200:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6420:534:19;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1680:672:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3846:140:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5950:351:19;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1390:77:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1119:75;;;;;;;;;;;;;:::o;2074:89:3:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;2102:29:19:-;;;;;;;;;;;;;:::o;1295:89::-;;;;;;;;;;;;;:::o;885:71::-;;;;;;;;;;;;;:::o;3144:97:3:-;3196:7;3222:12;;3215:19;;3144:97;:::o;1473:81:19:-;;;;;;;;;;;;;:::o;962:73::-;;;;;;;;;;;;;:::o;5039:244:3:-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;1949:69:19:-;;;;;;;;;;;;;:::o;3002:82:3:-;3051:5;3075:2;3068:9;;3002:82;:::o;2656:112:5:-;2715:7;2741:20;:18;:20::i;:::-;2734:27;;2656:112;:::o;5475:392:19:-;1531:13:0;:11;:13::i;:::-;5554:28:19::1;5593:10;;;;;;;;;;;5554:50;;5680:17;5655:10;;:43;;;;;;;;;;;;;;;;;;5749:58;5767:20;5789:17;5749:58;;;;;;;:::i;:::-;;;;;;;;5544:323;5475:392:::0;:::o;1646:93::-;;;;;;;;;;;;;:::o;2203:26::-;;;;;;;;;;;;;:::o;803:76::-;;;;;;;;;;;;;:::o;3299:116:3:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;722:75:19:-;;;;;;;;;;;;;:::o;1041:72::-;;;;;;;;;;;;;:::o;2406:143:5:-;2497:7;2523:19;2536:5;2523:12;:19::i;:::-;2516:26;;2406:143;;;:::o;5144:557:14:-;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5590:13;5625:4;5652:1;5644:10;;5682:1;5668:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5482:212;;;;;;;;;;;;;;;;;;;;;5144:557;;;;;;;:::o;5094:296:19:-;1531:13:0;:11;:13::i;:::-;5157:14:19::1;;;;;;;;;;;5156:15;5148:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;5278:4;5261:14;;:21;;;;;;;;;;;;;;;;;;5323:16;;;;;;;;;;5094:296::o:0;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2276:93:3:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;1560:80:19:-;;;;;;;;;;;;;:::o;1200:89::-;;;;;;;;;;;;;:::o;3610:178:3:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;6420:534:19:-;1531:13:0;:11;:13::i;:::-;6530:14:19::1;;;;;;;;;;;6529:15;6521:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;6663:1;6636:16;;:23;;:28:::0;6628:69:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;6840:9;6835:113;6859:16;;:23;;6855:1;:27;6835:113;;;6903:34;6917:16;;6934:1;6917:19;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;6903:9;:13;;:34;;;;:::i;:::-;;6884:3;;;;;;;6835:113;;;;6420:534:::0;;:::o;1680:672:5:-;1901:8;1883:15;:26;1879:97;;;1956:8;1932:33;;;;;;;;;;;:::i;:::-;;;;;;;;1879:97;1986:18;1022:95;2045:5;2052:7;2061:5;2068:16;2078:5;2068:9;:16::i;:::-;2086:8;2017:78;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2007:89;;;;;;1986:110;;2107:12;2122:28;2139:10;2122:16;:28::i;:::-;2107:43;;2161:14;2178:28;2192:4;2198:1;2201;2204;2178:13;:28::i;:::-;2161:45;;2230:5;2220:15;;:6;:15;;;2216:88;;2279:6;2287:5;2258:35;;;;;;;;;;;;:::i;:::-;;;;;;;;2216:88;2314:31;2323:5;2330:7;2339:5;2314:8;:31::i;:::-;1869:483;;;1680:672;;;;;;;:::o;3846:140:3:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;5950:351:19:-;1531:13:0;:11;:13::i;:::-;6027:27:19::1;6057:9;;;;;;;;;;;6027:39;;6128:16;6116:9;;:28;;;;;;;;;;;;;;;;;;6194:48;6211:19;6232:9;;;;;;;;;;;6194:48;;;;;;;:::i;:::-;;;;;;;;6017:284;5950:351:::0;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1390:77:19:-;;;;;;;;;;;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;8989:128:3:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;3845:262:14:-;3898:7;3938:11;3921:28;;3929:4;3921:28;;;:63;;;;;3970:14;3953:13;:31;3921:63;3917:184;;;4007:22;4000:29;;;;3917:184;4067:23;:21;:23::i;:::-;4060:30;;3845:262;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;538:107:9:-;598:7;624;:14;632:5;624:14;;;;;;;;;;;;;;;;617:21;;538:107;;;:::o;6021:126:14:-;6067:13;6099:41;6126:13;6099:5;:26;;:41;;;;:::i;:::-;6092:48;;6021:126;:::o;6473:135::-;6522:13;6554:47;6584:16;6554:8;:29;;:47;;;;:::i;:::-;6547:54;;6473:135;:::o;8316:150:18:-;8386:4;8409:50;8414:3;:10;;8450:5;8434:23;;8426:32;;8409:4;:50::i;:::-;8402:57;;8316:150;;;;:::o;759:395:9:-;819:7;1121;:14;1129:5;1121:14;;;;;;;;;;;;;;;;:16;;;;;;;;;;;;1114:23;;759:395;;;:::o;4917:176:14:-;4994:7;5020:66;5053:20;:18;:20::i;:::-;5075:10;5020:32;:66::i;:::-;5013:73;;4917:176;;;:::o;6803:260:13:-;6888:7;6908:17;6927:18;6947:16;6967:25;6978:4;6984:1;6987;6990;6967:10;:25::i;:::-;6907:85;;;;;;7002:28;7014:5;7021:8;7002:11;:28::i;:::-;7047:9;7040:16;;;;;6803:260;;;;;;:::o;9949:432:3:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;7028:743:19:-;7228:14;;;;;;;;;;;7223:110;;7266:24;7285:4;7266:9;:18;;:24;;;;:::i;:::-;7258:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7223:110;7414:11;7428:10;;;;;;;;;;;:17;;;7446:4;7452:2;7456:5;7428:34;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7414:48;;7472:19;7502:3;7494:5;:11;;;;:::i;:::-;7472:33;;7598:1;7592:3;:7;7588:73;;;7615:35;7629:4;7635:9;;;;;;;;;;;7646:3;7615:13;:35::i;:::-;7588:73;7728:36;7742:4;7748:2;7752:11;7728:13;:36::i;:::-;7133:638;;7028:743;;;:::o;4113:179:14:-;4168:7;2079:95;4226:11;4239:14;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;3385:267:10:-;3479:13;1390:66;3537:17;;3527:5;3508:46;3504:142;;3577:15;3586:5;3577:8;:15::i;:::-;3570:22;;;;3504:142;3630:5;3623:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3385:267;;;;;:::o;2241:406:18:-;2304:4;2325:21;2335:3;2340:5;2325:9;:21::i;:::-;2320:321;;2362:3;:11;;2379:5;2362:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2544:3;:11;;:18;;;;2520:3;:14;;:21;2535:5;2520:21;;;;;;;;;;;:42;;;;2583:4;2576:11;;;;2320:321;2625:5;2618:12;;2241:406;;;;;:::o;3353:401:15:-;3446:14;3555:4;3549:11;3585:10;3580:3;3573:23;3632:15;3625:4;3620:3;3616:14;3609:39;3684:10;3677:4;3672:3;3668:14;3661:34;3733:4;3728:3;3718:20;3708:30;;3524:224;3353:401;;;;:::o;5140:1530:13:-;5266:7;5275:12;5289:7;6199:66;6194:1;6186:10;;:79;6182:164;;;6297:1;6301:30;6333:1;6281:54;;;;;;;;6182:164;6440:14;6457:24;6467:4;6473:1;6476;6479;6457:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6440:41;;6513:1;6495:20;;:6;:20;;;6491:113;;6547:1;6551:29;6590:1;6582:10;;6531:62;;;;;;;;;6491:113;6622:6;6630:20;6660:1;6652:10;;6614:49;;;;;;;5140:1530;;;;;;;;;:::o;7196:532::-;7291:20;7282:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7278:444;7327:7;7278:444;7387:29;7378:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7374:348;;7439:23;;;;;;;;;;;;;;7374:348;7492:35;7483:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7479:243;;7586:8;7578:17;;7550:46;;;;;;;;;;;:::i;:::-;;;;;;;;7479:243;7626:30;7617:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7613:109;;7702:8;7679:32;;;;;;;;;;;:::i;:::-;;;;;;;;7613:109;7196:532;;;:::o;8871:165:18:-;8951:4;8974:55;8984:3;:10;;9020:5;9004:23;;8996:32;;8974:9;:55::i;:::-;8967:62;;8871:165;;;;:::o;6271:1107:3:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;2078:405:10:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2162:30;;2280:17;2311:2;2300:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2280:34;;2402:3;2397;2390:16;2442:4;2435;2430:3;2426:14;2419:28;2473:3;2466:10;;;;2078:405;;;:::o;4264:129:18:-;4337:4;4385:1;4360:3;:14;;:21;4375:5;4360:21;;;;;;;;;;;;:26;;4353:33;;4264:129;;;;:::o;2555:245:10:-;2616:7;2635:14;2688:4;2679;2652:33;;:40;2635:57;;2715:2;2706:6;:11;2702:69;;;2740:20;;;;;;;;;;;;;;2702:69;2787:6;2780:13;;;2555:245;;;:::o;7:126:21:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:99::-;645:6;679:5;673:12;663:22;;593:99;;;:::o;698:169::-;782:11;816:6;811:3;804:19;856:4;851:3;847:14;832:29;;698:169;;;;:::o;873:246::-;954:1;964:113;978:6;975:1;972:13;964:113;;;1063:1;1058:3;1054:11;1048:18;1044:1;1039:3;1035:11;1028:39;1000:2;997:1;993:10;988:15;;964:113;;;1111:1;1102:6;1097:3;1093:16;1086:27;935:184;873:246;;;:::o;1125:102::-;1166:6;1217:2;1213:7;1208:2;1201:5;1197:14;1193:28;1183:38;;1125:102;;;:::o;1233:377::-;1321:3;1349:39;1382:5;1349:39;:::i;:::-;1404:71;1468:6;1463:3;1404:71;:::i;:::-;1397:78;;1484:65;1542:6;1537:3;1530:4;1523:5;1519:16;1484:65;:::i;:::-;1574:29;1596:6;1574:29;:::i;:::-;1569:3;1565:39;1558:46;;1325:285;1233:377;;;;:::o;1616:313::-;1729:4;1767:2;1756:9;1752:18;1744:26;;1816:9;1810:4;1806:20;1802:1;1791:9;1787:17;1780:47;1844:78;1917:4;1908:6;1844:78;:::i;:::-;1836:86;;1616:313;;;;:::o;2016:117::-;2125:1;2122;2115:12;2139:117;2248:1;2245;2238:12;2262:122;2335:24;2353:5;2335:24;:::i;:::-;2328:5;2325:35;2315:63;;2374:1;2371;2364:12;2315:63;2262:122;:::o;2390:139::-;2436:5;2474:6;2461:20;2452:29;;2490:33;2517:5;2490:33;:::i;:::-;2390:139;;;;:::o;2535:77::-;2572:7;2601:5;2590:16;;2535:77;;;:::o;2618:122::-;2691:24;2709:5;2691:24;:::i;:::-;2684:5;2681:35;2671:63;;2730:1;2727;2720:12;2671:63;2618:122;:::o;2746:139::-;2792:5;2830:6;2817:20;2808:29;;2846:33;2873:5;2846:33;:::i;:::-;2746:139;;;;:::o;2891:474::-;2959:6;2967;3016:2;3004:9;2995:7;2991:23;2987:32;2984:119;;;3022:79;;:::i;:::-;2984:119;3142:1;3167:53;3212:7;3203:6;3192:9;3188:22;3167:53;:::i;:::-;3157:63;;3113:117;3269:2;3295:53;3340:7;3331:6;3320:9;3316:22;3295:53;:::i;:::-;3285:63;;3240:118;2891:474;;;;;:::o;3371:90::-;3405:7;3448:5;3441:13;3434:21;3423:32;;3371:90;;;:::o;3467:109::-;3548:21;3563:5;3548:21;:::i;:::-;3543:3;3536:34;3467:109;;:::o;3582:210::-;3669:4;3707:2;3696:9;3692:18;3684:26;;3720:65;3782:1;3771:9;3767:17;3758:6;3720:65;:::i;:::-;3582:210;;;;:::o;3798:60::-;3826:3;3847:5;3840:12;;3798:60;;;:::o;3864:142::-;3914:9;3947:53;3965:34;3974:24;3992:5;3974:24;:::i;:::-;3965:34;:::i;:::-;3947:53;:::i;:::-;3934:66;;3864:142;;;:::o;4012:126::-;4062:9;4095:37;4126:5;4095:37;:::i;:::-;4082:50;;4012:126;;;:::o;4144:146::-;4214:9;4247:37;4278:5;4247:37;:::i;:::-;4234:50;;4144:146;;;:::o;4296:171::-;4403:57;4454:5;4403:57;:::i;:::-;4398:3;4391:70;4296:171;;:::o;4473:262::-;4586:4;4624:2;4613:9;4609:18;4601:26;;4637:91;4725:1;4714:9;4710:17;4701:6;4637:91;:::i;:::-;4473:262;;;;:::o;4741:118::-;4828:24;4846:5;4828:24;:::i;:::-;4823:3;4816:37;4741:118;;:::o;4865:222::-;4958:4;4996:2;4985:9;4981:18;4973:26;;5009:71;5077:1;5066:9;5062:17;5053:6;5009:71;:::i;:::-;4865:222;;;;:::o;5093:619::-;5170:6;5178;5186;5235:2;5223:9;5214:7;5210:23;5206:32;5203:119;;;5241:79;;:::i;:::-;5203:119;5361:1;5386:53;5431:7;5422:6;5411:9;5407:22;5386:53;:::i;:::-;5376:63;;5332:117;5488:2;5514:53;5559:7;5550:6;5539:9;5535:22;5514:53;:::i;:::-;5504:63;;5459:118;5616:2;5642:53;5687:7;5678:6;5667:9;5663:22;5642:53;:::i;:::-;5632:63;;5587:118;5093:619;;;;;:::o;5718:86::-;5753:7;5793:4;5786:5;5782:16;5771:27;;5718:86;;;:::o;5810:112::-;5893:22;5909:5;5893:22;:::i;:::-;5888:3;5881:35;5810:112;;:::o;5928:214::-;6017:4;6055:2;6044:9;6040:18;6032:26;;6068:67;6132:1;6121:9;6117:17;6108:6;6068:67;:::i;:::-;5928:214;;;;:::o;6148:77::-;6185:7;6214:5;6203:16;;6148:77;;;:::o;6231:118::-;6318:24;6336:5;6318:24;:::i;:::-;6313:3;6306:37;6231:118;;:::o;6355:222::-;6448:4;6486:2;6475:9;6471:18;6463:26;;6499:71;6567:1;6556:9;6552:17;6543:6;6499:71;:::i;:::-;6355:222;;;;:::o;6583:329::-;6642:6;6691:2;6679:9;6670:7;6666:23;6662:32;6659:119;;;6697:79;;:::i;:::-;6659:119;6817:1;6842:53;6887:7;6878:6;6867:9;6863:22;6842:53;:::i;:::-;6832:63;;6788:117;6583:329;;;;:::o;6918:149::-;6954:7;6994:66;6987:5;6983:78;6972:89;;6918:149;;;:::o;7073:115::-;7158:23;7175:5;7158:23;:::i;:::-;7153:3;7146:36;7073:115;;:::o;7194:114::-;7261:6;7295:5;7289:12;7279:22;;7194:114;;;:::o;7314:184::-;7413:11;7447:6;7442:3;7435:19;7487:4;7482:3;7478:14;7463:29;;7314:184;;;;:::o;7504:132::-;7571:4;7594:3;7586:11;;7624:4;7619:3;7615:14;7607:22;;7504:132;;;:::o;7642:108::-;7719:24;7737:5;7719:24;:::i;:::-;7714:3;7707:37;7642:108;;:::o;7756:179::-;7825:10;7846:46;7888:3;7880:6;7846:46;:::i;:::-;7924:4;7919:3;7915:14;7901:28;;7756:179;;;;:::o;7941:113::-;8011:4;8043;8038:3;8034:14;8026:22;;7941:113;;;:::o;8090:732::-;8209:3;8238:54;8286:5;8238:54;:::i;:::-;8308:86;8387:6;8382:3;8308:86;:::i;:::-;8301:93;;8418:56;8468:5;8418:56;:::i;:::-;8497:7;8528:1;8513:284;8538:6;8535:1;8532:13;8513:284;;;8614:6;8608:13;8641:63;8700:3;8685:13;8641:63;:::i;:::-;8634:70;;8727:60;8780:6;8727:60;:::i;:::-;8717:70;;8573:224;8560:1;8557;8553:9;8548:14;;8513:284;;;8517:14;8813:3;8806:10;;8214:608;;;8090:732;;;;:::o;8828:1215::-;9177:4;9215:3;9204:9;9200:19;9192:27;;9229:69;9295:1;9284:9;9280:17;9271:6;9229:69;:::i;:::-;9345:9;9339:4;9335:20;9330:2;9319:9;9315:18;9308:48;9373:78;9446:4;9437:6;9373:78;:::i;:::-;9365:86;;9498:9;9492:4;9488:20;9483:2;9472:9;9468:18;9461:48;9526:78;9599:4;9590:6;9526:78;:::i;:::-;9518:86;;9614:72;9682:2;9671:9;9667:18;9658:6;9614:72;:::i;:::-;9696:73;9764:3;9753:9;9749:19;9740:6;9696:73;:::i;:::-;9779;9847:3;9836:9;9832:19;9823:6;9779:73;:::i;:::-;9900:9;9894:4;9890:20;9884:3;9873:9;9869:19;9862:49;9928:108;10031:4;10022:6;9928:108;:::i;:::-;9920:116;;8828:1215;;;;;;;;;;:::o;10049:117::-;10158:1;10155;10148:12;10172:117;10281:1;10278;10271:12;10295:117;10404:1;10401;10394:12;10435:568;10508:8;10518:6;10568:3;10561:4;10553:6;10549:17;10545:27;10535:122;;10576:79;;:::i;:::-;10535:122;10689:6;10676:20;10666:30;;10719:18;10711:6;10708:30;10705:117;;;10741:79;;:::i;:::-;10705:117;10855:4;10847:6;10843:17;10831:29;;10909:3;10901:4;10893:6;10889:17;10879:8;10875:32;10872:41;10869:128;;;10916:79;;:::i;:::-;10869:128;10435:568;;;;;:::o;11009:559::-;11095:6;11103;11152:2;11140:9;11131:7;11127:23;11123:32;11120:119;;;11158:79;;:::i;:::-;11120:119;11306:1;11295:9;11291:17;11278:31;11336:18;11328:6;11325:30;11322:117;;;11358:79;;:::i;:::-;11322:117;11471:80;11543:7;11534:6;11523:9;11519:22;11471:80;:::i;:::-;11453:98;;;;11249:312;11009:559;;;;;:::o;11574:118::-;11645:22;11661:5;11645:22;:::i;:::-;11638:5;11635:33;11625:61;;11682:1;11679;11672:12;11625:61;11574:118;:::o;11698:135::-;11742:5;11780:6;11767:20;11758:29;;11796:31;11821:5;11796:31;:::i;:::-;11698:135;;;;:::o;11839:122::-;11912:24;11930:5;11912:24;:::i;:::-;11905:5;11902:35;11892:63;;11951:1;11948;11941:12;11892:63;11839:122;:::o;11967:139::-;12013:5;12051:6;12038:20;12029:29;;12067:33;12094:5;12067:33;:::i;:::-;11967:139;;;;:::o;12112:1199::-;12223:6;12231;12239;12247;12255;12263;12271;12320:3;12308:9;12299:7;12295:23;12291:33;12288:120;;;12327:79;;:::i;:::-;12288:120;12447:1;12472:53;12517:7;12508:6;12497:9;12493:22;12472:53;:::i;:::-;12462:63;;12418:117;12574:2;12600:53;12645:7;12636:6;12625:9;12621:22;12600:53;:::i;:::-;12590:63;;12545:118;12702:2;12728:53;12773:7;12764:6;12753:9;12749:22;12728:53;:::i;:::-;12718:63;;12673:118;12830:2;12856:53;12901:7;12892:6;12881:9;12877:22;12856:53;:::i;:::-;12846:63;;12801:118;12958:3;12985:51;13028:7;13019:6;13008:9;13004:22;12985:51;:::i;:::-;12975:61;;12929:117;13085:3;13112:53;13157:7;13148:6;13137:9;13133:22;13112:53;:::i;:::-;13102:63;;13056:119;13214:3;13241:53;13286:7;13277:6;13266:9;13262:22;13241:53;:::i;:::-;13231:63;;13185:119;12112:1199;;;;;;;;;;:::o;13317:474::-;13385:6;13393;13442:2;13430:9;13421:7;13417:23;13413:32;13410:119;;;13448:79;;:::i;:::-;13410:119;13568:1;13593:53;13638:7;13629:6;13618:9;13614:22;13593:53;:::i;:::-;13583:63;;13539:117;13695:2;13721:53;13766:7;13757:6;13746:9;13742:22;13721:53;:::i;:::-;13711:63;;13666:118;13317:474;;;;;:::o;13797:180::-;13845:77;13842:1;13835:88;13942:4;13939:1;13932:15;13966:4;13963:1;13956:15;13983:320;14027:6;14064:1;14058:4;14054:12;14044:22;;14111:1;14105:4;14101:12;14132:18;14122:81;;14188:4;14180:6;14176:17;14166:27;;14122:81;14250:2;14242:6;14239:14;14219:18;14216:38;14213:84;;14269:18;;:::i;:::-;14213:84;14034:269;13983:320;;;:::o;14309:332::-;14430:4;14468:2;14457:9;14453:18;14445:26;;14481:71;14549:1;14538:9;14534:17;14525:6;14481:71;:::i;:::-;14562:72;14630:2;14619:9;14615:18;14606:6;14562:72;:::i;:::-;14309:332;;;;;:::o;14647:180::-;14695:77;14692:1;14685:88;14792:4;14789:1;14782:15;14816:4;14813:1;14806:15;14833:220;14973:34;14969:1;14961:6;14957:14;14950:58;15042:3;15037:2;15029:6;15025:15;15018:28;14833:220;:::o;15059:366::-;15201:3;15222:67;15286:2;15281:3;15222:67;:::i;:::-;15215:74;;15298:93;15387:3;15298:93;:::i;:::-;15416:2;15411:3;15407:12;15400:19;;15059:366;;;:::o;15431:419::-;15597:4;15635:2;15624:9;15620:18;15612:26;;15684:9;15678:4;15674:20;15670:1;15659:9;15655:17;15648:47;15712:131;15838:4;15712:131;:::i;:::-;15704:139;;15431:419;;;:::o;15856:178::-;15996:30;15992:1;15984:6;15980:14;15973:54;15856:178;:::o;16040:366::-;16182:3;16203:67;16267:2;16262:3;16203:67;:::i;:::-;16196:74;;16279:93;16368:3;16279:93;:::i;:::-;16397:2;16392:3;16388:12;16381:19;;16040:366;;;:::o;16412:419::-;16578:4;16616:2;16605:9;16601:18;16593:26;;16665:9;16659:4;16655:20;16651:1;16640:9;16636:17;16629:47;16693:131;16819:4;16693:131;:::i;:::-;16685:139;;16412:419;;;:::o;16837:180::-;16885:77;16882:1;16875:88;16982:4;16979:1;16972:15;17006:4;17003:1;16996:15;17023:775;17256:4;17294:3;17283:9;17279:19;17271:27;;17308:71;17376:1;17365:9;17361:17;17352:6;17308:71;:::i;:::-;17389:72;17457:2;17446:9;17442:18;17433:6;17389:72;:::i;:::-;17471;17539:2;17528:9;17524:18;17515:6;17471:72;:::i;:::-;17553;17621:2;17610:9;17606:18;17597:6;17553:72;:::i;:::-;17635:73;17703:3;17692:9;17688:19;17679:6;17635:73;:::i;:::-;17718;17786:3;17775:9;17771:19;17762:6;17718:73;:::i;:::-;17023:775;;;;;;;;;:::o;17804:442::-;17953:4;17991:2;17980:9;17976:18;17968:26;;18004:71;18072:1;18061:9;18057:17;18048:6;18004:71;:::i;:::-;18085:72;18153:2;18142:9;18138:18;18129:6;18085:72;:::i;:::-;18167;18235:2;18224:9;18220:18;18211:6;18167:72;:::i;:::-;17804:442;;;;;;:::o;18252:177::-;18392:29;18388:1;18380:6;18376:14;18369:53;18252:177;:::o;18435:366::-;18577:3;18598:67;18662:2;18657:3;18598:67;:::i;:::-;18591:74;;18674:93;18763:3;18674:93;:::i;:::-;18792:2;18787:3;18783:12;18776:19;;18435:366;;;:::o;18807:419::-;18973:4;19011:2;19000:9;18996:18;18988:26;;19060:9;19054:4;19050:20;19046:1;19035:9;19031:17;19024:47;19088:131;19214:4;19088:131;:::i;:::-;19080:139;;18807:419;;;:::o;19232:442::-;19381:4;19419:2;19408:9;19404:18;19396:26;;19432:71;19500:1;19489:9;19485:17;19476:6;19432:71;:::i;:::-;19513:72;19581:2;19570:9;19566:18;19557:6;19513:72;:::i;:::-;19595;19663:2;19652:9;19648:18;19639:6;19595:72;:::i;:::-;19232:442;;;;;;:::o;19680:143::-;19737:5;19768:6;19762:13;19753:22;;19784:33;19811:5;19784:33;:::i;:::-;19680:143;;;;:::o;19829:351::-;19899:6;19948:2;19936:9;19927:7;19923:23;19919:32;19916:119;;;19954:79;;:::i;:::-;19916:119;20074:1;20099:64;20155:7;20146:6;20135:9;20131:22;20099:64;:::i;:::-;20089:74;;20045:128;19829:351;;;;:::o;20186:180::-;20234:77;20231:1;20224:88;20331:4;20328:1;20321:15;20355:4;20352:1;20345:15;20372:194;20412:4;20432:20;20450:1;20432:20;:::i;:::-;20427:25;;20466:20;20484:1;20466:20;:::i;:::-;20461:25;;20510:1;20507;20503:9;20495:17;;20534:1;20528:4;20525:11;20522:37;;;20539:18;;:::i;:::-;20522:37;20372:194;;;;:::o;20572:664::-;20777:4;20815:3;20804:9;20800:19;20792:27;;20829:71;20897:1;20886:9;20882:17;20873:6;20829:71;:::i;:::-;20910:72;20978:2;20967:9;20963:18;20954:6;20910:72;:::i;:::-;20992;21060:2;21049:9;21045:18;21036:6;20992:72;:::i;:::-;21074;21142:2;21131:9;21127:18;21118:6;21074:72;:::i;:::-;21156:73;21224:3;21213:9;21209:19;21200:6;21156:73;:::i;:::-;20572:664;;;;;;;;:::o;21242:545::-;21415:4;21453:3;21442:9;21438:19;21430:27;;21467:71;21535:1;21524:9;21520:17;21511:6;21467:71;:::i;:::-;21548:68;21612:2;21601:9;21597:18;21588:6;21548:68;:::i;:::-;21626:72;21694:2;21683:9;21679:18;21670:6;21626:72;:::i;:::-;21708;21776:2;21765:9;21761:18;21752:6;21708:72;:::i;:::-;21242:545;;;;;;;:::o;21793:180::-;21841:77;21838:1;21831:88;21938:4;21935:1;21928:15;21962:4;21959:1;21952:15;21979:191;22019:3;22038:20;22056:1;22038:20;:::i;:::-;22033:25;;22072:20;22090:1;22072:20;:::i;:::-;22067:25;;22115:1;22112;22108:9;22101:16;;22136:3;22133:1;22130:10;22127:36;;;22143:18;;:::i;:::-;22127:36;21979:191;;;;:::o"},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","addCanTrade(address[])":"ca40f1c4","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","auditWallet()":"1798fb80","balanceOf(address)":"70a08231","companyVestingWallet()":"a4771ea4","consultingWallet()":"6409f534","decimals()":"313ce567","eip712Domain()":"84b0196e","enableTrading()":"8a8c523c","foundersVestingWallet()":"1f640ed8","investorsWallet()":"01089b92","investorsYearOneVestingWallet()":"a781c954","investorsYearTwoVestingWallet()":"16942450","launchWallet()":"77ba8280","marketingWallet()":"75f0a874","name()":"06fdde03","nonces(address)":"7ecebe00","owner()":"8da5cb5b","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","preSaleWallet()":"1fc75e41","preservationProjectsVestingWallet()":"4a3084eb","renounceOwnership()":"715018a6","setTaxHandler(address)":"488d4a51","setTaxWallet(address)":"ea414b28","symbol()":"95d89b41","taxHandler()":"12280ba8","taxWallet()":"2dc0562d","teamVestingWallet()":"fb3d924a","totalSupply()":"18160ddd","tradingEnabled()":"4ada218b","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"taxHandlerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"preservationProjectsVestingContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"TaxHandlerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"TaxWalletChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"TradingEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"allowedAddresses\",\"type\":\"address[]\"}],\"name\":\"addCanTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auditWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"companyVestingWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"consultingWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"foundersVestingWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"investorsWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"investorsYearOneVestingWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"investorsYearTwoVestingWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"preSaleWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"preservationProjectsVestingWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"taxHandlerAddress\",\"type\":\"address\"}],\"name\":\"setTaxHandler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"taxWalletAddress\",\"type\":\"address\"}],\"name\":\"setTaxWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxHandler\",\"outputs\":[{\"internalType\":\"contract ITaxHandler\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamVestingWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AraraCoin.sol\":\"AraraCoin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]},\"contracts/AraraCoin.sol\":{\"keccak256\":\"0x250cd2a9f2ecdc80d1e5ff3f2aea0d3d5ad7299aa38c5d23063db9c846bd8c07\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b51af4623d2e37bd52e325fd1506839b88eaef91bd1d8146e94f98320682192\",\"dweb:/ipfs/QmXncdjfzCvTzaPMseLvqwxvmPKYPXGk9HLqxUvNtdktPK\"]},\"contracts/tax/ITaxHandler.sol\":{\"keccak256\":\"0xfbe50a73a526b7425030b98d2659fd5e5eb4222102f59c5b620d1c77a0178518\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b720ef524c3d25af70f56f19eff096a2142d6d3d606166b326a96f5c0afd49db\",\"dweb:/ipfs/QmWukwdeBzzMRzemBxFc8nK2yZkhjDP8r4b8abGuWuBdF4\"]}},\"version\":1}"}},"contracts/tax/ITaxHandler.sol":{"ITaxHandler":{"abi":[{"inputs":[{"internalType":"address","name":"benefactor","type":"address"},{"internalType":"address","name":"beneficiary","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getTax","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getTax(address,address,uint256)":"d7ad21ac"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"benefactor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Any class that implements this interface can be used for protocol-specific tax calculations.\",\"kind\":\"dev\",\"methods\":{\"getTax(address,address,uint256)\":{\"params\":{\"amount\":\"Number of tokens in the transfer.\",\"benefactor\":\"Address of the benefactor.\",\"beneficiary\":\"Address of the beneficiary.\"},\"returns\":{\"_0\":\"Number of tokens to pay as tax.\"}}},\"title\":\"Tax handler interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getTax(address,address,uint256)\":{\"notice\":\"Get number of tokens to pay as tax.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tax/ITaxHandler.sol\":\"ITaxHandler\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/tax/ITaxHandler.sol\":{\"keccak256\":\"0xfbe50a73a526b7425030b98d2659fd5e5eb4222102f59c5b620d1c77a0178518\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b720ef524c3d25af70f56f19eff096a2142d6d3d606166b326a96f5c0afd49db\",\"dweb:/ipfs/QmWukwdeBzzMRzemBxFc8nK2yZkhjDP8r4b8abGuWuBdF4\"]}},\"version\":1}"}}}}}